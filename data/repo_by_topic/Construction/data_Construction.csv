repo,user,organization,url (HTML),url (API),description,readme,stargazer count,watcher count,subscriber count,open issue count,topic (search),topics,NAICS Code
salmanqaiser821,Buildingsurvey,,https://github.com/salmanqaiser821/Buildingsurvey,https://api.github.com/repos/Buildingsurvey/salmanqaiser821,"Building Survey Management System is a web-enabled system that makes it easy to create, manage, and publish expert surveys.","# moxxconstruction
Moxx.co.ke Construction website. It encompasses marketing and ways through which clients can reach Moxx organization. 

[![Netlify Status](https://api.netlify.com/api/v1/badges/6db942dc-e636-4f7f-9c1e-aaeac693e0be/deploy-status)](https://app.netlify.com/sites/moxx/deploys)
",3,3,1,0,construction-management,"[civil-engineering-materials, computer-science, construction-management, webdesigning, webdevelopment]",23
yuantsai1115,ar.camera.receiver,,https://github.com/yuantsai1115/ar.camera.receiver,https://api.github.com/repos/ar.camera.receiver/yuantsai1115,It is a proof of concept for mixed collaboration between site engineers and officers power by AR and WebSocket..,"# AR Camera for Mixed Collaboration - Receiver

## Introduction
It is a proof of concept for mixed collaboration between site engineers and officers. Site engieers can stream live location to the BIM model with mobile application. Then, the officers view the live location of site engineers on BIM model with receiver application. This help the site engieers and officers remotely collaborate which benefits the construction management as most experienced engineers and officers need to look after multiple sites. 

| <video src=""https://user-images.githubusercontent.com/119405090/218675712-1654923e-1d4c-4b18-9b0a-0816db121409.mp4""> |  <video src=""https://user-images.githubusercontent.com/119405090/218676350-b36db086-cb4b-45ca-ba04-26085498ae35.mp4""> | 
|:--:| :--:| 
| *Mobile streaming relative location to model* | *Receiver showing live location on model* |

*Please refer to all three repositories to run this application.*
- https://github.com/yuantsai1115/ar.camera.mobile
- https://github.com/yuantsai1115/ar.camera.backend
- https://github.com/yuantsai1115/ar.camera.receiver

## Research Gaps
Real-time data exchange between site engineers and officers is essential yet severe as most methods on the market only support video, image or voice which is not enough for remote collaboration. The location, viewing targets, camera poses, trajectories are all missing which blocks the officers understanding the site condition. This research proposes mixed collaboration approach which streams live data of site engineers to office. Officers can easily track all site engineers and collaborate with them remotely on BIM model which serves as a virtual site for visualising the live data. 

| <img src=""https://user-images.githubusercontent.com/119405090/218685030-0decbf94-2b6f-47b0-9b6f-8952342bdb8e.jpg"" width=""600""> |
|:--:|
| *Research gaps for mixed collaboration* |

## Possibilities
The office can be a situation room which accommodates all the live data from multiple site engieers on the BIM model. Also, the officers can send information or commands to site engineers by AR camera on mobile. The information then is displayed on the physical position. On the other hand, the site engineers can also do the measurement and show the result on BIM model for officers. It can benefit the remote communication and collaboration especially for the geographical limitation scenarios.

| <img src=""https://user-images.githubusercontent.com/119405090/218685044-a53f42b7-0805-4f39-a4a7-65114df3da92.jpg"" width=""600""> |
|:--:|
| *Possibile applications for mixed collaboration* |
  
## Application Framework
The main module of the application framework is the Cross Device Broadcast module which can be implemented by WebSocket. There would be four types of cross-device communication including mobile to mobile, desktop to desktop, desktop to mobile, and mobile to desktop. Each type of the communication can benefit different applications as the mixed collaboration approach is the fundemental infrastructure of data exchange.

| <img src=""https://user-images.githubusercontent.com/119405090/218685074-4fb337d7-81a9-4821-a2c3-d0d8993b3044.jpg"" width=""600""> |
|:--:|
| *Application framework for mixed collaboration* |

## System Framework
The system framework layouts the essential logics and modules.  

| <img src=""https://user-images.githubusercontent.com/119405090/218685094-74d00339-d5b3-4523-8bf8-5918deef9e85.jpg"" width=""600""> |
|:--:|
| *System framework for mixed collaboration* |

## Project Setup
This project was bootstrapped with [Create React App](https://github.com/facebook/create-react-app) from a [React boilerplate for bimU.io Viewer API](https://github.com/bimU-io/ReactSample).

### Available Scripts

In the project directory, you can run:

#### `npm start`

Runs the app in the development mode.\
Open [http://localhost:3000](http://localhost:3000) to view it in the browser.

The page will reload if you make edits.\
You will also see any lint errors in the console.

#### `npm test`

Launches the test runner in the interactive watch mode.\
See the section about [running tests](https://facebook.github.io/create-react-app/docs/running-tests) for more information.

#### `npm run build`

Builds the app for production to the `build` folder.\
It correctly bundles React in production mode and optimizes the build for the best performance.

The build is minified and the filenames include the hashes.\
Your app is ready to be deployed!

See the section about [deployment](https://facebook.github.io/create-react-app/docs/deployment) for more information.

#### `npm run eject`

**Note: this is a one-way operation. Once you `eject`, you can’t go back!**

If you aren’t satisfied with the build tool and configuration choices, you can `eject` at any time. This command will remove the single build dependency from your project.

Instead, it will copy all the configuration files and the transitive dependencies (webpack, Babel, ESLint, etc) right into your project so you have full control over them. All of the commands except `eject` will still work, but they will point to the copied scripts so you can tweak them. At this point you’re on your own.

You don’t have to ever use `eject`. The curated feature set is suitable for small and middle deployments, and you shouldn’t feel obligated to use this feature. However we understand that this tool wouldn’t be useful if you couldn’t customize it when you are ready for it.

### Learn More

You can learn more in the [Create React App documentation](https://facebook.github.io/create-react-app/docs/getting-started).

To learn React, check out the [React documentation](https://reactjs.org/).
",1,1,1,0,construction-management,"[ar, bim, collaboration, construction-management, vr, websocket, webxr]",23
IanTorweihe,ZapierInspectionReportBot,,https://github.com/IanTorweihe/ZapierInspectionReportBot,https://api.github.com/repos/ZapierInspectionReportBot/IanTorweihe,Python Flask app that integrates with Zapier via webhooks. Automates construction inspection report process.  Retrieves and analyzes quality reports in PDF format from URLs. Utilizes OpenAI GPT-3.5 to extract and parse unstructured text. Returns structured and filtered text to Zapier via webhook.,,1,1,3,0,construction-management,"[construction-management, contech, gpt-3-5-turbo, llm, openai, zapier]",23
kspenc97,general-contractor-diagnostic-tool,,https://github.com/kspenc97/general-contractor-diagnostic-tool,https://api.github.com/repos/general-contractor-diagnostic-tool/kspenc97,A diagnostic tool meant for customers of a general contractor that need assistance on an issue in their home. Video Demonstration of Application - https://www.youtube.com/watch?v=U_uNkE9pQbo,"# contractor-help

## Project setup
```
npm install
```

### Compiles and hot-reloads for development
```
npm run serve
```

### Compiles and minifies for production
```
npm run build
```

### Lints and fixes files
```
npm run lint
```

### Customize configuration
See [Configuration Reference](https://cli.vuejs.org/config/).
",1,1,1,0,construction-management,"[construction, construction-company, construction-management, contractor, contractor-management, contractors, custom-css, general-contractor, home-construction, home-improvement, pdf-generation, vue, vuejs, vuejs2, vuex]",23
Construction-Management-ERP,dashboard,Construction-Management-ERP,https://github.com/Construction-Management-ERP/dashboard,https://api.github.com/repos/dashboard/Construction-Management-ERP,Construction Management System (ERP) - admin panel,"# Getting Started with Create React App

This project was bootstrapped with [Create React App](https://github.com/facebook/create-react-app).

## Available Scripts

In the project directory, you can run:

### `npm start`

Runs the app in the development mode.\
Open [http://localhost:3000](http://localhost:3000) to view it in the browser.

The page will reload if you make edits.\
You will also see any lint errors in the console.

### `npm test`

Launches the test runner in the interactive watch mode.\
See the section about [running tests](https://facebook.github.io/create-react-app/docs/running-tests) for more information.

### `npm run build`

Builds the app for production to the `build` folder.\
It correctly bundles React in production mode and optimizes the build for the best performance.

The build is minified and the filenames include the hashes.\
Your app is ready to be deployed!

See the section about [deployment](https://facebook.github.io/create-react-app/docs/deployment) for more information.

### `npm run eject`

**Note: this is a one-way operation. Once you `eject`, you can’t go back!**

If you aren’t satisfied with the build tool and configuration choices, you can `eject` at any time. This command will remove the single build dependency from your project.

Instead, it will copy all the configuration files and the transitive dependencies (webpack, Babel, ESLint, etc) right into your project so you have full control over them. All of the commands except `eject` will still work, but they will point to the copied scripts so you can tweak them. At this point you’re on your own.

You don’t have to ever use `eject`. The curated feature set is suitable for small and middle deployments, and you shouldn’t feel obligated to use this feature. However we understand that this tool wouldn’t be useful if you couldn’t customize it when you are ready for it.

## Learn More

You can learn more in the [Create React App documentation](https://facebook.github.io/create-react-app/docs/getting-started).

To learn React, check out the [React documentation](https://reactjs.org/).
",1,1,0,0,construction-management,"[construction-management, erp, innoscript, myanmar]",23
yuantsai1115,ar.camera.mobile,,https://github.com/yuantsai1115/ar.camera.mobile,https://api.github.com/repos/ar.camera.mobile/yuantsai1115,It is a proof of concept for mixed collaboration between site engineers and officers powered by AR and WebSocket..,"# AR Camera for Mixed Collaboration - Mobile

## Introduction
This is a proof of concept for mixed collaboration between site engineers and officers. Site engieers can stream live location to the BIM model with mobile application. Then, the officers view the live location of site engineers on BIM model with receiver application. This help the site engieers and officers remotely collaborate which benefits the construction management as most experienced engineers and officers need to look after multiple sites. 

| <video src=""https://user-images.githubusercontent.com/119405090/218675712-1654923e-1d4c-4b18-9b0a-0816db121409.mp4""> |  <video src=""https://user-images.githubusercontent.com/119405090/218676350-b36db086-cb4b-45ca-ba04-26085498ae35.mp4""> | 
|:--:| :--:| 
| *Mobile streaming relative location to model* | *Receiver showing live location on model* |

*Please refer to all three repositories to run this application.*
- https://github.com/yuantsai1115/ar.camera.mobile
- https://github.com/yuantsai1115/ar.camera.backend
- https://github.com/yuantsai1115/ar.camera.receiver

## Research Gaps
Real-time data exchange between site engineers and officers is essential yet severe as most methods on the market only support video, image or voice which is not enough for remote collaboration. The location, viewing targets, camera poses, trajectories are all missing which blocks the officers understanding the site condition. This research proposes mixed collaboration approach which streams live data of site engineers to office. Officers can easily track all site engineers and collaborate with them remotely on BIM model which serves as a virtual site for visualising the live data. 

| <img src=""https://user-images.githubusercontent.com/119405090/218685030-0decbf94-2b6f-47b0-9b6f-8952342bdb8e.jpg"" width=""600""> |
|:--:|
| *Research gaps for mixed collaboration* |

## Possibilities
The office can be a situation room which accommodates all the live data from multiple site engieers on the BIM model. Also, the officers can send information or commands to site engineers by AR camera on mobile. The information then is displayed on the physical position. On the other hand, the site engineers can also do the measurement and show the result on BIM model for officers. It can benefit the remote communication and collaboration especially for the geographical limitation scenarios.

| <img src=""https://user-images.githubusercontent.com/119405090/218685044-a53f42b7-0805-4f39-a4a7-65114df3da92.jpg"" width=""600""> |
|:--:|
| *Possibile applications for mixed collaboration* |
  
## Application Framework
The main module of the application framework is the Cross Device Broadcast module which can be implemented by WebSocket. There would be four types of cross-device communication including mobile to mobile, desktop to desktop, desktop to mobile, and mobile to desktop. Each type of the communication can benefit different applications as the mixed collaboration approach is the fundemental infrastructure of data exchange.

| <img src=""https://user-images.githubusercontent.com/119405090/218685074-4fb337d7-81a9-4821-a2c3-d0d8993b3044.jpg"" width=""600""> |
|:--:|
| *Application framework for mixed collaboration* |

## System Framework
The system framework layouts the essential logics and modules.  

| <img src=""https://user-images.githubusercontent.com/119405090/218685094-74d00339-d5b3-4523-8bf8-5918deef9e85.jpg"" width=""600""> |
|:--:|
| *System framework for mixed collaboration* |

## Project Setup
This repository extended the samples from WebXR which is a mixed reality library for web application. Please refer to the WebXR website for more information. https://immersiveweb.dev/


",1,1,1,0,construction-management,"[ar, bim, collaboration, construction-management, vr, websocket, webxr]",23
Lanr3waju,dakiybuilds,,https://github.com/Lanr3waju/dakiybuilds,https://api.github.com/repos/dakiybuilds/Lanr3waju,"This is a Web-Based Construction Management System, built with Supabase, Next.js 13, TailwindCSS and DaisyUI, it includes features such as storage of documents, logging of daily works, work schedule (Gantt chart), and other features.","This is a [Next.js](https://nextjs.org/) project bootstrapped with [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app).

## Getting Started

First, run the development server:

```bash
npm run dev
# or
yarn dev
# or
pnpm dev
```

Open [http://localhost:3000](http://localhost:3000) with your browser to see the result.

You can start editing the page by modifying `app/page.js`. The page auto-updates as you edit the file.

This project uses [`next/font`](https://nextjs.org/docs/basic-features/font-optimization) to automatically optimize and load Inter, a custom Google Font.

## Learn More

To learn more about Next.js, take a look at the following resources:

- [Next.js Documentation](https://nextjs.org/docs) - learn about Next.js features and API.
- [Learn Next.js](https://nextjs.org/learn) - an interactive Next.js tutorial.

You can check out [the Next.js GitHub repository](https://github.com/vercel/next.js/) - your feedback and contributions are welcome!

## Deploy on Vercel

The easiest way to deploy your Next.js app is to use the [Vercel Platform](https://vercel.com/new?utm_medium=default-template&filter=next.js&utm_source=create-next-app&utm_campaign=create-next-app-readme) from the creators of Next.js.

Check out our [Next.js deployment documentation](https://nextjs.org/docs/deployment) for more details.
",1,1,1,6,construction-management,"[construction-management, daisyui, nextjs13, personal-project, project-management, supabase, tailwindcss, webbased-project, webdevelopment]",23
yuantsai1115,ar.camera.backend,,https://github.com/yuantsai1115/ar.camera.backend,https://api.github.com/repos/ar.camera.backend/yuantsai1115,It is a proof of concept for mixed collaboration between site engineers and officers powered by AR and websocket.,"# AR Camera for Mixed Collaboration - Backend

## Introduction
This is a proof of concept for mixed collaboration between site engineers and officers. Site engieers can stream live location to the BIM model with mobile application. Then, the officers view the live location of site engineers on BIM model with receiver application. This help the site engieers and officers remotely collaborate which benefits the construction management as most experienced engineers and officers need to look after multiple sites. 

| <video src=""https://user-images.githubusercontent.com/119405090/218675712-1654923e-1d4c-4b18-9b0a-0816db121409.mp4""> |  <video src=""https://user-images.githubusercontent.com/119405090/218676350-b36db086-cb4b-45ca-ba04-26085498ae35.mp4""> | 
|:--:| :--:| 
| *Mobile streaming relative location to model* | *Receiver showing live location on model* |

*Please refer to all three repositories to run this application.*
- https://github.com/yuantsai1115/ar.camera.mobile
- https://github.com/yuantsai1115/ar.camera.backend
- https://github.com/yuantsai1115/ar.camera.receiver

## Research Gaps
Real-time data exchange between site engineers and officers is essential yet severe as most methods on the market only support video, image or voice which is not enough for remote collaboration. The location, viewing targets, camera poses, trajectories are all missing which blocks the officers understanding the site condition. This research proposes mixed collaboration approach which streams live data of site engineers to office. Officers can easily track all site engineers and collaborate with them remotely on BIM model which serves as a virtual site for visualising the live data. 

| <img src=""https://user-images.githubusercontent.com/119405090/218685030-0decbf94-2b6f-47b0-9b6f-8952342bdb8e.jpg"" width=""600""> |
|:--:|
| *Research gaps for mixed collaboration* |

## Possibilities
The office can be a situation room which accommodates all the live data from multiple site engieers on the BIM model. Also, the officers can send information or commands to site engineers by AR camera on mobile. The information then is displayed on the physical position. On the other hand, the site engineers can also do the measurement and show the result on BIM model for officers. It can benefit the remote communication and collaboration especially for the geographical limitation scenarios.

| <img src=""https://user-images.githubusercontent.com/119405090/218685044-a53f42b7-0805-4f39-a4a7-65114df3da92.jpg"" width=""600""> |
|:--:|
| *Possibile applications for mixed collaboration* |
  
## Application Framework
The main module of the application framework is the Cross Device Broadcast module which can be implemented by WebSocket. There would be four types of cross-device communication including mobile to mobile, desktop to desktop, desktop to mobile, and mobile to desktop. Each type of the communication can benefit different applications as the mixed collaboration approach is the fundemental infrastructure of data exchange.

| <img src=""https://user-images.githubusercontent.com/119405090/218685074-4fb337d7-81a9-4821-a2c3-d0d8993b3044.jpg"" width=""600""> |
|:--:|
| *Application framework for mixed collaboration* |

## System Framework
The system framework layouts the essential logics and modules.  

| <img src=""https://user-images.githubusercontent.com/119405090/218685094-74d00339-d5b3-4523-8bf8-5918deef9e85.jpg"" width=""600""> |
|:--:|
| *System framework for mixed collaboration* |

## Project Setup
<!--
title: 'Simple Websocket Authorizers'
description: 'The example shows you how to deploy simple websocket authorizers'
framework: v1
platform: AWS
language: nodeJS
authorLink: 'https://github.com/eahefnawy'
authorName: 'Eslam λ Hefnawy'
authorAvatar: 'https://avatars3.githubusercontent.com/u/2312463?v=4&s=140'
-->

### Simple Websockets Authorizers Example

* Deploy the example service.
* connect to the outputted wss url using `wscat`:

```
wscat -c <wss-url>
```

* Connection should fail. If you try again, this time specifying an `Auth` header:

 ```
 wscat -c <wss-url> -H Auth:secret
 ```
 * Connection succeeds.
 * Feel free to chat with yourself :)
",0,0,1,0,construction-management,"[ar, bim, collaboration, construction-management, vr, websocket, webxr]",23
sahand995,BIM-based-integrated-discrete-event-simulation-DES-for-time-space-conflict-management-in-construct,,https://github.com/sahand995/BIM-based-integrated-discrete-event-simulation-DES-for-time-space-conflict-management-in-construct,https://api.github.com/repos/BIM-based-integrated-discrete-event-simulation-DES-for-time-space-conflict-management-in-construct/sahand995,"This study proposes a novel integrated approach as a method of time-space management in construction project sites. Our Proposed Unity-based method implements Discrete Event Simulation (DES), Building Information Modeling (BIM), and Informed Rapidly-exploring Random Tree-Star (Informed-RRT*) path planning, to automatically detect, evaluate, and resolve time-space conflicts throughout construction projects.","# BIM-based integrated discrete event simulation (DES) for time-space conflict management in construction sites using unity
This study proposes a novel integrated approach as a method of time-space management in construction project sites. Our Proposed Unity-based method implements Discrete Event Simulation (DES), Building Information Modeling (BIM), and Informed Rapidly-exploring Random Tree-Star (Informed-RRT*) path planning, to automatically detect, evaluate, and resolve time-space conflicts throughout construction projects.
",0,0,1,0,construction-management,"[construction-management, discrete-event-simulation, informed-rrt-star, optimization, path-planning, unity, unity3d, virtual-reality]",23
markdino,Construction-website-1,,https://github.com/markdino/Construction-website-1,https://api.github.com/repos/Construction-website-1/markdino,Gatsby-template for Construction company,"<!-- AUTO-GENERATED-CONTENT:START (STARTER) -->
<p align=""center"">
  <a href=""https://www.gatsbyjs.org"">
    <img alt=""Gatsby"" src=""https://www.gatsbyjs.org/monogram.svg"" width=""60"" />
  </a>
</p>
<h1 align=""center"">
  Gatsby's default starter
</h1>

Kick off your project with this default boilerplate. This starter ships with the main Gatsby configuration files you might need to get up and running blazing fast with the blazing fast app generator for React.

_Have another more specific idea? You may want to check out our vibrant collection of [official and community-created starters](https://www.gatsbyjs.org/docs/gatsby-starters/)._

## 🚀 Quick start

1.  **Create a Gatsby site.**

    Use the Gatsby CLI to create a new site, specifying the default starter.

    ```sh
    # create a new Gatsby site using the default starter
    gatsby new my-default-starter https://github.com/gatsbyjs/gatsby-starter-default
    ```

1.  **Start developing.**

    Navigate into your new site’s directory and start it up.

    ```sh
    cd my-default-starter/
    gatsby develop
    ```

1.  **Open the source code and start editing!**

    Your site is now running at `http://localhost:8000`!

    _Note: You'll also see a second link: _`http://localhost:8000/___graphql`_. This is a tool you can use to experiment with querying your data. Learn more about using this tool in the [Gatsby tutorial](https://www.gatsbyjs.org/tutorial/part-five/#introducing-graphiql)._

    Open the `my-default-starter` directory in your code editor of choice and edit `src/pages/index.js`. Save your changes and the browser will update in real time!

## 🧐 What's inside?

A quick look at the top-level files and directories you'll see in a Gatsby project.

    .
    ├── node_modules
    ├── src
    ├── .gitignore
    ├── .prettierrc
    ├── gatsby-browser.js
    ├── gatsby-config.js
    ├── gatsby-node.js
    ├── gatsby-ssr.js
    ├── LICENSE
    ├── package-lock.json
    ├── package.json
    └── README.md

1.  **`/node_modules`**: This directory contains all of the modules of code that your project depends on (npm packages) are automatically installed.

2.  **`/src`**: This directory will contain all of the code related to what you will see on the front-end of your site (what you see in the browser) such as your site header or a page template. `src` is a convention for “source code”.

3.  **`.gitignore`**: This file tells git which files it should not track / not maintain a version history for.

4.  **`.prettierrc`**: This is a configuration file for [Prettier](https://prettier.io/). Prettier is a tool to help keep the formatting of your code consistent.

5.  **`gatsby-browser.js`**: This file is where Gatsby expects to find any usage of the [Gatsby browser APIs](https://www.gatsbyjs.org/docs/browser-apis/) (if any). These allow customization/extension of default Gatsby settings affecting the browser.

6.  **`gatsby-config.js`**: This is the main configuration file for a Gatsby site. This is where you can specify information about your site (metadata) like the site title and description, which Gatsby plugins you’d like to include, etc. (Check out the [config docs](https://www.gatsbyjs.org/docs/gatsby-config/) for more detail).

7.  **`gatsby-node.js`**: This file is where Gatsby expects to find any usage of the [Gatsby Node APIs](https://www.gatsbyjs.org/docs/node-apis/) (if any). These allow customization/extension of default Gatsby settings affecting pieces of the site build process.

8.  **`gatsby-ssr.js`**: This file is where Gatsby expects to find any usage of the [Gatsby server-side rendering APIs](https://www.gatsbyjs.org/docs/ssr-apis/) (if any). These allow customization of default Gatsby settings affecting server-side rendering.

9.  **`LICENSE`**: Gatsby is licensed under the MIT license.

10. **`package-lock.json`** (See `package.json` below, first). This is an automatically generated file based on the exact versions of your npm dependencies that were installed for your project. **(You won’t change this file directly).**

11. **`package.json`**: A manifest file for Node.js projects, which includes things like metadata (the project’s name, author, etc). This manifest is how npm knows which packages to install for your project.

12. **`README.md`**: A text file containing useful reference information about your project.

## 🎓 Learning Gatsby

Looking for more guidance? Full documentation for Gatsby lives [on the website](https://www.gatsbyjs.org/). Here are some places to start:

- **For most developers, we recommend starting with our [in-depth tutorial for creating a site with Gatsby](https://www.gatsbyjs.org/tutorial/).** It starts with zero assumptions about your level of ability and walks through every step of the process.

- **To dive straight into code samples, head [to our documentation](https://www.gatsbyjs.org/docs/).** In particular, check out the _Guides_, _API Reference_, and _Advanced Tutorials_ sections in the sidebar.

## 💫 Deploy

[![Deploy to Netlify](https://www.netlify.com/img/deploy/button.svg)](https://app.netlify.com/start/deploy?repository=https://github.com/gatsbyjs/gatsby-starter-default)

<!-- AUTO-GENERATED-CONTENT:END -->
",24,24,3,10,construction-company,"[construction-company, gatsby, gatsby-site, hacktoberfest, manifest, metadata]",23
devdesiignn,BuildCo,,https://github.com/devdesiignn/BuildCo,https://api.github.com/repos/BuildCo/devdesiignn,A Construction company with Elegance and Class 💯,"# BuildCo - A Construction company with Elegance and Class 💯
### Who knows about BuildCo? 

BuildCo is a building and construction company dedicated to excellence, who utilize innovative building construction, maintenance, and renovation skills to change and improve the way Projects are designed, managed, and built.

BuildCo offers services ranging from 

- New building Construction
- Architectural Design 
- Roof Installation
- Commercial and Electrical Installations
- Landscaping & External Works and
- Mechanical and Renewables

**Want to Build with elegance today ?, Contact BuildCo 💯.**

[Check out their Website](https://devdesiign.github.io/BuildCo/)

---

**Just Kidding*

Buildco is yet another imaginary concept created by [Derez - A UIUX Designer](https://twitter.com/iamDeRez1?t=iq9Lmucoy-2BoGiiFQb9Ig&s=08) 💪.

I at the other end was surfing the internet, looking for projects to fuel my range 🔥🔥, then i came across the UI on [Twitter](https://twitter.com/d3vd3511gn)...

I reached out to [Derez](https://twitter.com/iamDeRez1?t=iq9Lmucoy-2BoGiiFQb9Ig&s=08) and he gave me the link to the design. 

*Celebrate Grace* ✨🤍

*Here we are !* [BuilCo - A Construction company with Elegance and Class 💯](https://devdesiign.github.io/BuildCo/)

I'm open to suggestions and reviews.

***Reach out to me via [Twitter](https://twitter.com/d3vd3511gn) and [LinkedIn](https://www.linkedin.com/in/muiz-haruna-321841187/)***

Thanks ✨

🤍 && 🔥

[![Total Time spent](https://wakatime.com/badge/user/fb658d00-4e70-4cd7-8cda-72b8f1ef0325/project/fddcb164-d353-4446-bf84-22e8ede6bee9.svg)](https://wakatime.com/badge/user/fb658d00-4e70-4cd7-8cda-72b8f1ef0325/project/fddcb164-d353-4446-bf84-22e8ede6bee9)
---

## A Demo 👇

https://user-images.githubusercontent.com/57061186/182739165-f889e7d8-06fa-48ee-a09c-ffcdb2012edb.mp4
",10,10,1,0,construction-company,"[construction-company, css-flexbox-layout, desktop, html-css, landing-page, mobile-web, responsive-design, uidesign]",23
RainbowForest,construction-equipment-rental,,https://github.com/RainbowForest/construction-equipment-rental,https://api.github.com/repos/construction-equipment-rental/RainbowForest,Web Application using Spring Boot with multiple modules,"# Construction Equipment Rental Software

> Web Application using Spring Boot with multiple modules

### Table of contents

- [General info](#general-info)
- [Screenshots](#screenshots)
- [Tools and Technologies](#technologies)
- [Setup](#setup)
- [Features](#features)
- [Status](#status)
- [Contact](#contact)

### General info

Internal system for renting construction equipment. The application is divided into two parts. The first one available for the administrator. Allows  to manage users, catalogs, construction sites, orders, and liabilities. The second part is available to users. Allows ordering construction equipment (has a shopping cart features), checking the order status and all liabilities for the given construction site. 							     The application is secured with the Spring Web Security.

### Screenshots

![login](https://user-images.githubusercontent.com/50141193/57782077-c42b9380-772b-11e9-9136-a91181732276.jpg)

![admin](https://user-images.githubusercontent.com/50141193/57782207-0fde3d00-772c-11e9-8528-99c79df116c3.jpg)

![user-form](https://user-images.githubusercontent.com/50141193/57783940-55e8d000-772f-11e9-8d93-62f7058aa72b.jpg)

![users](https://user-images.githubusercontent.com/50141193/57784078-98121180-772f-11e9-86f0-ab63b22d403e.jpg)

![cart](https://user-images.githubusercontent.com/50141193/57784168-c132a200-772f-11e9-817a-30665efdfd21.jpg)

![Orders](https://user-images.githubusercontent.com/50141193/57784228-dc9dad00-772f-11e9-967e-fc7863141030.jpg)

### Tools and Technologies

- **Java 8**
- **Spring Boot** - version 2.2.0
- **Spring Web MVC** - version 5.1.5.RELEASE
- **Spring Security** - version 5.1.4 RELEASE
- **Spring Data JPA** - version 2.2.0 
- **Hibernate** - version 5.4.0 Finale
- **Spring Validation** - version 2.0.1 RELEASE
- **Database engine** : Microsoft SQL 2016
- **Application Servicer** : Apache Tomcat Server
- **Maven**
- **Java Server Page**
- **JSTL**
- **HTML 5 and CSS 3**

### Setup

### Features

1. **Administrator :**

   - Add new user 
   - Search all users or one user
   - Edit User (modifying a user details)
   - Edit Security for user (change password, role etc.)
   - Add new construction site
   - Search and edit construction sites
   - Checking stock list for a given construction site
   - Add  items to catalog and edit items
   - Checking orders and change order status
   - Checking orders history
   - Checking all liabilities for a given construction site

2. **User** :

   - Ordering construction equipment (like a shopping cart)
   - Search all construction sites
   - Checking all orders for construction site where the user is assigned
   - Checking all liabilities for construction site where the user is assigned

3. **Security :**

   - Login system
   - Role system

4. **Validation :**

   - Server-side validation (Spring Validation)

   

### Status:

**Application status :** BETA 
",9,9,0,0,construction-company,"[application, construction-company, controller, database, html-css, java, jpa-hibernate, jsp, jsp-taglib, jstl, mvc-architecture, rental, repository-service, shopping-cart, software, spring-boot, spring-mvc, spring-security, sql-server, validation]",23
Arcology-Builders,arcology-website,Arcology-Builders,https://github.com/Arcology-Builders/arcology-website,https://api.github.com/repos/arcology-website/Arcology-Builders,"The website for Arcology Builders, a project for a, a sustainable community home in Detroit.","# Website for Detroit Arcology and Arcology Builders

This is the website source code for Arcology, a project to build and steward affordable, community housing 
in Detroit.

## Getting Started

Clone our source code locally to your computer.
```
git clone https://github.com/invisible-college/arcology-website.git
```

Build the CSS file.

```
yarn build
```
to generate files to serve in the `dist/` directory.

Serve the files locally using a live-updating static site server:
```
yarn start:detroit

or, alternatively:

python3 -m http.server -d dist
```

Your browser should automatically open to the URL below.
If it doesn't, open the URL below manually.
```
http://localhost:8080/detroit
```

We recommend keeping the website and your code side-by-side.
As you make changes, they'll automatically cause a refresh on the right.

## Deployment

```
ssh ubuntu@detroitarcology.org

cd /var/www/arcology-website
git pull
yarn clean
yarn build
```

## Tech Stack

We use a static responsive website made with TailwindsCSS and plain HTML.
",8,8,7,12,construction-company,"[architecture, builders, community-land, construction-company, detroit, ecology, sustainability]",23
ImRanKhan81m,Construction-Website,,https://github.com/ImRanKhan81m/Construction-Website,https://api.github.com/repos/Construction-Website/ImRanKhan81m,Construction Website,"﻿# Construction-Website
",7,7,1,0,construction-company,[construction-company],23
katmore,clientcal,katmore,https://github.com/katmore/clientcal,https://api.github.com/repos/clientcal/katmore,"Scheduling, job, crew, and customer management web application for construction companies.","# ClientCal
Scheduling, job, crew, and customer management web application for construction companies.
 * Homepage: https://katmore.github.io/clientcal
 * Download: [.zip file](https://github.com/katmore/clientcal/zipball/latest-release), [.tar.gz](https://github.com/katmore/clientcal/tarball/latest-release)

## Description
ClientCal is a PHP+MySQL based project initially released in 2006 to facilitate the management of customer info, job scheduling, job site info, and work crew scheduling for small to medium sized construction operations (SMBs). As a traditional HTML form based application it has proved to be very stable over the years. I have released this project in preparation for improvements to the UI (to make it mobile friendly) and implementing a RESTful API backend.

## Documentation
 * [Installation](https://github.com/katmore/clientcal/wiki/Installation)
 * [Utilities](https://github.com/katmore/clientcal/wiki/Utilities)
 * [Updating](https://github.com/katmore/clientcal/wiki/Updating)
 * [Docker](https://github.com/katmore/clientcal/wiki/Docker)
 
## Quick Start using Docker
Consult the [Docker](https://github.com/katmore/clientcal/wiki/Docker) page of the [ClientCal wiki](https://github.com/katmore/clientcal/wiki) for more information regarding usage with Docker.

 * Prerequisites: 
   * a copy of the ClientCal source (i.e...)
   ```sh
   git clone git@github.com:katmore/clientcal.git
   ```
   * a recent version of [*docker*](https://www.docker.com/community-edition)
   * a recent version of [*docker-compose*](https://docs.docker.com/compose/)
 * Start containers and configure ClientCal
    ```sh
    $ cd docker/compose/clientcal
    $ docker-compose build
    $ docker-compose start
    $ docker-compose exec php-fpm /var/www/clientcal/bin/web-user.php add
    ```
 * That's it! Ready to view in browser at: http://localhost:8080
 
## Quick Start without Docker
Consult the [Installation](https://github.com/katmore/clientcal/wiki/Installation) page of the [ClientCal wiki](https://github.com/katmore/clientcal/wiki) for more detailed instructions.

 * Prerequisites: 
   * a copy of the ClientCal source (i.e...)
   ```sh
   git clone git@github.com:katmore/clientcal.git
   ```
   * PHP 7.2
   * a recent version of [*composer*](https://getcomposer.org/)
   * a web server provisioned with a ""Document Root"" pointing to the ClientCal web root ([clientcal/web](/web))
   * a recent version of MySQL provisioned an empty database and a user with access to that database
 * Configure ClientCal
   ```sh
   composer update
   ```
   ```sh
   php bin/config-update.php
   ```
   ```sh
   php bin/db-update.php
   ```
   ```sh
   php bin/web-user.php add my_user
   ```
 * All done! Ready to view in a browser using your web server's URL.

## Screenshots
See the [Screenshots](https://katmore.github.io/clientcal/#screenshots) section of the [ClientCal homepage](https://katmore.github.io/clientcal/#screenshots).

## Related Resources
 * Github: https://github.com/katmore/clientcal
 * Packagist: https://packagist.org/packages/katmore/clientcal
 * Latest release: https://github.com/katmore/clientcal/releases/latest
 * Documentation: https://github.com/katmore/clientcal/wiki
 * Support/Bugs: https://github.com/katmore/clientcal/issues
 
## Legal
ClientCal is distributed under the terms and conditions of the MIT license (see [LICENSE](/LICENSE)), or the terms and conditions of the GPLv3 license (see [GPLv3](/GPLv3)).

Copyright (c) 2006-2023, Paul Douglas Bird II.
All rights reserved.
",4,4,2,0,construction-company,"[calendar, construction-company, crew, mysql, php, scheduling]",23
ranajahanzaib,evx-builders,,https://github.com/ranajahanzaib/evx-builders,https://api.github.com/repos/evx-builders/ranajahanzaib,Construction Company | Website Template | Designed with ReactJS and @Evvax UI,"# Project Title

[![GitHub license](https://img.shields.io/badge/license-MIT-blue.svg)](./LICENSE) [![PRs Welcome](https://img.shields.io/badge/PRs-welcome-brightgreen.svg)](./CONTRIBUTING.md)


This is another Open Source Project.

## Contributing

We'd love to accept your patches and contributions to this project. There are just a few guidelines you need to follow.

### [Code of Conduct](./CODE_OF_CONDUCT.md)

This project follows [Contributor Covenant](https://www.contributor-covenant.org/)
as it's Code of Conduct, and we expect all project participants to adhere to it.
Please read the [full guide](./CODE_OF_CONDUCT.md) so that you can understand 
what actions will not be tolerated.

### [Contributing Guide](./CONTRIBUTING.md)

Read our [contributing guide](./CONTRIBUTING.md) to learn about our development process, how to propose bugfixes and improvements, and how to build and test your changes to project.

### [LICENSE](./LICENSE)

This project is licensed under the [MIT License](./LICENSE), meaning that you're free to modify, distribute, and / or use it for any commercial or private project.
",3,3,2,0,construction-company,"[construction-company, evvax, reactjs, website-template]",23
eugeniftimoaie,webapp-top-6-construction-companies,,https://github.com/eugeniftimoaie/webapp-top-6-construction-companies,https://api.github.com/repos/webapp-top-6-construction-companies/eugeniftimoaie,webapp analyzing trends and growths of the 6 largest European construction companies in the years from 2007 to 2019.,"# Webapp Top 6 Construction Companies

Webapp with Analysis of Trends and Growths of the 6 largest European Construction Companies between the years 2007 and 2019.

The webapp files are compiled for cloning the repository to local computer, activating via terminal and using offline on the browser.
Furthermore this webapp has been uploaded on Heroku and can be viewed [here](https://top-construction-companies.herokuapp.com/)

## Configuration
* HTML, CSS, Javascript
* Python 3 with libraries bootstrap + plotly (Front-end) and flask + pandas (Back-end)

## Installation on local computer
Steps for opening webapp on browser:
1) change directory to folder with ""top6_app.py""
`$ cd .../web_app`
2) start web app with following command
`$ python top6_app.py`

3) open browser and type in url (for windows): http://localhost:5000/

## File Manifest
folder **data** containing:
* **construction_top_6_europe_2020.csv** - csv file with cleaned data of companies

folder **top6_app** containing:
* folder **static** containing img files for social media buttons
* folder **template** containing **index.html** with content of webpage
* **__init__.py** - python file to execute webapp when loading the module
* **routes.py** - python file to connect back-end with front-end content

folder **wrangling_scripts** containing:
* **wrangle_data.py** - python file for wrangling and compiling data into graphs of the webapp

**LICENSE.md** - markdown file with license.md for this software package

**README.md** - markdown file with instructions how to install and use this python package

## Copyright and Licencing
This project is licensed under the terms of the MIT license

## Contributing [![contributions welcome](https://img.shields.io/badge/contributions-welcome-brightgreen.svg?style=flat)](https://github.com/dwyl/esta/issues)

## Contact
Author: Eugen Iftimoaie

For questions feel free to contact me on my e-mail adress: eugen.iftimoaie@gmx.de
",2,2,1,0,construction-company,"[acs, analysis, balance-sheet, bouygues, construction-company, eiffage, growths, income-statements, python, skanska, strabag, trends, vinci, webapp]",23
skth5199,constructoo,,https://github.com/skth5199/constructoo,https://api.github.com/repos/constructoo/skth5199,Android app to track construction materials delivery,"# Constructoo: Delivery for Construction
In the current digital age, rapid growth in technology has made many companies rely on mobile apps. Many businesses find that mobile applications can provide better solutions and more efficient work processes at a fast-paced time of the day. Constructoo, an Android application, will assist the managers in the company by controlling the packages, determining the construction sites, and assigning the specified driver for this shipment. Moreover, monitoring shipments and knowing their status will also be present. It will also help vendors track the shipments and intimate them when the packages have been delivered.

## Functional Requirements
### Basic Features
1. The manager can create and maintain a list of building-sites, vendors, and drivers. Information recorded will include:
    * Construction sites: Name, address and manager
    * Drivers: Name and Email id
    * Vendors: Name, Email id and address
2. The manager can view the list of building sites, vendors, drivers, and packages and make changes to their lists. Separate columns for pending and completed packages provided.
3. The manager can add a new package, choose a vendor, and assign this package to a driver
4. After the initial details of a new driver (full name and email) have been added to the system by the manager, the driver can sign up to their account and complete their profile by adding new password and profile photo.
5. The diver is notified when they are allocated a new delivery job and should be able to see a list of the packages they need to deliver.
6. When a driver marks the package as delivered, the building site's admin receives a message notifying them of that delivery
### Advanced Features
* Firebase used for the backend database
* Vendor and Site manager developed as separate entities (both have their own portals)
* Dark Mode made
## Nonfunctional Requirements
* Ease of use: clients do not need any training to use the app.
* Security: The application will protect users’ passwords and private information.
* Network agnosticism: The app attempt to submitting data over wifi connections or cell networks
* Transactional data submissions: If a network connection is broken or data transfer is otherwise unsuccessful, the application can save all data locally and record a failed upload.

## Application workflow
![image](https://user-images.githubusercontent.com/26760537/165154870-01940608-007a-4858-96d5-de45cb399a43.png)

## Database overview
![image](https://user-images.githubusercontent.com/26760537/165155061-b121ceb1-03d1-4490-9ed3-99632fc8df4a.png)

## Screenshots
![image](https://user-images.githubusercontent.com/26760537/165155215-8316f924-3945-48de-b642-24a5b5286b13.png)


",2,2,1,0,construction-company,"[android-application, construction, construction-company, delivery-application]",23
CharlesPlusC,FER,,https://github.com/CharlesPlusC/FER,https://api.github.com/repos/FER/CharlesPlusC,Code accompanying the dissertation project for BEng Civil Engineering - Improving health and safety inductions on construction sites through the application of convolutional neural nets.,"# Tracking engagement through the use of facial affect #
- Initially attempted to make a Facial Emotion Recognition CNN based on FER2013 Kaggle Dataset. Attached model achieves around 67% accuracy. Can be found in *CNN_v2.ipynb*

- Subsequently decided to make use of DeepFace and get an 'engagement score' for each video in the aim of informing health and safety site inductions so as to make them more engaging and to ultimately improve site safety outcomes. 

- Jupyter notebooks used as early rough drafts of the program (video preocessing, dataframe extraction from deepface, engagement calculation and comparison with observations)

### Engagement calculator ###
#### Disclaimer: ####
The following code provides a first attempt at calculating 'engagament' within a given video/set of videos. There are many issues with this method including the fact that facial emotion (a.k.a affect) is only representative of **external state** and so can only be used to infer external markers of engagement. This method makes no claims of being able to identify any more than this.

#### Using the code ####
Required file structure: ![file structure](https://user-images.githubusercontent.com/66725307/127992724-2c24bc24-f5fe-4088-83a9-f7c3c4e583cc.jpeg)

The main functions are as follows:
- **split_vid()**: Simply splits the video into its frames. Takes as arugments the frame rate of the camera used and the number of frames per second required.
- **get_emotion()**: applies DeepFace (Serengil, 2020) to split frames and outputs emotion dataframes (probability of each emotion being present in each frame).
- **get_engagement()**: processing of the data from get_emotion() to return 'engagement' of a participant relative to themselves in any one clip. This is based on emotion variance, normalized positive and negative emotion.

*UI.py* contains a basic user interface.
",1,1,3,1,construction-company,"[civil-engineering, construction-company, fer, fer2013, health-and-safety, video]",23
vamadevbuildtech,vamadevbuildtech.github.io,,https://github.com/vamadevbuildtech/vamadevbuildtech.github.io,https://api.github.com/repos/vamadevbuildtech.github.io/vamadevbuildtech,website,# website,1,1,0,0,construction-company,"[construction-company, static-site, website]",23
protons0010,selenium,,https://github.com/protons0010/selenium,https://api.github.com/repos/selenium/protons0010,Selenium is the 10 page based construction website ,"# selenium
Selenium is the 10 pages based construction website 
",1,1,1,0,construction-company,"[3d, 3dbutton, animate, construction, construction-company, construction-site, css-animation, css3, html, html-template, html-templates, html5, html5-canvas, selenium, selenium-node]",23
i-go-beep,ENDI_Stucco,,https://github.com/i-go-beep/ENDI_Stucco,https://api.github.com/repos/ENDI_Stucco/i-go-beep,"Client had an existing webpage that they were not happy with and asked us to rebuild it. Working with their existing domain and hosting site, we rebuilt their page adding some much needed features such as social media and branding with the design of an eye catching logo. https://endistuccorepair.ltd",,0,0,1,0,construction-company,"[construction-company, rebuild, website]",23
ekiidx,servicepro-construction-site,,https://github.com/ekiidx/servicepro-construction-site,https://api.github.com/repos/servicepro-construction-site/ekiidx,A modern construction themed website template.,"# servicepro-construction-site
A modern construction themed website template.
",0,0,1,0,construction-company,"[construction-company, css, graphic-design, html, php, website-template]",23
HarryEllames,Construction-Website,,https://github.com/HarryEllames/Construction-Website,https://api.github.com/repos/Construction-Website/HarryEllames,Website created and hosted on behalf of a client for their start-up demolition and groundwork company.,"# Construction-Website
Website created and hosted on behalf of a client for their start-up demolition and groundwork company. The website never reached its final release due to the client encountering insurance issues, causing them to scrap the company's start-up. 

All contact information are placeholders and do not reveal any of the client's sensitive information.

A domain was purchased from GoDaddy and hosted through Google Firebase to show the client site development and eventually be hosted for the public to access.
",0,0,1,0,construction-company,"[construction-company, css, html, website]",23
Mhmdhammoud,skyline-backend,,https://github.com/Mhmdhammoud/skyline-backend,https://api.github.com/repos/skyline-backend/Mhmdhammoud,Skyline backend built with NestJS REST APIs and MongoDB Skyline is a construction company that has plus 50 completed projects,"<p align=""center"">
  <a href=""http://nestjs.com/"" target=""blank""><img src=""https://nestjs.com/img/logo_text.svg"" width=""320"" alt=""Nest Logo"" /></a>
</p>

[circleci-image]: https://img.shields.io/circleci/build/github/nestjs/nest/master?token=abc123def456
[circleci-url]: https://circleci.com/gh/nestjs/nest

  <p align=""center"">A progressive <a href=""http://nodejs.org"" target=""_blank"">Node.js</a> framework for building efficient and scalable server-side applications.</p>
    <p align=""center"">
<a href=""https://www.npmjs.com/~nestjscore"" target=""_blank""><img src=""https://img.shields.io/npm/v/@nestjs/core.svg"" alt=""NPM Version"" /></a>
<a href=""https://www.npmjs.com/~nestjscore"" target=""_blank""><img src=""https://img.shields.io/npm/l/@nestjs/core.svg"" alt=""Package License"" /></a>
<a href=""https://www.npmjs.com/~nestjscore"" target=""_blank""><img src=""https://img.shields.io/npm/dm/@nestjs/common.svg"" alt=""NPM Downloads"" /></a>
<a href=""https://circleci.com/gh/nestjs/nest"" target=""_blank""><img src=""https://img.shields.io/circleci/build/github/nestjs/nest/master"" alt=""CircleCI"" /></a>
<a href=""https://coveralls.io/github/nestjs/nest?branch=master"" target=""_blank""><img src=""https://coveralls.io/repos/github/nestjs/nest/badge.svg?branch=master#9"" alt=""Coverage"" /></a>
<a href=""https://discord.gg/G7Qnnhy"" target=""_blank""><img src=""https://img.shields.io/badge/discord-online-brightgreen.svg"" alt=""Discord""/></a>
<a href=""https://opencollective.com/nest#backer"" target=""_blank""><img src=""https://opencollective.com/nest/backers/badge.svg"" alt=""Backers on Open Collective"" /></a>
<a href=""https://opencollective.com/nest#sponsor"" target=""_blank""><img src=""https://opencollective.com/nest/sponsors/badge.svg"" alt=""Sponsors on Open Collective"" /></a>
  <a href=""https://paypal.me/kamilmysliwiec"" target=""_blank""><img src=""https://img.shields.io/badge/Donate-PayPal-ff3f59.svg""/></a>
    <a href=""https://opencollective.com/nest#sponsor""  target=""_blank""><img src=""https://img.shields.io/badge/Support%20us-Open%20Collective-41B883.svg"" alt=""Support us""></a>
  <a href=""https://twitter.com/nestframework"" target=""_blank""><img src=""https://img.shields.io/twitter/follow/nestframework.svg?style=social&label=Follow""></a>
</p>
  <!--[![Backers on Open Collective](https://opencollective.com/nest/backers/badge.svg)](https://opencollective.com/nest#backer)
  [![Sponsors on Open Collective](https://opencollective.com/nest/sponsors/badge.svg)](https://opencollective.com/nest#sponsor)-->

## Description

[Nest](https://github.com/nestjs/nest) framework TypeScript starter repository.

## Installation

```bash
$ npm install
```

## Running the app

```bash
# development
$ npm run start

# watch mode
$ npm run start:dev

# production mode
$ npm run start:prod
```

## Test

```bash
# unit tests
$ npm run test

# e2e tests
$ npm run test:e2e

# test coverage
$ npm run test:cov
```

## Support

Nest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please [read more here](https://docs.nestjs.com/support).

## Stay in touch

- Author - [Kamil Myśliwiec](https://kamilmysliwiec.com)
- Website - [https://nestjs.com](https://nestjs.com/)
- Twitter - [@nestframework](https://twitter.com/nestframework)

## License

Nest is [MIT licensed](LICENSE).
",0,0,1,0,construction-company,"[construction, construction-company]",23
sbklepper,ultra-demolition,,https://github.com/sbklepper/ultra-demolition,https://api.github.com/repos/ultra-demolition/sbklepper,"Next.js project for a local demolition company, Ultra Demolition, using MongoDB & Tailwind.","## Ultra Demolition

This is a [Next.js](https://nextjs.org/) project for a local demolition company, [`Ultra Demolition`](http://www.ultrademolitiontx.com/), using [`MongoDB`](https://www.mongodb.com/) & [`Tailwind`](https://tailwindcss.com/).
",0,0,1,0,construction-company,"[construction-company, mongodb, nextjs, tailwind]",23
sahil9594,web_page,,https://github.com/sahil9594/web_page,https://api.github.com/repos/web_page/sahil9594,,# web_page,0,0,2,0,construction-company,"[construction-company, frontpage]",23
ce-construction,.github,ce-construction,https://github.com/ce-construction/.github,https://api.github.com/repos/.github/ce-construction,,,0,0,0,0,construction-company,"[ce, ce-construction, construction, construction-company]",23
Koxpit,BuildingCompany,,https://github.com/Koxpit/BuildingCompany,https://api.github.com/repos/BuildingCompany/Koxpit,Десктопное приложение для управления строительной компанией,"# BuildingCompany
Десктопное приложение для строительных компаний
",0,0,1,0,construction-company,"[ado-net, construction-company, windows-forms]",23
KirinyetBrian,Atlantis-Search-Group,,https://github.com/KirinyetBrian/Atlantis-Search-Group,https://api.github.com/repos/Atlantis-Search-Group/KirinyetBrian,"Have you ever gone through piles of resumes, called people for interviews and spent time, money and effort on candidates that just didn’t fit the portfolio that you needed? The answer is a Search Firm that exclusively specializes in the Structural Design industry, and that can identify talented candidates that fit your firm’s requirements and specifications. We attract and identify a range of talented industry professionals that match a variety of job descriptions within the Structural Design industry  We’ve built our business on adding value for our clients far beyond the traditional, transactional hiring process. We accomplish this by providing market feedback and networking activities. We combine vigorous analysis, interviewing and candidate profiling with a partnership-based approach aimed at understanding a business’s needs and culture, and the position to be filled. . We have a proven track record of fulfilling roles from Designer to mid- and senior management positions, using our exclusive industry research capabilities and years of experience.","<p align=""center""><a href=""www.atlantissearchgroup.com"" target=""_blank""><img src=""https://github.com/KirinyetBrian/Atlantis-Search-Group/blob/main/public/img/logo-removebg-preview.png"" width=""400""></a></p>



## About Atlantis Search Group

Have you ever gone through piles of resumes, called people for interviews and spent time, money and effort on candidates that just didn’t fit the portfolio that you needed? The answer is a Search Firm that exclusively specializes in the Structural Design industry, and that can identify talented candidates that fit your firm’s requirements and specifications. We attract and identify a range of talented industry professionals that match a variety of job descriptions within the Structural Design industry

We’ve built our business on adding value for our clients far beyond the traditional, transactional hiring process. We accomplish this by providing market feedback and networking activities. We combine vigorous analysis, interviewing and candidate profiling with a partnership-based approach aimed at understanding a business’s needs and culture, and the position to be filled. . We have a proven track record of fulfilling roles from Designer to mid- and senior management positions, using our exclusive industry research capabilities and years of experience.

## CANDIDATES:

When you contact our consultants and recruiters, you will experience our high level of professionalism that is matched with our desire to see you succeed in your job search.
You are recognize

You will experience an individualized approach at a Atlantis Search Group

Advisers who listen to you and understand the role you are seeking
A wide range of positions available on a casual or permanent basis;
We are involved in the hiring process long after your hire. We stay in contact with you to ensure a smooth transition long after the hiring process is complete.


## CONTACT US:

 USA +1 703-537-5081
Suite 101-22587 Armstrong Terrace
Ashburn VA 20148

 United Kingdom +44 113 328 0567
40 West Grange Rd.
Leeds, West Yorkshire
LS10 3AW

 Canada + 1 703-537-5081
106-12 Elm Grove Ave
Toronto ON
M6K 2J1",0,0,1,0,construction-company,"[construction-company, real-estate, structural-engineering]",23
alibaba,dawn,alibaba,https://github.com/alibaba/dawn,https://api.github.com/repos/dawn/alibaba,:sunrise: Dawn is a lightweight task management and build tool for front-end and nodejs. ,"<h1 align=""center"">
  <img src=""https://img.alicdn.com/tfs/TB1OjR6HQL0gK0jSZFAXXcA9pXa-1360-1360.png"" alt=""Dawn"" width=""200"">
  <br>Dawn<br>
</h1>

<h4 align=""center"">Lightweight task management and build tool.</h4>

<p align=""center"">
  <a href=""https://github.com/alibaba/dawn/blob/main/LICENSE"">
    <img src=""https://img.shields.io/npm/l/@dawnjs/cli.svg"" alt=""LICENSE"">
  </a>
  <a href=""https://www.npmjs.com/package/@dawnjs/cli"">
    <img src=""https://img.shields.io/npm/v/@dawnjs/cli.svg"" alt=""npm version"">
  </a>
  <a href=""https://github.com/alibaba/dawn/actions/workflows/main.yml"">
    <img src=""https://github.com/alibaba/dawn/actions/workflows/main.yml/badge.svg"" alt=""CI"">
  </a>
  <a href=""https://www.npmjs.com/package/@dawnjs/cli"">
    <img src=""https://img.shields.io/npm/dt/@dawnjs/cli.svg"" alt=""npm downloads"">
  </a>
</p>

<pre align=""center"">npm i <a href=""https://www.npmjs.com/package/@dawnjs/cli"">@dawnjs/cli</a> -g</pre>

[README in English](README-intl.md)

Dawn 取「黎明、破晓」之意，原为「阿里云·业务运营团队」内部的前端构建和工程化工具，现已完全开源。它通过 `pipeline` 和 `middleware` 将开发过程抽象为相对固定的阶段和有限的操作，简化并统一了开发人员的日常构建与开发相关的工作。

## 特点

- 采用中间件技术，封装常用功能，易于扩展，方便重用
- 支持 pipeline 让多个 task 协同完成构建任务
- 简单、一致的命令行接口，易于开发人员使用
- 支持基于「中心服务」管理中间件和工程模板
- 支持搭建私有中心服务，并统一下发构建规则，易于团队统一管理

## 安装

```sh
$ npm install @dawnjs/cli -g
```

## 使用

```sh
# 1. 创建 & 初始化
$ dn init -t front

# 2. 开发 & 实时编译
$ dn dev

# 3. 语法检查 & 测试
$ dn test

# 4. 构建 & 打包
$ dn build
```

## 示例（.dawn.yml 或 .dawn 目录）

```yml
# 启动开发服务
dev:
  - name: '@dawnjs/dn-middleware-webpack'
    env: development
    entry: ./src/*.js
    template: ./assets/*.html
    serverOpts:
      port: 8001

# 直接构建
buid:
  - name: '@dawnjs/dn-middleware-webpack'
    env: production
    entry: ./src/*.js
    template: ./assets/*.html
```

## 文档

- 使用入门：[getting-started.md](docs/markdowns/getting-started.md)
- 配置 Pipeline：[pipeline.md](docs/markdowns/pipeline.md)
- 中间件：[middleware.md](docs/markdowns/middleware.md)
- 更多文档：[https://alibaba.github.io/dawn/docs/](https://alibaba.github.io/dawn/docs/)

## 其它

- [贡献](CONTRIBUTING-zh.md)
- [更新日志](CHANGELOG.md)
- [MIT 协议](https://tldrlegal.com/license/mit-license)
",1144,1144,50,29,construction,"[build, build-tool, construction, dawn, dawn-cli, front-end, javascript, middleware, nodejs, pack, pipeline, task]",23
jwiegley,category-theory,,https://github.com/jwiegley/category-theory,https://api.github.com/repos/category-theory/jwiegley,An axiom-free formalization of category theory in Coq for personal study and practical work,"# Category Theory in Coq

This development encodes category theory in Coq, with the primary aim being to
allow representation and manipulation of categorical terms, as well
realization of those terms in various target categories.

- Versions used: [Coq](https://github.com/coq/coq/) 8.14.1, 8.15.2, 8.16+rc1.
- Some parts depend on [Coq-Equations](https://github.com/mattam82/Coq-Equations) 1.2.4, 1.3.

## Usage

It is recommended to include this library in your developments by adding the
following to your `_CoqProject` file:

    -R <path to this library> Category

Then include the primary elements of the library using:

    Require Import Category.Theory.

## Library structure

This library is broken up into several major areas:

  - Core `Theory`, covering topics such as categories, functors, natural
    transformations, adjunctions, kan extensions, etc.

  - Categorical `Structure`, which reveals internal structure of a category by
    way of morphisms related to some universal property.

  - Categorical `Construction`, which introduces external structure by
    building new categories out of existing ones.

  - Species of different kinds of `Functor`, `Natural.Transformation`,
    `Adjunction` and `Kan.Extension`; for example: categories with monoidal
    structure give rise to monoidal functors preserving this structure, which
    in turn leads to monoidal transformations that transform functors while
    preserving their monoidal mapping property.

  - The `Instance` directory defines various categories; some of these are
    fairly general, such as the category of preorders, applicable to any
    `PreOrder` relation, but in general these are either not defined in terms
    of other categories, or are sufficiently specific.

  - When a concept, such as limits, can be defined using more fundamental
    terms, that version of limits can be found in a subdirectory of the
    derived concept, for example there is `Category.Structure.Limit` and
    `Category.Limit.Kan.Extension`. This is done to demonstrate the
    relationship of ideas; for example:
    `Category.Construction.Comma.Natural.Transformation`. As a result, files
    with the same name occur often, with the parent directory establishing
    intent.

### Programming sub-library

Within `Theory.Coq` there is now a sub-library that continues work started in
the [coq-haskell](https://github.com/jwiegley/coq-haskell/) library. This
sub-library is specifically aimed at ""applied category theory"" for programmers
in the category of Coq types and functions. The aim is to mimic the utility of
Haskell's monad hierarchy -- but for Coq users, similar to what ext-lib
achieves. I've also adjusted a few of my notations to more closely match
ext-lib.

Where this library differs, and what is considered the main contribution of
this work, is that laws are not defined for these structures in the
sub-library. Rather, the programmer establishs that her Monad is lawful by
proving that a mapping exists from that definition into the general definition
of monads (found in `Theory.Monad`) specialized to the category Coq. In this
way the rest of the category-theory library is leveraged to discharge these
proof obligations, while keeping the programmatic side as simple as possible.

For example, it is trivial to define the composition of two Applicatives. What
is not so trivial is proving that this is truly an Applicative, based on that
simple definition. While this proof was done in coq-haskell, it requires a bit
of Ltac magic to keep the size down:

```
Program Instance Compose_ApplicativeLaws
  `{ApplicativeLaws F} `{ApplicativeLaws G} : ApplicativeLaws (F \o G).
Obligation 2. (* ap_composition *)
  (* Discharge w *)
  rewrite <- ap_comp; f_equal.
  (* Discharge v *)
  rewrite <- !ap_fmap, <- ap_comp.
  symmetry.
  rewrite <- ap_comp; f_equal.
  (* Discharge u *)
  apply_applicative_laws.
  f_equal.
  extensionality y.
  extensionality x.
  extensionality x0.
  rewrite <- ap_comp, ap_fmap.
  reflexivity.
Qed.
```

What's ill-gotten about this proof is that it's confined to the very specific
case of Coq applicative endo-functors. However, there is a more general truth,
which is that any two lax monoidal functors in any monoidal category also
compose. So why not appeal to that proof to establish that our programmatic
applicative in Coq is lawful by construction?

This is what the new sub-library does. Since the more general proof is already
completed (and is too large to paste here), one may appeal to it directly to
establish the desired fact:

```
(* The composition of two applicatives is itself applicative. We establish
   this by appeal to the general proofs that:

   1. every Coq functor has strength;
   2. (also, but not needed: any two strong functors compose to a strong
      functor; if it is a Coq functor it is known to have strength); and
   3. any two lax monoidal functors compose to a lax monoidal functor. *)

Theorem Compose_IsApplicative
  `(HF : EndoFunctor F)
  `(AF : @Functor.Applicative.Applicative _ _ (FromAFunctor HF))
  `(HG : EndoFunctor G)
  `(AG : @Functor.Applicative.Applicative _ _ (FromAFunctor HG)) :
  IsApplicative (Compose_IsFunctor HF HG)
    (@Compose_Applicative
       F HF (EndoApplicative_Applicative HF AF)
       G HG (EndoApplicative_Applicative HG AG)).
Proof.
  construct.
  - apply (@Compose_LaxMonoidalFunctor _ _ _ _ _ _ _ _ AF AG).
  - apply Coq_StrongFunctor.
Qed.
```

This proof pulls in several instances to establish that the category Coq is
cartesian, closed, and thus closed monoidal, etc.

The hope is this will become a happy marriage of simple, useful computational
constructions for Coq programmers, with relevant proof results from what
category theory tells us about these structures in general, such as the above
fact concerning composition of monoidal functors.

## Duality

The core theory is defined in such a way that ""the dual of the dual"" is
evident to Coq by mere simplification (that is, ""C^op^op = C"" follows by
reflexivity for the opposite of the opposite of categories, functors, natural
transformation, adjunctions, isomorphisms, etc.).

For this to be true, certain artificial constructions are necessary, such as
repeating the associativity law for categories in symmetric form, and likewise
the naturality condition of natural transformations. This repeats proof
obligations when constructing these objects, but pays off in the ability to
avoid repetition when stating the dual of whole structures.

As a result, the definition of comonads, for example, is reduced to one line:

    Definition Comonad `{M : C ⟶ C} := @Monad (C^op) (M^op).

Most dual constructions are similarly defined, with the exception of `Initial`
and `Cocartesian` structures. Although the core classes are indeed defined in
terms of their dual construction, an alternate surface syntax and set of
theorems is provided (for example, using `a + b` to indicate coproducts) to
make life is a little less confusing for the reader. For instance, it follows
from duality that `0 + X ≅ X` is just `1 × X ≅ X` in the opposite category,
but using separate notations makes it easier to see that these two
isomorphisms in the *same* category are not identical. This is especially
important because Coq hides implicit parameters that would usually let you
know duality is involved.

## Design decisions

Some features and choices made in this library:

  - Type classes are used throughout to present concepts. When a type class
    instance would be too general -- and thus overlap with other instances --
    it is presented as a definition that can later be added to instance
    resolution with `Existing Instance`.

  - All definitions are in Type, so that `Prop` is not used anywhere except
    specific category instances defined over `Prop`, such as the category
    `Rel` with heterogeneous relations as arrows.

  - No axioms are used anywhere in the core theory; they appear only at times
    when defining specific category instances, mostly for the `Coq` category.

  - Homsets are defined as computationally-relevant homsetoids (that is, using
    `crelation`). This is done using a variant of the `Setoid` type class
    defined for this library; likewise, the category of `Sets` is actually the
    category of such setoids. This increases the proof work necessary to
    establish definitions -- since preservation of the equivalence relation is
    required at all levels -- but allows categories to be flexible in what it
    means for two arrows to be equivalent.

## Notations

There are many notations used through the library, which are chosen in an
attempt to make complex constructions appear familiar to those reading modern
texts on category theory. Some of the key notations are:

 - `≈` is equivalence; equality is almost never used.
 - `≈[Cat]` is equivalence between arrows of some category, here `Cat`; this
   is only needed when type inference fails because it tries to find both the
   type of the arguments, and the type class instance for the equivalence
 - `≅` is isomorphism; apply it with `to` or `from`
 - `≊` is used specifically for isomorphisms between homsets in `Sets`
 - `iso⁻¹` also indicates the reverse direction of an isomorphism
 - `X ~> Y`: a squiggly arrow between objects is a morphism
 - `X ~{C}~> Y`: squiggly arrows may also specify the intended category
 - `id[C]`: many known morphisms allow specifying the intended category;
   sometimes this is even used in the printing format
 - `C ⟶ D`: a long right arrow between categories is a functor
 - `F ⟹ G`: a long right double arrow between functors is a natural
   transformation
 - `f ∘ g`: a small centered circle is composition of morphisms, or horizontal
   composition generally
 - `f ∘[Cat] g`: composition can specify the intended category, as an aid to
   type inference
   composition generally
 - `f ○ g`: a larger hollow circle is composition of functors
 - `f ⊙ g`: a larger circle with a dot is composition of isomorphisms
 - `f ∙ g`: a solid composition dot is composition of natural
   transformations, or vertical composition generally
 - `f ⊚ g`: a larger circle with a smaller circle is composition of
   adjunctions
 - `([C, D])`: A pair of categories in square brackets is another way to give
   the type of a functor, being an object of the category `Fun(C, D)`
 - `F ~{[C, D]}~> G`: An arrow in a functor category is a natural
   transformation
 - `F ⊣ G`: the turnstile is used for adjunctions
 - Cartesian categories use `△` as the `fork` operation and `×` for products
 - Cocartesian categories use `▽` as the `merge` operation and `+` for
   coproducts
 - Closed categories use `^` for exponents and `≈>` for the internal hom
 - As objects, the numbers `0` and `1` refer to initial and terminal objects
 - As categories, the numbers `0` and `1` refer to the initial and terminal
   objects of `Cat`
 - Products of categories can be specified using `∏`, which does not require
   pulling in the cartesian definition of `Cat`
 - Coproducts of categories can be specified using `∐`, which does not require
   pulling in the cocartesian definition of `Cat`
 - Products of functors are given with `F ∏⟶ G`, combining product and functor
   notations; the same for `∐⟶`
 - Comma categories of two functors are given by `(F ↓ G)`
 - Likewise, the arrow category of `C⃗`
 - Slice categories use a unicode forward slash `C̸c`, since the normal forward
   slash is not considered an operator
 - Coslice categories use `c ̸co C`, to avoid ambiguity

## Future directions

### Computational Solver

There are some equivalences in category-theory that are very easily expressed
and proven, but slow to establish in Coq using only symbolic term rewriting.
For example:

    (f ∘ g) △ (h ∘ i) ≈ split f h ∘ g △ i

This is solved by unfolding the definition of split, and then rewriting so
that the fork operation (here given by `△`) absorbs the terms to its left,
followed by observing the associativity of composition, and then simplify
based on the universal properties of products. This is repeated several times
until the prove is trivially completed.

Although this is easy to state, and even to write a tactic for, it can be
extremely slow, especially when the types of the terms involved becomes large.
A single rewrite can take several seconds to complete for some terms, in my
experience.

The goal of this solver is to reify the above equivalence in terms of its
fundamental operations, and then, using what we know about the laws of
category theory, to compute the equivalence down to an equation on indices
between the reduced terms. This is called *computational reflection*, and
encodes the fact that our solution only depends on the categorical structure
of the terms, and not their type.

That is, an incorrectly-built structure will simply fail to solve; but since
we're reflecting over well-typed expressions to build the structure we pass to
the solver, combined with a proof of soundness for that solver, we can know
that solvable, well-typed, terms always give correct solutions. In this way,
we transfer the problem to a domain without types, only indices, solve the
structural problem there, and then bring the solution back to the domain of
full types by way of the soundness proof.

### Compiling to categories

Work has started in `Tools/Abstraction` for compiling monomorphic Gallina
functions into ""categorical terms"" that can then be instantiated in any
supporting target category using Coq's type class instance resolution.

This is as a Coq implementation of an idea developed by Conal Elliott, which
he first implemented in and for Haskell. It is hoped that the medium of
categories may provide a sound means for transporting Gallina terms into other
syntactic domains, without relying on Coq's extraction mechanism.

## License

This library is made available under the MIT license, a copy of which is
included in the file `LICENSE`. Basically: you are free to use it for any
purpose, personal or commercial (including proprietary derivates), so long as
a copy of the license file is maintained in the derived work. Further, any
acknowledgement referring back to this repository, while not necessary, is
certainly appreciated.

John Wiegley
",703,703,18,3,construction,"[cartesian, cartesian-closed-category, categories, category, category-theory, comonads, construction, coq, functor, monad, monoid, profunctor, profunctor-composition]",23
larsjanssen6,underconstruction,,https://github.com/larsjanssen6/underconstruction,https://api.github.com/repos/underconstruction/larsjanssen6,"This Laravel 8 package makes it possible for you to set your website in ""Under Construction"" mode. Only users with the correct 4 (or more) digit code can access your site. :fire:  :boom: :fire:","# Laravel Under Construction <img width=""45"" alt=""schermafbeelding 2017-09-27 om 23 08 12"" src=""https://user-images.githubusercontent.com/7254997/30937972-c9632d04-a3d8-11e7-87f3-c44ce2b86d24.png"">

[![StyleCI](https://styleci.io/repos/104500164/shield)](https://styleci.io/repos/104500164)
[![Packagist](https://img.shields.io/packagist/l/doctrine/orm.svg)](https://github.com/larsjanssen6/underconstruction/blob/master/LICENSE.md)
 <a href=""https://twitter.com/larsjansse"">
   <img src=""http://img.shields.io/badge/author-@larsjansse-blue.svg?style=flat-square"">
 </a>
[![Total Downloads](https://poser.pugx.org/larsjanssen6/underconstruction/downloads)](https://packagist.org/packages/larsjanssen6/underconstruction)

<a href=""https://www.buymeacoffee.com/nFdwPZel9"" target=""_blank""><img src=""https://www.buymeacoffee.com/assets/img/custom_images/orange_img.png"" alt=""Buy Me A Coffee"" style=""height: auto !important;width: auto !important;"" ></a>

This Laravel package makes it possible to set your website in ""Under Construction"" mode. Only users with the correct 4 digit code can access your site. This package can for example be useful to show your website to a specific client. Everything works out of the box, and it's fully customizable.

<strong style=""color:red;"">If you appreciate my work please give this repo a star or buy me a coffee ^ 🤗.</strong>

<img width=""850"" alt=""underconstruction"" src=""https://user-images.githubusercontent.com/7254997/30869205-d96d9962-a2e0-11e7-9044-0a7ff708e6c3.png"">

## Installation

Begin by installing this package through Composer (Laravel 6, 7, 8, 9 and 10 compatible!).

```bash
composer require larsjanssen6/underconstruction
```

The ```\LarsJanssen\UnderConstruction\UnderConstruction::class``` middleware must be registered in the kernel:

```php
//app/Http/Kernel.php

protected $routeMiddleware = [
  // ...
  'under-construction' => \LarsJanssen\UnderConstruction\UnderConstruction::class,
];
```

### Defaults

Publish the default configuration file.

```bash
php artisan vendor:publish

# Or...

php artisan vendor:publish --provider=""LarsJanssen\UnderConstruction\UnderConstructionServiceProvider""
```

This package is fully customizable. This is the content of the published config file `under-construction.php`:

```php
<?php

return [

    /*
     * Activate under construction mode.
     */
    'enabled' => env('UNDER_CONSTRUCTION_ENABLED', true),

    /*
     * Hash for the current pin code
     */
    'hash' => env('UNDER_CONSTRUCTION_HASH', null),

    /*
     * Under construction title.
     */
    'title' => 'Under Construction',

    /*
     * Custom Route Prefix
     * */
    'route-prefix' => env('UNDER_CONSTRUCTION_ROUTE_PREFIX','under'),

    /*
     * Custom Endpoint if you don't want to use 'construction'
     * e.g. if you change to 'checkpoint', the route prefix
     * above will be appended giving you 'under/checkpoint'
     * */
    'custom-endpoint' => env('UNDER_CONSTRUCTION_CUSTOM_ENDPOINT','construction'),


    /*
     * Back button translation.
     */
    'back-button' => 'back',

    /*
    * Show button translation.
    */
    'show-button' => 'show',

    /*
     * Hide button translation.
     */
    'hide-button' => 'hide',

    /*
     * Show loader.
     */
    'show-loader' => true,

    /*
     * Redirect url after a successful login.
     */
    'redirect-url' => '/',

    /*
     * Enable throttle (max login attempts).
     */
    'throttle' => true,

        /*
        |--------------------------------------------------------------------------
        | Throttle settings (only when throttle is true)
        |--------------------------------------------------------------------------
        |
        */

        /*
        * Set the amount of digits (max 6).
        */
        'total_digits' => 4,

        /*
         * Set the maximum number of attempts to allow.
         */
        'max_attempts' => 3,

        /*
         * Show attempts left.
         */
        'show_attempts_left' => true,

        /*
         * Attempts left message.
         */
        'attempts_message' => 'Attempts left: %i',

        /*
         * Too many attempts message.
         */
        'seconds_message' => 'Too many attempts please try again in %i seconds.',

        /*
         * Set the number of minutes to disable login.
         */
        'decay_minutes' => 5,

        /*
         * Prevent the site from being indexed by Robots when locked
         */
        'lock_robots' => true,
];
```

## Usage

You'll have to set a 4 digit code (you can change this up to 6 in config file). You can do that by running this custom
artisan command (in this example the code is ```1234``` ,you can obviously set another code). It
will generate a hash that will be stored in your `.env` file. 

```bash
php artisan code:set 1234
```

You can set routes to be in ""Under Construction"" mode by using the `under-construction`-middleware on them.

```php
Route::group(['middleware' => 'under-construction'], function () {
    Route::get('/live-site', function() {
        echo 'content!';
    });
});
```

## Changelog

Please see [CHANGELOG](CHANGELOG.md) for more information on what has changed recently.

## Testing

``` bash
composer test
```

## Contributing

I would love to hear your ideas to improve my codeing style and conventions. Feel free to contribute.

## Security

If you discover any security related issues, please email larsjanssen64@gmail.com. You can also make an issue. 

## Credits

- [Lars Janssen](https://github.com/larsjanssen6)
- [All Contributors](../../contributors)

## About me
I'm Lars Janssen from The Netherlands and like to work on web projects. You can
follow me on <a href=""https://twitter.com/larsjansse"">Twitter</a>.

## License

The MIT License (MIT). Please see [License File](LICENSE.md) for more information.

## ❤️ Open-Source Software - Give ⭐️
We have included the awesome `symfony/thanks` composer package as a dev
dependency. Let your OS package maintainers know you appreciate them by starring
the packages you use. Simply run composer thanks after installing this package.
(And not to worry, since it's a dev-dependency it won't be installed in your
live environment.)

",568,568,11,8,construction,"[construction, construction-mode, customizable, javascript, laravel-mix, laravel6, laravel7, laravel8, middleware, php7, php8, underconstruction, vuejs2, webpack]",23
viliwonka,KDTree,,https://github.com/viliwonka/KDTree,https://api.github.com/repos/KDTree/viliwonka,"Fast KDTree for Unity, with thread-safe querying.","# KDTree

### Description

3D KDTree for Unity, with fast construction and fast & thread-safe querying, with minimal memory garbage.

### It was designed:

* to be working with Unity Vector3 structs, but can be modified to work with any other 3D (or 2D & 4D or higher) struct/arrays
* for speedy & light Construction & Reconstruction,
* to be light on memory, everything is pooled,
* for fast querying, 
* queryable from multiple threads (thread-safe),

### Query modes:
* K-Nearest
* Closest point query
* Radius query
* Interval query

### How to use

#### Construction

First you need some array of points.

Example:

```cs
Vector3[] pointCloud = new Vector3[10000];

for(int i = 0; i < pointCloud.Length; i++)
	pointCloud[i] = Random.insideUnitSphere;
```

Then build the tree out of it. Note that original pointCloud shouldn't change, since tree is referencing it!

Note: Higher maxPointsPerLeafNode makes construction of tree faster, but querying slower.
And true is inverse: Lower maxPointsPerLeafNode makes construction of tree slower, but querying faster.
```cs
int maxPointsPerLeafNode = 32;
KDTree tree = new KDTree(pointCloud, maxPointsPerLeafNode);
```

#### Reconstruction

If you wish to update points and reconstruct tree, you do it like this:

```cs
for(int i = 0; i < tree.Count; i++) {
    tree.Points[i] += Func(tree.Points[i]);
}

tree.Rebuild();
```

Such rebuilding will be with zero GC impact.

Other functions for rebuilding (data will be copied from array/list, not reference!).
```cs
public void Build(Vector3[] newPoints, int maxPointsPerLeafNode = -1);
public void Build(List<Vector3> newPoints, int maxPointsPerLeafNode = -1);
```

#### Querying

Now that tree has been constructed, make a KDQuery object. 

Note: if you wish to do querying from multiple threads, then each own thread should have it's own KDQuery object.

```cs
Query.KDQuery query = new Query.KDQuery();
```

For most query methods you need pre-initialized results list & reference to tree that you wish to query.
Results list will contain indexes for pointCloud array.

List should be cleared; but it's not necesary to clear it (if you wish to do multiple queries), but this way you will have duplicate indexes.

Query objects should be re-used, since it pools everything - to avoid unnecesarry allocations and deallocations.
```cs
List<int> results = new List<int>();

// spherical query
query.Radius(tree, position, radius, results);

// returns k nearest points         
query.KNearest(tree, position, k, results);

// bounds query
query.Interval(tree, min, max, results);

// closest point query
query.ClosestPoint(tree, position, results);
```

#### Post Query

If you wish to do something with query results, then use it like this:
```cs
for(int i = 0; i < results.Count; i++) {
	
	Vector3 p = pointCloud[results[i]];
	Draw(p);
}
```

### Demos

Those demos show rebuilding tree & querying of Live Lorenz Attractor point cloud.

Drawing traversal nodes of KNearest Query

![alt-text](https://raw.githubusercontent.com/viliwonka/KDTree/master/Media/FrontPic.PNG)

KNearest Query

![alt-text](https://raw.githubusercontent.com/viliwonka/KDTree/master/Media/KNearestQuery.gif)

Radius Query

![alt-text](https://raw.githubusercontent.com/viliwonka/KDTree/master/Media/RadiusQuery.gif)

Interval/Bounds Query

![alt-text](https://raw.githubusercontent.com/viliwonka/KDTree/master/Media/IntervalQuery.gif)


### How it works?

#### Construction

Uses internal permutation array, so it doesn't modify original data array. Permutation is identity array at first (arr[i] = i), then gets sorted down the line.
Hoare partitioning enables to sort permutation array inplace. (Quicksort uses hoare partitioning, too).
Mid-point rule is used for node splitting - not the most optimal split but makes construction much faster.

#### KDQuery

All traversal nodes are pooled in internal queue.
Uses binary heap for KNearest query. Heaps for all sizes are pooled inside KDQuery object.

### Sources

https://www.cs.umd.edu/~mount/Papers/cgc99-smpack.pdf - Paper about slidding mid-point rule for node splitting.

### Jobified KDTree

There is heavily modified version of this source, that runs on Unity Job System (not made by me).
Also note that tests are wrong - you are supposed to reuse Query objects, not always create new ones, hence the GC.
https://github.com/ArthurBrussee/KNN
",463,463,11,2,construction,"[construction, hoare-partitioning, kd-tree, node-splitting, permutation-array, pooled, thread-safe, unity-3d]",23
IFCjs,web-ifc-three,IFCjs,https://github.com/IFCjs/web-ifc-three,https://api.github.com/repos/web-ifc-three/IFCjs,The official IFC Loader for Three.js.,"<p align=""center"">
  <a href=""https://ifcjs.github.io/info/"">ifc.js</a>
  |
  <a href=""https://ifcjs.github.io/info/docs/Guide/web-ifc-three/Introduction"">documentation</a>
  |
  <a href=""https://ifcjs.github.io/web-ifc-three/example/"">demo</a>
  |
  <a href=""https://discord.gg/FXfyR4XrKT"">discord</a>
  |
  <a href=""https://github.com/IFCjs/web-ifc-three/tree/master/example"">usage example</a>
  |
  <a href=""https://www.npmjs.com/package/web-ifc-three"">npm package</a>
</p>

<img src=""banner.png"">

<h1>THIS LIBRARY IS DEPRECATED. USE <a href=""https://github.com/ifcjs/components"">COMPONENTS</a> INSTEAD</h1>

<h1>web-ifc-three <img src=""https://ifcjs.github.io/info/img/logo.svg"" width=""32""></h1>

![npm](https://img.shields.io/npm/dw/web-ifc-three)
![opencollective](https://opencollective.com/ifcjs/tiers/badge.svg)

This library is the implementation of [web-ifc](https://github.com/tomvandig/web-ifc) for [THREE.js](https://github.com/mrdoob/three.js/). This allows to parse and generate the Three.js geometry of IFC models in JavaScript, both in the browser and on a Node server, as well as query the IFC data and override it.

This is [the official IFCLoader of Three.js](https://github.com/mrdoob/three.js/).

## Status

**web-ifc-three** creates efficient geometries that you can add to your Three.js scene. You can then use the methods provided in our API to work with that geometry, including efficient selection, visibility, subset generation, etc.

Similarly to web-ifc, although it is quite stable and fast already, web-ifc-three is in **pre-alpha status** until ifc support matures. The list of currently supported ifc elements, or level of support for different ifc types, is an undocumented work in progress.

## Documentation

Check out [our official docs](https://ifcjs.github.io/info/docs/Guide/web-ifc-three/Introduction) for API reference, guides and tutorials.

## Install

`npm install web-ifc-three`

## Quick setup

To set up a project quickly, check out our [hello world example](https://ifcjs.github.io/info/docs/Hello%20world).

## Content

This project consists of the following folders:

- **web-ifc-three**: contains the source code.

- **example**: contains one example of how to use the library.

## Contributing

Want to help out? Great!

Please checkout [our contribution suggestions](https://github.com/IFCjs/web-ifc-three/blob/main/CONTRIBUTING.md) or speak to us directly in [Discord](https://discord.gg/FXfyR4XrKT).
",462,462,17,40,construction,"[aec, architecture, bim, construction, engineering, ifc, openbim]",23
gkjohnson,three-bvh-csg,,https://github.com/gkjohnson/three-bvh-csg,https://api.github.com/repos/three-bvh-csg/gkjohnson,"A flexible, memory compact, fast and dynamic CSG implementation on top of three-mesh-bvh","# three-bvh-csg

[![npm version](https://img.shields.io/npm/v/three-bvh-csg.svg?style=flat-square)](https://www.npmjs.com/package/three-bvh-csg)
[![build](https://img.shields.io/github/actions/workflow/status/gkjohnson/three-bvh-csg/node.js.yml?style=flat-square&label=build&branch=main)](https://github.com/gkjohnson/three-bvh-csg/actions)
[![github](https://flat.badgen.net/badge/icon/github?icon=github&label)](https://github.com/gkjohnson/three-bvh-csg/)
[![twitter](https://flat.badgen.net/badge/twitter/@garrettkjohnson/?icon&label)](https://twitter.com/garrettkjohnson)
[![sponsors](https://img.shields.io/github/sponsors/gkjohnson?style=flat-square&color=1da1f2)](https://github.com/sponsors/gkjohnson/)

![](./docs/csg-banner.png)

An _experimental, in progress_, flexible, memory compact, fast and dynamic [Constructive Solid Geometry](https://en.wikipedia.org/wiki/Constructive_solid_geometry) implementation on top of [three-mesh-bvh](https://github.com/gkjohnson/three-mesh-bvh). More than 100 times faster than other BSP-based three.js CSG libraries in complex cases. Contributions welcome!

> **Note**
> All brush geometry must be [two-manifold](https://knowledge.autodesk.com/support/maya-lt/learn-explore/caas/CloudHelp/cloudhelp/2015/ENU/MayaLT/files/Polygons-overview-Twomanifold-vs--nonmanifold-polygonal-geometry-htm.html) - or water tight with no triangle interpenetration.

> **Warning**
> Due to numerical precision and corner cases resulting geometry may not be correctly completely two-manifold.

# Roadmap / Help Wanted

- Fix triangle splitting / missing triangle issues [#73](https://github.com/gkjohnson/three-bvh-csg/issues/73) [#68](https://github.com/gkjohnson/three-bvh-csg/issues/68)
- Polygon splitting & triangulation [#51](https://github.com/gkjohnson/three-bvh-csg/issues/51)
- Worker Support [#14](https://github.com/gkjohnson/three-bvh-csg/issues/14)

[And more!](https://github.com/gkjohnson/three-bvh-csg/issues?q=is%3Aissue+is%3Aopen+label%3A%22help+wanted%22)

# Examples

[Simple CSG](https://gkjohnson.github.io/three-bvh-csg/examples/bundle/simple.html)

[Complex Model CSG](https://gkjohnson.github.io/three-bvh-csg/examples/bundle/geometry.html)

[Multi Material CSG](https://gkjohnson.github.io/three-bvh-csg/examples/bundle/multimaterial.html)

[Multi Operation CSG](https://gkjohnson.github.io/three-bvh-csg/examples/bundle/multiop.html)

[Hierarchical Operations](https://gkjohnson.github.io/three-bvh-csg/examples/bundle/hierarchy.html)

# Use

```js
import { SUBTRACTION, Brush, Evaluator } from 'three-bvh-csg';
import { MeshStandardMaterial, Mesh, SphereGeometry, BoxGeometry } from 'three';

const brush1 = new Brush( new SphereGeometry() );
brush1.updateMatrixWorld();

const brush2 = new Brush( new BoxGeometry() );
brush2.position.y = 0.5;
brush2.updateMatrixWorld();

const evaluator = new Evaluator();
const result = evaluator.evaluate( brush1, brush2, SUBTRACTION );

// render the result!
```

# API

## Constants

### CSGOperations

CSG operations enums for use with `Evaluator`.

```js
ADDITION              // A ∪ B
SUBTRACTION           // A - B
REVERSE_SUBTRACTION   // B - A
DIFFERENCE            // A ⊕ B
INTERSECTION          // A ∩ B

// ""Hollow"" operations are non-solid and result in simply removing the geometry
// within Brush B from brush A. For these operations Brush A can be non-manifold
// but it is still required that Brush B be a water-tight, two-manifold mesh.
HOLLOW_SUBTRACTION    // A - B
HOLLOW_INTERSECTION   // A ∩ B
```

## Brush

_extends THREE.Mesh_

An object with the same interface as `THREE.Mesh` but used to evaluate CSG operations. Once a brush is created the geometry should not be modified.

> **Note**
>
> It is recommended to remove groups from a geometry before creating a brush if multi-material support is not required.

## Operation

_extends Brush_

This is an extension of the `Brush` class. With this class is possible to create a mesh and pass the CSG Operation constant to define which operation computes on the mesh. The result is a Mesh whose effect is defined from the operation selected. You can see how it works in the _hierarchy_ example.

### .operation

```js
operation = ADDITION : CSGOperation
```

The operation to perform on the next brush in processing chain when running `Evaluater.evaluateHierarchy`.

### .insertBefore

```js
insertBefore( brush : Brush )
```

Inserts the brush before the operation element that calls the method, in the list of the children of the operation's parent.

### .insertAfter

```js
insertAfter( brush : Brush )
```

Inserts the brush after the operation element that calls the method, in the list of the children of the operation's parent.

## OperationGroup

_extends THREE.Group_

A class with the same interface as `THREE.Group` but used to group a list of Operation mesh through the `.add` method inherited from the THREE.Group class. You can create a group starting from single Operation meshes as in the _hierarchy_ example.

## Evaluator

### .useGroups

```js
useGroups = true : Boolean
```

Whether to use geometry groups when processing the geometry. If geometry groups are used then a material array and groups will be assigned to the target `Brush` after processing. If groups are disabled then a single coherent piece of geometry with no groups will be produced.

### .consolidateGroups

```js
consolidateGroups = true : Boolean
```

If true then any group in the final geometry that shares a common material with another group will be merged into one to reduce the number of draw calls required by the resulting mesh.

### .evaluate

```js
evaluate(
	brushA : Brush,
	brushB : Brush,
	operation : CSGOperation,
	target = null : Brush | Mesh
) : Brush | Mesh

// or

evaluate(
	brushA : Brush,
	brushB : Brush,
	operations : Array<CSGOperation>,
	targets : Array<Brush | Mesh>
) : Array<Brush | Mesh>
```

Performs the given `operation` on `brushA` with `brushB`. If no target is provided then a new `Brush` will be created with the new geometry. Otherwise the provided Brush will be _modified in place_ and geometry disposed or marked for update as needed.

If arrays are provided for the ""targets"" and ""operations"" arguments then multiple results from different operations can be produced at once with minimal additional overhead.


### .evaluateHierarchy

```js
evaluateHierarchy(
  root: Operation,
  target = null : Brush | Mesh
) : Brush | Mesh
```

The method gets as parameters a root, an Operation mesh and a target if it is provided, otherwise, a new `Brush` will be created.
First sets the `updateMatrixWolrd` of the root to true then calls the traverse function with the root parameter to `evaluate` the mesh and its children.

```js
evaluate( brush, child, child.operation );
```

In this case, the arguments passed to `evaluate` is the `root` as `brushA`, the child as `brushB` and the `child.operation` as the operation to apply to the mesh.

## OperationDebugData

This class is used in the constructor of the Evaluator class. When the Evaluator is defined the constructor creates a debug property of type OperationDebugData and it is used to set the debug context, that is `addEdge` and `addIntersectionTriangles` to, for example, an EdgesHelper or a TriangleHelper.

### .enabled

```js
enabled = false : Boolean
```

Whether to collect the debug data during CSG operations which has a performance a memory cost.

### .intersectionEdges

```js
intersectionEdges = [] : Line3
```

A list of edges formed by intersecting triangles during the CSG process.

<!--
## EvaluatorWorker

_extends Evaluator_

### .evaluate

TODO

### .evaluateHierarchy

TODO
-->

## GridMaterial

_extends THREE.MeshPhongMaterial_

A material with the same interface as `THREE.MeshPhongMaterial`. It adds a stylized grid on the mesh for more easily visualizing mesh topology and measurements.

### .enableGrid

```js
enableGrid = true : Boolean
```

Sets the visibility of the grid on the mesh.


## HalfEdgeMap

TODO

### constructor

```js
constructor( geometry : BufferGeometry = null )
```

### .getSiblingTriangleIndex

```js
getSiblingTriangleIndex( triIndex : Number, edgeIndex : 0 | 1 | 2 ) : Number
```

### .getSiblingEdgeIndex

```js
getSiblingEdgeIndex( triIndex : Number, edgeIndex : 0 | 1 | 2 ) : Number
```

### .updateFrom

```js
updateFrom( geometry : BufferGeometry ) : void
```

## PointsHelper

_extends THREE.InstancedMesh_

Helper class for generating spheres to display.

### .setPoints

```js
setPoints( points : Vector3[] ) : void;
```

Sets the points, passed as Vector3, and visualizes them as spheres.


## EdgesHelper

_extends THREE.LineSegments_

Helper class for generating a line to display the provided edges.

### .setEdges

```js
setEdges( edges : Line3[] ) : void
```

Sets the list of lines to be visualized.

## HalfEdgeMapHelper

_extends EdgesHelper_

This is a helper class that takes the `HalfEdgeMap` object and visualizes the connectivity between triangles.

### .setHalfEdges

```js
setHalfEdges( geometry : Geometry, halfEdges : HalfEdgeMap ) : void
```

Sets the half edge map to visualize along with the associated geometry.

## TriangleSetHelper

_extends THREE.Group_

Helper class for displaying a set of triangles. In the _Simple CSG_ example is possible to enable/disable the visibility of the triangles helper via `displayTriangleIntersections` checkbox.

The helper is composed of two meshes, one is a mesh with a MeshPhongMaterial and the other is a mesh with a LineBasicMaterial.

### .setTriangles

```js
setTriangles( triangles:  Triangle[] ) : void
```

Sets the geometry of the mesh and the line with the position of the triangles passed as a parameter of the method.

## Functions

### computeMeshVolume

```js
computeMeshVolume( mesh : Mesh | BufferGeometry ) : Number
```

Computes the volume of the given mesh in world space. The world matrix is expected to be updated before calling this function.

# Gotchas
- All geometry are expected to have all attributes being used and of the same type.
- Geometry on a Brush should be unique and not be modified after being set.
- All geometry must be [two-manifold](https://knowledge.autodesk.com/support/maya-lt/learn-explore/caas/CloudHelp/cloudhelp/2015/ENU/MayaLT/files/Polygons-overview-Twomanifold-vs--nonmanifold-polygonal-geometry-htm.html) - or water tight with no triangle interpenetration.
- CSG results use `Geometry.drawRange` to help maintain performance which can cause three.js exporters to fail to export the geometry correctly. It is necessary to convert the geometry to remove the use of draw range before exporting with three.js exporters.

# References
- [Godot CSG](https://github.com/godotengine/godot/blob/master/modules/csg/csg.cpp)
- RealtimeCSG ([Overview](https://www.youtube.com/watch?v=uqaiUMuGlRc), [GDC Presentation](https://www.youtube.com/watch?v=Iqmg4gblreo))
",397,397,25,32,construction,"[3d-printing, computational-solid-geometry, construction, constructive-solid-geometry, csg, game-development, geometry, graphics, three, three-mesh-bvh, threejs, webgl]",23
hypar-io,Elements,hypar-io,https://github.com/hypar-io/Elements,https://api.github.com/repos/Elements/hypar-io,The smallest useful BIM.,"# Elements

![Tag and Publish Alpha](https://github.com/hypar-io/Elements/workflows/Tag%20and%20Publish%20Alpha/badge.svg)
![Build and Test on PR](https://github.com/hypar-io/Elements/workflows/Build%20and%20Test%20on%20PR/badge.svg)
![NuGet](https://img.shields.io/nuget/v/Hypar.Elements.svg)

# Projects
|Name|Description|
|----|----|
|Elements|The core elements library containg the `Element` type, the geometry kernel, and all other core building element types.|
|Elements.Benchmarks|Benchmarks and tracing for Elements.|
|Elements.CodeGeneration|Methods for converting JSON schema of Element types to C#.|
|Elements.Components|Component creation for Elements.|
|Elements.Playground|A live code-editing application for generating elements in the browser.|
|Elements.Serialization.DXF|Methods for serializing a `Model` to and from DXF.|
|Elements.Serialization.IFC|Methods for serializing a `Model` to IFC.|

## Latest Updates
For the latest updates see the [`CHANGELOG`](CHANGELOG.md).

## Getting Started
In a .net core project:
```
> dotnet add package Hypar.Elements
```
In Visual Studio:
```
PM> Install-Package Hypar.Elements
```
## Documentation
Find the documentation [here](https://hypar-io.github.io/Elements/index.html).

## Examples
The best examples are those provided in the [tests](https://github.com/hypar-io/Elements/tree/master/Elements/test), where we demonstrate usage of almost every function in the library.

## What
Elements is a cross-platform library for creating building elements. Elements is for architects, engineers, and other building professionals who want to write code that generates buildings.

When we started [Hypar](https://www.hypar.io) we needed a library that would generate building elements and run at the core of each function on the platform. Because we don't like rebuilding the wheel, we looked around for existing libraries that fulfilled the following requirements:
- The library must be small and fast.
- The library must run in micro-services on Linux.
- The library must have great visual documentation. If we're going to pass this library on as a recommendation to developers on Hypar, we want great docs.
- The library must be free of dependencies on host applications like Rhino or Revit.
- The library must be free of dependencies on proprietary geometry kernels.
- The library must be able to serialize data to formats that are useful to architects, engineers, contractors, and people building real-time visualization applications for AEC, like JSON, [IFC](https://www.buildingsmart.org/about/what-is-openbim/ifc-introduction/),and [glTF](https://www.khronos.org/gltf/).
- The library must be written in a language that supports developer productivity through things like type safety.
- The library should support code re-use in other popular AEC applications like Dynamo, Grasshopper, Revit, and Unity.
- Serialization and deserialization of types that extend `Element` should be possible provided that those types are made up of primitives defined in this library.

We couldn't find anything quite right. So we started building this.

## Design Principles
- An `Element` is a uniquely identifiable piece of a building system.
- Elements can contain references to other elements. Consider a Truss which is made of individual structural framing elements.
- Elements can be instanced. The original element is considered the ""base definition"". An element instance contains a reference to the base element, a transform, and a name.
- Elements is a C# library presently, but we expect that Element types will be used in other languages in the future. Therefore, we shouldn't rely on capabilities of C#, like attributes, to convey meaning of the types or their properties.
- The core Element types will be defined in exactly the same way that third-party types will be defined.
- It is possible that over time these types (ex: Beam, Column, Wall, etc.) are removed from the library and only made available as schemas from which user elements can be derived.

## Why Not Use IFC?
In IFC, Revit, and other ""BIM"" applications, the building element ontology is fixed. If you want to introduce a new element which is key to your work process, you need to find the most closely matching category and put your element there. In Revit you might use the ""Generic"" category. In IFC you might use the `IFCBuildingElementProxy` type. This makes it very difficult for the recipient of a model to reason about the model semantically. Elements enables the user to create ""first class"" element types in the system. If you want to create a Curtain Wall Bracket, you simply create a class `CurtainWallBracket : Element` and users can search for your element by its defined type.

## Geometry
Elements contains a very simple hybrid BREP/CSG geometry kernel, and a small set of geometric types like vectors, lines, arcs, and polygons. Elements uses a right-handed coordinate system with +Z ""up"". Elements is unitless except as indicated when calling a geometric method. For example, arcs requires angles in degrees.

The geometry kernel that we've created for Elements is a very simple BREP kernel which does ""flat stuff with holes in it"" really well. We think Nurbs are sexy, and we'll definitely support more curvy stuff in the future, it's just that the effort required to support arbitrarily complex geometry for micro-services running in the cloud is not small. Professional geometry kernels, like the kind found in mechanical modeling applications, are also usually large, expensive, and not open source. They introduce cost and complexity, and restrict the open nature of code that you write with Elements.

## Precision
Geometry operations in Elements use `Vector3.Epsilon=1e-05` to compare values that should be considered equal. This is important as geometric operations using floating point numbers are imprecise. In addition, .NET will return different values for these operations _on different systems_. We have seen intersection tests that pass on a mac and fail on linux. Please use the provided methods like `double.IsAlmostEqualTo(...)`, `Vector3.IsZero()`, and `Vector3.IsAlmostEqualTo(...)` which account for precision.

## Build
You'll only need to do this if you want to contribute to the library, otherwise you can use the [NuGet package](https://www.nuget.org/) that is published regularly.

```
dotnet build
```

## Test
```
dotnet test
```

## Benchmark
See [Benchmark Documentation](./Elements.Benchmarks/README.md).

## Documentation
When adding sample code you need to add a special block of text to the class or method where you want the code to appear. The value of `name` at the end of the URI will be matched with open and close tags in the test file. See Joist.cs and StructuralFramingTests.cs for an sample.
```
        /// <example>
        /// [!code-csharp[Main](../../Elements/test/StructuralFramingTests.cs?name=example)]
        /// </example>
```
You may add up to one sample glb file per class, and when you name it the name must match the namespace, and class you are trying to demonstrate with `_` instead of `.`.  For example `Elements.Spatial.Grid2d` sample glb is named `Elements_Spatial_Grid2d`.

### Building the Documentation
```
cd doc
docfx -f --serve
```

## Updating the Changelog
We use [`CHANGELOG.md`](CHANGELOG.md) to provide a list of changes to Elements. The easiest way to compile this log for new releases is to look at the commits that occurred between changes. This can be done as follows: `git log --pretty=oneline v0.3.6...v0.3.7`, where the tags are changed appropriately.

## Testing with Notebooks
Elements can be tested in a [Polyglot Notebook](https://marketplace.visualstudio.com/items?itemName=ms-dotnettools.dotnet-interactive-vscode).

To test against a released Elements package, add the following to the top of your notebook.
```
#r ""nuget:Hypar.Elements, *-*""
```

To test against a local build of Elements, add the following to the top of your notebook.
```
#r ""/Users/iankeough/dev/Hypar/Elements/Elements/src/bin/Debug/netstandard2.0/Hypar.Elements.dll""
#r ""nuget:glTF2Loader, 1.1.3-alpha""
#r ""nuget:Unofficial.LibTessDotNet, 2.0.0""
```

## Third Party Libraries and Specifications

- [LibTessDotNet](https://github.com/speps/LibTessDotNet)
- [Clipper](http://www.angusj.com/delphi/clipper.php)
- [GeoJson](http://geojson.org/)
- [glTF](https://www.khronos.org/gltf/).
- [SixLabors.ImageSharp](https://github.com/SixLabors/ImageSharp)
- [SixLabors.ImageSharp.Drawing](https://github.com/SixLabors/ImageSharp.Drawing)
- [SixLabors.Fonts](https://github.com/SixLabors/Fonts)
- [NJsonSchema](https://github.com/RicoSuter/NJsonSchema)
- [Csg](https://github.com/praeclarum/Csg) We work with a customized fork of this project.  Currently using branch `hypars-branch`
- [NetOctree](https://github.com/mcserep/NetOctree)
- [Svg.NET](https://github.com/svg-net/SVG)",305,305,23,85,construction,"[3d, aec, architecture, bim, buildings, construction, engineering, gltf, ifc]",23
nimit95,Real-world-Design-Patterns-Node-JS,,https://github.com/nimit95/Real-world-Design-Patterns-Node-JS,https://api.github.com/repos/Real-world-Design-Patterns-Node-JS/nimit95,All the 23 (GoF) design patterns implemented in Javascript with Real World Example using Node.js APIs,"## Real World Design Patterns using the Node.js APIs

🚀 Introduction
=================

Here you will find the 23 (Gof) design patterns implemented in Javascript using
the ES6 classes with Node.js APIs. These files can be used to learn design
patterns as well as Node APIs, You can use the [**docs.md**](docs.md) to get
overview of all examples.

📒 [All Examples at One Place](docs.md)
------------------

Follows the list of patterns separed by type:

🔨 Creational Patterns
----------------
Creational patterns are ones that create objects for you, rather than having
you instantiate objects directly. This gives your program more flexibility in
deciding which objects need to be created for a given case.

- **Abstract factory:** provide an interface for creating families of related or dependent objects without specifying their concrete classes.
- **Builder:** separate the construction of a complex object from its representation, allowing the same construction process to create various representations.
- **Factory method:** define an interface for creating a single object, but let subclasses decide which class to instantiate. Factory Method lets a class defer instantiation to subclasses.
- **Prototype:** specify the kinds of objects to create using a prototypical instance, and create new objects from the 'skeleton' of an existing object, thus boosting performance and keeping memory footprints to a minimum.
- **Singleton:** ensure a class has only one instance, and provide a global point of access to it.

🚡 Structural Patterns
----------------
These concern class and object composition. They use inheritance to compose interfaces and define ways to compose objects to obtain new functionality.

- **Adapter:** allows classes with incompatible interfaces to work together by wrapping its own interface around that of an already existing class.
- **Bridge:** decouples an abstraction from its implementation so that the two can vary independently.
- **Composite:** composes zero-or-more similar objects so that they can be manipulated as one object.
- **Decorator:** dynamically adds/overrides behaviour in an existing method of an object.
- **Facade:** provides a simplified interface to a large body of code.
- **Flyweight:** reduces the cost of creating and manipulating a large number of similar objects.
- **Proxy:** provides a placeholder for another object to control access, reduce cost, and reduce complexity.

🔗 Behavioral Patterns
----------------
Most of these design patterns are specifically concerned with communication between objects.

- **Chain of responsibility:** delegates commands to a chain of processing objects.
- **Command:** creates objects which encapsulate actions and parameters.
- **Interpreter:** implements a specialized language.
- **Iterator:** accesses the elements of an object sequentially without exposing its underlying representation.
- **Mediator:** allows loose coupling between classes by being the only class that has detailed knowledge of their methods.
- **Memento:** provides the ability to restore an object to its previous state (undo).
- **Observer:** is a publish/subscribe pattern which allows a number of observer objects to see an event.
- **State:** allows an object to alter its behavior when its internal state changes.
- **Strategy:** allows one of a family of algorithms to be selected on-the-fly at runtime.
- **Template:** method defines the skeleton of an algorithm as an abstract class, allowing its subclasses to provide concrete behavior.
- **Visitor:** separates an algorithm from an object structure by moving the hierarchy of methods into one object.

## 🚦 Wrap Up Folks

And that about wraps it up. I will continue to improve this, so you might want to watch/star this repository to revisit. Also, I have plans on writing the same about the architectural patterns, stay tuned for it.

## 👬 Contribution

- Report issues
- Open pull request with improvements
- Spread the word",294,294,8,4,construction,"[complex, composes, composite, concrete, construction, design-patter, design-patterns, design-thinking, facade-pattern, factory, factory-pattern, gang-of-four, gang-of-four-design-patterns, gof, javascript, node-js, observer-pattern, prototype, resource, software-architecture-and-design]",23
GSharker,G-Shark,GSharker,https://github.com/GSharker/G-Shark,https://api.github.com/repos/G-Shark/GSharker,"G-Shark is a free and open-source geometry library designed for computational designers and software developers in the Architecture, Engineering, and Construction (AEC) industry.","![](https://img.shields.io/badge/Framwork-.NetStandard2.0-blue?logo=.NET)
![Nuget](https://img.shields.io/nuget/v/GShark?logo=NuGet&color=004880)
[![Build and Test](https://github.com/GSharker/G-Shark/actions/workflows/build-and-test-on-pr.yml/badge.svg?branch=develop&event=pull_request)](https://github.com/GSharker/G-Shark/actions/workflows/build-and-test-on-pr.yml)
[![Build docs](https://github.com/GSharker/G-Shark/actions/workflows/build-docs.yml/badge.svg?branch=master)](https://github.com/GSharker/G-Shark/actions/workflows/build-docs.yml)

[![](https://dcbadge.vercel.app/api/server/RPz2XZEtbc?style=flat)](https://discord.gg/RPz2XZEtbc)
![](./media/gshark-banner.jpg ""Geometry Shark"")

# The project
**G-Shark** is short for **Geometry Shark**. It all started with a need for a geometry library able to handle curves, surfaces, meshes and solids written in C#. Although there
are plenty of geometry libraries written in a variety of languages including C, C++, Python and some also in C# but, as is often the case, we could not find a library that encompassed all the functionality that we were looking for in one place.

For this reason we began work on this ambitious project to create an easy to use, well documented, and highly functional geometry library for C# development, targeted primarily at the AECO sector and computational designers. We've gone back to the text books and first principles of computational geometry, and we learn what we can from the great work done by others before us for which we are very thankful, in particular [Verb](http://verbnurbs.com/), [NurbsPython](https://github.com/orbingol/NURBS-Python) and [OpenNurbs](https://github.com/mcneel/opennurbs) which are our references for the backbone of this library. 

We try to write and commit code every day and look forward to contributions from the open source dev community. 

There's a tonne of work to be done and we appreciate all the help we can get! If you would like to contribute, reach out and we'll have you committing code in no time! :) 

## Contributing to G-Shark
[Guidelines](CONTRIBUTING.md)

## Documentation
[G-Shark Doc](https://gsharker.github.io/G-Shark/)
",183,183,6,37,construction,"[architecture, computational-design, computational-geometry, construction, csharp, engineering, geometry]",23
bcrumbs,booben,bcrumbs,https://github.com/bcrumbs/booben,https://api.github.com/repos/booben/bcrumbs,"Web app constructor based on React, with GraphQL bindings","<div align=""center""><img  align=""center"" style=""width: 100%;"" src=""https://preview.ibb.co/nEUQPd/booben_logo.png"" /></div>
<h3 align=""center"">Full-stack web app developing platform</h4>
<p align=""center"">Design, develop, connect data, get source code - all in one place.</p>
<div align=""center""><a href=""http://demo.booben.io/app/demo/"">Demo</a></div>
<br />
<hr />

[![Build Status](https://travis-ci.org/bcrumbs/booben.svg?branch=master)](https://travis-ci.org/bcrumbs/booben)
[![Braincrumbs Slack](https://slackin.braincrumbs.io/badge.svg)](https://slackin.braincrumbs.io)

### Features
+ Design your app without a line of code by dragging-and-dropping components on the canvas
+ Get a markup which is completely identical to what you see in the components tree without any unnecessary inline styles and / or wrappers
+ Bind data with **GraphQL**
+ Setup actions and write pure functions through the Booben interface
+ Use **any components library** to build your own App. All you need is to cover this library with [metadata](https://github.com/bcrumbs/reactackle-meta). As a default we use [Reactackle components library](https://github.com/bcrumbs/reactackle) and plain [HTML-tags](https://github.com/bcrumbs/booben-html-meta). You may look at the [Reactackle's meta](https://github.com/bcrumbs/reactackle-meta) for an example.
+ Style components by **modifying its props** and/or by adding **custom css** (scss syntax is supported)
+ Download generated code in a single click

### Technologies used:
+ [React](https://reactjs.org) - to power up frontend
+ [React Router v4](https://reacttraining.com/react-router/)
+ [Redux](https://redux.js.org) (redux + react-redux) - state management
+ [Reselect](https://github.com/reactjs/reselect) - redux selectors
+ [immutable.js](https://facebook.github.io/immutable-js/) - we store all redux objects in immutable structures (Map, List, Set, Record, ...).
Exceptions are those data structures which can't be changed at all or may be changed only completely (ex. metadata).
+ [Apollo](https://www.apollographql.com) (apollo-client + react-apollo) - GraphQL client, used only to communicate with project's GraphQL endpoint. Booben itself communicates with its backend by REST API.
+ [Styled Components](https://www.styled-components.com) - CSS-in-JS used for styling components
+ [Lodash](https://lodash.com)
+ [Reactackle](https://github.com/bcrumbs/reactackle) - react ui-components library
+ [Webpack](https://webpack.github.io)
+ [Babel](https://babeljs.io)
+ [Eslint](https://eslint.org) - we are now using custom presets but are going to migrate to
[Prettier](https://prettier.io).

### Docs
Documentation is not complete and translated yet. Contributions are welcome.

[Docs in Russian](./docs/index.md)

### Prerequisites

You'll need [node](https://nodejs.org) version 8.6.0 or higher to run dev environment.

### Setup

Clone Booben repo
```
git clone https://github.com/bcrumbs/booben
cd booben
```

**Quick setup**

Run bash script from the booben's directory. It will clone blank project for Booben and create config file.
```
bash bootstrap.sh
node index.js --config projects-config.json
```
OR
```
make bootstrap
```
On Docker:
```
docker pull braincrumbs/booben
docker run -d --name=booben -p 3000:3000 braincrumbs/booben
```
OR
```
docker-compose pull
docker-compose up -d
```

App will be running on http://localhost:3000/app/blank

### Contributing
All contributions are welcomed.

## License
[Apache 2.0](/LICENSE)
",104,104,6,89,construction,"[apollographql, construction, generator, graphql, lowcode, nocode, platform, prototype, react, ui]",23
blopa,Contract-Builder,,https://github.com/blopa/Contract-Builder,https://api.github.com/repos/Contract-Builder/blopa,Easily build and maintain any kind of contract. Free and Open Source,"# Contract Builder

**Let's create a contract!** Oh, boy. What a boring task. Spending hours copying and pasting the same information over and over again, changing names, IDs, addresses, multiple typos. Gosh.  

> ""I realized that document automation was a way to save time and increase consistency while reducing errors in documents. So with document automation, I create documents that look professional each and every time. By automating that process rather than recreating it for every document, I’m able to eliminate the errors.""
- [Andrew Legrand to http://abovethelaw.com](http://abovethelaw.com/2015/05/todays-tech-how-a-business-lawyer-uses-document-automation-in-his-practice/)

<img src=""/screenshots/contract_builder.gif?raw=true"" width=""890px"">

**TESTED ONLY ON GOOGLE CHROME**

## About
Contract Builder is a free open-source project that allows anyone to easily maintain and build any kind of contract (legal documents, lawsuit, rent, agreements, construction and so on) using Google Spreadsheets. This was develop as a personal project to help a friend who was struggling spending up to an hour to make a custom contract, now she is able to do it in less than 5 minutes. Hooray! **[TRY IT NOW](https://blopa.github.io/contract/VueJS/).**

## Features
- Parse data from Google Spreadsheet or .xls file
- Use Rich Text to enhance your contract
- 5 different types of ""blocks""
	- Title
	- Subtitle
	- Paragraph
	- List
	- Page Break
- Download the contract as .docx

## Usage
First of all you need to create a Google Spreadsheet following the same rules as [this one](https://docs.google.com/spreadsheets/d/1HFGm_cSH_XeZtxfREusftu-4S1LYZeAVSVjWMmsRHtY/copy) (you can make a copy if you like) and populate with your contract informations.
- **id**: The identification of the row, it can be anything but must be unique
- **description**: Short description of the row
- **content**: The actual content that will appear on the contract. Use HTML tags to format this content
- **type**: Type of the block
	- **title**: A title for the contract
	- **title-center**: A centralized title for the contract
	- **subtitle**: A subtitle for the contract
	- **subtitle-center**: A centralized subtitle for the contract
	- **paragraph**: A paragraph for the contract
	- **paragraph-center**: A centralized paragraph for the contract
	- **page-break**: A page break
	- **list**: A basic list
	- **numeric-list**: A list with a incremented number before it
	- **circle-list**: A list with a circle before it
	- **square-list**: A list with a square before it
- **depends**: Put the identification (id) of the row that this row must belong
- **mandatory**: Make the row mandatory, meaning it will not ask to be added to the contract
- **disabled**: Disable row

So whenever you want a part of the contract to be only available when certain other part is on the contract, you should use the ``depends`` field. One row can depend of another row that also depends on another and so on. Use your creativity.

## Libraries
- For the [jQuery version](https://blopa.github.io/contract/jQuery/index.html) ( < 0.0.4 ) of this project I'm using [jQuery](https://github.com/jquery/jquery), [Sheetrock](https://github.com/chriszarate/sheetrock), [html-docx-js](https://github.com/evidenceprime/html-docx-js), [FileSaver](https://github.com/eligrey/FileSaver.js/) and [Bootstrap](https://github.com/twbs/bootstrap).
- For the [vue.js version](https://blopa.github.io/contract/VueJS/) ( > 0.0.4 ) of this project I'm using [vue.js](https://github.com/vuejs/vue), [html-docx-js](https://github.com/evidenceprime/html-docx-js), [FileSaver](https://github.com/eligrey/FileSaver.js/) and [Bootstrap](https://github.com/twbs/bootstrap).
- Honorable mentions: [babel](https://github.com/babel/babel), [webpack](https://github.com/webpack/webpack), [Vuex](https://github.com/vuejs/vuex), [IntelliJ IDEA](https://github.com/JetBrains/intellij-community) and [Squarespace](https://logo.squarespace.com).

So a big thanks to all the developers that worked really hard on these libs and make our day easier :D and also a big thanks to [cdnjs.com](https://cdnjs.com/) and [jsdelivr.com](https://www.jsdelivr.com/) for hosting those libs for us.

## Deployment
Run `npm run build` then copy the `dist/` folder into your website root directory. Done.

## Example
You can create complex tree decisions using the field ``depends``. The following ``JSON`` is a result of [this Google Spreadsheet](https://docs.google.com/spreadsheets/d/1HFGm_cSH_XeZtxfREusftu-4S1LYZeAVSVjWMmsRHtY/edit). For a better view of the ``JSON`` [click here](https://codebeautify.org/jsonviewer/cba7783b).
```json
[
 {
  ""id"": ""sample_1"",
  ""description"": ""Sample Agreement Title"",
  ""content"": ""SAMPLE AGREEMENT"",
  ""type"": ""title"",
  ""depends"": """",
  ""mandatory"": ""TRUE"",
  ""disabled"": """",
  ""used"": false,
  ""childs"": []
 },
 {
  ""id"": ""sample_2"",
  ""description"": ""Description"",
  ""content"": ""This Agreement is entered into as of the {{date_day}} day of {{date_month}}, {{date_year}}, between {{the_committee}} and {{the_contractor}}"",
  ""type"": ""paragraph"",
  ""depends"": """",
  ""mandatory"": ""FALSE"",
  ""disabled"": """",
  ""used"": false,
  ""childs"": []
 },
 {
  ""id"": ""sample_3"",
  ""description"": ""Independent Contractor"",
  ""content"": ""<b>Independent Contractor</b>. Subject to the terms and conditions of this Agreement, the Committee hereby engages the Contractor as an independent contractor to perform the services set forth herein, and the Contractor hereby accepts such engagement."",
  ""type"": ""numeric-list"",
  ""depends"": """",
  ""mandatory"": ""FALSE"",
  ""disabled"": ""TRUE"",
  ""used"": false,
  ""childs"": []
 },
 {
  ""id"": ""sample_4"",
  ""description"": ""Duties, Term, and Compensation"",
  ""content"": ""<b>Duties, Term, and Compensation.</b> The Contractor’s duties, term of engagement, compensation and provisions for payment thereof shall be as set forth in the budget which is attached as {{attachment_1}}, which may be amended in writing from time to time, or supplemented with subsequent estimates for services to be rendered by the Contractor and agreed to by the Committee, and which collectively are hereby incorporated by reference."",
  ""type"": ""numeric-list"",
  ""depends"": """",
  ""mandatory"": ""FALSE"",
  ""disabled"": """",
  ""used"": false,
  ""childs"": [
   {
    ""id"": ""sample_5"",
    ""description"": ""Expenses"",
    ""content"": ""<b>Expenses</b>. During the term of this Agreement, the Contractor shall bill and the Committee shall reimburse her for all reasonable and approved out-of-pocket expenses as set forth in {{attachment_1}} which are incurred in connection with the performance of the duties hereunder."",
    ""type"": ""circle-list"",
    ""depends"": ""sample_4"",
    ""mandatory"": ""FALSE"",
    ""disabled"": """",
    ""used"": false,
    ""childs"": []
   },
   {
    ""id"": ""sample_6"",
    ""description"": ""Written Reports"",
    ""content"": ""<b>Written Reports</b>. The Committee may request that project plans, progress reports and a final results report be provided by Consultant.. A final results report shall be due at the conclusion of the project and shall be submitted to the Committee in a confidential written report at such time. The results report shall be in such form and setting forth such information and data as is reasonably requested by the Committee."",
    ""type"": ""numeric-list"",
    ""depends"": ""sample_4"",
    ""mandatory"": ""FALSE"",
    ""disabled"": """",
    ""used"": false,
    ""childs"": []
   },
   {
    ""id"": ""sample_8"",
    ""description"": ""Conflicts of Interest"",
    ""content"": ""<b>Conflicts of Interest</b>; The Contractor represents that she is free to enter into this Agreement and that this engagement does not violate the terms of any agreement between the Contractor and {{third_party}}. During the term of this agreement, the Contractor shall devote as much of her productive time, energy and abilities to the performance of her duties hereunder as is necessary to perform the required duties in a timely and productive manner. The Contractor is expressly free to perform services for other parties while performing services for the Committee."",
    ""type"": ""numeric-list"",
    ""depends"": ""sample_4"",
    ""mandatory"": ""FALSE"",
    ""disabled"": """",
    ""used"": false,
    ""childs"": [
     {
      ""id"": ""sample_9"",
      ""description"": ""Termination"",
      ""content"": ""<b>Termination</b>. The Committee may terminate this Agreement at any time by {{working_days_qty}} working days’ written notice to the Contractor. In addition, if the Contractor is convicted of any crime or offense, fails or refuses to comply with the written policies or reasonable directive of the Committee, is guilty of serious misconduct in connection with performance hereunder, or materially breaches provisions of this Agreement, the Committee at any time may terminate the engagement of the Contractor immediately and without prior written notice to the Contractor"",
      ""type"": ""numeric-list"",
      ""depends"": ""sample_8"",
      ""mandatory"": ""FALSE"",
      ""disabled"": """",
      ""used"": false,
      ""childs"": [
       {
        ""id"": ""sample_11"",
        ""description"": ""Insurance"",
        ""content"": ""<b>Insurance</b>. The Contractor will carry liability insurance (including malpractice insurance, if warranted) relative to any service that she performs for the Committee."",
        ""type"": ""circle-list"",
        ""depends"": ""sample_9"",
        ""mandatory"": ""FALSE"",
        ""disabled"": """",
        ""used"": false,
        ""childs"": [
         {
          ""id"": ""sample_12"",
          ""description"": ""Assignment Type A"",
          ""content"": ""<b>Assignment</b>. The Contractor shall not assign any of her rights under this Agreement, or delegate the performance of any of her duties hereunder, without the prior written consent of the Committee."",
          ""type"": ""circle-list"",
          ""depends"": ""sample_11"",
          ""mandatory"": ""TRUE"",
          ""disabled"": """",
          ""used"": false,
          ""childs"": []
         },
         {
          ""id"": ""sample_13"",
          ""description"": ""Assignment Type B"",
          ""content"": ""<b>Assignment</b>. The Contractor shall not assign any of her rights under this Agreement, or delegate the performance of any of her duties hereunder, without the prior written consent of the Committee."",
          ""type"": ""circle-list"",
          ""depends"": ""sample_11"",
          ""mandatory"": ""TRUE"",
          ""disabled"": """",
          ""used"": false,
          ""childs"": [
           {
            ""id"": ""sample_17"",
            ""description"": ""Entire Understanding"",
            ""content"": ""<b>Entire Understanding</b>. This document and any exhibit attached constitut the entire understanding and agreement of the parties, and any and all prior agreements, understandings, and representations are hereby terminated and canceled in their entirety and are of no further force and effect."",
            ""type"": ""square-list"",
            ""depends"": ""sample_13"",
            ""mandatory"": ""FALSE"",
            ""disabled"": """",
            ""used"": false,
            ""childs"": [
             {
              ""id"": ""sample_18"",
              ""description"": ""Unenforceability of Provisions"",
              ""content"": ""<b>Unenforceability of Provisions</b>. If any provision of this Agreement, or any portion thereof, is held to be invalid and unenforceable, then the remainder of this Agreement shall nevertheless remain in full force and effect."",
              ""type"": ""square-list"",
              ""depends"": ""sample_17"",
              ""mandatory"": ""FALSE"",
              ""disabled"": """",
              ""used"": false,
              ""childs"": []
             }
            ]
           }
          ]
         },
         {
          ""id"": ""sample_14"",
          ""description"": ""Assignment Type C"",
          ""content"": ""<b>Assignment</b>. The Contractor shall not assign any of her rights under this Agreement, or delegate the performance of any of her duties hereunder, without the prior written consent of the Committee."",
          ""type"": ""circle-list"",
          ""depends"": ""sample_11"",
          ""mandatory"": ""TRUE"",
          ""disabled"": """",
          ""used"": false,
          ""childs"": []
         },
         {
          ""id"": ""sample_15"",
          ""description"": ""Assignment Type D"",
          ""content"": ""<b>Assignment</b>. The Contractor shall not assign any of her rights under this Agreement, or delegate the performance of any of her duties hereunder, without the prior written consent of the Committee."",
          ""type"": ""circle-list"",
          ""depends"": ""sample_11"",
          ""mandatory"": ""TRUE"",
          ""disabled"": """",
          ""used"": false,
          ""childs"": []
         }
        ]
       }
      ]
     }
    ]
   }
  ]
 },
 {
  ""id"": ""sample_7"",
  ""description"": ""Confidentiality"",
  ""content"": ""<b>Confidentiality</b>. Upon the expiration or earlier termination of this Agreement, or whenever requested by the Committee, the Contractor shall immediately deliver to the Committee all such files, records, documents, specifications, information, and other items in her possession or under her control. The Contractor further agrees that she will not disclose her retention as an independent contractor or the terms of this Agreement to any person without the prior written consent of the Committee and shall at all times preserve the confidential nature of her relationship to the Committee and of the services hereunder."",
  ""type"": ""numeric-list"",
  ""depends"": """",
  ""mandatory"": ""TRUE"",
  ""disabled"": """",
  ""used"": false,
  ""childs"": []
 },
 {
  ""id"": ""sample_10"",
  ""description"": ""Independent Contractor"",
  ""content"": ""<b>Independent Contractor</b>. This Agreement shall not render the Contractor an employee, partner, agent of, or joint venturer with the Committee for any purpose. The Contractor is and will remain an independent contractor in her relationship to the Committee. The Committee shall not be responsible for withholding taxes with respect to the Contractor’s compensation hereunder. The Contractor shall have no claim against the Committee hereunder or otherwise for vacation pay, sick leave, retirement benefits, social security, worker’s compensation, health or disability benefits, unemployment insurance benefits, or employee benefits of any kind."",
  ""type"": ""paragraph"",
  ""depends"": """",
  ""mandatory"": ""TRUE"",
  ""disabled"": """",
  ""used"": false,
  ""childs"": []
 },
 {
  ""id"": ""sample_16"",
  ""description"": ""Modification or Amendment"",
  ""content"": ""<b>Modification or Amendment</b>. No amendment, change or modification of this Agreement shall be valid unless in writing signed by the parties hereto."",
  ""type"": ""square-list"",
  ""depends"": """",
  ""mandatory"": ""FALSE"",
  ""disabled"": """",
  ""used"": false,
  ""childs"": []
 },
 {
  ""id"": ""sample_19"",
  ""description"": ""Witness"",
  ""content"": ""IN WITNESS WHEREOF the undersigned have executed this Agreement as of the day and year first written above. The parties hereto agree that facsimile signatures shall be as effective as if originals."",
  ""type"": ""paragraph"",
  ""depends"": """",
  ""mandatory"": ""TRUE"",
  ""used"": false,
  ""childs"": []
 },
 {
  ""id"": ""sample_20"",
  ""description"": ""Signatures"",
  ""content"": ""______________________________                                     ______________________________\n{{the_committee}}                                                        {{the_contractor}}\n\n______________________________                                     ______________________________\n{{witness_1}}                                                                {{witness_2}}"",
  ""type"": ""paragraph"",
  ""depends"": """",
  ""mandatory"": ""TRUE"",
  ""disabled"": """",
  ""used"": false,
  ""childs"": []
 }
]
```

## Screenshot
**[Google Spreadsheet example](https://docs.google.com/spreadsheets/d/1HFGm_cSH_XeZtxfREusftu-4S1LYZeAVSVjWMmsRHtY/copy)**
![ScreenShot](https://raw.githubusercontent.com/blopa/Contract-Builder/master/screenshots/screenshot_1.png)

**Built contract**
![ScreenShot](https://raw.githubusercontent.com/blopa/Contract-Builder/master/screenshots/screenshot_2.png)

**Printing contract**
![ScreenShot](https://raw.githubusercontent.com/blopa/Contract-Builder/master/screenshots/screenshot_3.png)

## Release Notes
- **v0.0.7:**
	- [Feature] Add option to break page
	- [Bugfix] Fix problem with decision tree algorithm
	- [Bugfix] Fix some other minor glitches
- **v0.0.6:**
	- [Bugfix] Fix problem with .docx file style
	- [Bugfix] Fix some other minor glitches
- **v0.0.5:**
	- [Feature] Remade everything using Vue.js
	- [Feature] Rich Text working with Google Spreadsheet

*DEPRECATED:*
- **v0.0.4:**
	- [Feature] Add option to upload .xls Spreadsheet file
	- [Feature] Layout improvements
- **v0.0.3:**
	- [Bugfix] Fix decision tree algorithm
	- [Feature] New layout
- **v0.0.2:**
	- [Feature] Add option to disable row in the Spreadsheet
	- [Bugfix] Fix mandatory children glitch
	- [Bugfix] Fix sheetId always equals to 0
- **v0.0.1:**
	- First working version

## F.A.Q.
**Q: Can you implement <???> function/bot integration?**

A: I can try. Open a issue and I'll see what I can do.

**Q: Your project is awesome. How can I help?**

A: Thank you! You can help by codding more features, creating pull requests, or donating using Bitcoin: **1BdL9w4SscX21b2qeiP1ApAFNAYhPj5GgG**

## TODO
- Add list of recent used documents
- Add option to save a built contract
- Add option to save contract variables

## License
MIT License

Copyright (c) 2017 blopa

Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the ""Software""), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

**Free Software, Hell Yeah!**",82,82,4,1,construction,"[agreements, construction, contract, contract-builder, documents, google-spreadsheet, jquery, lawsuit, legal, resume, vue]",23
caelcs,builder4test,,https://github.com/caelcs/builder4test,https://api.github.com/repos/builder4test/caelcs,Library to build your pojo entities in a very easy and intuitive way,"# Builder4test
[![Build Status](https://travis-ci.org/caelcs/builder4test.svg?branch=master)](https://travis-ci.org/caelcs/builder4test)
[![Coverage Status](https://coveralls.io/repos/github/caelcs/builder4test/badge.svg)](https://coveralls.io/github/caelcs/builder4test)
[![Maven Central](https://maven-badges.herokuapp.com/maven-central/uk.co.caeldev/builder4test/badge.svg)](https://maven-badges.herokuapp.com/maven-central/uk.co.caeldev/builder4test)

Library to build your POJO entities using a very intuitive DSL.

**NOTE**: from version 0.2.0 the DSL has changed a little bit to provide more support and new features. you will have to update your test in order to use the new version but hopefully the DSL won't change from now onwards.

## Motivation
Most of the time when I am writing my tests I have the need to write clean and readable tests. One way to achieve is by having Test Builder, but normally it takes time and are difficult to mantain in time. So after looking around I came up with this library to help you to create your pojo in a different and easy way.

## How to use it

There are several ways to use it but the most flexible for me is creating a Class Builder that contains all the logic to create the objects.
The same example you can find in the lib tests.

you can inspect this [demo project](https://github.com/caelcs/build4test-demo) to see how to use this library.

```java
public class PojoBuilder {

    public static Field<String> name = new Field<>();
    public static Field<String> value = new Field<>();

    public static Field<String> name2 = new Field<>(""defaultName"");
    public static Field<String> value2 = new Field<>(""defaultValue"");

    public static Function<LookUp, Pojo> creator = lookUp -> new Pojo(lookUp.get(name, ""defaultName""),
            lookUp.get(value, ""defaultValue""));

    public static Function<LookUp, Pojo> creatorWithPredefinedDefaults = lookUp -> new Pojo(lookUp.get(name2),
            lookUp.get(value2));

}
```
There many things going on there but I will try to explain it in the best way that I can.
There are s few concepts to keep in mind; Field, Creator and LookUp.

### Creator
The Creator is just a java Function that receives as Argument a LookUp and return the object.
**NOTE:** Since version 0.2.1 the Creator interface was removed in order to use a Function.

### Field
The Field represent the value that you want to change by using the DSL in the construction of your objects.

### LookUp 
In charge of binding the Field instance and getting the corresponding value in the creator class.
In the example above the Creator is building a pojo using the constructor method and it is using the lookUp instance to get the corresponding value.

## Build an entity

```java
public static Field<String> name = new Field<>();
public static Field<String> value = new Field<>();

new Pojo(lookUp.get(name, ""defaultName""), 
            lookUp.get(value, ""defaultValue"")
```
the lookUp method is using a Field instance as first parameter and the second parameter to define what the default value will be in case that we don't set it by the DSL.
The other way to set the default value is by setting at the construction of the field it self so at the lookUp level you don't have to pass it.

```java
public static Field<String> name2 = new Field<>(""defaultName"");
public static Field<String> value2 = new Field<>(""defaultValue"");

new Pojo(lookUp.get(name2),
            lookUp.get(value2));
```
and below is the code to generate your pojo.

```java
Pojo pojo = Builder.build()
                .entity(PojoBuilder.creator)
                .applyValue(PojoBuilder.name, ""nameoverrideed"")
                .applyValue(PojoBuilder.value, ""valueoverrided"")
                .get();
```

You can nullify a field by just using nullify Method from DSL.

```java
Pojo pojo = Builder.build()
                .entity(PojoBuilder.creator)
                .applyValue(PojoBuilder.name, ""nameoverrideed"")
                .nullify(PojoBuilder.value)
                .get();
```

## Reuse and composition of Creators

If you already have creators and you want to reuse them on other creator, you can achieve it by:

- Setting your existing creator as a default value when you define your new creator. Note that you can even override the values of the creator that you are using as default. 

```java
    public static Field<String> name = new Field<>();
    public static Function<LookUp, String> nameCreator = lookUp -> lookUp.get(name, ""test1"");
    
    public static Field<String> secondName = new Field<>();
    public static Function<LookUp, String> creator = lookUp -> lookUp.get(secondName, secondCreator);
    
    Pojo pojo = Builder.build()
                    .entity(creator)
                    .applyValue(name, ""test2"")
                    .get();
```

- The other way is by overriding a field using a creator or Supplier as value:

```java

public static Field<String> secondName = new Field<>();
public static Function<LookUp, String> secondCreator = lookUp -> lookUp.get(secondName, ""test1"");

Pojo pojo = Builder.build()
                .entity(PojoBuilder.creator)
                .applyValue(PojoBuilder.name, ""nameoverrideed"")
                .applySupplier(PojoBuilder.secondName, () -> ""secondName"")
                .applyCreator(PojoBuilder.value, secondCreator)
                .get();
```

- You can also from there override a field of secondCreator but you have to override those before using the secondCreator.


## Build a list of entities

As easy as is creating an entity with Builder4Test, just use list method from the DSL and add as many elements to the collection as you want. For each element you can override all the fields.
In the example below we are creating a list of two elements overriding the fiend name.
 
```java
List<Pojo> testSiumple = Builder.build()
    .list(creator).elements()
        .element()
            .applyValue(name, ""testSiumple"")
            .end()
        .element()
            .applyValue(name, ""testSiumple2"")
            .end()
    .get();
```

Also if you want to generate a certain amount of elements using the defaults values or random now it is supported.

```java
List<Pojo> testSimple = Builder.build()
                .list(creator)
                .size(5)
                .applySupplier(name, () -> RDG.string())
                .applySupplier(value, () -> RDG.string())
                .get();
```
This code will generate a List of five elements and each element will contain a random value and field.
Using defaults generator provided by Fyodor is easy to generate your random values.

Also if you want to generate a sequence value using index of the iteration you can supply a Function

```java
List<Pojo> testSimple = Builder.build()
                .list(creator)
                .size(5)
                .applySequence(name, (index) -> index+ ""test"")
                .get();
```
This will generate a list of Pojo with name 1test, 2test, 3test...

- generate a list from a range is also possible:

```java
List<Pojo> testSimple = Builder.build()
                .list(creator)
                .range(1, 5)
                .applySequence(name, (index) -> index+ ""test"")
                .get();
```

__Note:__ that you can use creators as default values in your collections. 

## Credits
The library is highly inspired by 

[Make it Easy](https://github.com/npryce/make-it-easy) And [AssertJ](https://github.com/joel-costigliola/assertj-core)

Make It Ease lib provides a Hamcrest style DSL but I am more fun of using a builder kind of DSL like AssertJ that offers straight away the option that I can use.
I want to say thank you to all the collaborator of MakeItEasy project.
",7,7,2,1,construction,"[builder, builders, construction, data, dsl, entity, generator, java, java8, pojo, pojo-entities, test, testbuilders, testdata, testdatabuilder]",23
OpenDataBIM,ML-Price-Prediction-Model,,https://github.com/OpenDataBIM/ML-Price-Prediction-Model,https://api.github.com/repos/ML-Price-Prediction-Model/OpenDataBIM,"ML Price Prediction Model for Projects in RVT, IFC Formats","
## ML Price Prediction Model for Projects in RVT, IFC Formats
![enter image description here](https://opendatabim.io/wp-content/uploads/2021/12/Untitled-1-scaled.jpg)

## Generating Mass Data OpenDataBIM.ipynb
Creating fake data of 50 projects, with data based on the  first four files, to show the possibility of creating a model for predicting  project prices, which will be based on the company's 50 projects

## Creating a Prediction Model OpenDataBIM.ipynb
After converting IFC, RVT files into JSON-CSV formats, we can create prediction models. In this example, we accepted that all the project data that are saved in one CSV file we can equate the price of the project. So having for example 50 typical projects with known price we can predict price of 51 projects - 4_1house_R.csv: with new set of parameters by parametric data in CSV file.


# OpenDataBIM
https://opendatabim.io/

OpenDataBIM transferring information to another party without the need for external guarantors or trusted ‘third parties’, enabling data to be exchanged within 3D-7D systems and between construction parties directly, bypassing any third-party companies controlling data storage and transfer. OpenDataBIM allows to automate work with project data. In order to get automatic data from thousands of projects automatically, you need to build the pipeline once on the open tools.

OpenDataBIM - You Way to Free Tools in Construction.

### Go to  BIM 2.0  go to  Open Data
![enter image description here](https://opendatabim.io/wp-content/uploads/2021/10/BIM20.jpg)
",7,7,1,0,construction,"[ai, bim, construction, csv, ifc, machine-learning, ml, prediction, revit, xml]",23
potato3d,cascade,,https://github.com/potato3d/cascade,https://api.github.com/repos/cascade/potato3d,CasCADe 4D visualization system for virtual construction planning,"# cascade
Prototype of CasCADe 4D visualization system for virtual construction planning

This repository implements an early research prototype of the system described in the article [CasCADe: A Novel 4D Visualization System for Virtual Construction Planning](https://ieeexplore.ieee.org/document/8019847)

# Description

The system implements innovative visualizations over a 3D CAD model that make evident a construction schedule's task sequencing and spatio-temporal simultaneity. This unique framework enables the combination of diverse analytical features to create an information-rich analysis environment. The system helps diagnose schedule uncertainties, identified work-space conflicts and analyze other constructability issues.

Please check the paper referenced above for more details.

# Results

These are some examples of the implemented visualization:

![fig1](https://github.com/potato3d/cascade/blob/main/imgs/fig1.png ""Overview"")
![fig2](https://github.com/potato3d/cascade/blob/main/imgs/fig2.png ""Case 1"")
![fig3](https://github.com/potato3d/cascade/blob/main/imgs/fig3.png ""Case 2"")",7,7,1,1,construction,"[3d, 4d, bim, building-information-modelling, cad, construction, information-visualization, infovis, paper, rendering]",23
CPU-Code,java,,https://github.com/CPU-Code/java,https://api.github.com/repos/java/CPU-Code,"个人学习 java语言的路线 , 从入门到精通 , code","
# java

## 介绍

个人java语言的学习路线 , 希望自己的code可以给你带来点灵感

java编程基础 面向对象 javaAPI 集合 IO GUI JDBC 多线程 网络编程

根据宋红康老师的 `JVM` 课程的代码

根据韩顺平老师的 `java数据结构与算法` 课程的代码

根据牛客网的`编程初学者入门训练`按从入门到困难分类写的代码

根据牛客网的`剑指Offer`按从入门到困难分类写的代码

下面代码我会用√的方法表示代码是否完善, 如果没有√ ,说明代码可能我没有运行成功, 或者一些错误, 我无法排除, 供我日后方便排查

都是自己亲手敲出来代码, 难免有些错误, 也希望大家可以指点

---------------

## 文件目录

- [基础](basics/src/com/cpucode/java/README.md)
- [面对对象](object/README.md)
- [javaAPI](javaAPI/README.md)
- [异常处理](Exception/src/com/cpucode/java/README.md)
- [泛型](generics/README.md)
- [集合](aggregation/README.md)
- [IO](io/README.md)
- [算术](mathNum/README.md)
- [JDBC](jdbc/README.md)
- [多线程](thread/README.md)
- [Lambda表达式](Lambda/README.md)
- [网络编程](network/README.md)
- [JDK8](jdk8/README.md)
- [单元测试](junit_test/src/com/cpucode/java/README.md)
- [反射](reflect/README.md)
- [注解](annotation/src/com/cpucode/java/README.md)
- [JVM](JVM/src/com/cpucode/java/README.md)
- [java数据结构与算法](data_algorithm/README.md)
- [编程初学者入门训练](gettingStarted/README.md)
- [剑指Offer](Offer/README.md)
- [java并发编程的艺术](artConcurrent/README.md)
- [leetcode](leetcode/README.md)
- [牛客高频](nowCoder/README.md)
- [设计模式](pattern/README.md)
- [Spring源码](spring/README.md)
- [RPC](rpc/README.md)
- [netty](netty/README.md)

- [Test]()

---------------------------------

由于自己的code水平有限 , 难免有些不足 , 希望大家可以谅解 , 并提出意见 , 我会虚心接受 , cpu_code在此 , 谢谢大家",6,6,2,10,construction,"[api, basics, construction, io, java, javaapi, lambda, object]",23
guangxush,DesignPatterns,,https://github.com/guangxush/DesignPatterns,https://api.github.com/repos/DesignPatterns/guangxush,Java23种设计模式总结归纳(附UML图和源码),"## 设计模式

每一个设计模式描述一个在我们周围不断重复发生的问题，以及该问题的解决方案的核心。这样，你就能一次一次地使用该方案而不必做重复劳动。

### 设计模式简介

GoF《Design Patterns: Elements of Reusable Object-Oriented Software》


| 设计模式 | 释义 |
| :-----:| :---- |
|[工厂模式](./src/factory/README.md)|定义一个用于创建对象的接口，让子类决定实例化哪一个类，工厂让一个类的实例化延迟到子类。|
|[抽象工厂模式](./src/abstractfactory)|提供一个创建一系列或者相互依赖的对象的接口，而无须指定他们具体的类。|
|[生成器模式](./src/builder/README.md)|将一个复杂的对象的构建与他的表示进行分离，使用同样的构建过程但可以创建不同的表示。|
|[原型模式](./src/prototype/README.md)|用原型实例指定创建对象的种类，并且通过拷贝这些原型创建新的对象。|
|[单例模式](./src/singleton/README.md)|保证一个类仅有一个实例，并提供一个访问它的全局访问点。|
|[责任链模式](./src/chain/README.md)|使多个对象都有机会处理请求，从而避免请求的发送者和接收者之间的耦合关系。将这些对象连成一条链，并沿着这条链传递该请求，直到有一个对象处理它为止。|
|[命令模式](./src/command/README.md)|将一个请求封装为一个对象，从而使你可用不同的请求对客户进行参数化；对请求排队或记录请求日志，以及支持可撤消的操作。|
|[解释器模式](./src/interpreter/README.md)|给定一个语言，定义它的文法的一种表示，并定义一个解释器，这个解释器使用该表示来解释语言中的句子。|
|[迭代器模式](./src/iterator/README.md)|提供一种方法顺序访问一个聚合对象中的各个元素，而又不需要暴露该对象的内部表示。|
|[中介者模式](./src/mediator/README.md)|用一个中介对象来封装一系列的对象交互。中介者使各对象不需要显示地相互引用，从而使其耦合松散，而且可以独立地改变它们之间的交互。|
|[备忘录模式](./src/memento/README.md)|在不破坏封装性的前提下，捕获一个对象的内部状态，并在该对象之外保存这个状态，这样以后就可将该对象恢复到原先保存的状态。|
|[观察者模式](./src/observer/README.md)|定义对象间的一种一对多的依赖关系，当一个对象的状态发生变化时，所有依赖于它的对象都得到通知并被自动更新。|
|[状态模式](./src/state/README.md)|允许一个对象在其内部状态改变时改变它的行为。对象看起来似乎修改了它的类。|
|[策略模式](./src/strategy/README.md)|定义一系列算法，把它们一个个封装起来，并且使它们可相互替换。本模式使得算法可独立于使用它的客户而变化。|
|[模版方法模式](./src/template/README.md)|定义一个操作中的算法的骨架，而将一些步骤延迟到子类中。模板方法使得子类可以不改变一个算法的结构即可重定义该算法的某些特定步骤。|
|[访问者模式](./src/visitor/README.md)|表示一个作用于某对象结构中的各个元素的操作。它使你可以在不改变各个元素的类的前提下定义作用于这些元素的新操作。 |
|[适配器模式](./src/adapter/README.md)|将一个类的接口转换成客户希望的另外一个接口。Adapter模式使得原本由于接口不兼容而不能一起工作的那些类可以一起工作。|
|[组合模式](./src/composite/README.md)|将对象组合成数形结构以表示“部分-整体”的层次结构。Composite使得用户对单个对象和组合对象的使用具有一致性。|
|[代理模式](./src/proxy/README.md)|为其他对象提供一种代理以控制对这个对象的访问。|
|[享元模式](./src/flyweight/README.md)|运用共享技术有效地支持大量细粒度的对象。|
|[外观模式](./src/facade/README.md)|为系统中的一组接口提供一个一致的界面，Facade模式定义了一个高层接口，这个接口使得这一子系统更加容易使用。|
|[桥接模式](./src/bridge/README.md)|将抽象部分与它的实现部分分离，使得它们都可以独立地变化。|
|[装饰模式](./src/decorator/README.md)|动态地给对象添加一些额外的职责。就功能来说装饰模式相比生成子类更为灵活。|


### Java面向对象部分特性

#### 抽象类和接口

- 抽象类可以有抽象方法也可以有非抽象方法
- 抽象类不能用new运算符创建
- 如果非抽象类继承了某个抽象类，那么必须实现里面所有的非抽象方法
- 抽象类声明的对象可以成为其子类向上转型的对象
- 接口中可以有public或者default类型的抽象方法，不可以有非abstract方法
- 如果一个类实现了一个接口，那么必须重写里面所有的abstract方法或者声明为abstract类
- 接口回调：可以把实现接口的类的对象的引用赋值给该接口声明的接口变量中

### 面向对象的几个基本原则

#### 开闭原则

- 设计对扩展开放，对修改关闭
- 对abstract类的修改关闭，对abstract子类的扩展开放

#### 多用组合少用继承

- 继承与复用

继承的优点是子类可以重写父类的方法，易于修改和扩展
缺点是：子类在编译时就确定下来，无法在运行期间改变从父类继承的方法和行为；子类和父类是强耦合关系，当父类方法的行为发生改变时，必然导致子类的方法发生改变；""白盒""复用，即父类的内部细节对子类是可见的

- 组合与复用

优点是：""黑盒""复用使得当前对象所包含对象方法的细节对当前对象不可见；对象与所包含的对象属于弱耦合关系，修改当前对象所包含的类的代码，不必修改当前类的代码；当前对象可以在运行时动态指定所包含的对象；
缺点是：容易导致系统中的对象过多，为了能组合多个对象，必须仔细地对接口进行定义

- 高内聚-低耦合

如果类中的方法是一组相关的行为，那么该类是高内聚的；低耦合是尽量不要让一个类还有太多其他类的实例引用

#### 迪米特法则

如果两个类不必直接通信，那么这两个类不应当发生直接的相互作用，如果其中一个类需要调用另一个类的话可以引入第三个类解决


### UML类图

类图：\+表示public \#表示protected \-表示private

![类图](./image/ClassUML.png)

接口：

![接口](./image/ClassInterface.png)


#### 泛化关系

泛化关系就是指类的继承关系，父类用空心三角形表示

![泛化关系](./image/extends.png)

#### 关联关系

如果A类中的成员变量是用B类（接口）来声明的变量，那么A和B是关联关系，被关联的关系用黑色箭头指向或者没有指向


![关联关系](./image/guanlian.png)

#### 依赖关系

A类中某个方法的参数是用B类来声明的变量或者某个方法返回的数据类型是B类型的，那么A和B属于依赖关系，A依赖于B
有时候A关联于B也成A依赖于B，使用虚线连接的箭头表示

![依赖关系](./image/rely.png)


#### 实现关系

如果一个类实现了另一个类的接口，那么类和接口属于实现关系，称类实现了接口

![实现关系](./image/implement.png)


### 设计模式分类与介绍

#### 创建型设计模式

不让用户代码依赖与对象的创建或者排列方式，避免用户直接使用new创建对象

[工厂模式](./src/factory/README.md) 定义一个用于创建对象的接口，让子类决定实例化哪一个类，工厂让一个类的实例化延迟到子类。

Factory Pattern(Another Name: Virtual Constructor): Define an interface for creating an object, but let subclasses decide which class to instantiate. Factory Method lets a class defer instantiation to subclasses.

[抽象工厂模式](./src/abstractfactory) 提供一个创建一系列或者相互依赖的对象的接口，而无须指定他们具体的类。

Abstract Factory Pattern(Another Name:Kit): Provide an interface for creating families of related or dependent objects without specifying their concrete classes.

[生成器模式](./src/builder/README.md) 将一个复杂的对象的构建与他的表示进行分离，使用同样的构建过程但可以创建不同的表示。

Builder Pattern :Separate the construction of a complex object from its representation so that the same construction process can create different representations.

[原型模式](./src/prototype/README.md) 用原型实例指定创建对象的种类，并且通过拷贝这些原型创建新的对象。

Prototype Pattern: Specify the kinds of objects to create using a prototypical instance, and create new objects by copying this prototype.

[单例模式](./src/singleton/README.md) 保证一个类仅有一个实例，并提供一个访问它的全局访问点。

Singleton Pattern: Ensure a class only has one instance, and provide a global point of access to it.

#### 行为型设计模式

涉及对象之间的交互通信，以及怎样合理的为对象分配职责，让设计富有弹性，易于维护和扩展

[责任链模式](./src/chain/README.md) 使多个对象都有机会处理请求，从而避免请求的发送者和接收者之间的耦合关系。将这些对象连成一条链，并沿着这条链传递该请求，直到有一个对象处理它为止。

Chain of Responsibility Pattern: Avoid coupling the sender of a request to its receiver by giving more than one object a chance to handle the request. Chain the receiving objects and pass the request along the chain until an object handles it.

[命令模式](./src/command/README.md) 将一个请求封装为一个对象，从而使你可用不同的请求对客户进行参数化；对请求排队或记录请求日志，以及支持可撤消的操作。

Command Pattern(Another Name: Action, Transaction): Encapsulate a request as an object, thereby letting you parameterize clients with different requests, queue or log requests, and support undoable operations.

[解释器模式](./src/interpreter/README.md) 给定一个语言，定义它的文法的一种表示，并定义一个解释器，这个解释器使用该表示来解释语言中的句子。

Interpreter Pattern: Given a language, define a representation for its grammar along with an interpreter that uses the representation to interpret sentences in the language.

[迭代器模式](./src/iterator/README.md) 提供一种方法顺序访问一个聚合对象中的各个元素，而又不需要暴露该对象的内部表示。

Iterator Pattern (Another Name: Cursor): Provide a way to access the elements of an aggregate object sequentially without exposing its underlying representation.

[中介者模式](./src/mediator/README.md) 用一个中介对象来封装一系列的对象交互。中介者使各对象不需要显示地相互引用，从而使其耦合松散，而且可以独立地改变它们之间的交互。

Mediator Pattern: Define an object that encapsulates how a set of objects interact.Mediator promotes loose coupling by keeping objects from referring to each other explicitly, and it lets you vary their interaction independently.

[备忘录模式](./src/memento/README.md)  在不破坏封装性的前提下，捕获一个对象的内部状态，并在该对象之外保存这个状态，这样以后就可将该对象恢复到原先保存的状态。

Memento Pattern(Another Name: Token): Without violating encapsulation, capture and externalize an object’s internal state so that the object can be restored to this state later.

[观察者模式](./src/observer/README.md) 定义对象间的一种一对多的依赖关系，当一个对象的状态发生变化时，所有依赖于它的对象都得到通知并被自动更新。

Observer Pattern(Another Name: Dependents, Publish-Subscribe): Define a one-to-many dependency between objects so that when one object changes state, all its dependents are notified and updated automatically..

[状态模式](./src/state/README.md) 允许一个对象在其内部状态改变时改变它的行为。对象看起来似乎修改了它的类。

State Pattern（Another Name: Objects for States）: Allow an object to alter its behavior when its internal state changes. The object will appear to change its class.

[策略模式](./src/strategy/README.md) 定义一系列算法，把它们一个个封装起来，并且使它们可相互替换。本模式使得算法可独立于使用它的客户而变化。

Strategy Pattern(Another Name: Policy): Define a family of algorithms, encapsulate each one, and make them inter changeable. Strategy lets the algorithm vary independently from clients that use it.

[模版方法模式](./src/template/README.md) 定义一个操作中的算法的骨架，而将一些步骤延迟到子类中。模板方法使得子类可以不改变一个算法的结构即可重定义该算法的某些特定步骤。

Template Method Pattern: Define the skeleton of an algorithm in an operation, deferring some steps to subclasses. Template Method lets subclasses redefine certain steps of an algorithm without changing the algorithm's structure.

[访问者模式](./src/visitor/README.md) 表示一个作用于某对象结构中的各个元素的操作。它使你可以在不改变各个元素的类的前提下定义作用于这些元素的新操作。

Visitor Pattern: Represent an operation to be performed on the elements of an objectstructure. Visitor lets you define a new operation without changing the classes of the elements on which it operates.


#### 结构型设计模式

涉及如何组合类和对象以形成更大的结构，和类有关的结构型模式涉及如何合理的使用继承，和对象有关的结构型模式涉及如何使用组合

[适配器模式](./src/adapter/README.md) 将一个类的接口转换成客户希望的另外一个接口。Adapter模式使得原本由于接口不兼容而不能一起工作的那些类可以一起工作。

Adapter Pattern(Another Name: Wrapper): Convert the interface of a class into another interface clients expect. Adapter lets classes work together that couldn't otherwise because of incompatible interfaces.

[组合模式](./src/composite/README.md) 将对象组合成数形结构以表示“部分-整体”的层次结构。Composite使得用户对单个对象和组合对象的使用具有一致性。

Composite Pattern: Compose objects into tree structures to represent part-whole hierarchies. Composite lets clients treat individual objects and compositions of objects uniformly.

[代理模式](./src/proxy/README.md) 为其他对象提供一种代理以控制对这个对象的访问。

Proxy Pattern: Provide a surrogate or placeholder for another object to control access to it.

[享元模式](./src/flyweight/README.md) 运用共享技术有效地支持大量细粒度的对象。

Flyweight Pattern: Use sharing to support large numbers of fine-grained objects efficiently.

[外观模式](./src/facade/README.md) 为系统中的一组接口提供一个一致的界面，Façade模式定义了一个高层接口，这个接口使得这一子系统更加容易使用。

Facade of Responsibility Pattern: Provide a unified interface to a set of interfaces in a subsystem.Facade defines a higher-level interface that makes the subsystem easier to use.

[桥接模式](./src/bridge/README.md) 将抽象部分与它的实现部分分离，使得它们都可以独立地变化。

Bridge Pattern(Another Name: Handle-Body): Decouple an abstraction from its implementation so that the two can vary independently.

[装饰模式](./src/decorator/README.md) 动态地给对象添加一些额外的职责。就功能来说装饰模式相比生成子类更为灵活。

Decorator Pattern(Another Name: Wrapper): Attach additional responsibilities to an object dynamically. Decorators provide a flexible alternative to subclassing for extending functionality.

### 重构

[重构原则](./src/refactor/README.md)

### 架构真经

[架构真经](./src/architecture/架构真经.md)


### 大型网站架构

[大型网站架构](./src/architecture/README.md)

### 软件方法

[软件方法](./src/uml/业务建模.md)

### DDD

[领域驱动设计的原则](./src/DDD/领域驱动设计的原则与实践.md)

[领域驱动设计概览](./src/DDD/领域驱动设计概览.md)

[架构风格与参考架构](./src/DDD/架构风格与参考架构.md)

[架构模式实践](./src/DDD/架构模式实践.md)

### TDD

[测试驱动开发](./src/TDD/README.md)

### 其他经典模式

[回调模式](./src/callback/README.md)
",6,6,1,0,construction,"[chain, construction, desgin-pattern, factory-pattern, interpreter, patterns, prototype]",23
Silver-IT,html-topbuilder-construction-templte,,https://github.com/Silver-IT/html-topbuilder-construction-templte,https://api.github.com/repos/html-topbuilder-construction-templte/Silver-IT,Html template for the construction company,,6,6,2,0,construction,"[bootstrap, construction, css, free, html, javascript, jquery, template]",23
OpenDataBIM,Quick-QTO,,https://github.com/OpenDataBIM/Quick-QTO,https://api.github.com/repos/Quick-QTO/OpenDataBIM,A quick rough QTO for all files in a folder,"# Quick-QTO
A quick rough QTO for all files in a folder
### Screenshot
![enter image description here](https://opendatabim.io/wp-content/uploads/2021/12/OpenDataBIM-3.jpg)


# A fast tool for gathering volumes
Using a simple script of just 50 lines, you can quickly collect information from a large number of files and analyze the volumes of certain groups


# Google Collab 

 - Go to https://colab.research.google.com/
 - download the [QuantityTakeoff-JupyterNotebook.ipynb](https://github.com/OpenDataBIM/BIMJSON-to-CSV/blob/main/BIMjson_to_CSV.ipynb ""BIMjson_to_CSV.ipynb"") from github site
 - Open [BIMjson_to_CSV.ipynb](https://github.com/OpenDataBIM/BIMJSON-to-CSV/blob/main/BIMjson_to_CSV.ipynb ""BIMjson_to_CSV.ipynb"") in Google Collab 
 - Upload the BIMJSON files to Google Collab
 - Change the path to the files in the first block and replace *path = 'drive/MyDrive / BIMJSON/'* with the address of the folder where the BIMISON files are located

# Kaggle.com

 - Go to https://www.kaggle.com/
 - Open this file in Google Collab 
 - Upload the BIMJSON files to Kaggle Dataset
 - Change the path to the files in the first block and replace *path = 'drive/MyDrive / BIMJSON/'* with the address of the folder where the BIMISON files are located

# OpenDataBIM
https://opendatabim.io/

OpenDataBIM transferring information to another party without the need for external guarantors or trusted ‘third parties’, enabling data to be exchanged within 3D-7D systems and between construction parties directly, bypassing any third-party companies controlling data storage and transfer. OpenDataBIM allows to automate work with project data. In order to get automatic data from thousands of projects automatically, you need to build the pipeline once on the open tools.

OpenDataBIM - You Way to Free Tools in Construction.

### Go to  BIM 2.0  go to  Open Source
![enter image description here](https://opendatabim.io/wp-content/uploads/2021/10/BIM20.jpg)

",5,5,2,0,construction,"[bim, construction, ifc, opensource, qto, revit, rvt]",23
anrExperts,xpr,anrExperts,https://github.com/anrExperts/xpr,https://api.github.com/repos/xpr/anrExperts,XPR est un outil de dépouillement de sources archivistiques basé sur des technologies XML.,"# xpr

XPR est un outil de dépouillement de sources archivistiques basé sur des technologies XML réalisé dans le cadre de l’ANR Experts.

Les données archivistiques ont été dépouillées à l’aide d’une application développée avec des technologies XML dans le cadre du projet. La base de données XML native [BaseX](https://basex.org) a permis la création d’une API REST développée en [XQuery](https://www.w3.org/XML/Query/) qui soutient l’ensemble du travail. Plusieurs formulaires dynamiques ont été développés avec [XForms](https://www.w3.org/TR/xforms11/) afin de permettre la mise à jour des dépouillements, de pouvoir renseigner la prosopographie et pour disposer de formulaires spécifiques pour le traitement de certaines sources telles que les inventaires après décès ou des annuaires. Cette application permet à l’équipe de partager les données au fur et à mesure de la réalisation du travail et de publier les résultats avant d’avoir terminé les dépouillements. L’utilisation de la base de données permet également de faire des requêtes riches pour des usages statistiques, des analyses de réseau ou pour produire des visualisations dynamiques.

### Bibliographie

- Château-Dutier, Emmanuel, et Josselin Morvan. 2021. « Un outil de dépouillement de sources archivistiques basé sur des technologies XML ». Dans *Colloque Humanistica 2021 - Recueil des résumés*. , 78‑80. Rennes, 10-12 mai 2021 (France). https://doi.org/10.5281/zenodo.4745006.

## Documentation

### Licence

GNU General Public License

### Dépendances

- [BaseX](https://basex.org) >9
- XSLTForms 2

### Installation

- Cloner le répertoire et placer dans le répertoire `webapp` de BaseX
- Lancer BaseX avec le script d’exécution `bin/basexhttp`
- Installer les données du projet (https://github.com/anrExperts/data)
- Accéder à l’application sur le localhost de basexhttp

## L’ANR Experts

**Pratiques des savoirs entre jugement et innovation. Experts, expertises du bâtiment, Paris 1690-1790 – ANR EXPERTS**

Depuis le Moyen Âge et probablement plus tôt, les autorités publiques confient à des personnes qu’elles estiment et qualifient compétentes l’action d’émettre un avis sur le savoir technique et scientifique, que ce soit dans le domaine gracieux comme contentieux. Cette recherche conduite dans le cadre d’un projet d’ANR vise à examiner, à partir d’un secteur économique majeur – celui du bâtiment à l’époque moderne –, le mécanisme de l’expertise : comment la langue technique régulatrice et maîtrisée des experts s’impose à la société, comment leur compétence technique se convertit en autorité, voire parfois en « abus d’autorité » ? L’existence d’un fonds d’archives exceptionnel (A.N. Z1J) qui conserve l’ensemble des procès-verbaux d’expertise du bâtiment parisien de 1643 à 1792 nous a permis de lancer une enquête pluridisciplinaire (juridique, économique et architecturale) de grande envergure sur la question de l’expertise qui connaît, à partir de 1690, un tournant particulier. En effet, les experts se divisent alors en deux branches différentes exerçant deux activités concurrentes, parfois complémentaires : les architectes et les entrepreneurs.

Notre recherche s’intéresse donc à la communauté des experts parisiens du bâtiment de 1690 à 1790. Les experts se répartissent, depuis cette époque, en deux cohortes d’architectes experts bourgeois et d’experts entrepreneurs. Nous étudions la structuration de cette communauté et l’activité des experts. Deux grands chantiers sont menés de front, d’une part l’établissement d’une prosopographie des 266 experts parisiens mais aussi un dépouillement systématique d’un échantillon de dix années de procès-verbaux d’expertise sur toute la période (en particulier, sous-séries V1 Lettres de provisions d’offices, Z1J Chambre et Greffiers des bâtiments, aux Archives nationales de France, Almanachs royaux, œuvres et travaux publiés, BnF).

https://anr.fr/Projet-ANR-17-CE26-0006
",5,5,3,32,construction,"[architecture, archives, construction, dh, digital-humanities, eac-cpf, xml]",23
Caumaker,Contrust,,https://github.com/Caumaker/Contrust,https://api.github.com/repos/Contrust/Caumaker,CONTRUST - Digital Construction Enhanced by Blockchain,"# CONTRUST
## Digital Construction Enhanced by Blockchain

Contrust is a open source project created to enhance digital construction auditability. It could be used to any kind of IoT system, mainly that related to construction.

## Architecture
![Contrust Architecture](img/architecture_contrust.png)

## Start-Up in four basic steps

1. Clone the repo

2. Access contrust-gateway and run `npm install && npm run dev`

3. Access contrust-blockchain and run `npm install && npm start`

4. Configure and start your DGD system to POST data to Contrust.

## Frameworks Used

1. [Node.JS](https://nodejs.org/en/)

2. [Socket.io](https://socket.io/)

3. [Express](https://expressjs.com/)

4. [PM2 Runtime](https://pm2.io/runtime/)

5. [Nuxt.js](https://nuxtjs.org/)

## License 

MIT",5,5,2,0,construction,"[blockchain, construction, digitaltwins]",23
BVT-Engineering,BVT_Engineering_Methods,BVT-Engineering,https://github.com/BVT-Engineering/BVT_Engineering_Methods,https://api.github.com/repos/BVT_Engineering_Methods/BVT-Engineering,Python function libraries for common engineering and construction standards.,"# BVT_Engineering_Methods
Python function libraries for common engineering and construction standards.

Currently we have methods in development for:
- AS/NZS 4600 2018 - comprehensive
- AS/NZS 1170.0 2002 - Reference tables for project level parameters, load combinations and unities
- NZS 1170.5 2004 - Section 3, section 5 (equivalent static method, section 8
- AS 4084 2012 - just started

A quick ""how-to"":

1. You can pip install all the standard function libraries into python as follows:
```python
!pip install git+https://github.com/BVT-Engineering/BVT_Engineering_Methods.git
```
2. Then import into your routines the standards you want to reference:
```python
from BVT_Engineering_Methods import nzs_1170_5 as NZS_1170_5
```
Finally, in your code, clauses from the standard can be called like this:
```python
CpTp = NZS_1170_5.part_design_response_coefficient(subsoil_type,Z,R,N_TD,C_Hi,CiTp)
```
This provides a readable method, while simplifying the code calculation checks.
",5,5,2,4,construction,"[construction, engineering]",23
LHB-Group,Civil-Work-Bidding-And-Investment-Helper,LHB-Group,https://github.com/LHB-Group/Civil-Work-Bidding-And-Investment-Helper,https://api.github.com/repos/Civil-Work-Bidding-And-Investment-Helper/LHB-Group,Civil Work Bidding Price Prediction in San Francisco 🏗️ 👷 🚧💸. AI-Powered.   costofmyconstructionproject.herokuapp.com,"<h1 align=""center""> Civil Work Bidding Price Prediction in San Francisco. AI-Powered.🌉🏗️ 💸</h1>

![python-shield](https://forthebadge.com/images/badges/made-with-python.svg)

* [App](https://costofmyconstructionproject.herokuapp.com/)
> In case of 404, click on [video capture](https://drive.google.com/file/d/13Y7McHQZtmEVhrX_G1Ukog_OVayNIo4P/view?usp=sharing)

## Table of contents
- [Table of contents](#table-of-contents)
- [Background](#background)
- [Project](#project)
- [Key documents](#key-documents)
  - [Top-directory layout](#top-directory-layout)
- [Technologies](#technologies)
- [Datasets](#datasets)
- [Getting started](#getting-started)
  - [Ensure that pip module is installed by running :](#ensure-that-pip-module-is-installed-by-running-)
  - [How to install pipenv ?](#how-to-install-pipenv-)
  - [Clone the repository :](#clone-the-repository-)
  - [Create your virtual environment :](#create-your-virtual-environment-)
  - [Install all required librairies :](#install-all-required-librairies-)
- [Install the project](#install-the-project)
- [License](#license)
- [Authors](#authors)
- [Contact](#contact)
- [Made with ❤️ in Paris](#made-with-️-in-paris)

## Background

San Francisco is a hyper-popular city with homeless community (20% of population), natural disaster risks and astronomical housing prices. Affordable housing in San Francisco has not been an option. Meanwhile, new affordable construction projects are high in need. Many investors consider construction projects to invest in SF, which can provide high return rate. For construction projects, engineers struggle to predict the construction project cost as reasonable as possible to win biddings. 🏗️ 💸

## Project

This project is an AI-powered app 🧠🤖 to estimate cost of construction projects in San Francisco. 

* [Presentation of project](https://docs.google.com/presentation/d/1uWvuKxi8LZJN_XV6F3pEtfRy1y2JgECC/edit?usp=sharing&ouid=117915938711430623839&rtpof=true&sd=true)

Some of the efforts include data cleaning, feature engineering, setting up machine learning models, predictive error calculation, parameter tuning, creating a dashboard and deploying an online app. 

Machine learning models were trained with the historical data coming from building permits of San Francisco available
since early 1980s (thanks to datasf.org). A set of parameters and machine learning models were tested (including Linear,Lasso model, E-Net, KRidge, GBoosting, XGBoost, LGBoost and Random Forest). **Random Forest Model**🌲🌳🌲🌳 was judged to use as a final model.

> Structural work cost 

> ✅ include cost of foundation, columns, beams, slabs, floors, roof and workmanship cost

> ❌ does not include land price, finishing work, electricity & plumbing and commercial costs

![pipeline](https://github.com/LHB-Group/Civil-Work-Bidding-And-Investment-Helper/blob/0b9bc8a0add95aa4bfb8555bd3746303d31c0cf0/.img_pipeline.PNG)

## Key documents
	
1 - Notebook on [exploratory data analysis](https://github.com/LHB-Group/Civil-Work-Bidding-And-Investment-Helper/blob/Master/NoteBooks/Exploratory_Data_Analysis.ipynb)

2 - Script on [data cleaning](https://github.com/LHB-Group/Civil-Work-Bidding-And-Investment-Helper/blob/Master/src/building_permits.py) 

3 - Notebook on [machine learning predictive models](https://github.com/LHB-Group/Civil-Work-Bidding-And-Investment-Helper/blob/Master/NoteBooks/predictive_models.ipynb)

4 - Logs on [scores of machine learning models and experiments](https://github.com/LHB-Group/Civil-Work-Bidding-And-Investment-Helper/blob/Master/Tracking/exp_logs.csv)

### Top-directory layout

    .
    ├── Docker                  # App deployment. Scripts with streamlit, final ML models and Docker container settings.
    ├── NoteBooks               # Jupyter notebooks on EDA, feature engineering and ML models
    ├── ShapeOut                # Documents on building footprints in SF
    ├── Tracking                # Logs of ML model scores and experiments
    ├── src                     # Scripts on functions, database cleaning, building ground surface area and ML model experiments 
    ├── LICENSE
    ├── README.md 
	├── README_FR.md
    └── requirements.txt

## Technologies
Project is created with:
* Python 3.8
* Jupyter Notebook 6.4.12
* Python libraries (see /requirements.txt)
* Streamlit 1.12.0
* Docker 20.10.18
* VSCode 1.71.2

## Datasets
1 - [San Francisco Permit Data](https://data.sfgov.org/Housing-and-Buildings/Building-Permits/i98e-djp9/data)

> A building permit is an official approval document issued by a government agency that allows a construction or a renovation project on a property. More information can be found on this [website](https://www.thespruce.com/what-is-a-building-permit-1398344). Each city or county has its own building office to perform multiple functions such as issuing permits, inspecting buildings for safety measures, changing rules to meet the needs of a growing population, etc. For the City of San Francisco, building permits are handled by [SF DBI](www.sfdbi.org/). The dataset includes details on application/permit ID, job location, the current status of the applications and some other details. Data is uploaded weekly by DBI.

2 - [Building Footprints in San Francisco](https://data.sfgov.org/Housing-and-Buildings/Building-Footprints-File-Geodatabase-Format-/asx6-3trm)

## Getting started

To run this project you need :

- [Python 3.10](https://www.python.org/ftp/python/3.11.0/python-3.11.0-amd64.exe)
- [pip](https://packaging.python.org/en/latest/key_projects/#pip)
- [pipenv](https://pypi.org/project/pipenv/#pipenv-python-development-workflow-for-humans) (optional)
  
### Ensure that pip module is installed by running : 
```
```sh
python -m ensurepip --default-pip
```

### How to install pipenv ?
```sh
pip install pipenv
```

### Clone the repository :
   ```sh
   git clone https://github.com/LHB-Group/Civil-Work-Bidding-And-Investment-Helper.git
   ```

### Create your virtual environment :
Go to your repository folder and run the following command.
```sh
python -m venv my_venv
# the my_venv folder should appear
```
Once created you need to activate your venv

Windows :
```sh
# Go to your repository folder and type :
./my_venv/Scripts/activate
# You should have something like :
(my_venv) C:\Users\...\Civil-Work-Bidding-And-Investment-Helper>
```
Linux / Mac OS :
```sh
# Go to your repository folder and type :
source my_venv/bin/activate
# You should have something like :
(my_venv) C:\Users\...\Civil-Work-Bidding-And-Investment-Helper>
```

### Install all required librairies :

```sh
pip install -r requirements.txt
```

## Install the project

The install.py script permit you to dowload and create all folders and files for the project. 

**<p>Build the complete dataset can take several hours because of feature engineering but <span style =""color: red"">you can download it [here](https://drive.google.com/file/d/1Ffbhy12m4JG9REEdSQwwewIFE0KUiEX3/view?usp=sharing)</span> and move it to [Datasets] Folder</p>**
```sh
# go to the src folder and run :
python ./install.py
```
**If you download the File you need to rename it :**
<p>
Exemple : 20220823_Building_Permits.csv (CreationDate+FileName)

You need to rename it to Building_Permits.csv
</p>

## License

Distributed under the MIT License. See LICENSE.txt for more information.

## Authors

Baptiste Cournault :

[GitHub](https://github.com/croustibats)

Hicham Mrani :

[GitHub](https://github.com/hicham-mrani)

Levent ISBILIROGLU :

[GitHub](https://github.com/levist7)

## Contact

Please see contact details on presentation file [above](#project).

---
Made with ❤️ in Paris
",5,5,0,0,construction,"[civil-engineering, construction, data-science, exploratory-data-analysis, feature-engineering, jupyter-notebooks, machine-learning, python, sanfrancisco]",23
ISAC-SIMO,ISAC-SIMO-Django-Backend,ISAC-SIMO,https://github.com/ISAC-SIMO/ISAC-SIMO-Django-Backend,https://api.github.com/repos/ISAC-SIMO-Django-Backend/ISAC-SIMO,Build Change - Intelligent Supervision Assistant for Construction - Sistema Inteligente de Monitoreo de Obra. Back end for managing the machine learning model pipeline.,"# ISAC-SIMO

[![License](https://img.shields.io/badge/License-Apache2-blue.svg)](https://www.apache.org/licenses/LICENSE-2.0) [![Slack](https://img.shields.io/badge/Join-Slack-blue)](https://callforcode.org/slack) [![Python 3.9](https://img.shields.io/badge/python-v3.9-blue)](https://github.com/ISAC-SIMO/ISAC-SIMO-Django-Backend) [![CII Best Practices](https://bestpractices.coreinfrastructure.org/projects/6410/badge)](https://bestpractices.coreinfrastructure.org/projects/6410)

[![Pages Build and Deploymeny](https://github.com/ISAC-SIMO/ISAC-SIMO-Website-Static/actions/workflows/pages/pages-build-deployment/badge.svg)](https://isac-simo.net)
[![Website](https://img.shields.io/website?down_message=offline&up_message=online&url=https%3A%2F%2Fwww.isac-simo.net%2F)](https://isac-simo.net)

Intelligent Supervision Assistant for Construction - Sistema Inteligente de Monitoreo de Obra

> [View documentation](https://docs.isac-simo.net) at docs.isac-simo.net

### Django Backend Repository
---
### Bash Script:
> Make sure you have installed **Python 3.9.0**

> To manage multiple Python installation use [**pyenv**](https://github.com/pyenv/pyenv-installer) or [**pyenv-win**](https://github.com/pyenv-win/pyenv-win) (for windows). Then, ``pipenv`` should be able to automatically install required python.
```sh
pip install --upgrade pip
pip install pipenv
pipenv install --python 3.9
pipenv run install-client
```

>For CentOS and other cloud servers that only support **psycopg2-binary**, use this instead:
```sh
pipenv run install-server
```

>Setup Postgresql or any desired Django supported database.
>
>Create ``` .env ``` file using ``` .env.example ``` and provide environment variables as required.
>
>``` database_settings.py ``` needs to be updated as per your database setup (or use DATABASE_URL in ``` .env ``` file)
```sh
pipenv run python manage.py migrate
pipenv run python manage.py createsuperuser
```

### Running Tests:
```sh
pipenv run python manage.py test --debug-mode --debug-sql --parallel --buffer
```
OR simply run without any flags:
```sh
pipenv run python manage.py test
```

### Running Flake8 Static Analysis:
```sh
flake8
```

### How to Bump Application Version?
<details>
    <summary>Click to view</summary>

We use SemVer scheme to manage the version number. We have created a Django Command to upgrade the version in the settings file.

#### Command Usage:
- `pipenv run python manage.py bump`              → Updates to Next Patch
- `pipenv run python manage.py bump --to=2.2.2`   → Updates Version Number to 2.2.2
- `pipenv run python manage.py bump --type=major` → Updates to Next Major
- `pipenv run python manage.py bump --type=minor` → Updates to Next Minor
- `pipenv run python manage.py bump --type=patch` → Updates to Next Patch

Releases and Tags can then be created accordingly.

</details>

### Details for Pythonanywhere:
<details>
    <summary>Click to view</summary>

#### Useful .bashrc Alias for the project if hosted in Pythonanywhere:

<details>
    <summary>Click to view</summary>

```sh
alias toenv=""cd /home/{{username}}/isac && pipenv shell""

alias server.log=""cd /var/log && tail -f {{username}}.pythonanywhere.com.server.log""
alias error.log=""cd /var/log && tail -f {{username}}.pythonanywhere.com.error.log""
alias access.log=""cd /var/log && tail -f {{username}}.pythonanywhere.com.access.log""

alias server.up=""toenv && sed -i 's/MAINTENANCE=True/MAINTENANCE=False/g' .env && touch /var/www/{{username}}_pythonanywhere_com_wsgi.py""
alias server.down=""toenv && sed -i 's/MAINTENANCE=False/MAINTENANCE=True/g' .env && touch /var/www/{{username}}_pythonanywhere_com_wsgi.py""

alias reload=""touch /var/www/{{username}}_pythonanywhere_com_wsgi.py""
```

</details>

#### Pythonanywhere wsgi.py:

<details>
    <summary>Click to view</summary>

```python
import os
import sys
from dotenv import load_dotenv

project_home = u'/home/{{username}}/isac'
if project_home not in sys.path:
    sys.path.insert(0, project_home)

load_dotenv(os.path.join(project_home, '.env'))

os.environ['DJANGO_SETTINGS_MODULE'] = 'isac_simo.settings'

from django.core.wsgi import get_wsgi_application
from django.contrib.staticfiles.handlers import StaticFilesHandler
application = StaticFilesHandler(get_wsgi_application())
```

</details>

#### Static Files:

<details>
    <summary>Click to view</summary>

| URL           | Directory                      |
| ------------- |:------------------------------:|
| /static/      | /home/{{username}}/isac/static |
| /media/       | /home/{{username}}/isac/media  |

</details>

#### If Static Files that does not exist e.g. https://example.com/static/bad-directory keeps throwing unhandled error use this temporary fix:

<details>
    <summary>Click to view</summary>

Inside ```env/lib/python3.7/site-packages/django/core/handlers/base.py``` find ```get_response``` without leading underscore and change it to as below:

```python
from django.shortcuts import render

def get_response(self, request):
    """"""Return an HttpResponse object for the given HttpRequest.""""""
    # Setup default url resolver for this thread
    set_urlconf(settings.ROOT_URLCONF)
    try:
        response = self._middleware_chain(request)

        response._closable_objects.append(request)

        # If the exception handler returns a TemplateResponse that has not
        # been rendered, force it to be rendered.
        if not getattr(response, 'is_rendered', True) and callable(getattr(response, 'render', None)):
            response = response.render()

        if response.status_code == 404:
            logger.warning(
                'Not Found: %s', request.path,
                extra={'status_code': 404, 'request': request},
            )

        return response
    except:
        return render(request, '404.html', status=404)
```

</details>

</details>

### Note:
- USER TYPES = ""User"", ""Engineer"", ""Government"", ""Project Admin"", ""Admin""
- View detailed [Developer Guide](https://www.isac-simo.net/docs/developer-guide/) & [Web Application Guide](https://www.isac-simo.net/docs/web-application/)

## Contributing
Please read [our contributing guidelines](CONTRIBUTING.md) for details of how you can get involved and please abide by the [Code of Conduct](CONTRIBUTING.md#code-of-conduct).

## Contributors
<a href=""https://github.com/ISAC-SIMO/ISAC-SIMO-Django-Backend/graphs/contributors"">
  <img src=""https://contributors-img.web.app/image?repo=ISAC-SIMO/ISAC-SIMO-Django-Backend"" />
</a>

## License
This project is licensed under the Apache Software License, Version 2, unless otherwise stated.  Separate third party code objects invoked within this project are licensed by their respective providers pursuant to their own separate licenses. Contributions are subject to the [Developer Certificate of Origin, Version 1.1 (DCO)](https://developercertificate.org/) and the [Apache Software License, Version 2](http://www.apache.org/licenses/LICENSE-2.0.txt).

> A Call for Code with The Linux Foundation
> 
> Developed By: Build Change
> 
> Supported By: IBM
",5,5,8,4,construction,"[build-change, call-for-code, construction, hacktoberfest, isac-simo, visual-recognition]",23
DingoDjango,HandMeThatBrick,,https://github.com/DingoDjango/HandMeThatBrick,https://api.github.com/repos/HandMeThatBrick/DingoDjango,Allows haulers in RimWorld to give constructors some help,"![Hand Me That Brick](http://i.imgur.com/Cocq2k0.png)

**Requires HugsLib**

Colonists assigned to Hauling will deliver resources to blueprints and construction frames.

Haulers won't actively construct if they are not assigned to construction.

Mod options can be found in **Options > Mod Settings**.
",5,5,4,0,construction,"[construction, gameplay, haul, hauling, qol, quality-of-life, rimworld, workgiver, workgiverdef, workorder]",23
ISAC-SIMO,ISAC-SIMO-React-Native-App,ISAC-SIMO,https://github.com/ISAC-SIMO/ISAC-SIMO-React-Native-App,https://api.github.com/repos/ISAC-SIMO-React-Native-App/ISAC-SIMO,Build Change - Intelligent Supervision Assistant for Construction - Sistema Inteligente de Monitoreo de Obra. This is the end-user-facing mobile app for the homeowner.,,4,4,6,4,construction,"[build-change, call-for-code, construction, hacktoberfest, isac-simo, visual-recognition]",23
DavinChurch,SQLFns,,https://github.com/DavinChurch/SQLFns,https://api.github.com/repos/SQLFns/DavinChurch,Dyalog APL tools for easy construction of SQL commands from code,"# Purpose

This document introduces a Dyalog APL toolkit for constructing text SQL commands from individual data values, using proper SQL syntax, without the programmer needing to remember the exact syntax for each command term.  It provides a simplified method of constructing such commands that is much shorter and easier than building the statements with ordinary text strings and improves readability and reduces syntactical and typographical errors.

This toolkit and documentation is intended for use by reasonably experienced APL programmers that have a basic grasp of using a SQL database.  It is designed to make their planned use of SQL easier rather than to teach them how to use SQL or convince them to use SQL.  Fortunately, the programmer need not understand very much about the SQL syntax in order to use this toolkit.  Generally, the programmer should know what SQL commands like **Select** do and how to construct them out of the typical parts (such as **Select**, **From**, and **Where**).  This toolkit is modeled on the same syntax as SQL and just takes care of the detail formatting of the individual parts for most commands.

These tools do not actually interface with a SQL database themselves but simply construct the commands that are then passed to whatever SQL interface and database that has been chosen to use for the application.

# Introduction

SQL (herein pronounced “see-kwel”) databases are powerful tools for storing and processing most kinds of data and they work well when integrated into APL business applications.  APL has had its own data filing system that works fine for many programmers’ needs, but when systems become large or complex, a commercial database system will often provide much better capabilities for the programmer’s use.

However, the syntax of the SQL language is sometimes complex and verbose, particularly from the standpoint of an experienced APL programmer.  A toolkit would be of use to help the APL programmer with such complexities by assisting him in building SQL language commands in a flexible application environment.

Granted, there’s nothing in the SQL language that cannot be constructed in a straightforward manner by concatenation of text.  But SQL can be rather picky about formatting and grammar and it can be a chore to watch out for lots of little details, especially when it may need to be done hundreds to thousands of places in a large application.  In addition, it is sometimes necessary to write code that can run against multiple databases with slightly different command syntax, or the database system being used may have to change over time.  In order to avoid rewriting the code every time, a toolkit could make the necessary adjustments at run-time to operate with whatever the database system in use requires.

For instance, whenever a user can enter their own optional selection criteria as input, how many times should the expression `,(~0∊⍴where)/' Where ',where` need to be written to include optional restrictions? Wouldn’t it be nicer if there were a simple subroutine to do that kind of work automatically?  And while it’s at it, how about giving it 0 to n separate terms for that Where clause and have it string them together with the word And between each one?  Or even build each of those terms internally given a list of field names to compare with and the data (supplied by the application user, possibly with wildcard characters) to compare them to (each field optionally, of course, since not all such selection data will normally be entered every time)?  And don’t forget what happens to SQL commands when the user enters a Quote character in their data if there isn’t extra code included everywhere to double potential quotes.  (An unmatched quote is also a prime method that hackers use to break into web sites.)  Care must also be taken to handle any negative numbers that would require extra negative-sign formatting or large or fractional numbers that require a more-than-usual number of digits.  Well, those are some of the kinds of things a toolkit can do automatically.

Herein is provided just such a toolkit that can be included in an application (as a static namespace) and used to dynamically build SQL language commands on-the-fly, based on static, user-entered, or program-adjustable data.  It also makes short and simple commands even easier and more readable to include in the code.  So if an application is being built that needs more than a few simple, unconnected tables (which is why SQL is probably being used in the first place), here’s a way to quickly and easily write very readable code to produce executable SQL commands.

# Repository Organization

This is a member of the [APLTree project](https://github.com/aplteam/apltree) and is also available via the [Tatin package manager](https://github.com/aplteam/Tatin).

## The Distribution Directory

This directory contains a workspace copy of the code for those that desire that form.  However, it is expected that most distribution will be done with the individual source code text files in the Source directory. A namespace script is also available here for those that prefer that distribution mechanism.

## The Documentation Directory

This directory contains a PDF file with extensive documentation on the toolkit and its components.  It begins with an introduction to this toolkit and how its routines correspond to the common SQL clauses.  Following that is a detailed description of each one of the public routines, each with examples of use.  This is reference material on how to use each routine but it is described more conversationally than technically, or in the more complicated cases a tutorial-style discussion is used as an aid in comprehension.  A short section about toolkit internals follows, for those that would like to know.  The last chapter is a quick reference guide on the syntax and purpose of each of the public routines for easy reference when a reminder of usage is needed.

## The Source/SQLFns Directory

This directory is intended to be imported as a complete namespace and contains all the code needed to use this package.  It contains no external dependencies.  Most function names are identical to the SQL keywords which they support.  For instance, the `Select` function formats the SQL **Select** clause.  Additional routines are provided for composite commands or general utility use. A few other functions (with names beginning with ""∆"") are present in this namespace for internal use only rather than public use.

## The Source/SQLFns/API Directory

This directory contains only references to the actual SQLFns code.  It is here only to provide a limited API interface point for use by the [Tatin package manager](https://github.com/aplteam/Tatin). This namespace is not needed at all if the code is being imported without using Tatin.

## The Source/Testing Directory

This directory is its own namespace which contains facilities for testing all the SQLFns functions, which are expected to be found in the #.SQLFns namespace.  This code is provided only for testing the main toolkit and is not needed for any application use.

Most of the functions herein are named after the corresponding public routines in SQLFns.  Simply execute the desired function here to test the corresponding SQLFns routine.  If multiple functions are to be tested, the `Test` function may be invoked with a list of function names (in almost any reasonable structure and format) as a right argument.  These names may include an `*` wild-card character, so `Test '*'` will execute all the functions in the workspace.

For more details on using `Test` and the testing engine, see the [Tester package](https://github.com/DavinChurch/Tester) in the companion repository.",3,3,2,0,construction,"[apl, apltree, commands, construction, dyalog, dyalog-apl, formatting, sql]",23
jim11662418,Signetics-2650-SBC,,https://github.com/jim11662418/Signetics-2650-SBC,https://api.github.com/repos/Signetics-2650-SBC/jim11662418,A simple Signetics 2650 single board computer,"# Signetics_2650_SBC
A simple [Signetics 2650](https://en.wikipedia.org/wiki/Signetics_2650) single board computer featuring both the [PIPBUG](http://www.bitsavers.org/components/signetics/2650/Application_Memo_M20_-_PIPBUG_April_1979.pdf) monitor and the [MicroWorld BASIC](https://binnie.id.au/MicroByte/BASIC%20Manual.pdf) interpreter in EPROM. The firmware was assembled using a Win32 port of the [VACS 1.24 assembler](http://github.com/Dennis1000/VACS/).


<p align=""center""><img src=""/images/2650 SBC CPU.png""/>
<p align=""center"">Signetics 2650 SBC CPU</p><br>
<p align=""center""><img src=""/images/2650 SBC Memory.png""/>
<p align=""center"">Signetics 2650 SBC Memory</p><br>
<p align=""center""><img src=""/images/2650 SBC LED Port.png""/>
<p align=""center"">Signetics 2650 SBC LED Port</p><br>
",3,3,1,0,construction,"[2650, assembler, construction, hardware, sbc, signetics, single-board-computer]",23
mertcanuygun,CSharp_Object-Oriented_Programming,,https://github.com/mertcanuygun/CSharp_Object-Oriented_Programming,https://api.github.com/repos/CSharp_Object-Oriented_Programming/mertcanuygun,Object-Oriented Programming practices,,3,3,1,0,construction,"[abstraction, class, construction, inheritance, polymorphism, properties]",23
weWrk,weWrk_ios,weWrk,https://github.com/weWrk/weWrk_ios,https://api.github.com/repos/weWrk_ios/weWrk,"weWrk is a work related social networking platform for construction workers and companies, using the Firebase API and infrastructure.","<p align=""center"">
	<a href=""https://github.com/weWrk/weWrk_ios/blob/master""><img src=""/wrkbook_logos_green_Avenir_logo.png"" alt=""weWrk"" width=""300"" height=""300""/></a><br /><br />
</p>


# Group Project - weWrk

weWrk is a work related social networking platform for construction workers and companies, using the [Firebase](https://firebase.google.com) API and infrastructure.

Time spent: 1.3 months spent in total

## User Stories

The following **required** functionality is must be completed:

- [x] User can sign in/sign up to weWrk, using their gmail, facebook, or email accounts and sign out.
- [ ] On signup, user is asked for information related to their work history, who they know, interests.
- [x] App remembers signed in users and settings across app restarts.
- [x] User can see their timeline page, job applications, and profile page.
- [x] People, jobs, companies, can be searched, and viewed. 
  - [ ] User can apply for a job.
  - [ ] User can see job location using map api.
  - [ ] Users can rate jobs they have completed.
- [ ] User can manage their profile page and edit things such as their profile picture, contact info, experience.

The following **additional** features are implemented:
- [ ] User can be notified of any messages or events happening in the app.
- [x] User can create a network of contacts whom they know, and follow them.
- [x] User can have message conversations between companies or other users.
- [ ] Profile page has layer animations on user pull down and scroll.
- [ ] User can see job detail recommendations.

The following is the Database schema:

users model:
- displayName: String
- email: String
- id: String
- profileURL: String

jobPost model:
- category: String
- company: String
- function: String
- jobDescription: String
- location: String
- photoURL: String
- timestamp: String
- title: String

messages:
- MediaType: String
- date: String
- senderId: String
- senderName: String
- text: String
- toId: String
 
userSiteImagePost:
- imageURL: String
- sitePostKey: String

userProfilePost:
- Description: String
- Like: Int
- images
  - url1: String
  - url2: String
- postBy: String
- postUserID: String
- site: String


## Video Walkthrough 

Here's a walkthrough (tentative) of implemented user stories:

<img src='https://github.com/weWrk/weWrk_ios/blob/fix-feedVC-Jose/weWrk%20Video%20Walkthrough_1.gif?raw=true' title='Video Walkthrough' width='' alt='Video Walkthrough' />

GIF created with [LiceCap](http://www.cockos.com/licecap/).

## Wireframes
<img src='http://i.imgur.com/kbfiY5r.jpg' title='Wireframes'/>

## License

Copyright 2017 weWrk

Licensed under the Apache License, Version 2.0 (the ""License"");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an ""AS IS"" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
",3,3,5,0,construction,"[alpha-stage, construction, ios-swift, messaging, social-network]",23
pontazaricardo,Webcrawler_HtmlAgilityPack,,https://github.com/pontazaricardo/Webcrawler_HtmlAgilityPack,https://api.github.com/repos/Webcrawler_HtmlAgilityPack/pontazaricardo,This is an example of how to crawl a website using the (NuGet) HtmlAgilityPack and saving the results to a txt file.,"# Webcrawler_HtmlAgilityPack

This is an example of how to crawl a website using the (NuGet) HtmlAgilityPack and saving the results to a text file. 

## Installation

In order to install the **HtmlAgilityPack** module to your project, in Visual studio do the following:
1. Go to *Tools* -> *NuGet Package manager* -> *Manage Nuget Packages for Solution...*
2. Search for *HtmlAgilityPack* in the search bar.  
3. When found, click your project and then click on *Install*.
4. In the *Review Changes* window, click on OK.

The above steps will install the **HtmlAgilityPack** in your project. A confirmation *readme.txt* will be displayed. In order to be completely sure that your project now has the **HtmlAgilityPack**, check your project's *References*.

![installation](/images/installation.gif?raw=true)

## How to crawl a website

For this project, the website [http://www.espn.com/nba/statistics](http://www.espn.com/nba/statistics) was crawled as an example. At the moment of the development of this project, this website had the following tables:
1. Offensive Leaders,
2. Defensive Leaders,
3. Assists,
4. Blocks, 
5. Field Goal, and
6. Steals

with the ranking, name, hyperlink and points of each player. After analyzing the HTML, some defined structures are needed to be identified. For this project, the structures:
```html
<div class=""mod-container mod-table mod-no-footer"">
```
and 
```html
<div class=""mod-container mod-table mod-no-footer mod-no-header"">
```
were spotted. These two structures are the ones that contain the players' data.

![data](/images/htmlSections.gif?raw=true)

After identifying the needed sections, the website crawl can be done in three easy steps.

### Note

The selected website has 4 sections
```html
<div class=""mod-container mod-table mod-no-footer"">
```
and also 4 sections
```html
<div class=""mod-container mod-table mod-no-footer mod-no-header"">
```
but we will **only use the first two** of the *mod-container mod-table mod-no-footer* type because the last two belong to a different section,

![data2](/images/othersection.gif?raw=true)

so we will ignore these two last sections.

## Crawling code

### Loading the main site

The first step is to crawl the main site. In order to do this, the code
```c#
string mainSite = ""http://www.espn.com/nba/statistics"";
HtmlWeb site = new HtmlWeb();
HtmlDocument htmlDocument = site.Load(@mainSite);
```
is needed. Please note that for these commands to work, you need to do the import:
```c#
using HtmlAgilityPack;
```

### Parsing individual sections

Now that the main site has been crawled, we need to access the individual sections containing the data we need. For this project, we use the code
```c#
HtmlNodeCollection leaderBoards_01 = htmlDocument.DocumentNode.SelectNodes(""//div[@class='mod-container mod-table mod-no-footer']""); //We need only the first two.
HtmlNodeCollection leaderBoards_02 = htmlDocument.DocumentNode.SelectNodes(""//div[@class='mod-container mod-table mod-no-footer mod-no-header']""); //We will use all of them
```
This code will create a *HtmlNodeCollection* object that contains all the *<div>* sections of the form
```html
<div class=""mod-container mod-table mod-no-footer"">
<div class=""mod-container mod-table mod-no-footer mod-no-header"">
```

#### Notes

About the *HtmlNodeCollection* objects:
1. If you use the double slash notation *//* before any HTML tag, it will look for these tags from the beginning of the site.
2. If you don't use the *//* tags, it will look from the parent object.

So for example
```c#
HtmlNodeCollection collection = Parent.SelectNodes(""//div[@class='foo bar']"");
```
will look starting from the main site (and probably will find *div* that are not inside *Parent*), and
```c#
HtmlNodeCollection collection = Parent.SelectNodes(""div[@class='foo bar']"");
```
will look for the *div* inside *Parent* only (in one level).

### Construction of objects

After reaching the HTML level that contains the needed data, it can be obtained as normal values by using the **Attributes** or **InnerText** methods as
```c#
HtmlNode cell_name_aTag = cell_name.SelectNodes(""a"").FirstOrDefault();

string link = cell_name_aTag.Attributes[""href""].Value.ToString();
string name = cell_name_aTag.InnerText;
```
With these values, classical objects can be constructed.

## Saving the data

After the data has been crawled, it can be saved in different places (as a Database for example). For this project, it is saved to a text file by the code
```c#
public static bool SaveToFile(List<Player> listOfPlayers, string title)
        {

            string fileName = ConfigurationSettings.AppSettings[""File.location""];

            try
            {
                using (System.IO.StreamWriter file = new System.IO.StreamWriter(fileName, true)) //we use 'using' because it automatically flushes and closes the stream; also calls the IDisposable.Dispose of the stream object.
                {
                    file.WriteLine(""---------------------"");
                    file.WriteLine(title);
                    file.WriteLine("""");

                    for (int i = 0; i < listOfPlayers.Count; i++)
                    {
                        int counter = i + 1;
                        file.WriteLine(counter + "", "" + listOfPlayers[i].name + "", "" + listOfPlayers[i].points + "", "" + listOfPlayers[i].link);
                    }

                    file.WriteLine(""---------------------"");
                }
            }
            catch(Exception e)
            {
                Console.WriteLine(e);
                return false;
            }

            return true;
            
        }
```
which returns either **true** or **false** for success or failure when saving, respectively.

### Notes

For this function
1. The file path is read from the *ConfigurationSettings.AppSettings[""File.location""]* object. Please check the project's **App.config** to verify its value.
2. The commands
```c#
using (System.IO.StreamWriter file = new System.IO.StreamWriter(fileName, true)){
	...
}
```
was used. This command automatically flushes and closes the stream and also calls the **IDisposable.Dispose** of the stream object.

### Execution

When running the project, each step's status is output to console.

![console](/images/consolegif.gif?raw=true)

### Results

After running the program, a text file is generated under **C:\webcrawler_results.txt** (If you want to change the path of this file - or the file name - modify the *File.location* value in the **App.config** file).

![result](/images/result.png?raw=true)",3,3,0,1,construction,"[construction, crawler, html, htmlagilitypack, nuget, txt-file-concatenation, webcrawler, webcrawler-htmlagilitypack]",23
mac137,ConSLAM,,https://github.com/mac137/ConSLAM,https://api.github.com/repos/ConSLAM/mac137,ConSLAM: Construction Dataset for SLAM,"  <h1 align=""center"">
  ConSLAM: Construction Dataset for SLAM</h1>
  <p align=""center"">
    <a href=""https://mac137.github.io""><strong>Maciej Trzeciak</strong></a>
    ·
    <a href=""https://copyme.github.io""><strong>Kacper Pluta</strong></a>
    ·
    <a href=""https://yasminfathy.github.io""><strong>Yasmin Fathy</strong></a>
    ·
    <a href=""""><strong>Lucio Alcalde</strong></a>
    ·
    <a href=""""><strong>Stanley Chee</strong></a>
    ·
    <a href=""""><strong>Antony Bromley</strong></a>
    ·
    <a href=""https://cit.eng.cam.ac.uk/lab-director""><strong>Ioannis Brilakis</strong></a>
    ·
    <a href=""https://team.inria.fr/titane/pierre-alliez/""><strong>Pierre Alliez</strong></a>
  </p>

  <h3 align=""center"">
    <a href=""https://link.springer.com/chapter/10.1007/978-3-031-25082-8_21"">ECCV 2022 Workshops Paper</a> |
    <a href=""https://www.repository.cam.ac.uk/handle/1810/345700"">Free Journal Extension Paper</a>

  </h3>
  <div align=""center""></div>
</p>
<p align=""center"">
  <a href=""#"">
    <img src=""./media/intro.gif"" alt="""" width=""90%"">
  </a>
</p>

<details open=""open"" style='padding: 10px; border-radius:5px 30px 30px 5px; border-style: solid; border-width: 1px;'>
  <summary>Table of Contents</summary>
  <ol>
    <li>
      <a href=""#download-the-dataset"">Download the dataset</a>
    </li>
    <li>
      <a href=""#hardware"">Hardware</a>
    </li>
    <li>
      <a href=""#evaluate-your-trajectory"">Evaluate your trajectory</a>
    </li>
    <!-- <li>
      <a href=""#install-code"">Install code</a>
    </li> -->
    <!-- <li>
      <a href=""#faq"">FAQ</a>
    </li> -->
    <li>
      <a href=""#todo"">TODOs</a>
    </li>
    <li>
      <a href=""#citation"">Citation</a>
    </li>
    <li>
      <a href=""#contact"">Contact</a>
    </li>
  </ol>
</details>




# Download the dataset

<!-- ```
https://drive.google.com/drive/folders/1qOZGXjlLQNu15xakG7NqE5WEv3Iu9akr?usp=sharing
``` -->
<a href=""https://drive.google.com/drive/folders/1qOZGXjlLQNu15xakG7NqE5WEv3Iu9akr?usp=sharing"">LINK</a> to the dataset

<span style=""color:red"">The bag file in sequence 1 is faulty. Do no use it for your SLAM algorithm</span>

# Hardware
<p align=""left"">
  <a href=""#"">
    <img src=""./media/scanner.png"" alt="""" width=""45%"">
    <img src=""./media/leica.jpg"" alt="""" width=""45%"">
  </a>
</p>

# Software installation
*Tested on Ubuntu 20.04 with ROS Noetic.*

1. Clone this repo to your catkin work space `path/to/ros_ws/src`
2. Install the dependencies of the packages in this repo using for example `rosdep install --from-paths src --ignore-src -r -y` as instructed [here](http://wiki.ros.org/rosdep)
3. Install the packages in this repo using a standard `catkin_make` command as instructed [here](http://wiki.ros.org/catkin/commands/catkin_make)
  

# How to run
Connect all the sensors: RGB camera, Velodyne and IMU to your computer/laptop.
Make sure the system recongises them all.

Run `roslaunch pp_launcher 4london.launch`

# Evaluate your trajectory
We have extended a popular trajectory evaluation package [evo](https://github.com/MichaelGrupp/evo) for odometry and SLAM trajectory evaluation.

Save your poses you would like to evaluate as individual `.txt` files containing 4x4 pose matrices. Our script in `tools/` can then convert the poses into two file formats that EVO uses. These file formats are TUM and KITTI.

To run the code type: 

```python ./tools/pp2evo.py -w <path_to_dir_ppix_matrices> -t <output_tum_file_format> -k <output_kitti_file_format>```


The tool can output a TUM, a KITTI file, or both if necessary.

## Using EVO
For general information about Evo, please, see the official project web page: https://github.com/MichaelGrupp/evo

## Plotting trajectories by EVO

To plot trajectories against a reference, it is sufficient to call:

```evo_traj tum 00_ORB.txt 00_SPTAM.txt --ref=00_gt.txt -p --plot_mode=xy```

in the above example, TUM file format is used (see the first argument). The KITTI file format is quite limited, and it should not be used.

To compute Absolute Pose Error we can simply call

```evo_ape tum 00_gt.txt 00_ORB.txt -v --plot --plot_mode xy --save_results results/ORB.zip```

In this example, the automatic alignment of trajectories is switched off.

Note that the zip file can be used for further plotting in using `evo_res`, e.g.,

```evo_res results/*.zip -p --save_table results/table.csv```


## Generating high-quality plots

To generate plots ready for a paper, set up the configuration of Evo as you desire with `evo config`, for example:

``` sh
evo_config set plot_seaborn_style whitegrid \
               plot_fontfamily serif plot_fontscale 1.2 \
               plot_linewidth 1.0 \
               plot_figsize 5 4.5 \
               ros_map_unknown_cell_value 128 \
               plot_usetex               
 ```

Before and after:

  <a href=""https://github.com/MichaelGrupp/evo/wiki/images/plot_style_default.png"" target=""_blank"">
    <img src=""https://github.com/MichaelGrupp/evo/wiki/images/plot_style_default.png"" alt=""evo"" height=""200"" border=""5"" />
  </a>
  
  <a href=""https://github.com/MichaelGrupp/evo/wiki/images/plot_style_changed.png"" target=""_blank"">
    <img src=""https://github.com/MichaelGrupp/evo/wiki/images/plot_style_changed.png"" alt=""evo"" height=""200"" border=""5"" />
  </a>

You can find more information about this configuration [here](https://github.com/MichaelGrupp/evo/wiki/Plotting).

<!-- # Install code
Install the code used for data collection on construction site.
<p align=""left"">
  <a href=""#"">
    <img src=""./media/flow.png"" alt="""" width=""50%"">
  </a>
</p>

coming soon


# FAQ
coming soon -->



# TODO
- [ ] Replace evo images with ConSLAM trajectories.
- [ ] create a docker image for faster installation


# Citation
Please cite either of the papers:
```bibtex
@inproceedings{trzeciak2023conslam,
  title={Conslam: Periodically collected real-world construction dataset for SLAM and progress monitoring},
  author={Trzeciak, Maciej and Pluta, Kacper and Fathy, Yasmin and Alcalde, Lucio and Chee, Stanley and Bromley, Antony and Brilakis, Ioannis and Alliez, Pierre},
  booktitle={Computer Vision--ECCV 2022 Workshops: Tel Aviv, Israel, October 23--27, 2022, Proceedings, Part VII},
  pages={317--331},
  year={2023},
  organization={Springer}
}
```
```bibtex
@article{trzeciak2023conslamExtension,
  title={ConSLAM: Construction Data Set for SLAM},
  author={Trzeciak, Maciej and Pluta, Kacper and Fathy, Yasmin and Alcalde, Lucio and Chee, Stanley and Bromley, Antony and Brilakis, Ioannis and Alliez, Pierre},
  journal={Journal of Computing in Civil Engineering},
  volume={37},
  number={3},
  pages={04023009},
  year={2023},
  publisher={American Society of Civil Engineers}
}
```


# Contact
I have ideas on how to improve this dataset, but I am just about to graduate so I might not have much time to work on this these months. If you are interested in cooperation, feel free to reach out: <a href=""https://mac137.github.io""><strong>mac137.github.io</strong></a>


# Licence
Copyright (C) 2023, University of Cambridge, all rights reserved.
 
THIS SOFTWARE IS PROVIDED “AS IS” FOR ACADEMIC USE ONLY AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDERS OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY. OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.",56,56,4,2,construction,"[construction, dataset, point-cloud, slam]",23
iTrellis,classloader,iTrellis,https://github.com/iTrellis/classloader,https://api.github.com/repos/classloader/iTrellis,classloader,"# classloader
class loader in Go

## [Example](example/main.go)

```go
package main

import (
	""fmt""
	""reflect""

	""github.com/iTrellis/classloader""
)

type Test struct{}

func (p *Test) Construct() {}

func (p Test) Hello(name string) {
	fmt.Println(""hello:"", name)
}

func main() {
	c := classloader.Default

	c.LoadClass(""classloader:Test"", (*Test)(nil))

	c.LoadClass("""", (*Test)(nil))

	// unsupported class' type: string
	c.LoadClass(""classloader:Aha"", ""name"")

	NameTest()

	ClassLoaderTest()

	DynamicAccess()
}

func ClassLoaderTest() {

	t, e := classloader.Default.FindClass((*Test)(nil))
	if !e {
		fmt.Println(""error:"", ""classloader:Test not exist"")
		return
	}

	test := reflect.New(t)

	if !test.IsValid() {
		fmt.Println(""error:"", ""classloader:Test is invalid"")
		return
	}

	testI, _ := test.Interface().(*Test)

	testI.Hello(""class loaded"")

}

func NameTest() {

	t, e := classloader.Default.FindClass(""classloader:Test"")
	if !e {
		fmt.Println(""error:"", ""name class not exist"")
		return
	}

	test := reflect.New(t)

	if !test.IsValid() {
		fmt.Println(""error:"", ""name class is invalid"")
		return
	}

	testI, _ := test.Interface().(*Test)

	testI.Hello(""name class loaded"")
}

func DynamicAccess() {
	da := classloader.NewReflectiveDynamicAccess(classloader.Default)

	fmt.Println(da.GetClassFor(""classloader:Test""))

	ins, e := da.CreateInstanceByName(""classloader:Test"")
	if e != nil {
		fmt.Println(""error:"", e)
		return
	}

	testI, _ := ins.(*Test)

	testI.Hello(""DynamicAccess"")
}
```",3,3,3,0,construction,"[class, class-loader, classloader, construct, construction, dynamic, go, golang, loader, reflective]",23
hotelcaliforniabm,duxel,hotelcaliforniabm,https://github.com/hotelcaliforniabm/duxel,https://api.github.com/repos/duxel/hotelcaliforniabm,A nifty way to build modular multi story structures,"# düxel
A nifty way to build modular multi story structures

![alt text](https://github.com/hotelcaliforniabm/duxel/blob/master/collage.jpg ""Meat space Düxels"")

## Components
All files (.skp) are created with [Sketchup](https://www.sketchup.com/), but I have also provided DXF (line NOT mesh) files for easy import into other CAD Software.

### Node sheet
We have been using 18mm (3/4"") marine grade baltic birch plywood (and I recommend you do too, because I have tried to use cheaper stuff and it's not strong enough and also can't be cut with low enough tolerance). Therefore all designs assume 3/4"" material.

The holes are used to hook in the ratchet straps needed to get the diagonal cross tension that keeps the structure together.

The reason the sheets are sized 11.5in is to maximize the amount we can cut out of a 4x8ft plywood sheet (the 1/4"" drill bit eats the margins).

The node sheet dxf files are ready to be sent over to your fabricator of choice. I recommend letting them know that the sheets are meant to be slid together so that they get the machine set up with the right tolerance. You will need a 1/4"" diameter drill bit or otherwise you will have to modify the files.

![alt text](https://github.com/hotelcaliforniabm/duxel/blob/master/node/3:4in%20plywood%20node%20sheet.jpg ""Düxel Node Sheet"")

### Node
6x 3/4in thick node sheets are required to assemble one node.

Since you won't be needing all holes on a node for structural purposes you can use the other to run cables, attach fabric, flag poles, etc.

Nodes also make for amazing cup holders btw.

![alt text](https://github.com/hotelcaliforniabm/duxel/blob/master/node/3:4in%20plywood%20node.jpg ""Düxel Node"")

### Subfloor
2x 3/4in thick subfloors with each 2x 2x4 joists are required for one floor.

Mind you that the floors are not up to construction code! Thankfully plywood is amazing material and they are good enough for a temporary structure with lots of people on them dancing and doing other shenanigans. I am considering either using 4x4 for the joists next time or adding a 3rd 2x4 joist... there are trade offs though.

We used construction grade plywood for the floors from HomeDepot.

![alt text](https://github.com/hotelcaliforniabm/duxel/blob/master/subfloor/Subfloor.jpg ""Düxel Subfloor"")


## Düxel
With 8x nodes and 12x 4x4 7'7"" lumber pieces one can put together a düxel (dust voxel).

You will need ratchet straps to get the diagonal cross tention that keeps the structure together. We used [these](http://www.cargoequipmentcorp.com/2-Inch-Ratchet-Straps-with-Wire-Hooks-p/57xx84x-12.htm) 14ft ones with a working load limit of 3,333lbs.

I single düxel requires about 8x straps depeding on how stiff you need the structure to be. Larger structures usually can do with less. We calculated 1.75 per node to estimate the amount for our structure (You will need more straps during setup than for the finished structure though).
 
![alt text](https://github.com/hotelcaliforniabm/duxel/blob/master/duxel/Duxel.jpg ""Düxel"")

## Packing
I designed the subfloors so that they can be efficently stacked with the lumber in between.

![alt text](https://github.com/hotelcaliforniabm/duxel/blob/master/duxel/Stacked%20Components.jpg ""Packed Düxel components"")

## Sub projects
We have designed a couple additional components for this system

### Shower
![alt text](https://github.com/hotelcaliforniabm/duxel/blob/master/sub-projects/shower/duxel_shower.jpg ""Düxel shower"")
In 2019 we build a really fanatastic shower out of a düxel. The key challenge was to design and build a floor unit that serves as shower pan. 

* [Sketchup File](https://github.com/hotelcaliforniabm/duxel/blob/master/sub-projects/shower/duxel_shower.skp)
* [DXF File](https://github.com/hotelcaliforniabm/duxel/blob/master/sub-projects/shower/duxel_shower.dxf)

### Ceiling Joists
![alt text](https://github.com/hotelcaliforniabm/duxel/blob/master/sub-projects/ceiling%20joists/ceiling_joist_photo.jpg ""Düxel ceiling joist in action"")
![alt text](https://github.com/hotelcaliforniabm/duxel/blob/master/sub-projects/ceiling%20joists/24ft_ceiling_joists.jpg ""Düxel ceiling joists"")
In 2019 we also decided to build some 24ft ceiling beams to have a larger roof. This is typically very straight forward but we had two extra requirements a) fitting them into our 20' shipping containers and b) them being strong enough for aerial acrobatics. As such we cam up with the following design that has a breaking strength of 5000lbs at center.

The ends of the joists have holes in them in the right size and position to match the ones of the nodes. This is to be able to secure them additionally to the ratchet straps...which seemed reasonable given their size. We used simple stage safety steel wire loops to do so.

* [Sketchup File](https://github.com/hotelcaliforniabm/duxel/blob/master/sub-projects/ceiling%20joists/24ft_ceiling_joists.skp)
* [DXF File](https://github.com/hotelcaliforniabm/duxel/blob/master/sub-projects/ceiling%20joists/24ft_ceiling_joists.dxf)

### Stage truss mounts
![alt text](https://github.com/hotelcaliforniabm/duxel/blob/master/sub-projects/stage%20truss%20mounts/photos/61235853_10219610108666677_3245233441536475136_o.jpg ""Düxel stage truss mounts"")
Also In 2019 we used real stage Par lights for the first time and needed a way to mount them to the structure. We decided to mount them in clusters via stage truss pipes that are connected to the nodes with standard swivel clamps which worked really great. For heavier gear its also possible to use two swivels on each end. 

The pipe we used is actually just 8ft long, 2in diameter conduit pipe from the hardware store...and the swivels we used are [these 2in clamps ones](https://www.amazon.com/dp/B07F3WYFC2).

Additionally to clamping we used 2 safety steel wires per pipe that was connected to the pipe via standard eye hook clamps.

There is no CAD files for this but we have [a collection of photos that show the different mounting options](https://github.com/hotelcaliforniabm/duxel/tree/master/sub-projects/stage%20truss%20mounts/photos)

## Some Advice
* Practice Setup! Don't just willy nilly show up on the playa and try to wing it
* Tools: a level, multiple (step)ladders, work gloves, rubber mallets, a crow bar and maybe an actual mallet (for when shit went wrong)
* You will need a flat and stable ground, specially for larger/multi-level structures
* Use kiln dried lumber for the 4x4 to avoid warping and cracks (otherwise its going to be a one time only project)
* Build the first düxel first and make sure its 100% level... otherwise you are going to multiply the mess
* Only have 3-4 people working on putting the structure together at a time... the others can deliver materials
* Put the subfloors in before you tighten it
* Deciding where and where not to put ratchets is an art on itself...better find someone who knows what she is doing!
* The structure will takes 2-3 days to settle...so you need to keep tightening the ratchets every day
* To build the hotel structure you see on the photo it took about 12 people 2 days to completly set it up (incl fabrics, lights, etc) and 20 people about 2h for teardown and packing (under playa conditions)
* It's düxel not duxel... because umlauts :)

Please feel free to reach out if you have questions...and send photos of your düxel projects!

## Tools
* [Voxel based prototyping](http://voxelbuilder.com)

## Todo's
* Create metric versions of the designs so that people outside of the US can use it
* Improve the subfloors
* Ratchets need to be keep fastened every day, I wonder if there is a better fastener
* Explore using cheaper materials

## FAQ
Q: What are the support beams for the second story floor? and how are they attached?

A: These subfloor are built with construction grade 8x4 plywood, and 2x4 beams to support. We built a jig to make a bunch of them with the correct measurements detailed in the design.

Q: What are the weight and movement restrictions per 8'x8' cube?

A: First of all, this system is not up to code and we will be in no way liable for what happens!

Now that we got that out of the way: It’s a temporary structure and most of the engineering assumed that.

Practically speaking we have had probably up to 20 people dancing on a single duxel without issues (more people will hardly fit on a 8x8ft space).

I am sure if somebody big enough tried and took a huge hard jump in the center of the floor it would snap...but it’s unlikely to collapse or break through....simple because plywood is hell of a material. There is also always two more ratchets diagonally under each floor.

The only damage we ever had was some screws getting pulled through the plywood on the edges...this was in part because they were drilled in too deep and part because that’s the weakest part. We use washers now and it hasn’t been an issue.

Now about the theory: The beams we use are 7’ 7” 4x4 kiln dried Douglas fir lumber. If memory serves well each of those beams can carry 10,000lbs vertically so a single duxel can carry 40,000lbs (evenly distributed). So it’s unlikely that the vertical beams will be the bottleneck. That said if you wanna go really high or do other crazy stuff you can easily double/triple up the vertical beams (we will be doing so this year for a aerial acrobatics setup).

Now to the horizontal 4x4s, those can take about 4000lbs at center...again evenly distributed that’s 16000lbs. It’s actually a bit stronger because you got another 3/4in plywood layer on top.

Now to the nodes, the ones we made are 3/4in marine grade Baltic birch ply...plywood can withstand about 4000-5000 psi of compression. The 4x4 beams are actually 3.5x3.5in so they actual surface is 12.25 square inch...means it can withstand up to 49,000-61,250lbs! The holes for the ratchet straps can hold up to 10,000lbs each...so it's unlikely to rip them out when tigthening the ratchet straps too much (the ones we use are rated 4000lbs)...and we have never achieved to rip one out.

Now a word of caution, we tried to use cheaper ply for the nodes and actually managed to rip out a hole with a ratchet so don’t cheap out here!

Given that losing a hole is a possibility I always ensure 2x/3x safety when we build structures by using two straps per diagonal or having a duxel right or left which has another diagonal ratchet. 

Q: Could the subfloor be done away with and the 4x4 go directly to the ground with respect for butting it into a wider pad perhaps 1'x1'? Any ideas about how the posts could be stabilized against by the diagonal forces from the straps... perhaps adjacently placed large screws in the ground with some for of connecting tie to the post?

A: In general we do not recommend this, as the structure is meant to be symmetrical and held together with tension by the ratchet straps. As you pointed out, if you get rid of the base structure (4 nodes, and connecting 4x4 beams), you have to do a lot of work to stabilize it. Not sure why you would want to do this - cost? lowering the floor?

Q: What is the cost per cube approx., I'm assuming subfloor + 4 posts + straps - not including roofs?

A: Roughly $750 for a standalone cube, but decreases when you are able to reuse nodes

8x nodes * $62/node = 496
12x 4x4 beams * $10/beam = 120
2x 8x4 3/4"" ply * $15/ply = 30
4x 8' 2x4 * $6 ea = 24
6x industrial cargo ratchet straps * $12/strap = 72

This would not include roofs, and you can strengthen the cube by adding 2 more straps.

## Recommendations
* We get our nodes CNC machined by Rob at [Lucid Machine Art](http://www.lucidmachineart.com)
* We use 2in wide, 14ft long ratchet straps from [Cargo Equipment Corp](https://www.cargoequipmentcorp.com/2-Inch-Ratchet-Straps-with-Wire-Hooks?color=4&overall_strap_length=6&_ga=2.93086111.384578439.1529685610-1842849253.1529685610)

## Thanks
* Gregg Fleishman on who's patent this all is based on
* The Lost Hotel for pioneering this idea
* All the amazing souls at [Hotel California](https://www.facebook.com/HotelCaliforniaBM) for making this happen
* Douglas Waters for helping me picking the right type of lumber (and where to get it without breaking the bank)
* Stephanie for teaching me how to use a CNC machine and giving me a lesson on wood types
* Rob Ehret who was right about using baltic birch marine grade plywood from the beginning and letting us use his shop
* Slawek Krause for reaffirming that this would probably work :)
* Jenny Guan for adding the umlaut :)

## License
Copyright (c) 2016-2019 Matthias Wagner

Node system based on expired patent [![US4551960-A](https://www.google.com/patents/US4551960)](https://www.google.com/patents/US4551960) by Gregg Fleishmann who was so kind to allow non commercial use.

## Safety Disclaimer
This project and the material covered is for informational purposes only. We take no responsibility for what you do with this knowledge. We can not be held responsible for any property or medical damages caused by items you read about here. We would advise you to check your local laws. Some of the items we refer to are illegal in some areas, and we would highly advise you against building these in said areas.

The material is for informational purposes only. By taking any information or education material, you assume all risks for the material covered. You agree to indemnify, hold harmless, and defend this project from any and all claims and damages as a result of any and all of the information covered.

By taking and/or using any informational resources from this project, you agree that you will use this information in a safe and legal manner, consistent with all applicable laws, safety rules, and good common sense. You further agree that you will take such steps as may be reasonably necessary or required by applicable law to keep any information out of the hands of minors and untrained and/ or immature individuals.
",48,48,9,0,construction,"[burningman, cnc-machine, construction, modular, woodworking]",23
sansajn,scons-starter,,https://github.com/sansajn/scons-starter,https://api.github.com/repos/scons-starter/sansajn,project construction made easy (with SCons) starter tutorial,,3,3,2,4,construction,"[build-tool, construction, cpp, glfw3, howto, howto-tutorial, linux, opengl, opengles2, scons, starter]",23
OpenIIoT,OpenIIoT.Core,OpenIIoT,https://github.com/OpenIIoT/OpenIIoT.Core,https://api.github.com/repos/OpenIIoT.Core/OpenIIoT,A cross-platform application platform for the Industrial Internet of Things.,"<h1>OpenIIoT</h1>

[![Build status](https://ci.appveyor.com/api/projects/status/fe97n9g7kc66k6wp?svg=true)](https://ci.appveyor.com/project/OpenIIoTAdmin/openiiot-core)
[![Build Status](https://travis-ci.org/OpenIIoT/OpenIIoT.Core.svg?branch=master)](https://travis-ci.org/OpenIIoT/OpenIIoT.Core)
[![codecov](https://codecov.io/gh/OpenIIoT/OpenIIoT.Core/branch/master/graph/badge.svg)](https://codecov.io/gh/OpenIIoT/OpenIIoT.Core)
[![License: AGPL v3](https://img.shields.io/badge/License-AGPL%20v3-blue.svg)](https://github.com/OpenIIoT/OpenIIoT.Core/blob/master/LICENSE)

## About

OpenIIoT is a cross-platform (via Mono) application platform for the (Industrial) Internet of Things written in C#.  The code in this repository is a work in progress and is presently on hiatus while a web framework is evaluated and selected for front-end development.

Feel free to email <info@openiiot.org> with any questions.

If you'd like to demo the front end, skip to the [demo](#demo) section.

## Concept

The concept is straightforward; the application gathers data from industrial control system assets and moves it somewhere else.  Where the application can get data from, as well as where it can send the data to, is determined by the available plugins.  

The following concept diagram outlines the functionality from a high level:

![concept overview](doc/img/concept.png) 

Plugins come in the form of .NET binaries, and capabilities are extended by the implementation of one or more interfaces (documentation TBD).  The interfaces implemented by plugins determine the functionality, but generally plugins will fall into either the category of ""connector"", which allows the application to retrieve data from various places, or ""endpoint"", which allows the application to send data.

Also pluggable are repository interfaces, however this is not shown in the concept diagram.  Repository plugins are essentially database abstractions.

In addition to Endpoints, the application provides a number of core services, primarily a robust set of RESTful APIs, a real-time data streaming engine (SignalR), and a static file server.  This functionality allows for user-defined web applications to be hosted by the application, and in turn these application consume the available APIs to display and manipulate data.  Future functionality includes MQTT and probably an OPC-UA server.

## Architecture

Up-to-date documentation for the software architecture isn't available, however the present state pretty closely reflects the original concept designed some time around 2010:

![architecture](doc/img/architecture.png)

Notable changes are the addition of SignalR and the static web server, the abandonment of an ODBC interface, and the repositioning of the data model as the central element of the application.

The application wasn't imagined to be pluggable at the time this was made, so there's a bunch of architectural details around that as well.

## Demo

A recent build of the application has been deployed to an AWS EC2 instance for demo purposes.  The demo can be accessed at [http://demo.openiiot.org](http://demo.openiiot.org); use 'admin' for both the username and password, without quotes.

Note that there's nothing else on this server but the demo application, and the application hasn't been secured.  If you find that something isn't working properly or has perhaps been defaced, please create an [issue](https://github.com/OpenIIoT/OpenIIoT.Core/issues) or email <info@openiiot.org>.

## Screenshots

### Dashboard

The application takes a hands-off approach to performance; due to the range of hardware upon which it will run (primarily single-board computers like the Raspberry Pi) and the variety of things that can be done with it, whoever is responsible for configuration needs to keep an eye on the performance characteristics and offload functionality if needed.

The dashboard provides administrators with a quick view of the present CPU, memory and hard drive usage of the host machine.  Additional metrics such as swap (*nix) and paging and Ethernet activity will probably be added later.

![dashboard](doc/img/dashboard.png)

Also available on the dashboard are real-time application logs.  These are presently full of API requests because the application is running with debug logging enabled.

### Sine Wave

The demo contains a few different examples of the types of data visualization that can be achieved; the most comprehensive of which is the Sine Wave graph.

![sine wave](doc/img/sine.png)

This screen demonstrates the application streaming a real-time data item from the application, in this case an array, and displaying the data in a browser.

The current update rate at the back end is 50 milliseconds, and as can be seen in the browser the unbroken sine wave depicted in the graph illustrates that neither the back end nor the real-time data pipe drops frames (on most systems, under most conditions).

### Database

The back end model is completely agnostic about the data it contains, and to illustrate this the Database display was created:

![database display](doc/img/database.png)

This information is fetched from a SQL database (AWS RDS), piped through the application, and sent to the browser as a simple JSON object.

This screen, like most, uses a SignalR connection to display data in real-time, although the database is presently static so no data changes.  If you see data updating on this screen I have since scheduled a task to change it periodically.

### API

The various APIs exposed by the application are fully documented using [Swashbuckle](https://github.com/domaindrivendev/Swashbuckle) annotations in the code.  This allows for use with [Swagger UI](https://swagger.io/swagger-ui/), which has been customized to better match the look and feel of the front end:

![api](doc/img/api.png)

This interface can be accessed via the 'API' menu, or directly at [http://demo.openiiot.org/help](http://demo.openiiot.org/help).

Note that these APIs are very much a work in progress, and presently the only two endpoints which are in a presentable state are the two which are expanded in the screenshot, Security and Packaging.

## Documentation

Code documentation is generated with [Sandcastle Help File Builder](https://github.com/EWSoftware/SHFB) and is updated somewhat regularly at [http://openiiot.org](http://openiiot.org).
",44,44,10,6,construction,"[agriculture, construction, cross-platform, energy, iiot, industrial, industrial-automation, industry, industry-4, iot, logistics, manufacturing, mining, platform, transportation, warehousing]",23
DingoDjango,RefactoredWorkPriorities,,https://github.com/DingoDjango/RefactoredWorkPriorities,https://api.github.com/repos/RefactoredWorkPriorities/DingoDjango,Redefines some work givers in RimWorld,"![Refactored Work Priorities](http://i.imgur.com/WmWF72A.png)

Grants you additional control over colonists, including some tweaks to their work priorities and schedules.

The mod includes an options menu (**Options > Mod Settings**).

* **Injured animals** will be fed by handlers instead of doctors.
* **Removing roofs** prioritised above building roofs.
* **Custom repair threshold** - you decide when repairs should be made.
* **Repair designator** - force repairs on buildings above the repair threshold.
* **Harvest Plants** assigned to Growers if the plant yields produce.
* **Prioritise rottables** - haul corn, meals etc. as a high priority.
* **Prioritise deterioratables** - haul items as a high priority.
* **Set an item HP threshold** to avoid prioritising items with low HP.
",3,3,2,3,construction,"[construction, hauling, priorities, qol, quality-of-life, repair, rimworld, workgiver, workgiverdef, workorder]",23
helenkwok,wiv-hello-world-vite,,https://github.com/helenkwok/wiv-hello-world-vite,https://api.github.com/repos/wiv-hello-world-vite/helenkwok,Hello world IFC.js WIV Using Vite React-TS,"# Hello world IFC.js WIV Using Vite React-TS

Currently IFC.js does not have a Vite React example (an alternative to Create React App). So, I made one based on the [hello world repository](https://github.com/IFCjs/hello-world).

## Quick setup

First, download this project or clone the repository and install the dependencies with `git clone https://github.com/IFCjs/hello-world`. You can then install the dependencies using `npm install` and build all the examples with `npm run build`.

You can then execute the examples serving them locally with `git run preview`.
",3,3,1,0,construction,"[aec, architecture, bim, construction, engineering, ifc, openbim]",23
Hailey-Ross,syn_sweeping,,https://github.com/Hailey-Ross/syn_sweeping,https://api.github.com/repos/syn_sweeping/Hailey-Ross,Modified version of syn_construction,"# Syn_Sweeping
Original Construction Script Created by [Blue](https://github.com/kamelzarandah) with edits by [Hailey](https://github.com/Hailey-Ross) for Poison Meadows RP.  
All Credit goes to [Blue](https://github.com/kamelzarandah).  

This script is provided as-is. Your performance may vary.

## Features:
- Now supports turning off/on individual blips on map

## Dependencies:
- [VORP-CORE](https://github.com/VORPCORE/VORP-Core)
- [VORP-Inventory](https://github.com/VORPCORE/VORP-Inventory)
- [VORP-Character](https://github.com/VORPCORE/VORP-Character)
- [VORP-Inputs](https://github.com/VORPCORE/VORP-Inputs)
- [syn_minigame](https://discord.com/channels/777290543406776341/777295888543645716)

## Conflicts:
- This resource in its current form does not play well with syn_construction

## Installation
- Stop your CFX Server
- Go to your Resources Folder in Terminal  
**Windows** `cd C:\redm\server-data\resources\`  
**Linux** `cd ~/redm/server-data/resources/`
- Clone this Repository into the directory you chose:  
`git clone https://github.com/Hailey-Ross/syn_sweeping .`  
*Keep the period at the end!*
- Add `ensure syn_sweeping` to your `server.cfg` file
- Change any desired settings in `config.lua` file
- Run the query provided in `runme.sql` to update your `Characters` Table
- Start your server
",3,3,1,1,construction,"[construction, lua, philanthropy, reddeadredemption2, redm, sweeping]",23
Erfanh1995,Roadrunner_inputconverter,,https://github.com/Erfanh1995/Roadrunner_inputconverter,https://api.github.com/repos/Roadrunner_inputconverter/Erfanh1995,"Convert ""Standard"" GPS trajectory files into Roadrunner algorithm inputs.","# Roadrunner_inputconverter
Convert ""Standard"" GPS trajectory files into Roadrunner algorithm inputs.

Link to Roadrunner source code: <a href=""https://github.com/songtaohe/RoadRunner"">Roadrunner</a>
",3,3,1,0,construction,"[construction, map]",23
gramaziokohler,compas_mrr,gramaziokohler,https://github.com/gramaziokohler/compas_mrr,https://api.github.com/repos/compas_mrr/gramaziokohler,Robot localization using external measuring device (total station),"# COMPAS Mobile Robot Relocalization

Robot localization using external measuring device (total station).

![Build and test](https://github.com/gramaziokohler/compas_mobile_robot_reloc/workflows/workflow/badge.svg)
[![PyPI Package latest release](https://img.shields.io/pypi/v/compas_mobile_robot_reloc.svg)](https://pypi.org/project/compas-mobile-robot-reloc)
[![Conda](https://img.shields.io/conda/v/conda-forge/compas_mobile_robot_reloc)](https://anaconda.org/conda-forge/compas_mobile_robot_reloc)
![License](https://img.shields.io/github/license/gramaziokohler/compas_mobile_robot_reloc)

![Image of total station and robot setup in Brunnen](docs/images/total_station_brunnen.png)
Photo from video shot by
[MASDFAB 1920 team](https://www.masdfab.com/2019-20-t3-mas-dfab).

* [Documentation](https://gramaziokohler.github.io/compas_mobile_robot_reloc)
* [Issue tracker](https://github.com/gramaziokohler/compas_mobile_robot_reloc)

## Sources

Code adapted from source code by Selen Ercan and Sandro Meier at [Gramazio
Kohler Research](https://gramaziokohler.arch.ethz.ch/), ETH Zurich (2019).

Original code:
[gramaziokohler/IF_jamming/if_jamming/localization](https://github.com/gramaziokohler/IF_jamming/blob/master/if_jamming/localization/)


### Citing

> Ercan, Selen, Sandro Meier, Fabio Gramazio, and Matthias Kohler. 2019.
> ""Automated Localization of a Mobile Construction Robot with an External
> Measurement Device."" *In Proceedings of the 36th International Symposium on
> Automation and Robotics in Construction (ISARC 2019)*, 929-36. International
> Association on Automation and Robotics in Construction.
> https://doi.org/10.3929/ethz-b-000328442.

```bibtex
@inproceedings{ercan_automated_2019,
	title = {Automated {Localization} of a {Mobile} {Construction} {Robot} with an {External} {Measurement} {Device}},
	copyright = {http://rightsstatements.org/page/InC-NC/1.0/},
	url = {https://www.research-collection.ethz.ch/handle/20.500.11850/328442},
	doi = {10.3929/ethz-b-000328442},
	language = {en},
	booktitle = {Proceedings of the 36th {International} {Symposium} on {Automation} and {Robotics} in {Construction} ({ISARC} 2019)},
	publisher = {International Association on Automation and Robotics in Construction},
	author = {Ercan, Selen and Meier, Sandro and Gramazio, Fabio and Kohler, Matthias},
	year = {2019},
	note = {Accepted: 2019-09-11T08:51:48Z},
	pages = {929--936},
}
```
",3,3,13,6,construction,"[compas, construction, robot-localization, robotic-fabrication, total-station]",23
SethKitchen,SoilMechanics,,https://github.com/SethKitchen/SoilMechanics,https://api.github.com/repos/SoilMechanics/SethKitchen,"Engineering toolkit for ground, foundation, and soil.","# Applications in .NET 5.0: Soil Mechanics

[![Build status](https://ci.appveyor.com/api/projects/status/6huxonf97k6gwde3/branch/main?svg=true)](https://ci.appveyor.com/project/SethKitchen/soilmechanics)
[![Quality status](https://sonarcloud.io/api/project_badges/measure?project=SoilMechanics&metric=alert_status)](https://sonarcloud.io/dashboard?id=SoilMechanics)
[![Coverage Status](https://sonarcloud.io/api/project_badges/measure?project=SoilMechanics&metric=coverage)](https://sonarcloud.io/dashboard?id=SoilMechanics)
[![License](http://img.shields.io/:license-MIT-blue.svg)](https://raw.githubusercontent.com/SethKitchen/SoilMechanics/main/LICENSE)
[![Nuget](https://img.shields.io/nuget/v/SoilMechanics.svg)](https://www.nuget.org/packages/SoilMechanics/)
[![Stack Overflow](https://img.shields.io/badge/stackoverflow-SoilMechanics-orange.svg)](http://stackoverflow.com/questions/tagged/SoilMechanics)

This repo is the codebase for a series on programming Soil Mechanics in C#.

It follows ""Fundamentals of Soil Mechanics"" by The Late Donald W. Taylor (MIT), 1948-1962.

",3,3,2,0,construction,"[construction, csharp, engineering, mechanical-engineering, soil-mechanics]",23
doguilmak,Reactions-and-Internal-Forces-on-the-Bridge,,https://github.com/doguilmak/Reactions-and-Internal-Forces-on-the-Bridge,https://api.github.com/repos/Reactions-and-Internal-Forces-on-the-Bridge/doguilmak,"Calculating internal forces (M, N, T) and reactions of supports in the bridge structure using spring and plane frame elements.","**<h1 align=center><font size = 5> Reactions and Internal Forces on the Bridge Over the Pauzeński Canal</font></h1>**

![Bridge](png/0_1.png)

## Statement

In this work, we are going to determine and calculate internal forces(M, N, T) and reactions of supports in the bridge structure using spring and plane frame elements. To do that, we should determine the distances between nodes (lenghts of the elements) as $m$ and force on the bridge as $kN/m$. Functions taken from [MATLAB Guide To Finite Elements](https://www.mathworks.com/academia/books/matlab-guide-to-finite-elements-kattan.html) book.

<br>

## Description

### What are internal forces?

Internal forces are produced from the external forces acting on structure members such as poled, beamd or columnd. Generally, we have three types of internal forces: axial, dhear and moment. Axial force, sometimes called ***normal force***, is a compression or tension force acting aligned with the extension of a structure member. Shear force is a force acting in a direction perpendicular to the alignment of the member.

Moment force, lastly, is a turning result of a force multiplied by the distance from its acting location to the turning point. The number of these components varies in one-dimensional, two-dimensional and three-dimensional cases. Now the questions are what each of these components do and how to calculate these internal forces.

### What is spring element?

The spring element is a one-dimensional finite element where the local and global coordinates coincide. It should be noted that the spring element is the simplest finite element available.

![Nodes](png/1.png)

<small>Fig.1 - Nodes</small>

![Elements](png/2.png)

<small>Fig.2 - Elements</small>

#### Necessery functions for calculading

Spring element on MATLAB:

    function y = SpringElementStiffness(k)
    %SpringElementStiffness   This function returns the element stiffness 
    %                         matrix for a spring with stiffness k. 
    %                         The size of the element stiffness matrix
    %                         is 2 x 2.
    y = [k -k ; -k k];

Spring Assemble on MATLAB:

    function y = SpringAssemble(K,k,i,j)
    %SpringAssemble   This function assembles the element stiffness
    %                 matrix k of the spring with nodes i and j into the
    %                 global stiffness matrix K.
    %                 This function returns the global stiffness matrix K 
    %                 after the element stiffness matrix k is assembled.
    K(i,i) = K(i,i) + k(1,1);
    K(i,j) = K(i,j) + k(1,2);
    K(j,i) = K(j,i) + k(2,1);
    K(j,j) = K(j,j) + k(2,2);
    y = K;


### What is plane frame element?

The plane frame element is a two-dimensional finite element with both local and global coordinates. The plane frame element has modulus of elasticity $E$, moment of inertia $I$, cross-sectional area $A$, and length $L$. Each plane frame element has two nodes and is inclined with an angle $θ$ measured counterclockwise from the positive global X axis.

![Elements_orientation](png/3.png)

<small>Fig.3 - Elements orientation</small>

#### Necessery functions for calculading

Plane Frame Element Length on MATLAB:

	function y = PlaneFrameElementLength(x1,y1,x2,y2)
	%PlaneFrameElementLength   This function returns the length of the
	%                          plane frame element whose first node has  
	%                          coordinates (x1,y1) and second node has  
	%                          coordinates (x2,y2).   
	y = sqrt((x2-x1)*(x2-x1) + (y2-y1)*(y2-y1));


Plane Frame Element Stiffness on MATLAB:

	function y = PlaneFrameElementStiffness(E,A,I,L,theta)
	%PlaneFrameElementStiffness   This function returns the element 
	%                             stiffness matrix for a plane frame   
	%                             element with modulus of elasticity E,  
	%                             cross-sectional area A, moment of 
	%                             inertia I, length L, and angle 
	%                             theta (in degrees).
	%                             The size of the element stiffness 
	%                             matrix is 6 x 6.
	x = theta*pi/180;
	C = cos(x);
	S = sin(x);
	w1 = A*C*C + 12*I*S*S/(L*L);
	w2 = A*S*S + 12*I*C*C/(L*L);
	w3 = (A-12*I/(L*L))*C*S;
	w4 = 6*I*S/L;
	w5 = 6*I*C/L;
	y = E/L*[w1 w3 -w4 -w1 -w3 -w4 ; w3 w2 w5 -w3 -w2 w5 ;
	   -w4 w5 4*I w4 -w5 2*I ; -w1 -w3 w4 w1 w3 w4 ;
	   -w3 -w2 -w5 w3 w2 -w5 ; -w4 w5 2*I w4 -w5 4*I];

Plane Frame Assemble on MATLAB:

	function y = PlaneFrameAssemble(K,k,i,j)
	%PlaneFrameAssemble   This function assembles the element stiffness
	%                     matrix k of the plane frame element with nodes
	%                     i and j into the global stiffness matrix K.
	%                     This function returns the global stiffness  
	%                     matrix K after the element stiffness matrix  
	%                     k is assembled.
	K(3*i-2,3*i-2) = K(3*i-2,3*i-2) + k(1,1);
	K(3*i-2,3*i-1) = K(3*i-2,3*i-1) + k(1,2);
	K(3*i-2,3*i) = K(3*i-2,3*i) + k(1,3);
	K(3*i-2,3*j-2) = K(3*i-2,3*j-2) + k(1,4);
	K(3*i-2,3*j-1) = K(3*i-2,3*j-1) + k(1,5);
	K(3*i-2,3*j) = K(3*i-2,3*j) + k(1,6);
	K(3*i-1,3*i-2) = K(3*i-1,3*i-2) + k(2,1);
	K(3*i-1,3*i-1) = K(3*i-1,3*i-1) + k(2,2);
	K(3*i-1,3*i) = K(3*i-1,3*i) + k(2,3);
	K(3*i-1,3*j-2) = K(3*i-1,3*j-2) + k(2,4);
	K(3*i-1,3*j-1) = K(3*i-1,3*j-1) + k(2,5);
	K(3*i-1,3*j) = K(3*i-1,3*j) + k(2,6);
	K(3*i,3*i-2) = K(3*i,3*i-2) + k(3,1);
	K(3*i,3*i-1) = K(3*i,3*i-1) + k(3,2);
	K(3*i,3*i) = K(3*i,3*i) + k(3,3);
	K(3*i,3*j-2) = K(3*i,3*j-2) + k(3,4);
	K(3*i,3*j-1) = K(3*i,3*j-1) + k(3,5);
	K(3*i,3*j) = K(3*i,3*j) + k(3,6);
	K(3*j-2,3*i-2) = K(3*j-2,3*i-2) + k(4,1);
	K(3*j-2,3*i-1) = K(3*j-2,3*i-1) + k(4,2);
	K(3*j-2,3*i) = K(3*j-2,3*i) + k(4,3);
	K(3*j-2,3*j-2) = K(3*j-2,3*j-2) + k(4,4);
	K(3*j-2,3*j-1) = K(3*j-2,3*j-1) + k(4,5);
	K(3*j-2,3*j) = K(3*j-2,3*j) + k(4,6);
	K(3*j-1,3*i-2) = K(3*j-1,3*i-2) + k(5,1);
	K(3*j-1,3*i-1) = K(3*j-1,3*i-1) + k(5,2);
	K(3*j-1,3*i) = K(3*j-1,3*i) + k(5,3);
	K(3*j-1,3*j-2) = K(3*j-1,3*j-2) + k(5,4);
	K(3*j-1,3*j-1) = K(3*j-1,3*j-1) + k(5,5);
	K(3*j-1,3*j) = K(3*j-1,3*j) + k(5,6);
	K(3*j,3*i-2) = K(3*j,3*i-2) + k(6,1);
	K(3*j,3*i-1) = K(3*j,3*i-1) + k(6,2);
	K(3*j,3*i) = K(3*j,3*i) + k(6,3);
	K(3*j,3*j-2) = K(3*j,3*j-2) + k(6,4);
	K(3*j,3*j-1) = K(3*j,3*j-1) + k(6,5);
	K(3*j,3*j) = K(3*j,3*j) + k(6,6);
	y = K;

You can check Advanced Structural Analysis by Prof. Devdas Menon on [Matrix Analysis of Plane and Space Frames](https://www.youtube.com/watch?v=FywVplNrSJQ&ab_channel=nptelhrd).

<br>

## Coding for Calculations

First of all, we made all the necessary functions on Octave such as **SpringElementStiffness**, **SpringAssemble**, **PlaneFrameElementLength**, **PlaneFrameElementStiffness** and **PlaneFrameAssemble**. We are going to use them in code, and we are going to place convenient values into them.

![Spring_and_frame_elements](png/6.png)

<small>Fig.4 - Spring and frame elements</small>

### Spring elements:

$$ks1 = 10^5 kN/m$$

$$ks2 = 2 \cdot 10^5 kN/m$$

### Plane frame elements:

$$E = 210 \cdot 10^6 kPa$$ 

$$A = 0.75 m^2$$

$$I = 0.141 m^4$$

<br>

Spring and plane frame elements on MATLAB:

    E = 210e6 % kPa
    A = 0.75 % m²
    I = 0.141 % m4
    q = 20 % kN/m
    rad2deg = 180 / pi; % degree

    ks1 = SpringElementStiffness(1e5) % kN/m
    ks2 = SpringElementStiffness(2e5) % kN/m

### Lengths

![Lengths](png/0_2.png)

<small>Fig.5 - Lengths</small>

We need to determine the lenghts with using **PlaneFrameElementLength**.

	L1 = 70 % m
	L2 = PlaneFrameElementLength(0, 0, 60, 26) % m
	L3 = PlaneFrameElementLength(0, 0, 40, 4) % m
	L4 = PlaneFrameElementLength(0, 0, 40, -4) % m
	L5 = PlaneFrameElementLength(0, 0, 60, -26) % m
	L6 = 70 % m
	L7 = 65 % m
	L8 = 35 % m
	L9 = 35 % m
	L10 = 65 % m
	L11 = PlaneFrameElementLength(0, 0, -5, 26) % m
	L12 = 30 % m
	L13 = PlaneFrameElementLength(0, 0, 5, 26) % m

### Degrees

We need to determine the degrees with using <code>rad2deg</code>.

    theta1 = atan(26 / 60) * rad2deg;
    theta2 = atan(4 / 40) * rad2deg;
    theta3 = 360 - theta2;
    theta4 = 360 - theta1;
    theta5 = 270 + atan(5 / 26) * rad2deg;
    theta6 = 270 - atan(5 / 26) * rad2deg;

### Building global stiffness matrix for the structure

	k1 = PlaneFrameElementStiffness(E, A, I, L1, 0);
	k2 = PlaneFrameElementStiffness(E, A, I, L2, theta1);
	k3 = PlaneFrameElementStiffness(E, A, I, L3, theta2);
	k4 = PlaneFrameElementStiffness(E, A, I, L4, theta3);
	k5 = PlaneFrameElementStiffness(E, A, I, L5, theta4);
	k6 = PlaneFrameElementStiffness(E, A, I, L6, 0);
	k7 = PlaneFrameElementStiffness(E, A, I, L7, 0);
	k8 = PlaneFrameElementStiffness(E, A, I, L8, 0);
	k9 = PlaneFrameElementStiffness(E, A, I, L9, 0);
	k10 = PlaneFrameElementStiffness(E, A, I, L10, 180);
	k11 = PlaneFrameElementStiffness(E, A, I, L11, theta5);
	k12 = PlaneFrameElementStiffness(E, A, I, L12, 270);
	k13 = PlaneFrameElementStiffness(E, A, I, L13, theta6);

### Assembling the global stiffness matrix

First, we obtain K. Then, we make a zero matrix of size $34x34$, then make 13 calls for the plane elements and 3 calls for the spring elements with the MATLAB function **PlaneFrameAssemble** and SpringAssemble since we have 13 plane frame elements in the structure. Each call to the function will assemble one element which is K.

![Degrees_of_freedome](png/4.png)

<small>Fig.6 - Degrees of Freedom</small>

The number of degrees of freedom (DoF) is calculated for plane frame elements only. The springs have also DoF: nodes 11, 12, 13 and 14 - every node has one DoF, so total number of DoFs:

$$DoFs = 10 \cdot 3 + 4 \cdot 1 =34$$

	K = zeros(34, 34);

	K = PlaneFrameAssemble(K, k1, 1, 2);
	K = PlaneFrameAssemble(K, k2, 2, 3);
	K = PlaneFrameAssemble(K, k3, 3, 4);
	K = PlaneFrameAssemble(K, k4, 4, 5);
	K = PlaneFrameAssemble(K, k5, 5, 6);
	K = PlaneFrameAssemble(K, k6, 6, 7);
	K = PlaneFrameAssemble(K, k7, 2, 8);
	K = PlaneFrameAssemble(K, k8, 8, 9);
	K = PlaneFrameAssemble(K, k9, 9, 10);
	K = PlaneFrameAssemble(K, k10, 6, 10);
	K = PlaneFrameAssemble(K, k11, 3, 8);
	K = PlaneFrameAssemble(K, k12, 4, 9);
	K = PlaneFrameAssemble(K, k13, 5, 10);

	K = SpringAssemble(K, ks1, 2, 31);
	K = SpringAssemble(K, ks2, 5, 32);
	K = SpringAssemble(K, ks2, 17, 33);
	K = SpringAssemble(K, ks1, 20, 34);

### Applying the boundary conditions

The last arguments of the **SpringAssemble** function are node numbers only for systems that contain only spring elements (no other element types). Since spring nodes have only one degree of freedom, you have to provide freedom degree numbers instead of node numbers to properly assemble the springs.

![nodal_forces](png/5.png)

<small>Fig.7 - Nodal forces</small>

Now we need to extract 30 columns and 30 rows from the global stiffness matrix.

    k = K(1:30,1:30);
    f = [0; -700; -8167; 0; -1350; 1125; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; -1350; -1125; 0; -700; 8167; 0; -1000; 5000; 0; -700; 0; 0; -1000; -5000];
    u = k\f

The backslash operator “\” is used for Gaussian elimination. We can clearly see our displaments at nodes. 

**Rotations at nodes (as $rad$):**

 - Positive numbers: Counterclock-wise
 - Negative numbers: Clockwise.

### Post-processing

In this step, finally, we obtain the reactions at nodes 1st, 2nd, 6th, 7th, 8th, 9th, and 10th forces (axial forces, shears, and moments) in each plane frame element using MATLAB as follows. First, we set up the global nodal displacement vector $U$, then we calculate the global nodal force vector $F$ (as $kN$).

**Reactions in each nodes (as $kN$):**

 - Positive numbers: upward 
 - Negative numbers: downward

We have just calculated internal forces(M, N, T) and reactions of supports in the bridge structure using spring and plane frame elements. For more details, please check **Presentation about Bridge Over the Pauzeński Canal.pdf** file.


## Contact Me

If you have something to say to me please contact me: 

 - Twitter: [Doguilmak](https://twitter.com/Doguilmak)  
 - Mail address: doguilmak@gmail.com
",2,2,2,0,construction,"[civil-engineering, construction, finite-elements, matlab]",23
RUB-Informatik-im-Bauwesen,bcom,RUB-Informatik-im-Bauwesen,https://github.com/RUB-Informatik-im-Bauwesen/bcom,https://api.github.com/repos/bcom/RUB-Informatik-im-Bauwesen,"The Building Concrete Monitoring Ontology (BCOM) is defined for capturing information of concrete work, concrete curing and testing of concrete properties. ","Markdown documentation created by [pyLODE](http://github.com/rdflib/pyLODE) 2.4

# Building Concrete Monitoring Ontology (BCOM) [![DOI](https://zenodo.org/badge/332699346.svg)](https://zenodo.org/badge/latestdoi/332699346)

## Metadata
* **IRI**
  * `https://w3id.org/bcom`
* **Publisher(s)**
  * Chair of Computing in Engineering, Ruhr University Bochum
* **Creators(s)**
  * Liu Liu, Ruhr University Bochum
  * Philipp Hagedorn, Ruhr University Bochum
* **Created**
  * 2021-01-20
* **Modified**
  * 2021-07-21
* **Issued**
  * 2021-01-20
* **Version Information**
  * 0.3
* **License &amp; Rights**
  * [https://creativecommons.org/licenses/by/4.0/](https://creativecommons.org/licenses/by/4.0/)
  * &copy; 2021 by Chair of Computing in Engineering, Ruhr University Bochum
* **Source**
  * [https://github.com/RUB-Informatik-im-Bauwesen/bcom](https://github.com/RUB-Informatik-im-Bauwesen/bcom)
* **Ontology RDF**
  * RDF ([BuildingConcreteMonitoring.ttl](turtle))
  * RDF ([BuildingConcreteMonitoring.jsonld](jsonld))
  * RDF ([BuildingConcreteMonitoring.nt](n-triples))
  * RDF ([BuildingConcreteMonitoring.rdf](rdf/xml))
### Description
<p>The Building Concrete Monitoring Ontology (BCOM) is defined for capturing information of concrete work, concrete curing and testing of concrete properties. Further Information on the development and usage of the Ontology can be found in the following publication: Liu et al. (2021): An ontology integrating as-built information for infrastructure asset management using BIM and semantic web. In: Proceedings of 2021 European Conference on Computing in Construction, Online eConference, URL: https://ec-3.org/publications/conferences/2021/paper/?id=167</p>

## Table of Contents
1. [Classes](#classes)
1. [Object Properties](#objectproperties)
1. [Datatype Properties](#datatypeproperties)
1. [Namespaces](#namespaces)
1. [Legend](#legend)


## Overview
![Overview of Ontology](https://icdd.vm.rub.de/ontology/bcom/BuildingConcreteMonitoring.png ""Overview of Ontology"")  
**Figure 1:** Ontology overview
## Classes
[Concrete curing](#Concretecuring),
[Concrete delivery](#Concretedelivery),
[Concrete placement](#Concreteplacement),
[Conformity testing of compressive strength](#Conformitytestingofcompressivestrength),
[Fresh concrete properties](#Freshconcreteproperties),
[Storage](#Storage),
[Test](#Test),
[Test sample](#Testsample),
### Concrete curing
Property | Value
--- | ---
IRI | `https://w3id.org/bcom#ConcreteCuring`
Is Defined By | https://w3id.org/bcom#
Description | <p>This class provides information about the curing process after a concrete placement.</p>
Super-classes |[owl:Thing](http://www.w3.org/2002/07/owl#Thing) (c)<br />
In domain of |[bcom:MinAirTemperature](minairtemperature) (dp)<br />[bcom:MaxAirTemperature](maxairtemperature) (dp)<br />[bcom:HasConcretePlacement](hasconcreteplacement) (op)<br />[bcom:EndDate](enddate) (dp)<br />[bcom:BeginDate](begindate) (dp)<br />[bcom:MethodOfAftertreatment](methodofaftertreatment) (dp)<br />
In range of |[bcom:HasCuring](hascuring) (op)<br />
### Concrete delivery
Property | Value
--- | ---
IRI | `https://w3id.org/bcom#ConcreteDelivery`
Is Defined By | https://w3id.org/bcom#
Description | <p>This class provides information about a concrete delivery.</p>
Super-classes |[owl:Thing](http://www.w3.org/2002/07/owl#Thing) (c)<br />
In domain of |[bcom:BeginTimeOfPlacement](begintime) (dp)<br />[bcom:DeliveryNote](deliverynote) (dp)<br />[bcom:EndTimeOfPlacement](endtimeofplacement) (dp)<br />[bcom:DeliversConcreteFor](deliversconcretefor) (op)<br />[bcom:HasSupplier](hassupplier) (op)<br />
In range of |[bcom:HasDelivery](hasdelivery) (op)<br />
### Concrete placement
Property | Value
--- | ---
IRI | `https://w3id.org/bcom#ConcretePlacement`
Is Defined By | https://w3id.org/bcom#
Description | <p>This class provides information about a concreting process itself.</p>
Super-classes |[owl:Thing](http://www.w3.org/2002/07/owl#Thing) (c)<br />
In domain of |[bcom:QuantityOfConcrete](quantityofconcrete) (dp)<br />[bcom:HasCuring](hascuring) (op)<br />[bcom:DateOfConcreting](dateofconcreting) (dp)<br />[bcom:HasDelivery](hasdelivery) (op)<br />[bcom:HasTest](hastest) (op)<br />[bcom:DateOfStripping](dateofstripping) (dp)<br />[bcom:ClassOfMonitoring](classofmonitoring) (dp)<br />[bcom:FreshConcreteTemperature](FreshConcreteTemperature) (dp)<br />
In range of |[bcom:SuppliesConcreteTo](suppliesconcreteto) (op)<br />[bcom:IsTestOf](istestof) (op)<br />[bcom:DeliversConcreteFor](deliversconcretefor) (op)<br />[bcom:HasConcretePlacement](hasconcreteplacement) (op)<br />
### Conformity testing of compressive strength
Property | Value
--- | ---
IRI | `https://w3id.org/bcom#ConformityOfCompressiveStrength`
Is Defined By | https://w3id.org/bcom#
Description | <p>This class provides information needed for performing and evaluating the conformity of concrete compressive strength.</p>
Super-classes |[bcom:Test](Test) (c)<br />
In domain of |[bcom:EvaluationOfTest](evaluationoftest) (dp)<br />[bcom:InterimCompressiveStrength](intermediatecompressivestrength) (dp)<br />[bcom:ConversionFactor](conversionfactor) (dp)<br />[bcom:TestedDensity](testeddensity) (dp)<br />[bcom:NormativeReference](normativereference) (dp)<br />[bcom:TestCharacteristic](testedcharacteristic) (dp)<br />[bcom:FinalCompressiveStrength](finalcompressivestrength) (dp)<br />[bcom:TestedBreakingLoad](testedbreakingload) (dp)<br />
### Fresh concrete properties
Property | Value
--- | ---
IRI | `https://w3id.org/bcom#FreshConcreteProperties`
Is Defined By | https://w3id.org/bcom#
Description | <p>This class represents a group of fresh concrete properties.  A fresh concrete propertyset object will usually contain density, voids ratio, consistency.</p>
Super-classes |[bcom:Test](Test) (c)<br />
In domain of |[bcom:MaturityOfConcrete](maturityofconcrete) (dp)<br />[bcom:VoidsRatio](voidsratio) (dp)<br />[bcom:ConcreteTemperature](freshconcretetemperature) (dp)<br />[bcom:BulkDensity](bulkdensity) (dp)<br />[bcom:RateOfFlowTableTest](rateofflowtabletest) (dp)<br />
### Storage
Property | Value
--- | ---
IRI | `https://w3id.org/bcom#Storage`
Is Defined By | https://w3id.org/bcom#
Description | <p>This class represents the storage conditions of a test sample.</p>
Super-classes |[owl:Thing](http://www.w3.org/2002/07/owl#Thing) (c)<br />
In domain of |[bcom:Humidity](humidity) (dp)<br />[bcom:Temperature](temperature) (dp)<br />[bcom:Condition](storagecondition) (dp)<br />[bcom:StoresSample](storessample) (op)<br />[bcom:Duration](duration) (dp)<br />
In range of |[bcom:HasStorage](hasstorage) (op)<br />
### Test
Property | Value
--- | ---
IRI | `https://w3id.org/bcom#Test`
Is Defined By | https://w3id.org/bcom#
Description | <p>This class represents the super-class for different types of tests, that can be performed on placed concrete.</p>
Super-classes |[owl:Thing](http://www.w3.org/2002/07/owl#Thing) (c)<br />
Sub-classes |[bcom:FreshConcreteProperties](Freshconcreteproperties) (c)<br />[bcom:ConformityOfCompressiveStrength](Conformitytestingofcompressivestrength) (c)<br />
In domain of |[bcom:TestTime](testtime) (dp)<br />[bcom:HasTestPerson](hastestperson) (op)<br />[bcom:IsTestOf](istestof) (op)<br />[bcom:TestReport](testreport) (dp)<br />[bcom:HasTestSample](hastestsample) (op)<br />[bcom:TestDate](testdate) (dp)<br />[bcom:HasTestOrganisation](hastestorganisation) (op)<br />
In range of |[bcom:HasTest](hastest) (op)<br />[bcom:IsTestOrganisationOf](istestorganisationof) (op)<br />[bcom:IsTestSampleOf](istestsampleof) (op)<br />[bcom:IsTestPersonOf](istestpersonof) (op)<br />
### Test sample
Property | Value
--- | ---
IRI | `https://w3id.org/bcom#TestSample`
Is Defined By | https://w3id.org/bcom#
Description | <p>This class provides information about test samples.</p>
Super-classes |[owl:Thing](http://www.w3.org/2002/07/owl#Thing) (c)<br />
In domain of |[bcom:Height](height) (dp)<br />[bcom:SamplingDate](samplingdate) (dp)<br />[bcom:HasStorage](hasstorage) (op)<br />[bcom:IsTestSampleOf](istestsampleof) (op)<br />[bcom:WidthOrDia](widthordia) (dp)<br />[bcom:ObjectTemperature](objecttemperature) (dp)<br />[bcom:SampleID](sampleID) (dp)<br />[bcom:Length](length) (dp)<br />[bcom:Weigth](weigth) (dp)<br />
In range of |[bcom:StoresSample](storessample) (op)<br />[bcom:HasTestSample](hastestsample) (op)<br />

## Object Properties
[delivers concrete for](#deliversconcretefor),
[has concrete placement](#hasconcreteplacement),
[has curing](#hascuring),
[has delivery](#hasdelivery),
[has storage](#hasstorage),
[has supplier](#hassupplier),
[has test](#hastest),
[has test organisation](#hastestorganisation),
[has test person](#hastestperson),
[has test sample](#hastestsample),
[is test of](#istestof),
[is test organisation of](#istestorganisationof),
[is test person of](#istestpersonof),
[is test sample of](#istestsampleof),
[stores sample](#storessample),
[supplies concrete to](#suppliesconcreteto),
[](deliversconcretefor)
### delivers concrete for
Property | Value
--- | ---
IRI | `https://w3id.org/bcom#DeliversConcreteFor`
Is Defined By | https://w3id.org/bcom#
Description | This property links a concrete delivery to its concrete placement activity where it was used for.
Domain(s) |[bcom:ConcreteDelivery](Concretedelivery) (c)<br />
Range(s) |[bcom:ConcretePlacement](Concreteplacement) (c)<br />
[](hasconcreteplacement)
### has concrete placement
Property | Value
--- | ---
IRI | `https://w3id.org/bcom#HasConcretePlacement`
Is Defined By | https://w3id.org/bcom#
Description | This property links a concrete curing process to its concrete placement activity.
Domain(s) |[bcom:ConcreteCuring](Concretecuring) (c)<br />
Range(s) |[bcom:ConcretePlacement](Concreteplacement) (c)<br />
[](hascuring)
### has curing
Property | Value
--- | ---
IRI | `https://w3id.org/bcom#HasCuring`
Is Defined By | https://w3id.org/bcom#
Description | This property links a concrete placement activity to its curing process.
Domain(s) |[bcom:ConcretePlacement](Concreteplacement) (c)<br />
Range(s) |[bcom:ConcreteCuring](Concretecuring) (c)<br />
[](hasdelivery)
### has delivery
Property | Value
--- | ---
IRI | `https://w3id.org/bcom#HasDelivery`
Is Defined By | https://w3id.org/bcom#
Description | This property links a concrete placement activity to its concrete delivery providing the used concrete.
Domain(s) |[bcom:ConcretePlacement](Concreteplacement) (c)<br />
Range(s) |[bcom:ConcreteDelivery](Concretedelivery) (c)<br />
[](hasstorage)
### has storage
Property | Value
--- | ---
IRI | `https://w3id.org/bcom#HasStorage`
Is Defined By | https://w3id.org/bcom#
Description | This property links a concrete test sample to its storage details.
Domain(s) |[bcom:TestSample](Testsample) (c)<br />
Range(s) |[bcom:Storage](Storage) (c)<br />
[](hassupplier)
### has supplier
Property | Value
--- | ---
IRI | `https://w3id.org/bcom#HasSupplier`
Is Defined By | https://w3id.org/bcom#
Description | This property links a concrete delivery to its supplier.
Domain(s) |[bcom:ConcreteDelivery](Concretedelivery) (c)<br />
Range(s) |[vcard:Organization](http://www.w3.org/2006/vcard/ns#Organization) (c)<br />
[](hastest)
### has test
Property | Value
--- | ---
IRI | `https://w3id.org/bcom#HasTest`
Is Defined By | https://w3id.org/bcom#
Description | This property links a concrete placement activity to its test procedure.
Domain(s) |[bcom:ConcretePlacement](Concreteplacement) (c)<br />
Range(s) |[bcom:Test](Test) (c)<br />
[](hastestorganisation)
### has test organisation
Property | Value
--- | ---
IRI | `https://w3id.org/bcom#HasTestOrganisation`
Is Defined By | https://w3id.org/bcom#
Description | This property links a test procedure to its organization which is performing the test.
Domain(s) |[bcom:Test](Test) (c)<br />
Range(s) |[vcard:Organization](http://www.w3.org/2006/vcard/ns#Organization) (c)<br />
[](hastestperson)
### has test person
Property | Value
--- | ---
IRI | `https://w3id.org/bcom#HasTestPerson`
Is Defined By | https://w3id.org/bcom#
Description | This property links a test procedure to its person who is performing the test.
Domain(s) |[bcom:Test](Test) (c)<br />
Range(s) |[vcard:Individual](http://www.w3.org/2006/vcard/ns#Individual) (c)<br />
[](hastestsample)
### has test sample
Property | Value
--- | ---
IRI | `https://w3id.org/bcom#HasTestSample`
Is Defined By | https://w3id.org/bcom#
Description | This property links a test procedure to its test samples tested within this procedure.
Domain(s) |[bcom:Test](Test) (c)<br />
Range(s) |[bcom:TestSample](Testsample) (c)<br />
[](istestof)
### is test of
Property | Value
--- | ---
IRI | `https://w3id.org/bcom#IsTestOf`
Is Defined By | https://w3id.org/bcom#
Description | This property links a test procedure to its concrete placement activity whithin its test samples have been concreted.
Domain(s) |[bcom:Test](Test) (c)<br />
Range(s) |[bcom:ConcretePlacement](Concreteplacement) (c)<br />
[](istestorganisationof)
### is test organisation of
Property | Value
--- | ---
IRI | `https://w3id.org/bcom#IsTestOrganisationOf`
Is Defined By | https://w3id.org/bcom#
Description | This property links an organization to its test procedures that have been performed by itself.
Domain(s) |[vcard:Organization](http://www.w3.org/2006/vcard/ns#Organization) (c)<br />
Range(s) |[bcom:Test](Test) (c)<br />
[](istestpersonof)
### is test person of
Property | Value
--- | ---
IRI | `https://w3id.org/bcom#IsTestPersonOf`
Is Defined By | https://w3id.org/bcom#
Description | This property links a test examining person to its test procedures that have been performed by itslef.
Domain(s) |[vcard:Individual](http://www.w3.org/2006/vcard/ns#Individual) (c)<br />
Range(s) |[bcom:Test](Test) (c)<br />
[](istestsampleof)
### is test sample of
Property | Value
--- | ---
IRI | `https://w3id.org/bcom#IsTestSampleOf`
Is Defined By | https://w3id.org/bcom#
Description | This property links a test sample to its test procedure within which it has been tested.
Domain(s) |[bcom:TestSample](Testsample) (c)<br />
Range(s) |[bcom:Test](Test) (c)<br />
[](storessample)
### stores sample
Property | Value
--- | ---
IRI | `https://w3id.org/bcom#StoresSample`
Is Defined By | https://w3id.org/bcom#
Description | This property links storage details to its test samples that has been stored under the specific storage conditions.
Domain(s) |[bcom:Storage](Storage) (c)<br />
Range(s) |[bcom:TestSample](Testsample) (c)<br />
[](suppliesconcreteto)
### supplies concrete to
Property | Value
--- | ---
IRI | `https://w3id.org/bcom#SuppliesConcreteTo`
Is Defined By | https://w3id.org/bcom#
Description | This property links an organization to its concrete placement activities where it delivered concrete for.
Domain(s) |[vcard:Organization](http://www.w3.org/2006/vcard/ns#Organization) (c)<br />
Range(s) |[bcom:ConcretePlacement](Concreteplacement) (c)<br />

## Datatype Properties
[air temperature](#airtemperature),
[begin date](#begindate),
[begin time](#begintime),
[bulk density](#bulkdensity),
[class of monitoring](#classofmonitoring),
[fresh concrete temperature](#freshconcretetemperature),
[storage condition](#storagecondition),
[conversion factor](#conversionfactor),
[date of concreting](#dateofconcreting),
[date of stripping](#dateofstripping),
[delivery note](#deliverynote),
[duration](#duration),
[end date](#enddate),
[end time of placement](#endtimeofplacement),
[evaluation of test](#evaluationoftest),
[final compressive strength](#finalcompressivestrength),
[fresh concrete temperature](#FreshConcreteTemperature),
[height](#height),
[humidity](#humidity),
[intermediate compressive strength](#intermediatecompressivestrength),
[length](#length),
[maturity of concrete](#maturityofconcrete),
[max air temperature](#maxairtemperature),
[method of aftertreatment](#methodofaftertreatment),
[min air temperature](#minairtemperature),
[normative reference](#normativereference),
[object temperature](#objecttemperature),
[quantity of concrete](#quantityofconcrete),
[rate of flow table test](#rateofflowtabletest),
[sample ID](#sampleID),
[sampling date](#samplingdate),
[temperature](#temperature),
[tested characteristic](#testedcharacteristic),
[test date](#testdate),
[test report](#testreport),
[test time](#testtime),
[test type](#testtype),
[tested breaking load](#testedbreakingload),
[tested density](#testeddensity),
[voids ratio](#voidsratio),
[weigth](#weigth),
[width or dia](#widthordia),
[](airtemperature)
### air temperature
Property | Value
--- | ---
IRI | `https://w3id.org/bcom#AirTemperature`
Is Defined By | https://w3id.org/bcom#
Description | air temperature during concreting or testing on fresh concrete in degree Celsius
Domain(s) |([bcom:ConcretePlacement](Concreteplacement) (c) or [bcom:TestSample](Testsample) (c))<br />
Range(s) |[xsd:decimal](http://www.w3.org/2001/XMLSchema#decimal) (c)<br />
[](begindate)
### begin date
Property | Value
--- | ---
IRI | `https://w3id.org/bcom#BeginDate`
Is Defined By | https://w3id.org/bcom#
Description | begin date of concrete curing with format year-month-day in yyyy-mm-dd
Domain(s) |[bcom:ConcreteCuring](Concretecuring) (c)<br />
Range(s) |[xsd:date](http://www.w3.org/2001/XMLSchema#date) (c)<br />
[](begintime)
### begin time
Property | Value
--- | ---
IRI | `https://w3id.org/bcom#BeginTimeOfPlacement`
Is Defined By | https://w3id.org/bcom#
Description | begin time of concrete placement with format hour-minute-second in hh:mm:ss
Domain(s) |[bcom:ConcreteDelivery](Concretedelivery) (c)<br />
Range(s) |[xsd:time](http://www.w3.org/2001/XMLSchema#time) (c)<br />
[](bulkdensity)
### bulk density
Property | Value
--- | ---
IRI | `https://w3id.org/bcom#BulkDensity`
Is Defined By | https://w3id.org/bcom#
Description | bulk density of fresh concrete in kg/m^3
Domain(s) |[bcom:FreshConcreteProperties](Freshconcreteproperties) (c)<br />
Range(s) |[xsd:decimal](http://www.w3.org/2001/XMLSchema#decimal) (c)<br />
[](classofmonitoring)
### class of monitoring
Property | Value
--- | ---
IRI | `https://w3id.org/bcom#ClassOfMonitoring`
Is Defined By | https://w3id.org/bcom#
Description | class of concrete monitoring according to DIN EN 13670 / DIN 1045-3 related to the properties of hardened concrete
Domain(s) |[bcom:ConcretePlacement](Concreteplacement) (c)<br />
[](freshconcretetemperature)
### fresh concrete temperature
Property | Value
--- | ---
IRI | `https://w3id.org/bcom#ConcreteTemperature`
Is Defined By | https://w3id.org/bcom#
Description | fresh concrete temperature during testing of properties in degree Celsius
Domain(s) |[bcom:FreshConcreteProperties](Freshconcreteproperties) (c)<br />
Range(s) |[xsd:decimal](http://www.w3.org/2001/XMLSchema#decimal) (c)<br />
[](storagecondition)
### storage condition
Property | Value
--- | ---
IRI | `https://w3id.org/bcom#Condition`
Is Defined By | https://w3id.org/bcom#
Description | description of storage conditions
Domain(s) |[bcom:Storage](Storage) (c)<br />
Range(s) |[xsd:string](http://www.w3.org/2001/XMLSchema#string) (c)<br />
[](conversionfactor)
### conversion factor
Property | Value
--- | ---
IRI | `https://w3id.org/bcom#ConversionFactor`
Is Defined By | https://w3id.org/bcom#
Description | conversion factor of compressive strength testing
Domain(s) |[bcom:ConformityOfCompressiveStrength](Conformitytestingofcompressivestrength) (c)<br />
Range(s) |[xsd:decimal](http://www.w3.org/2001/XMLSchema#decimal) (c)<br />
[](dateofconcreting)
### date of concreting
Property | Value
--- | ---
IRI | `https://w3id.org/bcom#DateOfConcreting`
Is Defined By | https://w3id.org/bcom#
Description | date of concreting with format year-month-day in yyyy-mm-dd
Domain(s) |[bcom:ConcretePlacement](Concreteplacement) (c)<br />
Range(s) |[xsd:date](http://www.w3.org/2001/XMLSchema#date) (c)<br />
[](dateofstripping)
### date of stripping
Property | Value
--- | ---
IRI | `https://w3id.org/bcom#DateOfStripping`
Is Defined By | https://w3id.org/bcom#
Description | date of stripping with format year-month-day in yyyy-mm-dd
Domain(s) |[bcom:ConcretePlacement](Concreteplacement) (c)<br />
Range(s) |[xsd:date](http://www.w3.org/2001/XMLSchema#date) (c)<br />
[](deliverynote)
### delivery note
Property | Value
--- | ---
IRI | `https://w3id.org/bcom#DeliveryNote`
Is Defined By | https://w3id.org/bcom#
Description | delivery note of mixed-ready concrete
Domain(s) |[bcom:ConcreteDelivery](Concretedelivery) (c)<br />
Range(s) |[xsd:anyURI](http://www.w3.org/2001/XMLSchema#anyURI) (c)<br />
[](duration)
### duration
Property | Value
--- | ---
IRI | `https://w3id.org/bcom#Duration`
Is Defined By | https://w3id.org/bcom#
Description | duration of  storage for test sample in days
Domain(s) |[bcom:Storage](Storage) (c)<br />
Range(s) |[xsd:decimal](http://www.w3.org/2001/XMLSchema#decimal) (c)<br />
[](enddate)
### end date
Property | Value
--- | ---
IRI | `https://w3id.org/bcom#EndDate`
Is Defined By | https://w3id.org/bcom#
Description | end date of concrete curing with format year-month-day in yyyy-mm-dd
Domain(s) |[bcom:ConcreteCuring](Concretecuring) (c)<br />
Range(s) |[xsd:date](http://www.w3.org/2001/XMLSchema#date) (c)<br />
[](endtimeofplacement)
### end time of placement
Property | Value
--- | ---
IRI | `https://w3id.org/bcom#EndTimeOfPlacement`
Is Defined By | https://w3id.org/bcom#
Description | end time of concrete placement with format hour-minute-second in hh:mm:ss
Domain(s) |[bcom:ConcreteDelivery](Concretedelivery) (c)<br />
Range(s) |[xsd:time](http://www.w3.org/2001/XMLSchema#time) (c)<br />
[](evaluationoftest)
### evaluation of test
Property | Value
--- | ---
IRI | `https://w3id.org/bcom#EvaluationOfTest`
Is Defined By | https://w3id.org/bcom#
Description | evaluation of the mean value of the test in N/mm^2
Domain(s) |[bcom:ConformityOfCompressiveStrength](Conformitytestingofcompressivestrength) (c)<br />
Range(s) |[xsd:decimal](http://www.w3.org/2001/XMLSchema#decimal) (c)<br />
[](finalcompressivestrength)
### final compressive strength
Property | Value
--- | ---
IRI | `https://w3id.org/bcom#FinalCompressiveStrength`
Is Defined By | https://w3id.org/bcom#
Description | result of the compressive strength of the respective test sample under consideration of the conversion factor in N/mm^2
Domain(s) |[bcom:ConformityOfCompressiveStrength](Conformitytestingofcompressivestrength) (c)<br />
Range(s) |[xsd:decimal](http://www.w3.org/2001/XMLSchema#decimal) (c)<br />
[](FreshConcreteTemperature)
### fresh concrete temperature
Property | Value
--- | ---
IRI | `https://w3id.org/bcom#FreshConcreteTemperature`
Is Defined By | https://w3id.org/bcom#
Description | fresh concrete temperature before concrete placement in degree Celsius
Domain(s) |[bcom:ConcretePlacement](Concreteplacement) (c)<br />
Range(s) |[xsd:decimal](http://www.w3.org/2001/XMLSchema#decimal) (c)<br />
[](height)
### height
Property | Value
--- | ---
IRI | `https://w3id.org/bcom#Height`
Is Defined By | https://w3id.org/bcom#
Description | height of a test sample as cube or as cylinder in mm
Domain(s) |[bcom:TestSample](Testsample) (c)<br />
Range(s) |[xsd:decimal](http://www.w3.org/2001/XMLSchema#decimal) (c)<br />
[](humidity)
### humidity
Property | Value
--- | ---
IRI | `https://w3id.org/bcom#Humidity`
Is Defined By | https://w3id.org/bcom#
Description | relative humidity of storage condition in %
Domain(s) |[bcom:Storage](Storage) (c)<br />
Range(s) |[xsd:decimal](http://www.w3.org/2001/XMLSchema#decimal) (c)<br />
[](intermediatecompressivestrength)
### intermediate compressive strength
Property | Value
--- | ---
IRI | `https://w3id.org/bcom#InterimCompressiveStrength`
Is Defined By | https://w3id.org/bcom#
Description | intermediate result of the compressive strength of the respective sample without conversion factor of in N/mm^2
Domain(s) |[bcom:ConformityOfCompressiveStrength](Conformitytestingofcompressivestrength) (c)<br />
Range(s) |[xsd:decimal](http://www.w3.org/2001/XMLSchema#decimal) (c)<br />
[](length)
### length
Property | Value
--- | ---
IRI | `https://w3id.org/bcom#Length`
Is Defined By | https://w3id.org/bcom#
Description | length of a test sample for cubes in mm
Domain(s) |[bcom:TestSample](Testsample) (c)<br />
Range(s) |[xsd:decimal](http://www.w3.org/2001/XMLSchema#decimal) (c)<br />
[](maturityofconcrete)
### maturity of concrete
Property | Value
--- | ---
IRI | `https://w3id.org/bcom#MaturityOfConcrete`
Is Defined By | https://w3id.org/bcom#
Description | maturity of concrete in minutes
Domain(s) |[bcom:FreshConcreteProperties](Freshconcreteproperties) (c)<br />
Range(s) |[xsd:decimal](http://www.w3.org/2001/XMLSchema#decimal) (c)<br />
[](maxairtemperature)
### max air temperature
Property | Value
--- | ---
IRI | `https://w3id.org/bcom#MaxAirTemperature`
Is Defined By | https://w3id.org/bcom#
Description | maximum air temperature during post-treatment in degree Celsius
Domain(s) |[bcom:ConcreteCuring](Concretecuring) (c)<br />
Range(s) |[xsd:decimal](http://www.w3.org/2001/XMLSchema#decimal) (c)<br />
[](methodofaftertreatment)
### method of aftertreatment
Property | Value
--- | ---
IRI | `https://w3id.org/bcom#MethodOfAftertreatment`
Is Defined By | https://w3id.org/bcom#
Description | description for the method of concrete curing
Domain(s) |[bcom:ConcreteCuring](Concretecuring) (c)<br />
Range(s) |[xsd:string](http://www.w3.org/2001/XMLSchema#string) (c)<br />
[](minairtemperature)
### min air temperature
Property | Value
--- | ---
IRI | `https://w3id.org/bcom#MinAirTemperature`
Is Defined By | https://w3id.org/bcom#
Description | minimum air temperature during post-treatment in degree Celsius
Domain(s) |[bcom:ConcreteCuring](Concretecuring) (c)<br />
Range(s) |[xsd:decimal](http://www.w3.org/2001/XMLSchema#decimal) (c)<br />
[](normativereference)
### normative reference
Property | Value
--- | ---
IRI | `https://w3id.org/bcom#NormativeReference`
Is Defined By | https://w3id.org/bcom#
Description | norm or standard of the test method
Domain(s) |[bcom:ConformityOfCompressiveStrength](Conformitytestingofcompressivestrength) (c)<br />
Range(s) |[xsd:string](http://www.w3.org/2001/XMLSchema#string) (c)<br />
[](objecttemperature)
### object temperature
Property | Value
--- | ---
IRI | `https://w3id.org/bcom#ObjectTemperature`
Is Defined By | https://w3id.org/bcom#
Description | object temperature of a test sample in degree Celsius
Domain(s) |[bcom:TestSample](Testsample) (c)<br />
Range(s) |[xsd:decimal](http://www.w3.org/2001/XMLSchema#decimal) (c)<br />
[](quantityofconcrete)
### quantity of concrete
Property | Value
--- | ---
IRI | `https://w3id.org/bcom#QuantityOfConcrete`
Is Defined By | https://w3id.org/bcom#
Description | quantity of the concrete placement in cubature m^3
Domain(s) |[bcom:ConcretePlacement](Concreteplacement) (c)<br />
Range(s) |[xsd:decimal](http://www.w3.org/2001/XMLSchema#decimal) (c)<br />
[](rateofflowtabletest)
### rate of flow table test
Property | Value
--- | ---
IRI | `https://w3id.org/bcom#RateOfFlowTableTest`
Is Defined By | https://w3id.org/bcom#
Description | rate of flow table test according to DIN EN 12350-5 in mm
Domain(s) |[bcom:FreshConcreteProperties](Freshconcreteproperties) (c)<br />
Range(s) |[xsd:decimal](http://www.w3.org/2001/XMLSchema#decimal) (c)<br />
[](sampleID)
### sample ID
Property | Value
--- | ---
IRI | `https://w3id.org/bcom#SampleID`
Is Defined By | https://w3id.org/bcom#
Description | name or ID of the test sample
Domain(s) |[bcom:TestSample](Testsample) (c)<br />
Range(s) |[xsd:string](http://www.w3.org/2001/XMLSchema#string) (c)<br />
[](samplingdate)
### sampling date
Property | Value
--- | ---
IRI | `https://w3id.org/bcom#SamplingDate`
Is Defined By | https://w3id.org/bcom#
Description | date of sampling with format year-month-day in yyyy-mm-dd
Domain(s) |[bcom:TestSample](Testsample) (c)<br />
Range(s) |[xsd:date](http://www.w3.org/2001/XMLSchema#date) (c)<br />
[](temperature)
### temperature
Property | Value
--- | ---
IRI | `https://w3id.org/bcom#Temperature`
Is Defined By | https://w3id.org/bcom#
Description | storage temperature in degree Celsius
Domain(s) |[bcom:Storage](Storage) (c)<br />
Range(s) |[xsd:decimal](http://www.w3.org/2001/XMLSchema#decimal) (c)<br />
[](testedcharacteristic)
### tested characteristic
Property | Value
--- | ---
IRI | `https://w3id.org/bcom#TestCharacteristic`
Is Defined By | https://w3id.org/bcom#
Description | the material property that has to be tested
Domain(s) |[bcom:ConformityOfCompressiveStrength](Conformitytestingofcompressivestrength) (c)<br />
Range(s) |[xsd:string](http://www.w3.org/2001/XMLSchema#string) (c)<br />
[](testdate)
### test date
Property | Value
--- | ---
IRI | `https://w3id.org/bcom#TestDate`
Is Defined By | https://w3id.org/bcom#
Description | date of testing with format year-month-day in yyyy-mm-dd
Domain(s) |[bcom:Test](Test) (c)<br />
Range(s) |[xsd:date](http://www.w3.org/2001/XMLSchema#date) (c)<br />
[](testreport)
### test report
Property | Value
--- | ---
IRI | `https://w3id.org/bcom#TestReport`
Is Defined By | https://w3id.org/bcom#
Description | report of conformity test of concrete
Domain(s) |[bcom:Test](Test) (c)<br />
Range(s) |[xsd:anyURI](http://www.w3.org/2001/XMLSchema#anyURI) (c)<br />
[](testtime)
### test time
Property | Value
--- | ---
IRI | `https://w3id.org/bcom#TestTime`
Is Defined By | https://w3id.org/bcom#
Description | time of testing with format hour-minute-second in hh:mm:ss
Domain(s) |[bcom:Test](Test) (c)<br />
Range(s) |[xsd:time](http://www.w3.org/2001/XMLSchema#time) (c)<br />
[](testtype)
### test type
Property | Value
--- | ---
IRI | `https://w3id.org/bcom#TestType`
Is Defined By | https://w3id.org/bcom#
Description | type of test as self-inspection or third-party monitoring
Domain(s) |([bcom:ConcretePlacement](Concreteplacement) (c) or [bcom:Test](Test) (c))<br />
[](testedbreakingload)
### tested breaking load
Property | Value
--- | ---
IRI | `https://w3id.org/bcom#TestedBreakingLoad`
Is Defined By | https://w3id.org/bcom#
Description | value of breaking load of test procedure in N
Domain(s) |[bcom:ConformityOfCompressiveStrength](Conformitytestingofcompressivestrength) (c)<br />
Range(s) |[xsd:decimal](http://www.w3.org/2001/XMLSchema#decimal) (c)<br />
[](testeddensity)
### tested density
Property | Value
--- | ---
IRI | `https://w3id.org/bcom#TestedDensity`
Is Defined By | https://w3id.org/bcom#
Description | value of density from a sample in kg/m^3
Domain(s) |[bcom:ConformityOfCompressiveStrength](Conformitytestingofcompressivestrength) (c)<br />
Range(s) |[xsd:decimal](http://www.w3.org/2001/XMLSchema#decimal) (c)<br />
[](voidsratio)
### voids ratio
Property | Value
--- | ---
IRI | `https://w3id.org/bcom#VoidsRatio`
Is Defined By | https://w3id.org/bcom#
Description | voids ratio of fresh concrete in V-%
Domain(s) |[bcom:FreshConcreteProperties](Freshconcreteproperties) (c)<br />
Range(s) |[xsd:decimal](http://www.w3.org/2001/XMLSchema#decimal) (c)<br />
[](weigth)
### weigth
Property | Value
--- | ---
IRI | `https://w3id.org/bcom#Weigth`
Is Defined By | https://w3id.org/bcom#
Description | weigth of a test sample in kg
Domain(s) |[bcom:TestSample](Testsample) (c)<br />
Range(s) |[xsd:decimal](http://www.w3.org/2001/XMLSchema#decimal) (c)<br />
[](widthordia)
### width or dia
Property | Value
--- | ---
IRI | `https://w3id.org/bcom#WidthOrDia`
Is Defined By | https://w3id.org/bcom#
Description | width of a test sample as cube or diameter of a test sample as cylinder in mm
Domain(s) |[bcom:TestSample](Testsample) (c)<br />
Range(s) |[xsd:decimal](http://www.w3.org/2001/XMLSchema#decimal) (c)<br />

## Named Individuals
## Namespaces
* **default (:)**
  * `https://w3id.org/bcom#`
* **bcom**
  * `https://w3id.org/bcom#`
* **cc**
  * `http://creativecommons.org/ns#`
* **dc**
  * `http://purl.org/dc/terms/`
* **foaf**
  * `http://xmlns.com/foaf/0.1/`
* **owl**
  * `http://www.w3.org/2002/07/owl#`
* **prov**
  * `http://www.w3.org/ns/prov#`
* **rdf**
  * `http://www.w3.org/1999/02/22-rdf-syntax-ns#`
* **rdfs**
  * `http://www.w3.org/2000/01/rdf-schema#`
* **sdo**
  * `https://schema.org/`
* **skos**
  * `http://www.w3.org/2004/02/skos/core#`
* **vann**
  * `http://purl.org/vocab/vann/`
* **vcard**
  * `http://www.w3.org/2006/vcard/ns#`
* **vs**
  * `http://www.w3.org/2003/06/sw-vocab-status/ns#`
* **xml**
  * `http://www.w3.org/XML/1998/namespace`
* **xsd**
  * `http://www.w3.org/2001/XMLSchema#`

## Legend
* Classes: c
* Object Properties: op
* Functional Properties: fp
* Data Properties: dp
* Annotation Properties: dp
* Properties: p
* Named Individuals: ni
",2,2,2,1,construction,"[aec, concrete, construction, linked-data, ontology, owl, rdf]",23
kowalskiw,multi_zone,,https://github.com/kowalskiw/multi_zone,https://api.github.com/repos/multi_zone/kowalskiw,Stochastic OZone anlyses,"MultiZone allows to asses probability of exceeding critical temperature for steel constructions. For each single sample of calculations OZone3 program by Arcelor Mittal and University of Liege is used.

What MultiZone does:
  - randomization of fires' parameters;
  - mapping fire position to the nearest most exposed element;
  - running OZone3 zone model simulation;
  - writing results of stochastic analysis as CSV file and some distributions.

No further development of the script is planned.
There is a new program for stochastic analyses of structures in fire condition McSteel (it does not use OZone anymore). You can find it in this [repository](https://github.com/kowalskiw/mcsteel).
",2,2,2,4,construction,"[construction, firemodels, steel, stochastic-modelling]",23
maciejzj,maze-bot,,https://github.com/maciejzj/maze-bot,https://api.github.com/repos/maze-bot/maciejzj,"Arduino/ATMega based MazeBot mobile robot created for a project at Silesian University of Technology, features control system for DC motors drive.","# MazeBot
Arduino/ATMega based mobile wheeled robot with DC motors controllers, created for a project at Silesian University of Technology.

![mazebot_demo_photo](https://github.com/MaciejZj/MazeBot/blob/master/Documentation/Graphics/Title%20Page%20Photo.jpeg?raw=true)

The construction is actuated by DC motors. The robot avoids obstacles using an ultrasonic sensor mounted on top of a servo. The robot features a PI controller for synchronisation of the velocity of wheels and a cascade controller for precise turning. These control systems provide greater accuracy of movement, even with the most basic DC motors available.

The project consists of making a custom Arduino Leonardo clone PCB and designing a 3D printable chassis for the construction. Code is implemented using Arduino libraries and the bootloader.

The code and Autodesk Eagle files are stored in the GitHub repository, Autodesk Fusion 360 project files can be accessed using [Autodesk cloud mechanisms](https://a360.co/2U4947x).

Feel free to check out the documentation and [project report](https://raw.githubusercontent.com/MaciejZj/MazeBot/16cebf032a5ea0aaa41a32081933f3ef379c02ca/Documentation/POLSL_Project_Report_PL.pdf) in Polish.

![mazebot_photo_collage](https://github.com/MaciejZj/MazeBot/blob/master/Documentation/Graphics/Overview%20Collage.jpeg?raw=true)

The project uses modified [nonblocking ultrasonic Arduino library](https://github.com/jazzycamel/arduino).
",2,2,2,0,construction,"[arduino, atmega, construction, control-systems, dc-motor, learning, mobilerobots, silesian-university, systemidentification]",23
jbolda,aeccollective,,https://github.com/jbolda/aeccollective,https://api.github.com/repos/aeccollective/jbolda,,"# AEC Collective

This is the source code for the [AEC Collective](https://www.aeccollective.com).

The AEC Collective is a community for the Architecture, Engineering, and Construction. It is uses the Discord program which is a free voice, video and text chat app that you can access via PC, browser, or mobile phone. We look to help mentor those starting in the industry, and provide a great place for networking with your peers around the world. We can all benefit from understanding each related niche better, but also understanding our own niche outside of our geographic region.

Please visit the website to join the community.

# Contributing

The website is built and hosted on www.netlify.com using www.gatsbyjs.org. To contribute, fork the repository and submit a pull request. The pull request will trigger a netlify preview build to confirm your changes. We thank all our members for helping out!
",2,2,3,28,construction,"[architecture, construction, engineering]",23
geekblower,v2rconstructions,,https://github.com/geekblower/v2rconstructions,https://api.github.com/repos/v2rconstructions/geekblower,Designed and Developed this website for V2R Construction,,2,2,1,1,construction,"[bootstrap, construction, construction-web, hacktoberfest, hacktoberfest-2023, hacktoberfest-2023-accepted, hacktoberfest-accepted, hacktoberfest-starter, hacktoberfest2023, template, website-template]",23
montyanderson,construction,,https://github.com/montyanderson/construction,https://api.github.com/repos/construction/montyanderson,":construction: Interface with binary structures in Javascript, built for network protocols.","# construction

:construction: Interface with binary structures in Javascript, built for network protocols.

[![Build Status](https://travis-ci.org/montyanderson/construction.svg?branch=master)](https://travis-ci.org/montyanderson/construction) [![npm version](https://badge.fury.io/js/construction.svg)](https://badge.fury.io/js/construction)

## Features

* Small, concise codebase with no dependencies.
* Full test suite, testing *every type*.
* Supports, Int8, Int16, Int32, UInt8, UInt16, UInt32.

## To Do

* Add char and array types.

``` C
struct User {
	uint8_t age;
	int32_t favouriteNumber;
}
```

``` javascript
const Construction = requrie(""construction"");
const t = Construction.types;

const User = new Construction(""LE"", {
	age: t.UInt8;
	favouriteNumber: t.Int32
});
```

## API

### new Construction(endianness, object)

Create a new construction object.

``` javascript
// Endianness can be ""LE"" or ""BE""

const User = new Construction(""LE"", {
	age: t.UInt8,
	favouriteNumber: t.Int32
});
```

### buffer Construction#write(object)

Convert a javascript object to a binary buffer.

``` javascript
const buffer = User.write({
	age: 15,
	favouriteNumber: 1000000
});

console.log(buffer);
// <Buffer 0f 40 42 0f 00>
```

### object Construction#read(buffer)

Convert a binary buffer to a javascript object.

``` javascript
const user = User.read(Buffer.from(""0f40420f00"", ""hex""));

console.log(user);
// { age: 15, favouriteNumber: 1000000 }
```
",2,2,3,0,construction,"[binary, buffer, c, construction, cpp, interface, javascript, network-protocol, node]",23
shreyasbhat0,Contractbook_Application,,https://github.com/shreyasbhat0/Contractbook_Application,https://api.github.com/repos/Contractbook_Application/shreyasbhat0,A Prize won project developed for Smart India Hackathon 2018. Web app and Android application ,"# Contractbook_Application
A Prize won project developed for Smart India Hackathon 2018. Web app and Android application 
An Android app and a Website that helps to find skilled labour and workers to the HighWay Construction  Works.
Website Developed using Node js and Js.
App is purely based on Java.
Complete android app source code is available Message me for those code.
follow up me on Github.for more real time projects
",2,2,0,0,construction,"[construction, highway, smartapp]",23
SpiffGreen,pictorial,,https://github.com/SpiffGreen/pictorial,https://api.github.com/repos/pictorial/SpiffGreen,"Pictorial is a simple domain-specific language that compiles to Scalable Vector Graphics, SVG format.","# Pictorial
Pictorial is a simple domain specific language that compiles to Scalable Vector Graphics, SVG format. Its simple and expressive.

## Samples
### Program structure
```
    - Compiler Directives

    - Program statements
```

### Example Head made with shapes
```
#use <svg> /* Tells pictorial to compile to SVG */
#doc_width 300 /* Sets the pictures width */
#doc_height 300 /* Sets the pictures height */

circle 150 130 75 green 0 brown /* Head */
circle 80 70 30 black 0 black /* left ear */
circle 220 70 30 black 0 black /* right ear */
circle 120 110 15 black 5 white /* left eye */
circle 180 110 15 black 5 white /* right eye */
circle 150 140 10 black 0 black /* nose */
line 135 175 165 175 yellow 20
```

Output:
<div align=""center"">

![head](https://raw.githubusercontent.com/SpiffGreen/cdn/dbbf3473e0d95a2b966e86b6612554158ee43319/pictorial_cartoon_head.svg)
</div>

## Syntax
An overview of the language's elements
## `#use`
This tells the compiler what format to use and compile to.
```
#use <svg>
```

### `#doc_width`
This sets the width of the final picture.
```
#doc_width value
```

### `#doc_height`
This sets the height of the final picture.
```
#doc_height value
```

### `line`
This is a pictorial language construct that corresponds to an SVG line element. Values passed to it are used for the SVG line element attributes.
```
line x1 y1 x2 y2 stroke-color stroke-width
```

### `text`
This is also is a language construct that produces a SVG text element. Values passed to it are passed to the corresponding SVG text element as attributes.
```
text x y value
```

### `circle`
Yet another language construct that represents an SVG circle element. Like every other construct of this kind values passed to it are passed to its corresponding SVG circle element as attributes.
```
circle x y r stroke-color stroke-width fill
```

### `rect`
This construct will add an SVG rectangle to resultant svg.
```
rect x y width height fill
```
<!-- ### `path` -->

## License
Serve-JS is [MIT licensed](LICENSE.md)

Copyright 2021 Spiff Jekey-Green <spiffjekeygreen@gmail.com>

<p align=""center"">Made with ❤️ in Nigeria 🇳🇬</p>",2,2,1,0,construction,"[compiler, construction, design, image, language, pictorial, svg, transpiler]",23
bike-bill,readyset-gfm,,https://github.com/bike-bill/readyset-gfm,https://api.github.com/repos/readyset-gfm/bike-bill,Readyset software engineering templates translated to Github Flavored Markdown (GFM),"# ReadySET-GFM

Ready-to-use Software Engineering Templates in GFM format, ready to use in a [Github Wiki](https://github.com/bike-bill/readyset-gfm/wiki).

## About

This is a conversion of the [Tigris.org](https://web.archive.org/web/20200701142616/http://tigris.org/) distribution of the ReadySET Software Engineering Templates into GitHub Flavored Markdown format.

The original ReadySET project is located [here](https://web.archive.org/web/20200701142616/http://readyset.tigris.org/). There has been no visible development on the original project since [version 0.9.3](https://web.archive.org/web/20200701142616/http://readyset.tigris.org/docs/release-notes-0-9-3.html) in 2004, but I find it useful, especially in markdown format.

The original Tigris HTML templates are located [here](https://web.archive.org/web/20200701142616/http://readyset.tigris.org/nonav/templates/frameset.html). There are also a clones of the original html files on Github at [@brianbaquiran/readyset](https://github.com/brianbaquiran/readyset), [@JNRowe/readyset](https://github.com/JNRowe/readyset), and [@alejo8591/ReadySET](https://github.com/alejo8591/ReadySET).

## :fire: Where can I see the GFM templates?

You can see the GFM templates in the [wiki](https://github.com/bike-bill/readyset-gfm/wiki).

## How to use

You can clone the wiki from here
<https://github.com/bike-bill/readyset-gfm/wiki>

```bash
git clone git@github.com:bike-bill/readyset-gfm.wiki.git
```

and copy them to your own project's
`https://github.com/YOUR-USER/YOUR-PROJECT.wiki.git`
by following these [instructions](https://docs.github.com/en/communities/documenting-your-project-with-wikis/adding-or-editing-wiki-pages#adding-or-editing-wiki-pages-locally).

One you have the files in place in your project's wiki, Edit the templates to fit the needs of your project

- Follow instructions that appear in the ""sticky notes"", TODO, or TIPS sections
- Replace text in ALL CAPS and lines that start with :: (double colons) with text that describes your project
- ""Chip away"" text that does not apply to your project
- Add text, diagrams, or links as needed
- Use the checklists to catch common errors and improve the quality of your documents.
- Use the [words-of-wisdom pages](../../wiki/Words-of-Wisdom) to help improve the document or deepen your understanding of relevant issues.
",2,2,1,0,construction,"[construction, design, markdown, process, project-management, requirements, software-engineering, templates, testing]",23
Tridence,moxxconstruction,,https://github.com/Tridence/moxxconstruction,https://api.github.com/repos/moxxconstruction/Tridence,Moxx.co.ke Construction website. It encompasses marketing and ways through which clients can reach Moxx organization. ,"# moxxconstruction
Moxx.co.ke Construction website. It encompasses marketing and ways through which clients can reach Moxx organization. 

[![Netlify Status](https://api.netlify.com/api/v1/badges/6db942dc-e636-4f7f-9c1e-aaeac693e0be/deploy-status)](https://app.netlify.com/sites/moxx/deploys)
",2,2,0,0,construction,"[construction, construction-site]",23
indianwhocodes,PLP2017,,https://github.com/indianwhocodes/PLP2017,https://api.github.com/repos/PLP2017/indianwhocodes,LL (1) Compiler Implementation (2017),"# PLP2017
LL (1) Compiler Implementation (2017)- Scanner, parser, construction of abstract syntax trees, visitor interface implementation, object code generation from JVM and target code. JUNIT5 tests were carried out for debugging to test robustness. Grammar(CFG) was premeditated including a set of rules for alphabet productions. Everything was done in Java
",2,2,1,0,construction,"[academic, alphabet-productions, cfg, compiler, compiler-construction, compiler-design, compiler-principles, construction, context-free-grammar, grammar, grammar-rules, java-8, junit5-tests, jvm, scanner, syntax-trees, test-robustness, visitor-interface]",23
JamesHodgkins,OpenDraft,,https://github.com/JamesHodgkins/OpenDraft,https://api.github.com/repos/OpenDraft/JamesHodgkins,Open-Source 2D CAD Project written in C++ 20 featuring a self-developed GUI system.,"# OpenDraft

![ODLogo](./Docs/Branding/od_logo.png#gh-light-mode-only)
![ODLogo](./Docs/Branding/od_logo_reverse.png#gh-dark-mode-only)

OpenDraft is an open-source 2D CAD project that aims to provide a lightweight, user-friendly, and extendable CAD solution. The project is currently in its early stages of development, focusing on setting up the program structure and core classes. 

## Features

The following features have now been implemented: TBC

## Roadmap

The following roadmap outlines the planned features for OpenDraft:

1. Basic drawing tools (lines, circles, rectangles, etc.): The initial phase will focus on implementing essential drawing tools to enable users to create geometric shapes and objects.

2. Layer management: A layer management system will be introduced to allow users to organize and control the visibility and editing of different elements within their drawings.

3. Snap and grid functionality: To enhance precision and alignment, snap and grid functionality will be incorporated, enabling users to easily align and position objects based on predefined increments.

4. Object selection and manipulation: This feature will enable users to select individual or multiple objects within their drawings and perform various operations such as moving, scaling, rotating, and modifying their attributes.

5. Undo/Redo functionality: Users will be able to undo and redo their actions, providing them with the flexibility to experiment and correct mistakes during the design process.

6. Export to common file formats (DXF, SVG, etc.): OpenDraft will support exporting drawings to popular file formats such as DXF (AutoCAD) and SVG (Scalable Vector Graphics), ensuring compatibility with other design software.

7. Customizable user interface: Users will have the option to customize the interface according to their preferences, allowing them to arrange tools, panels, and menus to create a personalized workspace.

8. Plugin system for extending functionality: A plugin system will be implemented, empowering users to extend the capabilities of OpenDraft by integrating additional tools, features, or integrations developed by third-party developers.

9. Extensive block library of common engineering components including fastenings, piping, electrical etc.

Please note that this roadmap is subject to change as priorities may shift based on user feedback and emerging industry trends. We are committed to continuously improving OpenDraft and delivering a comprehensive CAD software solution.


## Dependencies

OpenDraft currently has the following dependencies, which are included within the project:
- [The OpenGL Extension Wrangler Libary (GLEW)](https://github.com/nigels-com/glew)
- [GLFW](https://www.glfw.org)
- [NanoVG](https://github.com/memononen/nanovg)
- [pugixml](https://github.com/zeux/pugixml)

## Why Another CAD Package?

While there are already great open-source CAD solutions available, such as LibreCAD and FreeCAD, OpenDraft aims to offer a distinct approach. Here's why we are creating another CAD package:

- **Lightweight**: OpenDraft focuses on providing a lightweight solution, minimizing resource usage while maintaining essential functionality.

- **User-Friendly**: We strive to create an intuitive and user-friendly interface, making the CAD experience more accessible to users, regardless of their level of expertise.

- **Extendable**: OpenDraft aims to be highly extendable through a plugin system, allowing users to customize and enhance the software according to their specific needs.

- **Built from the Ground Up**: By starting from scratch, we have the opportunity to design and implement the core functionalities with a modern and optimized approach.

- **Free Forever**: Our long-term vision is to develop OpenDraft into a professional-grade CAD program that can compete with costly proprietary solutions. By being open source and community-driven, we aim to provide a powerful CAD tool free of charge, eliminating the need for exorbitant pricing

## License

OpenDraft is licensed under the GNU General Public License v3.0 (GPL-3.0). You can find the full license text in the [licence](./LICENSE) file.

## Contributing

We welcome contributions to OpenDraft! If you would like to contribute, please review the [contribution guidelines](./CONTRIBUTING.md) for more information.

## Feedback, Support and Contact

If you have any queries or feedback regarding OpenDraft, we would love to hear from you. Feel free to reach out to us through the following channels:

If you encounter any problems or have suggestions for improvement it would help us if you create an issue in the [issue tracker](https://github.com/JamesHodgkins/OpenDraft/issues)

Email: You can also contact James via email at jhodgkins@proton.me.

Don't hesitate to get in touch with us. We look forward to hearing from you!

## Acknowledgments

We would like to express our sincere gratitude to the creators and contributors of existing open-source CAD solutions, whose invaluable contributions have played a pivotal role in shaping and advancing the field of computer-aided design. Their dedication, expertise, and innovation have paved the way for projects like OpenDraft to exist.

Throughout the development of OpenDraft, we have strived to leverage the collective knowledge and expertise of the open-source community. In doing so, we have consciously utilized certain portions of code from these projects to enhance our software's capabilities and provide a comprehensive CAD experience. We would like to acknowledge that we have knowingly incorporated and adapted code from various open-source CAD projects.

Wherever possible, we have made every effort to ensure that appropriate credit is given to the original creators and contributors of the code we have utilized. We believe that acknowledging their efforts is not only a sign of respect but also a way to foster collaboration and promote the continued growth of the open-source community.

We extend our deepest appreciation to all those who have generously shared their code, ideas, and expertise, enabling us to build upon their work and create OpenDraft. Without their contributions, our journey would have been significantly more challenging, and our software would not be what it is today.

Thank you for your interest in OpenDraft! We are committed to developing a CAD program that not only meets your needs but also exceeds your expectations.
",2,2,2,0,construction,"[2d, architecture, cad, computer-aided-design, construction, dxf, engineering, geometry, prototyping]",23
fabiomcosta,summerdale-permits,,https://github.com/fabiomcosta/summerdale-permits,https://api.github.com/repos/summerdale-permits/fabiomcosta,A simple status page to stay up to date with Summerdale Community construction process,"Simple website to help track updates on the homes of Summerdale Park.

## Getting Started

<!-- Dependencies -->

### Install Dependencies

```bash
yarn
```

### Run the development server

```bash
# or
yarn dev
```

Open [http://localhost:3000](http://localhost:3000) with your browser to see the result.

You can start editing the page by modifying `pages/index.tsx`. The page auto-updates as you edit the file.

[API routes](https://nextjs.org/docs/api-routes/introduction) can be accessed on [http://localhost:3000/api/hello](http://localhost:3000/api/hello). This endpoint can be edited in `pages/api/hello.ts`.

The `pages/api` directory is mapped to `/api/*`. Files in this directory are treated as [API routes](https://nextjs.org/docs/api-routes/introduction) instead of React pages.

This project uses [`next/font`](https://nextjs.org/docs/basic-features/font-optimization) to automatically optimize and load Inter, a custom Google Font.

## Resources

- [Next.js Documentation](https://nextjs.org/docs) - learn about Next.js features and API.
- [Learn Next.js](https://nextjs.org/learn) - an interactive Next.js tutorial.
- [Chakra UI](https://chakra-ui.com/) - a simple, modular and accessible component library to quickly build React applications.

## Deploys on Vercel

This project is set up to automatically deploy from the `main` branch to Vercel. Current deployment url: <https://summerdale-permits.vercel.app/>
",2,2,2,3,construction,"[community, construction, lakenona, orlando, status]",23
TanguyLallemand,sankey-metadata-evolution,,https://github.com/TanguyLallemand/sankey-metadata-evolution,https://api.github.com/repos/sankey-metadata-evolution/TanguyLallemand,Work during my internship at IRHS. A new method of visualization for displaying metadata changes in an iterative biclustering algorithm,"# Construction of visualizations to represent metadatas evolutions into genes cluster

## Abstract
Over the past several years, there has been an increase in the size and diversity of the data studied. This observation is particularly marked in the field of transcriptomics, where the need to integrate and visualize large volumes of heterogeneous data arises.

CoRGI is a web application of bi-clustering implemented in JavaScript. This tool uses a matrix of genes and experiments from transcriptomic data and aims to identify groups of genes working together. At present, the results can be visualized by directly accessing the matrix, a color code is used to represent the induction or repression of genes.

In order to be able to effectively interpret the results of CoRGI it is necessary to set up a visualization method to visualize the evolution of the metadata of the cluster of genes, but also to be able to access to the details of a given iteration. The IRHS bioinformatics team has set up metadatas to describe experiments. Functional annotation of genes using the GO has been implemented to describe genes. A set of alluvial diagrams is set up to monitor the evolution of gene metadata and experiments during iterations of the CoRGI algorithm. Force-directed graphs are built to be able to visualize the details of a given iteration. These two methods used together have made it possible to build an effective visualization to help the biologist interpret the results of CoRGI.

## Installation manual

To run those scripts simply provide datas and run a server to execute scripts. Easiest method is to run a python web server using following command:


    cd repository
    # Get python version
    python -V
    # If the version of Python returned is later than 3.X
    python3 -m http.server
    # If the version of Python returned is later than 2.X
    python -m SimpleHTTPServer


By default, it displays the list of files in the folder on a development server, port 8000. You can go to this server by entering the localhost:8000 URL in your web browser. You will see the contents of the folder listed - click the HTML file you want to run.

Note: If port 8000 is busy, you can choose another port by specifying an alternative number after the command for example python -m http.server 7800 (Python 3.x) or python -m SimpleHTTPServer 7800 (Python 2.x). You can now access your content at localhost:7800.


## Visualizations produced

The visualization of metadata evolutions during CoRGI iterations is done via two types of graphs.

#### Alluvial diagrams
Alluvial diagrams provide a global vision and a temporal dimension. Since the metadata is divided into six categories (three categories to describe the experiments and three parts of the Gene Ontology (GO) for genes). The figure below shows these six alluvial diagrams.

![](./examples_of_visualizations/Sankey_CoRGI_whole.png)

An example of a particular sankey diagram is shown in next figure.

![Sankey diagram of Organs metadats tought CoRGI iterations](./examples_of_visualizations/sankey_organ.png)
This type of graph represents the processes (GO terms or terms describing the metadata) in the form of a colored rectangle. They are opaque if they are significantly over-represented compared to the TAIR data set. They are linked by links that are colored green if they are significantly over represented by the input data set. Various additional information is available, including iteration numbers and the number of elements present in the matrix for it, but also when hovering over nodes or links with the mouse.

#### Force-directed graphs
Force-directed graphs provide access to more detail by using the term GO and not the term GO Slim. However, for reasons of readability, these graphs do not have time dimensions. The following example shows the graph directed by the force of the GO underlying the term ""photosynthesis"". The nodes are represented by circles whose opacity depends on whether he has annotated genes. Their size depends on the number of genes annotated with them. The links are colored according to the type of relationship they express (""is a"", ""regulates"").

![](./examples_of_visualizations/force_directed_graph.png)


### Folder architectures

- Data folder. It is empty since the data has not yet been published. This is the folder where to store the data.
- The examples_of_visualizations folder stores some examples of visualizations produced using the repository scripts.
- The profiling folder stores a JSON file resulting from the profiling of the application by Google Chrome.
- Protyping folder store python scripts used to prototype the various parsing and diagram construction steps. Thoses scripts are documented using pydoc rules. An HTML API has been generated and associated to this repository.
- Python_precomputation stores some python scripts to prepare the data needed to build diagrams. This constitutes:
    - The parsing of a CoRGI output.
    - Annotations of the genes present in the CoRGI dataset
    - Some functions allowing file conversions

- The visualization folder stores all JavaScript files allowing the construction of visualizations. A libs folder will gather libraries of functions written during the course but also a version of the d3-sankey module rewritten to allow the construction of links of variable height.

- Conf folder. Stores a configuration file to configure the script for building visualizations.
- The data folder will wait for data.  
- Finally, the sankey_experiments_and_genes folder stores the main function of the script allowing the construction of the visualizations.

## Data format needed

To construct Sankey diagramms and force directd graph, data provided needs to follows JSON-LD requirements:

    {
        ""nodes"": [
        {""id"": ""Alice""},
        {""id"": ""Bob""},
        {""id"": ""Carol""}
        ];

        ""links"": [
        {""source"": 0, ""target"": 1}, // Alice → Bob
        {""source"": 1, ""target"": 2} // Bob → Carol
        ];
    }
",1,1,2,0,construction,"[alluvial-diagrams, construction, force-directed-graphs, metadata-evolutions, visualizations]",23
AhmedsafwatEwida,Earned_Value_Calculations,,https://github.com/AhmedsafwatEwida/Earned_Value_Calculations,https://api.github.com/repos/Earned_Value_Calculations/AhmedsafwatEwida,Android Application for Earned Value Calculations ,,1,1,1,0,construction,"[android, application, business, construction, earnedvalue, manhours]",23
onmyway133,Construction,,https://github.com/onmyway133/Construction,https://api.github.com/repos/Construction/onmyway133,:construction_worker: The many ways to construct and configure your entity,"# Construction

The many ways to construct and configure your entity. Work for struct and class

[![CI Status](http://img.shields.io/travis/onmyway133/Construction.svg?style=flat)](https://travis-ci.org/onmyway133/Construction)
[![Version](https://img.shields.io/cocoapods/v/Construction.svg?style=flat)](http://cocoadocs.org/docsets/Construction)
[![Carthage Compatible](https://img.shields.io/badge/Carthage-compatible-4BC51D.svg?style=flat)](https://github.com/Carthage/Carthage)
[![License](https://img.shields.io/cocoapods/l/Construction.svg?style=flat)](http://cocoadocs.org/docsets/Construction)
[![Platform](https://img.shields.io/cocoapods/p/Construction.svg?style=flat)](http://cocoadocs.org/docsets/Construction)

![](Screenshots/Banner.png)

## Usage

### construct

- Free function
- Construct a struct and configure it

`Person`
```swift
struct Person {
  var name: String = """"
  var age: Int = 0
  var website: NSURL?

  init() {

  }
}

extension Person: Initable {}
```

```swift
let person: Person = construct {
  $0.name = ""Luffy""
  $0.age = 17
}

XCTAssertEqual(person.name, ""Luffy"")
XCTAssertEqual(person.age, 17)
XCTAssertNil(person.website)
```

### build

- Free function
- Build an existing struct

```swift
var person = Person() // Declare as `var`
build(&person) {      // Use `&`
  $0.name = ""Luffy""
  $0.age = 17
}

XCTAssertEqual(person.name, ""Luffy"")
XCTAssertEqual(person.age, 17)
XCTAssertNil(person.website)
```

- Build an existing object

`Car`
```swift
class Car {
  var model: String = """"
  var price: Int = 0
}

extension Car: Configurable {}
```

```swift
let car = build(Car()) {
  $0.model = ""Tesla Model 3""
  $0.price = 35_000
}

XCTAssertEqual(car.model, ""Tesla Model 3"")
XCTAssertEqual(car.price, 35_000)
```

### configure

- Member function
- Configure existing object

```swift
let car = Car().configure {
  $0.model = ""Tesla Model 3""
  $0.price = 35_000
}

XCTAssertEqual(car.model, ""Tesla Model 3"")
XCTAssertEqual(car.price, 35_000)
```

## Installation

**Construction** is available through [CocoaPods](http://cocoapods.org). To install
it, simply add the following line to your Podfile:

```ruby
pod 'Construction'
```

**Construction** is also available through [Carthage](https://github.com/Carthage/Carthage).
To install just write into your Cartfile:

```ruby
github ""onmyway133/Construction""
```

## Author

Khoa Pham, onmyway133@gmail.com

## Contributing

We would love you to contribute to **Construction**, check the [CONTRIBUTING](https://github.com/onmyway133/Construction/blob/master/CONTRIBUTING.md) file for more info.

## License

**Construction** is available under the MIT license. See the [LICENSE](https://github.com/onmyway133/Construction/blob/master/LICENSE.md) file for more info.
",34,34,4,0,construction,"[construction, constructor, init, ios, swift]",23
txsoura,BDC-backend,,https://github.com/txsoura/BDC-backend,https://api.github.com/repos/BDC-backend/txsoura,Building Control API,"# BDC-backend

Building Control API

",1,1,2,2,construction,"[construction, laravel, php]",23
shchilkin,portfolio,,https://github.com/shchilkin/portfolio,https://api.github.com/repos/portfolio/shchilkin,My portfolio website. ,"This project was bootstrapped with [Create React App](https://github.com/facebook/create-react-app).

## Available Scripts

In the project directory, you can run:

### `yarn start`

Runs the app in the development mode.<br />
Open [http://localhost:3000](http://localhost:3000) to view it in the browser.

The page will reload if you make edits.<br />
You will also see any lint errors in the console.

### `yarn test`

Launches the test runner in the interactive watch mode.<br />
See the section about [running tests](https://facebook.github.io/create-react-app/docs/running-tests) for more information.

### `yarn build`

Builds the app for production to the `build` folder.<br />
It correctly bundles React in production mode and optimizes the build for the best performance.

The build is minified and the filenames include the hashes.<br />
Your app is ready to be deployed!

See the section about [deployment](https://facebook.github.io/create-react-app/docs/deployment) for more information.

### `yarn eject`

**Note: this is a one-way operation. Once you `eject`, you can’t go back!**

If you aren’t satisfied with the build tool and configuration choices, you can `eject` at any time. This command will remove the single build dependency from your project.

Instead, it will copy all the configuration files and the transitive dependencies (webpack, Babel, ESLint, etc) right into your project so you have full control over them. All of the commands except `eject` will still work, but they will point to the copied scripts so you can tweak them. At this point you’re on your own.

You don’t have to ever use `eject`. The curated feature set is suitable for small and middle deployments, and you shouldn’t feel obligated to use this feature. However we understand that this tool wouldn’t be useful if you couldn’t customize it when you are ready for it.

## Learn More

You can learn more in the [Create React App documentation](https://facebook.github.io/create-react-app/docs/getting-started).

To learn React, check out the [React documentation](https://reactjs.org/).

### Code Splitting

This section has moved here: https://facebook.github.io/create-react-app/docs/code-splitting

### Analyzing the Bundle Size

This section has moved here: https://facebook.github.io/create-react-app/docs/analyzing-the-bundle-size

### Making a Progressive Web App

This section has moved here: https://facebook.github.io/create-react-app/docs/making-a-progressive-web-app

### Advanced Configuration

This section has moved here: https://facebook.github.io/create-react-app/docs/advanced-configuration

### Deployment

This section has moved here: https://facebook.github.io/create-react-app/docs/deployment

### `yarn build` fails to minify

This section has moved here: https://facebook.github.io/create-react-app/docs/troubleshooting#npm-run-build-fails-to-minify
",1,1,1,20,construction,"[construction, dark-mode, dark-ui-theme, portfolio-website, react]",23
xiaofan8421,xiaofan8421.github.io,,https://github.com/xiaofan8421/xiaofan8421.github.io,https://api.github.com/repos/xiaofan8421.github.io/xiaofan8421,personal site,,1,1,0,1,construction,"[construction, site]",23
beamplayer,gridbeam,,https://github.com/beamplayer/gridbeam,https://api.github.com/repos/gridbeam/beamplayer,Collection of gridbeam designs,,1,1,0,1,construction,"[beam, box, boxbeam, cleantech, construction, furniture, grid, gridbeam, hpv, modular, open, simple-living, simplicity]",23
Davien21,construction-pal,,https://github.com/Davien21/construction-pal,https://api.github.com/repos/construction-pal/Davien21,A repo for a simple and matured-style UI for a client's collaboration service,,1,1,2,1,construction,"[collaboration, construction]",23
Yesarib,Fsb-construction,,https://github.com/Yesarib/Fsb-construction,https://api.github.com/repos/Fsb-construction/Yesarib,FSB construction web site,"# Construction Company Website
This project aims to create a modern and user-friendly website for a construction company. 
The project utilizes technologies such as Node.js, React-Vite, Tailwind CSS, and MongoDB.

## Project Description
This project is being developed to create a website for a construction company. The website aims to present information about the company's services, projects, team, and contact details. It also includes a contact form for users to get in touch.

The project is built using a modern technology stack. Here are the key technologies used:

__Node.js__: A JavaScript runtime used on the server-side. The project utilizes Node.js to handle server-side operations.

__React-Vite__: A fast and powerful tool for building React applications. The project uses React-Vite to create the user interface.

__Tailwind CSS__: An easy-to-use CSS framework. Tailwind CSS is used to customize and style the website's appearance.

__MongoDB__: A document-based NoSQL database. The project stores user contact information using MongoDB.

<hr>

## [Demo](https://fsbinsaat.netlify.app)
<br >

### 
To run the project on your local environment, follow these steps:

1. Clone the project repository to your local machine.
2. Install and configure MongoDB database.
3. In the project directory, open a terminal and run the following command to install the dependencies:   ``` npm install ```
   
4. Create a .env file in the project directory and configure the settings as follows:  ``` DB_URL=your_mongodb_uri ```

5. Run the following command to start the project on a local server:
   ``` npm run dev ```
",1,1,1,0,construction,"[construction, mongodb, nodejs, react, tailwindcss, vite, web]",23
alexandre10044,305construction,,https://github.com/alexandre10044/305construction,https://api.github.com/repos/305construction/alexandre10044,"Epitech Project, MATHS 305","# 305construction
 
In the construction industry, the foreman is the person who manages, among other things, the schedulingof a construction site, and plans when contractors are intervening (which can be frequently). In order to dothis, he uses software to automate the scheduling.You must create a project management software that helps organize construction, based on the MPMmethod. Starting from a file that describes all of the project tasks, you have to display the following:

•Total duration of construction,

•The earliest and latest start dates for each task,

•A Gantt chart that specifies intervals of fluctuation.

USAGE

./305construction file

DESCRIPTION

file    file describing the tasks
",1,1,1,0,construction,"[305, construction, epitech, mathematics]",23
renatogcruz,Data-science-for-architecture,,https://github.com/renatogcruz/Data-science-for-architecture,https://api.github.com/repos/Data-science-for-architecture/renatogcruz,"Repository for data science study for architecture, engineering and construction (AEC)","# Data Science for Architecture, Construction and Urbanism

Repository on data analysis in Architecture, Engineering, Construction (AEC) and Urbanism

# Data Analysis for AEC

1 - [Data Science for Construction, Architecture and Engineering (edX)](https://github.com/renatogcruz/Data-science-for-architecture/tree/main/Data_science_for_AEC)

The building industry is exploding with data sources that impact the energy performance of the built environment and health and well-being of occupants. This course focuses on the development of data science skills for professionals specifically in the built environment sector.

Course [link](https://www.edx.org/course/Data-Science-for-Construction-Architecture-and-Engineering) 

# Costs and Budgets

1 - [Predict cost of civil construction São Paulo/Brazil](https://github.com/renatogcruz/Data-science-for-architecture/tree/main/custos_e_orcamentos/previsao_CUB)

Data - [From 2007 to 2021](https://sindusconsp.com.br/sdm_downloads/cub-serie-historica/)

Type of construction R8-N SINDUSCON-SP

# [IFC analysis](https://github.com/renatogcruz/Data-science-for-architecture/tree/main/ifc_analysis) 

1 - [IFC analysis with IfcOpenShell](https://github.com/renatogcruz/Data-science-for-architecture/tree/main/ifc_analysis/IFC_analysis_with_IfcOpenShell)


2 - [Captura, Análise e Visualização de Dados na Construção](https://github.com/renatogcruz/Data-science-for-architecture/tree/main/ifc_analysis/Captura_Analise_e_Visualizacao_de_Dados_na_Construcao)


# Data Analysis for Urbanism

1 - [Power BI com Ênfase em Geoprocessamento](https://github.com/renatogcruz/data_science_in_arch/tree/main/Power_bi_com_enfase_em_geoprocessamento)

Training to connect and prepare databases, create graphics and customized visual elements and create dynamic and interactive dashboards and reports.

# House Rocket

Maximizing the revenue of the company [House Rocket](https://github.com/renatogcruz/Data-science-for-architecture/tree/main/House_Rocket), a digital platform whose business model is buying and selling of real estate using technology.

# Gender and Origin

[Analysis](https://github.com/renatogcruz/Data-science-for-architecture/tree/main/genero_origem) of gender and origin of teaching using a bibliographic database adopted in architecture and urbanism courses.
",32,32,6,0,construction,"[aec, architecture, construction, data-analysis, data-science, deep-learning, ifc, ifcopenshell, machine-learning, powerbi, python, sql]",23
agu3rra,volpy,,https://github.com/agu3rra/volpy,https://api.github.com/repos/volpy/agu3rra,Volume Calculations for Digital Elevation Models in Python,,30,30,2,13,construction,"[construction, digital-elevation-model, terrain, volume]",23
manuvarkey,GEstimator,,https://github.com/manuvarkey/GEstimator,https://api.github.com/repos/GEstimator/manuvarkey,GEstimator is a simple civil estimation software written in Python and GTK+. GEstimator can prepare estimates along with rate analysis and supports multiple databases.,"# GEstimator

[Website](https://manuvarkey.github.io/GEstimator) • 
[Forum](https://github.com/manuvarkey/GEstimator/discussions/) •
[Bug tracker](https://github.com/manuvarkey/GEstimator/issues) •
[Git repository](https://github.com/manuvarkey/GEstimator)

[![Release](https://img.shields.io/github/release/manuvarkey/GEstimator.svg)](https://github.com/manuvarkey/GEstimator/releases/latest)
![License](https://img.shields.io/github/license/manuvarkey/GEstimator)


<a href=""https://github.com/manuvarkey/GEstimator/releases/latest""><img height=""51"" alt=""Download for Windows"" src=""https://raw.githubusercontent.com/manuvarkey/GElectrical/master/source/artwork/windows_badge.svg""/> </a>
<a href=""https://beta.flathub.org/apps/com.kavilgroup.gestimator""><img height=""51"" alt=""Download on Flathub"" src=""https://flathub.org/assets/badges/flathub-badge-en.svg""/> </a>
<a href=""https://snapcraft.io/gestimator""><img height=""51"" alt=""Download on Snap Store"" src=""https://snapcraft.io/static/images/badges/en/snap-store-black.svg""/> </a> 

GEstimator is a civil estimation software for preparing cost and quantity estimates of civil/electrical works along with detailed rate analysis. It supports multiple user databases and comes bundled with **DSR 2021 (Civil)** and **DSR 2022 (E&M)**.

The program is organised in three tabs - Schedule Items, Details of Measurements and Resource Items. Schedule Items implements an interface to input the estimate schedule/import the schedule from a .xlsx file. On editing (`Edit`) any schedule item an Analysis View is displayed allowing edit of the rate analysis. Details of Measurements allows the details of measurements to be recorded against items added under Schedule Items. Resource Items allows input/manipulation of the resources like material, labour and tools/plants upon which the rate analysis will be framed.

The estimates can be rendered into a .xlsx document from `Menu->Export...`. The exported sheet includes - the schedule of rates for the work, schedule of resources, details of measurements, resource usage for the work and analysis of rates for various items of work.


## Tutorials

[![Simple Usage](https://raw.githubusercontent.com/manuvarkey/GEstimator/master/screenshots/screenshot1.png)](https://youtu.be/B3ycfivex-E)

[![Advanced Usage](https://raw.githubusercontent.com/manuvarkey/GEstimator/master/screenshots/screenshot2.png)](https://youtu.be/lo3-QIPtyI8)

## Screenshots

![Image 1](https://raw.githubusercontent.com/manuvarkey/GEstimator/master/screenshots/schedule.png)
![Image 2](https://raw.githubusercontent.com/manuvarkey/GEstimator/master/screenshots/resource.png)
![Image 3](https://raw.githubusercontent.com/manuvarkey/GEstimator/master/screenshots/analysis.png)
![Image 4](https://raw.githubusercontent.com/manuvarkey/GEstimator/master/screenshots/addlibrary.png)
![Image 5](https://raw.githubusercontent.com/manuvarkey/GEstimator/master/screenshots/measurements.png)

## Resources
Additional libraries and other resources can be downloaded from [GEstimator Other Databases](https://github.com/manuvarkey/GEstimator/tree/master/Other%20databases).

## Installation

Latest source code and binaries for GEstimator can be downloaded from this page under `Releases`.

### Source installation

Application can be installed using `python setup.py install`. It has been tested with Python 3.4 and Gtk 3.18, and has the following extra dependencies.

## Dependencies:

### Python 3 (v3.5)

Python Modules:

* undo - Included along with distribution.
* openpyxl (v2.5.1) - Not included
* appdirs (v1.4.3) - Not included
* jdcal - Not included
* et_xmlfile - Not included
* peewee (v3.2.0) - Not included
* pycairo - Not included
* PyGObject - Not included

### GTK3  (v3.36)
",29,29,5,0,construction,"[civil-engineering, construction, electrical-engineering, estimation]",23
kurpicz,saca-bench,,https://github.com/kurpicz/saca-bench,https://api.github.com/repos/saca-bench/kurpicz,Collection of Suffix Array Construction Algorithms (SACAs),"# SACA Benchmark
This repository contains the following C/C++ implementations of suffix array construction algorithms (SACAs).

**There now exists the project [*SACABench*](https://github.com/sacabench/sacabench) that contains most of these algorithms and allows to easliy *build*, *run*, and *benchmark* them.**

| Name          | Publication   | Author(s) | Year | License |
| ------------- | ------------- | --------- | :--: | :-----: |
| [BRP2](BPR2) |[An Incomplex Algorithm for Fast Suffix Array Construction](https://www.techfak.uni-bielefeld.de/~stoye/dropbox/alenex2005final.pdf) | K.-B. Schürmann and J. Stoye | 2005 | GPL v2 |
| [DC3](DC3) | [Simple Linear Work Suffix Array Construction](https://www.cs.helsinki.fi/u/tpkarkka/publications/icalp03.pdf) |J. Kärkkäinen and P. Sanders   | 2003| n/a |
| [deep-shallow](deep-shallow) | [Engineering a Lightweight Suffix Array Construction Algorithm](https://link.springer.com/article/10.1007%2Fs00453-004-1094-1?LI=true)| G. Manzini and P. Ferragina | 2002 | GPL v2 |
| [gsaca](gsaca) |[Linear-time Suffix Sorting – A New Approach for Suffix Array Construction](http://drops.dagstuhl.de/opus/volltexte/2016/6069/pdf/LIPIcs-CPM-2016-23.pdf) | U. Baier| 2016 | MIT |
| [libdivsufsort](libdivsufsort) | - | Y. Mori | 2011 | MIT |
| [qsufsort](qsufsort) | [Faster Suffix Sorting](https://pdfs.semanticscholar.org/7a84/e0577e51c42aabbf572b7a344f64738a6ea9.pdf) | N. J. Larsson and K. Sadakane | 1999 | own |
| [sa-ds](sa-ds) | [Two Efficient Algorithms for Linear Time Suffix Array Construction](https://storage.googleapis.com/google-code-archive-downloads/v2/code.google.com/ge-nong/Two%20Efficient%20Algorithms%20for%20Linear%20Time%20Suffix%20Array%20Construction.pdf) | G. Nong | 2012 | n/a |
| [sa-is](sa-is) | [Two Efficient Algorithms for Linear Time Suffix Array Construction](https://storage.googleapis.com/google-code-archive-downloads/v2/code.google.com/ge-nong/Two%20Efficient%20Algorithms%20for%20Linear%20Time%20Suffix%20Array%20Construction.pdf) | G. Nong | 2011 | n/a |
| [SACA-K](saca-k) |[Practical Linear-Time O(1)-Workspace Suffix Sorting for Constant Alphabets](https://storage.googleapis.com/google-code-archive-downloads/v2/code.google.com/ge-nong/saca-k-tois.pdf)|G. Nong|2011/13| n/a |
| [sais-lite](sais-lite) | - | Y. Mori | 2010 | MIT |
| [gsa-is](gsa-is) | [Inducing Enhanced Suffix Arrays for String Collections](http://www.sciencedirect.com/science/article/pii/S0304397517302621) | F. A. Louza, S. Gog and G. P. Telles | 2017 | MIT |
| [msufsort](msufsort) | [(version 4 is currently in development)](https://github.com/michaelmaniscalco/msufsort) | M. Maniscalco | 2017 | MIT |


Please note that all those files are licensed under their respective license (if available).
I merely collected them to create a benchmark.

If you know of any other *publicly* available SACA please send me a [mail](mailto:florian.kurpicz@tu-dortmund.de).
",26,26,5,0,construction,"[benchmark, construction, suffix-array]",23
minetest-mods,digtron,minetest-mods,https://github.com/minetest-mods/digtron,https://api.github.com/repos/digtron/minetest-mods,A modular tunnel boring/construction machine mod for Minetest.,"# Modular Tunnel Boring Machine
## aka The Almighty Digtron


This mod contains a set of blocks that can be used to construct highly customizable and modular tunnel-boring machines, bridge-builders, road-pavers, wall-o-matics, and other such construction/destruction contraptions.

A digging machine's components must be connected to the control block via a path leading through the faces of the blocks - diagonal connections across edges and corners don't count. 

The basic block types that can be assembled into a functioning digging machine are:

* Digger heads, which excavate material in front of them when the machine is triggered
* Builder heads, which build a user-configured node in the direction they're facing
* Inventory modules, which hold material produced by the digger and provide material to the builders
* Fuel modules, which holds flammable materials to feed the beast
* Control block, used to trigger the machine and move it in a particular direction.

Diggers mine out blocks and shunt them into the Digtron's inventory, or drop them on the ground if there isn't room in the inventory to store them.

Builder heads can be used to lay down a solid surface as the Digtron moves, useful for situations where a tunnel-borer intersects a cavern. Builder heads can be set to construct their target block ""intermittently"", allowing for regularly-spaced structures to be constructed. Common uses include building support arches at regular intervals in a tunnel, adding a torch on the wall at regular intervals, laying rails with regularly-spaced powered rails interspersed, and adding stairs to vertical shafts.

The auto-controller block is able to trigger automatically for a user-selected number of cycles. A player can ride their Digtron as it goes.

Other specialized Digtron blocks include:

* An ""axle"" block that allows an assembled Digtron to be rotated into new orientations without needing to be rebuilt block-by-block
* A crate that can store an assembled Digtron and allow the player to transport it to a new location
* A duplicator that can create a copy of an existing Digtron (if provided with enough spare parts)
* An item ejector to clear Digtron's inventory of excavated materials and inject it into pipeworks tubes if that mod is installed.
* A light that can be mounted on a Digtron to illuminate the workspace as it moves
* Structural components to make it look cool

The Digtron mod only depends on the default mod, but includes optional support for several other mods:

* [doc](https://forum.minetest.net/viewtopic.php?t=15912), an in-game documentation mod. Detailed documentation for all of the Digtron's individual blocks are included as well as pages of general concepts and design tips.
* [pipeworks](https://forum.minetest.net/viewtopic.php?id=2155), a set of pneumatic tubes that allows inventory items to be extracted from or inserted into Digtron inventories.
* [hopper](https://forum.minetest.net/viewtopic.php?&t=12379), a different mod for inserting into and extracting from Digtron inventories. Note that only [the most recent version of hopper is Digtron-capable,](https://github.com/minetest-mods/hopper) earlier versions lack a suitable API.
* [awards](https://forum.minetest.net/viewtopic.php?&t=4870), a mod that adds achievements to the game. Over thirty Digtron-specific achievements are included.
* [technic](https://forum.minetest.net/viewtopic.php?f=11&t=2538), which adds rechargeable batteries and power cables to the game that Digtron can use instead of fuel.
",22,22,8,28,construction,"[construction, i18n, intllib, minetest, minetest-mod, mod, tunneldigger]",23
SimPLU3D,simplu3D,SimPLU3D,https://github.com/SimPLU3D/simplu3D,https://api.github.com/repos/simplu3D/SimPLU3D,A library to generate buildings from local urban regulations.,"Simplu3D
============

[![Build Status](https://travis-ci.org/SimPLU3D/simplu3D.svg?branch=master)](https://travis-ci.org/SimPLU3D/simplu3D)

A library to automatically general built configurations that respect urban regulations and optimize a utility function.


Introduction
---------------------

This research library is developed as part of [COGIT team](http://recherche.ign.fr/labos/cogit/accueilCOGIT.php) researches concerning processing of urban regulation.

It provides an implementation of multi-dimensionnal simulated annealing algorithm to produce built configuration from a set of boxes constrained by urban regulation that optimizes a utility function.

The project is developed over 3D GIS Open-Source library [GeOxygene](https://github.com/IGNF/geoxygene) concerning geometric operators and 3D visualization, [librjmcmc4j](https://github.com/IGNF/librjmcmc4j) for simulated annealing implementation and [simplu3d-rules](https://github.com/SimPLU3D/simplu3d-rules) for geographical model and regulation management.

The [official website is hosted on GitHub](https://simplu3d.github.io) and the javadoc is deployed in the [gh-pages branch of this project](https://simplu3d.github.io/simplu3D/).

Conditions for use
---------------------
This software is free to use under CeCILL license. However, if you use this library in a research paper, you are kindly requested to acknowledge the use of this software.

Furthermore, we are interested in every feedbacks about this library if you find it useful, if you want to contribute or if you have some suggestions to improve it.

Library installation
---------------------
The project is build with Maven and is coded in Java (JDK 1.8 or higher is required), it has been tested in most common OS. If you are not familiar with Maven, we suggest installing developer tools and versions as described in [GeOxygene install guide](http://ignf.github.io/geoxygene/documentation/developer/install.html).

Vidéo and illustration
---------------------
[Generating a building with n boxes](https://www.youtube.com/watch?v=dH9woKexsVw)

[Generating n buildings with 1 box](https://www.youtube.com/watch?v=LwsPW0rcB44)

![Different generations with various parcels](https://github.com/SimPLU3D/simplu3D/blob/master/readme_images/simParc.png)

Test class
---------------------
fr.ign.cogit.simplu3d.exec.BasicSimulator class using predefined resource  files is runnable. It generates a built composed by a set of intersecting boxes.

```Java
public static void main(String[] args) throws Exception {

	// Loading of configuration file that contains sampling space
	// information and simulated annealing configuration
	String folderName = BasicSimulator.class.getClassLoader().getResource(""scenario/"").getPath();
	String fileName = ""building_parameters_project_expthese_3.json"";
	SimpluParameters p = new SimpluParametersJSON(new File(folderName + fileName));

	// Load default environment with no DTM (data are in resource directory)
	Environnement env = LoaderSHP.loadNoDTM(new File(
			DemoEnvironmentProvider.class.getClassLoader().getResource(""fr/ign/cogit/simplu3d/data/"").getPath()));

	// Select a parcel on which generation is proceeded
	BasicPropertyUnit bPU = env.getBpU().get(0);

	// Instantiation of the sampler
	OptimisedBuildingsCuboidFinalDirectRejection oCB = new OptimisedBuildingsCuboidFinalDirectRejection();

	// Rules parameters.8
	// Distance to road
	double distReculVoirie = 2;
	// Distance to bottom of the parcel
	double distReculFond = 0;
	// Distance to lateral parcel limits
	double distReculLat = 4;
	// Distance between two buildings of a parcel
	double distanceInterBati = 0;
	// Maximal ratio built area
	double maximalCES = 0.5;

	// Instantiation of the rule checker
	SamplePredicate<Cuboid, GraphConfiguration<Cuboid>, BirthDeathModification<Cuboid>> pred = new SamplePredicate<>(
			bPU, distReculVoirie, distReculFond, distReculLat, distanceInterBati, maximalCES);

	// Run of the optimisation on a parcel with the predicate
	GraphConfiguration<Cuboid> cc = oCB.process(bPU, p, env, 1, pred);
	// Writting the output
	SaveGeneratedObjects.saveShapefile(p.get(""result"").toString() + ""out.shp"", cc, bPU.getId(), 0);
}

```

Documentation and publications
---------------------
For more information about this code, the generation process and the underlying models are described in the PhD of Mickael Brasebin (French document) :

[Brasebin, M. (2014) Les données géographiques 3D pour simuler l'impact de la réglementation urbaine sur la morphologie du bâti, Thèse de doctorat, spécialité Sciences et Technologies de l'Information Géographique, Université Paris-Est, apr 2014](http://recherche.ign.fr/labos/cogit/publiCOGITDetail.php?idpubli=5016)

Contact for feedbacks
---------------------
[Mickaël Brasebin](https://MBrasebin.github.io) & [Julien Perret](http://recherche.ign.fr/labos/cogit/cv.php?prenom=Julien&nom=Perret)
[COGIT Laboratory](http://recherche.ign.fr/labos/cogit/accueilCOGIT.php)
({surname.name} (AT) {gmail} (POINT) {com})

Users and demo
--------------------
+ [IAUIDF for land price assessment : Note de conjecture ORF](http://www.orf.asso.fr/uploads/attachements/orf_nc7_ok_lg.pdf)
+ [OpenMole - SimPLU3D](https://simplu.openmole.org/) a demonstrator designed to help for the determination of regulation parameters value.
+ [PLU++ : for the simplification of public participation during PLU elaboration](http://ignf.github.io/PLU2PLUS/)
+ [Building permit cheking](https://demo-simplu3d.ign.fr/#/) a demonstrator to help for building permit instructions by checking a set of rules on a projected construction.
+ [DECODURBA : a tool dedicated to assist citizens for the construction of personnal house](http://www.logement.gouv.fr/hackurba-premier-hackathon-dedie-a-l-urbanisme-durable-recompense-tetricite). SimPLU3D was integrated to the solution proposed during the [Hackurba hackhathon](http://hackurba.strikingly.com/) and was awarded the price of National Urban Planning Portal by the French Ministery of Environment.


Acknowledgments
---------------------

+ This research is supported by the French National Mapping Agency ([IGN](http://www.ign.fr))
+ It is partially funded by the FUI TerraMagna project and by Île-de-France
Région in the context of e-PLU project
+ Mickaël Borne for improvements in the code and for refactoring
+ Imran Lokhat for tests and improvements about imrpoving the pipeline of simulation
+ [ISC-PIF](https://iscpif.fr/) - Paul Chapron and Romain Reuillon for proposing methods dedicated to model exploration and simulation distribution
",21,21,17,0,construction,"[construction, java, optimizer, plu, simulation, urban-regulations]",23
juri117,surrogate-models,,https://github.com/juri117/surrogate-models,https://api.github.com/repos/surrogate-models/juri117,"In this repository I publish the python code, that was part of my master thesis. The thesis can be found here, however its in German though, sry. :/","# Surrogate Models

In this repository I publish the python code, that was part of my master thesis. The thesis can be found [here](docs/Masterarbeit.pdf), however its in German though, sry. :/

## content

### implementations of surrogate models

The folder [mylibs](mylibs) contains implementations of surrogate models. The following methods are used:

* polynomial
* radial basis function
* kriging

moreover some methods for generating sample points are implemented:

* structured sample
* halton
* latin hyper cube

### Examples

The folder [examples](examples) shows how the above libraries can be used both in 2D and 3D spaces.

### wing-construction

The construction of a wing was the sample task I constructed for testing and comparing the surrogate methods. A wing-box was meant to be optimized for its weight, by varying its numbers of ribs and shell thickness. To make sure the structure is strong enough a FEM analysis is used (both Calculix and Abaqus APIs are implemented to do this).",20,20,1,0,construction,"[aircraft-design, construction, halton, kriging, latin-hypercube, openmdao, polynomials, python, radial-basis-function, structural-analysis, surrogate, surrogate-models, thesis, wing]",23
ai4ce,SNAC,ai4ce,https://github.com/ai4ce/SNAC,https://api.github.com/repos/SNAC/ai4ce,[ICLR2023] Learning Simultaneous Navigation and Construction in Grid Worlds,"# Learning Simultaneous Navigation and Construction in Grid Worlds

[**Wenyu Han**](https://www.linkedin.com/in/wenyuhan0616), [**Haoran Wu**](https://www.linkedin.com/in/haoran-lucas-ng-4053471a0/), [**Eisuke Hirota**](https://www.linkedin.com/in/eisukeh/), [**Alexander Gao**](https://www.alexandergao.com/), [**Lerrel Pinto**](https://www.lerrelpinto.com/), [**Ludovic Righetti**](https://wp.nyu.edu/machinesinmotion/89-2/), [**Chen Feng**](https://engineering.nyu.edu/faculty/chen-feng), 

## Abstract
We propose to study a new learning task, mobile construction, to enable an agent to build designed structures in 1/2/3D grid worlds while navigating in the same evolving environments. Unlike existing robot learning tasks such as visual navigation and object manipulation, this task is challenging because of the interdependence between accurate localization and strategic construction planning. In pursuit of generic and adaptive solutions to this partially observable Markov decision process (POMDP) based on deep reinforcement learning (RL), we design a Deep Recurrent Q-Network (DRQN) with explicit recurrent position estimation in this dynamic grid world. Our extensive experiments show that pre-training this position estimation module before Q-learning can significantly improve the construction performance measured by the intersection-over-union score, achieving the best results in our benchmark of various baselines including model-free and model-based RL, a handcrafted SLAM-based policy, and human players.

# Installation

We recommend user to create a virtual environment for running this project. We list details of the environment setup process as follows:

## Create and activate new conda env.

```
conda create -n my-conda-env python=3.7
conda activate my-conda-env
```

## Note: pytorch is needed, so you need to install it based on your own system conditions. Here we use Linux and CUDA version 11.7 as an example.

```pip3 install torch torchvision torchaudio```

## Next, install other dependencies listed in requirement.txt

```pip install -r requirements.txt```

## How to use

Our environment is developed based on the [OpenAi Gym](https://gym.openai.com/). You can simply follow the similar way to use our environment. Here we present an example for using 1D static task environment.

```
from DMP_Env_1D_static import deep_mobile_printing_1d1r ### you may need to find the path to this environment in [Env] folder 
env = deep_mobile_printing_1d1r(plan_choose=2) ### plan_choose could be 0: sin, 1: Gaussian, and 2: Step curve  
observation = env.reset()
fig = plt.figure(figsize=(5, 5))
ax = fig.add_subplot(1, 1, 1)
ax.clear()
for _ in range(1000):
  action = np.random.randint(env.action_dim) # your agent here (this takes random actions)
  observation, reward, done = env.step(action)
  env.render(ax)
  plt.pause(0.1)
  if done:
    break
plt.show()
```

# Reproduce experiment results

All scripts for each method are in script/ folder where subfolder contains policies for 1D, 2D, and 3D tasks. You can find all hyperparameters used for each case in the config/ folder which has the same structure as script/ folder. The scripts for simulation environments are in Env/ folder. You can easily reproduce the experiments by running the algorithm scripts with its corresponding hyperparameters in the YML files. For example, if I want to train the DQN policy on 2D variable dense task:

```
cd script/DQN/2d/
python DQN_2d_dynamic.py ../../../config/DQN/2D/dynamic_dense.yml
```

# Multiprocess

We also provide a multiprocess script for batch simulation. 

```
python multiprocess.py --env 1DStatic --plan_type 0 --num_envs 5
```

## [Paper (OpenReview)](https://openreview.net/forum?id=NEtep2C7yD)
To cite our paper:
```
@inproceedings{
    anonymous2023learning,
    title={Learning Simultaneous Navigation and Construction in Grid Worlds},
    author={Anonymous},
    booktitle={Submitted to The Eleventh International Conference on Learning Representations },
    year={2023},
    url={https://openreview.net/forum?id=NEtep2C7yD},
    note={under review}
}
```

## Acknowledgment
 The research is supported by NSF CPS program under CMMI-1932187. The authors gratefully thank our human test participants and the helpful comments from [**Bolei Zhou**](http://bzhou.ie.cuhk.edu.hk/), [**Zhen Liu**](http://itszhen.com/), and the anonymous reviewers, and also [**Congcong Wen**](https://scholar.google.com/citations?hl=en&user=OTBgvCYAAAAJ) for paper revision.
",18,18,4,0,construction,"[benchmark, construction, mobile-manipulation, navigation, reinforcement-learning-environments, robotics]",23
nheeren,material_intensity_db,,https://github.com/nheeren/material_intensity_db,https://api.github.com/repos/material_intensity_db/nheeren,Material intensity database for research on infrastructure systems ,"# Material intensity database project :floppy_disk:

:rotating_light: **The Dataset Descriptor article has been released**: https://www.nature.com/articles/s41597-019-0021-x

Welcome to the Material Intensity Research Database!

This database contains data on material intensity of buildings, but can be extended for further infrastructure in the future. The initial database version was assembled (seeded) by Heeren and Fishman (submitted). The publication provides some analysis of the data and discusses a number of applications for the database.

## Content

- [CONTRIBUTING](CONTRIBUTING.md): Guidelines on contributing data
- [Codebook](codebook.md): Document describing the database, meaning of parameter values, and the [codebook table](codebook.csv).
- [codebook table](codebook.csv): Tabular document describing the database variables.
- [data/buildings.csv](data/buildings.csv): The building material intensity database
- [references/buildings.csv](references/buildings.bib): References to the data sources used in the material intensity data file.

## Contributing

*Data contributions, and further extensions to the database are very much encouraged.* The more data is contained in the MIR-DB, the more meaningful analysis and can be made with it.

### New data

In case you know of a potential data source, but do not want to provide the data yourself, please consider [creating an issue](https://github.com/nheeren/material_intensity_db/issues/) and leaving a link to the dataset, or [send me an email](https://github.com/nheeren).

Please see [CONTRIBUTING.md](CONTRIBUTING.md) for more info on how to contribute data. We encourage the use of the [liberated_data project](https://github.com/nheeren/liberated_data) if you are extracting data from non-portable, such as figures or tables in PDF files.

### Database structure

For proposing new database attributes or changes to existing ones, please create an issue and propose a new [codebook](codebook.md). Please keep in mind that the goal of this project is to provide a comprehensive and complete database. The database contains primary and secondary attributes and the former are required. See the [codebook](codebook.md) for more details.

### Errors

In case you find errors in the data, please correct them (as described in [CONTRIBUTING.md](CONTRIBUTING.md)), [create an issue](https://github.com/nheeren/material_intensity_db/issues/), or [contact me](https://github.com/nheeren).

## Citation

Please cite the following article when using the data: Heeren and Fishman. A Database Seed for a Community-Driven Material Intensity Research Platform. Scientific Data. 2019. https://doi.org/10.1038/s41597-019-0021-x.

## Acknowledgements

:+1: The following people supported the compilation of the [original database](https://github.com/nheeren/material_intensity_db/releases/tag/v1.0.2) accompanying the [publication](https://doi.org/10.1038/s41597-019-0021-x):

- Marshall Borrus
- [Edgar Hertwich](https://github.com/Hertwich)
- Fritz Kleemann 
- [Farnaz Nojavan Asghari](https://github.com/farnazn)
- [Thibaud Pereira](https://github.com/ThibPereira)
- Emanuel Riegelbauer

",15,15,10,2,construction,"[construction, data, database, industrial-ecology, material, research, science]",23
MLAB-project,Modules,MLAB-project,https://github.com/MLAB-project/Modules,https://api.github.com/repos/Modules/MLAB-project,MLAB hardware modules and building blocks,"# MLAB hardware modules main repository

The MLAB Project was created to develop an universal kit to support hobbyist and professionals in the construction of simple or more complicated devices and instruments (robots, automation systems, testing kits and so on). It is primarily intended for engineers and scientists and it is in continuous development since 2003.

**This repository is archived because its contents have been split into separate repositories in the [MLAB-modules](https://github.com/mlab-modules/) organization. The development of new [MLAB](https://www.mlab.cz) components is still in progress and development has not been suspended. You can read about the reasons of the repository split on the [Discussions thread](https://github.com/orgs/MLAB-project/discussions/1).**


This repository is only a component of the [complete MLAB system](http://www.mlab.cz/)

## Modules

The principle of [Modular LABoratory](http://www.mlab.cz) is based on decomposition of complex systems into smaller cells or bricks (in MLAB called [modules](http://wiki.mlab.cz/doku.php?id=en:moduly)) such as communication interfaces, operational amplifiers, CPU modules, FPGA programmers and many other. Over years of development, [tenths of modules have been created](https://github.com/mlab-modules) - for easier orientation they are sorted into categories which are the first-level folders of this repository. Many modules are included as [repository submodules](https://git-scm.com/book/en/v2/Git-Tools-Submodules) in this parent repository. 

<img src=""http://wiki.mlab.cz/lib/exe/fetch.php?media=cs:sdr:sdrx01b_setup.jpg"" width=""600"" />

When creating modules, great emphasis is put on the quality of design and construction. The results can, therefore, meet the standards of even the most demanding users from the community of researchers, experimenters and innovators.

## How to start using MLAB

Further information can be found on [MLAB Wiki](http://wiki.mlab.cz/).

There is also a [Mailing list](https://groups.google.com/forum/#!forum/mlab-users) available for users and developers.

## Compatibility

Thanks to careful design, most of the modules are dimensionally and electrically compatible with many other products. Examples include the Arduino platform, the Merkur construction set, optical tables and DIN switchboard systems.

## Applications

See the [list of designs](http://home.mlab.cz/Server/GenIndex/GenIndex.php?path=%2FDesigns&lang=en) for an illustration of the wide spectrum of possible applications.
",15,15,20,3,construction,"[construction, display, electronics, fpga, i2c, i2c-bus, i2c-sensors, kicad, linux, mcu, measurement, mlab, mlab-hardware-modules, single-board-computers, spi]",23
MessaoudiMohammed,ediTable,,https://github.com/MessaoudiMohammed/ediTable,https://api.github.com/repos/ediTable/MessaoudiMohammed,"Manipulation of table (sort, add, edit, remove, etc... - rows | valid cells, type, require, etc... cells )","# ediTable v0.0.3 (beta) Jquery Plugin

ediTable is a JQuery plugin that lets you create table via json,make it sortable, also editable so you can manipulate any cell, set type of input for every cell (text, number, color, select, image, checkbox...) validate cells, make them required etc... add buttons edit/delete/custom buttons...

Demo:
-   Basic:  [link](https://codepen.io/OxiDev/pen/JVYGzO)
-   Advanced:  [link](https://codepen.io/OxiDev/pen/EJVKMd)

## Features overview

- Works with any Design Framework (bootstrap,material,materializecss...).
- Creation via (html/json/mix).
- Editable/Sortable table.
- Type of columns (text, number, color, select, image, checkbox...).
- Validation of inputs columns + Require.
- Function Before/After Actions ( for Mask plugins,Design etc...)
## Log:
- v0.0.3
	1. get data of table.
	2. save/delete via AJAX.
	3. fix some bugs
- v0.0.2:
	1. add new property unchecked.
	2. checkbox accepts boolean/string/numbers.
 
## Installation

Include css file if you're interested by it (not required) in your HTML code.
	
    <link rel=""stylesheet"" href=""/dist/ediTable.min.css"" type=""text/css"" /> 

Include Libs in your HTML code:

	<script src=""/lib/jquery.js""></script> 
	<script src=""/dist/ediTable.min.js""></script>

## Usage
 - Creating table via JSON :
 
			<table>
			</table>
			<script>
				$(""table"").ediTable({
					json:
						{
							body:jsonArray,
						},
					});		
			</script>

 - Creating table via HTML
			
			<table>
				<thead>
					<tr>
						<th>ID</th>
						<th>Name</th>
					</tr>
				</thead>
				<body>
					<tr>
						<td data-index=""id"">1</td>
						<td data-index=""name"">Med</td>
					</tr>
				</body>
			</table>
			<script>
				$(""table"").ediTable();		
			</script>
 - Creating table via (HTML/JSON)
			
			<table>
				<thead>
					<tr>
						<th>ID</th>
						<th>Name</th>
					</tr>
				</thead>
				<body>
					<tr>
						<td data-index=""id"">1</td>
						<td data-index=""name"">Med</td>
					</tr>
				</body>
			</table>
			<script>
				$(""table"").ediTable({
					json:
						{
							body:jsonArray,
						},
					});		
			</script>			
## Options
|Name|Type| Default |Description|
|--|--|--| --|
| editable | boolean | true | make table editable |
| sortable | boolean | false | make table sortable |
| json     | Object | ------ | create and define columns (type, title)  |
| button | Object | ------ | add edit, delete & custom buttons |
| add | boolean | false | add new row |
| keyboard| bool | true | allow Esc/Enter canceling/saving row|
| beforeSave | Function| ------ | before switching to save mode |
| afterSave | Function| ------ | after switching to save mode |
| beforeEdit| Function| ------ | before switching to edit mode  |
| afterEdit| Function| ------ | after switching to edit mode |
| beforeDelete| Function| ------ | before switching to delete mode |
| afterDelete | Function| ------ | after switching to delete mode|
| requiredAction | Function| ------ | action on required error|
| invalidAction | Function| ------ | action on invalid error|

Note:
- double click if you wanna edit row.
- click on the last row to add new one ( set add:true )
# Extra Information
## JSON object
json option has 2 arrays, head & body:
1. head is empty array by default and its role is defining columns:
			 -E.G:
					 
		 //...
		 json:{
			 head:
			 [
				{
					title:""Column 1"", // TH tag(string), default is name property 
					type:""number"", // default text
					validation:false, //default true,
					required:false, //default true
					min:-5, // works with only (number)
					max:5, // works with only (number)
					editable:false //default true
				},
				{
					title:""Column 2"", 
					type:""checkbox"",
					checked:""x"", // all cells with x value will be checked // required property
					unchecked:""y"",
					label:function($value){ // $value return value1 (x) or value2  
						if($value==something)
							return ""label1"" // e.g : ""Active""/""paid""...
						return ""label2"" // e.g : ""Unactive""/""unpaid""...
					},
					editable:true,
				},
				{
					type:""select"",
					data:	// required property
					[
						{
							value:0,
							label:""male""
						},
						{
							value:1,
							label:""female""
						}
					],
				},
				{
					title:""Pic profil"",
					type:""image"", // non-editable
				},
			 ]
		 }
	Note: if you don't wanna define some column, you need to set it ,{},

		//...
		{
			title:""X"",
			type:""type1""
		},
		{}, // if you don't wanna define this column.
		{
			title:""Y"",
			type:""type2""
		},
2. body is empty array by default and its where you set your data (JSON data):
e.g:
		
		json:{
			body:
			[
				//...
				{
					id:70,
					name:""Med"",
					birthday:""1789-01-04"",
					//...
				}
				//...
			]
		}
## Button object
Button is object where you can set your custom buttons or active edit/delete buttons, it has 2 objects, edit & delete button with default values :
1. edit/delete objects:
			 -E.G:
			 
			 //...
			 button:
			 {
				edit:
				{
					active:true, // default: false
					text:""<i class=""far fa-edit""></i>"", // default: edit  (text when row in show mode)
					textActive:""<i class=""far fa-save""></i>"", // default: edit (text when row in edit mode)
					selector:""editButton"", // class, default: edit
				},
				delete:
				{
					active:true, // default: false            //required property
					text:""<i class=""fas fa-trash-alt""></i>"", // default: delete
					selector:""deleteButton"", // class, default: delete
				},
				title:""Custom Title"" // TH of column  default : Actions
			 }
			 //...
2. creating custom button:


		//...
		customButton1:
			{
				active:true,
				text:""whatever"",
				//textActive:"""", // you can use it if you wanna change button's text in the edit mode.
				selector:""customButtonSelector"",
				action:function(values,tr) // action on click.
				{
					// some logic 
				}
			}
		//...
		
## Save 
1. Save via Ajax (by row) using jquery function $.ajax
		
		//...
		afterSave:function(values,oldvalues){
			formdata=new FormData();
			$.each(values,function(index,cellValue){
				formdata.append(index,cellValue);
			});
			$.ajax({
				url:""/path/serverFile[.extension]"",
				data:formdata,
				type:""method"",
				success:function(resp){}
			});
		},
		
2. Delete via Ajax (by row) using jquery function $.ajax
		
		//..
		afterDelete:function(values)
		{
			$.ajax({
				url:""/path/serverFile[.extension]"",
				data:{id:values._id},
				success:function(resp){}
			});
		}
		//...
3. Get the table data
	- ediTable library applied on a single table :	

			<table id=""table1""></table>
			<table id=""table2""></table>
			<table id=""table3""></table>
			var table=$(""#table1"").ediTable({[...]});
			table.data();
	- ediTable library applied on multi tables : 
			
			<table id=""table1""></table>
			<table id=""table2""></table>
			<table id=""table3""></table>
			var table=$(""table"").ediTable({[...]});
			index = 0; // 0 => first table | 1 => second table | ...
			table.data(index); //index of table 0,1,2...
## Columns Types
Types of columns inputs.

|Name/Properties|validation| editable |required|title|data|label|min|max|checked|unchecked|
|--|--|--|--|--|--|--|--|--|--|--|
| text||✓|✓|✓|||||||
| checkbox||✓||✓||✓|||✓|✓|
| number|✓|✓|✓ |✓|||✓|✓|||
| image ||||✓|||||||
| select ||✓|✓|✓|✓||||||
| url |✓|✓|✓|✓|✓||||||
| color|✓|✓|✓|✓|||||||
| email |✓|✓|✓|✓|||||||
## Methods Arguments

	beforeSave:function(values,$tr){},

	afterSave:function(newValues,oldValues,$tr){},

	beforeEdit:function(values,$tr){},

	afterEdit:function(values,$tr){},

	beforeDelete:function(values,$tr){},

	afterDelete:function(values,$tr){},

# Contact
- any bug/issue you fall in you can report it.
- any suggest contact me.
",14,14,1,0,construction,"[bootstrap, construction, html, html5, javascript, jquery, material-design, materializecss, table]",23
viresh-ratnakar,exet,,https://github.com/viresh-ratnakar/exet,https://api.github.com/repos/exet/viresh-ratnakar,"Web app for crossword construction: designing a grid, filling the grid, creating straight or cryptic clues, and downloading as Exolve or .puz. All data is saved locally, no crosswords are sent to any server.","# Exet

## A web app for crossword construction

#### Version: Exet v0.88 October 7, 2023

#### Author: Viresh Ratnakar

Exet is free, open source software for setting crosswords.
You can use Exet from my serving site:

- English: [exet.app or https://viresh-ratnakar.github.io/exet.html](https://exet.app).
- Hindi: [https://viresh-ratnakar.github.io/exet-hindi.html](https://viresh-ratnakar.github.io/exet-hindi.html).
- Portuguese (Brazilian): [https://viresh-ratnakar.github.io/exet-brazilian.html](https://viresh-ratnakar.github.io/exet-brazilian.html).

You can also download and use/serve your own copy of the software. For that,
you need files from this repository as well as a few files from
[Exolve](https://github.com/viresh-ratnakar/exolve), the companion software
that enables interactive crossword solving in a browser.

These are all the files needed from this repository:

- [`exet.html`](https://raw.githubusercontent.com/viresh-ratnakar/exet/master/exet.html),
- [`lufz-en-lexicon.js`](https://raw.githubusercontent.com/viresh-ratnakar/exet/master/lufz-en-lexicon.js),
  - The above two files should be replaced by their language-specific variants, for the non-English
    languages that Exet supports:
  - Hindi:
    - [`exet-hindi.html`](https://raw.githubusercontent.com/viresh-ratnakar/exet/master/exet-hindi.html),
    - [`lufz-hi-lexicon.js`](https://raw.githubusercontent.com/viresh-ratnakar/exet/master/lufz-hi-lexicon.js),
  - Portuguese (Brazilian):
    - [`exet-brazilian.html`](https://raw.githubusercontent.com/viresh-ratnakar/exet/master/exet-brazilian.html),
    - [`lufz-pt-br-lexicon.js`](https://raw.githubusercontent.com/viresh-ratnakar/exet/master/lufz-pt-br-lexicon.js),
- [`exet.js`](https://raw.githubusercontent.com/viresh-ratnakar/exet/master/exet.js),
- [`exet.css`](https://raw.githubusercontent.com/viresh-ratnakar/exet/master/exet.css),
- [`exet-lexicon.js`](https://raw.githubusercontent.com/viresh-ratnakar/exet/master/exet-lexicon.js),
- [`about-exet.html`](https://raw.githubusercontent.com/viresh-ratnakar/exet/master/about-exet.html),
- [`exet-version.txt`](https://raw.githubusercontent.com/viresh-ratnakar/exet/master/exet-version.txt),
- [`no-unches.png`](https://raw.githubusercontent.com/viresh-ratnakar/exet/master/no-unches.png),
  [`t-unches.png`](https://raw.githubusercontent.com/viresh-ratnakar/exet/master/t-unches.png),
  [`l-unches.png`](https://raw.githubusercontent.com/viresh-ratnakar/exet/master/l-unches.png),
  [`tl-unches.png`](https://raw.githubusercontent.com/viresh-ratnakar/exet/master/tl-unches.png),
  [`no-blocks.png`](https://raw.githubusercontent.com/viresh-ratnakar/exet/master/no-blocks.png).

And here are the files needed from Exolve:

- [`exolve-m.css`](https://raw.githubusercontent.com/viresh-ratnakar/exolve/master/exolve-m.css),
- [`exolve-m.js`](https://raw.githubusercontent.com/viresh-ratnakar/exolve/master/exolve-m.js),
- [`exolve-from-puz.js`](https://raw.githubusercontent.com/viresh-ratnakar/exolve/master/exolve-from-puz.js).

Exet comes with a permissive MIT license. The full license notice is provided in
the [`LICENSE`](license) file as well as reproduced at the bottom of this file.

Exet has no library/package/software dependencies. You should be able to use it
from any modern browser. The experience may not be great on smaller screens like
phones, though. I would recommend using Chrome or Firefox on a desktop or laptop
computer, with Page zoom set to fill up your screen (125% for my setup).

Exet saves all revisions of all crosswords that you work on, in the browser's
local storage (you can back up all of Exet's local storage into a file). Exet
never sends your crosswords to wherever it might be getting served from.

You can download the crosswords that you create with Exet in the
[Exolve](https://github.com/viresh-ratnakar/exolve) format, in the .puz
format, and as PDFs. You can also grab embeddable HTML code for adding your
crossword to any web site or blog, using Exolve (but see the
[known caveats in the Exolve
documentation](https://github.com/viresh-ratnakar/exolve#exolve-widget)).

As of now, Exet only suggests English, Hindi, and Portuguese (Brazilian).
I'll add support for more languages over time.

I welcome [bug reports and feature
requests](https://github.com/viresh-ratnakar/exet/issues/new).
You may contact me via email too, at [viresh@exet.app](mailto:viresh@exet.app).

If you use Exet and like it, please consider posting links to it and/or writing
reviews, to help spread the word.

## Lexicon

### English

The list of English words used by Exet for providing grid-fill suggestions
is a modified version of the ""UKACD"" words list, which comes with its own
copyight notice that is reproduced near the bottom of this page. I made the
following modifications to the UKACD words list:

- Added a variety of words, idioms, proverbs collated from several web
  sources.
- Replaced all accented characters with non-accented ones.
- Deleted all punctuation characters other than spaces, hyphens, and
  apostrophes.
- Removed lots of swear words and offensive words.
- Attached a popularity score to each word/phrase using a
  dump of all of Wikipedia's English-language articles.
- Attached pronunciations (when available) using CMUdict.
- Created an index of the lexicon suitable for use by my JavaScript
  code. Source code for the last few steps is available in my
  [Lufz GitHub repository](https://github.com/viresh-ratnakar/lufz).

### Hindi

The Hindi lexicon, including popularity scores and pronunciations, is
taken from
[Verma et al. (2020) Shabd: A Psycholinguistic Database for Hindi.
(submitted).](https://osf.io/fygme/)

### Portuguese (Brazilian)

The Portuguese (Brazilian) lexicon was assembled from the following sources:

- The entries come from
  [Dictionary collection in Portuguese (pt-BR)](https://github.com/fserb/pt-br)
  by Fernando Serboncini. Its MIT License is copied below.
- Pronunciations are taken from
  [dicionario-fonetico](https://github.com/iwmo/dicionario-fonetico),
  which is derived from the
  [Common Orthographic Vocabulary of the Portuguese
  Language](""http://www.portaldalinguaportuguesa.org/index.php?action=fonetica&act=list"").
- I trimmed away some swear words (using my English exclusion list).
- I added importance score using occurrences in Portuguese Wikipedia.
- The lexicon was huge, so I retained only entries that I found at least 1 occurrence for
  in Wikipedia.

### Using `exetLexicon` in other apps

The `exetLexicon` JavaScript object can be set up in other apps too,
by loading two script files.

- One of these language-specific files:
  - [`lufz-en-lexicon.js`](https://raw.githubusercontent.com/viresh-ratnakar/exet/master/lufz-en-lexicon.js)
  - [`lufz-hi-lexicon.js`](https://raw.githubusercontent.com/viresh-ratnakar/exet/master/lufz-hi-lexicon.js)
  - [`lufz-pt-br-lexicon.js`](https://raw.githubusercontent.com/viresh-ratnakar/exet/master/lufz-pt-br-lexicon.js)
- [`exet-lexicon.js`](https://raw.githubusercontent.com/viresh-ratnakar/exet/master/exet-lexicon.js)

This provides functionality such as getting anagrams, homophones, spoonerisms,
and words/phrases matching a pattern.

## Crossword construction walk-through

To use Exet, you simply open a link to `exet.html`, such as [this one on
my site](https://viresh-ratnakar.github.io/exet.html), in a browser.

The first time you open Exet, it might take a few seconds to load, as it fetches
a large (25 MB for English) lexicon file.

After it loads, your browser screen should look something like this:

![Screeshot of Exet upon starting up](starting-screenshot.png)

Normally, Exet would start with the last crossword that you were working
on. When you open Exet for the very first time, it creates a 15x15
blocked grid of the British variety, with blocks added ""automagically""
(see below). You can pass a URL option to default to a completely blank grid
as the first grid it creates:
[exet.html?newgrid=blank](exet.html?newgrid=blank).

There are three phases in crossword construction:

- Constructing the grid
- Filling the grid
- Providing the clues

Of course, setters often go back and forth and can overlap the phases (and Exet
certainly lets you do that). But a walk-through of Exet is perhaps best done by
separating out and describing these three phases individually.

For a demonstration of some of these steps, please check out this short,
introductory [tutorial video on YouTube](https://youtu.be/pDJ7bkImbWk),
made by Debsamita Basu.

### Constructing the grid

The ""Open"" menu allows you to start with blocked blank grids following a few
checkquered templates and the completely blank ""No blocks"" template. You will
also see a checkbox when creating a new blank grid, to ""Add automagic blocks,""
and it will be checked by default (you can uncheck it if you do want to start
with a chequered template with no added blocks or with a completely blank
template). After creating a grid, you can customize it by manually
adding/removing blocks/bars, or by letting the software automatically add
blocks.

You can also create a 3-D grid from the ""Open"" menu. In a 3-D grid, there are
multiple ""layers"", with ""down"" clues running through the layers and ""across""
and ""away"" clues within the layers. See the
[Exolve documentation](https://github.com/viresh-ratnakar/exolve/blob/master/README.md)
for details on 3-D crosswords.


- Add automagic blocks (#)
- Autofill:
  - _Leads to an autofill options panel._
- Accept autofilled entries (=)
- Edit grid cell:
  - Toggle block (.)
  - Toggle bar-after (|)
  - Toggle bar-under (\_)
- Mark grid cell:
  - Toggle encircling (@)
  - Toggle marking prefilled (!)
  - Toggle nina ($)
  - Toggle colouring (^)
  - Clear all markings!
- Add/edit special sections:
  - Preamble
  - Explanations
  - Questions
  - Other Exolve sections
- Reverse current light
- Clear all the lights! (Ctrl-Q)
- Preferences:
  - \[ \] Spellcheck clues/annos
  - \[ \] Allow asymmetry

For the actions that modify the grid in non-cosmetic ways (.|\_), symmetric
changes are automatically applied to the other end of the grid. This can be
turned off by checking the ""Allow asymmetry"" checkbox in the
""Edit &rarr; Preferences:"" submenu. The chosen setting for this toggle will
persist for that particular crossword (but will reset to the default of
enforcing symmetry for a new crossword).

""Add automagic blocks"" essentially adds some blocks to the grid, while
maintaining the British chequered format (that has no consecutive unchecked
cells) or the American format (that has all cells checked), whichever of the
two formats is the state of the grid at that time. ""Add automagic blocks""
can be used repeatedly. More details on what ""Add automagic blocks"" does
are [provided in the appendix](#automagic-blocks).

You can also open a .puz file, or any existing HTML file that contains a puzzle
in the Exolve format (when you save such a crossword after editing it, the saved
Exolve file will replicate whatever is there before and after the Exolve part in
the original HTML file that you opened).

#### Reversing the current light
When you choose the option to reverse a light from the Edit menu, the
orientation of the cell is reversed. This entails the following direction changes:
- Across (a) &harr; Back (b)
- Down (d) &harr; Up (u)
- Across (ac) &harr; Back (ba) in 3-D
- Away (aw) &harr; Towards (to) in 3-D
- Down (dn) &harr; Up (up) in 3-D

When you reverse a light, you retain the clue (and annotation) that you might
have already written for it (but you will probably need to revise it!). You will
also retain any linked group that the light may be a part of (but the order of
cells in the group will change!). Reversing a light has no impact on other
lights/clues (except that their numbering may change).

### Filling the grid

You can fill any light by typing into its cells. You can also use grid-fill
suggestions shown to the right of the grid (in the ""Exet"" tab). These grid-fill
suggestions are ordered by their popularity in English Wikipedia articles.

The grid-fill suggestions include phrases and hyphenated words. When you pick
these, the clue enum is automatically adjusted. For example, for 1A, if you
pick ""birds of a feather,"" then the enum will automatically change to
(5,2,1,7).

If you modify the enum part in the clue to something that indicates a multi-word
phrase (for example, by changing ""(10)"" to ""(4,6)"") then the grid-fill
suggestions will be reordered to prefer entries that match the implied
punctuation, i.e., the presence of interword space/dash/apostrophe characters.

To the right of the fill suggestions table, near the top, you have some
settings that control the nature of fill suggestions. These are:

- A minimum ""popularity"" threshold. The lexicon (""Lufz-en-v0.06""), as of
  May 2023, has 268,740 entries. Providing a popularity threshold
  can be useful to avoid obscure words as well as to make autofill go faster.
  If you are an experienced setter, you may want to set this to 0 to see the
  widest possible set of choices for each fill. This threshold is set to **80**
  by default. Here's a guide to the number of entries that you will limit to, at
  various thresholds (recall that popularity is derived from occurrences in
  Wikipedia articles):

  | Threshold | #Entries | Last included entries    |
  |-----------|----------|--------------------------|
  |       0   | 268,740  | to be or not to be that is the question, You're a better man than I am Gunga Din |
  |       25  | 201,554  | titfers, simular, coalize |
  |       50  | 134,369  | gallows humour, double-stopping, trading estates |
  |       60  | 107,495  | tyrannis, fluffing, fluidics |
  |       70  |  80,621  | grey seals, accretions, organismal |
  |   **80**  |**53,747**|**dampened, normalcy, lampreys**        |
  |      85   |  40,310  | tubules, Sylvian, klezmer  |
  |       90  |  26,873  | linebackers, footballing, Ramakrishna |
  |       95  |  13,436  | reactive, FX, anal |

- Whether to exclude proper nouns.
- Whether to allow grid-fill suggestions (and autofill) to try to reverse
  lights (and linked lights). This is false be default for 2-D crosswords, and
  true by default for 3-D crosswords. When true, if there is a reversed
  grid-fill suggestion (shown with a &lArr; prefix in the list of suggestions)
  that you decide to accept, the light will be reversed (clue numberings may
  change). If the light is part of a linked group, the whole group will get
  reversed.

As you progress through filling the grid, the software will try to help by
showing viability indicators (I call them ""viablots""). These are red circles
that appear in light cells that have only a few available grid-fill choices.
The bigger the size, the more constrained a cell is. If you find yourself
in a state where absolutely no viable grid-fill is possible for some cells
(at least from the lexicon the software is using), the viablots in such
cells will be large and coloured purple. Your best recourse at that point is
to back-track by clearing out some neighbouring grid-fills, or use some other
lexicon source to find a word/phrase that works. Instead of filling in lots
of large purple viablots, only a few are coloured in a stand-out fashion, and
the rest are coloured in a non-distracting, near-transparent manner.

The grid-fill suggestions shown for a light take into account a limited
amount of look-ahead. What that means is that the software evaluates
each candidate suggestion for a light (that matches its crossing letters)
by checking if the choice leads to a dead-end for any of the crossing
clues. This sweep to weed out non-viable grid-fill suggestions happens in
the background, and also updates the viablots. When this background sweep
is going on, a flashing red indicator is shown under the grid, in the
bottom-right corner. You may notice grid-fill suggestions getting
modified while such a sweep is going on. Grid-fill suggestions that lead
to dead ends are moved to the bottom of the list and are shown with a purple
background (and a warning tooltip).

When Exet determines (using its lexicon) that for some unfilled cell, exactly
one letter choice is viable, it shows that letter choice in gray. You can use
the Edit menu's ""Accept autofilled entries"" option to accept all such autofilled
letter suggestions.

You can provide up to 100 preferred words/phrases for using in the grid, by
clicking on the button labelled ""Set preferred fills"" in the Exet tab, just

Clicking anywhere outside the panel of preferred fills will dismiss the panel.

Similarly, you can provide a set of words that you do *not* want to appear
in the crossword, by clicking on the ""Set fill exclusions"" button.

Clicking anywhere outside the shown panel (for preferred fills or fill
exclusions) dismisses it.

#### Going back-and forth between filling the grid and changing the grid

Sometimes, setters design the grid first (or use a pre-designed grid) and then
fill it. But sometimes, setters choose to do the grid-design and the grid-fill
together. As mentioned above, entries that agree with the letters filled so
far but that are not viable towards a complete grid-fill (in the current state
of the grid) are still shown as possible choices for lights (albeit below the
viable entries, and with a distinctive purple background). Such entries may be
particularly useful for this use case, as you can select one of them that you
like, and then modify the grid itself to make it viable.

#### Autofill

You can click on ""Autofill"" in the ""Edit"" menu to try to get the software to
fill all remaining entries. This may take a few minutes, but you can monitor
the progress and intervene if needed: From the Autofill menu panel, you can
click on ""Pause""  to pause the Autofill (clicking on ""Start"" will resume it).
You can accept or clear the Autofill suggestions by clicking on the ""Accept""
/ ""Clear"" buttons, respectively, when Autofill is paused or has finished.

When Autofill is running, it won't stop just because of you moving away from
its control panel and hiding it (by moving the mouse out): you can return to
monitoring its status again by clicking again on ""Autofill"" in the ""Edit"" menu.

Note that Autofill tries to prefer words/phrases in the ""preferred fills"" list.
Autofill also respects the ""fill exclusions"" settings (min-popularity,
exclusion of proper nouns, as well as any entries in the explicitly forbidden
list) and the setting for allowing reversals.

If Autofill fails, you can try to rerun it a few times. It may succeed
on a subsequent run, because of the slight randomness in the choices that it
makes. If it fails consistently, you should reduce constraints by doing one
or more of:
- Increase ""beam search"" width (this allows it to explore more options,
  at the expense of speed).
- Reduce minimum word/phrase popularity threshold.
- Allow proper nouns if they have been disallowed.
- Allow reversals if they have been disallowed.
- Remove words/phrases from the ""fill exclusions"" list.
- Clear some previously filled entries.
- Break up some long lights by inserting blocks/bars.

You can ask Autofill to ""Try to get a pangram"" via an option on the Autofill
panel. This will try to fill the grid in a way such that every letter is
used at least once. The algorithm usually succeeds in doing this, especially
for British-style grids that have unchecked cells (but may take longer to
finish). If it fails then you can retry, and if that too fails to find a pangram
repeatedly, then you can try to reduce constraints as listed above. When
Autofill succeeds in finding a pangram, the Autofill panel displays ""Pangram!""
near its bottom.

You can also try to restrict the pangram to a subset of cells by opening the
panel that says ""Try to constrain the pangram to these cells:"" and then
choosing some of these options:

- Checked
- Unchecked
- Circled
- Starts
- Ends

Do note that the more cells you allow as pangram cells, the more likely
you are to succeed in creating a pangram. When Autofill succeeds in
finding a pangram within any specified cell constraints, the Autofill
panel displays this at the bottom: ""Pangram *with* constraints!"".

Normally, if you've asked to try to get a pangram, and Autofill is able to
fill the grid completely but without getting a pangram, it will just stop. But
there's an option to ""Loop until pangram"", which will make Autofill keep trying
to get a pangram (with any cell constraints that you specified) until it
finds one, or until there is failure.

#### Autofill and pangram tips

- Autofill randomizes its choices to an extent. You can run it repeatedly
  to get different results every time, until you are satisfied with the fills.
- A good way to make use of Autofill is to stop it as soon as it picks a
  word that you do not like. You can then accept the suggestions and clear
  the word(s) that you do not like (you may also consider adding them to the
  ""Set fill exclusions"" list). Then, you can resume Autofill and repeat the
  process.
- U.S.-style crosswords (with doubly-checked cells) are harder to fill and are
  harder for the pangram algorithm. Working with fewer constraints for such
  grids (smaller popularity threshold, etc. as listed in the previous
  section) is better.
- If you monitor Autofill's progress and you can see that it is not making
  progress, you may want to pause, clear, and re-try (a smaller beam size
  might have made it fail faster in situations like this).

### Providing the clues

The clue for the entry in the current light is shown above the grid and can be
edited in place right there. You can navigate through the clues using standard
controls such as clicking on a cell or a clue, using the arrow keys, or
using the tab and shift-tab keys.

When you create a new crossword, all clues are set to be in ""draft"" mode and
are shown with a distinctive `[DRAFT]` marker. You should clear this marker
when you have set a clue and are satisfied with it. You can clear the marker
by clicking on the `[DRAFT]` marker for the current clue (above the grid).
You can always put a clue back in draft mode (if you realize it has some
issues), by clicking again on the ~~`[DRAFT]`~~ marker above the current clue.
In the clues list in the Exet panel (to the right of the grid), clues in
draft mode get shown with a `[DRAFT]` marker and their clue numbers get shown
coloured gray.

You can also edit the enum part of the clue, but the software will reset it
to the previous value if it does not add up to the needed number. For example,
if a light spans 10 cells, and you edit the enum part to be ""(5-4),"" the
software will reset it to ""(10),"" (or ""(5,5)"" or whatever was the last value).
When it does this, Exet will also surface a relevant tip under the ""Tips""
area, showing how you can use `exolve-option: ignore-enum-mismatch` to avoid
this strict checking, if desired.
Note that when you save the crossword to Exolve or PUZ or PDF formats,
you can always chose to not list the enums (using a checkbox in the Save menu).

You can also leave an enum incompletely specified, as in these examples:
""(one word)"", ""(2 wds)"". You can specify the total length and omit the
word break locations too, like this: ""(9, two words)"" or ""(10, 3 wrds)"".

When the enum does specify a length and it does not match the light length but
you *want* it like that (for example, in a variety cryptic where you're asking
solvers to delete or add some letters before entry, for some of the entries),
then you should use
*Edit -> Add/Edit special sections: -> Other Exolve sections* and add this line:
```exolve-option: ignore-enum-mismatch```
This will relax the requirement that enums have to match light lengths.

You can optionally provide annotations for clues. These annotations are
typically used in cryptic crosswords to describe the cryptic wordplay when
a solution to a clue is revealed.

The text-editing panel for the current clue/anno disables spellcheck by
default. You can turn it on or off through the ""Edit &rarr; Preferences:""
menu. This setting persists in Exet, across different crosswords. Note that
if you change the setting, depending on some browser peculiarities, the
updated setting may only become active after you have navigated to a new
clue and/or clicked on the clue or anno.

##### Modifying the grid after some clues have been provided

If you make changes to the grid (such as adding/removing blocks/bars) that
result in a modified numbering of clues, any clues or annotations that you
may already have provided, for lights that survive the grid changes, will
remain intact. This is the case even when their clue numbers get modified
because of the grid changes. Moreover, any linked clues that you may have
created will survive (with automatic renumbering if needed), as long as
all the lights involved survive the grid change.

#### Formatting clues and annotations

Note that when editing the current clue or annotation, you are working with
raw HTML, and you can use any HTML tags for specialized formatting if you want
to. In particular, if you want to present a clue in verse form (a style
occasionally seen in jigsaw-style cryptic crosswords), you can insert
linebreaks by inserting `<br>` tags. Generally speaking though, clues in most
publications tend to _not_ make use of fancy formatting (except for some
italicization in some cases).

Annotations, on the other hand, _should_ make use of rich formatting, to
illustrate cryptic wordplay elements clearly.

You can wrap one or more parts of the clue using the special `~{...}~`
""def wrapper"" that Exolve supports, for marking the ""definition part"" in a
cryptic clue. The wrapped text gets shown distinctively (with a green
underline, usually) when the solver reveals the solution to the clue.

The clues and the annotations are shown in the clues lists (to the right of
the grid, in the Exet tab)  with all the HTML markup properly rendered (and
all ""def wrappers"" shown in their revealed state).

When you select some text in the current clue or annotation, you can make use
of some formatting shortcuts via helper buttons that appear above and to
the right of the current clue above the grid. Hovering the mouse over a helper
button will show a preview of the changes it will make when clicked. The
following screenshot shows an example:

![Screeshot of rich formatting helpers](exet-format.png)

Some of these formatting shortcuts can also be applied with special keystrokes
after selecting some text in the current clue or annotation. Here is the list
of supported formatting shortcuts along with details including keystrokes (when
applicable).

| Format | Keystrokes | Context | Notes          |
|--------|------------|---------|----------------|
| Def | Ctrl-D | Clue | Toggles wrapping/unwrapping in the def wrapper, `~{...}~` |
| _I_      | Ctrl-I | Clue/Anno | Toggles wrapping/unwrapping in `<i>...</i>` |
| **B**        | Ctrl-B | Anno | Toggles wrapping/unwrapping in `<b>...</b>` |
| <u>U</u>   | Ctrl-U | Anno | Toggles wrapping/unwrapping in `<u>...</u>` |
| ~S~ | Ctrl-S | Anno | Toggles wrapping/unwrapping in `<s>...</s>` |
| CAPs   |  | Anno | Toggles capitalization of letters |
| **A**l**T**s   |  | Anno | Marks every odd letter as bold and in upper case |
| ~_*T*_~   |  | Clue/Anno | Clears formatting |

This feature is not intended to be a fancy WYSIWYG editor, and has some
idiosyncrasies:

- If you select some text that already contains some HTML tags (or the def
  wrapper), you do not get any shortcuts for adding more tags to it. However,
  you get a shortcut button for clearing the formatting in such a selection.
  Format clearing only gets rid of tags that are fully matched with closing
  tags within the selected text.
- If you select some text that is fully enclosed within a `<b>..</b>`,
  `<i>..</i>`, `<u>..</u>`, `<s>..</s>` tag, or in the `~{..}~` def wrapper,
  then the shortcut for that particular format will toggle it, clearing away
  the existing formatting of that specific type. However, it will do that by
  simply removing the enclosing tags, _even if you have not selected all the
  text enclosed by them_. This is to avoid the complication of having to
  close/reopen any other markup that might also be enclosing the current
  selection.

#### Linked clues

You can link clues, creating sequences of lights that make up a single solution
that is clued using the ""parent"" clue (the first one in the sequence). To
create such linkages, you can click on the clue number of the current clue,
which will bring up a panel through which you can add a linked clue to the
current clue. You have to specify the clue to be linked by providing its
number as well as direction suffix (""7d"" or ""9a"" or ""6u"" or ""13b"" or—in
3-D—""7dn"" or ""9ac"" or ""8aw"" or ""12up"" or ""19ba"" or ""3to"", etc.). The same panel
also provides a button for breaking up a group of
previously linked clues. When you break up a group of linked clues, any existing
clue text from them will also get deleted. Grid-fill suggestions as well as
autofill work as you might expect with linked clues.

#### Resources for clues

When creating a clue for a word or a phrase, setters typically like to
look at the definition of the word/phrase, look at its synonyms, examples of
usage, pronunciation, and etymology. The ""Research"" tab lets you do that
by using reputed online resources, conveniently linking directly to the
word/phrase in the current light:

- **The Free Dictionary**: [thefreedictionary.com](https://thefreedictionary.com)
- **Wiktionary**: [en.wiktionary.org](https://en.wiktionary.org)
- **Merriam-Webster Dictionary & Thesaurus**: [www.merriam-webster.com](https://www.merriam-webster.com)
- **Onelook**: [onelook.com](https://onelook.com)
- **DictionaryAPI**: [api.dictionaryapi.dev](https://api.dictionaryapi.dev)
- **Etymonline**: [www.etymonline.com](https://www.etymonline.com)
- **Chambers Dictionary & Thesaurus**: [chambers.co.uk](https://chambers.co.uk).
  Note that Chambers now does not allow embedding their pages in
  iframes, so these links open in new tabs.

In addition, the ""Research"" tab lets you search
[cryptics.georgeho.org](https://cryptics.georgeho.org/), which is an excellent
database of published cryptic clues, for:

- Definitions that others might have used for an entry, in cryptic clues.
- Phrases from the clue that others might have used as cryptic indicators. In
  particular, if you have used a cryptic indicator that you're not sure about,
  this is an excellent research tool for checking whether any setters in
  published newspapers have used it in the same way. Only 1-word and 2-word
  phrases from the clue are searched for by default, but you can easily edit
  the SQL query to add any longer phrase that you may have used as an indicator.

For cryptic crosswords, there are some additional tabs that setters may find
useful. In all of these (other than ""Lists""), the wordplay candidates are shown
for the entry in the currently selected light. However, you can generate wordplay
candidates for any other word or phrase, by editing the input field(s) near the
top in each tab. These tabs are:

- **Charades**: Shows candidate charade wordplays, including anagrams,
  reversals, and containers, sorted in decreasing order of the average length
  of wordplay components.
- **Edits, Sounds**: Shows candidate wordplays for deletion, insertion,
  substitution, sorted in increasing order of a kind of edit distance (sum
  of lengths of deletions, insertions, substitutions, with the length of a
  substitution being the max of the plus and minus term lengths). Also shows
  homophones and Spoonerisms (derived using the Carnegie Mellon Pronouncing
  Dictionary—see their copyright notice at the end of this document).
- **Anagrams**: Shows anagrams of the current entry (""fodder""). There is an
  interactive slot for drafting an anagram too—you can use that to also craft
  composite/extended anagrams, as it automatically updates anagrams of any
  letters from the fodder that have not yet been used in the draft, as well
  as anagrams of any extra letters in the draft that are not present in the
  fodder. The suggested anagrams include multi-word anagrams. Additionally,
  shows anagrams that are Wikipedia phrases, using
  [nutrimatic.org](https://nutrimatic.org).
- **Hidden**: Uses [nutrimatic.org](https://nutrimatic.org) to show meaningful
  ""hidden word"" and ""reversed hidden word"" wordplay possibilities for the
  entry in the current light. Setters can tweak the wordplay as they choose.
- **Alternations**: Uses [nutrimatic.org](https://nutrimatic.org) to show
  ""alternation"" and ""reversed alternation"" wordplays for the entry in the
  current light.
- **Lists**: This is not specific to the current light. This tab provides
  convenient links to curated lists of wordplay indicators (for wordplays of
  various types) and cryptic abbreviations. The sources are:
  [Crossword Unclued](https://www.crosswordunclued.com), Wikipedia,
  [Mythic beasts (updated)](https://longair.net/mark/random/indicators/), and
  [cryptics.georgeho.org](https://cryptics.georgeho.org/).
  - You can highlight certain words when looking at any of these lists, by
    supplying a keyword and selecting a highlighting option from the menu
    next to the List selection menu. This can be very useful to craft natural
    (and deceptive!) cryptic clue surfaces. For example, you can highlight
    anagrinds related to *alcohol* (*abuse*, *drunk*, *production*, etc.
    would get highlighted). This feature is powered by the
    [Xlufz web service](https://github.com/viresh-ratnakar/xlufz)
    that I host at [xlufz.ratnakar.org](https://xlufz.ratnakar.org).

### Final touches

Do give your crossword a meaningful title, and provide your name/pseudonym as
the setter. These fields can be seen at the top of the page and can be directly
edited. Similarly, you can edit the copyright notice for the puzzle. All three
of these editable fields are optional, and you can simply edit them to be
empty.

### Downloading Exolve or .puz files

The ""Save"" menu lets you download or grab the puzzle in various ways. In the
following, \<title\> in a filename stands for the puzzle title.

- **Download PUZ file (exet-\<title\>.puz)**: Download a .puz file. Note that
  .puz does not support many crossword features (afaik) such as barred grids.
  The software will alert you if it is not able to provide a .puz download.
  Note also that when exporting the crossword in the .puz format, any rich
  formatting in clues will get stripped out as the .puz format does not support
  it (.puz does not support annotations either).
- **Download Exolve file with solutions
  (exet-exolve-\<title\>-with-solutions.html)**:
  Download an HTML file that uses Exolve and that allows solvers to check/see
  solutions.  Such files can also be opened by Exet from the ""Open"" menu and
  can be further edited. This might be useful, for example, when you want to
  edit an old crossword that you have deleted from Exet's limited local storage.
- **Download Exolve file without solutions
  (exet-exolve-\<title\>-sans-solutions.html)**:
  Download an HTML file that uses Exolve and does not allow solvers to check/see
  solutions.
- **Copy Exolve widget code with solutions 📋**: Copy (into the clipboard)
  embeddable Exolve widget HTML code (with solvers able to check/see solutions).
- **Copy Exolve widget code without solutions 📋**: Copy (into the clipboard)
  embeddable Exolve widget HTML code (with solvers not able to check/see
  solutions).
- **Print or download PDF file with solutions**: Print the crossword, or save
  it as a PDF file, in a compact, two-column format, with solutions.
- **Print or download PDF file without solutions**: Print the crossword, or save
  it as a PDF file, in a compact, two-column format, without solutions.

In the first three ""download"" variants, a file with the name shown will be
downloaded into the browser's Downloads directory/folder. If there already
exists a file with that name, the system will use a variant of the name
as per its usual conventions.

The Save menu also lets you change a couple of settings:

- **Show enums in clues**: You can turn this off to download American-style
  puzzles that do not show enums in clues.
- **Exolve URL prefix**: You can change this to your own custom location
  of the `exolve-m.css` and `exolve-m.js` files in downloaded Exolve files.
  You can press the Escape key inside the text entry area to revert to the
  default value of `https://viresh-ratnakar.github.io/`. Note also that if you
  load an existing HTML file containing an Exolve-formatted puzzle, then when
  you modify the puzzle and download as Exolve subsequently, the downloaded
  file will simply copy everything (other than the modified puzzle specs)
  from the original file, including the URL prefix (i.e., this setting will
  not get used).

These Save settings are sticky: Exet saves their current values in local
storage.

The Save menu shows warning messages if the crossword has unfilled entries
or has clues still in `[DRAFT]` mode. For clues in `[DRAFT]` mode, the
prefix ""[DRAFT] "" is shown in the downloaded/printed versions of the crossword
(as noted earlier, you can clear the `[DRAFT]` marker from the current clue
by clicking on it, when it is being edited above the grid).

### Going back to older versions

The ""Open"" menu lets you pick any old revision of any crossword. It also shows
a preview of the puzzle revision that you select.

Browsers typically limit the amount of local storage (5 MB in Chrome as of
May 2023). When this limit is reached, Exet will warn you that it cannot
save crossword revisions. You can use the ""Manage storage"" menu option in the
""Open"" menu at any time to delete old revisions of some crosswords and/or
entirely delete old crosswords (after downloading Exolve files with solutions
for them as these files can be opened in Exet to recover the crosswords
completely).

### Backing up the revisions stored in local storage

The ""Open"" menu also has a ""Save all revisions to file"" option, which saves the
entire revision history to a JSON file (named exet-revisions-_timestamp_.json),
as a way of having a back-up beyond the browser's local storage. Apart from
using as a back-up mechanism, you can also use this to transfer all the
crosswords that you're working on to a different computer. The companion option,
""Merge saved revisions file,"" lets you read a saved JSON file, merging all
revision state from it. This allows limiting to just the latest version of each
crossword (instead of its full revision history). The revisions are _merged_: in
the sense that if a revision already exists then it is not duplicated.

## Analysis

The Exet tab also has an ""Analysis"" link. When you click on that, a panel opens
up, showing various analyses of the grid, the grid-fill, the clues, and the
annotations.

These analyses are useful to setters to control the following desirable
properties of crosswords:

- Grids should be connected, symmetric, and free from consecutive unches.
- Solution entry length distributions should not be too skewed towards
  very short or very long.
- Words (other than very common ones) should not be repeated in clues,
  especially if they are used as cryptic wordplay indicators.
- The number of long and very long clues should ideally be limited.
- Wordplay types in cryptic clues should have a good mix of variety.
- Use of uncommon solution entries should be limited. Clues for
  uncommon entries should be a bit easier.

Here is an illustrative example of the kinds of analyses shown:

> **Grid**
> 
> - 225 cells, dimensions: 15 × 15
> - All light cells are connected
> - Symmetric
> - 70 (31.11%) blocked cells
> - No bars
> - No consecutive unches
> 
> **All/Across/Down Grid-fill and Clues**
> 
> - Number of lights: 29
> - Number of entries: 29
> - Filled entries: 29 (100.00%)
> - Set clues (i.e., not \[DRAFT\]): 29 (100.00%)
> 
> - Entry lengths:
>   - 2	counts of	4	
>   - 4	counts of	5	
>   - 6	counts of	6	
>     ...
>       Distinct values: 8
>       Range: 4 - 15
>       Average: 7.3
>       Median: 7
> - Word/phrase popularities:
>   - 3	counts of	65	
>     ...
>   - 2	counts of	90	
>   - 7	counts of	95	
>   - 3	counts of	100	
>       Distinct values: 13
>       Range: 0 - 100
>       Average: 75.3
>       Median: 85
> - Letters used:
>   - 20	×	E	
>   - 15	×	A	
>   - 13	×	I	
>     ...
>       Distinct values: 21
> - Words repeated in set clues:
>   - 6	×	of	
>   - 4	×	to	
>   - 3	×	perhaps	
>   - 2	×	wild	
>     ...
>     Distinct values: 23
> - Word-lengths of set clues:
>   - 1	count of	4	
>   - 6	counts of	5	
>   - 5	counts of	8	
>     ...
>       Distinct values: 10
>       Range: 4 - 12
>       Average: 8.3
>       Median: 8
> - Annotations provided in clues: 29 (100.00%)
>   - 6	×	charade or other	
>   - 3	×	anagram around	
>   - 3	×	anagram	
>   - 2	×	in	
>   - 2	×	in anagram	
>     ...
>       Distinct values: 17

### A few notes about these analyses:

- You can toggle between ""All"" and ""Across"" and ""Down"" when looking at the
  analyses of grid-fills and clues/annotations.
- All histograms are shown with adjoining bar graphs.
- You can hover the mouse over the bars to see details (lists of relevant
  clues/lights).
- The analysis of annotations is a somewhat experimental feature that
  tries to provide a breakdown of clue types by assuming a specific
  annotation style in which clue type names and cryptic wordplay operations
  are interspersed with indicators, fodders shown within parantheses or curly
  braces. For example:

  - \~{Old car}\~ part, later redesigned to limit wastage, essentially (10)
     PARTLATER\* {... redesigned} around {... to limit ...} (-was)T(-age)
     {... essentially}.
  - \~{Instrument}\~ platform's bottom aboard rickety boat leaked water (10)
    (-platfor)M {...'s bottom} in {aboard} BOAT\* {rickety ...} + URINE
    {leaked water}.

  Note that the definition part is marked above with \~{...}\~, as per the
  Exolve convention.

## Supported crossword features

Most of these features are applicable only to the Exolve format, not the
.puz format (circled cells work in .puz too). Features that get shown with
""Reveal all"" (such as annotations, ninas, etc.) are only provided to solvers
with the downloaded Exolve files that have solutions included.

### Annotations

As noted in the ""Analysis"" section, the definition part of a cryptic clue
can be marked with  \~{...}\~ in the clue itself. This can be done with
the ctrl-D shortcut after selecting a part of the clue text.

### Preamble and Explanations

From the Edit menu, you can choose to add or edit the ""preamble,"" which is
introductory text shown at the top of the crossword, and might include any
special instructions or notes. The editing is done in a separate ""modal""
panel. Similarly, you can provide setter's notes and other explanations
in the ""explanations"" section, which gets shown to the solver at the end,
upon clicking on ""Reveal all.""

You can include HTML tags in the preamble and in the explanations. As you
edit the raw HTML, the updated rendering gets shown in the respective section.

### Questions

In some crosswords, setters like to pose additional questions to solvers,
such as deciphering some additional meta-puzzle, or simply asking for feedback.
From the Edit menu, you can also add/edit/delete such questions. Like the
preamble and explanations section, questions may include HTML tags, and
rendered questions are shown under the grid as you make changes.

You can specify how much answer space to provide for a question by providing
an enum (just like in a crossword clue). The enum can be hidden from the
solvers by appending a \* to it (which is useful for long-form answers).
You can also specify the correct answer to a question, to be shown after
""Reval all.""
The questions-editing panel shows some examples that illustrate the
[available question-formatting
options](https://github.com/viresh-ratnakar/exolve#exolve-question).

For receiving filled answers to questions from solvers, you can add
an `exolve-submit` line using the ""Other Exolve sections"" menu option. See
details on how to set up submission (including details on using Google Forms
for receiving submissions), in [the exolve-submit
documentation](https://github.com/viresh-ratnakar/exolve#exolve-submit).

### Other Exolve sections

You can specify and edit some of the other Exolve features through this menu
option. Here is the list of sections that you can add:

- [exolve-credits](https://github.com/viresh-ratnakar/exolve#exolve-credits)
- [exolve-option](https://github.com/viresh-ratnakar/exolve#exolve-option)
- [exolve-postscript](https://github.com/viresh-ratnakar/exolve#exolve-postscript)
- [exolve-relabel](https://github.com/viresh-ratnakar/exolve#exolve-relabel)
- [exolve-submit](https://github.com/viresh-ratnakar/exolve#exolve-submit)
- [exolve-force-{bar,hyphen}-{below,after}](https://github.com/viresh-ratnakar/exolve#exolve-force-hyphen-right-exolve-force-hyphen-below-exolve-force-bar-right-exolve-force-bar-below)

If there are any problems in parsing the specified text, then the error is shown
in red and the specified text is not used until the error is fixed. The
specified Exolve sections, when free from errors, are updated as you type (with
a short lag).

The  `exolve-postscript` section is typically used to saw site-specific
navigational elements. This section (if present) is normally hidden in Exet.
The only exception is when you are actively editing ""Other Exolve sections""
(as you may want to edit the `exolve-postscript` section itself and see what the
results look like).

### Circles and prefills

From the Edit menu, and through keyboard shortcuts in the grid itself,
you can toggle the circling of a cell, and you can toggle whether a cell is
""prefilled."" While a cell has been marked as prefilled, its contents will not
get cleared with ""Clear light"" or ""Clear all the lights!"".

### Ninas and colours

You can mark some cells (or entire lights) as ninas, or with a special colour.
This can be done from the Edit menu as well as using a keyboard shortcut in
the grid itself (""$"" for nina and ""^"" for colour). Both the nina and colour
controls work as toggles: if you use them in a cell/light that has already been
marked, that marking gets cleared.

The interfaces for ninas and colours are very similar. The idea is that
pressing the shortcut key (or selecting the menu option) in a cell is
all that you need to do in the common case: it will mark that cell
as belonging to the last nina or colour group that you used. But, after
marking, it brings up a panel next to the grid through which you can
make changes to the markings: you can switch to marking the whole light instead
of just the cell, and you can change the colour group to any group used
earlier or to a new colour (which gets picked with some default value,
but can be modified and set to any valid HTML colour name or code).
This panel (like other ""modal"" panels in Exet) gets dismissed when you
click or type anywhere outside it, or if you press Esc within it.
In the common use-case, you can ignore the panel and simply navigate
to each desired grid cell successively and just press ""$"" or ""^"" in each one.
You cannot ""bring back"" the panel once it is dismissed (I wanted to avoid the
additional complexity that would have entailed). However, it's easy enough to
make changes by getting rid of the nina/colour and then re-adding it, with just
two successive presses of the shortcut key.

If you are hiding ninas in the grid, it's generally a good idea to do
that early in the grid-fill process. Cells/lights marked as ninas do not
get cleared by the ""Clear light"" and ""Clear all the lights!"" options.
Ninas do not get displayed to the solver until they press ""Reveal all""
or ""Show ninas.""

In the rare case of a cell belonging to multiple ninas or colour groups,
""toggling"" will let you add a new one only after all the existing ones are
cleared away successively.

The ""Edit &rarr; Mark cells:"" submenu also offers an option to clear
*all* current cell markings (circles, prefills, ninas, colours), after asking
for confirmation.

### Features easy to add with some post-editing

In the Exolve format, you can simply edit the downloaded file (which is in a
simple plain-text format described in detail in the
[Exolve README file](https://github.com/viresh-ratnakar/exolve/blob/master/README.md))
to add any of the following features.

- Diagramless puzzles
- Jigsaw puzzles
- Submission link

I hope to add direct support for other languages and lexicons to Exet,
at some point.

### Tips

Clicking on the ""Tips"" button in the Exet tab shows you one useful tip at a
time, and lets you cycle through the available tips or jump to a random one.
Occasionally, a tip may get proactively surfaced, if the software deems it
to be very relevant to some recent action that you took.

## Notes and acknowledgements

- [Qxw](https://www.quinapalus.com/qxw.html) is excellent free software for
  crossword construction that I have used extensively. I found myself
  jumping from Qxw to various online resources during the clue-setting phases
  of crossword construction, and have tried to make these resources
  readily accessible in-context within Exet.
- Qxw also provides [links to the original versions of many word
  lists](https://www.quinapalus.com/xwfaq.html), (including UKACD18, the one
  that I used).
- The ""viablots"" that I display in Exet are inspired by a similar construct
  in Qxw.
- I added Wikipedia-importance scores to the lexicon using code
  ([Lufz](https://github.com/viresh-ratnakar/lufz)) inspired by the code
  used in the [Nutrimatic project](https://github.com/egnor/nutrimatic).
- I used this [.puz format
  documentation](https://code.google.com/archive/p/puz/wikis/FileFormat.wiki)
  to write code to create .puz-formatted output. This mostly worked, except
  that I had to fix a bug (the checksum computation needs to make sure that
  it does not overflow beyond 16 bits). I found the bug by looking at the
  [puzpy code](https://github.com/alexdej/puzpy).
- The composite anagram builder was inspired by similar constructs in Qxw
  as well as in
  [martindemello.net/wgn.html](http://martindemello.net/wgn.html).
- The excellent and versatile
  [Datamuse words API](https://www.datamuse.com/api/) powers my
  [Xlufz web service](https://github.com/viresh-ratnakar/xlufz) used on the
  ""Lists"" tab to highlight words related to a keyword when showing lists of
  cryptic indicators or abbreviations.

## Appendix

### Automagic blocks

Here's what ""Add automagic blocks"" does, in detail (whether you use it when
creating a new blank grid or whether you invoke it on an existing grid):
- It ensures that any added blocks continue to maintain symmetry and continue
  to maintain full cell connectivity (i.e., there is a path from every white
  cell to every other white cell, going through white cells only).
- First, it looks at what kind of grid is being used or created: if an existing
  grid has barred cells, then ""Add automagic blocks"" does not make any changes.
- It makes 0 or 1 random change to each row, and then 0 or 1 random change to
  each column, while maintaining certain grid properties as listed below.
- If an existing grid is of the American variety with every white square
  being a part of an across light as well as a down light (i.e., is ""checked""),
  then, ensure that:
  - Every light is at least 3 letters in length.
  - Every white square is checked.
  - (Note that when you choose the ""No blocks"" menu choice while creating a new
    blank grid, ""Add automagic blocks"" will create an American grid variety.)
- Else, if an existing grid is of the British variety where the grid is
  chequered but there are no two adjacent unchecked cells, then, ensure that:
  - Every light is at least 4 letters in length.
  - There are no two adjacent unchecked cells.
  - Lights have fewer than or equal to as many unchecked cells as checked cells,
    unless they have 9 or more letters, in which case they can have one more
    unchecked cell than checked cells.
  - (Note that when you choose any of the chequered choices while creating a new
    blank grid, ""Add automagic blocks"" will create a British grid variety.)
- No cell where you've already entered a grid-fill letter will be turned into a
  block.

## Copyright notices

### UKACD18

```
UKACD18
Copyright (c) 2009 J Ross Beresford
All rights reserved.

Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions
are met:

1. Redistributions of source code must retain the above copyright
   notice, this list of conditions and the following disclaimer.

2. Redistributions in binary form must reproduce the above copyright
   notice, this list of conditions and the following disclaimer in the
   documentation and/or other materials provided with the distribution.

3. The name of the author may not be used to endorse or promote products
   derived from this software without specific prior written permission.

THIS SOFTWARE IS PROVIDED BY THE AUTHOR ""AS IS"" AND ANY EXPRESS OR
IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
```

### CMUdict

```
CMUdict
-------

CMUdict (the Carnegie Mellon Pronouncing Dictionary) is a free
pronouncing dictionary of English, suitable for uses in speech
technology and is maintained by the Speech Group in the School of
Computer Science at Carnegie Mellon University.

The Carnegie Mellon Speech Group does not guarantee the accuracy of
this dictionary, nor its suitability for any specific purpose. In
fact, we expect a number of errors, omissions and inconsistencies to
remain in the dictionary. We intend to continually update the
dictionary by correction existing entries and by adding new ones. From
time to time a new major version will be released.

We welcome input from users: Please send email to Alex Rudnicky
(air+cmudict@cs.cmu.edu).

The Carnegie Mellon Pronouncing Dictionary, in its current and
previous versions is Copyright (C) 1993-2014 by Carnegie Mellon
University.  Use of this dictionary for any research or commercial
purpose is completely unrestricted. If you make use of or
redistribute this material we request that you acknowledge its
origin in your descriptions, as per the license information included
in the dictionary file (a Simplified BSD lincense).

If you add words to or correct entries in your version of this
dictionary, we would appreciate it if you could send these additions
and corrections to us (air+cmudict@cs.cmu.edu) for consideration in a
subsequent version. All submissions will be reviewed and approved by
the current maintainer, Alex Rudnicky at Carnegie Mellon University.

----------------------------------------------------------------------
The current version of cmudict is now cmudict-0.7b 
[First released November 19, 2014]

Note that the first '.' in the file name has changed to a '-' as it
was observed that file systems occasionally get confused about the
scope of the extension.

Please note that the dictionary is modified incrementally, to correct
errors are incorporate new words. If you require a unique version, be
sure to specify a revision when you check it out.

cmudict-0.7b includes various systematic fixes and additional words.
As always please let us know if you see a problem or want to suggest a
word.

----------------------------------------------------------------------
```

### Dictionary collection in Portuguese (pt-BR)

```
MIT License

Copyright 2021 Fernando Serboncini

Permission is hereby granted, free of charge, to any person obtaining a copy of
this software and associated documentation files (the ""Software""), to deal in
the Software without restriction, including without limitation the rights to
use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies
of the Software, and to permit persons to whom the Software is furnished to do
so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.
```

### Exet

```
MIT License

Copyright (c) 2020 Viresh Ratnakar

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the ""Software""), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.

The latest code and documentation for Exet can be found at:
https://github.com/viresh-ratnakar/exet
```

# Exet
The latest code and documentation for Exet can be found at:
https://github.com/viresh-ratnakar/exet
```

",33,33,5,2,construction,"[3-d, autofill, browser-based, clues, compiler, construction, constructor, create, crossword, cryptic, free, javascript, online, open-source, pangram, software, webapp]",23
sid-kap,housing-data,,https://github.com/sid-kap/housing-data,https://api.github.com/repos/housing-data/sid-kap,,"# housing-data

[housingdata](https://housingdata.app) is a webapp that displays trends in housing contruction in US and Canada cities, counties, metro areas and states/provinces from 1980 to present.

The data comes from the US Census's monthly [Building Permits Survey](https://www.census.gov/construction/bps/index.html) (data publicly available) and Statistics Canada's [Building Permits](https://www23.statcan.gc.ca/imdb/p2SV.pl?Function=getSurvey&SDDS=2802) survey (not publicly available at the city level, I had to purchase it).

## Code structure

The raw data is stored as a combination of fixed-width, CSV, and Excel files at [https://github.com/sid-kap/housing-data-data](https://github.com/sid-kap/housing-data-data). I try to update the raw data files in that repo when BPS releases new data every month.

The raw data is converted to JSON files usable by the web front-end by python/pandas code that lives in `python/`. That code runs in every Vercel deploy, which runs after new commits in `main`. The JSON files are hosted as static assets by Vercel.

The front-end is written in React/Next.js and hosted by Vercel.

## Getting Started

You should have `yarn` and `poetry` installed on your machine.

```sh
# Clone the raw data repo to ../housing-data-data
pushd ..
git clone https://github.com/sid-kap/housing-data-data
popd

# Set up the python venv
pushd python
poetry install
popd

# Run python code to build the static JSON files in ./public
./build_data_local.sh

# Run the local Next.js development server at http://localhost:3000
yarn dev
```
",14,14,4,4,construction,"[apartments, census, construction, housing, yimby]",23
discretegames,hypercomplex,,https://github.com/discretegames/hypercomplex,https://api.github.com/repos/hypercomplex/discretegames,A Python library for working with arbitrary-dimension hypercomplex numbers following the Cayley-Dickson construction of algebras.,"# Hypercomplex

**A Python library for working with quaternions, octonions, sedenions, and beyond following the Cayley-Dickson construction of hypercomplex numbers.**

The [complex numbers](https://en.wikipedia.org/wiki/Complex_number) may be viewed as an extension of the everyday [real numbers](https://en.wikipedia.org/wiki/Real_number). A complex number has two real-number coefficients, one multiplied by 1, the other multiplied by [i](https://en.wikipedia.org/wiki/Imaginary_unit).

In a similar way, a [quaternion](https://en.wikipedia.org/wiki/Quaternion), which has 4 components, can be constructed by combining two complex numbers. Likewise, two quaternions can construct an [octonion](https://en.wikipedia.org/wiki/Octonion) (8 components), and two octonions can construct a [sedenion](https://en.wikipedia.org/wiki/Sedenion) (16 components).

The method for this construction is known as the [Cayley-Dickson construction][2] and the resulting classes of numbers are types of [hypercomplex numbers][1]. There is no limit to the number of times you can repeat the Cayley-Dickson construction to create new types of hypercomplex numbers, doubling the number of components each time.

This Python 3 package allows the creation of number classes at any repetition level of Cayley-Dickson constructions, and has built-ins for the lower, named levels such as quaternion, octonion, and sedenion.

[![Hypercomplex numbers containment diagram][8]][8]

## Installation

```text
pip install hypercomplex
```

[View on PyPI](https://pypi.org/project/hypercomplex) - [View on GitHub](https://github.com/discretegames/hypercomplex)

This package was built in Python 3.9.6 and has been tested to be compatible with python 3.6 through 3.10.

## Basic Usage

```py
from hypercomplex import Complex, Quaternion, Octonion, Voudon, cayley_dickson_construction

c = Complex(0, 7)
print(c)        # -> (0 7)
print(c == 7j)  # -> True

q = Quaternion(1.1, 2.2, 3.3, 4.4)
print(2 * q)  # -> (2.2 4.4 6.6 8.8)

print(Quaternion.e_matrix())  # -> e0  e1  e2  e3
                              #    e1 -e0  e3 -e2
                              #    e2 -e3 -e0  e1
                              #    e3  e2 -e1 -e0

o = Octonion(0, 0, 0, 0, 8, 8, 9, 9)
print(o + q)  # -> (1.1 2.2 3.3 4.4 8 8 9 9)

v = Voudon()
print(v == 0)  # -> True
print(len(v))  # -> 256

BeyondVoudon = cayley_dickson_construction(Voudon)
print(len(BeyondVoudon()))  # -> 512
```

For more snippets see the Thorough Usage Examples section below.

## Package Contents

Three functions form the core of the package:

-   `reals(base)` - Given a base type (`float` by default), generates a class that represents numbers with 1 hypercomplex dimension, i.e. [real numbers](https://en.wikipedia.org/wiki/Real_number). This class can then be extended into complex numbers and beyond with `cayley_dickson_construction`.

    Any usual math operations on instances of the class returned by `reals` behave as instances of `base` would but their type remains the reals class. By default they are printed with the `g` [format-spec][7] and surrounded by parentheses, e.g. `(1)`, to remain consistent with the format of higher dimension hypercomplex numbers.

    Python's [`decimal.Decimal`](https://docs.python.org/3/library/decimal.html) might be another likely choice for `base`.

    ```py
    # reals example:
    from hypercomplex import reals
    from decimal import Decimal

    D = reals(Decimal)
    print(D(10) / 4)   # -> (2.5)
    print(D(3) * D(9)) # -> (27)
    ```

-   `cayley_dickson_construction(basis)` (alias `cd_construction`) generates a new class of hypercomplex numbers with twice the dimension of the given `basis`, which must be another hypercomplex number class or class returned from `reals`. The new class of numbers is defined recursively on the basis according the [Cayley-Dickson construction][2]. Normal math operations may be done upon its instances and with instances of other numeric types.

    ```py
    # cayley_dickson_construction example:
    from hypercomplex import *
    RealNum = reals()
    ComplexNum = cayley_dickson_construction(RealNum)
    QuaternionNum = cayley_dickson_construction(ComplexNum)

    q = QuaternionNum(1, 2, 3, 4)
    print(q)         # -> (1 2 3 4)
    print(1 / q)     # -> (0.0333333 -0.0666667 -0.1 -0.133333)
    print(q + 1+2j)  # -> (2 4 3 4)
    ```

-   `cayley_dickson_algebra(level, base)` (alias `cd_algebra`) is a helper function that repeatedly applies `cayley_dickson_construction` to the given `base` type (`float` by default) `level` number of times. That is, `cayley_dickson_algebra` returns the class for the Cayley-Dickson algebra of hypercomplex numbers with `2**level` dimensions.

    ```py
    # cayley_dickson_algebra example:
    from hypercomplex import *
    OctonionNum = cayley_dickson_algebra(3)

    o = OctonionNum(8, 7, 6, 5, 4, 3, 2, 1)
    print(o)              # -> (8 7 6 5 4 3 2 1)
    print(2 * o)          # -> (16 14 12 10 8 6 4 2)
    print(o.conjugate())  # -> (8 -7 -6 -5 -4 -3 -2 -1)
    ```

For convenience, nine internal number types are already defined, built off of each other:

| Name         | Aliases               | Description                                                                                                       |
| ------------ | --------------------- | ----------------------------------------------------------------------------------------------------------------- |
| `Real`       | `R`, `CD1`, `CD[0]`   | [Real numbers](https://en.wikipedia.org/wiki/Real_number) with 1 hypercomplex dimension based on `float`.         |
| `Complex`    | `C`, `CD2`, `CD[1]`   | [Complex numbers](https://en.wikipedia.org/wiki/Complex_number) with 2 hypercomplex dimensions based on `Real`.   |
| `Quaternion` | `Q`, `CD4`, `CD[2]`   | [Quaternion numbers](https://en.wikipedia.org/wiki/Quaternion) with 4 hypercomplex dimensions based on `Complex`. |
| `Octonion`   | `O`, `CD8`, `CD[3]`   | [Octonion numbers](https://en.wikipedia.org/wiki/Octonion) with 8 hypercomplex dimensions based on `Quaternion`.  |
| `Sedenion`   | `S`, `CD16`, `CD[4]`  | [Sedenion numbers](https://en.wikipedia.org/wiki/Sedenion) with 16 hypercomplex dimensions based on `Octonion`.   |
| `Pathion`    | `P`, `CD32`, `CD[5]`  | Pathion numbers with 32 hypercomplex dimensions based on `Sedenion`.                                              |
| `Chingon`    | `X`, `CD64`, `CD[6]`  | Chingon numbers with 64 hypercomplex dimensions based on `Pathion`.                                               |
| `Routon`     | `U`, `CD128`, `CD[7]` | Routon numbers with 128 hypercomplex dimensions based on `Chingon`.                                               |
| `Voudon`     | `V`, `CD256`, `CD[8]` | Voudon numbers with 256 hypercomplex dimensions based on `Routon`.                                                |

```py
# built-in types example:
from hypercomplex import *
print(Real(4))               # -> (4)
print(C(3-7j))               # -> (3 -7)
print(CD4(.1, -2.2, 3.3e3))  # -> (0.1 -2.2 3300 0)
print(CD[3](1, 0, 2, 0, 3))  # -> (1 0 2 0 3 0 0 0)
```

The names and letter-abbreviations were taken from [this image][3] ([mirror][4]) found in Micheal Carter's paper [_Visualization of the Cayley-Dickson Hypercomplex Numbers Up to the Chingons (64D)_](https://www.mapleprimes.com/posts/124913-Visualization-Of-The-CayleyDickson), but they also may be known according to their [Latin naming conventions][6].

## Thorough Usage Examples

This list follows [examples.py](https://github.com/discretegames/hypercomplex/blob/main/hypercomplex/examples.py) exactly and documents nearly all the things you can do with the hypercomplex numbers created by this package.

Every example assumes the appropriate imports are already done, e.g. `from hypercomplex import *`.

1. Initialization can be done in various ways, including using Python's built in complex numbers. Unspecified coefficients become 0.

    ```py
    print(R(-1.5))                        # -> (-1.5)
    print(C(2, 3))                        # -> (2 3)
    print(C(2 + 3j))                      # -> (2 3)
    print(Q(4, 5, 6, 7))                  # -> (4 5 6 7)
    print(Q(4 + 5j, C(6, 7), pair=True))  # -> (4 5 6 7)
    print(P())                            # -> (0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0)
    ```

2. Numbers can be added and subtracted. The result will be the type with more dimensions.

    ```py
    print(Q(0, 1, 2, 2) + C(9, -1))                   # -> (9 0 2 2)
    print(100.1 - O(0, 0, 0, 0, 1.1, 2.2, 3.3, 4.4))  # -> (100.1 0 0 0 -1.1 -2.2 -3.3 -4.4)
    ```

3. Numbers can be multiplied. The result will be the type with more dimensions.

    ```py
    print(10 * S(1, 2, 3))                    # -> (10 20 30 0 0 0 0 0 0 0 0 0 0 0 0 0)
    print(Q(1.5, 2.0) * O(0, -1))             # -> (2 -1.5 0 0 0 0 0 0)

    # notice quaternions are non-commutative
    print(Q(1, 2, 3, 4) * Q(1, 0, 0, 1))      # -> (-3 5 1 5)
    print(Q(1, 0, 0, 1) * Q(1, 2, 3, 4))      # -> (-3 -1 5 5)
    ```

4. Numbers can be divided and `inverse` gives the multiplicative inverse.

    ```py
    print(100 / C(0, 2))                      # -> (0 -50)
    print(C(2, 2) / Q(1, 2, 3, 4))            # -> (0.2 -0.0666667 0.0666667 -0.466667)
    print(C(2, 2) * Q(1, 2, 3, 4).inverse())  # -> (0.2 -0.0666667 0.0666667 -0.466667)
    print(R(2).inverse(), 1 / R(2))           # -> (0.5) (0.5)
    ```

5. Numbers can be raised to integer powers, a shortcut for repeated multiplication or division.

    ```py
    q = Q(0, 3, 4, 0)
    print(q**5)               # -> (0 1875 2500 0)
    print(q * q * q * q * q)  # -> (0 1875 2500 0)
    print(q**-1)              # -> (0 -0.12 -0.16 0)
    print(1 / q)              # -> (0 -0.12 -0.16 0)
    print(q**0)               # -> (1 0 0 0)
    ```

6. `conjugate` gives the conjugate of the number.

    ```py
    print(R(9).conjugate())           # -> (9)
    print(C(9, 8).conjugate())        # -> (9 -8)
    print(Q(9, 8, 7, 6).conjugate())  # -> (9 -8 -7 -6)
    ```

7. `norm` gives the absolute value as the base type (`float` by default). There is also `norm_squared`.

    ```py
    print(O(3, 4).norm(), type(O(3, 4).norm()))  # -> 5.0 <class 'float'>
    print(abs(O(3, 4)))                          # -> 5.0
    print(O(3, 4).norm_squared())                # -> 25.0
    ```

8. Numbers are considered equal if their coefficients all match. Non-existent coefficients are 0.

    ```py
    print(R(999) == V(999))         # -> True
    print(C(1, 2) == Q(1, 2))       # -> True
    print(C(1, 2) == Q(1, 2, 0.1))  # -> False
    ```

9. `coefficients` gives a tuple of the components of the number in their base type (`float` by default). The properties `real` and `imag` are shortcuts for the first two components. Indexing can also be used (but is inefficient).

    ```py
    print(R(100).coefficients())   # -> (100.0,)
    q = Q(2, 3, 4, 5)
    print(q.coefficients())        # -> (2.0, 3.0, 4.0, 5.0)
    print(q.real, q.imag)          # -> 2.0 3.0
    print(q[0], q[1], q[2], q[3])  # -> 2.0 3.0 4.0 5.0
    ```

10. `e(index)` of a number class gives the unit hypercomplex number where the index coefficient is 1 and all others are 0.

    ```py
    print(C.e(0))  # -> (1 0)
    print(C.e(1))  # -> (0 1)
    print(O.e(3))  # -> (0 0 0 1 0 0 0 0)
    ```

11. `e_matrix` of a number class gives the multiplication table of `e(i)*e(j)`. Set `string=False` to get a 2D list instead of a string. Set `raw=True` to get the raw hypercomplex numbers.

    ```py
    print(O.e_matrix())                        # -> e1  e2  e3  e4  e5  e6  e7
                                               #   -e0  e3 -e2  e5 -e4 -e7  e6
                                               #   -e3 -e0  e1  e6  e7 -e4 -e5
                                               #    e2 -e1 -e0  e7 -e6  e5 -e4
                                               #   -e5 -e6 -e7 -e0  e1  e2  e3
                                               #    e4 -e7  e6 -e1 -e0 -e3  e2
                                               #    e7  e4 -e5 -e2  e3 -e0 -e1
                                               #   -e6  e5  e4 -e3 -e2  e1 -e0
                                               #
    print(C.e_matrix(string=False, raw=True))  # -> [[(1 0), (0 1)], [(0 1), (-1 0)]]
    ```

12. A number is considered truthy if it has has non-zero coefficients. Conversion to `int`, `float` and `complex` are only valid when the coefficients beyond the dimension of those types are all 0.

    ```py
    print(bool(Q()))                    # -> False
    print(bool(Q(0, 0, 0.01, 0)))       # -> True

    print(complex(Q(5, 5)))             # -> (5+5j)
    print(int(V(9.9)))                  # -> 9
    # print(float(C(1, 2))) <- invalid
    ```

13. Any usual format spec for the base type can be given in an f-string.

    ```py
    o = O(0.001, 1, -2, 3.3333, 4e5)
    print(f""{o:.2f}"")                 # -> (0.00 1.00 -2.00 3.33 400000.00 0.00 0.00 0.00)
    print(f""{R(23.9):04.0f}"")         # -> (0024)
    ```

14. The `len` of a number is its hypercomplex dimension, i.e. the number of components or coefficients it has.

    ```py
    print(len(R()))      # -> 1
    print(len(C(7, 7)))  # -> 2
    print(len(U()))      # -> 128
    ```

15. Using `in` behaves the same as if the number were a tuple of its coefficients.

    ```py
    print(3 in Q(1, 2, 3, 4))  # -> True
    print(5 in Q(1, 2, 3, 4))  # -> False
    ```

16. `copy` can be used to duplicate a number (but should generally never be needed as all operations create a new number).

    ```py
    x = O(9, 8, 7)
    y = x.copy()
    print(x == y)   # -> True
    print(x is y)   # -> False
    ```

17. `base` on a number class will return the base type the entire numbers are built upon.

    ```py
    print(R.base())                      # -> <class 'float'>
    print(V.base())                      # -> <class 'float'>
    A = cayley_dickson_algebra(20, int)
    print(A.base())                      # -> <class 'int'>
    ```

18. Hypercomplex numbers are weird, so be careful! Here two non-zero sedenions multiply to give zero because sedenions and beyond have zero divisors.

    ```py
    s1 = S.e(5) + S.e(10)
    s2 = S.e(6) + S.e(9)
    print(s1)                                    # -> (0 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0)
    print(s2)                                    # -> (0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 0)
    print(s1 * s2)                               # -> (0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0)
    print((1 / s1) * (1 / s2))                   # -> (0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0)
    # print(1/(s1 * s2)) <- zero division error
    ```

## About

I wrote this package for the novelty of it and as a math and programming exercise. The operations it can perform on hypercomplex numbers are not particularly efficient due to the recursive nature of the Cayley-Dickson construction.

I am not a mathematician, only a math hobbyist, and apologize if there are issues with the implementations or descriptions I have provided.

[1]: https://en.wikipedia.org/wiki/Hypercomplex_number
[2]: https://en.wikipedia.org/wiki/Cayley%E2%80%93Dickson_construction
[3]: https://www.mapleprimes.com/DocumentFiles/124913/419426/Figure1.JPG
[4]: https://github.com/discretegames/hypercomplex/blob/ed3c47fb909e85736b7b5a147a39981e6e87fa57/hypercomplex_names.png
[5]: https://www.mapleprimes.com/posts/124913-Visualization-Of-The-CayleyDickson
[6]: https://english.stackexchange.com/q/234607
[7]: https://docs.python.org/3/library/string.html#format-specification-mini-language
[8]: https://raw.githubusercontent.com/discretegames/hypercomplex/main/diagram/diagram.png
",14,14,1,0,construction,"[algebra, cayley-dickson, chingon, complex-numbers, construction, hypercomplex, hypercomplex-numbers, math, mathematics, octonion, pathion, python, quaternion, real-number, routon, sedenion, voudon]",23
rickypc,puppeteer-page-pool,,https://github.com/rickypc/puppeteer-page-pool,https://api.github.com/repos/puppeteer-page-pool/rickypc,A Page resource pool for Puppeteer.,"[![Version](https://img.shields.io/npm/v/puppeteer-page-pool)](https://bit.ly/2KHg9rB)
[![Downloads](https://img.shields.io/npm/dt/puppeteer-page-pool)](https://bit.ly/2KHg9rB)
[![Dependency Status](https://img.shields.io/david/rickypc/puppeteer-page-pool)](https://bit.ly/2Tjx5YT)
[![Dev Dependency Status](https://img.shields.io/david/dev/rickypc/puppeteer-page-pool)](https://bit.ly/2YBkjev)
[![Code Style](https://img.shields.io/badge/code%20style-Airbnb-red)](https://bit.ly/2JYN1gk)
[![Build](https://img.shields.io/travis/rickypc/puppeteer-page-pool)](https://bit.ly/2YSR7il)
[![Coverage](https://img.shields.io/codecov/c/github/rickypc/puppeteer-page-pool)](https://bit.ly/2TmdMhN)
[![Vulnerability](https://img.shields.io/snyk/vulnerabilities/github/rickypc/puppeteer-page-pool)](https://bit.ly/2YLUoRq)
[![Dependabot](https://api.dependabot.com/badges/status?host=github&repo=rickypc/puppeteer-page-pool)](https://bit.ly/2KIM5vs)
[![License](https://img.shields.io/npm/l/puppeteer-page-pool)](https://bit.ly/2yi7gyO)

Puppeteer Page Pool
===================

A [Page](https://bit.ly/2Z2NKFK) resource [pool](https://bit.ly/2ZNrNav) for [Puppeteer](https://bit.ly/2KqtMwd). It can be used to reuse or throttle usage of the Puppeteer Page resource.

Installation
-

```bash
$ npm install --save puppeteer-page-pool
```

API Reference
-
Provide Puppeteer Page resource pool.

**See**

- [Pool Options](https://bit.ly/2GXZbUR)
- [Puppeteer Options](https://bit.ly/2M6kVCd)

**Example**  
```js
// use PagePool directly.
const PagePool = require('puppeteer-page-pool');

// Instantiate PagePool with default options.
const pagePool = new PagePool();
// Launch the browser and proceed with pool creation.
await pagePool.launch();
// Acquire and release the page seamlessly.
await pagePool.process(async (page) => {
  // Any page actions...
  await page.goto('https://angular.io');
});
// All done.
await pagePool.destroy();
```
**Example**  
```js
// create subclass as a child of PagePool.
class MyPagePool extends PagePool {
  constructor (options) {
    super(options);
    this.mine = true;
  }

  async takeOff () {
    // Launch the browser and proceed with pool creation.
    await this.launch();
    // Acquire and release the page seamlessly.
    await this.process(async (page) => {
      // Any page actions...
      await page.goto('https://angular.io');
    });
    // All done.
    await this.destroy();
  }
}

// Instantiate MyPagePool with default options.
const myPagePool = new MyPagePool();
// Custom action.
await myPagePool.takeOff();
```
**Example**  
```js
// use different puppeter library.
const puppeteer = require('puppeteer-extra');
// See https://bit.ly/32X27uf
puppeteer.use(require('puppeteer-extra-plugin-angular')());
const customPagePool = new MyPagePool({
  puppeteer,
});
// Custom action.
await customPagePool.takeOff();
```
**Example**  
```js
// instantiate with customized options.
const optionsPagePool = new MyPagePool({
  // See factory section of https://github.com/coopernurse/node-pool#createPool
  async onPageCreated (page) {
    // Bound function that will be called after page is created.
  },
  async onPageDestroy (page) {
    // Bound function that will be called right before page is destroyed.
  },
  async onValidate (page) {
    // Bound function that will be called to validate the validity of the page.
  },
  // See opts section of https://bit.ly/2GXZbUR
  poolOptions: {
    log: true,
  },
  puppeteer,
  // See https://bit.ly/2M6kVCd
  puppeteerOptions: {
    // I want to see all the actions :)
    headless: false,
  },
});
// Custom action.
await optionsPagePool.takeOff();
```
**Example**  
```js
// parallel processes.
const parallelPagePool = new PagePool({
  // See opts section of https://bit.ly/2GXZbUR
  poolOptions: {
    max: 3,
  },
  puppeteer,
  // See https://bit.ly/2M6kVCd
  puppeteerOptions: {
    headless: false,
  },
});
// Launch the browser and proceed with pool creation.
await parallelPagePool.launch();

const promises = [
  'https://angular.io',
  'https://www.chromium.org',
  'https://santatracker.google.com',
].map((url) => {
  // Acquire and release the page seamlessly.
  return parallelPagePool.process(async (page, data) => {
    // Navigate to given Url and wait until Angular is ready
    // if it's an angular page.
    await page.navigateUntilReady(data.url);
    await page.screenshot({
      fullPage: true,
      path: `${data.url.replace(/https?:|\//g, '')}-screenshot.png`,
    });
  }, { url });
});

// Wait until it's all done.
await Promise.all(promises);

// All done.
await parallelPagePool.destroy();
```

* [puppeteer-page-pool](#module_puppeteer-page-pool)
    * [PagePool](#exp_module_puppeteer-page-pool--PagePool) ⏏
        * [new PagePool(options)](#new_module_puppeteer-page-pool--PagePool_new)
        * _instance_
            * [.destroy()](#module_puppeteer-page-pool--PagePool+destroy) ⇒ <code>null</code>
            * [.launch()](#module_puppeteer-page-pool--PagePool+launch)
            * [.process(handler, ...args)](#module_puppeteer-page-pool--PagePool+process)
        * _inner_
            * [~PoolEventHandler](#module_puppeteer-page-pool--PagePool..PoolEventHandler) : <code>function</code>
            * [~Options](#module_puppeteer-page-pool--PagePool..Options) : <code>Object</code>
            * [~ActionHandler](#module_puppeteer-page-pool--PagePool..ActionHandler) : <code>function</code>

<a name=""exp_module_puppeteer-page-pool--PagePool""></a>

### PagePool ⏏
**Kind**: Exported class  
**See**

- [Pool Options](https://bit.ly/2GXZbUR)
- [Puppeteer Options](https://bit.ly/2M6kVCd)

<a name=""new_module_puppeteer-page-pool--PagePool_new""></a>

#### new PagePool(options)
Instantiate PagePool class instance.


| Param | Type | Description |
| --- | --- | --- |
| options | <code>Options</code> | PagePool options. |

**Example**  
```js
const PagePool = require('puppeteer-page-pool');
const pagePool = new PagePool({});
```
<a name=""module_puppeteer-page-pool--PagePool+destroy""></a>

#### pagePool.destroy() ⇒ <code>null</code>
Close and release all page resources, as well as clean up after itself.

**Kind**: instance method of [<code>PagePool</code>](#exp_module_puppeteer-page-pool--PagePool)  
**Returns**: <code>null</code> - Null value.  
**Example**  
```js
let pagePool = new PagePool();
pagePool = await pagePool.destroy();
```
<a name=""module_puppeteer-page-pool--PagePool+launch""></a>

#### pagePool.launch()
Launch the browser and create all page resources.

**Kind**: instance method of [<code>PagePool</code>](#exp_module_puppeteer-page-pool--PagePool)  
**Example**  
```js
const pagePool = new PagePool();
await pagePool.launch();
```
<a name=""module_puppeteer-page-pool--PagePool+process""></a>

#### pagePool.process(handler, ...args)
Process given args using provided handler.

**Kind**: instance method of [<code>PagePool</code>](#exp_module_puppeteer-page-pool--PagePool)  

| Param | Type | Description |
| --- | --- | --- |
| handler | <code>ActionHandler</code> | Action handler. |
| ...args | <code>\*</code> | Action handler arguments. |

**Example**  
```js
const args = { key: 'value' };
const pagePool = new PagePool();
await pagePool.process((page, data) => {}, args);
```
<a name=""module_puppeteer-page-pool--PagePool..PoolEventHandler""></a>

#### PagePool~PoolEventHandler : <code>function</code>
Pool factory event handler.

**Kind**: inner typedef of [<code>PagePool</code>](#exp_module_puppeteer-page-pool--PagePool)  

| Param | Type | Description |
| --- | --- | --- |
| page | <code>Object</code> | The page resource. |

**Example**  
```js
const poolEventHandler = (page) => {
  // Do something...
};
```
<a name=""module_puppeteer-page-pool--PagePool..Options""></a>

#### PagePool~Options : <code>Object</code>
PagePool instantiation options.

**Kind**: inner typedef of [<code>PagePool</code>](#exp_module_puppeteer-page-pool--PagePool)  
**See**

- [Pool Options](https://bit.ly/2GXZbUR)
- [Puppeteer Options](https://bit.ly/2M6kVCd)


| Param | Type | Default | Description |
| --- | --- | --- | --- |
| [onPageDestroy] | <code>PoolEventHandler</code> | <code></code> | The function that would be called   before page is destroyed. |
| [onPageCreated] | <code>PoolEventHandler</code> | <code></code> | The function that would be called   after page created. |
| [onValidate] | <code>PoolEventHandler</code> | <code></code> | The function that would be called   to validate page resource validity. |
| [poolOptions] | <code>Object</code> | <code>{}</code> | The pool instantiation options. See https://bit.ly/2GXZbUR |
| [puppeteer] | <code>Object</code> | <code>require(&#x27;puppeteer&#x27;)</code> | Puppeteer library to be use. |
| [puppeteerOptions] | <code>Object</code> | <code>{}</code> | Puppeteer launch options. See https://bit.ly/2M6kVCd |

**Example**  
```js
const options = {
  async onPageDestroy (page) {},
  async onPageCreated(page) {},
  async onValidate(page) {},
  poolOptions: {},
  puppeteer,
  puppeteerOptions: {},
};
```
<a name=""module_puppeteer-page-pool--PagePool..ActionHandler""></a>

#### PagePool~ActionHandler : <code>function</code>
Action handler function that is executed with page resource from the pool.

**Kind**: inner typedef of [<code>PagePool</code>](#exp_module_puppeteer-page-pool--PagePool)  

| Param | Type | Description |
| --- | --- | --- |
| page | <code>Object</code> | The page resource. |
| ...args | <code>\*</code> | Action handler arguments. |

**Example**  
```js
const actionHandler = (page, ...args) => {
  // Do something...
};
```

Development Dependencies
-
You will need to install [Node.js](https://bit.ly/2SMCGXK) as a local development dependency. The `npm` package manager comes bundled with all recent releases of `Node.js`.

`npm install` will attempt to resolve any `npm` module dependencies that have been declared in the project’s `package.json` file, installing them into the `node_modules` folder.

```bash
$ npm install
```

Run Linter
-
To make sure we followed code style best practice, run:

```bash
$ npm run lint
```

Run Unit Tests
-
To make sure we did not break anything, let's run:

```bash
$ npm test
```

Contributing
-
If you would like to contribute code to Puppeteer Page Pool repository you can do so
through GitHub by forking the repository and sending a pull request.

If you do not agree to [Contribution Agreement](CONTRIBUTING.md), do not
contribute any code to Puppeteer Page Pool repository.

When submitting code, please make every effort to follow existing conventions
and style in order to keep the code as readable as possible. Please also include
appropriate test cases.

That's it! Thank you for your contribution!

License
-
Copyright (c) 2018 - 2020 Richard Huang.

This module is free software, licensed under: [GNU Affero General Public License (AGPL-3.0)](https://bit.ly/2yi7gyO).

Documentation and other similar content are provided under [Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License](https://bit.ly/2SMCRlS).
",12,12,2,7,construction,"[browser, chrome, concurrency, construction, crawl, functionality, headless, instance, limitation, model, page, parallel, pool, puppeteer, resource, reuse, spawn, throttle, worker]",23
allista,GroundConstruction,,https://github.com/allista/GroundConstruction,https://api.github.com/repos/GroundConstruction/allista,Plugin for the Kerbal Space Program. Allows building vessels on any planet in any place.,"# Ground Construction

## Introduction

This mod allows you to build any vessel directly on a surface of any planet from a DIY (Do It Yourself) Kit that contains all the high-tech components, needed equipment and blueprints, using only raw materials produced on-site, energy and kerbal workforce.

The major benefit of the Ground Construction is that it allows you to build big, heavy, asymmetrical contraptions that aren't meant to fly at all. Buildings, or even blocks of buildings; heavy rovers; huge rockets held by launch clamps -- all this could be built with Ground Construction anywhere on any planet.

## Features

* **Build anything**: any ship, spaceplane, or really any construction you come up with in Editor. **Even with launch clamps**!
* Build **anywhere on the surface**: the assembled ship will appear right where you've placed the Kit.
* **No complex logistics**, no special production parts required: all you need is a habitable compartment with enough space, raw materials and qualified kerbal personnel.
* **Background operation**: fly other missions while construction takes place on a far-away planet. Days, even weeks may be required to build something complex, but you don't have to babysit your workers.
* **Wireless transfers**: fill the assembled ship with resources and crew before you launch it using dedicated UI.
* **Centralized UI** for progress tracking and fast switching to construction sites.

## Requirements

* [ModuleManager](http://forum.kerbalspaceprogram.com/index.php?/topic/50533-121)
* [CommunityResourcePack](http://forum.kerbalspaceprogram.com/index.php?/topic/83007-12)
* AT_Utils (already included)

## Downloads

* [**Spacedock**](http://spacedock.info/mod/1123/Ground%20Construction) is the main download site for releases
* [GitHub](https://github.com/allista/GroundConstruction) have sources (MIT), assets (CCBY-4.0) and also releases
* CKAN is supported

## How it works

**First**, you need a simple mining operation already running near the spot where you want to build something. So you need: a Drill, an ISRU, some storage tanks for Ore, Metals and any other stuff that you want/need to supply the newly built ship with; some space to work in (hitch-hikers can, science lab or a big passenger compartment will do; we'll call it the *Workshop*) and, last but not least, kerbal engineers that will build things.

**Second**, you need to assemble the DIY Kit with required materials (good luck with finding enough Blutonium for RTG on Minmus), tools and components. This is, fortunately, the simplest thing: in Editor you have a special part, namely the **DIY Kit Container**, which allows you to ""load"" any previously created and saved ship inside of it. The container is automatically resized to fit its contents, which are much more compact and weight much less than the original ship.

**Third**, you need to attach this container to a carrier or store it in a hold of a cargo ship and fly it across the Void to the construction site.

Then, all that's left is to summon the control UI of the Workshop, deploy the DIY Kit, add it to the construction queue and order the kerbals to work (day and night, no holidays, no weekends!).

## Getting technical

### How a ship is converted into a DIY Kit

In Editor, you add the DIY Kit Container part to the carrier you're building. In its part menu select ""Select Vessel"" to open the standard vessel selection dialog. Once selected, the ship is loaded into the Kit as follows:

For each part of a ship, its *complexity* is calculated as a function of dry mass, cost and number of modules the part carries. The complexity determines the fraction of part's dry mass that could be manufactured from Metals. Most resources are stripped away. The exceptions are: Solid Fuel, Ablator, all non-tweakable resources (cannot be transfered) and resources with zero density (EC, for one). Everything that's left is packed into the Kit. Thus, a set of Part Kits is produced, which (along with the blueprint of the ship) constitutes the contents of a DIY Kit.

A DIY Kit usually weights much less than a ship that is constructed from it, but, except for the resources, costs almost the same.

### How a DIY Kit is converted back into the (new) ship

First of all, you need to land the kit somewhere on a flat surface, and, preferably, detach it from the carrier. For that DIY Kit Containers are equipped with their own simple decoupling mechanism, which is located on the top side, marked with yellow arrows.

Then you need to *Deploy* the Kit. This could be done by a kerbal in an EVA suit or remotely from a nearby Workshop. A deploying kit **detaches any part** that is still attached to it, then gradually ""grows"" (imagine that kerbals assemble working scaffolds inside the box) until it have the size of the ship that will be constructed; then it is attached to the surface, so **it cannot be moved any more**.

It doesn't matter how the Kit was oriented. As far as it lies on one of its sides, the deployment dimensions and the orientation of the launched vessel will be automatically chosen to correspond to the surface.

A deployed Kit can be processed by a *nearby* workshop with kerbals, but there are some limitations:

1. The workshop should be **at most** 300m away.
2. The kerbals that will be working on the Kit should be inside the Workshop, not in other parts of the same vessel.
3. These kerbals should be **engineers**. Scientists or pilots don't count.
4. The skill level and number of workers do count: a 5-star engineer works literally as much as five 1-star ones. And five 5-star engineers perform spontaneous miracles.
4. The distance from the Workshop to the Kit affects construction efficiency and, consequently, the time needed. So it's best to make Workshops mobile and get as close to the Kit as possible.
5. The amount of *free space per kerbal* inside the Workshop also affects efficiency: a small compartment with a place for a single kerbal may be **more** efficient than a big one packed with two dozen passenger chairs.
	* **Note 1:** the crewable parts that have Workshop capability have the ""Ground Workshop"" module (could be seen in part's extended tooltip in Editor), which shows the efficiency of that part.
	* **Note 2:** the efficiency of any generic habitat is capped at 50%. To be more efficient you need to use the provided **Mobile Workshop** part and build a rover with it.
6. If you want to benefit from background construction, you need to make sure you have enough power and Metals to work with, as resources are not generated in the background.

When the Kit is complete, you can ""wirelessly"" transfer resources and crew to it from the Workshop using dedicated UI. Then you can *Launch* the assembled ship, which will appear at the exact place where the Kit was.",12,12,6,15,construction,"[construction, ksp, mod]",23
amin-asdzdh,ExcPose2D,,https://github.com/amin-asdzdh/ExcPose2D,https://api.github.com/repos/ExcPose2D/amin-asdzdh,Excavator Pose Estimation using Synthetic Data,"

# Excavator 2D Pose Estimation



## Description

This project utilizes High Representation Network, a state-of-the-art convolutional neural network architecture to estimate the 2D keypoints defining the full body pose of excavators  from images.  

This repo is part of the publication ""A Assadzadeh et al., 'Vision-based excavator pose estimation using synthetically generated datasets with domain randomization', Automation in Construction, 2022"" that utilizes synthetically generated datasets to train a deep learning model for excavator pose estimation. 



## Demo

Demo of the model trained on a combination of synthetic and real images
![](resources/demo.gif)



## Install

```
$ git clone https://github.com/N1M49/ExcPose2D.git
$ cd ExcPose2D
$ pip install -r requirements.txt
```

## Quick Start Examples

Training
```bash
$ python train.py --dataset_dir './datasets/FDR_1k' -p './pretrained_models/pose_hrnet_w48_384x288.pth' --vis_enabled False
```

Evaluation

```bash
$ python val.py --dataset './datasets/eval/RealSet_test_debug' --weights './experiments/archived/Vis0_FDR_15k_best.pth' --pck_thr 0.05
```




##### References

https://github.com/stefanopini/simple-HRNet",10,10,1,2,construction,"[construction, excavator, monitoring, pose]",23
demoor-orrery,DMO,,https://github.com/demoor-orrery/DMO,https://api.github.com/repos/DMO/demoor-orrery,a RasperryPi driven orrery/planetarium,"# www.demoor-orrery.com/en

here all files are stored which will help to build your own planetrium

DMO.py <br>
the only file you need to run on your Pi

/documentation<br> 
please read them all before you start

/pictures<br>
all pictures used in documentation in full resolution for more details

/gerber file PCB<br>
files you need to print your own PCB board

/STL files for 3D <br>
all STL files for all components 

/webserver <br>
the adjusted JSOrrery software to run on your webserver for your DMO




",9,9,6,0,construction,"[construction, documentation, jsorrery, orrery, phyton, planetarium, planets, raspberry-pi, solar-system, stl-files, woodworking]",23
jaydattpatel,Construction-Deconstruction,,https://github.com/jaydattpatel/Construction-Deconstruction,https://api.github.com/repos/Construction-Deconstruction/jaydattpatel,Construction and Deconstruction in C++,"# Construction-Deconstruction
Construction and Deconstruction in C++
",1,1,1,0,construction,"[construction, construction-in-cplusplus, cpp, deconstruction-in-cplusplus, deconstructor]",23
rjmurphyconstruction,website,rjmurphyconstruction,https://github.com/rjmurphyconstruction/website,https://api.github.com/repos/website/rjmurphyconstruction,"Quality construction, remodeling, and home improvement in Huntington Beach, California",,1,1,2,0,construction,"[construction, website]",23
codenrx,Laravel-Under-Maintaince,codenrx,https://github.com/codenrx/Laravel-Under-Maintaince,https://api.github.com/repos/Laravel-Under-Maintaince/codenrx,This Laravel package makes it possible for you to set your website in Under Construction or Under Maintaince mode,"# Laravel Under Maintaince Package

[![issu Status](https://img.shields.io/github/issues/codenrx/Laravel-Under-Maintaince)](https://github.com/codenrx/Laravel-Under-Maintaince/issues)
[![Build Status](https://travis-ci.org/boennemann/badges.svg?branch=master)](https://github.com/codenrx/Laravel-Under-Maintaince/releases) ![folk Status](https://img.shields.io/github/forks/codenrx/Laravel-Under-Maintaince)
![contributions welcome](https://img.shields.io/badge/contributions-welcome-brightgreen.svg?style=flat)
[![Tweet](https://img.shields.io/twitter/url?url=https%3A%2F%2Fgithub.com%2Fcodenrx%2FLaravel-Under-Maintaince)](https://twitter.com/intent/tweet?text=I%20found%20a%20nice%20package%20for%20enable%20Under%20Construction%20or%20Under%20Maintaince%20mode%20.%20Please%20check%20:&url=https%3A%2F%2Fgithub.com%2Fcodenrx%2FLaravel-Under-Maintaince)

This Laravel package makes it possible for you to set your website in Under Construction or Under Maintaince  mode

# Install

```php 
composer require codenrx/maintaince
```

add these line in `providers` array of `config/app.php`

```php
codenrx\maintaince\maintainceServiceProvider::class,
```

then ,
use these command to publish package config file (maintaince.php) in `config` folder and template in `views\vendor\maintaince` folder .

```php
php artisan vendor:publish --provider=""codenrx\maintaince\maintainceServiceProvider""
```

Open `app\Http\Kernel.php` & add these line into 

```php
protected $middleware = [
     .....................
     ..................
     \codenrx\maintaince\App\Http\Middleware\maintainceWare::class,
];
```

# Usage

use these command to enable maintaince mode

```php
php artisan make:maintaince on
```

You can also use these command to enable underconstruction mode

```php
php artisan make:maintaince underconstruction
```

Disable Maintaince Mode 

```php
php artisan make:maintaince off
```

# Customization

You can customize your template also .
You need to go `/resources/views/vendor/maintaince`.

**For Some Settings , You can check config file (maintaince.php) in `config` folder**

---

**Template Credits : ❤️ [Colorlib](https://colorlib.com)**

### For more Links

- [GitHub](https://github.com/IANirab)
- [Facebook](https://web.facebook.com/istiaq.nirab.1)
- [Medium](https://medium.com/@nirab)
- [Website](https://codenrx.com)

**Enjoy!**
",1,1,1,0,construction,"[construction, construction-mode, laravel-package, laravel-underconstruction, middleware, underconstruction]",23
Mohana0209,GoJs,,https://github.com/Mohana0209/GoJs,https://api.github.com/repos/GoJs/Mohana0209,,,1,1,1,0,construction,"[construction, gojs, tree]",23
simpixelated,sd-dev-list,,https://github.com/simpixelated/sd-dev-list,https://api.github.com/repos/sd-dev-list/simpixelated,List of major development projects in San Diego,"# sd-dev-list
List of major development projects in San Diego
",1,1,2,1,construction,"[cities, construction, javascript, react, sandiego, urban-planning]",23
ottx96,ivy-lee,,https://github.com/ottx96/ivy-lee,https://api.github.com/repos/ivy-lee/ottx96,Task Tracker using the ivy-lee method,"# Ivy-Lee Task Tracker
![Java CI with Gradle](https://github.com/ottx96/ivy-lee/workflows/Java%20CI%20with%20Gradle/badge.svg)
![Create Release / upload assets](https://github.com/ottx96/ivy-lee/workflows/Create%20Release%20/%20upload%20assets/badge.svg)  
**_Track your tasks with the ivy-lee method._**  
_See [https://jamesclear.com/ivy-lee](https://jamesclear.com/ivy-lee)_

## Features

### Markdown-Syntax

Task descriptions support _**markdown**_.  
_See [https://www.markdownguide.org/basic-syntax/](https://www.markdownguide.org/basic-syntax/)_

### Google Drive Support
###### (under construction)

###  Extensions (Extension API)
Want to write your own extension(s) ?   
Visit the [**_Extension API Documentation_**](documentation/EXTENSION_API.md).

## Examples

Want styling (markdown) examples?  
Visit [**_Markdown Examples (Documentation)_**](documentation/MARKDOWN_EXAMPLES.md).

## Additions
Want some diagrams ?  
Visit [_**U**nified **M**odeling **L**anguage (Diagrams)_](documentation/UML.md).

## Preview

###### (under construction)

",1,1,1,21,construction,"[construction, extensible, gdrive, google, javafx, jfx, kotlin, productivity, task-tracker, tornadofx]",23
AkashPushkar,construction-progress-monitoring,,https://github.com/AkashPushkar/construction-progress-monitoring,https://api.github.com/repos/construction-progress-monitoring/AkashPushkar,This is website for the project done as my Master's thesis at IITM,"# Automated Construction Progress Monitoring
This is project page for Automated Construction Progress Monitoring project. Visit the website [here](https://akashpushkar.github.io/construction-progress-monitoring/)

# Acknowledgements

- [Tutorial by codelabs](https://codelabs.developers.google.com/codelabs/model-viewer/index.html?index=..%2F..index#0) 
- [obj2gltf](https://github.com/AnalyticalGraphicsInc/obj2gltf) ",1,1,1,0,construction,"[3d, 3d-models, 3d-reconstruction, automation, construction, stereo-vision]",23
block-foundation,solidity-material-passport,block-foundation,https://github.com/block-foundation/solidity-material-passport,https://api.github.com/repos/solidity-material-passport/block-foundation,Solidity Smart Contract: Material Passport,"<div align=""right"">

[![GitHub License](https://img.shields.io/github/license/block-foundation/blocktxt?style=flat-square&logo=readthedocs&logoColor=FFFFFF&label=&labelColor=%23041B26&color=%23041B26&link=LICENSE)](https://github.com/block-foundation/solidity-material-passport/blob/main/LICENSE)
[![devContainer](https://img.shields.io/badge/Container-Remote?style=flat-square&logo=visualstudiocode&logoColor=%23FFFFFF&label=Remote&labelColor=%23041B26&color=%23041B26)](https://vscode.dev/redirect?url=vscode://ms-vscode-remote.remote-containers/cloneInVolume?url=https://github.com/block-foundation/solidity-material-passport)

</div>

---

<div>
    <img align=""right"" src=""https://raw.githubusercontent.com/block-foundation/brand/master/src/logo/logo_gray.png"" width=""96"" alt=""Block Foundation Logo"">
    <h1 align=""left"">Materials Passport</h1>
    <h3 align=""left"">Block Foundation Smart Contract Series [Solidity]</h3>
</div>

---

<img align=""right"" width=""75%"" src=""https://raw.githubusercontent.com/block-foundation/brand/master/src/image/repository_cover/block_foundation-structure-03-accent.jpg""  alt=""Block Foundation Brand"">

### Contents

- [Introduction](#introduction)
- [Colophon](#colophon)

<br clear=""both""/>

---

<div align=""right"">

[![Report a Bug](https://img.shields.io/badge/Report%20a%20Bug-GitHub?style=flat-square&&logoColor=%23FFFFFF&color=%23E1E4E5)](https://github.com/block-foundation/solidity-material-passport/issues/new?assignees=&labels=Needs%3A+Triage+%3Amag%3A%2Ctype%3Abug-suspected&projects=&template=bug_report.yml)
[![Request a Feature](https://img.shields.io/badge/Request%20a%20Feature-GitHub?style=flat-square&&logoColor=%23FFFFFF&color=%23E1E4E5)](https://github.com/block-foundation/solidity-material-passport/issues/new?assignees=&labels=Needs%3A+Triage+%3Amag%3A%2Ctype%3Abug-suspected&projects=&template=feature_request.yml)
[![Ask a Question](https://img.shields.io/badge/Ask%20a%20Question-GitHub?style=flat-square&&logoColor=%23FFFFFF&color=%23E1E4E5)](https://github.com/block-foundation/solidity-material-passport/issues/new?assignees=&labels=Needs%3A+Triage+%3Amag%3A%2Ctype%3Abug-suspected&projects=&template=question.yml)
[![Make a Suggestion](https://img.shields.io/badge/Make%20a%20Suggestion-GitHub?style=flat-square&&logoColor=%23FFFFFF&color=%23E1E4E5)](https://github.com/block-foundation/solidity-material-passport/issues/new?assignees=&labels=Needs%3A+Triage+%3Amag%3A%2Ctype%3Abug-suspected&projects=&template=suggestion.yml)
[![Start a Discussion](https://img.shields.io/badge/Start%20a%20Discussion-GitHub?style=flat-square&&logoColor=%23FFFFFF&color=%23E1E4E5)](https://github.com/block-foundation/solidity-material-passport/issues/new?assignees=&labels=Needs%3A+Triage+%3Amag%3A%2Ctype%3Abug-suspected&projects=&template=discussion.yml)

</div>

**Welcome to the Sustainable Materials Passport Project, a pioneering initiative leveraging blockchain technology to promote and streamline sustainable material management practices. Our innovative project is centered around creating a decentralized and transparent system to track the lifecycle of materials, from their origin, through their use, and ultimately to their recycling or disposal.**

## Introduction

The Sustainable Materials Passport Project presents a forward-thinking solution for numerous stakeholders, including manufacturers, consumers, recyclers, and environmental advocates. Our goal is to enhance accountability, ensure ethical sourcing, and encourage recycling through our material tracking system.

At the core of our project, we utilize Solidity smart contracts to manage and maintain the Material Passport. Each passport contains detailed information about a material, including its origin, manufacturer, recyclability, type, and lifecycle stages.

The robust functionality of our system provides capabilities such as registering a new material, transferring ownership of a material, updating the lifecycle of a material, recycling a material, and even a reward system to incentivize recycling.

The Sustainable Materials Passport Project marks a significant step towards bridging the gap between blockchain technology and sustainable resource management. Through this initiative, we aim to foster a culture of sustainability and circular economy, making the world a better place for future generations.

## Features

- **Transparency**: Each material is registered on the blockchain, ensuring its history and properties are accessible and immutable.
- **Lifecycle Management**: Track and update the lifecycle of each material.
- **Recycling Incentives**: A reward system to incentivize recycling of materials.
- **Ownership Management**: Transfer ownership of materials and maintain a clear record of each transaction.

## Getting Started

To get started with the Sustainable Materials Passport Project:

1. Clone the repository:

   ``` sh
   git clone https://github.com/your_username/SustainableMaterialsPassport.git
   ```

2. Navigate into the project directory:

   ``` sh
   cd SustainableMaterialsPassport
   ```

## Dependencies

- **Solidity**: ^0.8.4
- **Truffle**: Latest version
- **Ganache**: For a personal blockchain for Ethereum development that runs on your desktop.

## Usage

1. Install dependencies:

   ``` sh
   npm install
   ```

2. Start Ganache and make sure it's running.

3. Compile and migrate the contracts:

   ``` sh
   truffle compile
   truffle migrate
   ```

4. Start the local development server:

   ``` sh
   npm start
   ```

## Quick Start

> Install

``` sh
npm i
```

> Compile

``` sh
npm run compile
```

## Contract

## Development Resources

### Other Repositories

#### Block Foundation Smart Contract Series

|                                   | `Solidity`  | `Teal`      |
| --------------------------------- | ----------- | ----------- |
| **Template**                      | [**>>>**](https://github.com/block-foundation/solidity-template) | [**>>>**](https://github.com/block-foundation/teal-template) |
| **Architectural Design**          | [**>>>**](https://github.com/block-foundation/solidity-architectural-design) | [**>>>**](https://github.com/block-foundation/teal-architectural-design) |
| **Architecture Competition**      | [**>>>**](https://github.com/block-foundation/solidity-architecture-competition) | [**>>>**](https://github.com/block-foundation/teal-architecture-competition) |
| **Housing Cooporative**           | [**>>>**](https://github.com/block-foundation/solidity-housing-cooperative) | [**>>>**](https://github.com/block-foundation/teal-housing-cooperative) |
| **Land Registry**                 | [**>>>**](https://github.com/block-foundation/solidity-land-registry) | [**>>>**](https://github.com/block-foundation/teal-land-registry) |
| **Real-Estate Crowdfunding**      | [**>>>**](https://github.com/block-foundation/solidity-real-estate-crowdfunding) | [**>>>**](https://github.com/block-foundation/teal-real-estate-crowdfunding) |
| **Rent-to-Own**                   | [**>>>**](https://github.com/block-foundation/solidity-rent-to-own) | [**>>>**](https://github.com/block-foundation/teal-rent-to-own) |
| **Self-Owning Building**          | [**>>>**](https://github.com/block-foundation/solidity-self-owning-building) | [**>>>**](https://github.com/block-foundation/teal-self-owning-building) |
| **Smart Home**                    | [**>>>**](https://github.com/block-foundation/solidity-smart-home) | [**>>>**](https://github.com/block-foundation/teal-smart-home) |

---

## Colophon

### Authors

This is an open-source project by the **[Block Foundation](https://www.blockfoundation.io ""Block Foundation website"")**.

The Block Foundation mission is enabling architects to take back initiative and contribute in solving the mismatch in housing through blockchain technology. Therefore the Block Foundation seeks to unschackle the traditional constraints and construct middle ground between rent and the rigidity of traditional mortgages.

website: [www.blockfoundation.io](https://www.blockfoundation.io ""Block Foundation website"")

### Development Resources

#### Contributing

We'd love for you to contribute and to make this project even better than it is today!
Please refer to the [contribution guidelines](.github/CONTRIBUTING.md) for information.

### Legal Information

#### Copyright

Copyright &copy; 2023 [Stichting Block Foundation](https://www.blockfoundation.io/ ""Block Foundation website""). All Rights Reserved.

#### License

Except as otherwise noted, the content in this repository is licensed under the
[Creative Commons Attribution 4.0 International (CC BY 4.0) License](https://creativecommons.org/licenses/by/4.0/), and
code samples are licensed under the [Apache 2.0 License](http://www.apache.org/licenses/LICENSE-2.0).

Also see [LICENSE](https://github.com/block-foundation/community/blob/master/src/LICENSE) and [LICENSE-CODE](https://github.com/block-foundation/community/blob/master/src/LICENSE-CODE).

#### Disclaimer

**THIS SOFTWARE IS PROVIDED AS IS WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESS OR IMPLIED, INCLUDING ANY IMPLIED WARRANTIES OF FITNESS FOR A PARTICULAR PURPOSE, MERCHANTABILITY, OR NON-INFRINGEMENT.**
",1,1,2,0,construction,"[architecture, block-foundation, blockchain, blockfoundation, construction, design, eth, ethereum, material-passport, materials, smart-contracts, sol, solidity]",23
Anzo52,concalcjava,,https://github.com/Anzo52/concalcjava,https://api.github.com/repos/concalcjava/Anzo52,Concrete volume calculator,"# Java Concrete Calculator
---
Java program for calculating volume of concrete needed to for curb/gutter, sidewalk/patio, and steps.
---
## Download, compile, and run:
### Note: you'll need the JDK to compile and run this. https://www.oracle.com/java/technologies/downloads/#jdk18
`git clone https://github.com/Anzo52/concalcjava && cd main`

`javac ConcCalc.java Main.java`

`java Main`
",1,1,2,6,construction,"[calculator, cement, concrete, concrete-calculator, construction, curb-and-gutter, residential, volume-calculator]",23
maoc06,BoConcept-API,,https://github.com/maoc06/BoConcept-API,https://api.github.com/repos/BoConcept-API/maoc06,":construction: Construction of a RESTful API with Node.js/Express, from the Danish brand BoConcept :chair:. :heavy_exclamation_mark: This project is for educational purposes.","# BoConcept-API :chair:

For the purpose of practicing Node.js perform this
RESTful API with the help of express. The business
case is the Danish furniture retail chain, [BoConcept](https://www.boconcept.com/).

:warning:
This project is only for educational purposes. It is
not intended to use the BoConcept brand for any other purpose.

## Architecture

The architecture used for this project is a
[Clean Architecture](https://blog.cleancoder.com/uncle-bob/2012/08/13/the-clean-architecture.html)
with the purpose of avoiding to the maximum the coupling
of the business logic with the framework and the databases.

![alt text](https://blog.cleancoder.com/uncle-bob/images/2012-08-13-the-clean-architecture/CleanArchitecture.jpg ""Clean Architecture - Uncle Bob"")

## Endpoints

To review the documentation of routes and endpoints, execute the following commands:

`npm run swagger-autogen`

> :bulb: This will generate a json configuration file auto generated with the help of [Swagger](https://swagger.io/).

Then run the server with

`npm start`

and go to <http://localhost:3000/doc> to see the documentation.
",1,1,2,2,construction,"[api, api-rest, architecture, backend, boconcept-api, boconcept-brand, chair, construction, express, express-js, node, node-js, open-source, restful-api]",23
mehrdadarashpour,Construction_Zone_Monitoring,,https://github.com/mehrdadarashpour/Construction_Zone_Monitoring,https://api.github.com/repos/Construction_Zone_Monitoring/mehrdadarashpour,Identify workers in exclusion zones,"
# Detecting workers in photos of construction exclusion zones
",1,1,0,0,construction,"[ai, artificial-intelligence, building, civil-engineering, computer-vision, construction]",23
faraimazh,faraimazhandu.github.io,,https://github.com/faraimazh/faraimazhandu.github.io,https://api.github.com/repos/faraimazhandu.github.io/faraimazh,Quantum Physicist | Engineer + Technologist | Mentor,"## About me 

<img src=""https://github.com/faraimazh/faraimazhandu.github.io/blob/main/images/CUboulder.jpeg"">

I am the Founder President of OneQuantum Africa, [OneQuantum](https://onequantum.org/) and Co-founder of [Bayete Quantum Technologies](http://bayetequantum.tech/), the leading enabler of quantum tech in Africa through platforms, insights, training, and matchmaking.

You can learn more about our vision for Africa here [BQT](https://www.linkedin.com/company/bayete-quantum-technologies/about/?viewAsMember=true)

I am also a physics PhD student at the [Colorado School of Mines](https://quantumcreep.mines.edu/people/) - a background that has unlocked a great career for me at the nexus of bleeding-edge research and impact, one that has taken me around the world, and to high profile roles across academia, technology, and the built environment, I am also a co-founder and non-executive director at [Frontline Contracting](http://frontlinecontracting.co.za/) where I advise on strategic innovation and digital transformation in the construction industry using IoT, AI, Machine Learning, and Quantum Computing. 

<img src=""https://github.com/faraimazh/faraimazhandu.github.io/blob/main/images/QTStartupsMap.png"">

## Call-To-Action
Africa can now tap into a rich seam of advanced technology solutions that are being explored globally, opening up fresh ways to measure, process and transmit information. The continent cannot simply cannot afford to be left out of the quantum revolution which will sit at the core of building new enterprises, future careers, and workforces as well as driving accessible innovation.

I am inspired to encourage African entrepreneurs, investors, students, and officials to contribute in key roles as the sector steadily progresses toward commercial viability. My passion is to adapt and apply emerging technologies to solve unique problems bedeviling the continent.

<img src=""https://github.com/faraimazh/faraimazhandu.github.io/blob/main/images/2021-03-17%2019_22_12-Post%20_%20Feed%20_%20LinkedIn%20and%208%20more%20pages%20-%20Personal%20-%20Microsoft%E2%80%8B%20Edge.png"">

## Contributions
As a data geek and [Qiskit Advocate](https://qiskit.org/advocates) (achieved through testing and certification), I have been invited to participate in the inaugural Quantum Computing Summer School (sponsored by WitsQ and IBM) and [Qiskit Camp Africa Hackathon](https://qiskit.org/events/africa/) (where I adapted my MSc project on NV centres and came up as first runner-up) in 2019. I have published in refereed journals, featured on panels with global thought leaders in technology (was recently on the panel on Building a Community with Open Source at the [IBM Quantum Summit 2020](https://ibm.6connex.com/event/quantumsummit/login) and judging panel for [Qiskit Hackathon Global 2020](https://qiskithackathon.global.bemyapp.com/#/event), and presented diverse workshops and lectures, as well as authored articles covering; IoT [read my publications here](https://www.iotforall.com/author/faraimazhandu) and quantum computing [read some of my contributions here](https://medium.com/@faraimazhandu). 

<img src=""https://github.com/faraimazh/faraimazhandu.github.io/blob/main/images/Physicsworld.png"">

Read more on [Quantum 2.0 technology](https://prod-physicsworld-iop.content.pugpig.com/blog/2021/11/24/ask-me-anything-farai-mazhandu/pugpig_index.html) here.

I devote much of my free time to philanthropy - contributing and volunteering to the community and am currently building an African quantum tech community through the OneQuantum Africa chapter and serve in many organizations in Africa and beyond.

My story is a testament to the power of being a global citizen and true thought leader – working every day to make a positive impact while also helping organizations understand and implement disruptive technologies that are fast reshaping the world around us.

## Africa quantum tech community courtesy of WitsQ
<img src=""https://github.com/faraimazh/faraimazhandu.github.io/blob/main/QSS%20Wits%202019.png"">

## We take a lot of groupfies and host memorable cocktail parties at our meetings
<img src=""https://github.com/faraimazh/faraimazhandu.github.io/blob/main/images/OQA%20Summit%20Groupfie%2021920.jpeg"">

## Why we need a community in quantum
<img src=""https://github.com/faraimazh/faraimazhandu.github.io/blob/main/images/OneQuantum%20Africa%20_%20Why%20Quantum%20in%20Africa.png"">

## Research Publications
- [Experimental Simulation of Hybrid Quantum Systems and Entanglement on a Quantum Computer](https://arxiv.org/pdf/1911.00897.pdf)
- [Superconducting Diamond as a platform for quantum technologies](https://www.researchgate.net/publication/340894777_Superconducting_Diamond_as_a_platform_for_quantum_technologies)

## Events
- [OneQuantum Africa Networking Events](https://www.runtheworld.today/app/invitation/38002)
- [S6 E2 Entangled Discussions Entangling the Old and the New](https://youtu.be/SrKtxHXEAag)
- [The Future of Quantum Technology in Africa](https://youtu.be/3vbV3Y0f6Pk)
- [Qiskit Seminar Series: Quantum Tech Communities](https://youtu.be/eDmIbJ_7i3c)
- [Careers in Quantum 2021: EDI Panel](https://youtu.be/WPDPO1SS6Nk)
- [Alexandria Quantum Computing Hypatia Series. Quantum Tech News | 29 April @ 9 pm SAST](https://www.eventbrite.co.uk/e/alexandria-quantum-computing-hypatia-series-registration-152056305503?fbclid=IwAR26ELJrGCiMMqiPAhp9EWzYU1FC6x5-nYwQRcGJnFvu3xQHBYWd_ZAhaUA)
- [Quantum in Africa Summit | OneQuantum Africa May 12-13](https://www.runtheworld.today/app/invitation/21920/)
- [IQT New York May 17-20](https://iqtevent.com/speakers/#)

## Follow me, subscribe and let's connect
- [YouTube](https://youtube.com/playlist?list=PLdNag-7k6pt3UXmmrCHMHlBnTRI9duaGE)
- [OneQuantum startups](https://onequantum.substack.com/)
- [OneQuantum Africa](https://onequantumafrica.substack.com/)
- [Facebook](https://www.facebook.com/farai.mazhandu/)
- [LinkedIn](https://www.linkedin.com/in/farai-mazhandu-83b5271b/)
- [Twitter](https://twitter.com/FaraiMazhandu)
- [Instagram](https://www.instagram.com/accredited_patriot/?hl=en)
- [Medium](https://medium.com/@faraimazhandu)
- [IoT](https://www.iotforall.com/author/faraimazhandu)
",1,1,1,0,construction,"[construction, iot, quantum-chemistry, quantum-computing, quantum-machine-learning, quantum-physics, technology]",23
ubeevn,Factory-Industrial-Template,ubeevn,https://github.com/ubeevn/Factory-Industrial-Template,https://api.github.com/repos/Factory-Industrial-Template/ubeevn,,,1,1,2,0,construction,"[bootstrap3, comapny, construction, html, industrial, templates-point]",23
hustle2live,ARGO-E-landing-page,,https://github.com/hustle2live/ARGO-E-landing-page,https://api.github.com/repos/ARGO-E-landing-page/hustle2live,,# ARGO-E-landing-page,1,1,1,0,construction,"[building, construction, css, gh-pages, gulp, html, hvac, javascript, landing-page]",23
rhcad,ggb-plot,,https://github.com/rhcad/ggb-plot,https://api.github.com/repos/ggb-plot/rhcad,Automated geometrical construction and highlighting based on GeoGebra.,"# ggb-plot

Automated geometrical construction and highlighting experiments based on GeoGebra [Math Apps Bundle][Math_Apps] and JavaScript.

## Features

- GeoGebra automated highlight functions used for geometric questions demonstration synchronously.
- GeoGebra automated construction from the text of geometric questions.
- Built-in automatic unit testings.

## Install

- Install NodeJS and Google Chrome.

If used in China, install the NPM source:

```
npm config set registry ""https://registry.npm.taobao.org""
```

- Install the components required for this project:

```
sudo npm i -g grunt-cli
npm i
```

- Copy `webSimple` folder from GeoGebra [Math Apps Bundle][Math_Apps] to `data` of this project.

## Build

- Run `grunt serve` to develop with Google Chrome.
- Run `grunt build` to release on Web site.

## Test

- Run `npm test` for unit testing.

## License

This project is licensed under the GNU General Public License version 3.0 (GPLv3).

[Math_Apps]: https://wiki.geogebra.org/en/Reference:Math_Apps_Embedding
",1,1,2,1,construction,"[construction, geogebra]",23
Regan-Koopmans,compiler-project-lexer-and-parser,,https://github.com/Regan-Koopmans/compiler-project-lexer-and-parser,https://api.github.com/repos/compiler-project-lexer-and-parser/Regan-Koopmans,Repository for the compiler construction practical project.,"# COS 341 - Lexer

Repository for the compiler construction practical project.

## Proposed classes

### Main

In this file we will deal with details such as reading the input file, invoking
the Lexer class, and possibly writing the serialized linked list file.

### Lexer

The lexer will read a stream of text and identify tokens. The lexer will further
construct a linked list data structure for the tokens and pass this back to the
class that invoked the lexer.
",1,1,0,0,construction,"[compiler, construction, java, learning, lexer, parser, tokenizer]",23
ismorozs,roxp,,https://github.com/ismorozs/roxp,https://api.github.com/repos/roxp/ismorozs,"Easy to use library for creating regular expressions of any complexity through combining built-in data types such as Strings, Objects and Arrays, as well as Roxp objects themselves.","# Roxp
Easy to use library for creating regular expressions of any complexity through combining built-in data types such as ```Strings```, ```Objects``` and ```Arrays```, as well as ```Roxp``` objects themselves.  
Hence the name ```Roxp``` coming from **R**egular **O**bjective e**XP**ression.

## Why?
Because the longer the regular expressions is in its classical primordial form the harder it is to read, to understand, and to maintain.
For example take a look at this regular expression below.
```js
/(\w{4,4})-(\d{3,3})-(\w{4,4}-\(\d{7,9}\+\d{2,4}\))-\(\{\3\}\2\|\1\)/
```
WHAT?! HOW?! WHY?!  
Someone must have had resembling RegExp in their projects, and surely someone must have had even worse.
With ```Roxp``` you could create regular expression such as above writing code bellow
```js
$ = Roxp.specialCharacters();
const fourLetters = Roxp($.letter, { times: 4 });
const threeDigits = Roxp($.digit, { times: 3 });

const myIncredibleRegExp = Roxp(
  fourLetters, { group: 'firstLettersGroup' },
  '-' ,
  threeDigits, { group: 'digitsGroup' },
  '-',
  [[
    fourLetters,
    '-',
    $['('],
      $.digit, { inRange: [7,9] }, $['+'], $.digit, { inRange: [2,4] },
    $[')'],
  ]], { group: 'foobar' },
  '-',
  $['('],
    $['{'], [{ repeatMatch: 'foobar' }], $[""}""],
    [{ repeatMatch: 'digitsGroup' }],
    $['|'],
    [{ repeatMatch: 'firstLettersGroup' }],
  $[')']
)
// => Roxp { regExp: /(\w{4,4})-(\d{3,3})-(\w{4,4}-\(\d{7,9}\+\d{2,4}\))-\(\{\3\}\2\|\1\)/g }
```
and then through methods on created ```Roxp``` instance fetch named capturing groups from string like this 
```js
const string = ""aaaa-123-bbbb-(1234567+123)-({bbbb-(1234567+123)}123|aaaa)""
```
(someone must have had to match string like this in their projects) through
```js
const result = myIncredibleRegExp.search(string)
console.log(result.digitsGroup)
// => ""123""
console.log(result.firstLettersGroup)
// => ""aaaa""
console.log(result.foobar)
// => ""bbbb-(1234567+123)""
```
Surely, constructing regular expressions with ```Roxp``` takes up more lines, but at the same time they are easier to write, read and understand. You can format your expression with as many whitespaces as you want. As well as forget about escaping special characters or figuring out where what group and backreference is. With ```Roxp``` you can give capturing groups names, to refer to those groups later for backreferencing or retriving those captured groups in ```Roxp``` instance methods.

## How to install
Install library through
```sh
npm install roxp
```
then include with
```js
var Roxp = require('roxp')
```
or
```js
import Func from 'roxp'
```
in your script file.

```roxp.js``` and ```roxp.min.js``` also can be included on the client through ```script``` tag, should you choose to use it without any bundler. 
## How to use
```Roxp``` function takes unlimited number of arguments, most of which could be considered sub-RegExp in themselves, and combine them together generating one more complex RegExp.
Still arguments must comply some rules, so that the function would understand what do you want from it.
Arguments passing to the function can be:

| Appearance | Name | Explanation | Example argument(s) | Produced RegExp |
|------------|------|-------------|---------------------|-----------------|
| `'string'`| String | simple string| `'string'`|  `/string/` |
| `[ ]`| Character set| simple character set| `['sym','blols', '0-9']` | `/[symbols0-9]/`|
| `[[ ]]` | Grouping | everything inside double brackets will be considered as a logical unit when applying options on the right in the arguments list| `[[ 'string', [0-9] ]], { onceOrMore: true }` |  `/(?:string[0-9])+/` |
| `[{ }]` | Backreference | backreference to the group defined earlier | `'\\w', { group: 'a' }, [{ repeatMatch: 'a' }]` | `/(\w)\1/` |
| `{ }` | Options| options from the object will be applied to the argument on the left in the arguments list | `'x', { times: 5 }` | `/x{5,5}/` |

Passing ```Roxp``` instance into ```Roxp``` function  will copy RegExp of a given instance into a new RegExp produced by function.
Notice: ```Roxp``` produces RegExp from strings (of type `String`) without any transformation of them.  
So the following produced ```Roxp``` instances are identical
```js
const objectiveApproach = Roxp(
    '\\d', { times: 3 },
    '-',
    '\\d', { times: 2 },
    '-',
    '\\d', { times: 2 }
);
const straightStringApproach = Roxp('\\d{3,3}-\\d{2,2}-\\d{2,2}');

console.log(objectiveApproach.regExp.source === straightStringApproach.regExp.source);
// => true
```
(There's a paragraph later in the readme about stopping writing special characters such as ```\\w``` and backslashes by hand, but some examples still use straight-backslashed approaches)

### Options
You modify argument-sub-RegExps in different ways by following them with objects with options
Full list of options is shown bellow.
#### Quantifiers
You add them to explain how many repeating symbols you want to match

| Option appearance | Example arguments | Produced RegExp |
|-------------------|-------------------|-----------------|
| { '>' } | `'x', { '>': 2  }` | `/x{3,}/` |
| { '<' } | `'x', { '<': 4  }` | `/x{,3}/` |
| { '>=' } | `'x', { '>=': 2  }` | `/x{2,}/` |
| { '<=' } | `'x', { '<=': 2  }` | `/x{,2}/` |
| { '=' } | `'x', { '=': 2  }` | `/x{2,2}/` |
| { times } | `'x', { times: 3  }` | `/x{3,3}/` |
| { inRange } | `'x', { inRange: [3,7]  }` | `/x{3,7}/` |
| { onceOrNever } | `'x', { onceOrNever: true  }` | `/x?/` |
| { onceOrMore } | `'x', { onceOrMore: true  }` | `/x+/` |
| { zeroOrMore } | `'x', { zeroOrMore: true  }` | `/x*/` |

Any quantifier additionally  can be followed by `lazy` option, making this quantifier lazy.  

Examples:

| Option appearance | Example arguments | Produced RegExp |
|-------------------|-------------------|-----------------|
| { onceOrMore, lazy } | `'x', { onceOrMore: true, lazy: true }` | `/x+?/` |
| { zeroOrMore, lazy } | `'x', { zeroOrMore: true, lazy: true  }` | `/x*?/` |

If it is a grouping (```[[ ]]```) you want to apply quantifier options to, and you didn't specified a group name of this given grouping, grouping will be enclosed in non-capturing group (```(?:)```).

| Option appearance | Example arguments | Produced RegExp |
|-------------------|-------------------|-----------------|
| { onceOrMore } | `[[ '\\w', [1,2,3], '\\w' ]], { onceOrMore: true }` | `/(?:\w[123]\w)+/` |

#### Alternation
If you want to capture either of strings in your RegExp, you put alternation symbol (```|```) between those strings.  
Or with ```Roxp``` you add option ```{ eitherOne }``` to the right of the grouping.

| Option appearance | Example arguments | Produced RegExp |
|-------------------|-------------------|-----------------|
| { eitherOne } | `[[ 'aaa', 'bbb', 'ccc' ]], { eitherOne: true }` | `/aaa\|bbb\|ccc/` |

#### Negating
Use negate option if you don't want your RegExp to match against particular symbols

| Option appearance | Example arguments | Produced RegExp |
|-------------------|-------------------|-----------------|
| { mustNotMatch } | `['abc'], { mustNotMatch: true  }` | `/[^abc]/` |
|| `'x', { mustNotMatch: true }` | `/(?!x)/` |
|| `[[ 'x', 'y', { times: 3 }, 'z']], { mustNotMatch: true }` | `/(?!xy{3,3}z)/` |

#### Capturing groups naming
Give a capturing group a name to refer to it later in methods or for backreferencing

| Option appearance | Example arguments | Produced Roxp object |
|-------------------|-------------------|----------------------|
| { group } | `'string', { group: 'string'  }` | `Roxp { regExp: /(string)/, groups: ['string'] }` |
|| `[['x', 'y', 'z']], { group: 'xyz'  }` | `Roxp { regExp: /(xyz)/, groups: ['xyz'] }` |

```prefixGroups``` option is used to resolve group naming conflicts between passed ```Roxp``` instances that may have the same group names. |

Example:
```js
const childRoxp = Roxp('qwerty', { group: 'childGroup' });
Roxp(
  childRoxp, { prefixGroups: 'first' },
  childRoxp, { prefixGroups: 'second' }
);
// => Roxp { regExp: /(qwerty)(qwerty)/, groups: ['firstChildGroup', 'secondChildGroup'] }
```
To create capturing group you don't acutally have to give it a meaningful name. 
```{ group: true }``` is legitimate option, but this way you probably won't be able to reference such a group by name in future.

| Example arguments | Produced Roxp object |
|-------------------|-----------------|
| `'nameless', { group: 'true'  }` | `Roxp { regExp: /(nameless)/, groups: [true] }` |

#### Backreferencing
Put backreferences (backslash + group number) in places where you expect exact symbolic matches to already matched groups at run-time.
Example of backreference:
```js
const regExp = /(\w{3})\1/;
regExp.test('aaaaaa');
// => true
regExp.test('aaabbb');
// => false
```
To make use of backreferencing with ```Roxp```, you pass argument of such format ```[{ repeatMatch: definedGroupName }]``` to ```Roxp``` function. 
Example:
```js
const roxp = Roxp(
    [[ '\\w', { times: 3 } ]],  { group: 'letters' },
    [{ repeatMatch: 'letters' }]
);
roxp.test('aaaaaa');
// => true
```
---
### Instance Methods
Every ```Roxp``` instance holds within a group of methods which mostly just delegate execution to underlying RegExp or String objects.  
But there're exceptions.
#### Roxp#test (String stringToTest)
#### Roxp#check (String stringToTest)
Two methods with the same behavior. Checks if ```stringToTest``` argument is matched against underlying RegExp and returns ```true``` or ```false```, accordingly.
Equivalent to ```RegExp#test```
```js
Roxp('string').test('string');
// => true
```
#### Roxp#find (String stringToFindGroups)
#### Roxp#exec (String stringToFindGroups)
#### Roxp#search (String stringToFindGroups)
Three methods with the same behavior. Checks if ```stringToFindGroups``` is matched and returns an array-object of matched strings, groups, index, etc. Behaves in the same way as ```RegExp#exec```, but in addition adds named capturing groups in the result set.
```js
Roxp(
    [[ '\\w', { times: 3 } ]], { group: 'letters' },
    '-',
    [[ '\\d', { times: 3 } ]], { group: 'digits' }
).search('zxc-123');
// => [ letters: 'zxc', digits: '123', ... ]
```
#### Roxp#replace (String stringToReplace, Function replaceFunction)
Finds and replaces matches in the string. Resembles behavior of ```String#replace```.  
```replaceFunction``` will perform replacing on matched snippets in ```stringToReplace``` string.  
```replaceFunction``` takes in one object, which holds all found matches on the ```stringToReplace```, as well as index, etc.
```js
Roxp(
    [[ '\\w', { times: 3 } ]], { group: 'letters' },
    '-',
    [[ '\\d', { times: 3 } ]], { group: 'digits' }
).replace('zxc-123', (matches) => matches.digits + '-' + matches.letters);
// => '123-zxc'
```
### Special characters
For simplicity purposes ```Roxp``` can prodivde an object with all (or at least most) special regular expression characters as well as escaped variants of special character to put them in ```Roxp``` constructor without backslashes.
To get hold of that object, you call ```Roxp#specialCharacters```
```js
const $ = Roxp.specialCharacters();
// => { letter: '\\w', digit: '\\d', space: '\\s', ... }
```
and then you use this object values for easier creation of RegExp that requiere use of special characters, forgetting about counting backslashes before each of them at the same time.

| Special character key | Produced RegExp | In plain string |
|-----------------------|-----------------|-----------------|
| `$.letter` |  `/\w/` | `\\w`|
| `$.digit` |  `/\d/` | `\\d`
| `$.space` |  `/\s/` | `\\s`
| `$.wordBoundary` |  `/\b/` | `\\b`
| `$.bound` |  `/\b/` | `\\b`
| `$.notLetter` |  `/\W/` | `\\W`
| `$.notDigit` |  `/\D/` | `\\D`
| `$.notSpace` |  `/\S/` | `\\S`
| `$.notWordBoundary` |  `/\B/` | `\\B`
| `$.notBound` | `/\B/` | `\\B`
| `$.tab` | `/\t/` | `\\t`
|    `$.dot` | `/\./` | `\\\.`
|    `$['.']` | `/\./` | `\\\.`
| `$['\\']` | `/\\/` | `\\\\`
|    `$['$']` | `/\$/` | `\\\$`
|    `$['^']` | `/\^/` | `\\\^`
|    `$['\|']` | `/\\|/` | `\\\|`
|    `$['?']` | `/\?/` | `\\\?`
|    `$['*']` | `/\*/` | `\\\*`
|    `$['+']` | `/\+/` | `\\\+`
|    `$['(']` | `/\(/` | `\\\(`
|    `$[')']` | `/\)/` | `\\\)`
|    `$['{']` | `/\{/` | `\\\{`
|    `$['}']` | `/\}/` | `\\\}`
|    `$['[']` | `/\[/` | `\\\[`
|    `$[']']` | `/\]/` | `\\\]`
| `$.newLine` | `/\n/` | `\\n`
| `$.lf` | `/\\n/` | `\\n`
| `$.cr` | `/\\r/` | `\\r`
| `$.feed` | `/\f/`| `\\f`
|`$.start` |  `/^/` | `^`
|`$.end` |  `/$/` | `$`
|`$.anything` |  `/./` | `.`
|`$.any` |  `/./` | `.`

### Flags
Setting flags can be done individually for every ```Roxp``` instance through ```Roxp.withFlags()``` method, which will return constructor ```Roxp``` function saving in memory that this particular instance should be with given flags.  
Example:

```js
Roxp.withFlags('gi')('globalCaseInsensitve');
// => Roxp { regExp: /globalCaseInsensitve/gi }
```

You can set flags globally as well for every created ```Roxp``` instance after settings given flags, using method ```Roxp.setFlagsGlobally()```  

```setFlagsGlobally()``` takes in one object argument of format ```{ flagName: boolean, ... }```, and then adds ```true``` flags and removes ```false``` flags to/from set of global ```Roxp``` flags.
Example:
```js
const a = Roxp('a');
// => Roxp { regExp: /a/ }

Roxp.setFlagsGlobally({ g: true, i: true });
const b = Roxp('b');
// => Roxp { regExp: /b/gi }
// all created instances will have 'g' and 'i' flags from now

Roxp.setFlagsGlobally({ i: false });
const c = Roxp('c');
// => Roxp { regExp: /c/g }
// 'i' flag was removed, only 'g' is left
```

---
### Issues and bug tracking 
If for some reason ```Roxp``` didn't create RegExp expected by you. Author would be glad to learn about and fix such instances.
",1,1,1,0,construction,"[composition, construction, creation, expressions, objects, regexp, regular]",23
najatulislam,Architects,,https://github.com/najatulislam/Architects,https://api.github.com/repos/Architects/najatulislam, https://najatulislam.github.io/Architects/,"# Architects
",1,1,1,0,construction,"[architects, businesspage, businessweb, civil-engineering, civil-service, constractionsite, construction, engineering, responsive, responsive-design, responsive-web-design]",23
HactarCE,Colorized-CA,,https://github.com/HactarCE/Colorized-CA,https://api.github.com/repos/Colorized-CA/HactarCE,A photonic 2D cellular automaton with universal computation and construction,"# Colorized

Colorized is a cellular automaton, similar to [Wireworld](https://github.com/GollyGang/ruletablerepository/wiki/WireWorld) or [JvN](http://golly.sourceforge.net/Help/Algorithms/JvN.html). Colorized is notably different from those examples because signals propogate through empty space instead of wires. This isn't a new idea; Colorized is heavily based on Joel Walker's 2011 ""Particles"" rule (found [here](https://github.com/GollyGang/ruletablerepository/wiki/TheRules#wireworld-and-derivatives)) and Redstoneboi's ""Sticky"" rule. Rather than aiming for a minimum of states or transitions, the primary goal of Colorized is to be easy to use for computation and construction, with simplicity and minimalism as lower priorities.

You can simulate Colorized using [Golly](http://golly.sourceforge.net/); copy and paste the contents of [`Colorized.rule`](https://raw.githubusercontent.com/HactarCE/Colorized-CA/master/Colorized.rule) into Golly to get started.

- [Mechanics](#mechanics)
    - [States](#states)
    - [Photons](#photons)
        - [Parity](#parity)
    - [Basic interactions](#basic-interactions)
        - [Photon-block](#photon-block)
        - [Photon-photon](#photon-photon)
    - [Photon conversion](#photon-conversion)
    - [Memory cell](#memory-cell)
        - [Memory cell read](#memory-cell-read)
        - [Memory cell reset](#memory-cell-reset)
        - [Memory cell toggle](#memory-cell-toggle)
    - [Pusher and puller photons](#pusher-and-puller-photons)
    - [Construction](#construction)
- [Examples](#examples)
    - [Signal manipulation](#signal-manipulation)
    - [Logic gates](#logic-gates)
- [Implementation](#implementation)
    - [Photon propagation](#photon-propagation)

## Mechanics

### States

Colorized has 15 states:

![All states](/img/states-all.png)

Colorized gets its name from the first eight states, which are the colors black (which doubles as a vacuum/blank state), blue, green, cyan, red, magenta, yellow, and white respectively. These eight states are sometimes referred to as ""blocks."" Any pattern consisting only of blocks is stable. You may notice that the binary representation of a block corresponds to the red, green, and blue components of its color; this is intentional.

![Color states](/img/states-colors.png)

The next five states are used for photons, which are patterns that move at [_c_](https://conwaylife.com/wiki/Speed) (1 cell per generation). The first of these (grey) is used as the ""tail"" of a photon, and any of the other four can be the ""head"" of a photon.

![Photon states](/img/states-photons.png)

The last two are temporary states used for [construction](#construction).

![Construction states](/img/states-construction.png)

### Photons

Colorized has four types of photons:

| Image                                 | Head state | Description         |
|---------------------------------------|------------|---------------------|
| ![Orange photon](/img/photon-9.png)   | 9          | Signal photon       |
| ![Green photon](/img/photon-10.png)   | 10         | Construction photon |
| ![Teal photon](/img/photon-11.png)    | 11         | Pusher photon       |
| ![Magenta photon](/img/photon-12.png) | 12         | Puller photon       |

(Each photon pictured is moving to the right.)

#### Parity

The parity of a photon (similar to a glider's ""[color](https://www.conwaylife.com/wiki/Glider#Colour_of_a_glider)"" in Conway's Game of Life, although that term would be confusing in this context) is either odd or even, and can be calculated by summing the X and Y positions of the photon along with the generation count. The parity (odd vs. even) of the resulting number gives the parity of the photon. A photon cannot change parity without interacting with a magenta block.

It doesn't really matter whether a given photon has odd or even parity, but it does matter whether two photons have _different_ parities. Two photons are considered ""in phase"" if they have the same parity, and ""out of phase"" if their parities differ.

### Basic interactions

#### Photon-block

_Copy and paste this RLE into Golly and refer to it while reading this section:_

```
x = 90, y = 10, rule = Colorized
3.G16.HI2.G15.HI2.A35.HI3.G$69.G14.E4.G$60.HI2.E4.G14.2G$69.G$HI2.C
15.HI7.G10.HI7.G30.HI7.G$24.G18.GA38.GE4.G$40.G19.HI7.G13.G.G$64.E4.G
$3.G60.2G$45.G38.G!
```

White is an **absorber**. A head-on collision with white will annihilate the photon.

Cyan is a **splitter**. A head-on collision with cyan will split a photon into two orthogonal ones of the same type.

Blue is a **rotator**. A head-on collision with blue will annihilate the photon, but if a photon slides past blue directly adjacent to it, a new photon of the same type will be produced orthogonal to the original one.

Magenta is a **diagonal duplicator**. In its immediate vicinity, magenta allows photon heads to spread both orthogonally (as normal) and diagonally.

Red, green, and yellow usually behave the same way as white, but it is recommended **not** to use them in pure logic devices due to their special behavior in construction and memory storage.

These interactions are primarily intended for signal photons (orange), but white and cyan generally work for construction photons (green) as well:

```
x = 30, y = 10, rule = Colorized
3.G16.HJ2.G4$HJ2.C15.HJ7.G$24.G3$3.G!
```

See [Examples - Signal manipulation](#signal-manipulation) for more examples.

#### Photon-photon

There are five ways that two photons can collide and interact. The first three are in-phase while the last two are out-of-phase:

![Orange photon collisions](/img/collisions.png)

```
x = 50, y = 12, rule = Colorized
4.G20.G8.2G8.2G5$.HI3.IH3.HI8.HI8.HI4.IH2.HI$25.I$25.H19.I$15.I29.H$
15.H2$4.G19.G9.2G!
```

In the second collision shown above, a cyan or blue block can cause one or both of the photons to survive:

![Symmetric perpendicular collision with survival](/img/collide-2-survive.png)

```
x = 28, y = 8, rule = Colorized
24.G$5.C18.A$HI8.HI8.HI$16.AG8.AG3$5.I9.I9.I$5.H9.H9.H!
```

Three of these collisions work with construction photons (green) as well. (The other two interfere with transitions used for [construction](#construction).)

![Green photon collisions](/img/collisions-green.png)

```
x = 50, y = 12, rule = Colorized
4.G29.2G8.2G5$.HJ3.JH23.HJ4.JH2.HJ2$45.J$45.H3$4.G29.2G!
```

For collisions where a ""double photon"" or ""fat photon"" emerges, a signal photon and construction photon can be used together to create a single mixed photon. This is invaluable for [construction](#construction).

![Mixed photon collisions](/img/collisions-mixed.png)

```
x = 30, y = 12, rule = Colorized
4.2G8.2G8.2G5$.HI4.JH2.HI8.HJ2$15.J9.I$15.H9.H3$4.2G!
```

See [Examples - Logic gates](#logic-gates) for examples of how these collisions can be used in conjunction with photon-block interactions to make logic gates.

### Photon conversion

In conjunction with another block, yellow blocks can be used to construct **photon converters** which convert one type of photon into another.

![Converters](img/converters.png)

```
x = 30, y = 10, rule = Colorized
$2.F4.F9.F4.F4.F$2.F4.F9.B4.C4.E5$.I.J2.K.L7.I4.I4.I$.H.H2.H.H7.H4.H
4.H!
```

### Memory cell

Although a simple memory cell could be constructed out of logic gates, Colorized provides a very compact built-in option. A single red or green block (state 4 or 2 respectively) is a memory cell; red = off/`0`, green = on/`1`. Memcells can be arranged in a grid with a density of 25%, like so:

![Memory cell grid](img/memcell-grid.png)

There are three operations: read, reset, and toggle.

#### Memory cell read

Colliding a construction photon and a signal photon near a memory cell will destroy the construction photon if the memory cell is off, or convert it into a signal photon if the memory cell is on:

![Memory cell read](img/memcell-read.png)

```
x = 20, y = 10, rule = Colorized
$15.G3$.HI5.G2.HI5.G$4.D9.B2$5.J9.J$5.H9.H!
```

Note that the original signal photon is preserved; this enables reading a whole row of memcells at once:

```
x = 20, y = 20, rule = Colorized
$6.G2$3.C3.AG.D.D.D.D$2.G15.G$7.AG.B.B.D.B2$7.AG.D.D.D.D2$7.AG.D.D.D.
D$3.I$3.H6.G.G.G.G$10.A.A.A.A$5.HJ11.G3$16.C$15.G!
```

#### Memory cell reset

Colliding two signal photons near a memory cell will set the memory cell's state to ""off"" (i.e. red):

![Memory cell reset](img/memcell-reset.png)

```
x = 20, y = 10, rule = Colorized
$5.G9.G3$.HI5.G2.HI5.G$4.D9.B2$5.I9.I$5.H9.H!
```

Note that both photons are preserved; this enables resetting a whole array of memcells at once:

```
x = 20, y = 20, rule = Colorized
$6.G4.G.G.G.G$18.G$7.AG.D.B.B.B$18.G$7.AG.D.D.D.B$18.G$7.AG.B.D.B.D$
18.G$7.AG.D.B.D.D2$6.I3.G.G.G.G$6.H3.A.A.A.A$7.HI9.G!
```

#### Memory cell toggle

Colliding two signal photons near a memory cell will switch the memory cell's state:

![Memory cell toggle](img/memcell-toggle.png)

```
x = 20, y = 10, rule = Colorized
$5.G9.G3$.HI5.G2.HI5.G$4.D9.B2$5.I9.I$5.H9.H!
```

Note that both photons are preserved; this enables toggling a whole array of memcells at once:

```
x = 20, y = 20, rule = Colorized
$6.G4.G.G.G.G$18.G$7.AG.D.B.B.B$18.G$7.AG.D.D.D.B$18.G$7.AG.B.D.B.D$
18.G$7.AG.D.B.D.D2$6.J3.G.G.G.G$6.H3.A.A.A.A$7.HJ9.G!
```

### Pusher and puller photons

Pusher photons (teal) push blocks, while puller photons (purple) pull blocks:

![Pusher and puller photon demonstration](img/pusher-puller.png)

```
x = 20, y = 20, rule = Colorized
2$2.G7.CFG2.F2.G$2.I$2.HA$.G$4.G6$2.G7.EF2.F2.2G$2.I$2.HA$.G$4.G!
```

If two pusher or puller photons try to push or pull a block in different directions at the same time, the block will duplicate (unless one of the photons is in the way):

![Pusher and puller photons going in different directions](img/push-pull-opposition.png)

```
x = 20, y = 10, rule = Colorized
$.HK8.HL$4.G9.G$6.KH8.LH2$.HK8.HL$4.G9.G2$5.K9.L$5.H9.H!
```

If two parallel pusher and puller photons both try to affect a block at the same time, the block will be destroyed:

![Pusher and puller photons destroying a block](img/push-pull-destroy.png)

```
x = 10, y = 10, rule = Colorized
$.HK$4.G$6.LH2$.HL$4.G$.HK!
```

Yellow blocks are unaffected by pusher and puller photons:

```
x = 20, y = 20, rule = Colorized
2$2.G4.CFG3.F4.G$2.I$2.HA$.G$4.G6$2.G4.EF4.F3.2G$2.I$2.HA$.G$4.G!
```

### Construction

Orthogonal collisions of a construction photon and a signal photon result in the construction, destruction, or detection of a block nearby. Each of these photons may be a double photon, either homogenous or mixed, resulting in nine unique construction commands. This is where the real power of Colorized comes from; these collisions can be used to construct, disassemble, or analyze any stable pattern made from blocks. The table below illustrates these commands, and their effect on a block. There is a column for each command, and a row for each stable block.

![Stamp collection of construction commands](img/construction-stamps.png)

[`construction-stamps.rle`](patterns/construction-stamps.rle)

I highly recommend viewing this pattern in Golly and observing the effect of each command yourself. The commands, in order in the pattern above, are:

1. Delete / Clear all color bits
2. Toggle all color bits
3. Detect any
4. Toggle red bit
5. Toggle green bit
6. Toggle blue bit
7. Detect red bit
8. Detect green bit
9. Detect blue bit

Since the binary encoding of a state of a block describes its color, construction commands operate directly on that binary encoding. The ""detect"" commands emit two photons if the bit is `1` and one photon if the bit is `0`; the extra photon is emitted to aid in signal timing.

In theory, these commands allow for storage of data 3 bits per cell (compared with 0.25 bits per cell using [memcells](#memory-cell)), but in practice this is quite cumbersome.

Collisions of two construction photons is undefined, reserved for possible future expansion.

## Examples

### Signal manipulation

Diode reflector:

```
x = 8, y = 8, rule = Colorized
6.G$HI5.C5$7.C$6.G!
```

Two-way reflector:

```
x = 8, y = 8, rule = Colorized
6.C$HI5.C5$7.C$6.C!
```

Zero-delay orthogonal splitter (using blue):

```
x = 6, y = 3, rule = Colorized
HI$5.A$5.G!
```

Zero-delay orthogonal splitter (using magenta):

```
x = 8, y = 3, rule = Colorized
HI$5.E.G$5.G!
```

Linear diode:

```
x = 8, y = 8, rule = Colorized
.A5.G$2.C2.C$G5.A4$.I5.I$.H5.H!
```

Spiral gun:

```
x = 7, y = 2, rule = Colorized
HI$6.E!
```

Double-photon generator:

```
x = 8, y = 3, rule = Colorized
HI$6.E$6.2G!
```

Two perfect 180-degree reflectors:

```
x = 10, y = 17, rule = Colorized
6.GC$5.C2.G$5.C$.HI5.C$6.A$4.G$7.G6$6.G.G$HI7.C$4.GA$5.C3.G$6.G.C!
```

### Logic gates

OR, AND, and XOR gates:

![OR, AND, and XOR logic gates](/img/gates.png)

```
x = 80, y = 50, rule = Colorized
2$3.G2.2G18.G19.G19.G$2.G.G.G.G12.HI12.G19.G5.HI12.G$2.G.G.2G19.AG18.
AG18.AG$2.G.G.G.G$3.G2.G.G$46.I19.I$46.H19.H14$3.G2.G2.G.2G$2.G.G.2G.
G.G.G12.G19.G19.G$2.3G.G.2G.G.G7.HI4.C19.C13.HI4.C$2.G.G.G2.G.G.G11.G
19.G19.G8.G$2.G.G.G2.G.2G14.C13.HI4.C13.HI4.C$26.G19.G19.G14$26.2C18.
2C18.2C$2.G.G2.G2.2G13.G8.G10.G8.G10.G$2.G.G.G.G.G.G8.HI5.C19.C12.HI
5.C$3.G2.G.G.2G15.G19.G19.G$2.G.G.G.G.G.G$2.G.G2.G2.G.G$46.I19.I$46.H
19.H!
```

## Implementation

If you only want to construct patterns in Colorized, you do not need to read this section. If you want to understand how Colorized was implemented, or to invent a similar automaton, this is the section for you!

### Photon propagation

The tail of a photon will always turn into state 0 (vacuum), and the head of a photon will almost always turn into a tail. A blank cell will turn into any of these photon heads if there is a head orthogonally adjacent to the blank cell AND there is no diagonally adjacent tail that is also orthogonally adjacent to that head.

![Photon propagation](/img/photon-propagation.png)
",1,1,2,0,construction,"[cellular-automata, cellular-automaton, construction, logic]",23
dennismbugua,Todo-List-App,,https://github.com/dennismbugua/Todo-List-App,https://api.github.com/repos/Todo-List-App/dennismbugua,Todo List App,"# Getting Started with Create React App

This project was bootstrapped with [Create React App](https://github.com/facebook/create-react-app).

## Available Scripts

In the project directory, you can run:

### `npm start`

Runs the app in the development mode.\
Open [http://localhost:3000](http://localhost:3000) to view it in the browser.

The page will reload if you make edits.\
You will also see any lint errors in the console.

### `npm test`

Launches the test runner in the interactive watch mode.\
See the section about [running tests](https://facebook.github.io/create-react-app/docs/running-tests) for more information.

### `npm run build`

Builds the app for production to the `build` folder.\
It correctly bundles React in production mode and optimizes the build for the best performance.

The build is minified and the filenames include the hashes.\
Your app is ready to be deployed!

See the section about [deployment](https://facebook.github.io/create-react-app/docs/deployment) for more information.

### `npm run eject`

**Note: this is a one-way operation. Once you `eject`, you can’t go back!**

If you aren’t satisfied with the build tool and configuration choices, you can `eject` at any time. This command will remove the single build dependency from your project.

Instead, it will copy all the configuration files and the transitive dependencies (webpack, Babel, ESLint, etc) right into your project so you have full control over them. All of the commands except `eject` will still work, but they will point to the copied scripts so you can tweak them. At this point you’re on your own.

You don’t have to ever use `eject`. The curated feature set is suitable for small and middle deployments, and you shouldn’t feel obligated to use this feature. However we understand that this tool wouldn’t be useful if you couldn’t customize it when you are ready for it.

## Learn More

You can learn more in the [Create React App documentation](https://facebook.github.io/create-react-app/docs/getting-started).

To learn React, check out the [React documentation](https://reactjs.org/).

### Code Splitting

This section has moved here: [https://facebook.github.io/create-react-app/docs/code-splitting](https://facebook.github.io/create-react-app/docs/code-splitting)

### Analyzing the Bundle Size

This section has moved here: [https://facebook.github.io/create-react-app/docs/analyzing-the-bundle-size](https://facebook.github.io/create-react-app/docs/analyzing-the-bundle-size)

### Making a Progressive Web App

This section has moved here: [https://facebook.github.io/create-react-app/docs/making-a-progressive-web-app](https://facebook.github.io/create-react-app/docs/making-a-progressive-web-app)

### Advanced Configuration

This section has moved here: [https://facebook.github.io/create-react-app/docs/advanced-configuration](https://facebook.github.io/create-react-app/docs/advanced-configuration)

### Deployment

This section has moved here: [https://facebook.github.io/create-react-app/docs/deployment](https://facebook.github.io/create-react-app/docs/deployment)

### `npm run build` fails to minify

This section has moved here: [https://facebook.github.io/create-react-app/docs/troubleshooting#npm-run-build-fails-to-minify](https://facebook.github.io/create-react-app/docs/troubleshooting#npm-run-build-fails-to-minify)
",1,1,1,0,construction,"[classes, construction, forms, localstorage, reactjs]",23
damareszsouza,Exercicio-7-em-Java,,https://github.com/damareszsouza/Exercicio-7-em-Java,https://api.github.com/repos/Exercicio-7-em-Java/damareszsouza,Construtor - Class PRONTO Exercício Replicado do livro Tutorial de Programação em Java e Orientação em Objetos ,"# Exercicio-7-em-Java

# Exercicio Replicado do livro Tutorial de Programação em Java e Orientação em Objetos 


//Existem variações sobre o tema que veremos mais tarde: sobrecarga de construtor, “copy
//constructor”, construtor de corpo vazio. O exemplo a seguir é simples, semelhante aos anteriores,
//preste atenção no método com o mesmo nome que a classe, este é o construtor:

//Classe ponto
public class Ponto {
public float x,y;
public Ponto(float ax,float ay) // sempre omita o valor de retorno!
//garante o estado do objeto
{
 this.x = ax; this.y = ay;
}
public void move(float dx,float dy)
{
 this.x += dx; this.y += dy;
}
public void mostra()
{
 System.out.println(""("" + this.x + "","" + this.y + "")"");
}
}
//Classe principal, Arquivo Principal.java
public class Principal {
 public static void main(String args[]) {
 Ponto ap;
 ap = new Ponto((float)0.0, (float)0.0);
 ap.mostra();
 ap.move(1,1);
 ap.mostra();
 ap.x = 100;
 ap.mostra();
 }
}

//COMENTARIOS: 
Note que com a definição do construtor, você é obrigado a passar os argumentos deste no
momento da alocação do objeto. Se você precisa ter a opção de não passar esses valores ou passar
outros, as possíveis soluções serão dadas em “POLIMORFISMO, CLASSES ABSTRATAS”.
(float)0.0 indica que é para ser feita a conversão de 1.0 para ponto flutuante. 1.0 sozinho é
considerado double. (int)1.0 é igual a 1. (int) 2.3 é igual a dois. Esta operação indicada por
(nometipo)tipo_a_ser_convertido é também chamada de “type cast”.
A ocorrência de rotinas de criação de objetos em diversos locais de um programa é muito
comum. Objetos podem ser criados dentro de estruturas condicionais, armazenados em arquivos,
passados como parâmetros, inseridos em estruturas dinâmicas dentro de outros objetos, etc.
",1,1,1,0,construction,"[construction, eclipse, java]",23
abduallheid,Vitruvius-graduation-project-cs-2022,,https://github.com/abduallheid/Vitruvius-graduation-project-cs-2022,https://api.github.com/repos/Vitruvius-graduation-project-cs-2022/abduallheid,vitruvius is a wep app manage construction works ,"# Vitruvius 
## Construction Works App

A web application specialized in building custom villas, predicting the cost of construction and choosing between unique global designs


<o align=""center"">
<img src=""https://github.com/abduallheid/Vitruvius-graduation-project-cs-2022/blob/master/PicsArt_22-05-11_16-28-27-202.png"">
</o>
<p align=""center""><a href=""https://laravel.com"" target=""_blank""><img src=""https://raw.githubusercontent.com/laravel/art/master/logo-lockup/5%20SVG/2%20CMYK/1%20Full%20Color/laravel-logolockup-cmyk-red.svg"" width=""400""></a></p>

<p align=""center"">
<a href=""https://travis-ci.org/laravel/framework""><img src=""https://travis-ci.org/laravel/framework.svg"" alt=""Build Status""></a>
<a href=""https://packagist.org/packages/laravel/framework""><img src=""https://img.shields.io/packagist/dt/laravel/framework"" alt=""Total Downloads""></a>
<a href=""https://packagist.org/packages/laravel/framework""><img src=""https://img.shields.io/packagist/v/laravel/framework"" alt=""Latest Stable Version""></a>
<a href=""https://packagist.org/packages/laravel/framework""><img src=""https://img.shields.io/packagist/l/laravel/framework"" alt=""License""></a>
</p>

[![forthebadge made-with-python](http://ForTheBadge.com/images/badges/made-with-python.svg)](https://www.python.org/)
[![MIT License](https://img.shields.io/badge/License-MIT-green.svg)](https://choosealicense.com/licenses/mit/)
[![GPLv3 License](https://img.shields.io/badge/License-GPL%20v3-yellow.svg)](https://opensource.org/licenses/)
[![AGPL License](https://img.shields.io/badge/license-AGPL-blue.svg)](http://www.gnu.org/licenses/agpl-3.0)

[Explainer video of the project](https://drive.google.com/file/d/1VqnUlKKyblUychkMF4AY1MuB8wB3L42x/view?usp=sharing)



## Roadmap

#### The site is divided into two parts:

* user interface (client)
* Contracting company interface
![logo](https://github.com/abduallheid/Vitruvius-graduation-project-cs-2022/blob/abduallheid-patch-1/WhatsApp%20Image%202022-07-16%20at%203.07.27%20AM%20(5).jpeg)

![Logo](https://github.com/abduallheid/Vitruvius-graduation-project-cs-2022/blob/abduallheid-patch-1/WhatsApp%20Image%202022-07-16%20at%203.03.32%20AM.jpeg)

![Logo](https://github.com/abduallheid/Vitruvius-graduation-project-cs-2022/blob/abduallheid-patch-1/WhatsApp%20Image%202022-07-16%20at%203.07.23%20AM.jpeg)

# This project under Development .... 


## Authors
- [@abduallheid](https://github.com/abduallheid)
- [@mahmoudmagdy10](https://github.com/mahmoudmagdy10)
- [@ahmed-elrooby](https://github.com/ahmed-elrooby)

",1,1,1,0,construction,"[bootstrap, construction, css3, forcasting, html, laravel, machine-learning, python3, webapp, xgboost-algorithm]",23
SamuelNoesslboeck,SyArm_Mk1,,https://github.com/SamuelNoesslboeck/SyArm_Mk1,https://api.github.com/repos/SyArm_Mk1/SamuelNoesslboeck,A basic robotic arm with four axes and a variable tool slot,"[SyArm Mk1.pdf](https://github.com/SamuelNoesslboeck/SyArm_Mk1/files/11110466/SyArm.Mk1.pdf)
",1,1,1,4,construction,"[construction, robot]",23
arsari,Constrom.io,,https://github.com/arsari/Constrom.io,https://api.github.com/repos/Constrom.io/arsari,Construction Estimate APP for computer terminal - Codetrottes Intro to JS Final Project,"# CONSTROM.io

_Intro to Javascript with Node.js<br />
Course Final Project<br />
Arturo Santiago-Rivera<br />
Codetrotters Academy, San Juan PR<br />
March 29, 2017_

## Definition

**CONSTROM.io** means **_Construction Rough Order of Magnitude Estimate (ROM Estimate)_**.

ROM estimates are usually based on the estimator’s experience as well as historical data on similar projects.  We may use this kind of estimate for funding requests and budget planning.

## Development

**CONSTROM.io** is entirely programmed in **_Javascript Language_**.  At this moment, the app is executed in the computer terminal using Node.js. We expecting to continue developing the app as a Web App to be accesible in any kind of device. The app programming is developed with the following main components:

☑ MongoDB<br />
☑ Promises<br />
☑ Functions<br />
☑ Class Functions<br />
☑ Objects Array<br />
☑ Imports<br />
☑ NPM Packages

The most challenging of the project's development was being able to understand the logic of **`Promises`** and the management of **`MongoDB`**. These two components of the development were not part of the 2017 Winter Javascript Course Syllabus, so they had to be learned in a week and a half with lot of ""trial and error"".  I can say that these two components are the basis of the development and implementation of the app.

## Usage from command line

You need _Node.js_ installed in your computer.

Issue command **`npm install`** in your computer terminal in the directory where the app is located to install the require npm packages.

Issue the command **`node constrom.js`** in your computer terminal in the directory where the app is located to run the app.
For no color version, issue the command **`node constrom.js --no-color`**.
<br />
<br />
<br />
![ScreenShot](constrom-screenshot1.png)
<br />**Figure 1: Constrom.io ScreenShot Project Menu**
<br />
<br />
<br />
![ScreenShot](constrom-screenshot2.png)
<br />**Figure 2: Constrom.io ScreenShot Project ROM Estimate Items Menu**
<br />
<br />
<br />
![ScreenShot](constrom-screenshot3.png)
<br />**Figure 2: Constrom.io ScreenShot Items Database Menu**
",1,1,1,0,construction,"[construction, javascript, mongodb, nodejs, rom-estimate, terminal]",23
vaseina,Rule-checker-IFC,,https://github.com/vaseina/Rule-checker-IFC,https://api.github.com/repos/Rule-checker-IFC/vaseina,Digital Building Permit tool for Master's thesis and EduBIM conference,"# Rule-checker-IFC for Digital Building Permit


## Introduction

## How to use

## Developers
The plugin is currently being developed by <a href=""https://www.linkedin.com/in/vaseina/"">Vasilina Ivanova</a> as part of her master's thesis, with suggestions and feedback from Gregorio Saura Lorente (SIA.architects), Sesil Koutra (UMONS), Lorenzo Virone (SIA.architects).

## Future work
In addition to further testing and debugging, there are a number of improvements that could be considered, such as:


## Disclaimer 
",1,1,1,0,construction,"[architecture, bim, construction, engineering, ifc, javascript, open-source, openbim, wasm, webassembly]",23
msafeerhussain,Construction_Company_website,,https://github.com/msafeerhussain/Construction_Company_website,https://api.github.com/repos/Construction_Company_website/msafeerhussain,"It's a construction company business website using HTML , CSS and javaScript","# Construction_Company_website
",1,1,1,0,construction,"[business-web-application, construction, html-css-javascript, website-template]",23
bakklog,under-construction,bakklog,https://github.com/bakklog/under-construction,https://api.github.com/repos/under-construction/bakklog,Placeholder for client websites that are currently under construction.,"# Under Construction

This is a simple HTML document with no external dependencies, designed to be used as a temporary home page.

## Usage

1. Edit `index.html` in order to change the title and the header.
2. Optionally, modify the elements and the style according to your needs.
3. Upload the file to the root directory of your website.

## License

Licensed under the [MIT License](https://opensource.org/licenses/MIT).",1,1,3,0,construction,[construction],23
dhmhgreCompilers1,FlexBisonCppStartup,dhmhgreCompilers1,https://github.com/dhmhgreCompilers1/FlexBisonCppStartup,https://api.github.com/repos/FlexBisonCppStartup/dhmhgreCompilers1,,,1,1,2,0,construction,"[bison, compiler, construction, cpp, flex]",23
aeonSolutions,AeonLabs-Scientific-Research-Projects,,https://github.com/aeonSolutions/AeonLabs-Scientific-Research-Projects,https://api.github.com/repos/AeonLabs-Scientific-Research-Projects/aeonSolutions,"Scientific Research Related Projects. Visual Basic Statistical Analysis, Durability Statistical Analysis, Aggregates , Sedimentation, and much more... ","[Open Software Caralog](https://github.com/aeonSolutions/aeonlabs-open-software-catalogue)  >>  Softwware for Scientific Research

[![Telegram](https://img.shields.io/badge/join-telegram-blue.svg?style=for-the-badge)](https://t.me/+W4rVVa0_VLEzYmI0)
 [![WhatsApp](https://img.shields.io/badge/join-whatsapp-green.svg?style=for-the-badge)](https://chat.whatsapp.com/FkNC7u83kuy2QRA5sqjBVg) 
 [![Donate](https://img.shields.io/badge/donate-$-brown.svg?style=for-the-badge)](http://paypal.me/mtpsilva)
 [![Say Thanks](https://img.shields.io/badge/Say%20Thanks-!-yellow.svg?style=for-the-badge)](https://saythanks.io/to/mtpsilva)
[![Open Source Love svg1](https://badges.frapsoft.com/os/v1/open-source.svg?v=103)](#)
[![GitHub Forks](https://img.shields.io/github/forks/aeonSolutions/PCB-Prototyping-Catalogue.svg?style=social&label=Fork&maxAge=2592000)](https://www.github.com/aeonSolutions/PCB-Prototyping-Catalogue/fork)
[![contributions welcome](https://img.shields.io/badge/contributions-welcome-brightgreen.svg?style=flat&label=Contributions&colorA=red&colorB=black	)](#)
[<img src=""https://cdn.buymeacoffee.com/buttons/v2/default-yellow.png"" data-canonical-src=""https://cdn.buymeacoffee.com/buttons/v2/default-yellow.png"" height=""30"" />](https://www.buymeacoffee.com/migueltomas)
![](https://views.whatilearened.today/views/github/aeonSolutions/AeonLabs-Scientific-Research-Projects.svg)

<br />

# [![CodeFactor](https://www.codefactor.io/repository/github/aeonsolutions/aeonlabs-scientific-research-projects/badge)](https://www.codefactor.io/repository/github/aeonsolutions/aeonlabs-scientific-research-projects) Software for Scientific Research
This repo contains all software solutions coded while as a scientific researcher at University of Minho (Portugal). 

<br>

■ **Duracon - Service Life of Reinforced Concrete Structures**

**Project Total: ~30 work.h**

The Duracon folder contains the software code (Visual Basic) for the Duracon Software , part of the Scientific Research Project PTDC/ECM/69565/2006 entitled: ""SELICON - Service life Design – Modelling the durability performance of concrete structures"" where i worked as a researcher. 

<p align=""center"">
  <img src=""https://github.com/aeonSolutions/AeonLabs-Scientific-Research-Projects/blob/master/duracon.png""> &nbsp;
</p>

■ **ECOBuild**

**Project Total: ~240 work.h**

The ECOBuild folder contains the software (Visual Basic 6) utiized on the research work ""Life cycle assessment of steel and reinforced concrete structures: A new analysis tool"" pulbished [here](https://www.scopus.com/record/display.uri?eid=2-s2.0-79961056746&origin=inward&txGid=25697f2975aa656e8ae0380d78171c55).


<p align=""center"">
  <img src=""https://github.com/aeonSolutions/AeonLabs-Scientific-Research-Projects/blob/master/ecobuild.png""> &nbsp;
</p>

<br>

■ **Expert Automation Files**

The ""Expert Automation Files"" folder contains a collection of Excel workbooks related to Construction Building Materials , namely:

- Calculation of a mortar compostion 
- Sand Granulometry 
- Geopolimers
- Faury Method
- Compressive Strenght 

<br>

■ **FissurMax**

**Project Total: ~300 work.h**

Statistical analysis software code (Visual Basic 6) of the state of tension on 4-point bending of thin multi-layered samples, implementation to ongoing research in the Physics Department.  

<br>

■ **FissurMix**

**Project Total: ~300 work.h**

Statistical analysis software code (Visual Basic 6) of fracturing of thin coatings on a substrate, an implementation from a research thesis in the Physics Department  

<br>

■ **Temperus**

Finite Element analysis softeare code (Visual Basic 6) on multi layer coated  surfaces

<p align=""center"">
  <img src=""https://github.com/aeonSolutions/AeonLabs-Scientific-Research-Projects/blob/master/Temperus/material.png""> &nbsp;
</p>
 
<br>

■ **Modulus**

Software code (Visual Basic 6) to estimate the a composite Eleastic modules comprised of several thin substrates

<p align=""center"">
  <img src=""https://github.com/aeonSolutions/AeonLabs-Scientific-Research-Projects/blob/master/Modulus/4point%20bending.png""> &nbsp;
 <img src=""https://github.com/aeonSolutions/AeonLabs-Scientific-Research-Projects/blob/master/Modulus/secoes.png"">
</p>
 
<br>

## Join the WhatsApp Group
If you like this kind of projects and want to stay updated with the latest research ideas and prototypes during the day and week, join the WhatsApp Group
[LDAD Lab & Prototyping](https://chat.whatsapp.com/FkNC7u83kuy2QRA5sqjBVg)

<br />
<br />

## Author

You can get in touch with me on my LinkedIn Profile:

#### Miguel Tomas

[![LinkedIn Link](https://img.shields.io/badge/Connect-Miguel--Tomas-blue.svg?logo=linkedin&longCache=true&style=social&label=Connect)](https://www.linkedin.com/in/migueltomas/)

<a href=""https://stackexchange.com/users/18907312/miguel-silva""><img src=""https://stackexchange.com/users/flair/18907312.png"" width=""208"" height=""58"" alt=""profile for Miguel Silva on Stack Exchange, a network of free, community-driven Q&amp;A sites"" title=""profile for Miguel Silva on Stack Exchange, a network of free, community-driven Q&amp;A sites"" /></a>

<a href=""https://app.userfeel.com/t/2f6cb1e0"" target=""_blank""><img src=""https://app.userfeel.com/tester/737648/image?.png"" width=""257"" class=""no-b-lazy""></a>

You can also follow my GitHub Profile to stay updated about my latest projects: [![GitHub Follow](https://img.shields.io/badge/Connect-Miguel--Tomas-blue.svg?logo=Github&longCache=true&style=social&label=Follow)](https://github.com/aeonSolutions)

<br>

### Be supportive of my dedication and work towards technology education and buy me a cup of coffee
The PCB Desgin Files i provide here for anyone to use are free. If you like this Smart Device or use it, please consider buying me a cup of coffee, a slice of pizza or a book to help me study, eat and think new PCB design files.

<p align+""left"">
<a href=""https://www.buymeacoffee.com/migueltomas"">
   <img src=""https://cdn.buymeacoffee.com/buttons/v2/default-yellow.png"" data-canonical-src=""https://cdn.buymeacoffee.com/buttons/v2/default-yellow.png"" height=""35"" />
 </a>
<br>
<img src=""https://github.com/aeonSolutions/PCB-Prototyping-Catalogue/blob/main/Designs/bmc_qr.png"" height=""130"">
</p>



<br />

### Make a donation on Paypal
Make a donation on paypal and get a TAX refund*.

[![](https://github.com/aeonSolutions/PCB-Prototyping-Catalogue/blob/main/paypal_small.png)](http://paypal.me/mtpsilva)

<br>

### Support all these open hardware projects and become a patreon  
Liked any of my PCB KiCad Designs? Help and Support my open work to all by becomming a LDAD Patreon.
In return I will give a free PCB design in KiCad to all patreon supporters. To learn more go to patreon.com. Link below.

[![](https://github.com/aeonSolutions/PCB-Prototyping-Catalogue/blob/main/patreon_small.png)](https://www.patreon.com/ldad)

<br />
<br />

______________________________________________________________________________________________________________________________
### License

Before proceeding to download any of AeonLabs software solutions for open-source development and/or PCB hardware electronics development make sure you are choosing the right license for your project. See [AeonLabs Solutions for Open Hardware & Source Development](https://github.com/aeonSolutions/PCB-Prototyping-Catalogue/wiki/AeonLabs-Solutions-for-Open-Hardware-&-Source-Development) for more information. 



______________________________________________________________________________________________________________________________
",1,1,0,0,construction,"[civil-engineering, construction, laboratory]",23
HowProgrammingWorks,Builder,HowProgrammingWorks,https://github.com/HowProgrammingWorks/Builder,https://api.github.com/repos/Builder/HowProgrammingWorks,Separates the construction of a complex object from its representation,,1,1,7,0,construction,"[builder, construction, object-oriented-programming, pattern, patterns, representation]",23
TheCCO2018,BoxBox-Game,TheCCO2018,https://github.com/TheCCO2018/BoxBox-Game,https://api.github.com/repos/BoxBox-Game/TheCCO2018,Default,"# BoxBox Game


# Abstract 

This game, developed for Software Construction lecture by Cengiz CEBECİ, Onat AKTAŞ. 
You can solve the puzzles 5x5, 6x6, 7x7, 8x8 and 9x9 canvases.
If you can reach the end of the game you'll rewarded with pleasure of feeling like a genius.
If you can not, don't worry, keep calm and restart the game.

For Now: 
<a href=""https://drive.google.com/open?id=1DAOGcMLwbJkZIpI7mkQICmqPnCRH22sl"">Report in Turkish</a>

# Özet
Şuan kullanmakta olduğunuz bu program, Yazılım Yapımı dersi için Cengiz CEBECİ ve Onat AKTAŞ tarafından
geliştirilmiştir. Yazılım Yapımı dersi için hazırlanan bu proje, temeli Knigth’s Game adlı bir oyuna dayanan oyunun mantığına dayanarak grafiksel ve nesnel kodlama yeteneklerinin geliştirilmesi amacını taşır. Bu döküman ilgili projenin raporudur..

<a href=""https://drive.google.com/open?id=1DAOGcMLwbJkZIpI7mkQICmqPnCRH22sl"">Rapor</a>
",1,1,3,0,construction,"[box, boxbox, c-sharp, construction, software, software-construction, software-development, unity, vs2017]",23
Engineer1119,space-bc,,https://github.com/Engineer1119/space-bc,https://api.github.com/repos/space-bc/Engineer1119,The official Multiplanetary Building Code will offer a comprehensive and comprehensible set of model standards necessary to support humanity's expansion off-world.,"<img src=""https://github.com/Engineer1119/space-bc/blob/master/LOGO4%20png.png"" width=""538"" height=""280"" />

# The Multiplanetary Building Code
The official Multiplanetary Building Code (MBC) will offer a comprehensive and comprehensible set of model standards [necessary](https://github.com/Engineer1119/space-bc/wiki) to support humanity's expansion off-world.

# The mission
To openly adopt, adapt, unify, and share relevant standards from across the world in order to assist all space-facing entities in more affordably and effectively supporting the expansion of humanity beyond Earth, and in order to better serve the needs of the people who will live and work off-world.

# The vision
To define the common ground from which we launch towards the stars.

# How to help
Please share your perspectives and insights by doing any or all of the following:
- create an issue to request or suggest changes, or to note errors
- open a pull request if you would like to submit a new file or initiate changes to an existing file
- sharing this repo with friends and experts who would be interested
- contacting me directly at patrick@alumni.ucla.edu

Please see the [Contributor Guide](https://github.com/Engineer1119/space-bc/blob/master/CONTRIBUTING.md) for more details.

# Want to help?
If you're involved with any of the following organizations and writing their standards publications, then your input is especially valuable to guiding MBC in the right direction.
- American Institute of Aeronautics and Astronautics (AIAA)
- AIAA Space Architecture Technical Committee (AIAA SATC)
- American Society of Civil Engineers (ASCE)
- American National Standards Institute (ANSI)
- ASTM International
- U.S. Department of Defense (DOD)
- European Committee for Standardization (CEN)
- European Committee for Electrotechnical Standardization (CENELEC)
- European Telecommunications Standards Institute (ETSI)
- U.S. Federal Emergency Management Agency (FEMA) 
- International Code Council (ICC)
- International Maritime Organization (IMO)
- International Organization for Standardization (ISO)
- Moon Village Association (MVA)
- National Aeronautics and Space Administration (NASA)
- National Fire Protection Association (NFPA)
- United Nations Office for Outer Space Affairs (UNOOSA)

Please see the [wiki page](https://github.com/Engineer1119/space-bc/wiki/Who-can-help%3F) for more details.

# Current status
As of September 2019: feel free to contact me at patrick@alumni.ucla.edu if you're interested in helping. MBC is not currently sponsored or endorsed by any of the listed organizations. No MBC author receives compensation for referencing any of the listed organizations and are not affiliated unless noted otherwise.

# Related Projects
- [Mars Colony Legal Code](http://marslegalcode.org/)
- [Moon Village Association Architectural Concepts & Issues](https://moonvillageassociation.org/about/projects/architectural-concepts/)

Copyright 2019 Patrick A. Donovan, P.E. (CA)
",1,1,2,9,construction,"[architecture, civil-engineering, construction, environmental-engineering, mars, mechanical-engineering, moon, open-source, space, space-exploration, standards, structural-engineering]",23
Anzo52,concalc,,https://github.com/Anzo52/concalc,https://api.github.com/repos/concalc/Anzo52,Concrete volume calculator,"# concalc
Concrete volume calculator
",1,1,2,1,construction,"[calculator, cement, cementjob, concrete, construction, curb, gutter, sidewalk, volume-calculator]",23
natnew,Data-Science-in-Construction,,https://github.com/natnew/Data-Science-in-Construction,https://api.github.com/repos/Data-Science-in-Construction/natnew,Data Science in Construction,"# Data Science in Construction
With Microsoft Azure

![](https://github.com/natnew/Data-Science-in-Construction/blob/main/dennis-kummer-52gEprMkp7M-unsplash.jpg)

## Harnessing The Power of Data
The AEC (architecture, engineering, and construction) Industry has seen a dramatic shift in recent years. Companies are steadily realising the endless possibilities that come with harnessing Construction data. The current global pandemic (COVID) has also caused many businesses to use more digital tools that allow their workers to operate remotely. This shift is becoming more digital has led to a desire for companies to create, manage and maintain their digital data more effectively. Although relatively new to the construction industry, data science will help the sector gain better value from its data. This project aims to understand how data science can more effectively capture and manage construction data.

There are currently two main methods of collecting construction data. And that is through the use of IFC (industry foundation classes) and COBie (Construction Operations Building Information Exchange) files. However, with the development of digital twins and the connection of IoT devices to databases, the collection, and management of construction data will expand to other areas.


According to a recent report conducted by [Autodesk](https://a.storyblok.com/f/64835/x/137c281eda/harnessing_the_data_advantage_in_construction.pdf), there is an increase in AEC companies collecting data from construction technology than previously recorded.

**""82 of professionals are collecting more data from <br>construction technology today than three years ago.""**

Many AEC companies see this data as unusable for several reasons and, as such, are unable to incorporate this data into decision-making. Most construction data collected over the years has often got lost in translation or just stored away. If the construction industry is to keep up with the growing defamed digital innovation expected in the future, it needs to find a way of harnessing that data.

(December 2021)

## Projects
### Construction Data
<img src=""https://github.com/natnew/Data-Science-in-Construction/blob/main/joshua-mayo-obJBg2lZjMg-unsplash.jpg"" width=50% height=50%>
Pedict Project Success [Workbook]() <br>

### Data - Projects
[Notebook - Data-Science-With-Tableau ](https://github.com/natnew/Data-Science-With-Tableau)<br>
[Notebook - 100-Days-of-Data-Science](https://github.com/natnew/100-Days-of-Data-Science)<br>
[Notebook - 100 Python Projects](https://github.com/natnew/100-Python-Projects)<br>
[Notebook - Data-Science-Project-Planning](https://github.com/natnew/Data-Science-Project-Planning)<br>

## Data
* Design Model
* Housing
* [Immunotherapy](https://github.com/natnew/Data-Science-in-Construction/blob/main/immunotherapy.csv)
* Exam Scores
* [Happiness](https://github.com/natnew/Data-Science-in-Construction/blob/main/happiness.csv)
* [Diamonds](https://raw.githubusercontent.com/tidyverse/ggplot2/main/data-raw/diamonds.csv)
* [COBie](https://github.com/natnew/Data-Science-in-Construction/blob/main/COBieCapture.JPG)

## Languages
Python


## Talks
[Data Science Bootcamp](https://github.com/natnew/Data-Science-in-Construction/blob/main/Data%20Science%20Journey.pdf)<br>


### Other Data
<img src=""https://github.com/natnew/Data-Science-in-Construction/blob/main/johan-anblick-wCLGDSpaV6g-unsplash.jpg"" width=50% height=50%>
Reducing Pollution in Cities [Workbook]()


## Ethical Awareness

## Transparency


### Resources 
This is a list of resources that I used for the projects in this repository. 
- How To Think Like A Programmar by Paul Vickers

### Contact
[CV]()<br>
[Portfolio]()<br>
[Linkedin](https://www.linkedin.com/in/natasha-newbold/)<br>
",1,1,1,0,construction,"[construction, data, data-analysis, data-science, data-visualization, tech, technology]",23
teverett,simpleioc,,https://github.com/teverett/simpleioc,https://api.github.com/repos/simpleioc/teverett,A simple IOC container,"![CI](https://github.com/teverett/simpleioc/workflows/CI/badge.svg)
[![Codacy Badge](https://api.codacy.com/project/badge/Grade/9c0f06b818bd47739ff23a1c0001326c)](https://www.codacy.com/app/teverett/simpleioc?utm_source=github.com&amp;utm_medium=referral&amp;utm_content=teverett/simpleioc&amp;utm_campaign=Badge_Grade)
[![DepShield Badge](https://depshield.sonatype.org/badges/teverett/simpleioc/depshield.svg)](https://depshield.github.io)

Simple IOC
=============

Introduction
-------------------

SimpleIOC is a framework for configuring autowire (JSR330) beans using XML.

Configurable bean properties include

* caching (singleton)
* ThreadLocal beans
* autocreation

Defining a Bean in code:
-------------------

	@RegistryBean(name = ""regBean"", cached=false, autocreate=true)
	public class ExampleAnnotatedBean {
	}


Injection via JSR330
-------------------

	@Inject()
	@Named(""fuddleduddle"")
	private SampleInjectedInterface interface2;
	

Construction filters can be used by SimpleIOC to wrap beans in arbitrary dynamic proxies at construction time. 

A typical example is using cglib to define a dynamic proxy which can be used to implement a custom annotation such as @Transactional

Finding a bean in code
-------------------

	final IOCBeanRegistry autobeanRegistry = new DefaultIOCBeanRegistry();
	autobeanRegistry.load(""beans.xml"");
	/*
	 * populate the beans we need
	 */
	jcrPersistenceContext = (JcrPersistenceContext) autobeanRegistry.getBean(""jcrpersistencecontext"");


Defining Construction filters.  
-------------------

	public class ExampleProxyCreatingFilter implements IOCInstantiationFilter {
		public Object filter(IOCBeanRegistry iocBeanRegistry, Object object, Bean bean) throws IOCException {
			try {
				return Proxy.newProxyInstance(object.getClass().getClassLoader(), object.getClass().getInterfaces(), new DebugProxy(object));
			} catch (final Exception e) {
				throw new IOCException(""Exception in filter"", e);
			}
		}
	}

Addons Available  
-------------------

* simpleioc-struts.  Support for injection of JSR330 beans into Strut2 Actions
* simpleioc-testng.  Support for TestNG Testing
* simpleioc-junit.   Support for JUnit Testing
* simpleioc-servlet. Support for Servlets





",1,1,2,7,construction,"[bean, construction, construction-filters, injection, ioc, ioc-container, java]",23
danmadeira,construcao-elementos-svg,,https://github.com/danmadeira/construcao-elementos-svg,https://api.github.com/repos/construcao-elementos-svg/danmadeira,Construção dos elementos gráficos da linguagem SVG.,"## Construção de elementos SVG

Uma classe em PHP para construção dos elementos gráficos da linguagem SVG 1.1, na gramática XML. Cada função retorna uma string de um elemento SVG, container ou gráfico, com os respectivos atributos.

Este lançamento ainda não contém todos os elementos SVG. Contudo, contém boa parte dos elementos gráficos, incluindo seus principais atributos.

:point_right: Esta classe foi utilizada em [Modelo SVG para labirinto 3D](https://github.com/danmadeira/labirinto) e em [Bandeira Nacional em PHP](https://github.com/danmadeira/bandeira-nacional-em-php)

### Referências:

- BELLAMY-ROYDS, A.; CAGLE, K. *SVG Colors, Patterns & Gradients: Painting Vector Graphics*. O'Reilly, 2016.

- BELLAMY-ROYDS, A.; CAGLE, K.; STOREY, D. *Using SVG with CSS3 and HTML5: Vector Graphics for Web Design*, Second Release. O'Reilly, 2018.

- COWBURN, P. e col. *Manual do PHP*. PHP Documentation Group. 25 de Dezembro de 2020. Disponível em: <https://www.php.net/manual/pt_BR/index.php>

- EISENBERG, J. D.; BELLAMY-ROYDS, A. *SVG Essentials*, Second Edition. O'Reilly, 2015.

- LIBBY, A. *Beginning SVG: A Practical Introduction to SVG using Real-World Examples*. Apress, 2018.

- W3C *Scalable Vector Graphics (SVG) 1.1 (Second Edition)*, W3C Recommendation 16 August 2011. Disponível em: <https://www.w3.org/TR/SVG11/>
",0,0,1,0,construction,"[class, construction, create, graphics, language, php, svg, svg-editor, vector-graphics, xml]",23
hisaac,sticky-construction.com,,https://github.com/hisaac/sticky-construction.com,https://api.github.com/repos/sticky-construction.com/hisaac,"The website for Sticky Construction, Inc.","# sticky-construction.com

[![Netlify Status](https://api.netlify.com/api/v1/badges/2f33cd32-02aa-4e3a-aa71-cee856a0fd7c/deploy-status)](https://app.netlify.com/sites/sticky-construction-com/deploys)

[sticky-construction.com](http://sticky-construction.com) is the homepage of Sticky Construction, Inc., a commercial caulking company from Thompson, ND.

This site was built using bits of templates from [Start Bootstrap](https://startbootstrap.com).

The header image was taken from [Wikimedia](https://commons.wikimedia.org/wiki/File:Turtle_Cove_Providenciales_Beach.jpg)
",0,0,2,0,construction,"[business, construction, jekyll]",23
Ifejeremiah,BrickX,,https://github.com/Ifejeremiah/BrickX,https://api.github.com/repos/BrickX/Ifejeremiah,"A marketplace platform service, connecting construction companies and contractors to local construction workers - looking for short-term / long-term work.","# BrickX, Inc.

[BrickX](https://brickx.netlify.app/) is a marketplace connecting construction companies and contractors to local construction workers looking for short-term or long-term work.

Your construction projects get matched to verified worker profiles based on skill, experience and location. The connection & payroll is all handled through the BrickX platform to bring accountability and transparency to the construction industry.


## Technical documentation in progress.",0,0,1,0,construction,"[companies, construction, free-to-use, open-source, react, sass, webapp, workers]",23
cedricWassenaar,2D-Bridge-optimisation,,https://github.com/cedricWassenaar/2D-Bridge-optimisation,https://api.github.com/repos/2D-Bridge-optimisation/cedricWassenaar,"Optimize a 2D construction by setting a certain material, load and shape","# 2D-Bridge-optimisation
![Application](/bridge_optimalisation.png)

Optimize a 2D construction by setting a certain material, load and shape

- Multiple loads can be defined
- Hanging or standing construction
- Optimisation can be done visually
",0,0,0,1,construction,"[analysis-framework, bridge, construction, first-timers-only, pygame, pygame-library, python, python-3, python-3-6, python36, simulation, simulator]",23
falconi1812,falconi,falconi1812,https://github.com/falconi1812/falconi,https://api.github.com/repos/falconi/falconi1812,Simple website with a huge amount of unnecessary stuff ,"

# falconi-com 
[![Build Status](https://travis-ci.org/falconi1812/falconi.svg?branch=develop)](https://travis-ci.org/falconi1812/falconi) [![Code Climate](https://codeclimate.com/github/falcon1812/falconi.png)](https://codeclimate.com/github/falcon1812/falconi) [![Made With Love](https://img.shields.io/badge/made%20with-%3C3-red.svg)](https://github.com/falcon1812/falconi)

falconi marketing website built with **Next.js**.

## Installation

* Make sure you've the [current Node.js version](https://nodejs.org/en/download/current/) installed (`v7.10.0` right now).
* Clone this repository.
* Run `yarn install` (if you haven't installed it yet please run `npm i -g yarn`).

## Development

To start the development server simply run:

`yarn dev`

and then go to

`http://localhost:3000`

:construction: TO BE CONTINUED... :construction:
 
",0,0,2,0,construction,"[construction, front-end, javascript, nextjs, react, website]",23
StingrayCZ,Rotary-Display-Stand,,https://github.com/StingrayCZ/Rotary-Display-Stand,https://api.github.com/repos/Rotary-Display-Stand/StingrayCZ,"[SolidWorks]   Practise examination during a job application process for 3E Praha Engineering, a.s. 📝","# Rotary Display Stand
Main purpose of this device is facilitating work for a photograher or who wants to rest the object in some positions.
He's able to set the correct position by switch on a electric motor.

The project is origin from 2014 when I applied job for <a href=""https://3epraha.cz/"">3E Praha Engineering</a> and I had to show my ability to make a machine design independently. It means gather information about stardardized parts (steel profiles and fasteners), 
strength calculations, proposal method of transfer power, etc.

The machine is propulsed by stepper motor (torque is 10 Nm) which take energy from DC grid.

What do you find in this repository?
*   Pictures of assembly snap from screen
*   A model and drawing of shaft
*   A assembly as <a href=""http://www.edrawingsviewer.com/ed/download.htm/"">eDrawings</a> file


<p float=""left"">
  <img src=""/Pictures/IsoView.PNG"" width=""420"" /> 
  <img src=""/Pictures/ExplodedView_1.PNG"" width=""420"" />
  <img src=""/Pictures/ExplodedView.PNG"" width=""600"" /> 
</p>
",0,0,1,0,construction,"[belt-gear, cad, construction, models, solidworks]",23
Thorney13,Arcade-Machine,,https://github.com/Thorney13/Arcade-Machine,https://api.github.com/repos/Arcade-Machine/Thorney13,Arcade Machine for Digital Arts Computing final project,,0,0,1,0,construction,"[arcade-game, arcade-machine, construction, game-development]",23
Constructionware,ManageWorks,,https://github.com/Constructionware/ManageWorks,https://api.github.com/repos/ManageWorks/Constructionware,ManageWorks takes the hassle out of your Project and Task Management Routines. ,"# ManageWorks
Project and Task Manager  
",0,0,2,0,construction,"[construction, manager, project]",23
lucashomuniz,Text-2,,https://github.com/lucashomuniz/Text-2,https://api.github.com/repos/Text-2/lucashomuniz,How to Create a Data-Driven Culture in Construction Industry,"# How to Create a Data-Driven Culture in Construction Industry

Technology is generating drastic changes in all markets, currently the Civil Construction industry is being driven by waves of innovations focusing at calculating, sharing and storing various types of information.

![image](https://github.com/lucashomuniz/Text-2/assets/123151332/71617680-3025-4a72-b57f-5db596b236b0)

_______________________________________________________________________________________________________________________________________________________________________________________________________

Initially, there was the creation and expansion of optimization tools such as Automation Modules, Building Information Modeling (BIM), Drones and Augmented Reality, but this phase is already consolidated. In recent years, several technologies have emerged related to managing the enormous amount of information we have access to today. The focus of these technologies is to use Data Analysis and deeper concepts such as Machine Learning and Artificial Intelligence to detect strategic information, aiming to increase the efficiency of several areas of Civil Construction.

Initially, the first step in implementing a Data-Driven Culture is to understand what are the main information and knowledge that the construction company wants to acquire. Because, through the data, it is possible to obtain an infinity of answers. But what will really make a difference to the results is knowing what questions need to be asked when analyzing the data. In other words, it is essential to understand what are the problems that your company wants to solve, for example, the Engineers of a certain construction company want to develop a plan to increase the productivity of the work, in order to reduce the costs related to the re-work of the operational team . Thus, in order to solve the problem, it is necessary to collect and analyze historical data regarding the services performed, productivity metrics and information about each of the professionals.

Currently, there is a high probability that most Civil Construction companies already accumulate a significant amount of data internally, through various sources, such as: Engineering Project Software, Customer Information, Budgets and Work Schedules, Spreadsheets Measurements and Inspections Protocols, etc. In addition to the various ways in which the construction company already obtains the data, there are other ways to obtain more data (as explained in this article).

_______________________________________________________________________________________________________________________________________________________________________________________________________

Then, before starting the process, it is crucial to establish rules for organizing the data. It means develop a series of methodologies for professionals to start collecting and storing data in an organized way, such as the location where they will be saved and the form of categorization. In summary, the reason for the very need to use Big Data will probably help guide the creation of these protocols. Currently, there are several tools that can help manage the information of a construction company in an efficient and safe way. Using software aimed specifically at data management, as well as adopting a unified management system is extremely important.

Above all, it is totally contradictory to obtain valuable information and isolate this knowledge from the rest of the organization (this is something that many construction companies do, even if unconsciously). Sharing data with all professionals involved in the work is essential for employees to realize the benefits generated by the collection, analysis and use of this data. This will help create a standard for this practice. In parallel, it is important that professionals participate in Data Analysis. The perspective of those who deal with the work on a daily basis helps to better understand certain information and transform it into practical knowledge for the construction company. In this way, involving professionals in decision-making will make them see the benefits of this strategy in practice.

Finally, as previously mentioned, it is interesting to identify the problem specifically in order to be solved, as well as to create processes and practices that facilitate the collection, storage and analysis of the data. Similarly, showing the team that Data Analysis is not just a possible alternative, but the most efficient way to make the best choices will have a highly positive impact. After all, data is the essential foundation for making decisions based on facts and not guesswork.
",0,0,1,0,construction,"[algortihm-selection, civil-engineering, construction, data-analysis, data-driven, data-science]",23
BharatMaheshwari96,Annual-Economic-Survey,,https://github.com/BharatMaheshwari96/Annual-Economic-Survey,https://api.github.com/repos/Annual-Economic-Survey/BharatMaheshwari96,,"# Annual-Economic-Survey

The Annual Business Survey of Economic impact comprises data from 2000-2017 of around 4200
companies in Ireland. These companies are classified as Irish owned companies and Foreign
companies and they are further categorised in different sectors such as IT, Medical Devices
Manufacturing, Financial Services etc, respectively.
We are conducting data analysis to compare the Foreign company’s economic impact and comparing
it to the Irish owned companies to identify and interpret the most profitable Business Sector for Irish
owned companies for future investment.


Data description


1. Manufacturing and Other Industry Food/Drink & Primary Production:

a. Food & Drink

b. Agriculture

c. Fishing Forestry

d. Mining & Quarrying 

2. Traditional Manufacturing:

a. Textiles

b. Clothing

c. Footwear & Leather

d. Wood & Wood products

e. Paper & printing

f. Rubber & plastics


g. Non-metallic minerals

h. Basic & fabricated metal products

i. Electrical equipment

j. Machinery & equipment

k. Transport equipment

3. Modern Manufacturing: 


a. Chemicals

b. Computer, electronic & optical products

c. Medical devices 

4. Energy, Water, Waste & Construction

a. Energy, water, waste & construction 



5. Information, Communication & Computer:

a. Publishing, broadcasting & telecommunications

b. Computer programming

c. Consultancy & related facilities

d. Other IT and computer services

6. Business, Financial & Other Services:

a. Financial services

b. Business, education & other services 
",0,0,1,0,construction,"[business-intelligence, clothing, construction, dataset, drink, energy, equipment, financial-services, foreign-companies, irish, manufacturing, microsoft-power-bi, textiles, water, wood]",23
jospheenmaged,george-construction,,https://github.com/jospheenmaged/george-construction,https://api.github.com/repos/george-construction/jospheenmaged,,# george-construction,0,0,0,0,construction,"[construction, website]",23
romhaj,Construction,,https://github.com/romhaj/Construction,https://api.github.com/repos/Construction/romhaj,,"# Construction

has a culture that promotes an injury-free environment and provides the safest workplace possible for our employees, subcontractors, clients and others who enter our construction sites.
",0,0,1,0,construction,[construction],23
adiMallya,rbuild,,https://github.com/adiMallya/rbuild,https://api.github.com/repos/rbuild/adiMallya,Get hassle-free construction/renovation services over the web  ,"<h1 align=""center"">rBuild</h1></br>

<p align=""center"">
A Construction/Renovation services site :house:
</p>


<br>
<p align=""center"">
<img width=""320px"" src=""images/website_logo.png"" alt=""rbuild logo""></img>
</p><br>

## Note
- Please open the site on a desktop for better view
- Curently all the scripts are written only for the client-side 
- This site was part of a college assignment, and not for any commercial purpose. 

## Need to fix..
- TBH this site needs alot of changes :stuck_out_tongue:
- Maybe try making the pages mobile responsive ? Hmm.. :sweat_smile:
- Maybe write better stylesheets ?Nvm I suck at CSS :stuck_out_tongue_closed_eyes:
",0,0,2,0,construction,"[college-project, construction, css3, frontend-web, html5, website]",23
maxmillerb,matrix-analysis,,https://github.com/maxmillerb/matrix-analysis,https://api.github.com/repos/matrix-analysis/maxmillerb,"Matrix analysis - Algoritmo para análise matricial de pórtico plano (processo dos deslocamento) - Utiliza numpy, pacote de Python para operações com vetores e matrizes - Autor(aluno): Max Miller - Professor: João Carlos Cordeiro Barbirato - Disciplina: Análise Matricial de Estruturas - Curso: Eng Civil UFAL - Maceió, Abril de 2019",,0,0,1,0,construction,"[analise, analysis, civil, construcao, construction, engenharia, engineering, estruturas, matricial, matrix, numpy, portico, porticos, python, structures]",23
philhag,IIB.ICDD,,https://github.com/philhag/IIB.ICDD,https://api.github.com/repos/IIB.ICDD/philhag,"The IIB.ICDD framework provides functions in C# .NET 6 to open, create, validate, edit, and export containers defined by ISO 21597-1:2020. ","# IIB.ICDD framework [![DOI](https://zenodo.org/badge/DOI/10.5281/zenodo.7256174.svg)](https://doi.org/10.5281/zenodo.7256174) 
The IIB.ICDD framework provides functions in C# [.NET 6](https://learn.microsoft.com/en-us/dotnet/core/whats-new/dotnet-6) to open, create, validate, edit, export containers defined by [ISO 21597-1:2020](https://www.iso.org/standard/74389.html). In ISO 21597-1, a specification is given for a generic container format that stores documents using various formats and structures, along with a means of linking otherwise disconnected data within those documents (including individual parts). These documents can have any syntax and semantics. The container format includes a header file and optional link files that define relationships by including references to the documents, or to elements within them. The header file uniquely identifies the container and its contractual or collaborative intention. This information is defined using the [RDF](https://www.w3.org/TR/rdf11-concepts/), [RDFS](https://www.w3.org/TR/rdf-schema/), and [OWL](https://www.w3.org/TR/owl2-overview/) semantic web standards. Querying these containers with [SPARQL](https://www.w3.org/TR/sparql11-query/) as well as using [SHACL](https://www.w3.org/TR/shacl) for validation is provided by this framework.

## How-to use this code
* see [INSTRUCTIONS](https://philhag.github.io/IIB.ICDD/) file

## Download
* [IIB.ICDD releases](https://github.com/philhag/IIB.ICDD/releases)
* [NuGet Package](https://www.nuget.org/packages/ICDDToolkitCore/)

## License 
* see [LICENSE](https://github.com/philhag/IIB.ICDD/blob/main/LICENSE) file

### Third party libraries
* [dotNetRDF (>= 2.7.5)](https://www.nuget.org/packages/dotNetRDF/)
* [r2rml4net (>= 0.8.0)](https://www.nuget.org/packages/r2rml4net/)
* [System.Data.SqlClient (>= 4.8.3)](https://www.nuget.org/packages/System.Data.SqlClient/)
* [LibGit2Sharp (>= 0.27.0)](https://www.nuget.org/packages/LibGit2Sharp/)


## Contact
#### Developer
* Homepage: [https://www.inf.bi.ruhr-uni-bochum.de/](https://www.inf.bi.ruhr-uni-bochum.de/)
* e-mail: philipp.hagedorn-n6v@ruhr-uni-bochum.de",0,0,1,0,construction,"[aec, construction, icdd, linkeddata, owl, rdf, semanticweb, shacl]",23
HasanShaikat,construction-landing-page,,https://github.com/HasanShaikat/construction-landing-page,https://api.github.com/repos/construction-landing-page/HasanShaikat,Live Site,"# Constraction

## Full Responsive Project

### Using Metarial

- HTML
- Bootstrap 5
- Animation (AOS)
- Google Fonts (Josefin Sans)
- Icon [Icon source](https://icons.getbootstrap.com/)
- Attractive images [Image source](https://unsplash.com/)

### Designed by **_Mehedi_**
",0,0,1,0,construction,[construction],23
fusion-jena,MakeSchema,fusion-jena,https://github.com/fusion-jena/MakeSchema,https://api.github.com/repos/MakeSchema/fusion-jena,Make Schema is a python tool that is based on rdflib to create an RDF schema aka ontology. This tool is developed and tested in the scope of Meta2KG project to create the BMO ontology.,"# Make Schema [![DOI](https://zenodo.org/badge/520071334.svg)](https://zenodo.org/badge/latestdoi/520071334)


Make Schema is a python tool that is based on [rdflib](https://github.com/RDFLib/rdflib) to create an RDF schema aka ontology.
This tool is developed and tested in the scope of [Meta2KG](https://github.com/fusion-jena/Meta2KG) project to create the BMO ontology. 

The target ontology, BMO in this repo, would contain:
1. RDFS classes and subclasses
2. Data and Object properties 
3. Vocab reusability via `SKOS:exactMatch` and `SKOS:closeMatch` currently we support reusability from [Dublin Core](https://www.dublincore.org/), [schema.org](https://schema.org/), and [Wikidata](https://www.wikidata.org/wiki/Wikidata:Main_Page)

## Generated Ontology (BMO) [![DOI](https://zenodo.org/badge/DOI/10.5281/zenodo.6948519.svg)](https://doi.org/10.5281/zenodo.6948519)
The generated ontology given the current definitions is as follows. 
The visualization is created by the public service of [webvowl](http://vowl.visualdataweb.org/webvowl.html)
![BMO!](images/bmo.png)

## To Build Your Own Ontology

### Basic Changes
This involves changing the data aka. definitions only
1. Under [/utils](/utils):
   * you need to change the [definitions.py](/utils/definitions.py) to meet your ontology.
   * If you need to reuse vocab from sources other than what is supported, you need to change that under [namespaces.py](utils\namespaces.py) as well
2. Make sure that you have the correct metadata that well described your schema by changes [meta_config.py](meta_config.py) 
3. After you change the corresponding files, run [create.py](create.py) 

### Advanced 
Besides the 'Basic Changes' above, if you need to support more to generate of your ontology, then you would need to change both [data_structure.py](utils/data_structure.py) and [create.py](create.py).
- The first one would be the placeholder for the new attribute e.g., RDFS.type (is_a relationships). 
- The second one would be the place where you fetch the new attribute and transform it into an knowledge graph triple. 

### Citation

Please use the following citation if you like to use the code
```
@software{nora_abdelmageed_2022_6948513,
  author       = {Nora Abdelmageed},
  title        = {fusion-jena/MakeSchema: BMO\_code},
  month        = aug,
  year         = 2022,
  publisher    = {Zenodo},
  version      = {v1.0.0},
  doi          = {10.5281/zenodo.6948513},
  url          = {https://doi.org/10.5281/zenodo.6948513}
}
```
",0,0,3,0,construction,"[construction, knowledge-graph, metadata, ontology, python]",23
justkahdri,CalculatorHA,,https://github.com/justkahdri/CalculatorHA,https://api.github.com/repos/CalculatorHA/justkahdri,"A calculator for concrete structures designed with html5, css3 and javascript","# Project CalculatorHA
Just a place to post my personal projects

For now is just a project about Concrete Structures.
The purpose is the automation of diverse Math problems.
[Published here](https://justkahdri.github.io/CalculatorHA/)

## Columns
  You put the weight distribution that holds the column, floors' quantity, the concrete quality and done!
  + Glossary
      W = weight in KN
      H = HºAº quality
      Ag = Column minimum section
      Cx and Cy = widths in X axis and Y axis

## Beams
  The rules are simple, the concrete beam's shouldn't be longer than 7 meters. With this information the code returns the most suitable measures for it.
  + Glossary
      h = height
      bw = width
      d = distance between the edge and the steel bars
      
## Slabs
  Slabs can have steel bars in one or both directions and that depends of his lengh and width (one-direction < 2 <= both-directions)
  + Glossary
      x = width
      y = lenght
      h = height
      β = widht-lenght relation

## Concrete Wall
   + Glossary
      W = weight in KN
      H = HºAº quality
      Ag = Column minimum section
      e = width
      p = perimeter
      
## Bugs known
  - There is an image of a slab fixed on the website 
  
---
permalink: /index.html
---
",0,0,2,0,construction,"[calculator, construction, css, css-grid, html, vanilla-javascript]",23
ubeevn,Construction-Company-Template,ubeevn,https://github.com/ubeevn/Construction-Company-Template,https://api.github.com/repos/Construction-Company-Template/ubeevn,,,0,0,2,0,construction,"[bootstrap3, construction, html]",23
barabadzhi,construction-mkp,,https://github.com/barabadzhi/construction-mkp,https://api.github.com/repos/construction-mkp/barabadzhi,Construction heuristics for the multidimensional knapsack problem (MKP),"# construction-mkp
Construction heuristics for the multidimensional knapsack problem (MKP)
",0,0,2,0,construction,"[algorithms, construction, cross-platform, greedy, heuristics, random, rust, rustlang]",23
caren1,mctrade-react-v2,,https://github.com/caren1/mctrade-react-v2,https://api.github.com/repos/mctrade-react-v2/caren1,"Commercial Project - Improved landing page for personal, construction company, built with React, React Hooks, React Router and Styled Components. 🛠⚙⚒","![MC TradeV2 - infographic](infographic.png)
",0,0,2,0,construction,"[construction, landing, page, react, reactjs, router, styled-components]",23
DryKISS-Sites,kmireformas.com,DryKISS-Sites,https://github.com/DryKISS-Sites/kmireformas.com,https://api.github.com/repos/kmireformas.com/DryKISS-Sites,KMI Reformas,,0,0,2,0,construction,"[construction, property]",23
roronoa77,striver-html,,https://github.com/roronoa77/striver-html,https://api.github.com/repos/striver-html/roronoa77,construct html,,0,0,1,0,construction,"[construction, hacktoberfest, hacktoberfest2022, html-css-javascript]",23
Dilip-Biswas,Jquery-SVG,,https://github.com/Dilip-Biswas/Jquery-SVG,https://api.github.com/repos/Jquery-SVG/Dilip-Biswas,,,0,0,2,0,construction,"[construction, in, phase]",23
gecoerp,gecoerp_construction,,https://github.com/gecoerp/gecoerp_construction,https://api.github.com/repos/gecoerp_construction/gecoerp,Sistema para la Gestión de la Construcción ,"# gecoerp_construction
Sistema para la Gestión de la Construcción 
",0,0,1,0,construction,"[construction, gecoerp, odoo, odoo-addons, odoo-modules, python]",23
LandTowerLimited,landtowerlimited,LandTowerLimited,https://github.com/LandTowerLimited/landtowerlimited,https://api.github.com/repos/landtowerlimited/LandTowerLimited,"Land Tower LTD Company Website, a React PWA Project. ","<h1 align='center'>Land Tower Limited</h1>
<h3 align='center'>Land Tower LTD Company Platform, a React PWA Project.</h3>
<br/>
<p align=""center"">
  <img width=""400"" height=""400"" src=""https://user-images.githubusercontent.com/64613243/174580581-53464e9b-2187-4ca8-ba34-f2a353f8ff1d.png"">
</p>
<br/>
<h1>Getting started</h1>

- [x] Created with: `npx create-react-app landtowerlimited --template cra-template-pwa`
- [x] Recommended: `Node.js 14+` and `npm 6+`
- [x] Install dependencies: `npm install` or `yarn`
- [x] Start the server: `npm run start` or `yarn start`
- [x] To deploy, you need to make a build: `npm run build`

<h1>Documentation</h1>

A documentation for the frontend development of Land Tower Limited Platform.

<h3>Dependencies</h3>

<ul>
  <li>Axios</li>
  <li>Redux</li>
  <li>Tailwind CSS</li>
  <li>React Router</li>
  <li>etc.</li>
</ul>

",0,0,0,0,construction,"[construction, interior-consultant, luxury-apartments]",23
lucashomuniz,Text-1,,https://github.com/lucashomuniz/Text-1,https://api.github.com/repos/Text-1/lucashomuniz,Introduction to Civil Construction Optimization Processes based on Data Science,"# Introduction to Civil Construction Optimization Processes based on Data Science

In general, Data Science can be used for many purposes, but mainly to drive business decisions, reduce costs and increase productivity. A company managed by a Data-Driven Culture focuses on interpreting data by showing the best way to ensure better results.

![image](https://github.com/lucashomuniz/Text-1/assets/123151332/a5681844-0ebc-4e9e-b739-db1c0de28a05)

___________________________________________________________________________________________________________________________________________________________________________________________________

From logistics companies to apparel companies to the more recent phenomenon of music and movie streaming, Data Driven Culture is becoming the main way companies organize. The civil engineering market is going down the same path, it is a trend of great importance for the construction sector, due to the fact that companies that adopt these solutions considerably improve their results, guaranteeing a high rate of assertiveness in their projects.

Civil Construction is one of the main economic activities in Brazil, but it could have better results if waste were reduced and productivity increased. Common problems in the sector, such as waste of materials, delays in works and lack of budget control, can be solved with the use of technology. Data Science can help managers find the roots of problems and make more assertive decisions. If this process were done manually, the analyzes could be time-consuming and even unproductive, but with the use of Data Analysis software and tools, it is possible to use them intelligently.

Within Data Science, the term Big Data has been gaining strength in recent years. This concept refers to the centralization of the use and analysis of a large volume of data, which has been helping to transform the construction sector. In order to take advantage of this type of technology, it is initially necessary to start gathering data from different construction sources. With the data stored, then the mining, cleaning, transformation can be done, and finally presentation phase begin. During this process, different types of methodologies can be used, such as Artificial Intelligence and Machine Learning. The focus is on transforming all data into relevant Insights so that managers can be more clear when making decisions.

___________________________________________________________________________________________________________________________________________________________________________________________________

Currently, there are several software and analysis methods that allow the application of this type of intelligence in various construction sectors. Technologies that use the assumptions of Data Science to develop modeling and computer simulations based on historical data, so that changes in works are made with greater assertiveness and awareness of the possible results.

As previously mentioned, the union between Data Science and Civil Engineering can bring several benefits, among them, information control. With the proper management of engineering project information, budgets and schedules in a single location, it is possible to help organize and plan current and future works. Understanding how the items and sub-items of each budget interact with each other can help create models that detect patterns, increasing the assertiveness rate of unit values, as well as the deadline for each step in the schedules.

Based on access to historical data, it is also possible to detect and analyze indicators of projects in all disciplines, with the aim of assessing divergences. At the same time, historical data from the company’s previous projects, together with publicly available data, allow forecasts to be made and the optimal use of resources to mitigate risks before they affect project margins. Data Science can also be used to predict temporal conditions, producing a high positive impact on the construction schedule, preventing, for example, that on days scheduled to develop the concreting of a given structural element, there are no problems or delays in the process due to rain. With the help of this technology and based on historical data, it is also possible to predict the costs of a construction, allowing greater assertiveness of the budget and in each constructive stage.

___________________________________________________________________________________________________________________________________________________________________________________________________

Sequentially, the centralization of information regarding the storage of work materials can help control the entry and exit of materials, in order to understand the needs of the work regarding each of the inputs. Based on the assumptions of Machine Learning, it is possible to develop predictive models to know when it will be necessary to purchase a certain material, to know the period of useful life of that same material during the course of the work and to understand its performance in different types of use, thus generating a reduction in the waste of materials. Based on the same assumptions and with the use of equipment with IOT (Internet of Things) networks, it becomes possible to identify when a certain piece of equipment on the job will need maintenance or some type of intervention, before it even happens, contributing to the flow positive aspect of construction planning.

Data Science can also contribute in a way related to Civil Construction professionals. The centralization of information regarding the operational team can help control the productivity and performance indicators of each of the professionals working on the job. Based on the assumptions of Machine Learning, it is possible to detect employee patterns and, with access to historical data, develop a visualization model, in which the productivity of each employee is presented, referring to each of the services provided, helping in the control of decision by the manager.

With models based on the premises of Artificial Intelligence and work safety, it is possible to associate image tagging and analysis, identify and analyze safety risks and send alerts when some personal protective equipment is not being used properly in the workplace. This technology can even be used to identify who is violating safety standards and tag supervisors to resolve the issue. In the long term, it is possible to store this information so that in future works it will be possible to categorize risks and prioritize safety issues throughout the construction life cycle.

___________________________________________________________________________________________________________________________________________________________________________________________________

The combination of Data Science and other construction technologies makes it possible to even improve the relationship between construction companies and their customers. Having relevant information on hand to present and develop strategies for the project can positively impact the relationship with the client. With the storage of consistent data, in addition to keeping the client informed about the progress of the work, it can bring greater visibility on how financial resources are being used, creating total transparency.

Finally, several studies point to the civil construction industry as one of the least digitized sectors and most resistant to the adoption of new technologies. However, as previously mentioned, several technological tools are already responsible for major changes in the sector, bringing more security, efficiency and transparency to the processes of the entire construction production chain. Companies that insist on not adopting technological solutions like these will soon no longer have a competitive advantage over their competitors, which could jeopardize the future of the business.
",0,0,1,0,construction,"[civil-engineering, construction, data-analysis, data-science, optimization-algorithms]",23
ubeevn,sinaea-industry-and-factory-html-template,ubeevn,https://github.com/ubeevn/sinaea-industry-and-factory-html-template,https://api.github.com/repos/sinaea-industry-and-factory-html-template/ubeevn,,,0,0,2,0,construction,"[bootstrap4, construction, ecommerce, furniture, html, shop]",23
Chris0925-coder,InversionesBryan-S.A.,,https://github.com/Chris0925-coder/InversionesBryan-S.A.,https://api.github.com/repos/InversionesBryan-S.A./Chris0925-coder,"Inversiones Bryan, S.A.","Inversiones Bryan, S.A.
Panamá, Panamá City",0,0,1,0,construction,"[construction, constructora, panama-city, remodelaciones]",23
AlexeyMarzan,floorGuide,,https://github.com/AlexeyMarzan/floorGuide,https://api.github.com/repos/floorGuide/AlexeyMarzan,Simle example app to help count number of parquetry bars on a floor,"# floorGuide
http://jsfiddle.net/soxbdar9/561/
",0,0,1,0,construction,"[construction, floor, math]",23
verhoeven-leenders,VL-LOD,verhoeven-leenders,https://github.com/verhoeven-leenders/VL-LOD,https://api.github.com/repos/VL-LOD/verhoeven-leenders,Workspace for proof of concept of internal Linked Open Data implementation,"# VL-LOD
Proof of concept for internal Linked Open Data implementation within the company [Ingenieursbureau Verhoeven en Leenders bv](http://www.verhoeven-leenders.nl).

The following ontologies will be used as a base for the data model:
- [COINS](http://www.coinsweb.nl/wiki2/index.php/Welcome_to_the_COINS_wiki_pages)
- ICDD ([Part 1](https://www.iso.org/standard/74389.html), [Part 2](https://www.iso.org/standard/74390.html))

The application will most likely be built in Python using [IfcOpenShell](https://github.com/IfcOpenShell/IfcOpenShell).

## UML Schema
![Image of VL-LOD Schema in UML](../master/UML/VL_LOD.uml.png ""VL-LOD Schema in UML"")

.uml file available [here](../master/UML/VL_LOD.uml) (Created in [Modelio](https://www.modelio.org/)).

## License
The information in this repository is available for use under [MIT License](../master/LICENSE).
",0,0,2,0,construction,"[construction, linked-open-data, semantic-web]",23
KentaroV2,excel-first,,https://github.com/KentaroV2/excel-first,https://api.github.com/repos/excel-first/KentaroV2,This project provides a set of VBA (Visual Basic for Applications) libraries running on Microsoft Excel for (a) taking advantage of original Excel functionalities and for (b) smoothly deploying your applications to your business since most of companies use Microsoft Excel compliant with companies IT policies.,,0,0,2,7,construction,"[construction, excel, vba]",23
alicika,csv_taxonomy,,https://github.com/alicika/csv_taxonomy,https://api.github.com/repos/csv_taxonomy/alicika,"A webapp that reads and classifies csv data, with use of the k-means method.","<div align=""center"">

  <h1><code>wasm-pack-template</code></h1>

  <strong>A template for kick starting a Rust and WebAssembly project using <a href=""https://github.com/rustwasm/wasm-pack"">wasm-pack</a>.</strong>

  <p>
    <a href=""https://travis-ci.org/rustwasm/wasm-pack-template""><img src=""https://img.shields.io/travis/rustwasm/wasm-pack-template.svg?style=flat-square"" alt=""Build Status"" /></a>
  </p>

  <h3>
    <a href=""https://rustwasm.github.io/docs/wasm-pack/tutorials/npm-browser-packages/index.html"">Tutorial</a>
    <span> | </span>
    <a href=""https://discordapp.com/channels/442252698964721669/443151097398296587"">Chat</a>
  </h3>

  <sub>Built with 🦀🕸 by <a href=""https://rustwasm.github.io/"">The Rust and WebAssembly Working Group</a></sub>
</div>

## About

This is a webapp that reads csv data and reflects it into a well-coloured graph with the use of k-means method.<br>
Currently, the main feature is under construction because it does not allow loading wasm modules.<br>
You can start this app with :
```
cd www
npm start
```

[**📚 Read this template tutorial! 📚**][template-docs]

This template is designed for compiling Rust libraries into WebAssembly and
publishing the resulting package to NPM.

Be sure to check out [other `wasm-pack` tutorials online][tutorials] for other
templates and usages of `wasm-pack`.

[tutorials]: https://rustwasm.github.io/docs/wasm-pack/tutorials/index.html
[template-docs]: https://rustwasm.github.io/docs/wasm-pack/tutorials/npm-browser-packages/index.html

## 🚴 Usage

### 🐑 Use `cargo generate` to Clone this Template

[Learn more about `cargo generate` here.](https://github.com/ashleygwilliams/cargo-generate)

```
cargo generate --git https://github.com/rustwasm/wasm-pack-template.git --name my-project
cd my-project
```

### 🛠️ Build with `wasm-pack build`

```
wasm-pack build
```

### 🔬 Test in Headless Browsers with `wasm-pack test`

```
wasm-pack test --headless --firefox
```

### 🎁 Publish to NPM with `wasm-pack publish`

```
wasm-pack publish
```

## 🔋 Batteries Included

* [`wasm-bindgen`](https://github.com/rustwasm/wasm-bindgen) for communicating
  between WebAssembly and JavaScript.
* [`console_error_panic_hook`](https://github.com/rustwasm/console_error_panic_hook)
  for logging panic messages to the developer console.
* [`wee_alloc`](https://github.com/rustwasm/wee_alloc), an allocator optimized
  for small code size.
",0,0,1,0,construction,"[construction, in, module-works]",23
nataliasimoes,triplice-espera,,https://github.com/nataliasimoes/triplice-espera,https://api.github.com/repos/triplice-espera/nataliasimoes,Página de espera do site da empresa Tríplice Construção,,0,0,1,0,construction,"[construction, css, under-construction]",23
michaelpanorios,timeseries-analysis-and-forecasting,,https://github.com/michaelpanorios/timeseries-analysis-and-forecasting,https://api.github.com/repos/timeseries-analysis-and-forecasting/michaelpanorios,Timeseries data analysis and forecasting using Python,"# Time-series analysis and forecasting
The purpose of this study is to analyze the COVID-19 time series for different geographical areas of a country. In particular, a data set is given in which the number of COVID-19 cases is recorded on a daily basis for different regions of Germany for a period of one year. There are basically many time series - one for each area. The number of cases is cumulative, ie the number given in the file for a date refers to the total number of cases up to that date. Also time series analysis techniques for the study of the whole. Specifically, the construction of a predictive model is required, the evaluation of accuracy.

## As a beginner
For the elaboration of the work, I had to spend the first hours reading the relevant slides as well as various other sources of the internet, in order to understand the study of time series and the creation of predictive models. After completing the above I proceeded on building the code. First, I tried to parse the given txt file, and then I tried to subtract all the days with yesterday so as to identify the daily cases and not their cumulative. Next, I created the methods named `time-series`, `mse_and_rmse`, `and forecast`.

## Problems and solutions
I thought that because the number of cities is large, it was a good practice to look up the file in the main based on the id of each city in order to automate the process for each city. The detailed explanation follows the technical report. Finally, the problems I encountered were in the construction of the predictive model as I used various techniques and libraries which did not bring proper results. However, the technique I eventually used solved my problem.

## Tools
For the work I used Python which is the best language for data analysis, as it has a very user-friendly interface and a multitude of packages and libraries that speed up the process of analysis in large files, which ultimately simplifies the methodology and saves significant time. compared to other programming languages. Finally, the libraries I used in the project are the following:

• Matplotlib.pyplot: for the construction of graphs. 

• Sklearn.metrics: for calculating MSE and RMSE. 

• Pandas: to identify the text file.

## Reading the report
Unfortunately, the report is in Greek language. The file that contains the analysis of code and the methodologies is uploaded with the name of ***Τεχνική Αναφορά.pdf***. I have also uploaded all the time-series graphs of each city based on ***data.txt*** file.
",0,0,1,0,construction,"[construction, predictive-models, series-analysis]",23
pfabo,STEMFIE-X,,https://github.com/pfabo/STEMFIE-X,https://api.github.com/repos/STEMFIE-X/pfabo,An open source platform for creative people,"# STEMFIE-X

 ![banner](./doc-sk/img/banner_02.png)
 
### An open source platform for creative people based on STEMFIE and openSCAD 

The STEMFIE-X library is an extension of the [STEMFIE](https://www.stemfie.org/) project, it uses its basic principles with modifications for use as a platform for creating more complex structures and models using mechanical and electronic elements - motors, servos, electronic circuits and control by microcontrollers. The building kit is primarily intended for polytechnic teaching at secondary schools and the first semesters of universities in the teaching of parametric modeling, CAD systems, constructions of machines and mechanisms.

The purpose of the construction library development was to support polytechnic education for secondary schools, to support creative thinking, to acquire basic skills in the design and construction of own devices from sketch, design in CAD program to physical realization using 3D printing.

Areas of use:

- an intermediate level in teaching between constructions from construction kits and independent construction in professional CAD systems, with direct physical output of 3D printing of self-constructed devices and systems, primarily intended for the age category of high school students
- robotics, robotic parts and components, arms, manipulators, robotic chassis
- models of machines and equipment
- models and teaching aids for subjects focusing on the construction of machine parts
- teaching and demonstration aids for physics, electronics, sets of experiments, sets for demonstrations of electric motors, kits for sample electric circuits
- functional mechatronic and electromechanical units – simple plotter, irrigation system, small CNC milling machine ...

 ![banner](./doc-sk/img/banner_02.png)

### Installation
* see [STEMFIE-X Wiki](https://github.com/pfabo/STEMFIE-X/wiki) 

### Documentation (jupyter notebook) 
* [Documentation](./doc-en/0001_obsah.ipynb) (EN)
* [Dokumentácia](./doc-sk/0001_obsah.ipynb) (SK)


### Source code  (openSCAD)
* [Libraries](./lib/) 
* [Examples & Demos](./src/)
  * Basic construction
  * Simple machines and mechanical parts
  * Motors and servos
  * Support for electronics and electroics modules 

### Demo - Basic building blocks
```
// source code
BU_Ty(3) beam_block([2,2,1]);
BU_Tx(-2) brace(5);
BU_Ty(-3) beam_block([3,1,1], holes=[false, false, true]);
```

 ![demo02](./doc-sk/img/demo_02.png)

### Demo - Simple gearbox
```
color(""red"")  BU_Tz(1+1/8) brace(3);
color(""red"")  BU_Tz( -1/8) brace(3);

// double gear 
spur_gear (modul=1, tooth_number=28, width=5, bore=4, optimized=false); 
BU_Tz(1/2)  spur_gear (modul=1, tooth_number=12, width=BU/2, bore=4, optimized=false);

// simple gear
color(""green"") BU_Tz(1/2) BU_Tx(2) Rz(6)      
spur_gear (modul=1, tooth_number=28, width=BU/2, bore=4,  optimized=false);      
 
// axes 
TKx(2*BU) color(""blue"") BU_Tz(1/2) Cy(2, 20); 
```
 ![demo02](./doc-sk/img/demo_01.png)

     
 ![banner](./doc-sk/img/banner_02.png)
",0,0,1,0,construction,"[3d-models, 3d-printing, construction, electronics, mechatronics, openscad, openscad-library, stemfie]",23
Premanand88,Build-an-Apartment,,https://github.com/Premanand88/Build-an-Apartment,https://api.github.com/repos/Build-an-Apartment/Premanand88,,"# Build-an-Apartment
The Pleasant view apartment, you have option to navigate to different positions inside the room.

Features:
	Animated globe that starts rotating/stop on button click
Cloch showing the actual time.


SW versions used:
GVR Unity SDK v1.70.0
Unity 2017.1.0p4	
	


",0,0,0,0,construction,"[apartment, construction, csharp, interior, modleing, udacity, unity3d, vr]",23
bimaround,bimaround-sharp,bimaround,https://github.com/bimaround/bimaround-sharp,https://api.github.com/repos/bimaround-sharp/bimaround,REST Client library for bimaround.com,,0,0,2,0,construction,"[bim, bimaround, construction]",23
KyleGaunt,ContractInstructionModule,,https://github.com/KyleGaunt/ContractInstructionModule,https://api.github.com/repos/ContractInstructionModule/KyleGaunt,Mobile and desktop application for issuing and interacting with Contract Instructions.,"## ⚡Quick Links:zap:
### Project Management
  <a id=""SlackURL"" target=""_blank"" href=""https://join.slack.com/t/contractinstr-w7z2139/shared_invite/zt-qbjgyzk4-H~7abajx7GNOWU6AVowRBw"">Slack Page</a>
  <br>
  <a id=""ZenhubURL"" target=""_blank"" href=""https://app.zenhub.com/workspaces/software-engineering-team-609bb8556f840f000e074222/board"">Zenhub Page</a>
  <br>
  
### User Manual
 <a id=""UserManual"" target=""_blank"" href=""https://github.com/KyleGaunt/ContractInstructionModule/blob/e9a0966cf19e6bae732bc52c16b1b17d860eced9/Documentation/UserManual_CI_Application.pdf"">User Manual</a>

### About the Project
The Contract Instruction Application has been designed to make the issuing, tracking and closing of CIs as simple and effective as possible. It allows users to send, receive and interact with CIs in real-time and on-the-go, be it in a corporate setting or on an active building site. The project uses cloud based infrastructure and is built on the React Native framework in order to be offered to Android, iOS and web-based users.

### Developer Email
u15330967@tuks.co.za
<hr>

<p align=""center"">
  <img width=""15%"" height=""30%"" src=""https://user-images.githubusercontent.com/48382034/117657527-f399fd00-b199-11eb-94b9-9c1735818ef1.png"">
  <h1 align=""center"">The Contract Instruction Application</h1>
</p>
<br>

<p align=""center"">
  <h2 align=""center"">Introduction</h2>
</p>
<br>
A Contract Instruction (henceforth CI) has an impact on the various resources of a construction project, be it time, materials or monetary. Due to the importance of the CI in the role of construction, it is vital that construction professionals keep track of and adhere to its contents.

Currently, the process of issuing, editing and interacting with CIs is still done with pen and paper on site, typed up and finalized at the creator’s place of work and then distributed using email chains between all involved parties. This means that all relevant information is provided in plain text and must therefore be organised into their relevant categories by each person involved. There is no error checking or notification system to ensure that CIs are being created accurately and alerting users as soon as one is created. 

There is a significant space for innovation and a bespoke application that can improve the process from the creation on site all the way through to the distribution of the final document.

In order to solve the aforementioned problems, the Contract Instruction Application has been designed to make the issuing, tracking and closing of CIs as simple and effective as possible. It allows users to send, receive and interact with CIs in real-time and on-the-go, be it in a corporate setting or on an active building site. The project must be accessible on both mobile devices and desktop to cater for all users, be they more office-bound or on-site professionals.

Users can issue a new instruction, specify which areas of the project will be affected, and create custom lists of contacts with which the instruction will be shared. Depending on user privileges, the receiver will be able to interact with the CI accordingly and all relevant parties will be updated in the event of any changes.

The system includes a full reporting suite which will include reports on the project as a whole, as well as user-defined filtered reports on CIs that meet the specified criteria. The reports can be sent out via email to any user(s) specified by the creator of the CI.

<details>
<summary>About the Developer</summary>
  <p align=""center"">
    <img width=""15%"" height=""25%"" src=""https://user-images.githubusercontent.com/48382034/117629437-757a2e00-b17a-11eb-8ea0-b3969cfbb1c4.jpg"">
  </p>
  <br>
  
  Name: _Kyle Gaunt_
  <br>
  Degree: _Bachelor of Science Information Technology in Information and Knowledge Systems_
  <br>
  
  Skills:
  * _Software development_
  * _Problem solving_
  * _Client interaction_
  * _Collaboration and teamwork_
  * _Time management and organization_

  Interests:
  * _Software engineering_
  * _Developing applications and algorithms to solve problems_
  * _Cryptocurrency_
  * _Travel_
  * _Gaming_
  <br>
  <a id=""raw-url"" href=""https://www.linkedin.com/in/kvgaunt"">Check out my LinkedIn profile</a>
</details>

<details>
<summary>Documentation</summary>
  <br>
  <a href=""https://github.com/KyleGaunt/ContractInstructionModule/blob/fb0d3d7b952314d48d6bb9ebd49e7e4d53e2286b/Documentation/SoftwareRequirementsSpecification_CIApplication.pdf"" target=""_blank"">Software Requirements Specification</a>
  <br>
  
  <a href=""https://github.com/KyleGaunt/ContractInstructionModule/blob/e9a0966cf19e6bae732bc52c16b1b17d860eced9/Documentation/UserManual_CI_Application.pdf"" target=""_blank"">User Manual</a>
  <br>
</details>

<details>
<summary>Project Management Tools</summary>
  <a id=""TrelloURL"" target=""_blank"" href=""https://trello.com/b/WOpeWQzv/todo"">Trello Board</a>
  <br>
  <a id=""SlackURL"" target=""_blank"" href=""https://app.slack.com/client/T021UHC43C4/C021NCP1SRG"">Slack Page</a>
</details>

<!--
[![Kyle's](https://github-readme-stats.vercel.app/api?username=kylegaunt&show_icons=true&theme=vision-friendly-dark)](https://github.com/anuraghazra/github-readme-stats)
-->

",0,0,2,12,construction,[construction],23
build3foundation,spam-prevention-theory,build3foundation,https://github.com/build3foundation/spam-prevention-theory,https://api.github.com/repos/spam-prevention-theory/build3foundation,Spam prevention protocols focused on protecting the risk of all parties.,"# Construction Administration Spam Prevention Theory
A WIP paper with the hypothesis that strict measures and calculus to keep change-reqeust spam under control ultimately lead to a better result, a safer building, and a stronger business relationship.

Ultimately what is being proposed and considered in thei work in progress paper is a decision making framework that can automate the calculus regarding the risk of saying ""yes"" every time someone asks for help.

Note from how weight is calculated on Substrate, which prevents DDoS (ie spam) attacks:

Why benchmark a pallet
Denial-of-service (DoS) is a common attack vector for distributed systems, including blockchain networks. A simple example of such an attack would be for a user to repeatedly execute an extrinsic that involve intensive computation. To prevent users from spamming the network, we charge fee to the user for making that call. The cost of the call should reflect the computation and storage cost incurred to the system such that the more complex the call, the higher the fee. However, we still want to encourage users to use our blockchain system, so we also want this estimated cost to be relatively accurate so we don't charge users more than necessary.


",0,0,0,0,construction,"[construction, decision-making, risk]",23
LuisJSousa,Portuguese-Public-Procurement-Database,,https://github.com/LuisJSousa/Portuguese-Public-Procurement-Database,https://api.github.com/repos/Portuguese-Public-Procurement-Database/LuisJSousa,"Portuguese Public Procurement Database (PPPData) is a dataset, in two file formats, comprised of more than 5000 procurement contracts with 37 distinct properties","# Portuguese-Public-Procurement-Database

Portuguese Public Procurement Database (PPPData) is a dataset, comprised of more than 5000 procurement contracts with 37 distinct properties ranging from 2015 to 2022. PPPData offers a rawdata file in json and a treated in xlsx.
The authors of the database provide additional documentation in order to facilitate de comprehension and manipulation of the publish data.

## Tabela explicativa propriedades dos contratos (pt)

|Nome |	Descrição	|Esquema de Codificação	|Unidade de medição|
| ------------- |:-------------:|:-------------:| -----:|
|ID|Número de Identificação|	Inteiro|	N/A|
|Descrição Breve|	Descrição breve do objeto do contrato|	Texto|	N/A|
|Cpvs|	Código Cpvs|	Texto|	N/A|
|Designação Cpvs|	Designação do código Cpvs|	Texto|	N/A|
|Critério Ambiental|	Se o critério ambiental foi considerado no concurso (VERDADEIRO-FALSO)|	Lógico|	N/A|
|Ano de publicação|	Ano de publicação do concurso em Diário da Républica|	Data|	N/A|
|Ano de fecho|	Ano de fecho do processo no Portal Base	Data	N/A|
|País|	País de execução da obra	|Texto|	N/A|
|Município|	Município de execução da obra|Texto|	N/A|
|Distrito|	Distrito da execução da obra	|Texto|	N/A|
|Código de Distrito|	Código identificador de distrito, organizado por ordem alfabética e numerado de 1 a 20	|Inteiro|	N/A|
|Prazo de submissão|	Prazo de submissão da proposta	|Inteiro|	Dias|
|Data de celebração|	Data de celebração do Contrato	|Data|	dd-mm-aaaa|
|Data de fecho|	Data de fecho do processo no Portal Base	|Data|	dd-mm-aaaa|
|Diferença entre data de celebração e fecho|	Diferença entre data de celebração e fecho	|Inteiro|	Dias|
|Prazo de execução|	Prazo previsto para a execução da obra|	Inteiro|	Dias|
|Preço Base|	Preço base para propostas a concurso|	Monetário|	€|
|Preço Inicial|	Preço inicial acordado entre adjudicatário e adjudicante	|Monetário|	€|
|Categoria Preço I.|	1 - Entre 0 e 250 mil; 2 - entre 250 mil e 1 Milhão; 3 – acima de 1 Milhão |	Inteiro|	N/A|
|Preço Efetivo|	Preço efetivo no final da obra|	Monetário	|€|
|Diferença de preço|	Diferença entre preço inicial e preço efetivo|	Monetário|	€|
|Percentagem da Diferença de preço|	Preço Inicial dividido pelo Preço Efetivo	|Percentagem	|Percentagem|
|Critério de adjudicação|	Critério de adjudicação utilizado classificar as propostas durante o concurso público	|Texto|	N/A|
|Categoria do Critério de adjudicação|	1 - Critério multifator; 2 - Critério preço mais baixo; 0 - Critério de adjudicação em falta	|Inteiro|	N/A|
|Classificação do critério multifator|	Peso do fator “preço” no critério multifator|	Percentagem	|Percentagem|
|Caução|	Valor da caução, se aplicável |Alfanumérico	|Percentagem, lógico|
|Publicado no Jornal EU|	Se o contrato foi publicado em jornal da união europeia	|Lógico	|N/A|
|Tipo de fim do contrato|	1 – Cumprimento integral do contrato 2 – Cumprimento não integral do contrato	|Texto|	N/A|
|Número de concorrentes|	Número de concorrentes do concurso	|Inteiro	|N/A|
|Envolve aquisição conjunta|	Se o contrato envolve aquisição por várias entidades (VERDADEIRO-FALSO-N/A)	|Lógico|	N/A|
|Adjudicado por uma central de compras|	Se o contrato foi adjudicado por uma central de compras (VERDADEIRO-FALSO-N/A)|	Lógico|	N/A|
|Celebração de um acordo quadro|	Se o contrato foi celebrado por um acordo quadro (VERDADEIRO-FALSO-N/A)|	Lógico	|N/A|
|Leilão eletrónico|	Se o contrato foi executado com recurso a leilão eletrónico (VERDADEIRO-FALSO-N/A)	|Lógico|	N/A|
|Adotada uma fase de negociação|	Se foi adotada uma fase de negociação (VERDADEIRO-FALSO-N/A)	|Lógico|	N/A|
|Contratação por lotes|	Se a contratação se realizou por lotes (VERDADEIRO-FALSO-N/A)|	Lógico|	N/A|
|Justificação para mudança de prazo|	Justificação para mudança de prazo (formato livre)|	Texto	|N/A|
|Justificação para mudança de preço|	Justificação para mudança de preço (formato livre)	|Texto|	N/A|

## Explanatory table of contract properties (EN)

|Name |	Description	|Coding scheme	|Unit of measurement|
| ------------- |:-------------:|:-------------:| -----:|
|ID|Identification Number|	Integer|	N/A|
|Short Description| Short description of the object of the contract| Text|	N/A|
|Cpvs| Cpvs Code| Text| N/A|
|Cpvs denomination| Cpvs code designation| Text| N/A|
|Environmental Criterion| Whether the environmental criterion was considered in the tender (TRUE-FALSE)| Logical| N/A|
|Publication year| Year of publication of tender in the Diário da República| Date| N/A|
|Closing Date| Year of closing in the Base Portal| Date| N/A|
|Country|Country of execution of the project |Text| N/A|
|Municipality|Municipality where the work is carried out|Text| N/A|
|District| District where the work is carried out |Text| N/A|
|District| District Identifier Code, organized alphabetically and numbered 1 to 20 |Integer| N/A|
|Submission deadline| Deadline for proposal submission |Integer| Days|
|Closing Date| Date of Contract |Date| dd-mm-yyyy|
|Closing Date| Closing Date of the Process in the Base Portal |Date| dd-mm-yyyy|
|Difference between signing and closing date |Difference between signing and closing date |Integer| Days|
|Delay| Expected deadline for execution of the work| Integer| Days|
|Base Price| Base price for tenders| Currency|€|
|Starting Price|Starting Price agreed between contractor and tenderer| Currency|€|
|Price Category I.| 1 - Between 0 and 250 thousand; 2 - between 250 thousand and 1 Million; 3 - over 1 Million | Integer| N/A|
|Price Effective| Price effective at the end of the work| Currency |€|
|Price Difference| Difference between initial price and effective price| Currency| €|
|Percentage of the Price Difference|Starting Price divided by the Effective Price |Percentage |Percentage|
|Award Criteria|Allocation criteria used to rank bids during a public tender |Text| N/A|
|Award Criteria Category| 1 - Multifactor Criterion; 2 - Lowest Price Criterion; 0 - Missing Award Criterion |Integer| N/A|
|Classification of multifactor criteria| Weight of the ""price"" factor in the multifactor criterion |Percentage| N/A|
|Deposit| Value of collateral, if applicable |Alphanumeric |Percentage, logical|
|Published in the EU journal| If the contract was published in an EU journal |Logical |N/A|
|Contract end date| 1 - Fulfilment of contract 2 - Non-fulfilment of contract |Text| N/A|
|Number of bidders| Number of bidders in the tender |Inteiro |N/A|
|End of contract type|2 - Non-fulfillment of contract 2 - Contract performance 2 - Non-fulfillment of contract |Text| N/A| 
|Number of bidders | Number of bidders in the tender |Integer |N/A|
|Awarded by a central purchasing body| If the contract was awarded by a central purchasing body (TRUE-FALSE-N/A) | Logical| N/A|
|Framework agreement| If the contract was concluded by a framework agreement (TRUE-FALSE-N/A)| Logical| N/A|
| Electronic auction| Whether the contract was executed by electronic auction (TRUE-FALSE-N/A) | Logical| N/A|
| Negotiation phase | If a negotiation phase was adopted (TRUE-FALSE-N/A) |Logical| N/A|
|Procurement in lots| Whether the procurement was conducted in lots (TRUE-FALSE-N/A) | Logical| N/A|
|Justification for deadline change | Justification for deadline change (free format)| Text |N/A|
|Justification for price change| Justification for price change (free format) |Text| N/A|

## License

MIT License

Copyright (c) 2022 Luís Jacques de Sousa, João Poças Martins and Luís Sanhudo

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the ""Software""), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.

All research papers published using PPPData must cite the work of the authors of this project. The correct way to cite this work is provided in the ""Citation"" section below.

## Citation

If you use PPPData, please cite it using these metadata

```
TY  - BOOK
AU  - Jacques de Sousa, Luís
AU  - Martins, João
AU  - Sanhudo, Luís
PY  - 2022/12/07
SP  - 
T1  - Base de dados: Contratação pública em Portugal entre 2015 e 2022
ER  - 
```
",0,0,1,0,construction,"[civil-engineering, construction, procurement-data, tender-documents]",23
Smootheconstruction,smoothelive,,https://github.com/Smootheconstruction/smoothelive,https://api.github.com/repos/smoothelive/Smootheconstruction,"Smoothe Construction is a locally owned and operated handyman service in Conyers, GA. We offer a wide range of services, from small repairs to major renovations. We are committed to providing our customers with high-quality work at a fair price. ",# smoothelive,0,0,1,0,construction,"[cleaning, construction, handyman, handymannearme, labor, remodeling, repair-service]",23
Prasad179,L_T_EduTech_Hackathon_at_SHAASTRA_IITM,,https://github.com/Prasad179/L_T_EduTech_Hackathon_at_SHAASTRA_IITM,https://api.github.com/repos/L_T_EduTech_Hackathon_at_SHAASTRA_IITM/Prasad179,Cracks in bridges is major concern. This project uses deep learning framework with transfer learning to develop crack detection model.,"# L&T EduTech Hackathon at SHAASTRA IITM

## Problem Statement 1:
Description: Concrete cracking is a major issue in Bridge Engineering. Detection of cracks facilitates the design, construction and maintenance of bridges effectively.

### Requirement Specification:
Develop a suitable Deep Learning framework which can detect the crack in the image from the dataset

### Judging Metrics:
Provide Precision, Recall and F1 score as Judging metrics

### Dataset Description:
There are 600 iamges which contains 300 images of cracked surface and 300 of non-cracked images. In the test and validation dataset there are 200 images in each dataset.

### Results and discussion:

From the literature, we have selected MobilenetV2 as our pretrained model, as it performs better than many other models, and it is light weight model. We have used fine tuning for our model. After fine tuning accuracy of model increases.

The following results are of test dataset. The accuracy of model is 98% and weighted F1 score is 98%.

| Class Name    |   Precision    |  Recall | F1 Score |
| ------------- | -------------- | --------|----------|
|  Non-cracked  |     0.97       |   1.0   |   0.99   |
|  Cracked      |     1.0        |   0.97  |   0.98   |



## Problem Statement 3:
### Description: 
Natural disasters and atmospheric anomalies demand remote monitoring and maintenance of naval objects especially big-size ships. For example, under poor weather conditions, prior knowledge about the ship model and type helps the automatic docking system process to be smooth. Thus, this set aims to classify the type of ships from an image data set of ships.

### Requirement Specification:
1. Design transfer learning-based CNN architecture to classify the data set
2. Identify an optimal training data size in percentage
### Judging Metrics: Kappa score
### Dataset Description:
There are 6252 images in train and 2680 images in test data. The categories of ships and their corresponding codes in the dataset are as follows -

There are 5 classes of ships to be detected which are as follows:

1. Cargo
2. Military
3. Carrier
4. Cruise
5. Tankers

To design transfer learning based CNN architecture, I have compared five pretrained CNN models. In those model I have not used fine tuning as it was resulting in low accuracy. To select the best among them, I have considered the weighted F1 score as a metric, as the problem is an imbalanced multi-class classification problem.

They are as follows:
1. MobilenetV2
2. Resnet152V2
3. Efficientnet
4. VGG19
5. Xception

Looking at the results, we can see that Resnet152V2 and VGG19 are out of competition as the best CNN architecture for our particular problem. MobilenetV2, Efficientnet, and Xception are giving nearly the same F1 score. MobilnetV2 and Xception are lightweight architectures. Between those two, I have selected Xception for further analysis.

### Results and discussion:

On the top of Xception model, I have added one Conv2D, one dropout layer to avoid overfitting, one GlobalAveragePooling2D and last layer is dense layer which gives probabilities of each class with the help of softmax activation function.

The developed model with **Xception** gives **accuracy** approximately around **92%-93%** and weighted **F1 score** around **0.92**. These results are after **20 epochs**. If we increase epochs, accuracy increases slightly.

To get optimum training dataset, I have splitted data as 90% training, 5% validation data and 5% test data. From the 90% data, I have splitted data from 10% to 80%.
The same Xception architecture is used for comparison. From the results one can observe that, there is no much difference in Kappa score for 70% training data and 80% training data. Hence we can conclude that optimum training data for training is approximately 70% of dataset.

**Kappa Score for 70% training data = 0.9465**

**Kappa Score for 80% training data = 0.9467**

Code for selection of pretrained model is in the PS_3_1.ipynb file. I have ran this code on Google Colab. To access data, we have to upload kaggle.json file in the content folder in Colab.

Code for optimum training dataset is in PS_3_2.ipynb file. In this code, the graph of Kappa score vs training data has mistake in X axis scale. It should be from 0.1 to 0.8. I have ran this code on Kaggle. I have directly added data from kaggle, we can add data in the notebook.

In the PS_3_2_modified.ipynb, I have corrected small mistake in graph and re-ran again. This is giving some interesting results.

**Kappa score for 60% training data = 0.9383**

**Kappa score for 70% training data = 0.9341**

**Kappa score for 80% training data = 0.9344**

As we can see from above results, Kappa score corresponding to 60% is slightly higher, but from previous run and this modified code, one can conclude that **70% training data** is optimum for model and accuracy can be increased by increasing epochs.
",0,0,1,0,construction,"[construction, mobilenetv2, resnet, transfer-learning, vggnet]",23
mrToddman,wireCalculatorAC,,https://github.com/mrToddman/wireCalculatorAC,https://api.github.com/repos/wireCalculatorAC/mrToddman,"This calculator sizes conductors for AC circuits 2,000V or less.","# wireCalculatorAC
This calculator sizes conductors for AC circuits 2,000V or less.

Minimum conductor sizes based on NEC article 310, grounding based on NEC article 250, and AC impedance sourced from modified NEC chapter 9 table 9 for voltage drop. This calculator does not yet select the greater wire size with the above with 125%FLA NEC tabe look up.

Please double check all answers, this is still in testing phase. Don’t cross check this with Southwire’s calculator because their calcultor incorrectly assumes aluminum wire is in aluminum conduit and copper wire is in steel conduit. Please cross check by hand.
",0,0,1,0,construction,"[ac, construction, electrical-engineering, electrician, nec, voltage-drop, voltage-drop-calculator, voltagedrop, wire-calculator, wire-size, wirecalculator, wiresize]",23
block-foundation,solidity-digital-twin,block-foundation,https://github.com/block-foundation/solidity-digital-twin,https://api.github.com/repos/solidity-digital-twin/block-foundation,Solidity Smart Contract: Digital Twin,"<div align=""right"">

[![GitHub License](https://img.shields.io/github/license/block-foundation/blocktxt?style=flat-square&logo=readthedocs&logoColor=FFFFFF&label=&labelColor=%23041B26&color=%23041B26&link=LICENSE)](https://github.com/block-foundation/solidity-digital-twin/blob/main/LICENSE)
[![devContainer](https://img.shields.io/badge/Container-Remote?style=flat-square&logo=visualstudiocode&logoColor=%23FFFFFF&label=Remote&labelColor=%23041B26&color=%23041B26)](https://vscode.dev/redirect?url=vscode://ms-vscode-remote.remote-containers/cloneInVolume?url=https://github.com/block-foundation/solidity-digital-twin)

</div>

---

<div>
    <img align=""right"" src=""https://raw.githubusercontent.com/block-foundation/brand/master/src/logo/logo_gray.png"" width=""96"" alt=""Block Foundation Logo"">
    <h1 align=""left"">Digital Twin</h1>
    <h3 align=""left"">Block Foundation Smart Contract Series [Solidity]</h3>
</div>

---

<img align=""right"" width=""75%"" src=""https://raw.githubusercontent.com/block-foundation/brand/master/src/image/repository_cover/block_foundation-structure-03-accent.jpg""  alt=""Block Foundation Brand"">

### Contents

- [Introduction](#introduction)
- [Colophon](#colophon)

<br clear=""both""/>

---

<div align=""right"">

[![Report a Bug](https://img.shields.io/badge/Report%20a%20Bug-GitHub?style=flat-square&&logoColor=%23FFFFFF&color=%23E1E4E5)](https://github.com/block-foundation/solidity-digital-twin/issues/new?assignees=&labels=Needs%3A+Triage+%3Amag%3A%2Ctype%3Abug-suspected&projects=&template=bug_report.yml)
[![Request a Feature](https://img.shields.io/badge/Request%20a%20Feature-GitHub?style=flat-square&&logoColor=%23FFFFFF&color=%23E1E4E5)](https://github.com/block-foundation/solidity-digital-twin/issues/new?assignees=&labels=Needs%3A+Triage+%3Amag%3A%2Ctype%3Abug-suspected&projects=&template=feature_request.yml)
[![Ask a Question](https://img.shields.io/badge/Ask%20a%20Question-GitHub?style=flat-square&&logoColor=%23FFFFFF&color=%23E1E4E5)](https://github.com/block-foundation/solidity-digital-twin/issues/new?assignees=&labels=Needs%3A+Triage+%3Amag%3A%2Ctype%3Abug-suspected&projects=&template=question.yml)
[![Make a Suggestion](https://img.shields.io/badge/Make%20a%20Suggestion-GitHub?style=flat-square&&logoColor=%23FFFFFF&color=%23E1E4E5)](https://github.com/block-foundation/solidity-digital-twin/issues/new?assignees=&labels=Needs%3A+Triage+%3Amag%3A%2Ctype%3Abug-suspected&projects=&template=suggestion.yml)
[![Start a Discussion](https://img.shields.io/badge/Start%20a%20Discussion-GitHub?style=flat-square&&logoColor=%23FFFFFF&color=%23E1E4E5)](https://github.com/block-foundation/solidity-digital-twin/issues/new?assignees=&labels=Needs%3A+Triage+%3Amag%3A%2Ctype%3Abug-suspected&projects=&template=discussion.yml)

</div>

**This repository contains a smart contract for a Digital Twin of a building, which fetches real-time data using Chainlink Oracles. This data includes temperature, humidity, occupancy, energy consumption, structural health, water consumption, and air quality. Additionally, the contract allows for the logging of maintenance reports.**

## Introduction

This Building Digital Twin Smart Contract creates a digital representation of a physical building. The digital twin concept is an important aspect of modern construction and building management as it allows for real-time monitoring, predictive maintenance, and simulations of different scenarios.

This smart contract utilizes Chainlink, a decentralized oracle network, to securely retrieve and write real-world data onto the blockchain. The parameters fetched include environmental aspects such as temperature and humidity, occupancy levels, energy and water consumption levels, and air quality data. It also considers the structural health of the building, providing a comprehensive digital overview of the physical building's state.

Moreover, the contract allows the owner to log maintenance reports, thereby enabling an integrated overview of not just the physical parameters but also the maintenance and repair history.

With the use of modifiers, this contract ensures that only the owner of the contract can update the parameters and add maintenance reports, providing a robust access control mechanism.

This contract is an example of the versatility and potential of Ethereum smart contracts, and how they can interface with real-world data via oracles. By using this, building owners, management, and residents could have a clearer picture of the building's condition, maintenance needs, and usage patterns in real-time.

## Quick Start

> Install

``` sh
npm i
```

> Compile

``` sh
npm run compile
```

## Features

- **Real-time Building Data**: Use Chainlink Oracles to fetch and update building parameters.
- **Maintenance Reports**: Log and retrieve maintenance activities and timestamps.
- **Owner Only Actions**: Restricted access functions for the building owner to maintain control over data and settings.

## Prerequisites

- [Node.js](https://nodejs.org/)
- [Truffle](https://www.trufflesuite.com/)
- [Ethereum Wallet](https://metamask.io/): For interacting with the deployed contract.
- [Chainlink Node](https://docs.chain.link/docs/running-a-chainlink-node): If you want to run your own oracle.

## Installation

1. Clone the repository:

```bash
git clone https://github.com/your-repository-link.git
```

2. Navigate to the repository folder:

```bash
cd path-to-folder
```

3. Install dependencies:

```bash
npm install
```

## Usage

1. Deploy the contract:

```bash
truffle migrate --network desired_network
```

2. Interact with the contract functions using your preferred method (Truffle console, web interface, etc.).

## Testing

1. To run tests:

```bash
truffle test
```

2. Ensure all tests pass and verify the coverage report.

## Development Resources

### Other Repositories

#### Block Foundation Smart Contract Series

|                                   | `Solidity`  | `Teal`      |
| --------------------------------- | ----------- | ----------- |
| **Template**                      | [**>>>**](https://github.com/block-foundation/solidity-template) | [**>>>**](https://github.com/block-foundation/teal-template) |
| **Architectural Design**          | [**>>>**](https://github.com/block-foundation/solidity-architectural-design) | [**>>>**](https://github.com/block-foundation/teal-architectural-design) |
| **Architecture Competition**      | [**>>>**](https://github.com/block-foundation/solidity-architecture-competition) | [**>>>**](https://github.com/block-foundation/teal-architecture-competition) |
| **Housing Cooporative**           | [**>>>**](https://github.com/block-foundation/solidity-housing-cooperative) | [**>>>**](https://github.com/block-foundation/teal-housing-cooperative) |
| **Land Registry**                 | [**>>>**](https://github.com/block-foundation/solidity-land-registry) | [**>>>**](https://github.com/block-foundation/teal-land-registry) |
| **Real-Estate Crowdfunding**      | [**>>>**](https://github.com/block-foundation/solidity-real-estate-crowdfunding) | [**>>>**](https://github.com/block-foundation/teal-real-estate-crowdfunding) |
| **Rent-to-Own**                   | [**>>>**](https://github.com/block-foundation/solidity-rent-to-own) | [**>>>**](https://github.com/block-foundation/teal-rent-to-own) |
| **Self-Owning Building**          | [**>>>**](https://github.com/block-foundation/solidity-self-owning-building) | [**>>>**](https://github.com/block-foundation/teal-self-owning-building) |
| **Smart Home**                    | [**>>>**](https://github.com/block-foundation/solidity-smart-home) | [**>>>**](https://github.com/block-foundation/teal-smart-home) |

---

## Colophon

### Authors

This is an open-source project by the **[Block Foundation](https://www.blockfoundation.io ""Block Foundation website"")**.

The Block Foundation mission is enabling architects to take back initiative and contribute in solving the mismatch in housing through blockchain technology. Therefore the Block Foundation seeks to unschackle the traditional constraints and construct middle ground between rent and the rigidity of traditional mortgages.

website: [www.blockfoundation.io](https://www.blockfoundation.io ""Block Foundation website"")

### Development Resources

#### Contributing

We'd love for you to contribute and to make this project even better than it is today!
Please refer to the [contribution guidelines](.github/CONTRIBUTING.md) for information.

### Legal Information

#### Copyright

Copyright &copy; 2023 [Stichting Block Foundation](https://www.blockfoundation.io/ ""Block Foundation website""). All Rights Reserved.

#### License

Except as otherwise noted, the content in this repository is licensed under the
[Creative Commons Attribution 4.0 International (CC BY 4.0) License](https://creativecommons.org/licenses/by/4.0/), and
code samples are licensed under the [Apache 2.0 License](http://www.apache.org/licenses/LICENSE-2.0).

Also see [LICENSE](https://github.com/block-foundation/community/blob/master/src/LICENSE) and [LICENSE-CODE](https://github.com/block-foundation/community/blob/master/src/LICENSE-CODE).

#### Disclaimer

**THIS SOFTWARE IS PROVIDED AS IS WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESS OR IMPLIED, INCLUDING ANY IMPLIED WARRANTIES OF FITNESS FOR A PARTICULAR PURPOSE, MERCHANTABILITY, OR NON-INFRINGEMENT.**
",0,0,2,0,construction,"[architecture, bim, block-foundation, blockchain, blockfoundation, building, chainlink, construction, digital-twin, eth, ethereum, hardhat, oracle, real-estate-management, smart-contracts, sol, solidity]",23
Asheladia,smargov,,https://github.com/Asheladia/smargov,https://api.github.com/repos/smargov/Asheladia,"Project to improve government budgeting system.The public often criticizes government as being inefficient and technologically outdated. This project seeks to improve internal financial processes in not only government but also to apply in other private industries to increase accuracy, productivity, and efficiency. Capital Improvement Projects ""CIP"" in government often require the most approvals Capital projects are large projects usually over 100,000 dollars, has a useful life of 5 or more years, and covers more that one fiscal year from project planning to completed construction or acquisition. Since CIP projects include expenses for the construction, purchase or major renovation of buildings, other physical structures and major landscaping, it is common that a project contain multiple phases. The county may consider projects with multiple phases separately or as a single request. Governments do not take these projects lightly and often require years of planning and approvals, slowing down the process. One type of major project comes from the county and public school district relationship. Counties in North Carolina are required to provide construction and upkeep of school within their district. In this project we use ""New Wales High School"" as our example. ","# ***Smargov*** 

<p align=""center"">
  <img src=""https://hackernoon.com/hn-images/1*g6n0ua6a417vB_fgdX3Q5A.png"" width=""600"" height=""320""/>
  
</p>




Blockchain Project Approval in Local Government

## ***Contributors:***  **Alpa Sheladia, Chris Bryant, Lauren Tayara, Brian Withrow, Shana Zaman, and Brandon Srinath**


  <p align=""center"">
  <img src=""https://www.tsts.com/wp-content/uploads/2019/01/government.jpg"" width=""800"" height=""400""/>
  
</p>





### **Project Research Question**

How can we improve internal local government financial approval processes?

<p align=""center"">
   <img src=""https://cdn.nextgov.com/media/img/upload/2017/08/10/080917digitalgovNG/860x394.jpg"" width=""600"" height=""300""/>  
</p>


## ***Our Vision***


The public often criticizes government as being inefficient and technologically outdated. This project seeks to improve internal financial processes in not only government but also to apply in other private industries to increase accuracy, productivity, and efficiency. Capital Improvement Projects ""CIP"" in government often require the most approvals Capital projects are large projects usually over 100,000 dollars, has a useful life of 5 or more years, and covers more that one fiscal year from project planning to completed construction or acquisition. Since CIP projects include expenses for the construction, purchase or major renovation of buildings, other physical structures and major landscaping, it is common that a project contain multiple phases. The county may consider projects with multiple phases separately or as a single request. Governments do not take these projects lightly and often require years of planning and approvals, slowing down the process. One type of major project comes from the county and public school district relationship. Counties in North Carolina are required to provide construction and upkeep of school within their district. In this project we use ""New Wales High School"" as our example. 



## ***Phase I***

<p align=""center"">
  <img src=""https://www.smartcitiesworld.net/AcuCustom/Sitename/DAM/013/digital_government_Adobe.jpg"" width=""800"" height=""400""/>
  
</p>




The first part of the project addresses the inefficiencies in processes in government finance offices. We created a contract to simplify processes in a government finance office when large capital projects are concerned. Using the concept of voting, we applied Solidity to mimic an approval process. Since members from multiple levels of government (i.e Board, Management, Finance, Budget Analyst, etc) need to physically sign a paper contract that is passed around to different departments across multiple days for approval, it often slows down the process. The idea is that use an electronic contract for approval will eliminate the intricacies of this process. This also ensures a unanimous agreement on the capital project without needing to question signatures. Essentially, we are eliminating the need for physical signatures and making the process more secure and efficient. 


### ***Tech Used and Process***

<p align=""center"">
   <img src=""https://business.comcast.com/community/images/librariesprovider3/supporting/02_28_government-trends.png?sfvrsn=7b9639d4_0"" width=""800"" height=""350""/>
  
</p>
The first phase began in Solidity using Remix to create the actual contract using Ethereum from a Ganache wallet in the blockchain. To create the local interface online, we used Truffle - Petshop, Truffle, Javascript, Node JS, and HTML.


## ***Phase II***

<p align=""center"">
   <img src=""https://z8n2g7q9.rocketcdn.me/wp-content/uploads/2020/10/Your-Basic-Guide-to-KYC-and-AML-Compliance.jpg"" width=""600"" height=""400""/>
  
</p>



In this phase of the project, we added a level for dividing the money required to complete the capital project. These types of projects often require funding from multiple sources including: 
- General Fund (general tax-payer money)
- Community Investment Fund (a savings account for projects like these)
- Multi Year Fund (funding for projects that stretch out over multiple years)
- Debt (borrowed money)

Approval for the funding to be distributed is very similar to the manual signature process described in Phase I. This Phase is connected to the first phase so that when the approval is submitted unanimously, the Budget Analyst can easily submit to distribute funds. The Area and Contsruction Managers won't have to wait on the Finance Department to make this happen in a large elaborate budget amendment form. Ideally, this phase would connect with a government financial software to automatically adjust the budget and actual amounts through journal entries in accounts.


### ***Tech Used and Process***

![gov2](Images/gov2.png)

The second phase also began in Solidity using Remix. We used a splitter function to take an amount and split it among the different sources according to the indicated percentage. Ganache was also used to provide Ethereum addresses for the blockchain.


### ***Potential Impact on Fintech/Financial Industry***

<p align=""center"">
   <img src=""https://icma.org/sites/default/files/Technology%20Future.jpg"" width=""800"" height=""400""/>  
</p>



Impacts stemming from the rise of Fintech on the Finanacial Industry and government service are vast and wide. Such impacts as merging FinTech companies with financial institutions to balance consumer protection, improving payment systems that span across borders with built in licensing. Governments can also partner with FinTech to release funds to citizens quicker than former methods that were slow and high risk. Data can also be tracked and on blockchain platforms that cannot be altered, remaining transparent. 

### ***Implications***

![gov5](Images/gov5.png)

One of the main problems that kept coming to mind throughout this project, from a FinTech perspective, was whether this was worth it as it is now. With the gas limits and cost now, is it worth the cost of the transaction. This could lead to more research on a cheaper way of producing Ethereum though? 

From one teammate's local government perspective, does this cause problems within the entity? Officials like to say that Government is slow for a reason. That reason is to allow thought and care to go into every step. It gives time for questions and for the public to know where their tax money is being spent. If we eliminate the time that goes into it, will we need to build in other processes to allow for thought and public input? The worry of compromised security is still at question here as well. What prevents one level from accessing another level in the approval's address from Ganache? Can hackers obtain this information?

As mentioned in the beginning, integrations with other existing systems is an issue. Will they begin to create technology to make the integrations easier? Along similar lines, would there be another industry where this might work better? Our team discussed the use in other tech infrastructure companies where large servers would already be available.


### ***Conclusion***

<p align=""center"">
   <img src=""https://miro.medium.com/max/2000/1*yJDp_MBcBFtPs3DzrPLZGQ.jpeg"" width=""800"" height=""400""/>
  
</p>

This project used blockchain contracts to solve two different, but related, problems in local government. Although using blockchain makes financial approvals and funding source amendments efficient, local governments are not likely to use it right now. Governments allowing this type of transition would require a huge shift in thought and local tech culture. Besides that, ethereum adoption is a risk since it can be volatile. In the example used in this project, we are not holding any value in the ethereum itself. At some point, it would need to transition to US dollars. In conclusion, the use of blockchain has the potential to allow for more efficiency in financial approval processes, but the cost of transactions and the acceptance from entities could delay or prevent its use.


##### ***Sources***

![citizen-data](Images/citizen-data.png)

https://www.dappuniversity.com/articles/the-ultimate-ethereum-dapp-tutorial

https://www.youtube.com/watch?v=8OeTeDWpDWk

https://eeshau.medium.com/decentralized-democracy-166569c3777f

http://eprints.whiterose.ac.uk/117996/1/e_voting_over_ethereum.pdf

https://fc17.ifca.ai/preproceedings/paper_80.pdf
",0,0,1,0,construction,"[approval-process, blockchain, budget, budget-analyst, capital, construction, financial-approvals, government-finance-offices, industry, solidity]",23
ZINEBMXZOUNI,andrews-construction,,https://github.com/ZINEBMXZOUNI/andrews-construction,https://api.github.com/repos/andrews-construction/ZINEBMXZOUNI,project for START CODING CLUB,,0,0,1,0,construction,[construction],23
romprin019,Princ_web,,https://github.com/romprin019/Princ_web,https://api.github.com/repos/Princ_web/romprin019,🚀 Web portfolio for Princ safety company,"# Princ_web
Website portfolio and informational page for Princ safety.
",0,0,2,0,construction,"[bootstrap, construction, css, html, javascript, sass]",23
D4ve-R,thermaljs,,https://github.com/D4ve-R/thermaljs,https://api.github.com/repos/thermaljs/D4ve-R,"Thermal is a simple physics library, performing heat transmittance & condensate calculations.","[![GitHub license](https://badgen.net/github/license/Naereen/Strapdown.js)](https://github.com/Naereen/StrapDown.js/blob/master/LICENSE) [![TypeScript](https://badgen.net/badge/icon/typescript?icon=typescript&label)](https://typescriptlang.org)
  
# ThermalJS

Thermal is a simple physics library, performing heat transmittance & condensate calculations.  
The goal of this project is to provide a library of physics calculations, which can be used in js-based applications for BIM and others.

     
⚠️This project is wip  

## Table of Contents

* [Description](#description)
* [Getting Started](#getting-started)
  * [Installing](#installing)
  * [Usage](#usage)
* [License](#license)

## Description

Thermal is a physics library, performing heat transmittance & condensate calculations in building components.  
It is written in TypeScript and built with Webpack.  
Thermal can be used in both Node.js and the browser.   

Features: 
 * Heat transfer resistance calculation
 * Glaser procedure to determine condensate

The calculations are based on the following standards:
- [DIN EN ISO 6946](https://de.wikipedia.org/wiki/EN_ISO_6946)
- [DIN 4108](https://de.wikipedia.org/wiki/DIN_4108)

This software is **NOT** certified in any way.



## Getting Started

### Installing

```
npm install @d4ve-r/thermaljs
```

### Usage
import the functions you need from the library
```
import { glaser, heatTransferR } from '@d4ve-r/thermaljs';
```
create a MaterialLayer array of your component
```
const layer = [
	{depth: 0.01, material: {density: 0, vdr: 15, lambda: 1.0, sd: 0.15}},
	{depth: 0.24,  material: {density:  0, vdr: 5, lambda: 0.7, sd: 1.2}},
	{depth: 0.1,  material: {density: 0, vdr: 5, lambda: 0.04, sd: 0.5}},
	{depth: 0.005, material: {density: 0, vdr: 200, lambda: 0.7, sd: 1}},
];
```
calculate the heat transfer resistance
```
const direction = 'side';
const r = heatTransferR(layers, direction);
```
calculate the condensate
```
const tempInt = 20;
const tempExt = -10;
const condensate = glaser(layers, tempInt, tempExt, direction);
```


## License

This project is licensed under the MIT License - see the LICENSE file for details.  

",0,0,1,0,construction,"[bim, building-energy, building-physics, buildingsmart, civil-engineering, condensation, construction, glaser-method, heat-transfer-coefficient, heating]",23
tkxwaweru,Construct-Assist,,https://github.com/tkxwaweru/Construct-Assist,https://api.github.com/repos/Construct-Assist/tkxwaweru,A Web-Based System to Streamline Service Acquisition for Construction Projects in Nairobi,"# Construct-Assist

## What is Construct-Assist?

Construct-Assist is a web application that aims to ease service acquisistion for construction project managers specifically in Nairobi, Kenya. 

The system was built using the codeigniter 4 PHP framework. More information can be found at the [official site](https://codeigniter.com).

This repository holds a composer-installable app starter. It has been built from the [development repository](https://github.com/codeigniter4/CodeIgniter4). More information about the plans for version 4 can be found in [CodeIgniter 4](https://forum.codeigniter.com/forumdisplay.php?fid=28) on the forums.

The user guide corresponding to the latest version of the framework can be found
[here](https://codeigniter4.github.io/userguide/).

## Installation & updates

`composer create-project codeigniter4/appstarter` then `composer update` whenever
there is a new release of the framework.

When updating, check the release notes to see if there are any changes you might need to apply
to your `app` folder. The affected files can be copied or merged from
`vendor/codeigniter4/framework/app`.

## Setup

Copy `env` to `.env` and tailor for your app, specifically the baseURL and any database settings.

## Important Change with index.php

**Please** read the user guide for a better explanation of how CI4 works!

## Server Requirements

PHP version 7.4 or higher is required, with the following extensions installed:

- [intl](http://php.net/manual/en/intl.requirements.php)
- [mbstring](http://php.net/manual/en/mbstring.installation.php)

Additionally, make sure that the following extensions are enabled in your PHP:

- json (enabled by default - don't turn it off)
- [mysqlnd](http://php.net/manual/en/mysqlnd.install.php) if you plan to use MySQL
- [libcurl](http://php.net/manual/en/curl.requirements.php) if you plan to use the HTTP\CURLRequest library
",0,0,1,0,construction,"[acquisition, construction, web-application]",23
Project-SimPM,SimPM,Project-SimPM,https://github.com/Project-SimPM/SimPM,https://api.github.com/repos/SimPM/Project-SimPM,SimPM offers simulation tools in project management,"# SimPM - Simulation Tool in Project Management

![Github Workflow Deploy Package](https://img.shields.io/github/actions/workflow/status/Project-SimPM/SimPM/python-publish.yml?label=deploy)
![Github Release Version](https://img.shields.io/github/v/release/Project-SimPM/SimPM)
![Github Release Date](https://img.shields.io/github/release-date/Project-SimPM/SimPM)
![PyPi Package Version](https://img.shields.io/pypi/v/simpm)
![PyPi Package Downloads](https://img.shields.io/pypi/dm/simpm)
![Github License](https://img.shields.io/github/license/Project-SimPM/SimPM)
![Github Issues](https://img.shields.io/github/issues/Project-SimPM/SimPM)
![Github Pull Requests](https://img.shields.io/github/issues-pr/Project-SimPM/SimPM)

SimPM offers simulation tools in project management.

Subpackages:
- des (discrete event simulation)
- dists (probability distributions) modules

## Using SimPM
Getting started quickly:
```
pip install simpm
```
## Community
- [Github Discussions](https://github.com/Project-SimPM/SimPM/discussions)

## Contributing back to SimPM
If you run into an issue, please file a new [issue](https://github.com/Project-SimPM/SimPM/issues) for us to discuss. If possible, follow up with a pull request.

If you would like to add a feature, please reach out via [issue](https://github.com/Project-SimPM/SimPM/issues). A feature is most likely to be added if you build it!
",0,0,2,0,construction,"[construction, discrete-event-simulation, project-management, pypi-package]",23
tgajdoski,bottomLine,,https://github.com/tgajdoski/bottomLine,https://api.github.com/repos/bottomLine/tgajdoski,scala project in play framework,,0,0,2,0,construction,"[construction, scala]",23
kovacsbalu,econlog,,https://github.com/kovacsbalu/econlog,https://api.github.com/repos/econlog/kovacsbalu,Electronic Construction Log,"# econlog - Electronic Construction Log

[![Build Status](https://travis-ci.org/kovacsbalu/econlog.svg?branch=master)](https://travis-ci.org/kovacsbalu/econlog)
[![Coverage Status](https://coveralls.io/repos/github/kovacsbalu/econlog/badge.svg?branch=master)](https://coveralls.io/github/kovacsbalu/econlog?branch=master)

Show electronic construction log entries.

```python
#!/usr/bin/python

import datetime
from econlog import econlog
from getpass import getpass

passwd = getpass('Password:')
ecl = econlog.EConLog(""example_user"", passwd)
if not ecl.login():
    exit(1)
for log in ecl.get_log_entry_on_date(datetime.date(2015, 12, 15)):
    print log
```

```
python example.py 
Password:
Dátum:    2015.12.15. - kedd
Hőfokok:  7ó:1C - 13ó:2C
Szél:     Gyenge - Délnyugat (DNy)
Időjárás: Derült égbolt, Nincs csapadék, 
Munka:    1, 08:00-16:30

09:20 John Doe napi jelentés
Example text.
```
",0,0,2,1,construction,"[construction, electronic, log]",23
john-dulaney,Triplann,,https://github.com/john-dulaney/Triplann,https://api.github.com/repos/Triplann/john-dulaney,Travel Checklist Application. NSS Backend Capstone. Currently under construction.,,0,0,1,8,construction,"[capstone, construction, javascript, nss, react, reactjs, visual-studio, visual-studio-code]",23
aycignl,Traveling-Salesperson-Problem-TSP,,https://github.com/aycignl/Traveling-Salesperson-Problem-TSP,https://api.github.com/repos/Traveling-Salesperson-Problem-TSP/aycignl,Solving the TSP using Construction Heuristics and 2-Opt Improvement Heuristic,"# Traveling-Salesperson-Problem-TSP-
Solving the TSP using Construction Heuristics and 2-Opt Improvement Heuristic


In this homework, you are going to solve the TSP for three data sets. They are called eil51.dat, eil76.dat, and eil101.dat, and consist of 51, 76, and 101 customer locations, respectively. Each data set includes the x-coordinates and y-coordinates of customers. The distances between customer locations are measured via Euclidean distance rounded to two digits after the decimal point. You can also compute the optimal tour length by considering the sequence given in the xxxopt.dat files. <br>
1. Solve each instance using the one-sided nearest neighbor heuristic starting at cities 10, 20, and 30. This means that you will obtain nine tours. Provide the tour length of each one using the table below. <br>
2. Solve each instance using the two-sided nearest neighbor heuristic starting at cities 10, 20, and 30. This means that you will obtain nine tours. Provide the tour length of each one using the table below. <br>
3. Solve each instance using the nearest insertion heuristic starting at cities 10, 20, and 30. This means that you will obtain nine tours. Provide the tour length of each one using the table below. <br>
4. Solve each instance using the farthest insertion heuristic starting at cities 10, 20, and 30. This means that you will obtain nine tours. Provide the tour length of each one using the table below. <br>
5. For each tour obtained so far, apply the 2-opt improvement heuristic, and give the tour length using the table below.
",0,0,2,0,construction,"[construction, heuristic-algorithm, tsp-problem, two-opt]",23
calilluis,TFG-RFID_Robot,,https://github.com/calilluis/TFG-RFID_Robot,https://api.github.com/repos/TFG-RFID_Robot/calilluis,"En este repositorio se pueden encontrar todos los documentos anexos utilizados para el desarrollo del Trabajo de Final de Grado (TFG) sobre el desarrollo de un robot de Retail RFID. El Repositorio está pensado como un complemento de consulta al leer la Memoria, que se encuentra disponible en la raíz del repositorio, con nombre ""Memoria.pdf"".","# Diseño, análisis y construcción de la carga útil y mejora de un robot de inventario RFID basado en estigmergia.

En este repositorio se pueden encontrar todos los documentos anexos utilizados para el desarrollo del Trabajo de Final de Grado (TFG) sobre el desarrollo de un robot de Retail RFID. El Repositorio está pensado como un complemento de consulta al leer la Memoria, que se encuentra disponible en la raíz del repositorio, con nombre ""Memoria.pdf"".

Se pueden observar diversas carpetas:
  - **Caracterización Batería**
    - Apartado de la memoria relacionado: ""2.2 Adaptación de la fuente de alimentación"".
    - Contiene los archivos de datos de batería de las dos repeticiones que se llevan a cabo, así como el archivo ""graficos_bateria.xlsx"", que contiene los gráficos de batería extraídos de los datos obtenidos.
  - **Estudio de estilo**
    - Apartado de la memoria relacionado: ""3.1 Diseño exterior (look and feel)"".
    - Contiene un archivo .pdf que con todos los objetos que se evalúan para el estudio de estilo.
  - **Multimedia**
    - Contiene todos los archivos multimedia (no técnicos) que se han recopilado durante el trabajo (fotografías y videos).
   - **Presupuesto**
     - Apartado de la memoria relacionado: ""2.5 Presupuesto"".
     - Contiene un documento .xlsx que recoge los datos referentes al presupuesto.
   - **Pruebas de Entorno y Altura**
     - Apartado de la memoria relacionado: ""2.1 Disposición y altura de las antenas"".
     - Se observan dos carpetas, una para la prueba de entorno y la otra para la prueba de altura.
     - En el interior de ambas se pueden encontrar los scripts necesarios para procesar los resultados que se obtienen del proceso de inventario del robot.
     - Para ejecutar cualquier script de ambas pruebas:
       ```sh
       $ python <nombre_script.py>
       ```
      - También se recogen los resultados resumidos en tablas, después de ser procesados. Estos se encuentran disponibles en los archivos ""tablas_analisis_entorno.xlsx"" y ""mapa_pruebaDobleFiltrado.xlsx"" para la prueba de entorno, y ""tablas_analisis_altura.xlsx"" para la prueba de altura.
 - **Sistema de Notificaciones**
    - Apartado de la memoria relacionado: ""3.2 Human-Robot Interface"".
    - Se recogen los scripts que se integran en la estructura de ROS del sistema robótico. En concreto, se encuentran los scripts ""script_node_BatteryManager.py"" (nodo de control de batería) y ""script_node_LedsController.py"" (nodo de control de leds).
",0,0,2,0,construction,"[construction, design, memoria, rfid, robotics, ros, tfg]",23
ezluci,Rubik-Cube-Solver,,https://github.com/ezluci/Rubik-Cube-Solver,https://api.github.com/repos/Rubik-Cube-Solver/ezluci,A rubik cube made in Unity which solves itself!,"# Rubik-Cube-Solver
This should be a Rubik Cube which solves itself, but I'm still working on it. I made it using Unity engine. If you are good with C# and Unity language, you can help me with this project.

I am currently working on: <ins>Solving the cube</ins>. The cube solves the __1. White cross__ step from https://ruwix.com/the-rubiks-cube/how-to-solve-the-rubiks-cube-beginners-method/.

Please let me know if you encounter any bugs in the game, because there are a lot of algorithms. You can go to https://github.com/ezluci/Rubik-Cube-Solver/issues and create a issue.

_**Do you want to try my game? I have <ins>three</ins> releases! Go to https://github.com/ezluci/Rubik-Cube-Solver/releases.**_

The scripts are located to `Assets/Scripts`.
",0,0,2,1,construction,"[construction, github-desktop, rubik-cube, unity, unity-language]",23
xReapex,TwitterBotDashboard,,https://github.com/xReapex/TwitterBotDashboard,https://api.github.com/repos/TwitterBotDashboard/xReapex,A Twitter Dashboard for bot,"<h1>✨Twitter Bot Dashboard - A Local Dashboard</h1>

<h2>Summary :</h2>

- <a href=""#overview"">Overview</a> (Quick presentation)
- <a href=""#requirements"">Requirements</a> (Application Requirements)
- <a href=""#installation"">Installation</a> (How to install & run)

<h2 name=""overview"">Overview :</h2>
<table>
  <tr>  
    <th>🛠App version</th>
    <th>:zap:Code quality</th>
  </tr>
  <tr>
    <td><img alt=""GitHub package.json version"" src=""https://img.shields.io/github/package-json/v/xReapex/twitter-bot-dashboard""></td>
    <td><a href=""https://www.codacy.com/gh/xReapex/twitter-bot-dashboard/dashboard?utm_source=github.com&amp;utm_medium=referral&amp;utm_content=xReapex/twitter-bot-dashboard&amp;utm_campaign=Badge_Grade""><img src=""https://app.codacy.com/project/badge/Grade/c6522564cbfa4aeda55cbbfc1d359929""/></a></td>
  </tr>
</table>

<h3>📌This app is made for interact with your Twitter account (personnal or bot) from local web server :</h3>

<h4>:wrench: Configuration :</h4>

- Configure the port that will be used by the App. 
- Configure bot login ids.

<h4>:sparkles: Features :</h4>

- In coming...

<h4>:heavy_plus_sign: Others :</h4>

- Auto reload configuration in execution.

![image](https://user-images.githubusercontent.com/56170171/114764071-ceb19600-9d63-11eb-8d73-b20645c2ad84.png)

<h2 name=""requirements"">Requirements :</h2>

- Node.js ([Install](https://nodejs.org/en/)) :construction: App only tested on version **v12.10.0** ! 
- NPM ([Install](https://www.npmjs.com/get-npm)) :construction: App only tested on version **v6.14.11** !

- A Twitter account.
- A computer.

<h2 name=""installation"">Installation :</h2>

- :alien: Clone the code : ``git clone https://github.com/xReapex/twitter-bot-dashboard.git``

- :fire: This application requires Node.js modules and dependencies to run. If Node.js modules are not installed (``node_modules`` directory doesn't exists), run ``npm install``. These modules must be installed !

- :lock: Configure ``.env`` file. (You can also change the server port or the connection variables when the application is launched, the server refreshes itself !)

- :rocket: Run the application with ``npm run start`` or by launch ``start.bat``.
",0,0,1,0,construction,"[bot, construction, twitter-account]",23
RauchLukas,Article-PCSS_for_Construction-A_survey,,https://github.com/RauchLukas/Article-PCSS_for_Construction-A_survey,https://api.github.com/repos/Article-PCSS_for_Construction-A_survey/RauchLukas,Datahub to the Applied Science Paper: Semantic Point Cloud Segmentation with Deep-Learning-Based Approaches for the Construction Industry: A Survey by Lukas Rauch et al.,,0,0,1,0,construction,"[applied-science, benchmark, construction, dataset, datasets, deep-learning, industrial, machine-learning, paper, pointcloud, s3dis, segmentation, semantic-segmentation, survey]",23
ubeevn,itus-Industrial-Factory-Template,ubeevn,https://github.com/ubeevn/itus-Industrial-Factory-Template,https://api.github.com/repos/itus-Industrial-Factory-Template/ubeevn,,,0,0,2,0,construction,"[bootstrap3, company, construction, html, industry, templates-point]",23
ubeevn,Construction-Web-Template,ubeevn,https://github.com/ubeevn/Construction-Web-Template,https://api.github.com/repos/Construction-Web-Template/ubeevn,,,0,0,2,0,construction,"[bootstrap3, construction, html]",23
ubeevn,Buildque-HTML5-Construction-Business-Template,ubeevn,https://github.com/ubeevn/Buildque-HTML5-Construction-Business-Template,https://api.github.com/repos/Buildque-HTML5-Construction-Business-Template/ubeevn,,,0,0,2,0,construction,"[bootstrap4, construction, html]",23
ubeevn,crystalo-interior-design-html-template,ubeevn,https://github.com/ubeevn/crystalo-interior-design-html-template,https://api.github.com/repos/crystalo-interior-design-html-template/ubeevn,,,0,0,2,0,construction,"[bootstrap4, company, construction, design, html, portfolio, templates-point]",23
Loic-V,LVmaquettes,,https://github.com/Loic-V/LVmaquettes,https://api.github.com/repos/LVmaquettes/Loic-V,maquettes architecture,,0,0,1,0,construction,"[architecture, building, conception, construction, creation, fabrication, lv, maquette, maquettes, model, modeling, models]",23
maobedkova,ConstructionsDatabase,,https://github.com/maobedkova/ConstructionsDatabase,https://api.github.com/repos/ConstructionsDatabase/maobedkova,Database of Russian constructions 'verb like noun'.,"# *Verb Like Noun* Database

All materials can be seen in the Excel file 'V как N'.

**regexp_bd** uses SQL database.

**elasticsearch_bd** uses NoSQL database (elasticsearch).

Now *V like N* database is using NoSQL model.

The database was made as a part of HSE project.
",0,0,1,0,construction,"[construction, database]",23
ckeshava,OOP-Lab,,https://github.com/ckeshava/OOP-Lab,https://api.github.com/repos/OOP-Lab/ckeshava,Programs written for OOP Course - 4th Semester,"# OOP-Lab
Programs written for OOP Course - 4th Semester
",0,0,1,0,construction,"[construction, friend, static]",23
ticknerr,aframe-react-staircase-example,,https://github.com/ticknerr/aframe-react-staircase-example,https://api.github.com/repos/aframe-react-staircase-example/ticknerr,"This aims to be a simple test of AFrameJS with ReactJS, to build a staircase with the Australian building guidelines in mind.","# aframe-react-staircase-example
## A simple test of AFrame with React, to explore basic staircase design.

**The UX is pretty terrible, I'd love to see what someone else would do to actually make something like this look nice and feel good to use.**  I've tried various events, buttons, overlays, and even gaze based interaction to provide controls, in the end I just settled on a raycaster and click event on some floating objects with textures. 

I haven't tested this with any VR headsets either, I don't have access to any. It was more about just having a play and seeing how AFrame worked, how it worked with React, and yeah, that's all!

Keep in mind that you'll **need a http-server otherwise AFrame won't load the textures**, I just use http-server which you can install with npm.

>https://www.npmjs.com/package/http-server

# Screenshot

![](exampleImage.png)
",0,0,1,0,construction,"[aframe, aframe-react, building, construction, design, javascript, js, mr, react, staircase, virtual-reality, visualisation, vr]",23
scheids1,Sidewalk_Sheds,,https://github.com/scheids1/Sidewalk_Sheds,https://api.github.com/repos/Sidewalk_Sheds/scheids1,Code developed for NYU CUSP Capstone project on the prevelance of sidewalk sheds in New York City.,# Code developed for NYU CUSP Capstone project on the prevelance of sidewalk sheds in New York City. ,0,0,0,0,construction,"[construction, scaffolding, urban-data, urban-data-science, urban-planning, urban-science]",23
Waheshimiwa,001old,,https://github.com/Waheshimiwa/001old,https://api.github.com/repos/001old/Waheshimiwa,,"# Improving the procurement process during construction thus cutting down on costs
",0,0,1,0,construction,"[construction, procurement]",23
TheShahriyar,Builder-construction-website-GatsbyJs,,https://github.com/TheShahriyar/Builder-construction-website-GatsbyJs,https://api.github.com/repos/Builder-construction-website-GatsbyJs/TheShahriyar,,"<!-- AUTO-GENERATED-CONTENT:START (STARTER) -->
<p align=""center"">
  <a href=""https://www.gatsbyjs.org"">
    <img alt=""Gatsby"" src=""https://www.gatsbyjs.org/monogram.svg"" width=""60"" />
  </a>
</p>
<h1 align=""center"">
  Gatsby's hello-world starter
</h1>

Kick off your project with this hello-world boilerplate. This starter ships with the main Gatsby configuration files you might need to get up and running blazing fast with the blazing fast app generator for React.

_Have another more specific idea? You may want to check out our vibrant collection of [official and community-created starters](https://www.gatsbyjs.org/docs/gatsby-starters/)._

## 🚀 Quick start

1.  **Create a Gatsby site.**

    Use the Gatsby CLI to create a new site, specifying the hello-world starter.

    ```shell
    # create a new Gatsby site using the hello-world starter
    gatsby new my-hello-world-starter https://github.com/gatsbyjs/gatsby-starter-hello-world
    ```

1.  **Start developing.**

    Navigate into your new site’s directory and start it up.

    ```shell
    cd my-hello-world-starter/
    gatsby develop
    ```

1.  **Open the source code and start editing!**

    Your site is now running at `http://localhost:8000`!

    _Note: You'll also see a second link: _`http://localhost:8000/___graphql`_. This is a tool you can use to experiment with querying your data. Learn more about using this tool in the [Gatsby tutorial](https://www.gatsbyjs.org/tutorial/part-five/#introducing-graphiql)._

    Open the `my-hello-world-starter` directory in your code editor of choice and edit `src/pages/index.js`. Save your changes and the browser will update in real time!

## 🧐 What's inside?

A quick look at the top-level files and directories you'll see in a Gatsby project.

    .
    ├── node_modules
    ├── src
    ├── .gitignore
    ├── .prettierrc
    ├── gatsby-browser.js
    ├── gatsby-config.js
    ├── gatsby-node.js
    ├── gatsby-ssr.js
    ├── LICENSE
    ├── package-lock.json
    ├── package.json
    └── README.md

1.  **`/node_modules`**: This directory contains all of the modules of code that your project depends on (npm packages) are automatically installed.

2.  **`/src`**: This directory will contain all of the code related to what you will see on the front-end of your site (what you see in the browser) such as your site header or a page template. `src` is a convention for “source code”.

3.  **`.gitignore`**: This file tells git which files it should not track / not maintain a version history for.

4.  **`.prettierrc`**: This is a configuration file for [Prettier](https://prettier.io/). Prettier is a tool to help keep the formatting of your code consistent.

5.  **`gatsby-browser.js`**: This file is where Gatsby expects to find any usage of the [Gatsby browser APIs](https://www.gatsbyjs.org/docs/browser-apis/) (if any). These allow customization/extension of default Gatsby settings affecting the browser.

6.  **`gatsby-config.js`**: This is the main configuration file for a Gatsby site. This is where you can specify information about your site (metadata) like the site title and description, which Gatsby plugins you’d like to include, etc. (Check out the [config docs](https://www.gatsbyjs.org/docs/gatsby-config/) for more detail).

7.  **`gatsby-node.js`**: This file is where Gatsby expects to find any usage of the [Gatsby Node APIs](https://www.gatsbyjs.org/docs/node-apis/) (if any). These allow customization/extension of default Gatsby settings affecting pieces of the site build process.

8.  **`gatsby-ssr.js`**: This file is where Gatsby expects to find any usage of the [Gatsby server-side rendering APIs](https://www.gatsbyjs.org/docs/ssr-apis/) (if any). These allow customization of default Gatsby settings affecting server-side rendering.

9.  **`LICENSE`**: This Gatsby starter is licensed under the 0BSD license. This means that you can see this file as a placeholder and replace it with your own license.

10. **`package-lock.json`** (See `package.json` below, first). This is an automatically generated file based on the exact versions of your npm dependencies that were installed for your project. **(You won’t change this file directly).**

11. **`package.json`**: A manifest file for Node.js projects, which includes things like metadata (the project’s name, author, etc). This manifest is how npm knows which packages to install for your project.

12. **`README.md`**: A text file containing useful reference information about your project.

## 🎓 Learning Gatsby

Looking for more guidance? Full documentation for Gatsby lives [on the website](https://www.gatsbyjs.org/). Here are some places to start:

- **For most developers, we recommend starting with our [in-depth tutorial for creating a site with Gatsby](https://www.gatsbyjs.org/tutorial/).** It starts with zero assumptions about your level of ability and walks through every step of the process.

- **To dive straight into code samples, head [to our documentation](https://www.gatsbyjs.org/docs/).** In particular, check out the _Guides_, _API Reference_, and _Advanced Tutorials_ sections in the sidebar.

## 💫 Deploy

[![Deploy to Netlify](https://www.netlify.com/img/deploy/button.svg)](https://app.netlify.com/start/deploy?repository=https://github.com/gatsbyjs/gatsby-starter-hello-world)

[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/import/project?template=https://github.com/gatsbyjs/gatsby-starter-hello-world)

<!-- AUTO-GENERATED-CONTENT:END -->
",0,0,2,5,construction,"[bootstrap4, construction, css3, css3-flexbox, gatsby, gatsby-site, gatsbyjs, html5, manifest, metadata, react, responsive-web-design, website-template]",23
sanastorga,proyecto-final,,https://github.com/sanastorga/proyecto-final,https://api.github.com/repos/proyecto-final/sanastorga,Raxis | Ejecución integral de obras,"# proyecto-final
<h1 align=""center"">Hi 👋, I'm Santiago Astorga</h1>
<h3 align=""center"">A passionate frontend student</h3>

- 🔭 I’m currently working on **Raxis page**

<h3 align=""left"">Connect with me:</h3>
<p align=""left"">
<a href=""https://fb.com/santi.astorga"" target=""blank""><img align=""center"" src=""https://raw.githubusercontent.com/rahuldkjain/github-profile-readme-generator/master/src/images/icons/Social/facebook.svg"" alt=""santi.astorga"" height=""30"" width=""40"" /></a>
<a href=""https://instagram.com/astorgasanti"" target=""blank""><img align=""center"" src=""https://raw.githubusercontent.com/rahuldkjain/github-profile-readme-generator/master/src/images/icons/Social/instagram.svg"" alt=""astorgasanti"" height=""30"" width=""40"" /></a>
</p>

<h3 align=""left"">Languages and Tools:</h3>
<p align=""left""> <a href=""https://getbootstrap.com"" target=""_blank"" rel=""noreferrer""> <img src=""https://raw.githubusercontent.com/devicons/devicon/master/icons/bootstrap/bootstrap-plain-wordmark.svg"" alt=""bootstrap"" width=""40"" height=""40""/> </a> <a href=""https://www.w3schools.com/css/"" target=""_blank"" rel=""noreferrer""> <img src=""https://raw.githubusercontent.com/devicons/devicon/master/icons/css3/css3-original-wordmark.svg"" alt=""css3"" width=""40"" height=""40""/> </a> <a href=""https://git-scm.com/"" target=""_blank"" rel=""noreferrer""> <img src=""https://www.vectorlogo.zone/logos/git-scm/git-scm-icon.svg"" alt=""git"" width=""40"" height=""40""/> </a> <a href=""https://www.w3.org/html/"" target=""_blank"" rel=""noreferrer""> <img src=""https://raw.githubusercontent.com/devicons/devicon/master/icons/html5/html5-original-wordmark.svg"" alt=""html5"" width=""40"" height=""40""/> </a> <a href=""https://sass-lang.com"" target=""_blank"" rel=""noreferrer""> <img src=""https://raw.githubusercontent.com/devicons/devicon/master/icons/sass/sass-original.svg"" alt=""sass"" width=""40"" height=""40""/> </a> </p>
",0,0,1,0,construction,"[aluminium, composite, construction]",23
CasperKristiansson,Computer-Hardware-Engineering-IS1200,,https://github.com/CasperKristiansson/Computer-Hardware-Engineering-IS1200,https://api.github.com/repos/Computer-Hardware-Engineering-IS1200/CasperKristiansson,Computer Hardware Engineering - Lab exercises for the course IS1200,"# IS1200 Computer Hardware Engineering
## Content and learning outcomes
### Course contents
The course gives basic knowledge of how a computer functions and is built-up both from a hardware and from a software perspective The course is divided into six different modules, which for example include the following basic concepts:

1. C-programming and assembler language: pointers, functions, stack, assembly language, machine language, instruction encoding and processor registers.
2. I/O system: timers, interrupts and memory mapped I/O.
3. Digital design: truth tables, gates, boolean algebra, multiplexers, decoders, adders, combinatorial nets, sequential networks and registers.
4. Processor construction: arithmetic-logic unit, data path, control unit and pipeline.
5. Memory architectures: instruction cache, data cache and virtual memory.
6. Parallel processors and programs: Amdahl's law, different variants of parallelism as well as multicore.

### Intended learning outcomes
After passing the course, the student shall be able to

- Implement low-level programs in the C programming language and in an assembly language
- Implement low-level programs with input-output, timers, and interrupts
- Analyse processor microarchitectures, with and without a pipeline,
- Analyse memory hierarchies, including cache-structures.
- Compare fundamental concepts about multiprocessor computers.
- Explain and describe technical solutions both orally and in writing.

### Lab 1 Assembly Programming
1. analyze MIPS assembly code by using a simulator.
2. write short assembly code functions in MIPS assembler.
3. execute and test a compiled program on a PIC32 microcontroller.

### Lab 2 C Programming
1. construct shorter C programs that includes for-loops, if-statements, arrays, and pointers.
2. analyze C programs and understand how a compiled program is laid out in memory.

### Lab 3 I/O Programming
1. Write code for general-purpose input/output (GPIO) ports.
2. Write code to initialize and use simple input/output devices, such as buttons and LEDs.
3. Write code to initialize and use devices with handshaking, such as a programmable timer.
4. Write code to initialize and handle interrupts.
5. Have a general understand for how to read non-trivial technical manuals, data sheets, and
header files.

### Lab 4 Processor Design
1. Construct a simple single-cycle processor that executes a real assembly program.
2. Explain how bit selection and instruction decoding works.
3. Explain the basic principles of the data path and the control unit.
",0,0,1,0,construction,"[assembly, c, computer, computer-hardware-engineering, construction, engineering, hardware, io, is1200, parrallel, processor]",23
djbrunoramon,punch-list-api,,https://github.com/djbrunoramon/punch-list-api,https://api.github.com/repos/punch-list-api/djbrunoramon,Punch List API - Pending Registration - Back-end,"[![Java CI with Maven](https://github.com/djbrunoramon/punch-list-api/actions/workflows/maven.yml/badge.svg?branch=main)](https://github.com/djbrunoramon/punch-list-api/actions/workflows/maven.yml)

## Punch List API - Pending Registration

[Technologies](https://github.com/djbrunoramon/punch-list-api#technologies)

[Entities](https://github.com/djbrunoramon/punch-list-api#entities)

[Class Diagram](https://github.com/djbrunoramon/punch-list-api#class-diagram)

[Endpoints for Consumption](https://github.com/djbrunoramon/punch-list-api#endpoints-for-consumption)


_Also access the frontend made in Angular for better use of the backend: [Punch-List APP](https://github.com/djbrunoramon/punch-list-app)_


## Technologies
* Maven
* Java 11
* Spring Web
* Spring Boot
* Spring Data JPA
* Spring Validation
* SpringDoc-OpenAPI
* Project Lombok
* Liquibase
* H2 Database


## Entities
* Contract
* Pendency
* ResponsiblePerson
* StatusEnum


## Class Diagram

![class-diagram](https://github.com/djbrunoramon/punch-list-api/blob/main/docs/img/punchlist-api.drawio.svg ""Class Diagram"")

## Endpoints for Consumption

**Link to access Swagger after Up Application:** http://localhost:8080/swagger-ui/index.html

![swagger](https://github.com/djbrunoramon/punch-list-api/blob/main/docs/img/overview_endpoints_punch-list-api.png ""Swagger"")

",0,0,1,0,construction,"[construction, epc, epc-agreement, power-plant]",23
djbrunoramon,punch-list-app,,https://github.com/djbrunoramon/punch-list-app,https://api.github.com/repos/punch-list-app/djbrunoramon,Punch-List - Pending Registration - Front-end,"# Punch List App  
## _Application for registering pending EPC contract or similar_

## Features
- Registration of Responsible
- Contract Registration
- Pending Register

## Screenshot

![dashboard](https://github.com/djbrunoramon/punch-list-app/blob/main/docs/img/dashboard-punchlist-app.png ""Dashboard"")

![contract](https://github.com/djbrunoramon/punch-list-app/blob/main/docs/img/contract-punchlist-app.png ""Contract"")

![responsible-person](https://github.com/djbrunoramon/punch-list-app/blob/main/docs/img/responsible-punchlist-app.png ""Responsible Person"")

![pendency](https://github.com/djbrunoramon/punch-list-app/blob/main/docs/img/pendency-punchlist-app.png ""Pendency"")

## Tech

Punch List App was developed in Angular and can be adapted to any environment.

This project was generated with [Angular CLI](https://github.com/angular/angular-cli) version 13.1.0.

- [AngularJS] - HTML enhanced for web apps!

## Installation Front-end

Download the source code:
`git clone git@github.com:djbrunoramon/punch-list-app.git`

Run the following commands:
- `npm install`
- `npm start`

The application will run at the address: `http://localhost:4200`

## Installation Back-end

For the system to work correctly, it is possible to download the backend to be able to use the features.

Download the source code:
`git clone git@github.com:djbrunoramon/punch-list-api.git`

Run the following commands:
- `./mvnw clean package`
- `./mvnw spring-boot:run`

The service will run at the address: `http://localhost:8080`

For more information about the backend visit: [Punch-list-api Repository](https://github.com/djbrunoramon/punch-list-api).
",0,0,1,0,construction,"[construction, epc, epc-agreement, power-plant]",23
nazimulhossain,techpoint,,https://github.com/nazimulhossain/techpoint,https://api.github.com/repos/techpoint/nazimulhossain,"Building Construction Website build using Vanilla Javascript, CSS and Netlify Function",,0,0,1,0,construction,"[construction, css, javascript, netlify]",23
elibulba,elibulba.github.io,,https://github.com/elibulba/elibulba.github.io,https://api.github.com/repos/elibulba.github.io/elibulba,Hard as hell,# elibulba.github.io,0,0,1,0,construction,"[construction, elibulba, hockey, lakes, quads]",23
blocksandmortar,scopetracking-network,blocksandmortar,https://github.com/blocksandmortar/scopetracking-network,https://api.github.com/repos/scopetracking-network/blocksandmortar,Hyperledger Fabric Construction Scope Tracking Network,"# scopetracking-network

> This network allows for a contract to be established between a Contractor and Employer which details payment terms and for this contract to be associated with a scope of work. It then facilitates the tracking of completion of stages of the work and for the associated payment as per the terms of the contract.


This business network defines:

**Participants**
`Contractor` `Agent` `Employer`

**Assets**
`Work` `Contract` `Account`

**Transactions**
`CompleteWork` `ReleasePayment` `SetupDemo`

**Events**
`CompleteWorkEvent` `ReleasePaymentEvent`

A `Contractor` and `Employer` would agree a `Contract` for the `Contractor` to undertake a particular scope of `Work`. The `Contractor` would then commence work and once completed the first stage of the agreed `Work` would submit a `CompleteWork` transaction. The `Agent` on behalf of the `Employer` would physically inspect the `Work` and if completed would issue a `ReleasePayment` transaction. This then updates the `Account` of all three participants in accordance with the terms in the `Contract`.

To test this Business Network Definition in the **Test** tab:

  

o Submit a `SetupDemo` transaction which executes the following steps:


	o Create `Agent` participant with personId of AGENT_1.

	o Create `Contractor` participant with personId of CONTRACTOR_1.

	o Create `Employer` participant with personId of EMPLOYER_1.

	o Create `Account` asset with accountId of AGENT1_ACC, amount of 0 and owner of AGENT_1

	o Create `Account` asset with accountId of CONTRACTOR1_ACC, amount of 0 and owner of CONTRACTOR_1

	o Create `Account` asset with accountId of EMPLOYER1_ACC, amount of 1000 and owner of EMPLOYER_1

	o Create `Contract` asset with contractId of CONTRACT_1, stagePayment of 100, 
    retention of 0.05 (i.e. 5%), deductions of 0 lossExpenses of 0.

	o Create `Work` asset with workId of FOUNDATIONS and contract of CONTRACT_1

o Submit a `CompleteWork` transaction with work as FOUNDATIONS. Note that the stageComplete for `Work` asset with workId of FOUNDATIONS has changed to true

o Submit a `ReleasePayment` transaction with work of FOUNDATIONS, contractorAccount of CONTRACTOR1_ACC, employerAccount of EMPLOYER1_ACC, retentionAccount of AGENT1_ACC and contract of CONTRACT_1. Note that the 3 `Account` assets created above have been updated in accordance with the stagePayment, retention, deductions and lossExpenses values within the associated `Contract` asset. Also note that the associated `Work` asset (i.e. FOUNDATIONS) stage has incremented to 2 and stageComplete has changed to false

o Additionally you can create new ID's in the ID Registry to test the permissions.acl. Currently restrictiona has been set to only allow a `Contractor` participant to submit a `CompleteWork` transaction and an `Agent` participant to submit a `ReleasePayment` transaction.

Congratulations you have completed the Demo!!

**Future proposed improvements:**

o Update `ReleasePayment` transaction so the `Contract` asset releases the total retention amounts from all stages on completion of the final stage

o Update `ReleasePayment` transaction so that you do not need to enter the contract (this should always be read from the contract that is linked to the `Work` asset)

o Add functionality to the `CompleteWorkEvent` event so that when triggered a notification (email?) is issued to the `Agent` participant to notify them to inspect the work

o Add functionality to the `ReleasePaymentEvent` event so that when triggered a notification (email?) is issued to the `Employer` and `Contractor` participants to notify them of release of payment for completion of the stage of work.

o Implement the stageType enum within the business logic.

## Licence

Copyright [2019] [Blocks and Mortar Ltd]

   Licensed under the Apache License, Version 2.0 (the ""License"");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an ""AS IS"" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.

 ## History  
   
   This network was orginally selected as winner of the Smart Procurement Toolkit for the AEC Industry Construction Blockchain Consortium Hackathon 2019 (https://www.constructionblockchain.org/20190207-hackathon/). It has subsequently been further developed to improve functionality.",0,0,1,0,construction,"[construction, contracts, hyperledger-fabric, procurement]",23
joeljerushan,electra-website,,https://github.com/joeljerushan/electra-website,https://api.github.com/repos/electra-website/joeljerushan,"Website for Electra - Who Interior construction contractor in Ar-Rayyan, Qatar ","Website for Electra - Who Interior construction contractor in Ar-Rayyan, Qatar

Demo URL [www.electra.qa/](http://www.electra.qa/ ""http://www.electra.qa/"")
",0,0,1,0,construction,"[construction, interior-construction, template]",23
ItaiAxelrad,open-spec,,https://github.com/ItaiAxelrad/open-spec,https://api.github.com/repos/open-spec/ItaiAxelrad,Open source construction specification,"# CAD Standards

An open source documentation site for construction specifications, CAD standards, and design checklists.",0,0,1,0,construction,"[construction, documentation, docusaurus, engineering, open-source, specification, standards]",23
felipe-andersen,terramade-mobile,,https://github.com/felipe-andersen/terramade-mobile,https://api.github.com/repos/terramade-mobile/felipe-andersen,"Learn, collaborate and inspire about construction, architecture, interior design, home, and more.","


<!--<p align=""center""><img src=""https://img.shields.io/github/languages/code-size/felipe-pazam/Projeto-Terramade?color=yellow&logo=terramade&style=flat-square"">
<img src=""https://img.shields.io/github/license/felipe-pazam/Projeto-Terramade?style=flat-square""></p>-->

<p align=""right"">Portuguese, Brazil | <a href=""https://github.com/felipe-pazam/Projeto-Terramade/edit/main/Readme.md"">English</a></p>

# Terramade - Mobile

## Sobre

Habitações irregulares causam bilhões em prejuízos para contas públicas, geram problemas urbanísticos e sociais gravíssimos. ( <a href=""https://github.com/felipe-andersen/terramade-p/blob/main/propostas-de-solucao.md"">Veja as propostas de solução<a> )

<!--
## Principais formas de monetização
Fornecer ferramentas para o usuário planejar a compra de imóveis, administrar imóveis, obter serviços relacionados, receber ofertas de financiamento para reforma e outros recursos como painés solares, e outros. Inclui uma rede social onde um usuário pode postar e fazer um ""diário de obra"" através de uma ferramenta específica. Pessoas que se indentificarem podem contribuir financeiramente (app fica com 10 - 20% do valor).
-->
  
## Tópicos 
  
  * <a href=""""> Regras de negócio </a>
  
  * <a href=""""> Contribuindo com o projeto </a>

  
  Feito com :heart:
",0,0,1,0,construction,"[archtecture, brazil, chats, comments, community, construction, consumers, decoration, environment, feed, followers, professionals, public-pages, public-profile, social-network, stories, sustainability, tutorial]",23
noblesource,.github,noblesource,https://github.com/noblesource/.github,https://api.github.com/repos/.github/noblesource,🌐 Welcome to NobleSource.,,0,0,0,0,construction,"[aec, architecture, built-environment, construction, developers, engineering, infrastructure, open, public-good, society, trust]",23
ubeevn,Simply-Construction-HTML5-bootstrap-Template,ubeevn,https://github.com/ubeevn/Simply-Construction-HTML5-bootstrap-Template,https://api.github.com/repos/Simply-Construction-HTML5-bootstrap-Template/ubeevn,,,0,0,2,0,construction,"[bootstrap3, construction, html]",23
TheGuysBrushes,bridgeconstructor,TheGuysBrushes,https://github.com/TheGuysBrushes/bridgeconstructor,https://api.github.com/repos/bridgeconstructor/TheGuysBrushes,"Programme d'intelligence artificiel pour choisir le type, les matériaux et le prix pour la construction de ponts","# bridgeconstructor
<h2>Programme d'intelligence artificiel pour choisir le type, les matériaux et le prix pour la construction de ponts</h2>

<h3>Modélisation Algorithmique : </h3>
  - Une classe Bridge : les caractéristique du pont, définies selon les règles appliquées
  - Une classe Environment : faits décris par l'utilisateur avant l'exécution de la recherche du pont à construire
  - Une classe AIEngine : chargées d'appliquer les règles sur la <i>Base de faits</i> afin d'en déduire les ponts constructibles, et parmi ceux-ci, le meilleur choix (surement le moins cher).
  
 
<h3>Modélisation Graphique : </h3>
  <i>Objectif secondaire</i>
  Voir si on fait une version android, ou seulement ""desktop""
  
",0,0,3,0,construction,"[bridge, construction, machine-learning, machine-learning-algorithms]",23
iosifache,Commerce,,https://github.com/iosifache/Commerce,https://api.github.com/repos/Commerce/iosifache,Website made for Empowersoft.ro 2015,,0,0,2,0,construction,"[construction, presentation-website]",23
InuUa,Inuua,InuUa,https://github.com/InuUa/Inuua,https://api.github.com/repos/Inuua/InuUa,Inuua mobile application,"[![standard-readme compliant](https://img.shields.io/badge/readme%20style-standard-brightgreen.svg?style=flat-square)](https://github.com/RichardLitt/standard-readme)

# Inuua
![image](https://github.com/InuUa/Inuua/blob/master/src/asset/Inuua.png)
Inuua mobile application



## Table of Contents

- [Usage](Usage)
- [Development](Development)
- [Testing](Testing)
- [Deployment](Deployment)
- [Screenshots](Screenshots)


## Usage

1. clone the repository 
2. ``cd reponname`` move into the repository
3. ``yarn || npm install `` install dependencies
4. ``react-native run-android || react-native run-ios `` launch the app into a simulator or device


##Development
",0,0,1,18,construction,[construction],23
mrToddman,waterServiceCalulator,,https://github.com/mrToddman/waterServiceCalulator,https://api.github.com/repos/waterServiceCalulator/mrToddman,This is a calculator used to size water service and water pipes in observance of the California Plumbing Code and Uniform Plumbing Code.,"# waterServiceCalulator
This is an excel spreadsheet calculator for sizing water service and water pipes. 

1. Use the drop-down lists in B3:B22 to change number of plumbing fixtures in the system.
2. The sum of water fixture units in D23 is converted to GPM using a modified Hunters’ curve and returned to D25
3. Rows 25 to 31 are for additional demands. The emergency station number of units are only editable.
4. Enter main line size in cell E33			
5. Enter water meter size in cell E34			
6. Enter longest enveloped run in cell E35
7. Enter building height here in cell D37
8. The residual pressure is uneditable and automatically returned from selection of flush valve, emergency fixture or minimum allowed by code.
6. Enter water meter pressure drop in cell E39
7. Enter the loss through the reduced pressure backflow preventor. It’s always around 10 to 15 psi	
7. Your answer is in cell E45.
This tells you how to get our main and branch line sizes. Yes, it is a little weird to start off with entering the main line size to get a parameter you use to select a min line size, but this is an iterative process. This number marks a vertical line on the pipe friction loss chart about the axis labeled ""friction loss psi per 100 ft"", and all values to the left of this line are invalid. You can also use this to create a fixture unit vs pipe size table to size branch lines, the county of LA also requires you to put this on the plans too.

See additional charts and pipe friction loss calculator in other sheets in this workbook.
Cells with CPC references and other select cells are left editable for general use of the calculator, i.e., UPC, ASPE, etc.
",0,0,1,0,construction,"[calculator, construction, domestic-water, engineering, hunters-curve, mep, pipe-size, plumbing, water-service]",23
mwongeraE,Construction,,https://github.com/mwongeraE/Construction,https://api.github.com/repos/Construction/mwongeraE,Cameroon Ortho Construction Company Website. ,"<!-- AUTO-GENERATED-CONTENT:START (STARTER) -->
<p align=""center"">
  <a href=""https://www.gatsbyjs.org"">
    <img alt=""Gatsby"" src=""https://www.gatsbyjs.org/monogram.svg"" width=""60"" />
  </a>
</p>
<h1 align=""center"">
  Gatsby's default starter
</h1>

## 🚀 Quick start

1.  **Create a Gatsby site.**

    Use the Gatsby CLI to create a new site, specifying the default starter.

    ```sh
    # create a new Gatsby site using the default starter
    gatsby new my-default-starter https://github.com/gatsbyjs/gatsby-starter-default
    ```

1.  **Start developing.**

    Navigate into your new site’s directory and start it up.

    ```sh
    cd my-default-starter/
    gatsby develop
    ```

1.  **Open the source code and start editing!**

    Your site is now running at `http://localhost:8000`!

    _Note: You'll also see a second link: _`http://localhost:8000/___graphql`_. This is a tool you can use to experiment with querying your data. Learn more about using this tool in the [Gatsby tutorial](https://www.gatsbyjs.org/tutorial/part-five/#introducing-graphiql)._

    Open the `my-default-starter` directory in your code editor of choice and edit `src/pages/index.js`. Save your changes and the browser will update in real time!

## 🧐 What's inside?

A quick look at the top-level files and directories you'll see in a Gatsby project.

    .
    ├── node_modules
    ├── src
    ├── .gitignore
    ├── .prettierrc
    ├── gatsby-browser.js
    ├── gatsby-config.js
    ├── gatsby-node.js
    ├── gatsby-ssr.js
    ├── LICENSE
    ├── package-lock.json
    ├── package.json
    └── README.md

1.  **`/node_modules`**: This directory contains all of the modules of code that your project depends on (npm packages) are automatically installed.

2.  **`/src`**: This directory will contain all of the code related to what you will see on the front-end of your site (what you see in the browser) such as your site header or a page template. `src` is a convention for “source code”.

3.  **`.gitignore`**: This file tells git which files it should not track / not maintain a version history for.

4.  **`.prettierrc`**: This is a configuration file for [Prettier](https://prettier.io/). Prettier is a tool to help keep the formatting of your code consistent.

5.  **`gatsby-browser.js`**: This file is where Gatsby expects to find any usage of the [Gatsby browser APIs](https://www.gatsbyjs.org/docs/browser-apis/) (if any). These allow customization/extension of default Gatsby settings affecting the browser.

6.  **`gatsby-config.js`**: This is the main configuration file for a Gatsby site. This is where you can specify information about your site (metadata) like the site title and description, which Gatsby plugins you’d like to include, etc. (Check out the [config docs](https://www.gatsbyjs.org/docs/gatsby-config/) for more detail).

7.  **`gatsby-node.js`**: This file is where Gatsby expects to find any usage of the [Gatsby Node APIs](https://www.gatsbyjs.org/docs/node-apis/) (if any). These allow customization/extension of default Gatsby settings affecting pieces of the site build process.

8.  **`gatsby-ssr.js`**: This file is where Gatsby expects to find any usage of the [Gatsby server-side rendering APIs](https://www.gatsbyjs.org/docs/ssr-apis/) (if any). These allow customization of default Gatsby settings affecting server-side rendering.

9.  **`LICENSE`**: Gatsby is licensed under the MIT license.

10. **`package-lock.json`** (See `package.json` below, first). This is an automatically generated file based on the exact versions of your npm dependencies that were installed for your project. **(You won’t change this file directly).**

11. **`package.json`**: A manifest file for Node.js projects, which includes things like metadata (the project’s name, author, etc). This manifest is how npm knows which packages to install for your project.

12. **`README.md`**: A text file containing useful reference information about your project.

## 🎓 Learning Gatsby

Looking for more guidance? Full documentation for Gatsby lives [on the website](https://www.gatsbyjs.org/). Here are some places to start:

- **For most developers, we recommend starting with our [in-depth tutorial for creating a site with Gatsby](https://www.gatsbyjs.org/tutorial/).** It starts with zero assumptions about your level of ability and walks through every step of the process.

- **To dive straight into code samples, head [to our documentation](https://www.gatsbyjs.org/docs/).** In particular, check out the _Guides_, _API Reference_, and _Advanced Tutorials_ sections in the sidebar.

## 💫 Deploy

[![Deploy to Netlify/OnRender]

<!-- AUTO-GENERATED-CONTENT:END -->
",0,0,2,23,construction,"[construction, gatsby, gatsby-site, manifest]",23
pkhenry52,User_PipeSpec,,https://github.com/pkhenry52/User_PipeSpec,https://api.github.com/repos/User_PipeSpec/pkhenry52,"User interface, for industrial pipe material specification, based on a specific fluid commodity property.","# User_PipeSpec
## Philosophy
The intent of this program is to provide a tool that will generate and maintain an industrial quality piping specification
as well as track the need for updates and revisions.  It is not an engineering tool that well specify the material or
component ratings need for the fluid the specification is being applied to.  That step requires input and reviews from the
Materials/Inspection, Process and Piping engineering groups.  However it is designed to help in eliminating error which may 
occur once the material is selected and the component ratings have been set.
## Design
The program has been developed in python 3 using SQLite as the database, other programs and modules, as is this program, 
are OpenSource and can be used by anyone for non-commercial applications.
Python 3 was selected for its easy of use, SQLite was selected because it limits the number of access points which allow 
modifications to the actual database.  There is no appreciable limit to the number of connections allowed to view the data.  
### Parts
It is the intent of this program that only a small group be allowed to change the data due to its sensitive nature and related
safety issues.  For this reason the program is actually developed in two parts.  One part is for the field Users, the repository 
you are presently viewing, it has no entry point into the database for any use other than viewing and printing.  
The second part is used by the Administrator, and can be seen at the repository https://github.com/pkhenry52/Adm_PipeSpec, 
this allows for viewing, printing and changes to the database.

 1. The program allows for easy development, maintenance and update control of a complete plant site commodity pipe specification.
 1. It has the capability to have a custom commodity pipe specification code of up to 15 characters.
 1. The specification is build based on material grade, material type, pressure rating (flange), and corrosion allowance, common in the industry.
 1. The commodity code itself can be unique to each specification or duplicated based on a class such as STM for steam.
 1. A large amount of the data used to build a specification is already built into the data and needs only a click to select.
 1. Information available for the development of a specification is already narrowed down based on the specified material type and grade.
  1. There are numerous forms pre-built in HTML format to hand items which require additional sign off approvals, such as Hydro Test Waivers, Material Substitution Requests, Non-conformance Reports etc.
 1. The building of Scope of Works for the end users has been automated to print out all relevant pipe specification information or just selected sections if needed.
 1. There is a system to import both the Material Substitution Requests and Non-conformance Report, both HTML documents into the database.  The intent is so the can be reviewed at a later data and if needed addressed or even to make amends to the piping specification data.
 1. To help control inspection there is a capability to build an inspection travel sheet for each scope of work.
 1. Because it is a database the data can be updated easily unlike a word document or pdf file. The data can be turned out either as access of a single source on a central server or as a file to each required end user.  The administrator can keep a separate control document which can be updated on the go.
 1. EPCM companies can have numerous different pipe specifications all accessible with this program.

 1. The information covered in each commodity pipe specification includes;
       
 - Piping 
 - Fittings (elbows, tees, laterals, reducers etc.)
 - Flanges
 - Orifice Flanges
 - Gasket Packs
 - Fasteners
 - Unions
 - O-lets
 - Groove Clamps
 - Weld Requirements
 - Tubing
 - Branch Chart
 - Inspection Packs
 - Notes for commodities and pipe components
 - Paint Specification
 - Insulation
 - Gate Valve
 - Globe Valve
 - Plug Valve
 - Ball Valve
 - Butterfly Valve
 - Piston Check Valv
 - Swing Check Valve
 - Specials


The program has been developed in Python 3.7 and is cross platform with Windows and Linux systems.      The program code is open source and free to be downloaded and modified as desired, all though this is not the intent for most users.  It allows for testing and trial turn out to the users with sample data.

The data is located in a collection of 116 data tables, all viewable with SQLite Studio which can be downloaded without charge at https://sqlitestudio.pl .  It is not recommend that the tables be accessed this way as damage to the data schema can occur if the user is not familiar with SQLite.  The Pipe Specification gives full control over all aspects of the data with built in safe guards to prevent this inadvertent damage.

If further information is needed a user manual can be seen at https://github.com/pkhenry52/User_PipeSpec/blob/master/Docs/PipeSpecification.pdf.

## Installation

To install the program first download the files using the ""Code"" then ""Download file"" buttons. Then unzip the files into a new directory 'User_Pipe_Spec'. Next install PyInstaller using the 'pip install pyinstaller' in your terminal (Windows used the 'cmd' command, in linux use Ctrl+Alt+t to access the terminal). This should install the PyInstaller program. In your terminal change to the directory 'User_Pipe_Spec' where you unzipped the program. Then execute the following code 'pyinstaller --onefile User_PipeSpec.py', without the quotes, in the terminal. In a few minutes this will produce an excutible file for your present operting system. If the pyinstaller is not found try to locate the file name pyinstaller.py on your system and copy it to the same directory 'User_Pipe_Spec' and rerun the terminal code. If the pyinstaller worked under the 'User_Pipe_Spec' directory there will be a folder called 'dist', inside it there is an executible file called 'User_PipeSpec'. All you need do now is to copy this new file and the folders 'Data', 'Docs', and 'Forms' to a directory of your choice and run the newly created executible file User_PipeSpec. You can delete the original directory ""User_Pipe_Spec"". NOTE: if you create the executible file in a Windows enviroment it will only run in Windows the same applies for Linux systems.
",0,0,1,0,construction,"[construction, database, database-gui, engineering, industrial, inspection, material-design, mechanical-engineering, pipe, pipe-specification, specification]",23
Divya19gupta,Construction-Template-React,,https://github.com/Divya19gupta/Construction-Template-React,https://api.github.com/repos/Construction-Template-React/Divya19gupta,Construction template using reactjs,"# Construction-Template-React

Preview - [Link](http://garyglobalsolutions.com/angular-template/build/)
",0,0,1,0,construction,"[construction, reactjs]",23
winaungcho,PHP-RECTSLIB,,https://github.com/winaungcho/PHP-RECTSLIB,https://api.github.com/repos/PHP-RECTSLIB/winaungcho,"Lib help you to construct the rectangles in various logical operations such as Union, Intersect and Subtract.","# PHP-RECTSLIB
This class Lib help you to construct the rectangles using various logical operations such as Union, Intersect and Subtract. It will generate the border edges of non-overlapped rectangles.
[JScript version](https://github.com/winaungcho/JS-RECTSLIB)
## Algorythm
Algorythm is very simple.
- A region on which contains all the rectangles is divided into several rectangles according to the corners of the rectangles.
- Remove the rectangles above which does not lie inside all rectangles. This step gives the non-overlapped union of the rectangles.
- Then choose or remove the rectangles which lies inside the subject rectangles according to boolean operation union, intersect or subtract.

## Operation procedure
### Create rectangles
Rectangles are represenred by the associative array in which diagonal points p1 and p2 are stored. Other variables for drawing are name, color and state. Point p1 is always upper left corner and p2 is for lower right of rectangles so that p1 has smaller value of x and y then p2.
````php
$rectslib = new RectsLib();
$A = $rectslib->p1p2(10, 10, 300, 200, ""A"", $green);
$B = $rectslib->p1p2(40, 30, 200, 300, ""B"", $red);
$C = $rectslib->p1p2(150, 40, 400, 150, ""C"", $orange);
$D = $rectslib->p1p2(140, 320, 200, 400, ""D"", $blue);
$E = $rectslib->p1p2(80, 160, 250, 250, ""E"", $brown);
$rects = [$A, $B, $C, $D, $E];
````
### Merge all rectangles into mesh
List all x and y coordinates from the corner points p1, p2 of rectangles. Sort x and y list and then create rectangles for all x and y. Get (2n-1)^2 mesh rectangles for n original rectangles.
````php
$all = $rectslib->merge($rects, $grey);
````
### Generate rectangle operation
Select mesh by checking inside or not the desired rectangles which for logical operation.
Eg. 
If A B C D E are the recangles, 
- For union of [A B C] & [D E], mesh must be lied in side both of [A B C] & [D E].
- For subtract [B E] from [A B C D], mesh must be inside the [A B C D] and outside of [B E].
- For intersect [A B C D] & [B E], mesh must be inside of both [A B C] & [D E].
````php
$uni = $rectslib->union([$A, $B, $C], [$E, $D]);
$subt = $rectslib->subtract([$A, $B, $C, $D], [$B, $E]);
$Intersect = $rectslib->intersect([$A, $B, $C, $D], [$B, $E]);
````

### Generate bounding edges
Generate edges of each rectangles and select external edges by removing common edges.

````php
$edges = $rectslib->genEdges($subt);
$rectslib->drawEdges($img, $edges, $white);
````

## Check with Images
### Original Rectangles

- A-GREEN-{10,10:300,200}
- B-RED-{40,30:200,300}
- C-ORANGE-{150,40:400,150}
- D-BLUE-{140,320:200,400}
- E-BROWN-{80,160:250,250}

![PHP-RECTSLIB](https://raw.githubusercontent.com/winaungcho/PHP-RECTSLIB/main/images/rectsorigin.png)

### Start meshing for all rectangles
![PHP-RECTSLIB](https://raw.githubusercontent.com/winaungcho/PHP-RECTSLIB/main/images/rectsuniversal.png)

### Meshing and get union of rectangles
* Union of [A B] & [C D]
* [A B] ⋃ [C D]
![PHP-RECTSLIB](https://raw.githubusercontent.com/winaungcho/PHP-RECTSLIB/main/images/rectsunion.png)

### Intersection of all with 2 rectangles
* Intersect of [A B C D] & [B E]
* [A B C D] ⋂ [B E]
![PHP-RECTSLIB](https://raw.githubusercontent.com/winaungcho/PHP-RECTSLIB/main/images/rectsintersect.png)

### Subtract of 2 from all
* Subtract [B E] from [A B C D]
* [A B C D] - [B E]
![PHP-RECTSLIB](https://raw.githubusercontent.com/winaungcho/PHP-RECTSLIB/main/images/rectssubtract.png)

## Contact
Contact me for comercial use via mail winaungcho@gmail.com.


",0,0,1,0,construction,"[boolean-operations, boundary, construction, edges, geometry, hull, rectangles]",23
RMLio,web-of-things-icwe2021,RMLio,https://github.com/RMLio/web-of-things-icwe2021,https://api.github.com/repos/web-of-things-icwe2021/RMLio,Mapping rules for ICWE2021: Leveraging Web of Things W3C recommendations for knowledge graphs generation,"# Leveraging Web of Things W3C recommendations for knowledge graphs generation

This repository contains the mapping rules for the 
[ESSENCE](https://www.imec-int.com/en/what-we-offer/research-portfolio/essence) 
and [DAIQUIRI](https://www.imec-int.com/en/what-we-offer/research-portfolio/daiquiri) 
use cases in the [ICWE2021](https://icwe2021.webengineering.org/) 
paper *Leveraging Web of Things W3C recommendations for knowledge graphs generation*.

# Paper

The camera ready version can be found at: https://dylanvanassche.be/publications/#icwe2021

# License

This code is copyrighted by Ghent University – imec and released under the MIT license.
",0,0,6,0,construction,"[construction, generation, icwe, icwe2021, knowledge-graph, rdf, rml, target, web-of-things]",23
airlenea,SiteBuramar,,https://github.com/airlenea/SiteBuramar,https://api.github.com/repos/SiteBuramar/airlenea,:factory: Site da Marmoraria Buramar _ projeto trabalho Prof.Neto,"# Getting Started with Create React App

This project was bootstrapped with [Create React App](https://github.com/facebook/create-react-app).

## Available Scripts

In the project directory, you can run:

### `npm start`

Runs the app in the development mode.\
Open [http://localhost:3000](http://localhost:3000) to view it in the browser.

The page will reload if you make edits.\
You will also see any lint errors in the console.

### `npm test`

Launches the test runner in the interactive watch mode.\
See the section about [running tests](https://facebook.github.io/create-react-app/docs/running-tests) for more information.

### `npm run build`

Builds the app for production to the `build` folder.\
It correctly bundles React in production mode and optimizes the build for the best performance.

The build is minified and the filenames include the hashes.\
Your app is ready to be deployed!

See the section about [deployment](https://facebook.github.io/create-react-app/docs/deployment) for more information.

### `npm run eject`

**Note: this is a one-way operation. Once you `eject`, you can’t go back!**

If you aren’t satisfied with the build tool and configuration choices, you can `eject` at any time. This command will remove the single build dependency from your project.

Instead, it will copy all the configuration files and the transitive dependencies (webpack, Babel, ESLint, etc) right into your project so you have full control over them. All of the commands except `eject` will still work, but they will point to the copied scripts so you can tweak them. At this point you’re on your own.

You don’t have to ever use `eject`. The curated feature set is suitable for small and middle deployments, and you shouldn’t feel obligated to use this feature. However we understand that this tool wouldn’t be useful if you couldn’t customize it when you are ready for it.

## Learn More

You can learn more in the [Create React App documentation](https://facebook.github.io/create-react-app/docs/getting-started).

To learn React, check out the [React documentation](https://reactjs.org/).

### Code Splitting

This section has moved here: [https://facebook.github.io/create-react-app/docs/code-splitting](https://facebook.github.io/create-react-app/docs/code-splitting)

### Analyzing the Bundle Size

This section has moved here: [https://facebook.github.io/create-react-app/docs/analyzing-the-bundle-size](https://facebook.github.io/create-react-app/docs/analyzing-the-bundle-size)

### Making a Progressive Web App

This section has moved here: [https://facebook.github.io/create-react-app/docs/making-a-progressive-web-app](https://facebook.github.io/create-react-app/docs/making-a-progressive-web-app)

### Advanced Configuration

This section has moved here: [https://facebook.github.io/create-react-app/docs/advanced-configuration](https://facebook.github.io/create-react-app/docs/advanced-configuration)

### Deployment

This section has moved here: [https://facebook.github.io/create-react-app/docs/deployment](https://facebook.github.io/create-react-app/docs/deployment)

### `npm run build` fails to minify

This section has moved here: [https://facebook.github.io/create-react-app/docs/troubleshooting#npm-run-build-fails-to-minify](https://facebook.github.io/create-react-app/docs/troubleshooting#npm-run-build-fails-to-minify)
",0,0,1,0,construction,"[and, construction, gallery, granite, marble, or, reform]",23
Thomas-Basham,construction-website,,https://github.com/Thomas-Basham/construction-website,https://api.github.com/repos/construction-website/Thomas-Basham,A NextJS/ReactJS website template for a construction contractor company.,"# Construction Contractor Website Template

[https://construction-website-template-bashamtg.vercel.app](https://construction-website-template-bashamtg.vercel.app)

## Author: Thomas Basham

![Next JS](https://img.shields.io/badge/Next-black?style=for-the-badge&logo=next.js&logoColor=white)
![Node.js CI](https://img.shields.io/badge/React-20232A?style=for-the-badge&logo=react&logoColor=61DAFB)
![Node.js CI](https://img.shields.io/badge/Vercel-000000?style=for-the-badge&logo=vercel&logoColor=white)
![Bootstrap](https://img.shields.io/badge/bootstrap-%23563D7C.svg?style=for-the-badge&logo=bootstrap&logoColor=white)

A website template for a construction contractor company.

## Tech Used

- ReactJS
- NextJS
- Vercel
- Bootstrap
- EmailJS
- React-Icons
- React Card Flip
- React Image Gallery
- React Reveal
- Sweet Alert

![screenshot](public/screenshots/screenshot_7.png)
![screenshot](public/screenshots/screenshot_6.png)
![screenshot](public/screenshots/screenshot_5.png)
![screenshot](public/screenshots/screenshot_4.png)
![screenshot](public/screenshots/screenshot_3.png)
![screenshot](public/screenshots/screenshot_2.png)
![screenshot](public/screenshots/screenshot_1.png)",0,0,1,0,construction,"[construction, contractor, template, website]",23
beercityscapes,beercityscapes.github.io,,https://github.com/beercityscapes/beercityscapes.github.io,https://api.github.com/repos/beercityscapes.github.io/beercityscapes,Landing page for a NFC tap.,"# Mat's Contact Site

iPhones are only empowered to open URLs from NFC tags by default, so this is a simple contact landing page to serve as a destination for that tap.
",0,0,2,0,construction,"[construction, contact, landscaping]",23
Devesh-Thaker,Bamoo-as-a-Construction-material,,https://github.com/Devesh-Thaker/Bamoo-as-a-Construction-material,https://api.github.com/repos/Bamoo-as-a-Construction-material/Devesh-Thaker,"Researched upon methods of construction using Bamboo. Treatment, jointing, construction, foundation are some of the vital topics covered in this project.",# Bamoo-as-a-Construction-material,0,0,1,0,construction,"[bamboo, construction]",23
Fehmi2003,Algoritma-2-BM102,,https://github.com/Fehmi2003/Algoritma-2-BM102,https://api.github.com/repos/Algoritma-2-BM102/Fehmi2003,Algoritma 2 dersindeki çalışma soruları cevapları. ,"# Algoritma-2-BM102
Algoritma 2 dersindeki çalışma soruları cevapları. 
Cevapları görmek istiyorsanız aradığınız CS(Çalışma soruları) tıklayın ve .cpp uzantılı dosyadan kodlara erişebilirsiniz.
",0,0,1,0,construction,"[class, code, construction, cpp, pointers]",23
hashi7412,company,,https://github.com/hashi7412/company,https://api.github.com/repos/company/hashi7412,"Frontend Construction structure based React, TypeScript, and Styled Components.","# Frontend Construction structure based React, TypeScript, and Styled Components.
",0,0,1,0,construction,"[code-structure, construction, frontend, hashi7412, react, shinobi, styled-components, ts]",23
ubeevn,Buliten-Factory-Industry-HTML-Template,ubeevn,https://github.com/ubeevn/Buliten-Factory-Industry-HTML-Template,https://api.github.com/repos/Buliten-Factory-Industry-HTML-Template/ubeevn,,,0,0,2,0,construction,"[bootstrap4, company, construction, html, industry, templates-poin]",23
ubeevn,Intruder-Industry-HTMl5-Template,ubeevn,https://github.com/ubeevn/Intruder-Industry-HTMl5-Template,https://api.github.com/repos/Intruder-Industry-HTMl5-Template/ubeevn,,,0,0,2,0,construction,"[bootstrap4, company, construction, html, templates-point]",23
ubeevn,Mega-Industry-website,ubeevn,https://github.com/ubeevn/Mega-Industry-website,https://api.github.com/repos/Mega-Industry-website/ubeevn,,,0,0,2,0,construction,"[bootstrap3, company, construction, html, industrial]",23
omlhawaii,omlhawaii.com,omlhawaii,https://github.com/omlhawaii/omlhawaii.com,https://api.github.com/repos/omlhawaii.com/omlhawaii,"A parallax portfolio for OML Contracting Co, using fast CSS 3D effects instead of JavaScript calculations.",,0,0,2,3,construction,"[construction, hawaii, parallax, website]",23
SebGrobelny,SFDevelopmentPipeline,,https://github.com/SebGrobelny/SFDevelopmentPipeline,https://api.github.com/repos/SFDevelopmentPipeline/SebGrobelny,Provides D3 visualization of ongoing construction sites in San Francisco,,0,0,2,0,construction,"[construction, d3, flask, sf, sqlite]",23
ccworld1000,CCComposition,,https://github.com/ccworld1000/CCComposition,https://api.github.com/repos/CCComposition/ccworld1000,"CCComposition for code style, Accept code style conversion business(接受code style转换业务)","# CCComposition
CCComposition for code style, Accept code style conversion business(接受code style转换业务)


###Charts

![Charts](https://raw.github.com/ccworld1000/CCComposition/master/Charts.png)



###IGListKit

![IGListKit](https://raw.github.com/ccworld1000/CCComposition/master/IGListKit.png)



###MPAndroidChart

![MPAndroidChart](https://raw.github.com/ccworld1000/CCComposition/master/MPAndroidChart-master.png)
",0,0,0,0,construction,"[cccomposition, composit, construction, data, structure, visual]",23
StingrayCZ,Plastic-Part-of-Drill,,https://github.com/StingrayCZ/Plastic-Part-of-Drill,https://api.github.com/repos/Plastic-Part-of-Drill/StingrayCZ,[SolidWorks]  This sample shows a part of cover of a drill which it made by the injection moulding process. 🔨,"# Plastic part of drill
This SolidWorks model represents a hand-held corded electric drill that made from certain platic material. Part's been created by usage of 
Extruded Boss/Cut, frequent Fillet, Ribs, Hole Wizard, Shell tools, etc.
<p float=""left"">
  <img src=""/DrillOnPicture.PNG"" width=""400"" />
  <img src=""/DrawingAsPicture(small).png"" width=""400"" /> 
</p>
",0,0,1,0,construction,"[cad, construction, drill, plastic-part, solidworks]",23
cbrosque,CIFEseed,,https://github.com/cbrosque/CIFEseed,https://api.github.com/repos/CIFEseed/cbrosque,This repo will be used to explore haptics for Human-Robot Collaboration in Construction,"# CIFEseed
This project explores haptics for Human-Robot Collaboration in construction

## How to build and run this project:
More details for each of the tasks can be found in the ""Construction Tasks"" section of the Readme.
  - For running the tasks (from the main directory): 
      ```
      mkdir build
      cd build && cmake .. && make -j4
      ```
      Then to run the executables go to the bin directory that will be generated
     
  - For running the GUI (from the gui-construction directory): 
      ```
      python3 interface/servery.py ../construction/gui-construction.html & SERVER_PID=$!
      ```
      Remember to first run ./simviz_gui and ./controller_gui from the bin/gui-construction directory
      
   - You can find/add new tools, worlds and robot designs as urdf files in the ""models"" folder
   - This project uses SAI-2.0 to create the robotic simulations. 
   
# 1. Construction Tasks 
Controllers, worlds and simulations for 3 construction tasks: bolting, joint connection, and welding

## bolting_one_arm_CS225a: 
Construction project from CS225a Experimental Robotics Spring 2019-20. The team designed a mobile platform with a panda and a bolting tool to perform bolting in a parking structure. This folder can be used for reference for creating new 1 arm tasks.
  - Project report: https://tinyurl.com/cs225aReport
  - Final project video: https://tinyurl.com/cs225aVideo
  
## bolting_two_arms: 
- Task description: 2 arm bolting task
- World: 2 fixed base Panda robot arms
   
## joint_autonomous:
<!-- - Demo video:  -->
- Task description: Find joints between concrete slabs and pour material to seal them together 
- World: the file world.urdf uses joint_robot.urdf which has a holonomic mobile base and a 1 dof tool
- Notes: Goldbeck has a preference for a robot design that's specific to this task instead of the regular Panda arm solution
- To run the code (manually):  
  1) From the CIFEseed/build directory: ```cmake .. && make -j4 ```
  2) From any directory in a tab of its own: ```redis-server```
  3) From CIFEseed/bin/joint_autonomous: ```cd ../../bin/joint && ./simviz_joint  ```
  4) From CIFEseed/bin/joint_autonomous in another tab: ```cd ../../bin/joint && ./controller_joint```
- Alternatively, you can run the code using the clean_build and launch scripts: 
  1) From CIFEseed: ```./clean_build```
  2) From any directory in a tab of its own: ```redis-server ```
  3) From CIFEseed/bin/joint_autonomous: ```./launch```

## joint_haptics:
<!-- - Demo video:  -->
- Haptic feature: the user can intervene through haptic teleoperation (which allows them to feel the joint) and when they are done, resume and continue the autonomous task.
- To run the code:  
  1) From the CIFEseed/build directory: ```cmake .. && make -j4 ```
  2) From any directory in a tab of its own: ```redis-server```
  3) From CIFEseed/bin/joint_haptics: ```cd ../../bin/joint_haptics && ./simviz_joint_haptics ``` 
  4) From CIFEseed/bin/joint_haptics in another tab: ```cd ../../bin/joint_haptics && ./controller_joint_haptics```
  5) Launch redis client in another tab: ```redis-cli```; to set haptics: ```set active_state HAPTICS```; to continue autonomous state: ```set active_state RESUME```


## weld_haptics: 
- Demo video: https://tinyurl.com/weldingHaptics
- Task description: Autonomously navigate towards the perimiter of a rectangular steel anchor plate, allow for haptic exploration of the plate's perimeter, then weld and move to the next anchor
- World: the file world.urdf uses mmp_panda_weld.urdf which is a mobile base (visuals are a small cart), with a panda robot, and a welding tool end-effector
- Notes: combines autonomous navitation with haptic exploration of the steel anchor
- To run the code:  
  1) From the CIFEseed/build directory: ```cmake .. && make -j4 ```
  2) From any directory in a tab of its own: ```redis-server```
  3) From CIFEseed/bin/weld_haptics: ```cd ../../bin/weld_haptics && ./simviz_weld  ```
  4) From CIFEseed/bin/weld_haptics in another tab: ```cd ../../bin/weld_haptics && ./controller_weld```
  5) Launch redis client in another tab: ```redis-cli```; to set haptics: ```set active_state HAPTICS```; to continue autonomous state lift the haptic device
    
# 2. Graphical User Interfaces
Uses sai2-interfaces to modify controllers in a more intuitive, visual way: https://github.com/manips-sai-org/sai2-interfaces
## bolting_two_arms_gui: 
- work in progress to make a GUI for 2 arms for the 2 arm bolting task
- needs debugging
## weld_gui: 
- GUI that allows you to control one arm on a mobile base 

# 3. task_starter_code
Folder with potentially useful models (like the kuka_iiwa urdf), worlds, and controller examples for creating new tasks

 
",0,0,2,0,construction,"[construction, robotics, simulation]",23
dsd-sztaki-hu,BimReq,dsd-sztaki-hu,https://github.com/dsd-sztaki-hu/BimReq,https://api.github.com/repos/BimReq/dsd-sztaki-hu,BimReq is a ligtweight ontology to represent regulations and requirements in RDF for construction projects using BIM (Building Information Modeling). ,"# BimReq
BimReq is a ligtweight ontology to represent regulations and requirements in RDF for construction projects. 

## Metadata
* **URI**
  * `http://demo.dsd.sztaki.hu/bimreq`
* **Creators(s)**
  * András Micsik, Ádám Kovács
* **Version Information**
  * 0.9
* **Imports**
  * [express:](https://w3id.org/express#)
  * [foaf:](http://xmlns.com/foaf/0.1/)
  * [sh:](http://www.w3.org/ns/shacl#)
* **Ontology RDF**
  * RDF ([bimreq.ttl](bimreq.ttl))
### Description
BimReq is a ligtweight ontology to represent regulations and requirements in RDF for AEC (Architecture, Engineering, Construction) projects. The requirements can refer to regulations and may contain SHACL validation shapes for compliance checking of BIM models.

[Example for requirement description](bimreqExample.ttl)

[Example for validating with SHACL](examples/Bimreq-Shacl.ipynb) (Jupyter Notebook)

[Documentation](http://150.146.207.114/lode/extract?url=https%3A%2F%2Fdsd-sztaki-hu.github.io%2FBimReq%2Fbimreq.ttl&owlapi=true&lang=en)

Overview:

![bimreq-overview.png](bimreq-overview.png)

",0,0,6,0,construction,"[bim, construction, ontology, planning, rdf]",23
wshager,triply,,https://github.com/wshager/triply,https://api.github.com/repos/triply/wshager,Triply linked list for creating trees,"# Triply, a triply-linked list lib

Yet another data structure for creating trees.


## Install

`npm i triply`


## Usage

```javascript
const Triply = require(""../lib/triply"").Triply;

// NOTE only objects are valid entries
// which will be formatted using reserved keys.
// Here we use `data` to insert a number
const node = new Triply({data:1})
    .push({data:2}) // just append a sibling, the insertion point is moved to the new node
    .open({data:3}) // make the insertion point a branch and append a new child
    .close() // try to move the insertion point to the parent
    .push({data:4}) // append another sibling
    .previous() // try to move the insertion point back along the traversal path (the branch containing `data:2`)
    .open({data:5}) // append another child
    .push({data:6}); // append another sibling to that child

// traverse the tree (lazy iterator)
// we have to keep track of branch 'closers' (compare for example with XML closing tags)
for(let x of node.traverse()) console.log(""x"",Triply.isClose(x) ? ""closes: "" + Triply.link(x).data : x.data);
```


## License

[License](./LICENSE)


## API documentation

* [Triply Class](./docs/triply.md)
* [Functional implementation](./docs/chimp.md)

## About

Triply is a way to create in-memory trees with some very interesting performance characteristics:

* Fast traversal in 2 directions
* Fast appendChild, insertBefore, insertAfter, removeChild
* Fast access to siblings
* Fast access to the parent at the first or last child

Updates require writes to at most 4 pointers (5 when expanding or collapsing branches).

Use Triply to create trees that can be modified with some ease.


### Triply Pointer Rules

* 1 = depth-first traversal
* 2 = reversed traversal
* 3 = open/close link

Traversal directions (invert directions and arrows for reversed traversal):
* UP = BRANCH -> LEAF or BRANCH
* DOWN = BRANCH or LEAF -> CLOSE
* SAME = LEAF -> LEAF


### Tree Diagrams

```
           L
     1 // 2 1 \\ 2
      B 3-><-3 /B
  1 // 2      1 \\ 2
   B 3---> <---3 /B 1 --> <-- 2 B ~
```

Append a child at tier 1 (or a sibling at tier 2):

```
         L 1 --> <-- 2 L
     1 // 2          1 \\ 2
      B 3--->     <---3 /B
  1 // 2               1 \\ 2
   B 3--->          <---3 /B 1 --> <-- 2 B ~
```

Append a child at tier 0 (or a sibling at tier 1):

```
         L 1 --> <-- 2 L                   L
     1 // 2          1 \\ 2          1 // 2 1 \\ 2
      B 3--->     <---3 /B 1--> <-- 2 B 3-><-3 /B
  1 // 2                                      1 \\ 2
   B 3--->                                 <---3 /B 1 --> <-- 2 B ~
```


### Access logic

* firstChild: follow 1 from BRANCH
* lastChild: follow 3 to find CLOSE and then 2
* nextSibling: follow 1 from LEAF or 3 + 1 from BRANCH
* previousSibling: follow 2, if found CLOSE follow 3
* parent (O[no of siblings]): follow 2 from firstSibling or 1 + 3 from lastSibling
* firstChildTest: child -> 2 === BRANCH
* lastChildTest: child -> 1 === CLOSE

NOTE: Accessing the parent is only relevant for insertBefore when it's the first child.
",0,0,1,0,construction,"[construction, linked-list, modification, traversal, tree]",23
ChloeLo27,CoordGeom.js,,https://github.com/ChloeLo27/CoordGeom.js,https://api.github.com/repos/CoordGeom.js/ChloeLo27,A JavaScript framework developed for coordinate geometry calculation with vectors.,"# CoordGeom.js

A JavaScript framework developed for coordinate geometry calculation with vectors.

## CAUTION

-   **WARNING**: This library **DOES NOT** handle float point error.  Please bare this in mind.
-   when constructing new polygon, please check whether the points really form one before setting up the new object.
-   all points passed to new _polygon_, new _line segment_ and new _circle_ will be cloned, therefore de-referenced.  So any changes made to the point forming the algebraic object will not affect the already created object.

## Documentation

### First Public Release `v1.0` (Recommended)
[https://ChloeLo27.github.io/CoordGeom.js](https://ChloeLo27.github.io/CoordGeom.js)

### Edge (Use at your own risk)
[https://ChloeLo27.github.io/CoordGeom.js/edge](https://ChloeLo27.github.io/CoordGeom.js/edge)

## Installation

Simply include the `main.js` file then you're done.

Alternatively, you may directly link to the framework through the following urls for different releases:

### First Public Release `v1.0` (Recommended)
[https://cdn.jsdelivr.net/gh/ChloeLo27/CoordGeom.js@v1.0/main.js](https://cdn.jsdelivr.net/gh/ChloeLo27/CoordGeom.js@v1.0/main.js)

### Edge (Use at your own risk)
[https://cdn.jsdelivr.net/gh/ChloeLo27/CoordGeom.js@latest/main.js](https://cdn.jsdelivr.net/gh/ChloeLo27/CoordGeom.js@latest/main.js)
",0,0,0,0,construction,"[circle, construction, javascript-framework, polygon, vector]",23
jgartens,Levelset-Coding-Challenge,,https://github.com/jgartens/Levelset-Coding-Challenge,https://api.github.com/repos/Levelset-Coding-Challenge/jgartens,Levelset's Coding Challenge as part of an application for a Software Development Engineer position with the company. Goals are to develop a web application which takes a CSV as input and outputs various reports. More details in readMe and documentation folder.,"# Levelset-Coding-Challenge
Levelset's Coding Challenge as part of an application for a Software Development Engineer position with the company. Goals are to develop a web application which takes a CSV as input and outputs various reports. More details in readMe and attached PDF.


To Run The Application:

Make sure you have the latest version of java (JDK) installed
https://www.oracle.com/java/technologies/javase-downloads.html

Clone or download the repository into a folder of your choosing.  From the base in your command line (on a mac), run the following command:

java -jar /PATHTOYOURFOLDER/Levelset-Coding-Challenge-main/target/challenge-0.0.1-SNAPSHOT.jar

Note: Command may be slightly different for windows users

If it's not working, make sure that your path and folder names are correct ^^ up to the target folder, which shouldn't have been changed.

Go to the web address specified in your terminal when the program finishes outputting (probably localhost:8080)

Follow prompts to use application 


Email jacobgartenstein@gmail.com for questions / comments
",0,0,1,0,construction,"[construction, csv-import, deadlines, levelset, projects, webapp]",23
keenanbruni,procore-autosheet,,https://github.com/keenanbruni/procore-autosheet,https://api.github.com/repos/procore-autosheet/keenanbruni,Electron/Node.js application that locally syncs Procore drawings.,"# Autosheet

Autosheet is an Electron/Node.js desktop application that locally syncs Procore drawings in bulk. Currently under development but usable through npm install/npm start.

  - Procore user authentication handled through OAuth2
  - Utilizes underscore-observe & electron-store for state management

## Features & Implementation

Autosheet's content is split into 3 separate areas that handle the core functionality of the app:
* Login Page
* Dashboard
* Create/Edit Drawing Profile Modal

### Session

User authentication is handled by OAuth2 using Procore credentials. Once successfully authenticated, the user is routed to the Autosheet dashboard.

![Login Screen](https://i.imgur.com/Q422ou5.jpg)
![Procore Login Screen](https://i.imgur.com/JRyJ9cR.jpg)

### Autosheet Dashboard

The Autosheet dashboard displays a brief summary of existing drawing sync profiles. From this page the user has the option to add a new sync profile, edit an existing profile, or logout. 

![Autosheet Dashboard](https://i.imgur.com/DSEkF6O.jpg)

### Create/Edit Drawing Sync Profile

Upon clicking ""Add Drawings"" or clicking on an existing profile, the user is presented with a step-by-step modal dialogue to select which Procore drawing sets they want to download. The user can then choose to commence downloading, edit the profile, or delete the profile.

![Add Drawing Profile](https://i.imgur.com/5eb5pA1.jpg)
",0,0,1,0,construction,"[construction, procore]",23
nDocco,qs_DimSheet,,https://github.com/nDocco/qs_DimSheet,https://api.github.com/repos/qs_DimSheet/nDocco,A spreadsheet used to simplify summing operations for measurement sheets.,"# Dimension Sheet
The standard method of measurement for taking off elements of work is the dimension sheet.  The layout is typically a series of columns that provide a description, the dimensions for the work element, a multiplication for items with the same dimensions (timesing column), and a total (squaring column).

## The Measurement Section
The first column in each section can be used to describe the work item (e.g., excavation, backfill, concrete), the second column allows for a more detailed description of the location or any other relevant information.

This form uses three columns for expanded multiplication (e.g. *2 buildings x 2 members x 2 sides of given dimension*), dims are entered vertically in the dim column and 'squared out' in the next column.  The final column allows for typing the units represented where necessary.

![Layout of the measurement section](img/Layout.png)

## The Problem
When calculating totals in the squaring column the user must remember to multiply the correct row in the timesing columns by the appropriate number of cells in the sqauaring column (i.e., *2 for square metres, 3 for cubic metres*).

Occassional mistakes could be made, particularly where different formulas were used for dims without multipliers for quick entry.  Formulas may be copied and pasted without accounting for the differences, or occassionally assigning to the wrong type (e.g., *a 2-dimension formula to a 3-dimension item*).

## The Solution
The process was simplified to speed entry while standardising formulas for each type.  New formulas have been created (**m**, **sm**, and **cm**) for each type of item (1, 2, and 3-dimension respectively) which will automatically calculate the total.  This ensures no omissions are made and allows for easy checking if formulas are assigned to the correct type of calculation.

The actual vb code can be found [here](SMcmd.bas)
",0,0,1,0,construction,"[construction, measurement, surveying]",23
Utkarsh2902,OOPs,,https://github.com/Utkarsh2902/OOPs,https://api.github.com/repos/OOPs/Utkarsh2902,"Object-oriented programming (OOP) is a coding approach that organizes code into objects with properties and behaviors. It promotes code reusability, modularity, and abstraction. ","# OOPs
",0,0,1,0,construction,"[abstraction, classes-and-objects, construction, encapsulation, inheritance, pointers, polimorphism]",23
LaTonia-Mertica,construction-project-storysim,,https://github.com/LaTonia-Mertica/construction-project-storysim,https://api.github.com/repos/construction-project-storysim/LaTonia-Mertica,construction project site 3d visualization to complement construction project storyteller entrepreneurial pursuits,"# CONSTRUCTION PROJECT STORYSIM

**WHO:**<br>
**WHAT:**<br>
**WHEN:**<br>
**WHERE:**<br>
**HOW:**<br>

**WHY:**

**TECH STACK**

**MENTOR SUPORT**

**PROJECT MANAGEMENT**

[click here to visit trello board](https://trello.com/invite/b/61MNau1u/ATTI79804a4091e5fe989b77b2dfc94b0955B6C426EE/construction-project-storysim)

**RESOURCES**
",0,0,2,0,construction,"[construction, css, html, javascript, project, storysim, storyteller]",23
kanglicheng,Advanced-Software-Construction-MITx-6.005,,https://github.com/kanglicheng/Advanced-Software-Construction-MITx-6.005,https://api.github.com/repos/Advanced-Software-Construction-MITx-6.005/kanglicheng,Problem set solutions to MIT's software construction class in Java,"# Advanced-Software-Construction-MITx-6.005
Problem set solutions to MIT's software construction class in Java

From the course website: Software Construction introduces fundamental principles and techniques of software development, i.e., how to write software that is safe from bugs, easy to understand, and ready for change. The course includes problem sets and a final project. Important topics include specifications and invariants; testing; abstract data types; design patterns for object-oriented programming; concurrent programming and concurrency; and functional programming.
",0,0,1,0,construction,"[concurrency, construction, java, software-engineering]",23
aleksarias,kontrax,,https://github.com/aleksarias/kontrax,https://api.github.com/repos/kontrax/aleksarias,software to make the whole construction contracting process easier; it's already difficult enough!,"# Kontrax

## Setup New Machine

### Download and install protobuf compiler, protoc

Download the appropriate release here: https://github.com/google/protobuf/releases

Unzip the folder
Enter the folder and run 

    ./autogen.sh && ./configure && make

If you run into this error: autoreconf: failed to run aclocal: No such file or directory, 
run brew install autoconf && brew install automake. And run the command from step 3 again.

Then run these other commands. They should run without issues
    
    make check
    sudo make install
    which protoc
    protoc --version

### Download and install gRPC and protoc plugin for Go 

    go get -u google.golang.org/grpc
    go get -u github.com/golang/protobuf/protoc-gen-go
",0,0,1,0,construction,"[construction, contracting, electrician, golang, grpc, plumbing, postgresql, roofing]",23
SadiePi,CASC,,https://github.com/SadiePi/CASC,https://api.github.com/repos/CASC/SadiePi,A small library on top of p5.js for creating compass and straightedge constructions. Created with CodeSandbox.,"# CASC

A small library on top of p5.js for creating compass and straightedge constructions

Created with CodeSandbox
",0,0,1,0,construction,"[compass, construction, library, math, mathematics, maths, p5-js, p5-library, p5js, straightedge, typescript]",23
CarlosGPC1604,lubra,,https://github.com/CarlosGPC1604/lubra,https://api.github.com/repos/lubra/CarlosGPC1604,Página web para la empresa de Lubra,"# Getting Started with Create React App

This project was bootstrapped with [Create React App](https://github.com/facebook/create-react-app).

## Available Scripts

In the project directory, you can run:

### `npm start`

Runs the app in the development mode.\
Open [http://localhost:3000](http://localhost:3000) to view it in your browser.

The page will reload when you make changes.\
You may also see any lint errors in the console.

### `npm test`

Launches the test runner in the interactive watch mode.\
See the section about [running tests](https://facebook.github.io/create-react-app/docs/running-tests) for more information.

### `npm run build`

Builds the app for production to the `build` folder.\
It correctly bundles React in production mode and optimizes the build for the best performance.

The build is minified and the filenames include the hashes.\
Your app is ready to be deployed!

See the section about [deployment](https://facebook.github.io/create-react-app/docs/deployment) for more information.

### `npm run eject`

**Note: this is a one-way operation. Once you `eject`, you can't go back!**

If you aren't satisfied with the build tool and configuration choices, you can `eject` at any time. This command will remove the single build dependency from your project.

Instead, it will copy all the configuration files and the transitive dependencies (webpack, Babel, ESLint, etc) right into your project so you have full control over them. All of the commands except `eject` will still work, but they will point to the copied scripts so you can tweak them. At this point you're on your own.

You don't have to ever use `eject`. The curated feature set is suitable for small and middle deployments, and you shouldn't feel obligated to use this feature. However we understand that this tool wouldn't be useful if you couldn't customize it when you are ready for it.

## Learn More

You can learn more in the [Create React App documentation](https://facebook.github.io/create-react-app/docs/getting-started).

To learn React, check out the [React documentation](https://reactjs.org/).

### Code Splitting

This section has moved here: [https://facebook.github.io/create-react-app/docs/code-splitting](https://facebook.github.io/create-react-app/docs/code-splitting)

### Analyzing the Bundle Size

This section has moved here: [https://facebook.github.io/create-react-app/docs/analyzing-the-bundle-size](https://facebook.github.io/create-react-app/docs/analyzing-the-bundle-size)

### Making a Progressive Web App

This section has moved here: [https://facebook.github.io/create-react-app/docs/making-a-progressive-web-app](https://facebook.github.io/create-react-app/docs/making-a-progressive-web-app)

### Advanced Configuration

This section has moved here: [https://facebook.github.io/create-react-app/docs/advanced-configuration](https://facebook.github.io/create-react-app/docs/advanced-configuration)

### Deployment

This section has moved here: [https://facebook.github.io/create-react-app/docs/deployment](https://facebook.github.io/create-react-app/docs/deployment)

### `npm run build` fails to minify

This section has moved here: [https://facebook.github.io/create-react-app/docs/troubleshooting#npm-run-build-fails-to-minify](https://facebook.github.io/create-react-app/docs/troubleshooting#npm-run-build-fails-to-minify)
",0,0,1,0,construction,"[construction, infrastructure, landing-page, lubra, web, website]",23
ZijianWang-ZW,PPE_detection,,https://github.com/ZijianWang-ZW/PPE_detection,https://api.github.com/repos/PPE_detection/ZijianWang-ZW,Real-time PPE detection based on YOLO. Open high-quality dataset.,"# Real-time PPE Detection & Open Dataset ([Open Access paper link](https://www.mdpi.com/1424-8220/21/10/3478))

![avatar](figures/ppe_sample.gif)

## Introduction

The repository introduces eight DL models built on You Look Only Once (YOLO) architecture for PPE detection. Meanwhile, a novel high-quality dataset is constructed for detecting the person, the vest, and four helmet colors.

## Framework

![avatar](figures/methodology.PNG)

## CHV Dataset

A novel dataset  is constructed for detecting the helmet, the helmet colors and the person for this project, named **Color Helmet and Vest (CHV)** dataset. 

Instead of just accepting exiting images, strict criteria are designed at the beginning, and only  1,330 high-quality images among 10,000 ones from the Internet and open datasets are selected. 

<div align=center><img src=""figures/size_class.png"" width=""60%"" /></div>



The dataset is open for free use, please download at [Google Drive](https://drive.google.com/file/d/1fdGn67W0B7ShpBDbbQpUF0ScPQa4DR0a/view?usp=sharing) or [Baidu Yunpan (password: f003)](https://pan.baidu.com/s/1G9EbLKUgF1tcOPCeWSEeMw ). 

If the dataset helpes you, please cite the repository in your article:

`
@Article{wang2021ppe,
AUTHOR = {Wang, Zijian and Wu, Yimin and Yang, Lichao and Thirunavukarasu, Arjun and Evison, Colin and Zhao, Yifan},
TITLE = {Fast Personal Protective Equipment Detection for Real Construction Sites Using Deep Learning Approaches},
JOURNAL = {Sensors},
VOLUME = {21},
YEAR = {2021},
NUMBER = {10},
ARTICLE-NUMBER = {3478},
URL = {https://www.mdpi.com/1424-8220/21/10/3478},
ISSN = {1424-8220},
DOI = {10.3390/s21103478}
}`

Or
	
`Wang, Z.; Wu, Y.; Yang, L.; Thirunavukarasu, A.; Evison, C.; Zhao, Y. Fast Personal Protective Equipment Detection for Real Construction Sites Using Deep Learning Approaches. Sensors 2021, 21, 3478. https://doi.org/10.3390/s21103478`

## Results

- **YOLO v5x owns the best mAP, 86.55%.**
- **YOLO v5s has the faster processing speed, 52 FPS.**
- For YOLO v3 models, different detection layers are tested, while the more layers cannot improve the performance. 
- For YOLO v4 models,  the increase of training image size cannot contribute to better performance. 

<center><img src=""figures/map.png"" style=""zoom:100%;""/> 

<div align=center>Figure: Mean average precision in each model.</div>

<div align=center><img src=""figures/time.png"" width=""60%""/></div>

<div align=center>Figure: Average time for processing one image in each model (GPU: Tesla P40 with 24 GB; CPU: 4 cores with 8 GB). </div>



## 
If you are interested in my work, please visit <https://zijianwang1995.github.io/>
",34,34,2,2,construction-site,"[construction-safety, construction-site, deep-learning, ppe-detection, yolo]",23
gomezlucas,ConstructionSite__ProjectEnvato-NewDesign,,https://github.com/gomezlucas/ConstructionSite__ProjectEnvato-NewDesign,https://api.github.com/repos/ConstructionSite__ProjectEnvato-NewDesign/gomezlucas,"Landing Page for the Construction Site, HNG7 Internship","## Construction Site - Envato Project - Team F
Construction Site - Envato Project - Team F
New Main Design 
Slack Username: @lucasD
Email: gomez.d.lucas@gmail.com
Link:  
Designs:  https://www.figma.com/file/dyQQwghxeW3m6oHcJeQj7Q/Untitled?node-id=1%3A2


### Collaboration Instructions:

1. Clone this repository to your local PC.
2. Your assets such as images, CSS file, JavaScript file should be placed in the Images, CSS, Javascript folders respectively.
3. Use 90% botstrap for your styling.
4. Ensure responsiveness in your designs. **Important** .
5. Create a new branch locally name it according to the  instruction 
6. Once you are done working run ""git pull"" locally.
7. Push your code to the repository.
8. Make a Pull Request to the branch of the version you are working on.",3,3,2,0,construction-site,"[construction-site, css, html, javascript]",23
nberlette,f1,,https://github.com/nberlette/f1,https://api.github.com/repos/f1/nberlette,Automated image scraper powered by Deno KV and GitHub Actions. Scrapes a live photo of the Las Vegas Formula 1 track build every ~10 minutes.,"# 🏎️ @nberlette/f1 <img align=right src =""https://img.shields.io/github/actions/workflow/status/nberlette/f1/main.yml?label=Scrape%20Images%20&logo=github&style=for-the-badge&color=blue"" />

<picture>
  <source media=""(prefers-color-scheme: dark)"" srcset=""./docs/img/f1_artwork_4.png"">
  <img alt=""AI-generated artwork of a Formula 1 car racing down the Las Vegas Strip"" src=""./docs/img/f1_artwork_3.png"">
</picture>

---

<div align=""center"">

## Scraping photos of the Las Vegas Formula 1 track's construction

This is an autonomous image scraper developed using [TypeScript], [Deno], and
[GitHub Actions]. It was purpose-built to document the historic
[Formula 1][formula1] track construction in
[Las Vegas, Nevada][formula1-official-site], slated to host the inaugural
Heineken Silver Grand Prix on November 18th. The images will be stitched
together to form timelapse videos of the track's lifecycle.

Since June 3rd, 2023 this project has collected in excess of 15,000 images,
courtesy of a live-streaming [construction camera][oxblue] provided by the
track's developers. This project is not affiliated with [Formula 1][formula1].

---

[📸 **Latest Snapshot**][latest-snapshot] ·
[🗓️ **Previous Snapshots**][previous-snapshots] ·
[🌟 **Star on GitHub**][Star on GitHub] · ℹ️ [**More Information**][about]

---

| Estimated Top Speed | Circuit Length      | Corners | Straights | DRS Zones |
| ------------------- | ------------------- | ------- | --------- | --------- |
| 212 mph • 342 km/h  | 3.8 miles • 6.12 km | 17      | 3         | 2         |

</div>

---

## Latest Snapshot

<a href=""https://github.com/nberlette/f1/blob/main/assets/latest.jpg?raw=true"" title=""The latest image scraped from the Formula 1 track build in Las Vegas""><img src=""https://github.com/nberlette/f1/blob/main/assets/latest.jpg?raw=true"" alt=""The latest image scraped from the Formula 1 track build in Las Vegas"" style=""border-radius:8px"" /></a>

---

## About

The first scrape happened on June 3rd, 2023. As of October 1st, it has amassed
**over 16,000 photos** from **_two_ build sites**, equivalent to over **1.0GB**
of input material for the timelapse process.

### Where are the photos?

The photos are stored in the public [**GitHub Repository**][readme], thanks to
GitHub's wonderful free storage for open source projects. They're also persisted
to a [FoundationDB]-backed [**Deno KV** database][Deno KV].

### Who made this?

This project is maintained by [**Nicholas Berlette**][nberlette], developed as
an [**open source project**][readme] entirely in his spare time.

Tech stack includes [**TypeScript**][typescript], [**Deno**][deno],
[**Deno KV**][Deno KV], and [**GitHub Actions**][GitHub Actions].

> ⚠️ This non-commercial project is for educational purposes only.

### [**Star it on GitHub! ⭐**][Star on GitHub]

If you find this project intriguing, consider interacting with it on GitHub. By
starring the repository, you can help it gain more visibility. If you have a
suggestion or want to report a bug, feel free to open an issue or contribute to
the project by making a pull request.

Thanks for stopping by!

— Nicholas Berlette

---

## Previous Snapshots

<table>
<thead>
  <th>October 6th</th>
  <th>October 5th</th>
  <th>October 4th</th>
  <th>October 3rd</th>
</thead>
<tbody>
<tr>
<td><a href=""https://github.com/nberlette/f1/blob/main/assets/2023-10-06/22_19_08.jpg?raw=true"" title=""2023-10-06T22:19:08"" rel=""noreferrer noopener"" target=""_blank""><img src=""https://github.com/nberlette/f1/blob/main/assets/2023-10-06/22_19_08.jpg?raw=true"" alt=""2023-10-06T22:19:08a""style=""border-radius:8px"" /></a></td>
<td><a href=""https://github.com/nberlette/f1/blob/main/assets/2023-10-05/22_19_31.jpg?raw=true"" title=""2023-10-05T22:19:31"" rel=""noreferrer noopener"" target=""_blank""><img src=""https://github.com/nberlette/f1/blob/main/assets/2023-10-05/22_19_31.jpg?raw=true"" alt=""2023-10-05T22:19:31"" style=""border-radius:8px"" /></a></td>
<td><a href=""https://github.com/nberlette/f1/blob/main/assets/2023-10-04/22_19_54.jpg?raw=true"" title=""2023-10-04T22:19:54"" rel=""noreferrer noopener"" target=""_blank""><img src=""https://github.com/nberlette/f1/blob/main/assets/2023-10-04/22_19_54.jpg?raw=true"" alt=""2023-10-04T22:19:54"" style=""border-radius:8px"" /></a></td>
<td><a href=""https://github.com/nberlette/f1/blob/main/assets/2023-10-03/22_20_37.jpg?raw=true"" title=""2023-10-03T22:20:37"" rel=""noreferrer noopener"" target=""_blank""><img src=""https://github.com/nberlette/f1/blob/main/assets/2023-10-03/22_20_37.jpg?raw=true"" alt=""2023-10-03T22:20:37"" style=""border-radius:8px"" /></a></td>
</tr>
</tbody>
<thead>
  <th>October 2nd</th>
  <th>September 28th</th>
  <th>September 24th</th>
  <th>September 20th</th>
</thead>
<tbody>
<tr>
<td><a href=""https://github.com/nberlette/f1/blob/main/assets/2023-10-02/22_29_06.jpg?raw=true"" title=""2023-10-02T22:29:06"" rel=""noreferrer noopener"" target=""_blank""><img src=""https://github.com/nberlette/f1/blob/main/assets/2023-10-02/22_29_06.jpg?raw=true"" alt=""2023-10-02T22:29:06"" style=""border-radius:8px"" /></a></td>
<td><a href=""https://github.com/nberlette/f1/blob/main/assets/2023-09-28/22_24_03.jpg?raw=true"" title=""2023-09-28T22:24:03"" rel=""noreferrer noopener"" target=""_blank""><img src=""https://github.com/nberlette/f1/blob/main/assets/2023-09-28/22_24_03.jpg?raw=true"" alt=""2023-09-28T22:24:03"" style=""border-radius:8px"" /></a></td>
<td><a href=""https://github.com/nberlette/f1/blob/main/assets/2023-09-24/22_12_21.jpg?raw=true"" title=""2023-09-24T22:12:21"" rel=""noreferrer noopener"" target=""_blank""><img src=""https://github.com/nberlette/f1/blob/main/assets/2023-09-24/22_12_21.jpg?raw=true"" alt=""2023-09-24T22:12:21"" style=""border-radius:8px"" /></a></td>
<td><a href=""https://github.com/nberlette/f1/blob/main/assets/2023-09-20/22_22_10.jpg?raw=true"" title=""2023-09-20T22:22:10"" rel=""noreferrer noopener"" target=""_blank""><img src=""https://github.com/nberlette/f1/blob/main/assets/2023-09-20/22_22_10.jpg?raw=true"" alt=""2023-09-20T22:22:10"" style=""border-radius:8px"" /></a></td>
</tr>
</tbody>
<thead>
  <th>September 16th</th>
  <th>September 12th</th>
  <th>September 8th</th>
  <th>September 4th</th>
</thead>
<tbody>
<tr>
<td><a href=""https://github.com/nberlette/f1/blob/main/assets/2023-09-16/22_20_41.jpg?raw=true"" title=""2023-09-04T22:20:41"" rel=""noreferrer noopener"" target=""_blank""><img src=""https://github.com/nberlette/f1/blob/main/assets/2023-09-16/22_20_41.jpg?raw=true"" alt=""2023-09-04T22:20:41"" style=""border-radius:8px"" /></a></td>
<td><a href=""https://github.com/nberlette/f1/blob/main/assets/2023-09-16/22_45_35.jpg?raw=true"" title=""2023-09-16T22:45:35"" rel=""noreferrer noopener"" target=""_blank""><img src=""https://github.com/nberlette/f1/blob/main/assets/2023-09-16/22_45_35.jpg?raw=true"" alt=""2023-09-16T22:45:35"" style=""border-radius:8px"" /></a></td>
<td><a href=""https://github.com/nberlette/f1/blob/main/assets/2023-09-10/22_33_07.jpg?raw=true"" title=""2023-09-10T22:33:07"" rel=""noreferrer noopener"" target=""_blank""><img src=""https://github.com/nberlette/f1/blob/main/assets/2023-09-10/22_33_07.jpg?raw=true"" alt=""2023-09-10T22:33:07"" style=""border-radius:8px"" /></a></td>
<td><a href=""https://github.com/nberlette/f1/blob/main/assets/2023-09-04/22_49_09.jpg?raw=true"" title=""2023-09-04T22:49:09"" rel=""noreferrer noopener"" target=""_blank""><img src=""https://github.com/nberlette/f1/blob/main/assets/2023-09-04/22_49_09.jpg?raw=true"" alt=""2023-09-04T22:49:09"" style=""border-radius:8px"" /></a></td>
</tr>
</tbody>
</table>

## How it Works

The majority of the work happens in [`main.ts`][main.ts], despite it only being
3 lines of code. It is responsible for invoking the scraper located in
[`src/scrape.ts`][src-scrape.ts], and is ran every 10 minutes by a GitHub Action
defined by the workflow in [`main.yml`][workflow].

[📖 **Click here for an in-depth explanation of the scrape process**](#scrape-process-step-by-step)

### Assets and Data

Images are named after their capture time as a `JPEG` file in **UTC**. For
example, an image captured at `2023-07-09T04:28:57` would be saved as
[`./assets/2023-07-09/04_28_57.jpg`](https://github.com/nberlette/f1/blob/main/assets/2023-07-09/04_28_57.jpg?raw=true).
The latest image is always saved as [`./assets/latest.jpg`][latest-img] for easy
access.

#### Cloud Persistence

Each image is also persisted in a Deno KV database, backed by FoundationDB on
the edge thanks to Deno Deploy. For added redundancy and convenience.

#### Workflow Artifacts

All scraped assets are also saved as GitHub Workflow artifacts for 90 days,
allowing remote access without having to clone all the images.

### Tools Used

- [x] [`Deno v1.37.1`][Deno v1.37.1]
- <small>Rust-based JS runtime, sandboxed, with great TS/TSX support.</small>
- <small>Provides the tools for network and file system operations.</small>
- [x] [`TypeScript 5.2.2`][TypeScript]
- <small>Superset of JavaScript featuring advanced static typechecking.</small>
- <small>Better type safety means more readable and maintainable code.</small>
- [x] [`GitHub Actions`][GitHub Actions]
- <small>Provides **free** macOS virtual machines powering the scraper.</small>
- <small>Responsible for scheduled execution of the scraper [workflow]</small>
- <small>Temporarily stores the image [artifacts](#workflow-artifacts)</small>
- [x] [`Deno KV`][Deno KV Docs] <small> _(currently in beta)_</small>
- <small>Provides us with global data persistence and caching</small>
- [x] [`ffmpeg`][ffmpeg] <small> _(timelapse feature coming soon)_</small>
- <small>Leveraged by GitHub Actions to compile timelapse videos</small>

### Image Source

The data source on the scraped images is an updating live photo feed sourced
from the official Formula 1 website. As long as it remains up and transmitting
data, this project will continue to auto-update.

> This project will continue to update until the track is completed, but could
> be discontinued at any time if the image stream becomes unavailable.

---

<picture>
  <source media=""(prefers-color-scheme: dark)"" srcset=""./docs/img/f1_artwork_1.png"">
  <img alt=""AI-generated artwork of a Formula 1 car racing down the Las Vegas Strip"" src=""./docs/img/f1_artwork_2.png"">
</picture>

> AI-generated F1 art created with [SDXL 1.0][sdxl] and the prompt
> `""Formula 1 cars on the Las Vegas Strip""`

---

## Scrape Process, Step-by-Step

1. GitHub Actions runner picks up the job every ~10 minutes, depending on
   traffic.
2. The runner checks out the repository, installs [Deno][deno], and executes the
   command `deno task scrape`, which in turn invokes the [`main.ts`][main.ts]
   file in the project root.
3. [`main.ts`][main.ts] imports `scrape` and double-checks that it is being run
   as the main module (and not imported by another). If so, it immediately calls
   the `scrape()` function, defined in [`src/scrape.ts`][src-scrape.ts] as
   follows:
4. An asynchronous function that contains two inner functions, `read` and
   `write`. The following steps are taken when `scrape` is called:
   1. `read()` is called with `IMAGE_URL` from
      [`src/constants.ts`][src-constants.ts].
      1. Internally, the Fetch API is used to scrape the image from the source
         URL.
      2. If the request fails, it will be retried up to the number of times
         defined by the `ATTEMPTS` constant, with delays between each attempt.
      3. If all attempts are exhausted without success, it **terminates
         immediately**.
      4. If it succeeds, returns a new [`Image`][src-image.ts] instance.
   2. `write()` is called with the Image instance as its only argument.
      1. The image is compared for equality against the latest image, using a
         timing-safe equality check to avoid exposing ourselves to timing-based
         attacks.
         - If they are equal, it means the image has not yet been updated at the
           origin. The scrape will start over from step 4.1, and repeat the
           process until either a new image is found, or the maximum number of
           `ATTEMPTS` is exhausted.
         - If a new image is not discoverd, the job will **immediately
           terminate**.
      2. If we've made it this far, we have a fresh image and we need to store
         it. It is first written to the `Deno KV` database by
         [`Image.write()`][src-image.ts].
      3. The image is written to a file by [`Image.writeFile()`][src-image.ts]
         with our [naming conventions](#assets-and-data), and logged to
         `stdout`.
      4. The image is written to [`./assets/latest.jpg`] as well, and the size
         difference is logged to `stdout` and GitHub Actions Outputs.
      5. The [`setOutput`][src-helpers-actions.ts] method is called with all of
         the metadata for the image, so the runner can process it further.
   3. The scrape is now complete and the runner proceeds to the next step.
5. The photo is stored as a GitHub Workflow artifact for **90 days**.
6. The changes are committed and pushed to the repository.
7. The job completes and the runner is terminated.

---

## Further Reading

### Camera Location

The camera is at the ""Harmon Paddock"" zone of the track, located just southeast
of _""The Strip""_ (Las Vegas Blvd) near Harmon Avenue and Koval Lane. The camera
itself is mounted directly on the roof of the Paddock building, facing
south-southeast. It gives a great view of the grandstands (bleachers) and what
appears to be shaping up to be the start/finish line of the track.

#### Camera Angle Changes

Something which is completely out of my control is anything related to the
actual camera itself. That being said, when the construction crew suddenly chose
to relocate it on August 15th, it effectively split the timelapse part of this
project into two parts.

##### What changed?

The camera **_was_** facing north-northwest, giving a bird-eye view of the
Paddock area and the track's first corner, with the iconic Las Vegas Strip in
the background. As of August 15th, however, the camera is now facing
south-southeast towards the Harry Reid International Airport, with the MGM Grand
in the background to the right.

It's not all bad though - in my opinion, the new angle is far superior to the
previous one, and it provides quite a bit more content for us since it's in an
area with much more activity.

##### What are we doing about it?

The first angle will be made into a separate timelapse video, from June 3rd,
2023 through August 15th, 2023. The second angle will be from August 15th, 2023
through the completion of the track.

### Future Plans

A frontend display for viewing the images as a growing timelapse is under
development. This will also help create a timelapse video once the track build
is complete. Check [`n.berlette.com/f1`][n.berlette.com/f1] for updates.

---

<footer align=""center"">

#### [MIT] © [**Nicholas Berlette**][nberlette] • Made with ♥️ in Las Vegas, NV

<small>This project is not affiliated with [Formula 1][formula1] and has no
commercial interests.</small>

</footer>

<!-- Project Links -->

[latest-snapshot]: #latest-snapshot ""View the latest snapshot from the construction site""
[previous-snapshots]: #previous-snapshots ""View some of the previously captured snapshots""
[about]: #about ""Interested in how it works? Click here for more info!""
[MIT]: https://nick.mit-license.org ""MIT License""
[nberlette]: https://github.com/nberlette ""Nicholas Berlette's GitHub profile""
[n.berlette.com/f1]: https://n.berlette.com/f1 ""View the GitHub Pages site at n.berlette.com/f1""
[Star on GitHub]: https://github.com/nberlette/f1/stargazers ""Star this project on GitHub!""
[readme]: https://github.com/nberlette/f1#readme ""View the README on GitHub""
[workflow]: https://github.com/nberlette/f1/blob/main/.github/workflows/main.yml ""GitHub Actions workflow file""
[assets]: https://github.com/nberlette/f1/tree/main/assets ""View the 'assets' folder on GitHub""
[main.ts]: https://github.com/nberlette/f1/blob/main/main.ts ""View the source code for the 'main.ts' file on GitHub""
[src-scrape.ts]: https://github.com/nberlette/f1/blob/main/src/scrape.ts ""View the source code for the 'src/scrape.ts' file on GitHub""
[src-helpers.ts]: https://github.com/nberlette/f1/blob/main/src/helpers.ts ""View the source code for the 'src/helpers.ts' file on GitHub""
[src-constants.ts]: https://github.com/nberlette/f1/blob/main/src/constants.ts ""View the source code for the 'src/constants.ts' file on GitHub""
[src-image.ts]: https://github.com/nberlette/f1/blob/main/src/image.ts ""View the source code for the 'src/image.ts' file on GitHub""
[src-helpers-actions.ts]: https://github.com/nberlette/f1/blob/main/src/helpers/actions.ts ""View the source code for the 'src/helpers/actions.ts' file on GitHub""
[latest-img]: https://github.com/nberlette/f1/blob/main/assets/latest.jpg?raw=true&no-cache&cache=no-cache ""The latest snapshot of the Formula 1 track construction site in Las Vegas, Nevada.""
[artwork-1]: ./docs/img/f1_artwork_1.png ""AI-Generated artwork of a Formula 1 car racing down the Las Vegas Strip""
[artwork-2]: ./docs/img/f1_artwork_2.png ""AI-generated artwork of a Formula 1 car racing down the Las Vegas Strip""
[artwork-3]: ./docs/img/f1_artwork_3.png ""AI-generated artwork of a Formula 1 car racing down the Las Vegas Strip""
[artwork-4]: ./docs/img/f1_artwork_4.png ""AI-generated artwork of a Formula 1 car racing down the Las Vegas Strip""

<!-- Third Party Links -->

[GitHub Actions]: https://github.com/features/actions ""GitHub Actions Official Landing Page""
[sdxl]: https://github.com/Stability-AI/stablediffusion ""Stable Diffusion XL 1.0""
[ffmpeg]: https://ffmpeg.org ""The FFmpeg Project Official Website""
[Track Layout]: https://www.f1lasvegasgp.com/track-layout ""Formula 1's Las Vegas Grand Prix Track Layout""
[formula1]: https://www.formula1.com/en/latest/article.las-vegas-to-host-formula-1-grand-prix-from-2022.3Z1Z3ZQZw8Zq8QZq8QZq8Q.html ""Formula 1's announcement of the Las Vegas Grand Prix""
[formula1-official-site]: https://www.formula1.com/en/racing/2023/Las_Vegas.html ""Official Site for the Formula 1 Heineken Silver Las Vegas Grand Prix 2023""
[oxblue]: https://oxblue.com ""OxBlue Construction Cameras""
[typescript]: https://typescriptlang.org ""TypeScript's Official Website""
[deno]: https://deno.land ""Deno's Official Website - A secure runtime for JavaScript and TypeScript""
[Deno KV]: https://deno.land/manual@v1.36.0/runtime/kv ""Deno KV - key-value store built directly into the Deno runtime.""
[FoundationDB]: https://www.foundationdb.org ""FoundationDB's Official Website""
[Deno v1.37.1]: https://deno.land/manual@v1.37.1
[Deno KV Docs]: https://docs.deno.com/kv/manual
",3,3,2,0,construction-site,"[automated, construction-site, cron, data-mining, deno, deno-kv, f1, formula1, github-actions, image-scraper, las-vegas, photos, racecar, scraper, scraping, timelapse, typescript]",23
Yannick947,deep_bau,,https://github.com/Yannick947/deep_bau,https://api.github.com/repos/deep_bau/Yannick947,Hackathon for construction sites,"# DeepBau

Hackathon for construction sites
48hours, 2 persons

Video pitch and full description available on [Devpost](https://devpost.com/software/sdacathon_?ref_content=user-portfolio&ref_feature=in_progress).


## Concept

![""DeepBau concept""](images/DeepBau_concept.png)

## Inspiration

Digitalization is not bypassing the construction industry. Everywhere you hear buzzwords like BIM or lean construction. These methods are used to optimize the individual process chains of construction projects and to identify interfaces as early as the palletization phase. But where exactly do problems arise? How can we avoid wasting resources such as time, material and manpower? This is exactly where we want to start with DeepBau. There is a lot of data, but it is stored unused on servers of individual companies. We evaluate this data and try to develop optimized construction process plans with the help of AI. Our process mining tool DeepBau brings structure and clarity to confusing construction projects. Lean construction is made possible through smart visualizations of process chains and AI algorithms are used to detect future events and problems at an early stage.

![""DeepBau concept""](images/problem.png)


## What it does

User-defined visualization for process chains in ongoing construction projects
Visualizations of the latest progress on the construction site
Visualization of the temporal course of resources and processes: Work equipment, material, people, weather
AI algorithm to predict future project steps

## How we built it

- Django webapp
- Bootstrap v5 frontend
- Python backend
- LSTM encoder-decoder architecture

## What's next for DeepBau

Direct connection of the api of the datalake to our webapp (currently all existing data is downloaded and loaded from memory)
Improving the training of the AI algorithms with more computing power.

",2,2,2,0,construction-site,"[bootstrap, clustering, construction-site, django, keras, machine-learning, process-mining, tensorflow, time-series-forecasting]",23
pianotard,scp_crane,,https://github.com/pianotard/scp_crane,https://api.github.com/repos/scp_crane/pianotard,"An approach to solve crane placement problem in construction site layout planning using linear optimization, as explored by Dr Justin Yeoh. Adapted from code produced by Dr Justin Yeoh on line 784 of scp_old.py",,2,2,1,0,construction-site,"[construction-site, linear-optimization, set-cover-problem]",23
smartconstructiongroup,Tracking-and-Material-Counting,,https://github.com/smartconstructiongroup/Tracking-and-Material-Counting,https://api.github.com/repos/Tracking-and-Material-Counting/smartconstructiongroup,"Official code for ""Deep-Learning Based Construction Progress Tracking and Material Counting Using Existing Site Surveillance Camera""","# Tracking and Material Counting

This repo is an implementation of our paper:

[Deep-Learning Based Construction Progress Tracking and Material Counting Using Existing Site Surveillance Camera](https://)
<details>
<summary>Abstract</summary>

> A framework was developed using state-of-the-art deep learning methods for accurately counting materials in a low-light indoor construction jobsite environment. The Yolo v4 algorithm was improved to achieve a short-time convergent and accurate detection of the site operatives and materials. Then, DenseNet was deployed for classifying and recognising the objects. Finally, MC module based on morphology operations and the Hough transform was applied to automate counting materials within each stack.

</details>

---

Main steps of the framework are:
- Detection
- Classification
- Couting
- Prediction

In the following image, you can see the steps of the farmework with more details.
![main_figure1](https://user-images.githubusercontent.com/119409598/216583159-1b5eb1fe-525b-44cf-a351-941d647f44de.gif)

## Configuration
#### `Detection`
For object detection, we used [Yolov4 code](https://github.com/AlexeyAB/darknet) as a basic code and then improving loss function on it.
For running Yolov4 on own dataset, we modified **obj.name**, **obj.dat**, **yolov4.cfg**, and **src/**.
We put google colab code for this part on the Detection folder.
#### `Classification`
We finetuned [DenseNet-161](https://github.com/flyyufelix/DenseNet-Keras) in keras platform for our three classes of materials (0: *left*, 1: *frontal*, and 2: *right*). We put the finetuned denseNet for own data, implementing google colab on the Classificatin folder.
#### `Counting`
Site operatives counted by the results of the detection phase. However, the materials counted by MC module, which is based on the morphology operations, Hough Transform, and post processing algorithm.
#### `Prediction`
Finally, our framework could predict the rate of waste, installed, and imported materials and also the number of operative sites in a scene.
In the following image, you can the results of the framework.
![results](https://user-images.githubusercontent.com/119409598/216588602-6705e122-1ef9-444e-8da3-7cadf092372b.gif)
",0,0,1,0,construction-site,"[construction-progress, construction-site, deep-learning, indoor, material-tracking, object-detection, tracking-and-counting]",23
jpjagt,maqc,,https://github.com/jpjagt/maqc,https://api.github.com/repos/maqc/jpjagt,Code tooling to facilitate the measuring of air quality (on construction sites),"# measuring construction sites

## setup

this contains a list of steps you should take to set up the environment.

### virtualenv

we'll use `virtualenv` to get a separated python environment for our current project.

if you don't have it yet, install it:

```sh
pip install virtualenv
```

then, create a virtualenv for this project, with the name `mcs`:

```sh
virtualenv ~/.virtualenvs/mcs
```

**anytime** you open your terminal, you need first activate this environment with:

```sh
source ~/.virtualenvs/mcs/bin/activate
```

### packages

if you have activated the `mcs` environment, run this to install the required packages:

```sh
pip install -r requirements.txt
```

we will also install our own code as a local package, to circumvent python's
module import hell:

```sh
pip install -e .
```

now, everything in the `mcs` directory will become easy to import: `import mcs.constants`, for instance.

### .env file

last, we need to indicate some values which will be different for everyone,
like the root directory of this project. copy over the example file
`.env.example` to `.env`:

```sh
cp .env.example .env
```

open your `.env` file, and start filling in the values.

any of these values are accessible in python through the `decouple` package:

```python
from decouple import config
value = config(""SOME_ENV_VALUE"")
```
",0,0,2,0,construction-site,"[air-quality, construction-site, sensor, toolkit]",23
EncryptEx,landing,,https://github.com/EncryptEx/landing,https://api.github.com/repos/landing/EncryptEx,A landing static HTML ,"<p align=""center""><a href=""#""><img src=""https://github.com/EncryptEx/landing/blob/original/build.png"" alt=""Hat"" height=""60""/></a></p>
<h1 align=""center"">Landing</h1>
<p align=""center"">A simple HTML page to keep your visitors entertained</p>
<p align=""center"">
	<img src=""https://img.shields.io/github/repo-size/EncryptEx/landing""/>
	<img src=""https://img.shields.io/github/languages/top/EncryptEx/landing""/>
	<img src=""https://img.shields.io/github/last-commit/EncryptEx/landing?""/>
	<img src=""https://img.shields.io/discord/729442309145493597""/>
</p>

# Demo
<a href=""https://encryptex.me/landing/"">Live Demo</a><br>
![Demo image](https://encryptex.me/landing/assets/img/3.png)
![Demo image](https://encryptex.me/landing/assets/img/2a.png)
![Demo image](https://encryptex.me/landing/assets/img/1.png)
# ⭐ Stargazers <br>
[![@EncryptEx/landing](https://reporoster.com/stars/EncryptEx/landing)](https://github.com/EncryptEx/landing/stargazers)

# ⁉ FAQ
## 🌐 Where do I have to place theese files?
In your public web folder, such as ``htdocs``, ``www``, or ``public_html``. Thoose are the most popular (Apache, NGINX, VestaCP...) 
",0,0,1,0,construction-site,"[construction-site, inprogress, landing-page, static]",23
snehilsanyal,Construction-Site-Safety-PPE-Detection,,https://github.com/snehilsanyal/Construction-Site-Safety-PPE-Detection,https://api.github.com/repos/Construction-Site-Safety-PPE-Detection/snehilsanyal,⛑️⚒️ Custom object detection for PPE Detection of Construction Site Workers. This repo contains notebook for PPE Detection using YoloV8.,"# PPE Detection for Construction Site Safety using YoloV8
![Alt text](assets/videoconstruc2.gif)
> 4,764 workers died on the job in 2020 (3.4 per 100,000 full-time equivalent workers). Workers in transportation and material moving occupations and construction and extraction occupations accounted for nearly half of all fatal occupational injuries (47.4 percent), representing 1,282 and 976 workplace deaths, respectively. 
>
> *Occupational Safety and Health Administration (US Department of Labour)*


## Introduction

There have been various accidents in construction sites, due to the lack of safety equipments for workers. The aim of this project was to detect PPE on a worker, which can be further used for tracking and triggerring alarm (safety monitoring) in future. We use the dataset provided by Roboflow on [**Construction Site Safety Image Dataset**](https://universe.roboflow.com/roboflow-universe-projects/construction-site-safety). 

For easier use the dataset is already uploaded here: [**Kaggle Dataset**](https://www.kaggle.com/datasets/snehilsanyal/construction-site-safety-image-dataset-roboflow).

The dataset consists of 2801 image samples with labels in YoloV8 format. These images are split into `train: 2605`, `valid: 114` and `test: 82` sets. Each folder consists of `images` and `labels` folders.

There are 10 classes to detect from the dataset: 

**'Hardhat', 'Mask', 'NO-Hardhat', 'NO-Mask', 'NO-Safety Vest', 'Person', 'Safety Cone', 'Safety Vest', 'machinery', 'vehicle'**


![](assets/ppe.webp)


## Setup

The code was run on Kaggle, with a P100 GPU. We installed the `ultralytics` library by [**Ultralytics**](https://docs.ultralytics.com) to run YoloV8 custom object detection on the dataset.

For more information check out this notebook: [**Check yo'self before you wreck yo'self - CSS EDA**](https://www.kaggle.com/code/snehilsanyal/check-yo-self-before-you-wreck-yo-self-css-eda). 

**Note:** This repository contains all the results, visualizations and best model after custom training on the dataset.

## File Hierarchy

1. `data` folder consists of the yaml file required for training. It also contains 3 folders `train`, `valid` and `test`. Each of these folders have 2 subfolders `images` (with .jpg files) and `labels` (with .txt annotations).
2. `results` folder consists of the prediction results of the model, confusion matrix plot, visualizations of the train and valid batches and PR curves.
3. `models` folder consists of 2 models, `yolov8n.pt` which is the pre-trained model on COCO128.yaml and `best.pt` which is the custom trained yolov8n model on our dataset.
4. `source_files` folder consists of videos and images for evaluation of our custom trained model.
5. `output` folder consists of output produced by our custom object detection model after 100 epochs of training.



## Code

```
├───.ipynb_checkpoints
├───assets
├───data
├───├──data.yaml
├───├──ppe_data.yaml
│   ├───test
│   │   ├───images
│   │   └───labels
│   ├───train
│   │   ├───images
│   │   └───labels
│   └───valid
│       ├───images
│       └───labels
├───models
├───output
│   └───output_yolov8n_100e
├───results
└───source_files
```

## Results

The training of YoloV8n model was done for 100 epochs and was completed in 2.719 hours. After training, we get the following results:

![Alt text](results/confusion_matrix.png)

![Alt text](results/train_batch14672.jpg)

![Alt text](results/val_batch2_pred.jpg)

![Alt text](results/results.png)

## Outputs

![Alt text](output/output_yolov8n_100e/construction-safety.jpg)
![Alt text](output/output_yolov8n_100e/portrait-of-woman-with-mask-and-man-with-safety-glasses-on-a-construction-HX01FH.jpg)
![Alt text](output/output_yolov8n_100e/two-young-construction-workers-wearing-555864.jpg)
## Future Work

1. Train the model for more epochs.
2. Compare with 4 other models by YoloV8.
3. Create ID tracking of workers and save bounding boxes of workers not wearing proper PPE.
4. ML App deployment with alarm trigerring.
",21,21,1,0,construction-safety,"[construction-safety, helmet-detection, mask-detection, object-detection, ppe-detection, safety-monitoring, worker-safety, yolov8]",23
safetyAI,Company_report_public,safetyAI,https://github.com/safetyAI/Company_report_public,https://api.github.com/repos/Company_report_public/safetyAI,Anonymized report from one of Safety AI's consulting projects,"### Company report public

The present document is a technical report that was delivered by Safety AI as part of a consulting project.
It is made publicly available in an anonymized form with expressed consent from the client.
The objective of making this report publicly available is twofold: giving future Safety AI's clients a better idea of what they can expect out of a project, and transparently sharing methods with the construction safety research community and practitioners.

### Contact
If you are interested in collaborating with Safety AI, or if you simply want to learn more about the Safety AI research and offerings, please visit https://www.safetyfunction.com/safety-ai-details or email matthew dot hallowell at safetyfunction.com or antoine dot tixier at safetyfunction.com.


### How to cite this report?
If you use some of the ideas and methods presented in this report in your research or your own work, or if you just need to refer to this report, in a literature review for instance, please use the following reference:

Antoine J.-P., Tixier and Hallowell, Matthew R.
Company Data Analysis Summary.
*Safety AI technical report*.
June 8, 2020.
URL: https://github.com/safetyAI/Company_report_public/blob/master/Company_report_public.pdf

",0,0,3,0,construction-safety,"[artificial-intelligence, construction-safety, data-visualization, deep-learning, doc2vec, information-retrieval, keyword-extraction, machine-learning, natural-language-processing, nlp, python, r, random-forest, reports, risk-analysis, safety, search-engine, svm, word2vec, xgboost]",23
AHA-Taiwan,Safety,AHA-Taiwan,https://github.com/AHA-Taiwan/Safety,https://api.github.com/repos/Safety/AHA-Taiwan,了解保險、工安教材、工地安全守則與規範,"# Safety

### **為參與者，投保工作保險**
無論你找親戚家人或鄰居朋友來參與工作，皆務必為每一位參與者，投保工作保險。<br>

***

### **工作安全守則**
開始合作建造前，請務必先觀看，以下勞工安全影片及官方災害預防手冊：<br>
 * [勞工安全衛生影片](https://www.youtube.com/playlist?list=PLz1XScQX1xx-5OFmlnAyKtxVCDZGZWF6w)<br>
 * [職業安全衛生影片專區宣導](https://www.youtube.com/playlist?list=PLtja6wTyqnAnwDr2Z4dkwwqZAQNmCmNp3)<br>
 * [勞動部職業安全衛生署-宣導資料-手冊](https://www.osha.gov.tw/1106/1196/10141/10151/10154/)<br>
 * [營造業小型工地職業災害預防宣導手冊](https://reurl.cc/p33Nr)<br>

***

### **基本工地規範**
開始合作建造前，請務必先觀看，以下官方工地安全規範：<br>
 * [內政部營建署勞工安全衛生工作守則](https://reurl.cc/YEEzo)<br>
 * [營造安全衛生設施標準圖解](https://reurl.cc/700xl)<br><br>

合作建造之工地規範：<br>
 * 工作規範與態度：<br>
        o 進入工地，務必穿著全包覆腳部的鞋子。<br>
        o 鷹架上、下方工作，必須戴上安全帽。<br>
        o 高空作業，請務必穿著安全繫繩。<br>
        o 我們每個動作，參與者可能都看在心裡。<br>
        o 小細節，是對建築負責，也是對自己的態度負責。<br>
        o 我們是來自四面八方的團體，你的行為代表著你的價值。<br>
        o 這是共同任務，請隨時關注夥伴狀況和請求，勇於分享你的能力。<br><br>
* 關於工具的操作：<br>
        o 工具請勿隨意丟置亂放。<br>
        o 工具依【電動、氣動、手動、安全】分類。<br>
        o 電動工具之動力插頭勿直接放置地面。<br>
        o 下雨時，電動工具請先立即收於室內。<br>
        o 工具勿隨意放置地面，每個工具和配件均有正確的位置。<br>
        o 所有工具每日收工後均應【清洗、清點、歸還、記錄】。<br>
        o 工具損毀、故障、遺失等情況，應立即【呈報、記錄】。<br><br>
 * 關於材料的加工：<br>
        o 參與者來來往往，材料請勿隨意放置。<br>
        o 建材得來不易，淋雨、受地氣、潮濕，會降低建築壽命。<br>
        o 材料混合有正確比例，接合有標準界面，勿隨意更動。<br>
        o 廢料需回收，鐵可秤重賣，木可再製，這是對建築尊敬。<br><br>

***
",0,0,2,0,construction-safety,"[aha-tool-library-team, construction-safety, site-safety]",23
gengyanlei,reflective-clothes-detect-yolov5,,https://github.com/gengyanlei/reflective-clothes-detect-yolov5,https://api.github.com/repos/reflective-clothes-detect-yolov5/gengyanlei,reflective-clothes-detect-dataset、helemet detection yolov5、工作服(反光衣)检测数据集、安全帽检测、施工人员穿戴检测,"## reflective-clothes-detect-yolov5 and dataset 

* author is leilei
* yolov5 detect qq群: 980489677, qq2群: 710514100
* 数据集下载链接详见说明-Please refer to the instructions for the data set download link!
* [**README_ZN 中文版说明**](https://github.com/gengyanlei/reflective-clothes-detect/blob/master/README_ZN.md)
* [**README_EN English Description**](https://github.com/gengyanlei/reflective-clothes-detect/blob/master/README_EN.md)
* [**tensorRt inference python version**](https://github.com/gengyanlei/onnx2tensorRt)

<!--
### Add competitions !!!
+ [阿里天池比赛-欢迎参加](https://tianchi.aliyun.com/competition/gameList/activeList)

|![game](./result/ali_guangdong.jpg)|
|----|
-->

### demo
|![new_demo](./result/re_pred.jpg)|
|----|

### Data Label Tool
+ [CVAT](https://github.com/openvinotoolkit/cvat)
+ [CVAT-Tutorial](https://blog.csdn.net/LEILEI18A/article/details/113385510)

## Other
* [building-segmentation-dataset](https://github.com/gengyanlei/build_segmentation_dataset)
* [fire-smoke-detect-datatset](https://github.com/gengyanlei/fire-detect-yolov4)
",357,357,5,8,helmet-detection,"[helmet-detection, reflective-clothes-detect, yolov5]",23
wujixiu,helmet-detection,,https://github.com/wujixiu/helmet-detection,https://api.github.com/repos/helmet-detection/wujixiu,Helmet Detection on Construction Sites,"# Automatic Hardhat Wearing Detection

Detecting hardhat-use and identifying the corresponding colors of a hardhat on construction sites based on SSD framework.

## Introduction

This work tries to automate the monitoring of whether people are wearing hardhat on the construction sites and identify the corresponding colors.  Currently,  on the proposed dataset of GDUT-Hardhat Wearing Detection (GDUT-HWD), the SSD model combined with our reverse progressive attention (SSD-RPA) achieves  83.89% mAP with the input size 512×512. In addition, we have released models that are suitable for mobile devices.

## Preparation

1. Install dependencies the Caffe framework needs. You can visit the [caffe official website](http://caffe.berkeleyvision.org/installation.html) and follow the instructions there to install the dependent libraries and drivers correctly.

2. Clone the SSD-RPA repository and compile the code.

   ```shell
   git clone https://github.com/wujixiu/helmet-detection.git
   
   cd helmet-detection/hardhat-wearing-detection/SSD-RPA/
   
   make all -j8
   ```

3. following the instructions in SSD (https://github.com/weiliu89/caffe/tree/ssd) to prepare data.

## Train a model (on Linux)

Suppose the code is running under the SSD-RPA directory and data is prepared.

1. Download [VGG_ILSVRC_16_layers_fc_reduced](https://pan.baidu.com/s/1qkj5TaR33FuaUtaIOuhMWA) or [peleenet](https://pan.baidu.com/s/1AXSvPpwClTMGKwKRFT9Tlg) and put them in models directory.
2. Run the training scripts.

```shell
sh examples/Hardhat/SSD300/train_SSD300.sh
```

## Deploy a pre-trained model 

All models are based on Caffe.

- Environments
  - Windows 10
  - Visual Studio 2013 (Release x64)
  - CPU
  - OpenCV

- C++

  It is highly recommended to use [mini-caffe](https://github.com/luoyetx/mini-caffe) to deploy model for its portability, or OpenCV3 with SSD's layer is enough if you do not use our proposed models with RPA module.  Code with OpenCV3 deployment is available in [old version](https://github.com/wujixiu/helmet-detection/old-version). For mini-caffe deployment under Windows, we provide the complied files in mini-caffe-Release, or you can compile the mini-caffe yourself.  

Notable that different models have different input size and different input scale. Details are shown below.

|     Models     | Input size |          mean          | input scale |
| :------------: | :--------: | :--------------------: | :---------: |
| SqueezeNet-SSD |  300×300   |     (104,117,123)      |    0.017    |
| MobileNet-SSD  |  300×300   |  (127.5,127.5,127.5)   |  0.007843   |
|     Pelee      |  304×304   | (103.94,116.78,123.68) |    0.017    |
|   Pelee-RPA    |  304×304   | (103.94,116.78,123.68) |    0.017    |
|   SSD-RPA300   |  300×300   |     (104,117,123)      |      1      |
|   SSD-RPA512   |  512×512   |     (104,117,123)      |      1      |


## Released data and models

- Dataset Statistics
  - The number of images of GDUT-HWD is 3,174, which has been split into 1,587 for training (GDUT-HWD trainval) and 1,587 for testing (GDUT-HWD test). It contains 18,893 instances falling into 5 classes and each instance is annotated with a class label andits bounding box.
  - Number of instances.

| Label                        | trainval | test | total |
| :--------------------------- | :------: | :--: | :---: |
| blue                         |   1251   | 1361 | 2612  |
| white                        |   1813   | 1968 | 3781  |
| yellow                       |   1936   | 1962 | 3898  |
| red                          |   2148   | 2083 | 4231  |
| none                         |   2171   | 2200 | 4371  |
| small (area ≤ 32×32)         |   4237   | 4713 | 8950  |
| medium (32×32＜area ≤ 96×96) |   4098   | 3826 | 7924  |
| large (area ＞ 96×96)        |   984    | 1035 | 2019  |

- Data is available on [Baidu Yun (646.6MB)](https://pan.baidu.com/s/1_Jj56B05YpUv5iLB9JMb4g) (pwd:dstk).

- The following pretrained models are available.

  - [SqueezeNet-SSD(13.9MB)](https://pan.baidu.com/s/1a-ypwwkMpLO0jFtyepWEcw)
  - [MobileNet-SSD(22.6MB)](https://pan.baidu.com/s/1_bmNMwOi1MZf3bTfJRIhXQ)
  - [YOLOv3-tiny(34.7MB)](https://pan.baidu.com/s/1aWTnRsXMfzBQPK0w-piGPw)
  - [Pelee(22.5MB)](https://pan.baidu.com/s/15-YJAWIRTupFZnOXHwZfQA)
  - [Pelee-RPA(36.4MB)](https://pan.baidu.com/s/114AyAtf4YOaK6GFu6sLFJw)
  - [SSD-RPA300(162.6MB)](https://pan.baidu.com/s/1_igFVMLOiMfR-5QvVn6O3A)
  - [SSD-RPA512(158.9MB)](https://pan.baidu.com/s/1QZ0OJzaYlfpeRMM6pXDVgw)

**Data and weights are available in [Google Drive](https://drive.google.com/drive/folders/12WtXQyM-7jWvWPtCXZlnycsIK72ClHgu?usp=sharing)**

- Speed and accuracy distribution

  The speeds are measured on a single Quadro M2000M 4GB GPU 😅.

  ![](hardhat-wearing-detection/results/fps_map.svg)

## Examples

![](hardhat-wearing-detection/imgs/00163.jpg)

![](hardhat-wearing-detection/imgs/00197.jpg)

![](hardhat-wearing-detection/imgs/00250.jpg)

![](hardhat-wearing-detection/imgs/00807.jpg)

![](hardhat-wearing-detection/imgs/00877.jpg)

## Citation
Please cite the paper in your publications if it helps your research.

Jixiu Wu, Nian Cai, Wenjie Chen, Huiheng Wang, Guotian Wang
, Automatic detection of hardhats worn by construction personnel: A deep learning approach and benchmark dataset,
Automation in Construction, 106(2019), 10.1016/j.autcon.2019.102894.

Link to the paper.
- [Automatic detection of hardhats worn by construction personnel: A deep learning approach and benchmark dataset](https://authors.elsevier.com/c/1ZOzK_L4MYHLYO)
",322,322,26,21,helmet-detection,"[deep-learning, helmet-detection, ssd-pelee]",23
rafiuddinkhan,Yolo-Training-GoogleColab,,https://github.com/rafiuddinkhan/Yolo-Training-GoogleColab,https://api.github.com/repos/Yolo-Training-GoogleColab/rafiuddinkhan,Helmet Detection using tiny-yolo-v3  by training using your own dataset and testing the results in the google colaboratory.,"# Yolo-Training-GoogleColab
![yolo](https://user-images.githubusercontent.com/10113553/55484056-6a707d80-5645-11e9-919f-089026e82136.gif)

Custom tiny-yolo-v3 training using your own dataset and testing the results using the google colaboratory.
Object detection using yolo algorithms and training your own model and obtaining the weights file using google colab 
platform.

Explaination link:
https://medium.com/@today.rafi/train-your-own-tiny-yolo-v3-on-google-colaboratory-with-the-custom-dataset-2e35db02bf8f

The steps includes:

1. Data Acquisition.
2. Data Preparation according to the yolo.
3. Load Dataset.
4. Train the dataset.
5. Obtain the model weights.
6. Test the model.

![yolo-google-colab](https://user-images.githubusercontent.com/10113553/55483057-71968c00-5643-11e9-8f72-c013e9a40dc7.jpg)

",159,159,8,5,helmet-detection,"[colaboratory, custom-object-detection, detection, googlecolab, helmet, helmet-detection, object, yolov3]",23
AnshulSood11,PPE-Detection-YOLO-Deep_SORT,,https://github.com/AnshulSood11/PPE-Detection-YOLO-Deep_SORT,https://api.github.com/repos/PPE-Detection-YOLO-Deep_SORT/AnshulSood11,Real-time PPE detection and tracking using YOLO v3 and deep_sort,"# PPE Detection using yolo3 and DeepSORT

## Introduction
In Industry, specially manufacturing industry, Personal Protective Equipment (PPE) like helmet (hard-hat), safety-harness, goggles etc play a very important role in ensuring the safety of workers. However, many accidents still occur, due to the negligence of the workers as well as their supervisors. Supervisors can make mistakes due to the fact that such tasks are monotonous and they may not be able to monitor consistently. This project aims to utilize existing CCTV camera infrastructure to assist supervisors to monitor workers effectively by providing them with real time alerts.

## Functioning
* Input is taken from CCTV cameras
* YOLO is used for detecting persons with proper PPE and those without PPE.
* Deep_SORT allocates unique ids to detected persons and tracks them through consecutive frames of the video.
* An alert is raised if a person is found to be without proper PPE for more than some set duration, say 5 seconds.

![img1](https://github.com/AnshulSood11/PPE-Detection-YOLO-Deep_SORT/blob/master/ppe-demo-images/img1.png)
It detects persons without helmet and displays the number of persons with helmet and
those without helmet. It sends notification in the message box for each camera. There is global
message box, where alerts from all cameras are displayed.

![img2](https://github.com/AnshulSood11/PPE-Detection-YOLO-Deep_SORT/blob/master/ppe-demo-images/img2.png)
It detects that the same person about which it had warned earlier has now worn a
helmet and notifies that also.

![img3](https://github.com/AnshulSood11/PPE-Detection-YOLO-Deep_SORT/blob/master/ppe-demo-images/img3.png)

Please note that this is still a work under progress and new ideas and contributions are welcome.
* Currently, the model is trained to detect helmets (hard-hat) only. I have plans to train the model for other PPEs as well.
* Currently, only usb cameras are supported. Support for other cameras needs to be added.
* The tracker needs to be made robust.
* Integrate service (via mobile app or SMS) to send real-time notifications to supervisors present on the field.

## Quick Start
Using conda environment is recommended. Follow these steps to get the code running:

1. First, download the zip file.
2. Download the following files into the project directory: 

[mars-small128.pb](https://1drv.ms/u/s!ArJHK_Eldk0Cg3jyt-NR3xPErr_5?e=88vcgg)

[full_yolo3_helmet_and_person.h5](https://1drv.ms/u/s!ArJHK_Eldk0Cg3cTEpkVoZyyxQzl?e=10MXuV)

3. Run the following command to create a conda environmnet:
```bash
 conda env create -f environment.yml
```
Alternatively,
```bash
conda create --name helmet-detection --file requirements.txt
```
4. Activate the conda environment:
```bash
conda activate helmet-detection
```
5. To run the code with gui :
```bash
python predict_gui.py -c config.json -n <number of cameras>
```
  Note that the gui supports only upto 2 cameras.

  To run the code without gui :
```bash
python predict.py -c config.json -n <number of cameras>
```
  Here you can enter any number of cameras you want to use.
## Training the model

### 1. Data preparation

**Data Collection**

The dataset containing images of people wearing helmets and people without helmets were collected mostly from google search. Some images have people applauding, those were collected from Stanford 40 Action Dataset. Download images for training from [train_image_folder](https://drive.google.com/drive/folders/1b5ocFK8Z_plni0JL4gVhs3383V7Q9EYH?usp=sharing).

**Annotations**

Annotaion of each image was done in Pascal VOC format using the awesome lightweight annotation tool [LabelImg](https://github.com/tzutalin/labelImg) for object-detection. Download annotations from [train_annot_folder](https://drive.google.com/drive/folders/1u_s_kxq0x_fqtqgJn9nKC92ikrThMDru?usp=sharing).

**Organize the dataset into 4 folders:**
* train_image_folder <= the folder that contains the train images.
* train_annot_folder <= the folder that contains the train annotations in VOC format.
* valid_image_folder <= the folder that contains the validation images.
* valid_annot_folder <= the folder that contains the validation annotations in VOC format.

There is a one-to-one correspondence by file name between images and annotations. If the validation set is empty, the training set will be automatically splitted into the training set and validation set using the ratio of 0.8.

### 2. Edit the configuration file

The configuration file is a json file, which looks like this:
```
{
  ""model"" : {
    ""min_input_size"":       288,
    ""max_input_size"":       448,
    ""anchors"":              [33,34, 52,218, 55,67, 92,306, 96,88, 118,158, 153,347, 209,182, 266,359],
    ""labels"":               [""helmet"",""person with helmet"",""person without helmet""]
  },

  ""train"": {
    ""train_image_folder"":   ""train_image_folder/"",
    ""train_annot_folder"":   ""train_annot_folder/"",
    ""cache_name"":           ""helmet_train.pkl"",

    ""train_times"":          8,
    ""batch_size"":           8,
    ""learning_rate"":        1e-4,
    ""nb_epochs"":            100,
    ""warmup_epochs"":        3,
    ""ignore_thresh"":        0.5,
    ""gpus"":                 ""0,1"",

    ""grid_scales"":          [1,1,1],
    ""obj_scale"":            5,
    ""noobj_scale"":          1,
    ""xywh_scale"":           1,


    ""tensorboard_dir"":      ""logs"",
    ""saved_weights_name"":   ""full_yolo3_helmet_and_person.h5"",
    ""debug"":                true
  },

  ""valid"": {
    ""valid_image_folder"":   """",
    ""valid_annot_folder"":   """",
    ""cache_name"":           """",

    ""valid_times"":          1
  }
}
```
The model section defines the type of the model to construct as well as other parameters of the model such as the input image size and the list of anchors. The `labels` setting lists the labels to be trained on. Only images, which has labels being listed, are fed to the network. The rest images are simply ignored. By this way, a Dog Detector can easily be trained using VOC or COCO dataset by setting `labels` to `['dog']`.

Download pretrained weights for backend at:
[backend.h5](https://1drv.ms/u/s!ArJHK_Eldk0Cg3nUkkHZcS7btEGb?e=BlFGvM)

**These weights must be put in the root folder of the repository. They are the pretrained weights for the backend only and will be loaded during model creation. The code does not work without these weights.**

### 3. Generate anchors for your dataset (optional)

`python gen_anchors.py -c config.json`

Copy the generated anchors printed on the terminal to the `anchors` setting in `config.json`.

### 4. Start the training process

`python train.py -c config.json`

By the end of this process, the code will write the weights of the best model to file best_weights.h5 (or whatever name specified in the setting ""saved_weights_name"" in the config.json file). The training process stops when the loss on the validation set is not improved in 3 consecutive epoches.
 
 ### 5. Perform detection using trained weights on live feed from webcam
 
  To run the code with gui :
```bash
python predict_gui.py -c config.json -n <number of cameras>
```
  Note that the gui supports only upto 2 cameras.

  To run the code without gui :
```bash
python predict.py -c config.json -n <number of cameras>
```
  Here you can enter any number of cameras you want to use.

## Acknowledgements

* [rekon/keras-yolo2](https://github.com/rekon/keras-yolo2) for training data.
* [experiencor/keras-yolo3](https://github.com/experiencor/keras-yolo3) for YOLO v3 implementation.
* [nwojke/deep_sort](https://github.com/nwojke/deep_sort) for Deep_SORT implementation.
",88,88,4,1,helmet-detection,"[deep-learning, deep-sort, deepsort, helmet-detection, people-tracking, person-tracking, ppe-detection, tkinter-gui, yolo]",23
weimin17,Object-Detection_HelmetDetection,,https://github.com/weimin17/Object-Detection_HelmetDetection,https://api.github.com/repos/Object-Detection_HelmetDetection/weimin17,A computer vision practice: Using Tensorflow - Object Detection Tutorials - Helmet detection,"# Tensorflow Object Detection - HelmetDetection

This repository is one of my projects during my three-month-internship in K2Data. I am the main contributor in a 3-people team, and the achievement has been applied in over 2,000 factories. It contains only codes because the data files are over the maximum limitation. If you want to get all the data files, or if you have any questions, please email me.

It shows how to deploy Object Detection API - Tensorflow and give specific tutorials. It is based on [Object Detection](https://github.com/tensorflow/models/tree/master/research/object_detection). A specific example is to detect helmet, it could also explore to any other object detection tasks.

## Installation

* [Installation](https://github.com/tensorflow/models/blob/master/research/object_detection/g3doc/installation.md)

## Data Preparation

*Step 1*. Label - Generate the XML files based on original images, which means you locate the object in images and record the information into XML files. Label the image using [lablelImg](https://github.com/tzutalin/labelImg). The detailed explanation can be found [here](https://www.youtube.com/watch?v=K_mFnvzyLvc&list=PLQVvvaa0QuDcNK5GeCQnxYnSSaar2tpku&index=3). The Training data needs to follow the organization:

```
--data/train
    --Annotations
    --JPEGImages
```

If you have already have the datasets containing XML and JPG files, then you can skip to Step 2.

*Step 2*. Generate TF-Records. TensorFlow object detection API doesn’t take XML or Image files as an input, but it needs record files to train the model. In the example, I used `/data/cap_train.record` and `/data/cap_val.record` as input. You can generate the files using `/codes/create_helmet_record.py`, just remember to change the dir:

```
#  data_dir = FLAGS.data_dir
data_dir = '../data/train/'
#  label_map_dict = label_map_util.get_label_map_dict(FLAGS.label_map_path)
label_map_dict = label_map_util.get_label_map_dict('../models/faster_RCNN_Inception_v2/helmet_label_map.pbtxt')
```

`/models/faster_RCNN_Inception_resnet_v2/helmet_label_map.pbtxt` is a file for labeling. Give label name i.e helmet in my example. If in case you have multiple labels, increase id number starting from 1 and give appropriate label name.

```
item{
	id: 1
	name: 'helmet'
}
```

```
  num_train = int(0.8 * num_examples)
  train_examples = examples_list[:num_train]
  val_examples = examples_list[num_train:]
```

Above codes means how many datasets you split as train data and test data. I used `0.8` here.

## Train Model
Once the records files are ready, it's ready to train the model.

1.Choose the pre-trained model to be used. You could download [Tensorflow detection model zoo](https://github.com/tensorflow/models/blob/master/research/object_detection/g3doc/detection_model_zoo.md), which contains various pre-trained models. My example uses `/models/faster_RCNN_Inception_resnet_v2/faster_rcnn_inception_resnet_v2_atrous_coco_2018_01_28` for a better accuracy while with slower speed, and you could exchange to anyother models.

2.Remember to use the consistent config file for the same model. My example uses `/models/faster_RCNN_Inception_resnet_v2/faster_rcnn_inception_resnet_v2_atrous_coco_alldata.config`. Remember to change file dir in config file. Remember to change the number of classes in the file according to specific requirement. [Configre Document](https://github.com/tensorflow/models/blob/master/research/object_detection/g3doc/configuring_jobs.md), [TensorFlow Object Detection API tutorial](https://becominghuman.ai/tensorflow-object-detection-api-tutorial-training-and-evaluating-custom-object-detector-ed2594afcf73) shows more details on how to set parameters.

3.In `/codes/` folder, execute `bash train.sh`, remember to change the dir. You can also execute the command in Terminal. The training process requires tons of time. If you use GPU, it will occupy all of the GPU and you could use the command `CUDA_VISIBLE_DEVICES=0 bash train.sh` to assign a specific GPU.

```
# Train model
python3 ../tensorflow/models/research/train.py \
    --logtostderr \
    --train_dir=../output/output_100000_train_faster_RCNN_Inception_ResNet_v2_0802 \
    --pipeline_config_path=../models/faster_RCNN_Inception_resnet_v2/faster_rcnn_inception_resnet_v2_atrous_coco_alldata.config
```

## Save Model

Before Evaluating, models must be saved. The codes is in `/codes/train.sh`.

```
# save Model
python ../tensorflow/models/research/object_detection/export_inference_graph.py \
--input_type=image_tensor \
--pipeline_config_path=../models/faster_RCNN_Inception_resnet_v2/faster_rcnn_inception_resnet_v2_atrous_coco_alldata.config \
--trained_checkpoint_prefix=../output/output_100000_train_faster_RCNN_Inception_ResNet_v2_0802/model.ckpt \
--output_directory=../savedModels/savedModel_100000_train_faster_RCNN_Inception_ResNet_v2_0802
```

## Evaluate Model

The final step is to evaluate the trained model saved in `../output/` directory. There are two ways to evaluate, using *eval.py* to calculating the total accuracy, or using *object_detection_pic.py* to evaluate a single image. The following shows both two ways.

### Calculating MAP@n 
Use *eval.py* file and evaluate using following command:

```
python ../tensorflow/models/research/object_detection/eval.py \
    --logtostderr \
    --pipeline_config_path=../models/faster_RCNN_Inception_resnet_v2/faster_rcnn_inception_resnet_v2_atrous_coco_alldata.config \
    --checkpoint_dir=../output/output_100000_train_faster_RCNN_Inception_ResNet_v2_0802 \
    --eval_dir=../output/output_100000_train_faster_RCNN_Inception_ResNet_v2_0802/eval/
```

This will save the eval results in *eval/* directory. There is a excellent tools: TensorBoard, which could visualize both training and evaling process. To launch TensorBoard (while you visualize the eval results, it would also visualize the training results at the same time), using following command in a new Terminal and locate the terminal in the file:

```
#To visualize the eval results
tensorboard --logdir=../output/output_100000_train_faster_RCNN_Inception_ResNet_v2_0802/eval/
#TO visualize the training results
tensorboard --logdir=../output/output_100000_train_faster_RCNN_Inception_ResNet_v2_0802
```

Instructions for TensorBoard for the beginners: [TensorBoard](https://github.com/tensorflow/tensorboard).

### Evaluating a single image

The codes are in `/codes/train.sh`, remember to change the dir.

```
# Evaluate Model
python ../codes/object_detection_pic_0.75_train-test_faster_RCNN_Inception_ResNet_v2.py
```


",54,54,3,5,helmet-detection,"[faster-rcnn, helmet-detection, object-detection, tensorflow, tensorflow-experiments, testing, training, tutorials]",23
AyazSaiyed,Helmet-Detection-,,https://github.com/AyazSaiyed/Helmet-Detection-,https://api.github.com/repos/Helmet-Detection-/AyazSaiyed,"An AI based helmet detection , which can detect the helmets from the images with 99% accuracy . It is implemented using Opencv, Python, YOLOV3 .","# Helmet-Detection-

Helmet detection, which can detect the helmets from the images and the video with around 99% accuracy.
Implemented using Opencv, Python, YOLOV3.


To use the pre-trained model, request [here](https://www.linkedin.com/in/ayazsaiyadhearthacker/) and keep the same in the ''yolo-coco'' to detect any helmet in the real-time video.


------------

Create a folder named - Output
And run this command - ' python livehelmet.py --output output/my.avi --yolo yolo-coco '

-----------

For Running the live interface of helmet detection -

python livehelmet1.py --output images/myvideo.avi --yolo yolo-coco/

------------


To connect :
https://www.linkedin.com/in/ayazsaiyadhearthacker/

-------------------------
",43,43,4,7,helmet-detection,"[detection, helmet-detection, object-detection, opencv, opencv-python, python, python-script, yolov3]",23
incheon-kim,yolov4-deepsort-helmet-detection,,https://github.com/incheon-kim/yolov4-deepsort-helmet-detection,https://api.github.com/repos/yolov4-deepsort-helmet-detection/incheon-kim,helmet(hard hat) detection with yolov4,"# Yolov4-deepsort-helmet-detection
[![Hits](https://hits.seeyoufarm.com/api/count/incr/badge.svg?url=https%3A%2F%2Fgithub.com%2Fincheon-kim%2Fyolov4-deepsort-helmet-detection)](https://hits.seeyoufarm.com)

helmet(hard hat) detector trained with [darknet framework](https://github.com/AlexeyAB/darknet) YOLOv4 model.

## tested environment
- `Windows 10 x64 2020 (build 19041.388)`
- `NVIDIA RTX 2070 Super`
- `CUDA 10.1 / CuDNN 7.6.5`
- `Python 3.7.7 x64`
- `tensorflow 2.2.0 GPU`

---

## trained weight
- [Google Drive](https://drive.google.com/file/d/1uOWZGx1oR1bRwp_mnvxobaXZcWs1X9ar)
    - put weight file in `./configs`
- **To train with your own datasets, You should do yourself with [darknet](https://github.com/AlexeyAB/darknet). And need to change some parameters**


## used dataset
- [roboflow.ai public dataset](https://public.roboflow.ai/object-detection/hard-hat-workers) \+ about 100 images

---

## dependencies
- python
    - opencv-python, numpy, scikit-image
        - to draw boxes and texts on image
    - tensorflow 2.2.0
        - to track object with DeepSORT model
    - matplotlib
        - to create color map
- CUDA 10.1 / CuDNN 7.6.5
- darknet
    - **for yolov4 object detection**
    - `dark.dll, pthreadVC2.dll (windows)`
        - Pre-Compiled (I'm not sure if it works on different machine)- [Google Drive](https://drive.google.com/file/d/1D3bYPyGgWUZavLsDh5SyU0yyPqW-5xiC)
    - `libdarknet.so (linux)`


## prepare environment and run
```python
pip install -r requirements.txt
```

```python
python detectandtrack.py
```
***you should modify code to make change***



## example
![](example.gif)
---

## citation
https://github.com/AlexeyAB/darknet

https://github.com/theAIGuysCode/yolov3_deepsort

https://public.roboflow.ai/object-detection/hard-hat-workers
",39,39,1,1,helmet-detection,"[deepsort, helmet-detection, yolov4, yolov4-darknet, yolov4-deepsort]",23
vibhavnirmal,helmetdetection,,https://github.com/vibhavnirmal/helmetdetection,https://api.github.com/repos/helmetdetection/vibhavnirmal,Helmet Detection With GUI..  Opening for all to contribute.. Create a pull request,"# helmetdetection
Helmet Detection With GUI in python tkinter.

I created Graphical user Interface in Phase 1.

Now in Phase 2:
I created a script to detect bike on video footage.
But that is not yet integrated in GUI part.

I am still making algorithm for helmet detection.

I will update the code and upload it as soon as the beta test is completed.

Thank You.",19,19,4,0,helmet-detection,"[detection, gui, helmet-detection, opencv, python]",23
RichardoMrMu,yolov5-helmet-detection-python,,https://github.com/RichardoMrMu/yolov5-helmet-detection-python,https://api.github.com/repos/yolov5-helmet-detection-python/RichardoMrMu,A Python training and inference implementation of Yolov5 helmet detection in Jetson Xavier nx and Jetson nano,"# yolov5-helmet-detection-python
A Python implementation of Yolov5 to detect head or helmet in the wild in Jetson Xavier nx and Jetson nano.  In Jetson Xavier Nx, it can achieve 33 FPS.

You can see video play in [BILIBILI](https://www.bilibili.com/video/BV1Kv411M7u2/), or [YOUTUBE](https://www.youtube.com/watch?v=ZFCIcMngP08).

if you have problem in this project, you can see this [artical](https://blog.csdn.net/weixin_42264234/article/details/121241573).

If you want to try to train your own model, you can see [yolov5-helmet-detection-python](https://github.com/RichardoMrMu/yolov5-helmet-detection-python). Follow the readme to get your own model.

<img src=""assets/helmet.gif"" >

# Dataset
You can get the dataset from this [aistudio url](https://aistudio.baidu.com/aistudio/datasetdetail/50329). And the head & helmet detect project pdpd version can be found in this [url](https://github.com/PaddlePaddle/awesome-DeepLearning/tree/master/Paddle_Enterprise_CaseBook/Hemtle%20Detection). It is an amazing project.

## Data
This pro needs dataset like 
```
../datasets/coco128/images/im0.jpg  #image
../datasets/coco128/labels/im0.txt  #label
```

<img src=""assets/data.png"" >

Download the dataset and unzip it. 

<img src=""assets/data2.png"" >

```shell
unzip annnotations.zip
unzip images.zip
```
You can get this.
```
 ├── dataset
	├── annotations
  │   ├── fire_000001.xml
  │   ├── fire_000002.xml
  │   ├── fire_000003.xml
  │   |   ...
  ├── images
  │   ├── fire_000001.jpg
  │   ├── fire_000003.jpg
  │   ├── fire_000003.jpg
  │   |   ...
  ├── label_list.txt
  ├── train.txt
  └── valid.txt
```
You should turn xml files to txt files. You also can see [this](https://github.com/ultralytics/yolov5/wiki/Train-Custom-Data
). 
Open `script/sw2yolo.py`, Change `save_path` to your own save path,`root` as your data path, and `list_file` as `val_list.txt` and `train_list.txt` path.

```Python
list_file = ""./val_list.txt""
xmls_path,imgs_path = get_file_path(list_file)

# 将train_list中的xml 转成 txt， img放到img中
save_path = './data/yolodata/fire/cocolike/val/'
root = ""./data/yolodata/fire/""
train_img_root = root 
```

Then you need `script/yolov5-split-label-img.py` to split img and txt file.


```shell
mkdir images
mkdir lables
mv ./train/images/* ./images/train
mv ./train/labels/* ./labels/train
mv ./val/iamges/* ./images/val
mv ./val/lables/* ./lables/val
```

Finally You can get this.
```
 ├── cocolike
	├── lables
  │   ├── val 
  │       ├── fire_000001.xml
  |       ├──   ...
  │   ├── train
  │       ├── fire_000002.xml
  |       ├──   ...
  │   
  ├── images
  │   ├── val 
  │       ├── fire_000001.jpg
  |       ├──   ...
  │   ├── train
  │       ├── fire_000003.jpg
  |       ├──   ...
  ├── label_list.txt
  ├── train.txt
  └── valid.txt
```
## Datafile
`{porject}/yolov5/data/` add your own yaml files like `helmet.yaml`.
```yaml
# YOLOv5 🚀 by Ultralytics, GPL-3.0 license
# COCO128 dataset https://www.kaggle.com/ultralytics/coco128 (first 128 images from COCO train2017)
# Example usage: python train.py --data coco128.yaml
# parent
# ├── yolov5
# └── datasets
#     └── coco128  downloads here


# Train/val/test sets as 1) dir: path/to/imgs, 2) file: path/to/imgs.txt, or 3) list: [path/to/imgs1, path/to/imgs2, ..]
path: /home/data/tbw_data/face-dataset/yolodata/helmet/cocolike/  # dataset root dir
train: images/train  # train images (relative to 'path') 128 images
val: images/val  # val images (relative to 'path') 128 images
test:  # test images (optional)

# Classes
nc: 2  # number of classes
names: ['head','helmet']  # class names
```

# Train
Change `{project}/train.py`'s data path as your own data yaml path.
<img src=""assets/train.png"" >
Change `batch-size ` as a suitable num. Change device if you have 2 or more gpu devices.
Then 

```shell
python train.py
```

# Test
Use `detect.py` to test.

```shell
python detect.py --source ./data/yolodata/helmet/cocolike/images --weights ./runs/train/exp/weights/best.pt
```
You can see `{project}/runs/detect/` has png results.
",19,19,3,2,helmet-detection,"[helmet-detection, python, python3, yolov5]",23
rashidch,Yolov3_tiny-Hardhat-detection_Tensorflow,,https://github.com/rashidch/Yolov3_tiny-Hardhat-detection_Tensorflow,https://api.github.com/repos/Yolov3_tiny-Hardhat-detection_Tensorflow/rashidch,Yolov3_Tiny hardhat detection using Tensorflow ,"#  Hardhat (Helmet) detection from construction site using YOLOv3_tiny with TensorFlow

### 1. Introduction

Hardhat detection using Yolov3_tiny

### 2. Requirements

- tensorflow >= 1.8.0 (lower versions may work too)
- opencv-python


### 3. Running demos

#### (1) Single image test demo using ckpt file:

```shell
python test_single_image.py ./data/demo_data/google_image.jpg
```

#### test image from google
![detection result](./detection%20results/test_result_google_image.jpg)

#### test image from dataset
![detection result](./detection%20results/16.jpg)





#### (2) Video demo: https://drive.google.com/drive/folders/1YirwBUWwvecjgk-MwDXk1hZaJJGJSEJ_?usp=sharing

### 4. Training

Hardhat dataset: pascal voc format: https://drive.google.com/drive/folders/12WtXQyM-7jWvWPtCXZlnycsIK72ClHgu?usp=sharing

Dataset credits: https://github.com/wujixiu/helmet-detection

#### 4.1 Data preparation 

(1) annotation file

Generate `train.txt/val.txt/test.txt` files under `./data/my_data/` directory. 
One line for one image, in the format like `image_absolute_path image size box_1 box_2 ... box_n`. 
Box_format: `label_index x_min y_min x_max y_max`.(The origin of coordinates is at the left top corner.)

For example:

```
577 /home/rashid/YOLOv3_TensorFlow-master/data/my_data/GDUT-HWD/JPEGImages/01457.jpg 440 293 1 235 84 258 110 1 291 93 307 115 1 320 96 335 114
743 /home/rashid/YOLOv3_TensorFlow-master/data/my_data/GDUT-HWD/JPEGImages/00179.jpg 1300 956 1 503 80 674 313 1 258 1 423 222
...
```

**NOTE**: **You should leave a blank line at the end of each txt file.**

(2)  class_names file:

Generate the `data.names` file under `./data/my_data/` directory. Each line represents a class name.

For example:

```
bird
car
bike
...
```

The COCO dataset class names file is placed at `./data/coco.names`.

(3) prior anchor file:

Using the kmeans algorithm to get the prior anchors:

```
python get_kmeans.py
```

Then you will get 9 anchors and the average IOU. Save the anchors to a txt file.

The COCO dataset anchors offered by YOLO v3 author is placed at `./data/yolo_anchors.txt`, you can use that one too.

**NOTE: The yolo anchors should be scaled to the rescaled new image size. 
Suppose your image size is [W, H], and the image will be rescale to 416*416 as input, for each generated anchor [anchor_w, anchor_h], 
you should apply the transformation anchor_w = anchor_w / W * 416, anchor_h = anchor_g / H * 416.**

#### 4.2 Training

Using `train.py`. The parameters are as following:

```shell
$ python train.py -h
usage: train.py 

        net_name = 'the yolo model'
        anchors_name = 'the anchors name'
        body_name = 'the yolo body net'
        data_name = 'the training data name'


```

Check the `train.py` for more details. You should set the parameters yourself. 

Some training tricks in my experiment:

the yolov3 using  `darknet53`, the yolov3_tiny using `darknet19`



### Credits:

The code is inspired from following repos :

https://github.com/wizyoung/YOLOv3_TensorFlow

https://github.com/Huangdebo/YOLOv3_tiny_TensorFlow

Dataset credits: https://github.com/wujixiu/helmet-detection





 
",17,17,1,4,helmet-detection,"[custom-dataset, helmet-detection, object-detection, tensorflow, tensorflow-tutorials, yolov2-videos, yolov3-tiny]",23
0816-Radhu,helmet_detection_using_machine_learning,,https://github.com/0816-Radhu/helmet_detection_using_machine_learning,https://api.github.com/repos/helmet_detection_using_machine_learning/0816-Radhu,Automatic Helmet Detection for Bike Riders using Surveillance Videos in real-time,"# Detection of helmets on motorcyclists
Motorcycle accidents have been rapidly growing through the years in many countries. In India more than 37 million people use two wheelers. Therefore, it is necessary to develop a system for automatic detection of helmet wearing for road safety. Therefore, a custom object detection model is created using a Machine learning based algorithm which can detect Motorcycle riders. On the detection of a Helmet rider.

> Its a simple YOLO model to detect and count the number of people wearing helmet in a image. this model can be used to detect the intrusion or to find the people ridding bike without helmet.

Getting Started<br>
Download my weight https://drive.google.com/file/d/1r7AF0OrftGQhNpQmbRy--lWu5VgDJvVl/view?usp=sharing in model_data folder then run

> ```python main.py --input <your_video_path>```<br>

## Dependencies
The code is compatible with Python 2.7 and 3. The following dependencies are needed to run the code:

```
NumPy
sklean
OpenCV
Pillow
keras
```
Additionally, feature generation requires TensorFlow-1.14.0.

### My Training Loss

<img src=""https://github.com/R-code611/helmet_detection_using_machine_learning/blob/master/doc/loss.svg""  width=""600"" height=""500"" align=""center""/>

### My Validation Loss

<img src=""https://github.com/R-code611/helmet_detection_using_machine_learning/blob/master/doc/val_loss.svg""  width=""600"" height=""500"" align=""center""/>

## Result

<img src=""https://github.com/0816-Radhu/helmet_detection_using_machine_learning/blob/master/doc/out.jpg""  align=""center""/>

",15,15,1,2,helmet-detection,"[deep-learning, helmet-detection]",23
RichardoMrMu,yolov5-helmet-detection,,https://github.com/RichardoMrMu/yolov5-helmet-detection,https://api.github.com/repos/yolov5-helmet-detection/RichardoMrMu,A C++ implementation of Yolov5 helmet detection in Jetson Xavier nx and Jetson nano,"# A C++ implementation of Yolov5 to detect head or helmet in the wild in Jetson Xavier nx and Jetson nano
This repository uses yolov5 to detect humnan heads and helmets which can run in Jetson Xavier nx and Jetson nano. 
 In Jetson Xavier Nx, it can achieve 33 FPS.

<img src=""assets/helmet.gif"" >
 

You can see video play in [BILIBILI](https://www.bilibili.com/video/BV1Kv411M7u2/), or [YOUTUBE](https://www.youtube.com/watch?v=ZFCIcMngP08).

If you want to try to train your own model, you can see [yolov5-helmet-detection-python](https://github.com/RichardoMrMu/yolov5-helmet-detection-python). Follow the readme to get your own model.

## Requirement
1. Jetson nano or Jetson Xavier nx
2. Jetpack 4.5.1
3. python3 with default(jetson nano or jetson xavier nx has default python3 with tensorrt 7.1.3.0 )
4. tensorrt 7.1.3.0
5. torch 1.8.0
6. torchvision 0.9.0
7. torch2trt 0.3.0
8. onnx 1.4.1
9. opencv-python 4.5.3.56
10. protobuf 3.17.3
11. scipy 1.5.4


if you have problem in this project, you can see this [artical](https://blog.csdn.net/weixin_42264234/article/details/121241573).

## Achieve and Experiment
- Int8.
- yolov5-s
- yolov5-m


## Comming soon
- [ ] Faster and use less memory.


## Speed

Whole process time from read image to finish process (include every img preprocess and postprocess). And all results can get in Jetson Xavier nx. For python model and code, you can find them in this [project](https://github.com/RichardoMrMu/yolov5-helmet-detection-python)

| Backbone        | before TensorRT |TensortRT(detection)|  FPS(detection) |
| :--------------: | :--------------: | :--------------: |:--------------:|
| Yolov5s-640-float16      | 100ms          |60-70ms                          | 14 ~ 18                   |
| Yolov5m-640-float16 | 120ms             |70-75ms                      | 13 ~ 14                    |
| Yolov5s-640-int8 |             |30-40ms                      | 25 ~ 33                     |
| Yolov5m-640-int8 |              |50-60ms                      | 16 ~ 20                    |

------

## Build and Run

```shell
git clone https://github.com/RichardoMrMu/yolov5-helmet-detection
cd yolov5-helmet-detection
mkdir build 
cmake ..
make 
```

if you meet some errors in cmake and make, please see this [artical](https://blog.csdn.net/weixin_42264234/article/details/121241573) or see Attention.

## Model
You need is yolov5 model, for detection, generating from [tensorrtx](https://github.com/wang-xinyu/tensorrtx). You should generate the model the same way.
### Generate yolov5 model
For yolov5 detection model, I choose yolov5s, and choose `yolov5s.pt->yolov5s.wts->yolov5s.engine`
Note that, used models can get from [yolov5](https://github.com/ultralytics/yolov5) and if you need to use your own model, you can follow the `Run Your Custom Model`.
You can also see [tensorrtx official readme](https://github.com/wang-xinyu/tensorrtx/tree/master/yolov5)

1. Get yolov5 repository

Note that, here uses the official pertained model.And I use yolov5-5, v5.0. So if you train your own model, please be sure your yolov5 code is v5.0.

```shell
git clone -b v5.0 https://github.com/ultralytics/yolov5.git
cd yolov5
mkdir weights
cd weights
// download https://github.com/ultralytics/yolov5/releases/download/v5.0/yolov5s.pt
wget https://github.com/ultralytics/yolov5/releases/download/v5.0/yolov5s.pt

```

2. Get tensorrtx.

```shell
git clone https://github.com/wang-xinyu/tensorrtx
```

3. Get xxx.wst model

```shell
cp tensorrtx/gen_wts.py yolov5/
cd yolov5 
python3 gen_wts.py -w ./weights/yolov5s.pt -o ./weights/yolov5s.wts
// a file 'yolov5s.wts' will be generated.
```
You can get yolov5s.wts model in `yolov5/weights/`

4. Build tensorrtx/yolov5 and get tensorrt engine

```shell 
cd tensorrtx/yolov5
// update CLASS_NUM in yololayer.h if your model is trained on custom dataset
mkdir build
cd build
cp {ultralytics}/yolov5/yolov5s.wts {tensorrtx}/yolov5/build
cmake ..
make
// yolov5s
sudo ./yolov5 -s yolov5s.wts yolov5s.engine s
// test your engine file
sudo ./yolov5 -d yolov5s.engine ../samples
```
Then you get the yolov5s.engine, and you can put `yolov5s.engine` in My project. For example

```shell
cd {yolov5-helmet-detection}
mkdir resources
cp {tensorrtx}/yolov5/build/yolov5s.engine {yolov5-helmet-detection}/resources
```

After all 4 step, you can get the yolov5s.engine .

You may face some problems in getting yolov5s.engine, you can upload your issue in github or [csdn artical](https://blog.csdn.net/weixin_42264234/article/details/121241573).

<details>
<summary>Different versions of yolov5</summary>

Currently, tensorrt support yolov5 v1.0(yolov5s only), v2.0, v3.0, v3.1, v4.0 and v5.0.

- For yolov5 v5.0, download .pt from [yolov5 release v5.0](https://github.com/ultralytics/yolov5/releases/tag/v5.0), `git clone -b v5.0 https://github.com/ultralytics/yolov5.git` and `git clone https://github.com/wang-xinyu/tensorrtx.git`, then follow how-to-run in current page.
- For yolov5 v4.0, download .pt from [yolov5 release v4.0](https://github.com/ultralytics/yolov5/releases/tag/v4.0), `git clone -b v4.0 https://github.com/ultralytics/yolov5.git` and `git clone -b yolov5-v4.0 https://github.com/wang-xinyu/tensorrtx.git`, then follow how-to-run in [tensorrtx/yolov5-v4.0](https://github.com/wang-xinyu/tensorrtx/tree/yolov5-v4.0/yolov5).
- For yolov5 v3.1, download .pt from [yolov5 release v3.1](https://github.com/ultralytics/yolov5/releases/tag/v3.1), `git clone -b v3.1 https://github.com/ultralytics/yolov5.git` and `git clone -b yolov5-v3.1 https://github.com/wang-xinyu/tensorrtx.git`, then follow how-to-run in [tensorrtx/yolov5-v3.1](https://github.com/wang-xinyu/tensorrtx/tree/yolov5-v3.1/yolov5).
- For yolov5 v3.0, download .pt from [yolov5 release v3.0](https://github.com/ultralytics/yolov5/releases/tag/v3.0), `git clone -b v3.0 https://github.com/ultralytics/yolov5.git` and `git clone -b yolov5-v3.0 https://github.com/wang-xinyu/tensorrtx.git`, then follow how-to-run in [tensorrtx/yolov5-v3.0](https://github.com/wang-xinyu/tensorrtx/tree/yolov5-v3.0/yolov5).
- For yolov5 v2.0, download .pt from [yolov5 release v2.0](https://github.com/ultralytics/yolov5/releases/tag/v2.0), `git clone -b v2.0 https://github.com/ultralytics/yolov5.git` and `git clone -b yolov5-v2.0 https://github.com/wang-xinyu/tensorrtx.git`, then follow how-to-run in [tensorrtx/yolov5-v2.0](https://github.com/wang-xinyu/tensorrtx/tree/yolov5-v2.0/yolov5).
- For yolov5 v1.0, download .pt from [yolov5 release v1.0](https://github.com/ultralytics/yolov5/releases/tag/v1.0), `git clone -b v1.0 https://github.com/ultralytics/yolov5.git` and `git clone -b yolov5-v1.0 https://github.com/wang-xinyu/tensorrtx.git`, then follow how-to-run in [tensorrtx/yolov5-v1.0](https://github.com/wang-xinyu/tensorrtx/tree/yolov5-v1.0/yolov5).
</details>

<details>

<summary>Config</summary>

- Choose the model s/m/l/x/s6/m6/l6/x6 from command line arguments.
- Input shape defined in yololayer.h
- Number of classes defined in yololayer.h, **DO NOT FORGET TO ADAPT THIS, If using your own model**
- INT8/FP16/FP32 can be selected by the macro in yolov5.cpp, **INT8 need more steps, pls follow `How to Run` first and then go the `INT8 Quantization` below**
- GPU id can be selected by the macro in yolov5.cpp
- NMS thresh in yolov5.cpp
- BBox confidence thresh in yolov5.cpp
- Batch size in yolov5.cpp
</details>

## Run Your Custom Model
You may need train your own model and transfer your trained-model to tensorRT. So you can follow the following steps.
1. Train Custom Model
You can follow the [official wiki](https://github.com/ultralytics/yolov5/wiki/Train-Custom-Data
) to train your own model on your dataset. For example, I choose yolov5-s to train my model.
2. Transfer Custom Model
Just like [tensorRT official guideline](https://github.com/wang-xinyu/tensorrtx/edit/master/yolov5/).When your follow ` Generate yolov5 model` to get yolov5 and tensorrt rep, next step is to transfer your pytorch model to tensorrt.
Before this, you need to change yololayer.h file 20,21 and 22 line(CLASS_NUM，INPUT_H,INPUT_W) to your own parameters.

```shell
// before 
static constexpr int CLASS_NUM = 80; // 20
static constexpr int INPUT_H = 640;  // 21  yolov5's input height and width must be divisible by 32.
static constexpr int INPUT_W = 640; // 22

// after 
// if your model is 2 classfication and image size is 416*416
static constexpr int CLASS_NUM = 2; // 20
static constexpr int INPUT_H = 416;  // 21  yolov5's input height and width must be divisible by 32.
static constexpr int INPUT_W = 416; // 22
```

```shell
cd {tensorrtx}/yolov5/
// update CLASS_NUM in yololayer.h if your model is trained on custom dataset

mkdir build
cd build
cp {ultralytics}/yolov5/yolov5s.wts {tensorrtx}/yolov5/build
cmake ..
make
sudo ./yolov5 -s [.wts] [.engine] [s/m/l/x/s6/m6/l6/x6 or c/c6 gd gw]  // serialize model to plan file
sudo ./yolov5 -d [.engine] [image folder]  // deserialize and run inference, the images in [image folder] will be processed.
// For example yolov5s
sudo ./yolov5 -s yolov5s.wts yolov5s.engine s
sudo ./yolov5 -d yolov5s.engine ../samples
// For example Custom model with depth_multiple=0.17, width_multiple=0.25 in yolov5.yaml
sudo ./yolov5 -s yolov5_custom.wts yolov5.engine c 0.17 0.25
sudo ./yolov5 -d yolov5.engine ../samples
```

In this way, you can get your own tensorrt yolov5 model. Enjoy it!
",14,14,3,1,helmet-detection,"[cplusplus, cpp, deeplearning, helmet-detection, jetson-nano, jetson-xavier, jetson-xavier-nx, tensorrt, yolov5]",23
sidpro-hash,Helmet-Detection-YOLOv5,,https://github.com/sidpro-hash/Helmet-Detection-YOLOv5,https://api.github.com/repos/Helmet-Detection-YOLOv5/sidpro-hash,Helmet Detection using YOLOv5 training using your own dataset and testing the results in the google colaboratory.,"# Helmet-Detection-YOLOv5
Helmet Detection using YOLOv5 training using your own dataset and testing the results in the google colaboratory.

![Helmet Detection Example](https://github.com/sidpro-hash/Helmet-Detection-YOLOv5/blob/main/Men1.gif)

Based on the [YOLOv5 repository](https://github.com/ultralytics/yolov5) by [Ultralytics](https://ultralytics.com/). This notebooks [Helment_Detection_YOLOv5-Jupyter.ipynb](https://github.com/sidpro-hash/Helmet-Detection-YOLOv5/blob/main/Helment_Detection_Yolov5/Helment_Detection_YOLOv5-Jupyter.ipynb) & [Helment_Detection_YOLOv5-colab.ipynb](https://github.com/sidpro-hash/Helmet-Detection-YOLOv5/blob/main/Helment_Detection_Yolov5/Helment_Detection_YOLOv5-colab.ipynb) shows training on your own custom objects by example of Helmet Detection.

if you want to Train YOLOv5 On a Custom Dataset check this link:[https://blog.roboflow.com/how-to-train-yolov5-on-a-custom-dataset/](https://blog.roboflow.com/how-to-train-yolov5-on-a-custom-dataset/).

### The steps includes:
1. [Label Images](https://www.youtube.com/watch?v=OMgQ2JzOAWA&t=601s) for Object Detection with CVAT or use dataset
2. Data Preparation according to the yolo. use [roboflow](https://blog.roboflow.com/getting-started-with-roboflow/) for quick and easy process. 
",13,13,1,1,helmet-detection,"[helmet-detection, yolov5, yolov5-training]",23
tamasino52,Helmet_detection_and_facial_recognition,,https://github.com/tamasino52/Helmet_detection_and_facial_recognition,https://api.github.com/repos/Helmet_detection_and_facial_recognition/tamasino52,"A system to detect non-adopted persons using a deep learning model, identify faces, and record work logs","# Helmet Detection and Facial Recognition
[![Hits](https://hits.seeyoufarm.com/api/count/incr/badge.svg?url=https%3A%2F%2Fgithub.com%2Ftamasino52%2FHelmet_detection_and_facial_recognition)](https://hits.seeyoufarm.com)

A system that checks whether workers wear safety helmets through CCTVs at construction sites and reflects them to DB in real time.

# Requirements
python=3.6

```
pip install face_recognition
pip install opencv-python
```

# Face Registering
If you are not registered in database, system will ignore detection of your face.
So, you need to register your face before execute run.py
Be careful, '--id' option value must be unique.
```
python face_register.py your_name --id 1
```
After you execute face_register.py, Check about red box around your face.
If there is red box, press 's' button to register your identity into database.

# Run
```
python run.py
```
Red box means that you did not wear helmet, Blue box means that you wearied a helmet.

# If you want to modify DB
```
python DBmanager.py
```
We give you console to manage DB. Check a helplist.
",12,12,3,0,helmet-detection,"[database, face, facial-recognition, helmet, helmet-detection, object-detection]",23
tyui592,Real_Time_Helmet_Detection,,https://github.com/tyui592/Real_Time_Helmet_Detection,https://api.github.com/repos/Real_Time_Helmet_Detection/tyui592,Helmet Detector based on the CenterNet.,"Real Time Helmet Detection
==
This is pytorch implementation of helmet detector based on [CenterNet](https://arxiv.org/abs/1904.07850). 

I used the [SafetyHelmetWearing-Dataset(SHWD)](https://github.com/njvisionpower/Safety-Helmet-Wearing-Dataset) to detect helmet or person.

I will continue to update the entries to be filled in [TODO](https://github.com/tyui592/Real_Time_Helmet_Detection/wiki/TODO) for research in [`nightly`](https://github.com/tyui592/Real_Time_Helmet_Detection/tree/nightly)

[![Open RTHD in Colab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/drive/1-zz9z9_irTNtvsHBxVefsyT-lV0isBbJ?usp=sharing)

## Requirements
- [imgaug](https://github.com/aleju/imgaug) (v0.4.0)
- [torch](https://pytorch.org/) (v1.6.0)
- [torchvision](https://pytorch.org/) (v0.7.0)
- [torchsummary](https://github.com/sksq96/pytorch-summary)
- [requirements.txt](./requirements.txt)

## Features
- [Automatic Mixed Precision(AMP)](https://pytorch.org/docs/stable/amp.html)
- [Distributed Data Parallel(DDP)](https://pytorch.org/docs/stable/generated/torch.nn.parallel.DistributedDataParallel.html#torch.nn.parallel.DistributedDataParallel)
- [TorchScript](https://pytorch.org/docs/stable/jit.html#mixing-tracing-and-scripting)

## Usage
[SafetyHelmetWearing-Dataset(SHWD)](https://github.com/njvisionpower/Safety-Helmet-Wearing-Dataset) is need to train detector [[Download](https://drive.google.com/file/d/1qWm7rrwvjAWs1slymbrLaCf7Q-wnGLEX/view)].

The trained model [weights](https://github.com/tyui592/Real_Time_Helmet_Detection/releases/download/v0.0/check_point.pth) and [demo app](https://github.com/tyui592/Real_Time_Helmet_Detection/releases/download/v0.0/main) can be used in [release(v0.0)](https://github.com/tyui592/Real_Time_Helmet_Detection/releases/tag/v0.0).

### Example Scripts

#### Train
```bash
$ python main.py --train-flag --gpu-no 0 --data ./DATA/VOC2028/ --save-path ./WEIGHTS/ --amp
```

#### Test
```bash
$ python main.py --gpu-no 0  --model-load ./WEIGHTS/check_point.pth --data ./DATA/VOC2028 --imsize 512 --save-path ./WEIGHTS/results --batch-size 8
```

#### Measure mAP
```bash
$ cd mAP
mAP$ python main.py -na -np --dr ../WEIGHTS/results/txt/
```

#### Demo
```bash
$ python evaluate.py --gpu-no 0 --model-load ./WEIGHTS/check_point.pth --data ./imgs/000019.jpg --imsize 512 --save-path ./imgs/000019 --topk 100 --conf-th 0.2 --nms-th 0.2 --fontsize 0
```

## Results
| Input | Output |
| --- | --- |
| ![input](./imgs/000019.jpg) | ![output](./imgs/000019/image.png) |

**Performance**

| Helmet (AP) | Person (AP) | mAP |
| --- | --- | --- |
| 88.16 % | 88.71 % | 88.43 % |

The model trained by above Example Script.
The performance may be improved by increasing model size (ex, `--num-stack`, `--increase-ch`, ...) or searching hyperparameters (ex, `--hm-weight`, `--lr`, ...) more carefully.

Loading A Pytorch Model in C++ 
--

1. Create TorchScript Code of Detector
```bash
$ python export.py --model-load ./WEIGHTS/check_point.pth --nms-th 0.5 --topk 100
```

2. [Build App](https://github.com/tyui592/PytorchToCpp)


3. Run App (Speed: 100FPS @(512x512, 1080 Ti))
```bash
PytorchToCpp/build$ ./main -m ../../jit_traced_model_gpu.pth -i ../../imgs/000019.jpg
```
",10,10,2,0,helmet-detection,"[automatic-mixed-precision, centernet, distributed-data-parallel, helmet-detection, object-detection, pytorch, pytorch-implementation]",23
brlivsky,helmet-detection-yolo,,https://github.com/brlivsky/helmet-detection-yolo,https://api.github.com/repos/helmet-detection-yolo/brlivsky,"We present the Automatic Helmet Detection System, a CNN model trained on image dataset that can detect motorbikes as well as riders wearing helmets. ","# Helmet Detection using YOLOv3

## Motivation & Credits
The project was inspired from [Dr. C. Krishna Mohnan](https://www.iith.ac.in/~ckm/)'s M2Smart Project at IIT H. The code was forked from an earlier version of [yolov3](https://github.com/ultralytics/yolov3) maintained by [Glenn Jocher](https://github.com/glenn-jocher). Link to the original paper [[here](https://arxiv.org/abs/1804.02767)].

## Prerequisites
Knowledge in one or more of the following will be helpful.
1. Deep Learning
2. Computer Vision 
3. PyTorch
4. Google Colab

## Dataset
Dataset can be requested from this [link](https://www.iith.ac.in/~ckm/vigil/resources.html). Do provide a well written reason for the request. The video datset has to be converted to images and labeled manually. We've used [LabelImg](https://github.com/tzutalin/labelImg) to annotate the classes, the classnames being Helmet and Bike. 

## Implementation
Users are requested to go thoroughly through the original [repo](https://github.com/ultralytics/yolov3). Here is a walkthrough of the steps we've followed.
1. Set up the environment in Google Colab
2. Downloaded the dataset
3. Converted the videos to image frames (code given)
4. Annotated around 1000+ images manually using LabelImg, the more the merrier
5. Uploaded the dataset (images + annotation file) to the Drive associated with Colab
6. Used pretrained weights of COCO dataset to initialize the model (refer orginal repo)
7. Trained on the new dataset uploaded
8. Downloaded the weights and ran detection on PC
9. Modified detect.py to enable webcam

## Results
An image after detection of helmet and motorbike.

![Result](https://user-images.githubusercontent.com/6930097/130743558-46887d57-4603-4522-ae02-7bb8cc6598b4.jpg)

Parameters on how good the model is in identifying the objects trained. 

![download](https://user-images.githubusercontent.com/6930097/130744000-e60129bf-88d1-455c-9095-1a0d4c908d55.png)

## Future Work
For those who would like to extend the project, we would recommend adding the following features
1. Number Plate Detection using OCR
2. Seat Belt Detection
3. A web interface to identify the traffic rule violatores and manage the system

## Note and Disclaimer
* This project was done as part of our Bachelor's Thesis in 2019 and is not actively maintained.
",5,5,1,1,helmet-detection,"[cnn, cnn-for-visual-recognition, cnn-pytorch, deep-learning, helmet, helmet-detection, object-detection, pytroch, vehicle-detection, yolo, yolov3]",23
ArghyaShubhshiv,Accident-Detection-and-Reporting-Helmet,,https://github.com/ArghyaShubhshiv/Accident-Detection-and-Reporting-Helmet,https://api.github.com/repos/Accident-Detection-and-Reporting-Helmet/ArghyaShubhshiv,This is the Arduino code for a helmet that detects accidents as well as reports them to relevant authorities.,"# Accident-Detection-and-Reporting-Helmet

We’ve researched and innovated a significant addition to the existing “protective-helmets,” that will automatically detect the accident, as well as report the accident’s location to the nearest police station through SMS. It also alerts the nearby people through an emergency buzzer.


Arduino code for a helmet that detects accidents as well as reports them to relevant authorities. <br/>
- Won 3rd prize at Technovity '20
- Won the best Innovation Project in Alpha Hacks '21
- etc.

Contributors: 
- Arghya Shubhshiv: https://github.com/ArghyaShubhshiv/
- Arnav Bansal: https://github.com/ArnavBansal11/
- Rushil Rawat: https://github.com/RushilRawat/
",3,3,1,0,helmet-detection,"[arduino, helmet-detection, road-accidents, robotics]",23
manikanta-varaganti,detection-of-motorcyclists-without-helmet,,https://github.com/manikanta-varaganti/detection-of-motorcyclists-without-helmet,https://api.github.com/repos/detection-of-motorcyclists-without-helmet/manikanta-varaganti,,"<h1 align=""center""> Detection of Motorcyclists without Helmet </h1> <br>
<p align=""center"">
  <a href=""#"">
    <img alt=""DMH"" title=""DMH"" src=""images/logo.png"" width=""350"">
  </a>
</p>

<p align=""center"">
  An automated end-to-end pipeline to detect traffic rule violators in real-time
</p>

<!-- START doctoc generated TOC please keep comment here to allow auto update -->
<!-- DON'T EDIT THIS SECTION, INSTEAD RE-RUN doctoc TO UPDATE -->
## Table of Contents

- [About the Project](#about-the-project)
- [Prerequisites](#prerequisites)
- [Dataset](#dataset)
- [High Level System Architecture](#high-level-system-architecture)
- [Training](#training)
- [Implementation](#implementation)
- [Results](#results)
- [Contributing](#contributing)


<!-- END doctoc generated TOC please keep comment here to allow auto update -->

## About the Project

Road accidents are rising daily, and in countries like India, many people die due to negligence carried while wearing helmets. In the present-day scenario, we encounter numerous death cases due to two-wheeler road accidents. Even though helmets are available everywhere, people are not wearing them. This work is to improve surveillance on the main roads in locations where the use of helmets is mandatory. There is a need for increased enforcement of traffic laws, particularly for offenses without automatic detection methods. The increase in the number of motorcyclists using helmets causes a decrease in the number of accidents with victims.

<p align=""center"">
  <img src=""images/project-image.png"" alt=""project image"" >
</p>
<p align=""center"">
  <img src=""images/project-image-2.png"" alt=""project image"">
</p>
&nbsp;

The main objective of this project is to develop and implement a system that performs real-time helmet detection of bike riders using video surveillance, especially on main roads. Hence we can decrease the manual work of police, and even we can reduce the cost incurred for keeping our citizens safe by using this system as this software is built using free and open source technologies.


## Prerequisites

The following open source packages are used in this project:

* Python
* OpenCV
* Numpy
* Matplotlib
* Tensorflow, Tensorflow Object Detection API


## Dataset
### Bike rider Dataset
A dataset containing 739 images was collected from Google images using Web Scraping with the query “Biker riders wearing a helmet or no helmet.” This dataset is used for training the first module, and images are annotated using the ‘Labelmg’ tool. 

The dataset can be downloaded from [here](/HelmetDetection/dataset/bikerider-dataset.zip)

### Helmet Dataset

A dataset containing 764 images of 2 distinct classes from [kaggle](https://www.kaggle.com/andrewmvd/helmet-detection) is used for the second module. Bounding box annotations are provided in the XML format.


## High Level System Architecture

<p align=""center"">
  <img src=""images/system-architecture.png"" alt=""system architecture"" width=""450"">
</p>
&nbsp;

The pipeline consists of two stages. The first stage involves the detection of bike riders from the images using the Faster RCNN model. In the second stage, cropped bike rider images are fed to the YOLO V3 model to check whether the bike rider is wearing a helmet.
### Pipeline Design 
#### FasterRCNN module

<p align=""center"">
  <img src=""images/faster-rcnn-output.png"" alt=""Faster RCNN"" >
</p>

This module takes the input from the surveillance camera and breaks down the video stream into frames, and each frame is fed to a trained Faster RCNN model.  The model locates the bike rider with a bounding box. The original image will be cropped to the bike rider portion using the bike rider coordinates and fed to the next phase in the pipeline.

#### YOLOV3 module

<p align=""center"">
  <img src=""images/yolov3-output.png"" alt=""Yolo V3"">
</p>

This module takes the bike rider as input, preprocesses the image, and feeds it to YOLO Object Detection Model. The trained model locates the person's helmet and generates the bounding box along with the confidence value for each class. Suppose the object detection model identifies the person as not wearing a helmet; it saves the person's image, and police can manually or automatically generate the penalties by using other details in the picture, like a license plate.

#### Integration

<p align=""center"">
  <img src=""images/integration.png"" alt=""Integrated pipeline"">
</p>
The two models are integrated by designing an end-to-end pipeline capable of detecting the bike riders with and without a helmet from the video feed and storing the images of bike riders without a helmet in a folder.

## Training 

### FasterRCNN - Bikerider detection


1. Install Darknet framework 
2. Prepare  Dataset
3. Download pretrained weights
4. Configure files for training 
	- .config
	- .names
	- .data
5. Train the model


### YOLOV3 - Helmet detection

1. Install Darknet framework 
2. Prepare  Dataset
3. Download pretrained weights
4. Configure files for training 
	- .config
	- .names
	- .data
5. Train the model

## Implementation

The implemented pipeline can be found over [Detection_Of_Motorcyclists_Without_Helmet.ipynb](https://colab.research.google.com/drive/1Dfyi1ljVcVvrqiG55WokRcqmWzUM7XyD?usp=sharing).

## Results

<p align=""center"">
  <img src=""images/helmet-detection-demo.gif"" alt=""Helmet Detection Demo"" width=""450"">
</p>

The system can be used in real-time detection of traffic rule violators who ride bikes without using a helmet. The images of bike riders not wearing helmets are stored. This system can be installed in every surveillance camera on the main roads to assist the traffic police in detecting such violators in abnormal environmental conditions viz; hot sun, etc. Moreover, it can be extended to detect and report the license plates of violators. The license plate can be extracted using OCR and will allow the system to automatically send a penalty amount to the registered owner of the two-wheeler in case they are not wearing a helmet
The two models are integrated by designing an end-to-end pipeline capable of detecting the bike riders with and without a helmet from the video feed and storing the images of bike riders without a helmet in a folder.

## Contributing

Contributions are what make the open source community such an amazing place to be learn, inspire, and create. Any contributions you make are **greatly appreciated**.

1. Fork the Project
2. Create your Feature Branch (`git checkout -b feature/AmazingFeature`)
3. Commit your Changes (`git commit -m 'Add some AmazingFeature'`)
4. Push to the Branch (`git push origin feature/AmazingFeature`)
5. Open a Pull Request

Pull requests are welcome. For major changes, please open an issue first to discuss what you would like to change.",3,3,1,0,helmet-detection,"[faster-rcnn, helmet-detection, yolov3]",23
npk7264,Helmet-detection-YOLOv5,,https://github.com/npk7264/Helmet-detection-YOLOv5,https://api.github.com/repos/Helmet-detection-YOLOv5/npk7264,Flask App used for helmet detection,"# Helmet detection with YOLOV5 and Flask

## Instruction
- Replace best.pt with your model
- Install requirements
```powershell
pip install -r requirements.txt
```
- Run app
```powershell
python app.py
```
## Result

![alt text](https://github.com/npk7264/Helmet_Detection_with_YOLO/blob/main/static/results/helmet.jpg)
",1,1,1,0,helmet-detection,"[flask, helmet-detection, yolov5]",23
naveena-as,helmet-detection-yolo,,https://github.com/naveena-as/helmet-detection-yolo,https://api.github.com/repos/helmet-detection-yolo/naveena-as,"Using the YOLO architecture to detect helmetted and non-helmetted motorbikers. Training and testing done on custom data by manual annotation, using different versions of YOLO.","# helmet-detection-yolo
Using CNN to detect helmetted and non-helmetted motorbikers. Training and testing done on custom data by manual annotation, using different versions of YOLO.

This is an experimental approach at using YOLO architecture in detecting motorbike riders with and without helmet. The work is based on the research paper [Real-time license plate detection for non-helmeted motorcyclist using YOLO](https://www.sciencedirect.com/science/article/pii/S2405959519304187). Different versions of YOLO like yolov2, tiny-yolo, and its variants in darknet/darkflow were experimented with.
The [dataset](https://github.com/naveena-as/helmet-detection-yolo/tree/main/labelled_data) was collected from various websites and manually annotated using the LabelImg software (class 1 -> wearing helmet, class 2 -> not wearing helmet). Training was done on this custom data and testing done on unseen custom data.
Inputs where images, but trial was done on video input as well, by capturing them frame-by-frame.

The [presentation](https://github.com/naveena-as/helmet-detection-yolo/blob/main/Presentation.pdf) gives a summary of the whole work and links to necessary files, and the step-by-step experimentation can be seen in the [code](https://github.com/naveena-as/helmet-detection-yolo/blob/main/YOLO_helmet_detection_code.ipynb).
",1,1,1,1,helmet-detection,"[cnn, deep-learning, helmet-detection, yolo]",23
CompetitiveLin,HelmetDetectionWithYOLOv3-Pytorch,,https://github.com/CompetitiveLin/HelmetDetectionWithYOLOv3-Pytorch,https://api.github.com/repos/HelmetDetectionWithYOLOv3-Pytorch/CompetitiveLin,Based on yolov3 and channel and layer pruning,"Based on yolov3 and channel and layer pruning
",0,0,0,0,helmet-detection,"[helmet-detection, layer-pruning, yolov3]",23
ahsouza,iquizz-api,,https://github.com/ahsouza/iquizz-api,https://api.github.com/repos/iquizz-api/ahsouza,API RESTfull developed in Node.Js with MongoDB,"# iquizz-api

API REST using NodeJS and MongoDB",0,0,1,0,helmet-detection,"[animations, cluster, crawler, docker, docker-compose, ejs-templates, es8, font-awesome, grunt-task, helmet-detection, heroku, javascript, jquery, material-design, mongodb, nodejs, passport-strategy, passportjs, pusher, token-authetication]",23
farukalampro,helmet-segmentation-using-yolov8,,https://github.com/farukalampro/helmet-segmentation-using-yolov8,https://api.github.com/repos/helmet-segmentation-using-yolov8/farukalampro,helmet-segmentation-using-yolov8,"# Helmet Segmentation Using YOLOv8

![farukalampro-helmet-segmentation-using-yolov8](https://github.com/farukalampro/helmet-segmentation-using-yolov8/assets/92469073/920417f6-210c-405c-ae45-f3f3a3c2b459)


## Overview

This project utilizes the YOLOv8 (You Only Look Once) deep learning model to perform helmet segmentation in images or videos. The goal is to identify and segment helmets within the input data, which can be valuable for safety applications, such as industrial settings or sports.

### Prerequisites

List the prerequisites for running your project. Include items like software dependencies, hardware requirements, and any data or models that need to be downloaded or prepared.

Example:
- Python 3.6+
- PyTorch 1.7+
- CUDA-compatible GPU (optional but recommended)
- Helmet segmentation dataset (see [Dataset](#dataset))

### Installation

Provide step-by-step instructions on how to install and set up your project, including any necessary code dependencies or configuration steps.

Example:
1. Clone this repository: `git clone https://github.com/farukalampro/helmet-segmentation-using-yolov8.git`
2. Install Python dependencies: `pip install -r requirements.txt`
3. Download the pre-trained YOLOv8 weights (link here) and place them in the `weights/` directory.


",0,0,1,0,helmet-detection,"[computer-vision, helmet-detection, image-segmentation, object-detection, opencv, ultralytics, yolov8]",23
sayan0506,HardHead-Detection-for-Safety-Surveilance-using-YoloV3,,https://github.com/sayan0506/HardHead-Detection-for-Safety-Surveilance-using-YoloV3,https://api.github.com/repos/HardHead-Detection-for-Safety-Surveilance-using-YoloV3/sayan0506,HardHead Detection for Safety Surveilance,"# HardHead-Detection-for-Safety-Surveilance
HardHead Detection for Safety Surveilance

## **Problem Statement** - [sharepoint link](https://wobotintelligence-my.sharepoint.com/personal/hr_wobot_ai/_layouts/15/onedrive.aspx?id=%2Fpersonal%2Fhr%5Fwobot%5Fai%2FDocuments%2FHackathon%2D%20Extended%20%288th%20August%29%2FHackathon%204%2E0%2Epdf&parent=%2Fpersonal%2Fhr%5Fwobot%5Fai%2FDocuments%2FHackathon%2D%20Extended%20%288th%20August%29&originalPath=aHR0cHM6Ly93b2JvdGludGVsbGlnZW5jZS1teS5zaGFyZXBvaW50LmNvbS86YjovZy9wZXJzb25hbC9ocl93b2JvdF9haS9FWU1KcVBRUWpDMUVrZ1JWZi1qMEdYTUJJTy0taEQ3YjBBX1JqRXZ4dnNfTnJRP3J0aW1lPTlHcjFXcjlkMlVn)

• **Task: Build A Personal Safety Equipment Detection System**

#### Dataset Details:•
   * Hardhat/ head detection dataset is available here - [Dataset Link](https://wobotintelligence-my.sharepoint.com/personal/animikh_wobot_ai/_layouts/15/onedrive.aspx?id=%2Fpersonal%2Fanimikh%5Fwobot%5Fai%2FDocuments%2FHackathon%2FDataset&originalPath=aHR0cHM6Ly93b2JvdGludGVsbGlnZW5jZS1teS5zaGFyZXBvaW50LmNvbS86ZjovZy9wZXJzb25hbC9hbmltaWtoX3dvYm90X2FpL0Vnc3hvcTV6YW1wUGpmbm9KbFB6X3owQkFyODdLWGttSXZZNkRLclRDTnltYWc%5FcnRpbWU9eGxyZ1J2OWMyVWc)
#### Dataset annotation format: Pascal VOC (XMLs)
#### Dataset Size:
* Data with Annotations: 4,750
* Data without Annotations (Test): 250

## **Collab Implemenetation**

The entire **Helmet/Head object detection** implementation pipeline using **YoloV3** can be found here **[colab_notebook](https://colab.research.google.com/drive/1Z3Y62pOOKiU1cuIMkFWf5j2udOcW14N5?usp=sharing)**

## **Sample Result**

Sample Helmet and Head detection results can be found here.

Helmet detection
![Image1](https://github.com/sayan0506/HardHead-Detection-for-Safety-Surveilance-using-YoloV3/blob/main/Images/helmet_1.jpg)

Head detection - Here we can find that as in the dataset there are less head data as compared to helmet sets, so the model is not that good enough in finding heads in the 1st image. For this 2nd clean single person image head detection though is good.

![Image2](https://github.com/sayan0506/HardHead-Detection-for-Safety-Surveilance-using-YoloV3/blob/main/Images/head_1.jpg)
![Head2](https://github.com/sayan0506/HardHead-Detection-for-Safety-Surveilance-using-YoloV3/blob/main/Images/head_2.jpg)

Here also helmet detection result is quite good enough

![Helmet_2](https://github.com/sayan0506/HardHead-Detection-for-Safety-Surveilance-using-YoloV3/blob/main/Images/helmet_2.jpg)

## **Note :**

* The project details and workings files can be found here - [Drive Link](https://drive.google.com/drive/folders/1zKN6qu5KjsXS4mlESZPjD_TKHf9-Zfcc?usp=sharing)
* A guide to the project documentation can be found [here](https://github.com/sayan0506/HardHead-Detection-for-Safety-Surveilance-using-YoloV3/blob/main/Project%20Submission.pdf)

## **Reference:**

* [Dive Really Deep into YOLO v3](https://towardsdatascience.com/dive-really-deep-into-yolo-v3-a-beginners-guide-9e3d2666280e)
* [Real-time Object Detection with YOLO, YOLOv2 and now YOLOv3
](https://jonathan-hui.medium.com/real-time-object-detection-with-yolo-yolov2-28b1b93e2088)
* [mAP (mean Average Precision) for Object Detection](https://jonathan-hui.medium.com/map-mean-average-precision-for-object-detection-45c121a31173)
* [Automatic Hardhat Wearing Detection - Caffe](https://github.com/wujixiu/helmet-detection)
* [Hardhat (Helmet) detection from construction site using YOLOv3_tiny with TensorFlow](https://github.com/rashidch/Yolov3_tiny-Hardhat-detection_Tensorflow)
* [Helmet Detection using YOLOv2 in Keras](https://github.com/rekon/keras-yolo2)
* [YoloV3 Implemented in TensorFlow 2.0](https://github.com/zzh8829/yolov3-tf2)
* [Faster video file FPS with cv2.VideoCapture and OpenCV](https://www.pyimagesearch.com/2017/02/06/faster-video-file-fps-with-cv2-videocapture-and-opencv/)
* [Writing a training loop from scratch in Tensoorflow](https://www.tensorflow.org/guide/keras/writing_a_training_loop_from_scratch)
",0,0,1,0,helmet-detection,"[computer, computer-vision, helmet-detection, keras, object-detection, yolov3]",23
janahmorano,Helmet-Detection-Model,,https://github.com/janahmorano/Helmet-Detection-Model,https://api.github.com/repos/Helmet-Detection-Model/janahmorano,A real-time helmet detection system powered by YOLOv8. This project seamlessly analyzes live video streams and images to ensure safety compliance by detecting helmets. ,"﻿# Helmet-Detection-Model


A Real-Time Helmet Detection project powered by YOLOv8. This project employs state-of-the-art object detection techniques to identify helmets in live video feeds and images, ensuring safety compliance and risk mitigation. Whether in dynamic environments or controlled settings, this solution offers real-time monitoring with precision.

## Usage Instructions

To run the helmet detection model live, follow these steps:

1. **Clone the Repository:**
   Clone this repository to your local machine.

2. **Download the Model:**
Download the pre-trained YOLOv8 model weights file (""best.pt"") and place it in the project directory.

3. **Run the Notebook:**
Open the ""Helmet_Detection_Live.ipynb"" Jupyter Notebook. Make sure the `model` variable is set to the correct path where your ""best.pt"" model weights file is located.

4. **Run the Notebook Cells:**
Execute the notebook cells to initialize the model and start real-time helmet detection. The notebook will utilize the live video feed and display the detected results.

## Requirements

- Python 3.6 or later
- PyTorch
- OpenCV
- Jupyter Notebook (for running the provided notebook)

## Model Training and Customization

This project is built using YOLOv8, a popular object detection framework. If you're interested in training the model on your own dataset or customizing its behavior, refer to the YOLOv8 documentation and tutorials.

---

Created by Janah Patricia Morano

",0,0,1,0,helmet-detection,"[computer-vision, helmet-detection, live-detection, yolov8]",23
sahand995,Time-Related-Heatmap,,https://github.com/sahand995/Time-Related-Heatmap,https://api.github.com/repos/Time-Related-Heatmap/sahand995,Time-related Heatmap using a customized C# algorithm in Unity for occupancy simulation and time management in construction sites,"# Time-Related Crowd Occupancy Heat-map:
Using a customized C# algorithm, I have developed a Time-Related Heat-map that plots the movement and occupancy concentration of any moving object on a 2D surface plain. The tool can be used for various use cases such as visualizing and tracking workers’ location, as well as the high occupancy pin points in a construction site.


## Animation

<p align=""center"">
  <img  src=""https://user-images.githubusercontent.com/64426415/138857385-5db2876e-c5f1-4f99-8431-148b01e36fa9.gif"">
</p>


",5,5,1,0,construction,"[construction, constructionsite, csharp, heatmap, simulation, unity, visualization]",23
RUB-Informatik-im-Bauwesen,loin-ontology,RUB-Informatik-im-Bauwesen,https://github.com/RUB-Informatik-im-Bauwesen/loin-ontology,https://api.github.com/repos/loin-ontology/RUB-Informatik-im-Bauwesen,"This repository includes the LOIN ontology according to EN 17412-1 with specification of IDS developed by buildingSMART International and ICDD ISO 21597-1. Furthermore, an example is added as demonstration of the LOIN ontology","Markdown documentation created by [pyLODE](http://github.com/rdflib/pyLODE) 2.4

# Level of Information Need (LOIN) Ontology

## Metadata
* **IRI**
  * `https://w3id.org/loin`
* **Publisher(s)**
  * [Chair of Computing in Engineering, Ruhr University Bochum](https://www.inf.bi.rub.de)
* **Creators(s)**
  * [Liu Liu](https://orcid.org/0000-0001-5907-7609)
    [[ORCID]](https://orcid.org/0000-0001-5907-7609)
    (<liu.liu-m6r@rub.de></a>) of [Ruhr University Bochum](https://www.inf.bi.ruhr-uni-bochum.de/iib/lehrstuhl/mitarbeiter/liu_liu.html.en)
  * [Philipp Hagedorn](https://orcid.org/0000-0002-6249-243X)
    [[ORCID]](https://orcid.org/0000-0002-6249-243X)
    (<philipp.hagedorn-n6v@rub.de></a>) of [Ruhr University Bochum](https://www.inf.bi.ruhr-uni-bochum.de/iib/lehrstuhl/mitarbeiter/philipp_hagedorn.html.en)
* **Created**
  * 2023-01-30
* **Version Information**
  * 0.2
* **License &amp; Rights**
  * [https://creativecommons.org/licenses/by/4.0/](https://creativecommons.org/licenses/by/4.0/)
  * &copy; 2023 by Chair of Computing in Engineering, Ruhr University Bochum
* **Source**
  * [https://github.com/RUB-Informatik-im-Bauwesen/loin-ontology](https://github.com/RUB-Informatik-im-Bauwesen/loin-ontology)
* **Ontology RDF**
  * RDF ([loin.ttl](turtle))
### Description
<p>The Level of Information Need (LOIN) Ontology is defined for specifying information requirements for delivery of data in a buildings' life cycle. The LOIN ontology is based on the standard BS EN 17412-1 (2020). Furthermore, it is extended with vocabulary for connecing Information Delivery Specifications (IDS) and Information containers for linked document delivery (ICDD) as per ISO 21597-1 (2020). </p>

## Table of Contents
1. [Classes](#classes)
1. [Object Properties](#objectproperties)
1. [Datatype Properties](#datatypeproperties)
1. [Properties](#properties)
1. [Namespaces](#namespaces)
1. [Legend](#legend)

## Classes
[Actor](#Actor),
[Alphanumerical information](#Alphanumericalinformation),
[Alphanumerical information content](#Alphanumericalinformationcontent),
[Appearance](#Appearance),
[Attribut of IDS](#AttributofIDS),
[Attribute name](#Attributename),
[Breakdown structure](#Breakdownstructure),
[Breakdown structure type](#Breakdownstructuretype),
[Classification of IDS](#ClassificationofIDS),
[Detail](#Detail),
[Dimensionality](#Dimensionality),
[Document](#Document),
[Document content](#Documentcontent),
[Document format](#Documentformat),
[Document purpose](#Documentpurpose),
[Document specification](#Documentspecification),
[Documentation](#Documentation),
[Entity](#Entity),
[Entity name](#Entityname),
[Geometrical information](#Geometricalinformation),
[Geometrical information specification](#Geometricalinformationspecification),
[IDS data definition](#IDSdatadefinition),
[IDS facet definition](#IDSfacetdefinition),
[IDS facet parameter](#IDSfacetparameter),
[IDS requirement type](#IDSrequirementtype),
[IFC data type](#IFCdatatype),
[Identification](#Identification),
[Identifier](#Identifier),
[Identifier type](#Identifiertype),
[Information delivery milestone](#Informationdeliverymilestone),
[Information provider](#Informationprovider),
[Information receiver](#Informationreceiver),
[Location](#Location),
[Material](#Material),
[Object](#Object),
[Ontology data definition](#Ontologydatadefinition),
[Parametric behaviour](#Parametricbehaviour),
[Predefined type](#Predefinedtype),
[Property](#Property),
[Property name](#Propertyname),
[Property set name](#Propertysetname),
[Purpose](#Purpose),
[Restriction type](#Restrictiontype),
[Value](#Value),
### Actor
Property | Value
--- | ---
IRI | `https://w3id.org/loin#Actor`
Description | <p>Actor is a contextual aspect according to BS EN 17412-1 (2020)</p>
Super-classes |[rdfs:Resource](http://www.w3.org/2000/01/rdf-schema#Resource) (c)<br />
Sub-classes |[loin:InformationProvider](Informationprovider) (c)<br />[loin:InformationReceiver](Informationreceiver) (c)<br />
In domain of |[loin:hasAgent](hasagent) (op)<br />[loin:isRelatedToContainerParty](isrelatedtocontainerparty)<br />
### Appearance
Property | Value
--- | ---
IRI | `https://w3id.org/loin#Appearance`
Description | <p>Appearance as a geometrical information specification for information need according to BS EN 17412-1 (2020)</p>
Super-classes |[loin:GeometrySpecification](Geometricalinformationspecification) (c)<br />
### Attribut of IDS
Property | Value
--- | ---
IRI | `https://w3id.org/loin#Attribute`
Description | <p>Attribut is a facet of Information Delivery Specification (IDS), a standard developed by buildingSMART International</p>
Super-classes |[loin:IDSFacetDefinition](IDSfacetdefinition) (c)<br />
Restrictions |[loin:hasAttributeName](hasattributename) (op) **exactly** 1<br />
In domain of |[loin:hasValue](hasvalue) (op)<br />[loin:hasAttributeName](hasattributename) (op)<br />
### Attribute name
Property | Value
--- | ---
IRI | `https://w3id.org/loin#AttributeName`
Description | <p>Attribute name must be a valid attribute name from the IFC schema according to the definition of IDS developed by buildingSMART International. Example AttributeName = ""Description""</p>
Super-classes |[loin:IDSFacetParameter](IDSfacetparameter) (c)<br />
Restrictions |[loin:hasRestrictionType](hasrestrictiontype) (op) **exactly** 1<br />[loin:restrictionFormulation](Constrainttextformulatedforfacetparameters) (dp) **exactly** 1<br />
In range of |[loin:hasAttributeName](hasattributename) (op)<br />
### Breakdown structure
Property | Value
--- | ---
IRI | `https://w3id.org/loin#BreakdownStructure`
Description | <p>Breakdown structure is a term for positioning the object in a structure according to BS EN 17412-1 (2020)</p>
Super-classes |[rdfs:Resource](http://www.w3.org/2000/01/rdf-schema#Resource) (c)<br />
Restrictions |[loin:hasIdentifier](hasidentifier) (op) **exactly** 1<br />
In domain of |[loin:hasBreakdownStructureType](hasbreakdownstructuretype) (op)<br />[loin:hasIdentifier](hasidentifier) (op)<br />
In range of |[loin:hasBreakdownStructure](hasbreakdownstructure) (op)<br />
### Breakdown structure type
Property | Value
--- | ---
IRI | `https://w3id.org/loin#BreakdownStructureType`
Description | <p>Breakdown structure type is a term to specify the structure according to BS EN 17412-1 (2020)</p>
Super-classes |[rdfs:Resource](http://www.w3.org/2000/01/rdf-schema#Resource) (c)<br />
In range of |[loin:hasBreakdownStructureType](hasbreakdownstructuretype) (op)<br />
### Classification of IDS
Property | Value
--- | ---
IRI | `https://w3id.org/loin#Classification`
Description | <p>Classification is is a facet of Information Delivery Specification (IDS), a standard developed by buildingSMART International. In this ontology, it is defined as an equivalent class of Indentification according to BS EN 17412-1</p>
Super-classes |[loin:IDSFacetDefinition](IDSfacetdefinition) (c)<br />
### Detail
Property | Value
--- | ---
IRI | `https://w3id.org/loin#Detail`
Description | <p>Detail as a geometrical information specification for information need according to BS EN 17412-1 (2020)</p>
Super-classes |[loin:GeometrySpecification](Geometricalinformationspecification) (c)<br />
### Dimensionality
Property | Value
--- | ---
IRI | `https://w3id.org/loin#Dimensionality`
Description | <p>Dimensionality as a geometrical information specification for information need according to BS EN 17412-1 (2020)</p>
Super-classes |[loin:GeometrySpecification](Geometricalinformationspecification) (c)<br />
### Document
Property | Value
--- | ---
IRI | `https://w3id.org/loin#Document`
Description | <p>Document is a term for specifying the documentation of information need according to BS EN 17412-1 (2020)</p>
Super-classes |[rdfs:Resource](http://www.w3.org/2000/01/rdf-schema#Resource) (c)<br />
Restrictions |[loin:isRelatedToContainerDocument](isrelatedtocontainerdocument) (op) **max** 1<br />[loin:hasDocumentSpecification](hasdocumentatonspecification) (op) **some** [loin:DocumentFormat](Documentformat) (c)<br />[loin:belongsToInformationContent](belongstoinformationcontent) (op) **max** 1<br />[loin:isRelatedToContainerLinkset](isrelatedtocontainerlinkset) (op) **max** 1<br />[loin:hasDocumentSpecification](hasdocumentatonspecification) (op) **some** [loin:DocumentPurpose](Documentpurpose) (c)<br />[loin:hasDocumentSpecification](hasdocumentatonspecification) (op) **some** [loin:DocumentContent](Documentcontent) (c)<br />
In domain of |[loin:belongsToInformationContent](belongstoinformationcontent) (op)<br />[loin:hasDocumentSpecification](hasdocumentatonspecification) (op)<br />[loin:isRelatedToContainerLinkset](isrelatedtocontainerlinkset) (op)<br />[loin:isRelatedToContainerDocument](isrelatedtocontainerdocument) (op)<br />
In range of |[loin:isRelatedToLoinDocument](isrelatedtoLoindocument) (op)<br />
### Document content
Property | Value
--- | ---
IRI | `https://w3id.org/loin#DocumentContent`
Description | <p>Document specification for content for information need according to BS EN 17412-1 (2020)</p>
Super-classes |[loin:DocumentSpecification](Documentspecification) (c)<br />
### Document format
Property | Value
--- | ---
IRI | `https://w3id.org/loin#DocumentFormat`
Description | <p>Document specification for format for information need according to BS EN 17412-1 (2020)</p>
Super-classes |[loin:DocumentSpecification](Documentspecification) (c)<br />
### Document purpose
Property | Value
--- | ---
IRI | `https://w3id.org/loin#DocumentPurpose`
Description | <p>Document purpose is a extension according to BS EN 17412-1 (2020) 6.4 Document - Example 1. It specifies the use of document</p>
Super-classes |[loin:DocumentSpecification](Documentspecification) (c)<br />
### Document specification
Property | Value
--- | ---
IRI | `https://w3id.org/loin#DocumentSpecification`
Description | <p>Additional specification of document for information need according to BS EN 17412-1 (2020)</p>
Super-classes |[rdfs:Resource](http://www.w3.org/2000/01/rdf-schema#Resource) (c)<br />
Sub-classes |[loin:DocumentFormat](Documentformat) (c)<br />[loin:DocumentContent](Documentcontent) (c)<br />[loin:DocumentPurpose](Documentpurpose) (c)<br />
In range of |[loin:hasDocumentSpecification](hasdocumentatonspecification) (op)<br />
### Documentation
Property | Value
--- | ---
IRI | `https://w3id.org/loin#Documentation`
Description | <p>Documentation is a term for specifying the information need according to BS EN 17412-1 (2020)</p>
Super-classes |[rdfs:Resource](http://www.w3.org/2000/01/rdf-schema#Resource) (c)<br />
In domain of |[loin:hasDocument](hasdocument) (op)<br />
In range of |[loin:hasDocumentation](hasdocumentation) (op)<br />
### Entity
Property | Value
--- | ---
IRI | `https://w3id.org/loin#Entity`
Description | <p>Entity is a facet of Information Delivery Specification (IDS), a standard developed by buildingSMART International</p>
Super-classes |[loin:IDSFacetDefinition](IDSfacetdefinition) (c)<br />
Restrictions |[loin:hasEntityName](hasentityname) (op) **exactly** 1<br />
In domain of |[loin:hasEntityName](hasentityname) (op)<br />[loin:hasPredefinedType](haspredefinedtype) (op)<br />
### Entity name
Property | Value
--- | ---
IRI | `https://w3id.org/loin#EntityName`
Description | <p>Entity name must be a valid IFC class from the IFC schema according to IDS developed by buildingSMART International. Example EntityName = ""IFCWALL""</p>
Super-classes |[loin:IDSFacetParameter](IDSfacetparameter) (c)<br />
Restrictions |[loin:restrictionFormulation](Constrainttextformulatedforfacetparameters) (dp) **exactly** 1<br />[loin:hasRestrictionType](hasrestrictiontype) (op) **exactly** 1<br />
In range of |[loin:hasEntityName](hasentityname) (op)<br />
### Geometrical information
Property | Value
--- | ---
IRI | `https://w3id.org/loin#Geometry`
Description | <p>Geometrical information is a term for specifying the information need according to BS EN 17412-1 (2020)</p>
Super-classes |[rdfs:Resource](http://www.w3.org/2000/01/rdf-schema#Resource) (c)<br />
Restrictions |[loin:hasGeometrySpecification](hasgeometricalinformationspecification) (op) **some** [loin:Location](Location) (c)<br />[loin:requested](requestedasboolean,specifysifGeometricalinformationisneededaccordingtoBSEN17412-1(2020)) (dp) **exactly** 1<br />[loin:hasGeometrySpecification](hasgeometricalinformationspecification) (op) **some** [loin:ParametricBehaviour](Parametricbehaviour) (c)<br />[loin:hasGeometrySpecification](hasgeometricalinformationspecification) (op) **some** [loin:Dimensionality](Dimensionality) (c)<br />[loin:hasGeometrySpecification](hasgeometricalinformationspecification) (op) **some** [loin:Detail](Detail) (c)<br />[loin:hasGeometrySpecification](hasgeometricalinformationspecification) (op) **some** [loin:Appearance](Appearance) (c)<br />
In domain of |[loin:requested](requestedasboolean,specifysifGeometricalinformationisneededaccordingtoBSEN17412-1(2020)) (dp)<br />[loin:hasGeometrySpecification](hasgeometricalinformationspecification) (op)<br />
In range of |[loin:hasGeometry](hasgeometricalinformation) (op)<br />
### Geometrical information specification
Property | Value
--- | ---
IRI | `https://w3id.org/loin#GeometrySpecification`
Description | <p>Additional specification of geometrical information for information need according to BS EN 17412-1 (2020)</p>
Super-classes |[rdfs:Resource](http://www.w3.org/2000/01/rdf-schema#Resource) (c)<br />
Sub-classes |[loin:Location](Location) (c)<br />[loin:Detail](Detail) (c)<br />[loin:Appearance](Appearance) (c)<br />[loin:Dimensionality](Dimensionality) (c)<br />[loin:ParametricBehaviour](Parametricbehaviour) (c)<br />
In domain of |[loin:requested](requestedasboolean,specifysifGeometricalinformationisneededaccordingtoBSEN17412-1(2020)) (dp)<br />
In range of |[loin:hasGeometrySpecification](hasgeometricalinformationspecification) (op)<br />
### IDS data definition
Property | Value
--- | ---
IRI | `https://w3id.org/loin#IDSDataDefinition`
Description | <p>IDS data definition is used to specify the alphanumerical information according to Information Delivery Specification (IDS) developed by buildingSMART International</p>
Super-classes |[loin:InformationContent](Alphanumericalinformationcontent) (c)<br />
Restrictions |[loin:hasApplicability](hasapplicability) (op) **min** 1<br />[loin:hasRequirement](hasrequirement) (op) **min** 1<br />[loin:description](description) (dp) **exactly** 1<br />[loin:hasApplicability](hasapplicability) (op) **some** [loin:Entity](Entity) (c)<br />
In domain of |[loin:hasRequirement](hasrequirement) (op)<br />[loin:hasApplicability](hasapplicability) (op)<br />
### IDS facet definition
Property | Value
--- | ---
IRI | `https://w3id.org/loin#IDSFacetDefinition`
Description | <p>IDS facet definition is used to define a facet to apply the requirement or to require the information according to IDS standard developed by buildingSMART International</p>
Super-classes |[rdfs:Resource](http://www.w3.org/2000/01/rdf-schema#Resource) (c)<br />
Sub-classes |[loin:Attribute](AttributofIDS) (c)<br />[loin:Property](Property) (c)<br />[loin:Entity](Entity) (c)<br />[loin:Material](Material) (c)<br />[loin:Classification](ClassificationofIDS) (c)<br />
In domain of |[loin:hasRequirementType](hasrequirementtype) (op)<br />
In range of |[loin:hasApplicability](hasapplicability) (op)<br />[loin:hasRequirement](hasrequirement) (op)<br />
### IDS facet parameter
Property | Value
--- | ---
IRI | `https://w3id.org/loin#IDSFacetParameter`
Description | <p>IDS facet parameter is used to specify a facet definition according to IDS standard developed by buildingSMART International</p>
Super-classes |[rdfs:Resource](http://www.w3.org/2000/01/rdf-schema#Resource) (c)<br />
Sub-classes |[loin:EntityName](Entityname) (c)<br />[loin:PsetName](Propertysetname) (c)<br />[loin:PropertyName](Propertyname) (c)<br />[loin:Value](Value) (c)<br />[loin:AttributeName](Attributename) (c)<br />[loin:PredefinedType](Predefinedtype) (c)<br />[loin:IFCDataType](IFCdatatype) (c)<br />
In domain of |[loin:restrictionFormulation](Constrainttextformulatedforfacetparameters) (dp)<br />[loin:hasRestrictionType](hasrestrictiontype) (op)<br />
### IDS requirement type
Property | Value
--- | ---
IRI | `https://w3id.org/loin#IDSRequirementType`
Description | <p>IDS requirement type is used to specify a requirement, if it is optional or mandatory according to IDS standard developed by buildingSMART International</p>
Super-classes |[rdfs:Resource](http://www.w3.org/2000/01/rdf-schema#Resource) (c)<br />
In range of |[loin:hasRequirementType](hasrequirementtype) (op)<br />
### Restriction type
Property | Value
--- | ---
IRI | `https://w3id.org/loin#IDSRestrictionType`
Description | <p>Restriction type is used to specify the value of IDS facet parameter, that is defined in restriction formulation. The restriction types are based on IDS standard developed by buildingSMART International</p>
Super-classes |[rdfs:Resource](http://www.w3.org/2000/01/rdf-schema#Resource) (c)<br />
In range of |[loin:hasRestrictionType](hasrestrictiontype) (op)<br />
### IFC data type
Property | Value
--- | ---
IRI | `https://w3id.org/loin#IFCDataType`
Description | <p>IFC data type must be a valid predefined type from the IFC schema according to IDS standard developed by buildingSMART International</p>
Super-classes |[loin:IDSFacetParameter](IDSfacetparameter) (c)<br />
Restrictions |[loin:restrictionFormulation](Constrainttextformulatedforfacetparameters) (dp) **exactly** 1<br />[loin:hasRestrictionType](hasrestrictiontype) (op) **exactly** 1<br />
In range of |[loin:hasIFCDataType](hasIFCdatatype) (op)<br />
### Identification
Property | Value
--- | ---
IRI | `https://w3id.org/loin#Identification`
Description | <p>Identification is a term for positioning the object in a breakdown structure according to BS EN 17412-1 (2020)</p>
Super-classes |[rdfs:Resource](http://www.w3.org/2000/01/rdf-schema#Resource) (c)<br />
Restrictions |[loin:hasBreakdownStructure](hasbreakdownstructure) (op) **min** 1<br />
In domain of |[loin:hasBreakdownStructure](hasbreakdownstructure) (op)<br />
In range of |[loin:hasIdentification](hasidentification) (op)<br />
### Identifier
Property | Value
--- | ---
IRI | `https://w3id.org/loin#Identifier`
Description | <p>Identifier is used to assiging a vaule for positioning the object in a breakdown structure according to BS EN 17412-1 (2020)</p>
Super-classes |[rdfs:Resource](http://www.w3.org/2000/01/rdf-schema#Resource) (c)<br />
Restrictions |[loin:hasBreakdownStructure](hasbreakdownstructure) (op) **exactly** 1<br />[loin:hasIdentifierType](hasidentifiertype) (op) **exactly** 1<br />[loin:value](value) (dp) **exactly** 1<br />
In domain of |[loin:hasIdentifierType](hasidentifiertype) (op)<br />
In range of |[loin:hasIdentifier](hasidentifier) (op)<br />[loin:specifiedByIdentifier](specifiedbyidentifier)<br />
### Identifier type
Property | Value
--- | ---
IRI | `https://w3id.org/loin#IdentifierType`
Description | <p>Identifier type is used to specify the identifier in a breakdown structure according to BS EN 17412-1 (2020)</p>
Super-classes |[rdfs:Resource](http://www.w3.org/2000/01/rdf-schema#Resource) (c)<br />
In domain of |[loin:isRelatedToLinksetIdentifier](isrelatedtolinksetidentifier)<br />
In range of |[loin:hasIdentifierType](hasidentifiertype) (op)<br />
### Alphanumerical information
Property | Value
--- | ---
IRI | `https://w3id.org/loin#Information`
Description | <p>Alphanumerical information is a term for specifying the information need according to BS EN 17412-1 (2020)</p>
Super-classes |[rdfs:Resource](http://www.w3.org/2000/01/rdf-schema#Resource) (c)<br />
Restrictions |[loin:requested](requestedasboolean,specifysifGeometricalinformationisneededaccordingtoBSEN17412-1(2020)) (dp) **exactly** 1<br />
In domain of |[loin:hasInformationContent](hasalphanumericalinformatoncontent) (op)<br />[loin:requested](requestedasboolean,specifysifGeometricalinformationisneededaccordingtoBSEN17412-1(2020)) (dp)<br />[loin:hasIdentification](hasidentification) (op)<br />
In range of |[loin:hasInformation](hasalphanumericalinformation) (op)<br />
### Alphanumerical information content
Property | Value
--- | ---
IRI | `https://w3id.org/loin#InformationContent`
Description | <p>Alphanumerical information content is a term for specifying the alphanumerical information according to BS EN 17412-1 (2020)</p>
Super-classes |[rdfs:Resource](http://www.w3.org/2000/01/rdf-schema#Resource) (c)<br />
Sub-classes |[loin:IDSDataDefinition](IDSdatadefinition) (c)<br />[loin:OntologyDataDefinition](Ontologydatadefinition) (c)<br />
In domain of |[loin:isRelatedToLoinDocument](isrelatedtoLoindocument) (op)<br />[loin:specifiedByIdentifier](specifiedbyidentifier)<br />
In range of |[loin:hasInformationContent](hasalphanumericalinformatoncontent) (op)<br />[loin:belongsToInformationContent](belongstoinformationcontent) (op)<br />
### Information delivery milestone
Property | Value
--- | ---
IRI | `https://w3id.org/loin#InformationDeliveryMilestone`
Description | <p>Information delivery milestone is a contextual aspect according to BS EN 17412-1 (2020)</p>
Super-classes |[rdfs:Resource](http://www.w3.org/2000/01/rdf-schema#Resource) (c)<br />
Restrictions |[loin:hasProvider](hasprovider) (op) **exactly** 1<br />[loin:hasObject](hasobject) (op) **min** 1<br />[loin:hasPurpose](haspurpose) (op) **exactly** 1<br />[loin:hasReceiver](hasinformationreceiver) (op) **exactly** 1<br />
In domain of |[loin:isRelatedToContainerDescription](isrelatedtocontainerdescription) (op)<br />[loin:hasReceiver](hasinformationreceiver) (op)<br />[loin:hasObject](hasobject) (op)<br />[loin:hasPurpose](haspurpose) (op)<br />[loin:hasProvider](hasprovider) (op)<br />
### Information provider
Property | Value
--- | ---
IRI | `https://w3id.org/loin#InformationProvider`
Description | <p>Information provider is a party for information delivery according to ISO 19650-1 (2018)</p>
Super-classes |[loin:Actor](Actor) (c)<br />
In range of |[loin:hasProvider](hasprovider) (op)<br />
### Information receiver
Property | Value
--- | ---
IRI | `https://w3id.org/loin#InformationReceiver`
Description | <p>Information receiver is a party for information delivery according to ISO 19650-1 (2018)</p>
Super-classes |[loin:Actor](Actor) (c)<br />
In range of |[loin:hasReceiver](hasinformationreceiver) (op)<br />
### Location
Property | Value
--- | ---
IRI | `https://w3id.org/loin#Location`
Description | <p>Location as a geometrical information specification for information need according to BS EN 17412-1 (2020)</p>
Super-classes |[loin:GeometrySpecification](Geometricalinformationspecification) (c)<br />
### Material
Property | Value
--- | ---
IRI | `https://w3id.org/loin#Material`
Description | <p>Material is a facet of Information Delivery Specification(IDS), a standard developed by buildingSMART International</p>
Super-classes |[loin:IDSFacetDefinition](IDSfacetdefinition) (c)<br />
In domain of |[loin:hasValue](hasvalue) (op)<br />
### Object
Property | Value
--- | ---
IRI | `https://w3id.org/loin#Object`
Description | <p>Object is a contextual aspect according to BS EN 17412-1 (2020)</p>
Super-classes |[rdfs:Resource](http://www.w3.org/2000/01/rdf-schema#Resource) (c)<br />
Restrictions |[loin:hasInformation](hasalphanumericalinformation) (op) **max** 1<br />[loin:hasGeometry](hasgeometricalinformation) (op) **max** 1<br />[loin:hasDocumentation](hasdocumentation) (op) **max** 1<br />
In domain of |[loin:hasDocumentation](hasdocumentation) (op)<br />[loin:hasInformation](hasalphanumericalinformation) (op)<br />[loin:hasGeometry](hasgeometricalinformation) (op)<br />
In range of |[loin:hasObject](hasobject) (op)<br />
### Ontology data definition
Property | Value
--- | ---
IRI | `https://w3id.org/loin#OntologyDataDefinition`
Description | <p>Ontology data definition is an extension of BS EN 17412-1 (2020). It is used to specify the alphanumerical information according to a published or customized ontology</p>
Super-classes |[loin:InformationContent](Alphanumericalinformationcontent) (c)<br />
Restrictions |[loin:specifiedByIdentifier](specifiedbyidentifier) **min** 1<br />
### Parametric behaviour
Property | Value
--- | ---
IRI | `https://w3id.org/loin#ParametricBehaviour`
Description | <p>Parametric behaviour as a geometrical information specification for information need according to BS EN 17412-1 (2020)</p>
Super-classes |[loin:GeometrySpecification](Geometricalinformationspecification) (c)<br />
### Predefined type
Property | Value
--- | ---
IRI | `https://w3id.org/loin#PredefinedType`
Description | <p>Predefined type must be a valid predefined type from the IFC schema, or any custom text value according to IDS standard developed by buildingSMART International</p>
Super-classes |[loin:IDSFacetParameter](IDSfacetparameter) (c)<br />
Restrictions |[loin:hasRestrictionType](hasrestrictiontype) (op) **exactly** 1<br />[loin:restrictionFormulation](Constrainttextformulatedforfacetparameters) (dp) **exactly** 1<br />
In range of |[loin:hasPredefinedType](haspredefinedtype) (op)<br />
### Property
Property | Value
--- | ---
IRI | `https://w3id.org/loin#Property`
Description | <p>Property is a facet of Information Delivery Specification(IDS), a standard developed by buildingSMART International</p>
Super-classes |[loin:IDSFacetDefinition](IDSfacetdefinition) (c)<br />
Restrictions |[loin:hasIFCDataType](hasIFCdatatype) (op) **exactly** 1<br />[loin:belongsToPset](ApropertybelongstoPropertyset) (op) **exactly** 1<br />[loin:hasPropertyName](haspropertyname) (op) **exactly** 1<br />
In domain of |[loin:hasPropertyName](haspropertyname) (op)<br />[loin:hasIFCDataType](hasIFCdatatype) (op)<br />[loin:hasValue](hasvalue) (op)<br />[loin:belongsToPset](ApropertybelongstoPropertyset) (op)<br />
### Property name
Property | Value
--- | ---
IRI | `https://w3id.org/loin#PropertyName`
Description | <p>Property name must be a valid name from the IFC schema, or any custom text value according to IDS stan developed by buildingSMART International</p>
Super-classes |[loin:IDSFacetParameter](IDSfacetparameter) (c)<br />
Restrictions |[loin:restrictionFormulation](Constrainttextformulatedforfacetparameters) (dp) **exactly** 1<br />[loin:hasRestrictionType](hasrestrictiontype) (op) **value** [loin:SimpleValue](https://w3id.org/loin#SimpleValue) (c)<br />
In range of |[loin:hasPropertyName](haspropertyname) (op)<br />
### Property set name
Property | Value
--- | ---
IRI | `https://w3id.org/loin#PsetName`
Description | <p>Property set name must be a valid name from the IFC schema, or any custom text value according to IDS standard developed by buildingSMART International</p>
Super-classes |[loin:IDSFacetParameter](IDSfacetparameter) (c)<br />
Restrictions |[loin:restrictionFormulation](Constrainttextformulatedforfacetparameters) (dp) **exactly** 1<br />[loin:hasRestrictionType](hasrestrictiontype) (op) **exactly** 1<br />
In range of |[loin:belongsToPset](ApropertybelongstoPropertyset) (op)<br />
### Purpose
Property | Value
--- | ---
IRI | `https://w3id.org/loin#Purpose`
Description | <p>Purpose is a contextual aspect according to BS EN 17412-1 (2020)</p>
Super-classes |[rdfs:Resource](http://www.w3.org/2000/01/rdf-schema#Resource) (c)<br />
Restrictions |[loin:description](description) (dp) **exactly** 1<br />
In domain of |[loin:isRelatedToContainerDescription](isrelatedtocontainerdescription) (op)<br />
In range of |[loin:hasPurpose](haspurpose) (op)<br />
### Value
Property | Value
--- | ---
IRI | `https://w3id.org/loin#Value`
Description | <p>Value can be any custom value according to IDS standard developed by buildingSMART International</p>
Super-classes |[loin:IDSFacetParameter](IDSfacetparameter) (c)<br />
Restrictions |[loin:restrictionFormulation](Constrainttextformulatedforfacetparameters) (dp) **exactly** 1<br />[loin:hasRestrictionType](hasrestrictiontype) (op) **exactly** 1<br />
In range of |[loin:hasValue](hasvalue) (op)<br />

## Object Properties
[belongs to information content](#belongstoinformationcontent),
[A property belongs to Property set](#ApropertybelongstoPropertyset),
[has agent](#hasagent),
[has applicability](#hasapplicability),
[has attribute name](#hasattributename),
[has breakdown structure](#hasbreakdownstructure),
[has breakdown structure type](#hasbreakdownstructuretype),
[has document](#hasdocument),
[has documentaton specification](#hasdocumentatonspecification),
[has documentation](#hasdocumentation),
[has entity name](#hasentityname),
[has geometrical information](#hasgeometricalinformation),
[has geometrical information specification](#hasgeometricalinformationspecification),
[has IFC data type](#hasIFCdatatype),
[has identification](#hasidentification),
[has identifier](#hasidentifier),
[has identifier type](#hasidentifiertype),
[has alphanumerical information](#hasalphanumericalinformation),
[has alphanumerical informaton content](#hasalphanumericalinformatoncontent),
[has object](#hasobject),
[has predefined type](#haspredefinedtype),
[has property name](#haspropertyname),
[has provider](#hasprovider),
[has purpose](#haspurpose),
[has information receiver](#hasinformationreceiver),
[has reference source](#hasreferencesource),
[has requirement](#hasrequirement),
[has requirement type](#hasrequirementtype),
[has restriction type](#hasrestrictiontype),
[has value](#hasvalue),
[is related to container description](#isrelatedtocontainerdescription),
[is related to container document](#isrelatedtocontainerdocument),
[is related to container linkset](#isrelatedtocontainerlinkset),
[is related to Loin document](#isrelatedtoLoindocument),
[](belongstoinformationcontent)
### belongs to information content
Property | Value
--- | ---
IRI | `https://w3id.org/loin#belongsToInformationContent`
Description | Specification of document, that relates with a respective person
Domain(s) |[loin:Document](Document) (c)<br />
Range(s) |[loin:InformationContent](Alphanumericalinformationcontent) (c)<br />
[](ApropertybelongstoPropertyset)
### A property belongs to Property set
Property | Value
--- | ---
IRI | `https://w3id.org/loin#belongsToPset`
Description | Specification is used for facet property of IDS data definition.
Domain(s) |[loin:Property](Property) (c)<br />
Range(s) |[loin:PsetName](Propertysetname) (c)<br />
[](hasagent)
### has agent
Property | Value
--- | ---
IRI | `https://w3id.org/loin#hasAgent`
Description | Information of the information delivery actor defined by foaf ontology mit class foaf:Agent
Domain(s) |[loin:Actor](Actor) (c)<br />
[](hasapplicability)
### has applicability
Property | Value
--- | ---
IRI | `https://w3id.org/loin#hasApplicability`
Description | The object property describes the applicability of a facet for the specification according to IDS definition
Domain(s) |[loin:IDSDataDefinition](IDSdatadefinition) (c)<br />
Range(s) |[loin:IDSFacetDefinition](IDSfacetdefinition) (c)<br />
[](hasattributename)
### has attribute name
Property | Value
--- | ---
IRI | `https://w3id.org/loin#hasAttributeName`
Description | The object property relates the attribute name with the facet attribute according to IDS definition
Domain(s) |[loin:Attribute](AttributofIDS) (c)<br />
Range(s) |[loin:AttributeName](Attributename) (c)<br />
[](hasbreakdownstructure)
### has breakdown structure
Property | Value
--- | ---
IRI | `https://w3id.org/loin#hasBreakdownStructure`
Description | The object property relates the identification with a breakdown structure according to BS EN 17412-1 (2020)
Domain(s) |[loin:Identification](Identification) (c)<br />
Range(s) |[loin:BreakdownStructure](Breakdownstructure) (c)<br />
[](hasbreakdownstructuretype)
### has breakdown structure type
Property | Value
--- | ---
IRI | `https://w3id.org/loin#hasBreakdownStructureType`
Description | The object property relates a specific type with the breakdown structure according to BS EN 17412-1 (2020)
Domain(s) |[loin:BreakdownStructure](Breakdownstructure) (c)<br />
Range(s) |[loin:BreakdownStructureType](Breakdownstructuretype) (c)<br />
[](hasdocument)
### has document
Property | Value
--- | ---
IRI | `https://w3id.org/loin#hasDocument`
Description | The object property relates a set of documents with documentation according to BS EN 17412-1 (2020)
Domain(s) |[loin:Documentation](Documentation) (c)<br />
[](hasdocumentatonspecification)
### has documentaton specification
Property | Value
--- | ---
IRI | `https://w3id.org/loin#hasDocumentSpecification`
Description | The object property relates the document specifications with a document according to BS EN 17412-1 (2020)
Domain(s) |[loin:Document](Document) (c)<br />
Range(s) |[loin:DocumentSpecification](Documentspecification) (c)<br />
[](hasdocumentation)
### has documentation
Property | Value
--- | ---
IRI | `https://w3id.org/loin#hasDocumentation`
Description | The object property relates the documentation with a LOIN object according to BS EN 17412-1 (2020)
Domain(s) |[loin:Object](Object) (c)<br />
Range(s) |[loin:Documentation](Documentation) (c)<br />
[](hasentityname)
### has entity name
Property | Value
--- | ---
IRI | `https://w3id.org/loin#hasEntityName`
Description | The object property relates the entity name with the facet entity according to IDS definition
Domain(s) |[loin:Entity](Entity) (c)<br />
Range(s) |[loin:EntityName](Entityname) (c)<br />
[](hasgeometricalinformation)
### has geometrical information
Property | Value
--- | ---
IRI | `https://w3id.org/loin#hasGeometry`
Description | The object property relates the geometrical information with a LOIN object according to BS EN 17412-1 (2020)
Domain(s) |[loin:Object](Object) (c)<br />
Range(s) |[loin:Geometry](Geometricalinformation) (c)<br />
[](hasgeometricalinformationspecification)
### has geometrical information specification
Property | Value
--- | ---
IRI | `https://w3id.org/loin#hasGeometrySpecification`
Description | [""Appearance"",
 ""Detail"",
 ""Dimensionality"",
 ""Location"",
 ""ParametricBehaviour""]
Domain(s) |[loin:Geometry](Geometricalinformation) (c)<br />
Range(s) |[loin:GeometrySpecification](Geometricalinformationspecification) (c)<br />
[](hasIFCdatatype)
### has IFC data type
Property | Value
--- | ---
IRI | `https://w3id.org/loin#hasIFCDataType`
Description | The object property relates the IFC data type with the facet property according to IDS definition
Domain(s) |[loin:Property](Property) (c)<br />
Range(s) |[loin:IFCDataType](IFCdatatype) (c)<br />
[](hasidentification)
### has identification
Property | Value
--- | ---
IRI | `https://w3id.org/loin#hasIdentification`
Description | The object property relates the identification of a breakdown structure with an alphanumerical information according to BS EN 17412-1 (2020)
Domain(s) |[loin:Information](Alphanumericalinformation) (c)<br />
Range(s) |[loin:Identification](Identification) (c)<br />
[](hasidentifier)
### has identifier
Property | Value
--- | ---
IRI | `https://w3id.org/loin#hasIdentifier`
Description | The object property relates a breakdown structure with its identifier according to BS EN 17412-1 (2020)
Domain(s) |[loin:BreakdownStructure](Breakdownstructure) (c)<br />
Range(s) |[loin:Identifier](Identifier) (c)<br />
[](hasidentifiertype)
### has identifier type
Property | Value
--- | ---
IRI | `https://w3id.org/loin#hasIdentifierType`
Description | The object property relates an identifier of breakdown structure with a specific type according to BS EN 17412-1 (2020)
Domain(s) |[loin:Identifier](Identifier) (c)<br />
Range(s) |[loin:IdentifierType](Identifiertype) (c)<br />
[](hasalphanumericalinformation)
### has alphanumerical information
Property | Value
--- | ---
IRI | `https://w3id.org/loin#hasInformation`
Description | The object property relates an alphanumerical information with a LOIN object according to BS EN 17412-1 (2020)
Domain(s) |[loin:Object](Object) (c)<br />
Range(s) |[loin:Information](Alphanumericalinformation) (c)<br />
[](hasalphanumericalinformatoncontent)
### has alphanumerical informaton content
Property | Value
--- | ---
IRI | `https://w3id.org/loin#hasInformationContent`
Description | The object property relates the detailed content with alphanumerical information according to BS EN 17412-1 (2020)
Domain(s) |[loin:Information](Alphanumericalinformation) (c)<br />
Range(s) |[loin:InformationContent](Alphanumericalinformationcontent) (c)<br />
[](hasobject)
### has object
Property | Value
--- | ---
IRI | `https://w3id.org/loin#hasObject`
Description | The object property relates the objects with the information delivery milestone according to BS EN 17412-1 (2020)
Domain(s) |[loin:InformationDeliveryMilestone](Informationdeliverymilestone) (c)<br />
Range(s) |[loin:Object](Object) (c)<br />
[](haspredefinedtype)
### has predefined type
Property | Value
--- | ---
IRI | `https://w3id.org/loin#hasPredefinedType`
Description | The object property relates a predefined type with the facet entity according to IDS definition
Domain(s) |[loin:Entity](Entity) (c)<br />
Range(s) |[loin:PredefinedType](Predefinedtype) (c)<br />
[](haspropertyname)
### has property name
Property | Value
--- | ---
IRI | `https://w3id.org/loin#hasPropertyName`
Description | The object property relates a property name type with the facet property according to IDS definition
Domain(s) |[loin:Property](Property) (c)<br />
Range(s) |[loin:PropertyName](Propertyname) (c)<br />
[](hasprovider)
### has provider
Property | Value
--- | ---
IRI | `https://w3id.org/loin#hasProvider`
Description | The object property relates the information provider with the information delivery milestone according to BS EN 17412-1 (2020)
Domain(s) |[loin:InformationDeliveryMilestone](Informationdeliverymilestone) (c)<br />
Range(s) |[loin:InformationProvider](Informationprovider) (c)<br />
[](haspurpose)
### has purpose
Property | Value
--- | ---
IRI | `https://w3id.org/loin#hasPurpose`
Description | The object property relates the purpose with the information delivery milestone according to BS EN 17412-1 (2020)
Domain(s) |[loin:InformationDeliveryMilestone](Informationdeliverymilestone) (c)<br />
Range(s) |[loin:Purpose](Purpose) (c)<br />
[](hasinformationreceiver)
### has information receiver
Property | Value
--- | ---
IRI | `https://w3id.org/loin#hasReceiver`
Description | The object property relates the information receiver with the information delivery milestone according to BS EN 17412-1 (2020)
Domain(s) |[loin:InformationDeliveryMilestone](Informationdeliverymilestone) (c)<br />
Range(s) |[loin:InformationReceiver](Informationreceiver) (c)<br />
[](hasreferencesource)
### has reference source
Property | Value
--- | ---
IRI | `https://w3id.org/loin#hasReferenceSource`
Domain(s) |([loin:BreakdownStructure](Breakdownstructure) (c) or [loin:OntologyDataDefinition](Ontologydatadefinition) (c))<br />
Range(s) |[xsd:anyURI](http://www.w3.org/2001/XMLSchema#anyURI) (c)<br />[owl:Thing](http://www.w3.org/2002/07/owl#Thing) (c)<br />
[](hasrequirement)
### has requirement
Property | Value
--- | ---
IRI | `https://w3id.org/loin#hasRequirement`
Description | The object property relates the requirements with the IDS data definition
Domain(s) |[loin:IDSDataDefinition](IDSdatadefinition) (c)<br />
Range(s) |[loin:IDSFacetDefinition](IDSfacetdefinition) (c)<br />
[](hasrequirementtype)
### has requirement type
Property | Value
--- | ---
IRI | `https://w3id.org/loin#hasRequirementType`
Description | relates the requirement type with the defined requirements in IDS data definition
Domain(s) |[loin:IDSFacetDefinition](IDSfacetdefinition) (c)<br />
Range(s) |[loin:IDSRequirementType](IDSrequirementtype) (c)<br />
[](hasrestrictiontype)
### has restriction type
Property | Value
--- | ---
IRI | `https://w3id.org/loin#hasRestrictionType`
Description | relates the restriction type with the facet parameter in IDS data definition
Domain(s) |[loin:IDSFacetParameter](IDSfacetparameter) (c)<br />
Range(s) |[loin:IDSRestrictionType](Restrictiontype) (c)<br />
[](hasvalue)
### has value
Property | Value
--- | ---
IRI | `https://w3id.org/loin#hasValue`
Description | relates the value with a facet in IDS data definition
Domain(s) |[loin:Material](Material) (c)<br />[loin:Attribute](AttributofIDS) (c)<br />[loin:Property](Property) (c)<br />
Range(s) |[loin:Value](Value) (c)<br />
[](isrelatedtocontainerdescription)
### is related to container description
Property | Value
--- | ---
IRI | `https://w3id.org/loin#isRelatedToContainerDescription`
Description | The object property is an extension with ICDD. It relates the information delivery milestone defined by BS EN 17412-1(2020) with container description
Domain(s) |[loin:InformationDeliveryMilestone](Informationdeliverymilestone) (c)<br />[loin:Purpose](Purpose) (c)<br />
Range(s) |[Container:ContainerDescription](https://standards.iso.org/iso/21597/-1/ed-1/en/Container#ContainerDescription) (c)<br />
[](isrelatedtocontainerdocument)
### is related to container document
Property | Value
--- | ---
IRI | `https://w3id.org/loin#isRelatedToContainerDocument`
Description | The object property is an extension with ICDD. It relates documents defined by BS EN 17412-1(2020) with container documents
Domain(s) |[loin:Document](Document) (c)<br />
Range(s) |[Container:Document](https://standards.iso.org/iso/21597/-1/ed-1/en/Container#Document) (c)<br />
[](isrelatedtocontainerlinkset)
### is related to container linkset
Property | Value
--- | ---
IRI | `https://w3id.org/loin#isRelatedToContainerLinkset`
Description | The object property is an extension with ICDD. It relates ontological document defined by BS EN 17412-1(2020) with container linkset or data set
Domain(s) |[loin:Document](Document) (c)<br />
Range(s) |[Container:Linkset](https://standards.iso.org/iso/21597/-1/ed-1/en/Container#Linkset) (c)<br />
[](isrelatedtoLoindocument)
### is related to Loin document
Property | Value
--- | ---
IRI | `https://w3id.org/loin#isRelatedToLoinDocument`
Description | The object property relates the alphanumerical information content with document according to BS EN 17412-1(2020)
Domain(s) |[loin:InformationContent](Alphanumericalinformationcontent) (c)<br />
Range(s) |[loin:Document](Document) (c)<br />

## Datatype Properties
[description](#description),
[requested as boolean, specifys if Geometrical information is needed according to BS EN 17412-1 (2020)](#requestedasboolean,specifysifGeometricalinformationisneededaccordingtoBSEN17412-1(2020)),
[Constraint text formulated for facet parameters](#Constrainttextformulatedforfacetparameters),
[value](#value),
[](description)
### description
Property | Value
--- | ---
IRI | `https://w3id.org/loin#description`
Description | Description provide detail and extend of information derived by Information Delivery Specification (IDS)
Domain(s) |([loin:InformationContent](Alphanumericalinformationcontent) (c) or [loin:Purpose](Purpose) (c))<br />
[](requestedasboolean,specifysifGeometricalinformationisneededaccordingtoBSEN17412-1(2020))
### requested as boolean, specifys if Geometrical information is needed according to BS EN 17412-1 (2020)
Property | Value
--- | ---
IRI | `https://w3id.org/loin#requested`
Domain(s) |[loin:GeometrySpecification](Geometricalinformationspecification) (c)<br />[loin:Geometry](Geometricalinformation) (c)<br />[loin:Information](Alphanumericalinformation) (c)<br />
Range(s) |[xsd:boolean](http://www.w3.org/2001/XMLSchema#boolean) (c)<br />
[](Constrainttextformulatedforfacetparameters)
### Constraint text formulated for facet parameters
Property | Value
--- | ---
IRI | `https://w3id.org/loin#restrictionFormulation`
Description | Restriction formulation is for formulating facet parameter value, that is used by IDS definition.
Domain(s) |[loin:IDSFacetParameter](IDSfacetparameter) (c)<br />
Range(s) |[xsd:string](http://www.w3.org/2001/XMLSchema#string) (c)<br />
[](value)
### value
Property | Value
--- | ---
IRI | `https://w3id.org/loin#value`
Description | value for general definition

## Properties
[is related to container party](#isrelatedtocontainerparty),
[is related to linkset identifier](#isrelatedtolinksetidentifier),
[specified by identifier](#specifiedbyidentifier),
[](isrelatedtocontainerparty)
### is related to container party
Property | Value
--- | ---
IRI | `https://w3id.org/loin#isRelatedToContainerParty`
Description | The object property is an extension with ICDD. It relates the actors defined by BS EN 17412-1(2020) with container party
Domain(s) |[loin:Actor](Actor) (c)<br />
Range(s) |[Container:Party](https://standards.iso.org/iso/21597/-1/ed-1/en/Container#Party) (c)<br />
[](isrelatedtolinksetidentifier)
### is related to linkset identifier
Property | Value
--- | ---
IRI | `https://w3id.org/loin#isRelatedToLinksetIdentifier`
Description | The object property is an extension with ICDD. It relates the identifier type defined by BS EN 17412-1(2020) with linkset identifier
Domain(s) |[loin:IdentifierType](Identifiertype) (c)<br />
Range(s) |[Linkset:Identifier](https://standards.iso.org/iso/21597/-1/ed-1/en/Linkset#Identifier) (c)<br />
[](specifiedbyidentifier)
### specified by identifier
Property | Value
--- | ---
IRI | `https://w3id.org/loin#specifiedByIdentifier`
Domain(s) |[loin:InformationContent](Alphanumericalinformationcontent) (c)<br />
Range(s) |[loin:Identifier](Identifier) (c)<br />

## Named Individuals
## Namespaces
* **default (:)**
  * `https://w3id.org/loin#`
* **Container**
  * `https://standards.iso.org/iso/21597/-1/ed-1/en/Container#`
* **Linkset**
  * `https://standards.iso.org/iso/21597/-1/ed-1/en/Linkset#`
* **dc**
  * `http://purl.org/dc/terms/`
* **foaf**
  * `http://xmlns.com/foaf/0.1#`
* **loin**
  * `https://w3id.org/loin#`
* **owl**
  * `http://www.w3.org/2002/07/owl#`
* **prov**
  * `http://www.w3.org/ns/prov#`
* **rdf**
  * `http://www.w3.org/1999/02/22-rdf-syntax-ns#`
* **rdfs**
  * `http://www.w3.org/2000/01/rdf-schema#`
* **sdo**
  * `https://schema.org/`
* **sh**
  * `http://www.w3.org/ns/shacl#`
* **skos**
  * `http://www.w3.org/2004/02/skos/core#`
* **vann**
  * `http://purl.org/vocab/vann/`
* **vs**
  * `http://www.w3.org/2003/06/sw-vocab-status/ns#`
* **xml**
  * `http://www.w3.org/XML/1998/namespace`
* **xsd**
  * `http://www.w3.org/2001/XMLSchema#`

## Legend
* Classes: c
* Object Properties: op
* Functional Properties: fp
* Data Properties: dp
* Annotation Properties: dp
* Properties: p
* Named Individuals: ni",0,0,0,0,construction,"[construction, icdd, ids, information-delivery, ontology, owl, rdf]",23
shchilkin,personal-website,,https://github.com/shchilkin/personal-website,https://api.github.com/repos/personal-website/shchilkin,The first version of my portfolio website. Project created to learn React and JavaScript as well to showcase my skills.,"# Personal Website
[![Build Status](https://travis-ci.org/CrazyRedKitten/personal-website.svg?branch=Stable)](https://travis-ci.org/CrazyRedKitten/personal-website)

Hosting my little web-related projects here

[Available here](https://crazyredkitten.media ""My Personal Website!"")  :blush:

:construction: Currently is under development :construction:
",0,0,0,6,construction,"[avatar-generator, construction, dark-mode, nodejs, personal-site, react]",23
Dilip-Biswas,WebGIS,,https://github.com/Dilip-Biswas/WebGIS,https://api.github.com/repos/WebGIS/Dilip-Biswas,"WebGIS Projects of Ulm City Portal, Germany",,0,0,2,0,construction,"[construction, under]",23
ISAC-SIMO,ISAC-SIMO,ISAC-SIMO,https://github.com/ISAC-SIMO/ISAC-SIMO,https://api.github.com/repos/ISAC-SIMO/ISAC-SIMO,"Build Change - Intelligent Supervision Assistant for Construction - Sistema Inteligente de Monitoreo de Obra. This project is an offshoot of PD3R, runner-up in the CFC 2018 Global Challenge.","# ISAC SIMO

[![License](https://img.shields.io/badge/License-Apache2-blue.svg)](https://www.apache.org/licenses/LICENSE-2.0) [![Slack](https://img.shields.io/badge/Join-Slack-blue)](https://callforcode.org/slack)

Intelligent Supervision Assistant for Construction - Sistema Inteligente de Monitoreo de Obra

ISAC-SIMO is a system to validate that the intervention work done for homeowners in Colombia has been done correctly and safely. It is a Call for Code with The Linux Foundation created by [Build Change](https://buildchange.org/) and supported by a grant from IBM.

> [View documentation](https://www.isac-simo.net/docs/) at isac-simo.net.

## Related GitHub repos

* [ISAC-SIMO-Django-Backend](https://github.com/ISAC-SIMO/ISAC-SIMO-Django-Backend) - Back end for managing the machine learning model pipeline.
* [ISAC-SIMO-React-Native-App](https://github.com/ISAC-SIMO/ISAC-SIMO-React-Native-App) - This is the end-user facing mobile app for the homeowner.


## Contents

1. [Target users](#target-users)
1. [Project detail](#project-detail)
1. [Project roadmap](#project-roadmap)
1. [Authors](#authors)
1. [License](#license)

## Target users
* Pedro the foreman builder in Colombia is able to receive complete well-specified, high-quality jobs safely and is paid [some percentage] more money and more quickly, which shows that it's worthwhile to do again and again. He is able to choose materials, know how far into a project he is, know when he will be paid, and understand the level of homeowner satisfaction so that he can take corrective action.

* Maria the homeowner is notified by FINDETER that her home needs an intervention in a timely manner, is able to receive a clear proposal of the work to be done within two days, to agree to the work, and to provide her input on the work. She is able to monitor the progress of the work [digitally or some other manner], provide feedback during and after the process, and feel confident that a quality job is done quickly and safely [with the help of a mobile app and AI].

* Juan the inspector is working for FINDETER and is able to ensure the quality and safety of the work done in his community is done at a better cost and in a more efficient manner so that more people get back into safe homes more quickly [some percentage]. He is able to receive notifications when work progresses so that he knows when to review digital documents or visit a site for inspection.

* _Everyone has visibility into the work and notified that's done in order to ensure it's done well, safely, and completely._

## Project detail
The technology consists of a mobile application used by all three roles in order to track the progression of an intervention on a home throughout the process to complete work. The application shows the progress of the work, and it can be validated through the analysis of the quality of two building elements, rebar and walls, by guiding the users through a series of checks. In addition to the mobile application, the tool also consists of a web interface that facilitates the management of checks and image processing pipelines implemented in the mobile application. 

### The architecture

The image below shows an overview of the ISAC-SIMO tool:                                                                           
<img src=""Images/overview.png"" width=""400"">

### Mobile application
The mobile application is used to take photos of rebar and wall installations. With these photos, an assessment can be made as to whether they are compliant (GO) or non-compliant (NO GO). This is powered by machine learning models that have been trained with images of acceptable and unacceptable configurations. In addition, some of the checks deploy computational image processing to extract some quantitative information from an image to determine the ""GO"" or ""NO GO"" outcome.

### Checks Implemented
The following checks are planned to be implemented in the rebar and wall categories:
#### Rebar Category
* **Rebar Shapes**: Checks for the shape of transverse rebar elements such as ties and stirrups. An example of a compliant rebar shape is shown below. 
<img src=""Images/rebar_shape_go.png"" width=""100"">

* **Rebar Texture**: Detects the presence or absence of ribs in the rebar, and verifies that the bar does not have any visible corrosion that could affect its quality. An example of a compliant rebar with ribs and without corrosion is shown below.
<img src=""Images/rebar_texture_go.png"" width=""100"">

* **Rebar Cage**: Checks for the correct spacing of transverse rebar elements in columns or beams before concrete is poured. An example of a rebar cage with correct configuration is shown below.
<img src=""Images/rebar_cage_go.png"" width=""100"">

#### Wall Category
* **Brick Alignment / Bond Pattern**: Checks for the bond pattern in walls and a wall's proximity to a running bond or a stack bond as shown below
<img src=""Images/bond_pattern_check_gonogo.png"" width=""300"">

* **Mortar Joint Thickness**: Checks for compliance based on the relative bed joint thickness (i.e. the thickness of the horizontal layer of mortar upon which bricks are laid in a wall) with respect to the average height of bricks. 

### Methodology
#### Machine learning models
For the rebar checks, the machine learning models are trained upon both artificially generated and real world images that have been processed into additional variants into GO and NO GO buckets. The models are trained to check the shape of an individual rebar, its texture, and the configuration of the transverse rebar elements.

#### Computational Image Processing
For the wall checks, the images are classified as ""GO"" or ""NO GO"" based on the quantitative information extracted from the image. This is achieved by first processing the input image to extract the contours and centerpoint of each brick. The centerpoints are then used for further analysis of bond pattern and relative mortar joint thicknesses to determine a ""GO"" or ""NO GO"" wall.          
<img src=""Images/bond_pattern_check.png"" width=""600"">

#### Basic approach to classification

**Rebar Checks:**
- *Gather images*
   1. Generate BIM model images
   1. Gather real world images
   1. Generate variations of the images

- *Generate basic GO / NO GO*
   1. Put them into GO and NO GO buckets to classify
   1. Train the model against the two classifiers
   1. Test images against the model
   1. Retrain to improve outcomes

**Wall Checks:**

- *Gather images*
   1. Generate BIM model images
   1. Gather real images
   1. Generate variations of the images through image augmentation

- *Perform brick segmentation*

   - **Method 1** :
      1. Process image to get all contours
      1. Filter contours by area to extract just the contours of bricks
      1. *This method currently only works for the BIM generated images*

   - **Method 2**:
      1. Prepare corresponding binary mask images with white pixels corresponding to the brick regions, 
         and black pixels to the mortar between the bricks and the background
      1. Train a CNN based U-net network with the input-target image pairs
   
- *Generate GO / NO GO*
   1.  Apply centerpoint detection to the processed images
   1.  Perform further analysis of bond pattern and mortar thickness to predict the outcome

### Pipeline configuration model
Complementing the mobile application is a tool that provides the API endpoint for the images to be uploaded. This is a way for administrators to configure the pipeline and configure its thresholds.

## Project roadmap

View the [project board to track progress against the 1Q 2020 milestones](https://github.com/ISAC-SIMO/ISAC-SIMO/projects/2).

## Contributing

Please read [our contributing guidelines](CONTRIBUTING.md) for details of how you can get involved and please abide by the [Code of Conduct](CONTRIBUTING.md#code-of-conduct).

## Contributors
<a href=""https://github.com/ISAC-SIMO/ISAC-SIMO/graphs/contributors"">
  <img src=""https://contributors-img.web.app/image?repo=ISAC-SIMO/ISAC-SIMO"" />
</a>

## License

This project is licensed under the Apache Software License, Version 2, unless otherwise stated.  Separate third party code objects invoked within this project are licensed by their respective providers pursuant to their own separate licenses. Contributions are subject to the [Developer Certificate of Origin, Version 1.1 (DCO)](https://developercertificate.org/) and the [Apache Software License, Version 2](http://www.apache.org/licenses/LICENSE-2.0.txt).

",28,28,9,16,construction,"[build-change, call-for-code, construction, hacktoberfest, isac-simo, visual-recognition]",23
Erfanh1995,Kharita_inputconverter,,https://github.com/Erfanh1995/Kharita_inputconverter,https://api.github.com/repos/Kharita_inputconverter/Erfanh1995,"Convert ""Standard"" GPS trajectory files into Kharita* algorithm inputs","# Kharita_inputconverter
Convert ""Standard"" GPS trajectory files into Kharita* algorithm inputs.

It was assumed that the trajectory files' names end with ""_{ID}""

Link to Kharita source code: <a href=""https://github.com/vipyoung/kharita"">Kharita</a>
",1,1,1,0,construction,"[construction, map]",23
ubeevn,Industry-Factory-and-Engineering,ubeevn,https://github.com/ubeevn/Industry-Factory-and-Engineering,https://api.github.com/repos/Industry-Factory-and-Engineering/ubeevn,,,0,0,2,0,construction,"[bootstrap3, company, construction, html, industry, templates-point]",23
RUB-Informatik-im-Bauwesen,icdd2ams,RUB-Informatik-im-Bauwesen,https://github.com/RUB-Informatik-im-Bauwesen/icdd2ams,https://api.github.com/repos/icdd2ams/RUB-Informatik-im-Bauwesen,"This repository contains ontologies, data, queries, and source code presented in ""BIM-based organization of inspection data using Semantic Web technology for infrastructure asset management"" published at EUROSTRUCT 2021 conference.","# Asset Condition Integration from information containers into relational Asset Management databases (icdd2ams)

This repository contains ontologies, data, queries, and source code presented in ""BIM-based organization of inspection data using Semantic Web technology for infrastructure asset management"" published at EUROSTRUCT 2021 conference. It includes a minimal ABox ontology for integrating  asset conditions located using [Building Topology Ontology (BOT)](https://github.com/w3c-lbd-cg/bot) within an [Information Container for linked document delivery (ICDD)](https://www.iso.org/standard/74389.html) into SQL-based asset management systems. See the following files:

### Code
- [`src/main/java/org/iib/icdd2ams/ToSQL.java`](src/main/java/org/iib/icdd2ams/ToSQL.java): inferring the sample data set with the given rule set to the resulting inferred data set 
- [`src/main/java/org/iib/icdd2ams/ToSQLTemplate.java`](src/main/java/org/iib/icdd2ams/ToSQLTemplate.java): generating an SQL insert query form a SPARQL Template (STTL) 
 
### Resources [input]
- [`src/main/resources/ams/input/amsData.ttl`](src/main/resources/ams/input/amsData.ttl): sample data set for inferring SQL Data 
- [`src/main/resources/ams/input/insertData.ttl`](src/main/resources/ams/input/insertData.ttl): sample data set for the generation of SQL INSERT query using STTL 
- [`src/main/resources/ams/input/amsSqlData.ttl`](src/main/resources/ams/input/amsSqlData.ttl): sample data set extracted from SQL database 
- [`src/main/resources/ams/input/sql/20210610_AMS_database_draft.sql`](src/main/resources/ams/input/sql/20210610_AMS_database_draft.sql): SQL dump of the database used for the extraction of structural information 

### Resources [mappings]
- [`src/main/resources/ams/mappings/query.rqg`](src/main/resources/ams/mappings/query.rqg): sample SPARQL template for generating SQL INSERT query using STTL
- [`src/main/resources/ams/mappings/amsRules.ttl`](src/main/resources/ams/mappings/amsRules.ttl): general mapping rules for inferring `bot:Element` and `eurotl:InspectionActivity` into SQL Schema 
- [`src/main/resources/ams/mappings/icdd2ams.ttl`](src/main/resources/ams/mappings/icdd2ams.ttl) : Ontology for adding relations between `bot`, `eurotl` and `asbing`, see [Documentation](https://icdd.vm.rub.de/ontology/icdd2ams/)

## Third party licenses and dependencies
- this approach makes use of SPARQL-Generate (sparql-generate.jar) extension of Apache Jena for STTL generation provided on https://github.com/sparql-generate/sparql-generate under Apache License, Version 2.0. 
- this approach makes use of the R2RML Implementation (r2rml.jar) provided on https://github.com/chrdebru/r2rml-distributions under MIT license. 
- implementation is based on the [Apache Jena Framework 3.4.0 (minimum)](https://mvnrepository.com/artifact/org.apache.jena/jena-arq/3.4.0) dependency

## Acknowledgments
The authors gratefully acknowledge CEDR (Conference of European Directors of Roads) and FFG (Austrian Research Promotion Agency) for funding this research; We would like to thank the consortium of research projects [AMSFree](https://www.inf.bi.ruhr-uni-bochum.de/iib/forschung/amsfree.html.en) and [BIM4AMS](https://www.inf.bi.ruhr-uni-bochum.de/iib/forschung/bim4ams.html.en) for their collaboration in the research of asset management for bridges.

## Contact information
Liu Liu (liu.liu-m6r@rub.de / [ResearchGate profile](https://www.researchgate.net/profile/Liu-Liu-84)) and Philipp Hagedorn (philipp.hagedorn-n6v@rub.de / [GitHub profile](https://github.com/philhag) / [ResearchGate profile](https://www.researchgate.net/profile/Philipp-Hagedorn))  
Further information on https://www.inf.bi.ruhr-uni-bochum.de/iib/index.html.en
",0,0,1,0,construction,"[aec, assetmanagement, construction, ontology, owl, rdf, sparql]",23
OpenDataBIM,VisualBIM,,https://github.com/OpenDataBIM/VisualBIM,https://api.github.com/repos/VisualBIM/OpenDataBIM,,"# Parametric visualization of your project data for Revit and IFC files
Any medium-sized construction project is a source of big data with hundreds of thousands of different elements, which in turn have tens or hundreds of different parameters or properties. Up from now to properly understand this data you can use the BIMJSON format to visualize all the information on all elements and its properties as a multidimensional point cloud.

Open App:  http://visualbim.bimopensource.com/

### Screenshots
![enter image description here](https://opendatabim.io/wp-content/uploads/2021/12/ezgif.com-gif-maker-_2_.gif)

#  Seeing changes visually

In the first version of the project within the visualization on the left is the sum of volumes for the foundation Bearing Footing – 700×230 – 11 m³. In the second version of the project, the dimensions of the foundations were changed, which affected the total volume – 147 m³ of the position and is displayed in the visualization by an enlarged group symbol. 


![enter image description here](https://opendatabim.io/wp-content/uploads/2021/12/Unbenannt-2.png)
## Find data outliers and insights
Such a visual matrix of projects can be compared to a snapshot of the lung or unique DNA of a particular project or project area.

Having a large base of such images (or DNA), we can by similarity (approximation), as machine algorithms do it from lung images or images of people for lidars, to determine cost or time characteristics for similar parts or whole new projects that will consist of similar pieces of old projects.

![enter image description here](https://opendatabim.io/wp-content/uploads/2021/10/Ein-bisschen-Text-hinzufugen-3.png)


## Built With

-   [Dash](https://dash.plot.ly/)  - Main server and interactive components
-   [Plotly Python](https://plot.ly/python/)  - Used to create the interactive plots


## Requirements

We suggest you to create a separate virtual environment running Python 3 for this app, and install all of the required dependencies there. Run in Terminal/Command Prompt:

```
git clone https://github.com/OpenDataBIM/VisualBIM.git
cd VisualBIM
python3 -m virtualenv venv

```

In UNIX system:

```
source venv/bin/activate

```

In Windows:

```
venv\Scripts\activate

```

To install all of the required packages to this environment, simply run:

```
pip install -r requirements.txt

```

and all of the required  `pip`  packages, will be installed, and the app will be able to run.

## [](https://github.com/plotly/dash-sample-apps/tree/main/apps/dash-manufacture-spc-dashboard#how-to-use-this-app)How to use this app

Run this app locally by:

```
python index.py

```

Open  [http://0.0.0.0:3000/](http://0.0.0.0:3000/)  in your browser, you will see a live-updating dashboard.

# OpenDataBIM
https://opendatabim.io/


BIMJSON is a format for transferring information to another party without the need for external guarantors or trusted ‘third parties’, enabling data to be exchanged within 3D-7D systems and between construction parties directly, bypassing any third-party companies controlling data storage and transfer. BIMJSON data – allows you to automate work with project data. In order to get automatic data from thousands of projects automatically, you need to build the pipeline once on the open tools.

OpenDataBIM - You Way to Free Tools in Construction.

### Go to  BIM 2.0  go to  Open Data
![enter image description here](https://opendatabim.io/wp-content/uploads/2021/10/BIM20.jpg)
",12,12,1,0,construction,"[bigdata, construction, dash, data-visualization, ifc, plotly, plotly-dash, revit, visualization, visualization-tools]",23
AkashPushkar,material_recognition,,https://github.com/AkashPushkar/material_recognition,https://api.github.com/repos/material_recognition/AkashPushkar,This project is for construction material recognition from the images collected at a construction site.  ,"## Material recognition project

This is project for classifying construction materials based on the data collected from a construction site. The algorithm can be divided into follwing steps:
 * Segmenting a given image into patches
 * Texture features are extracted from these patches
 * Based on the feature extracted, classification is performed

The pictorial representation representation of the algorithm is shown in the figure below:

![flowchart](./docs/methodology.png)

## Result

Below is example result produced by the model trained 
(left image= input, right image= output)

![result](./docs/result.png)
",5,5,3,0,construction-site,"[construction-site, material-recognition]",23
ubeevn,Construction-Industrial,ubeevn,https://github.com/ubeevn/Construction-Industrial,https://api.github.com/repos/Construction-Industrial/ubeevn,,,0,0,2,0,construction,"[bootstrap3, construction, html]",23
OpenDataBIM,Checking-the-quality-of-Revit-and-IFC-projects,,https://github.com/OpenDataBIM/Checking-the-quality-of-Revit-and-IFC-projects,https://api.github.com/repos/Checking-the-quality-of-Revit-and-IFC-projects/OpenDataBIM,Checking the quality of Revit and IFC projects,"# Checking-the-quality-of-Revit-and-IFC-projects

![](https://opendatabim.io/wp-content/uploads/2023/02/projects-data-2.gif)

> In the construction industry, having accurate and high-quality building information models (BIM) is essential to the successful completion of a project. 

<br></br>
### Executable application with interface:
### https://opendatabim.io/index.php/quality-of-revit-and-ifc-projects/

![](https://opendatabim.io/wp-content/uploads/2023/02/UicheckUP.png)


## Solution logic
With the help of a table describing the parameters in the category to be checked and with the help of Pipelines from OpenDataBIM – we check the projects in Revit and IFC formats. We automatically generate a PDF document, which contains the basic information about the parameters and categories to be checked.

![](https://opendatabim.io/wp-content/uploads/2023/02/Solution-Check-Data-Revit-IFC.gif)

## Prerequisites

Before you dive into running the application, you need to prepare all the components for the start-up:
1.  A recent version of Python: You can download the latest version of Python from the official website (https://www.python.org/)
2. You need to get the data from the project as a CSV or XLSX Excel table. To export Revit or IFC format into tables, you can use any solution you work with:

> 👨‍💻 **Manual extraction of tables:**
Revit & Dynamo, Revit & Schedule, Revit & ODBC, pyRevit, Forge, SimpleBIM, Desite, IfcOpenShell, IFCjs and others
> ⚙️ **Automatic and batch table retrieval: using noBIM Lite converters** (Revit 2018, Revit 2019, Revit 2020, Revit 2021, IFC2X3, IFC4X1, IFC4X, IFC4 – IFC4.3), noBIM Full converters (Revit 2015, Revit 2016, Revit 2017, Revit 2018, Revit 2019, Revit 2020, Revit 2021, Revit 2022, Revit 2023, IFC2X3, IFC4X1, IFC4X, IFC4 – IFC4.3)

![](https://opendatabim.io/wp-content/uploads/2023/02/github.com-OpenDataBIM-5.gif)

## Excel with checking rules
Any project elements in Revit and IFC format belong to some group (OST_ in Revit, IfcEntity in IFC) or type group (TypeName in Revit, ObjectType in IFC). Also, each element has its own unique set of properties and parmeters (which are columns in the overall project table when the noBIM concept is applied).

Using the check table, we specify in the first column of the table, for the elements to be checked and tested, first the category (OST_ in Revit, IfcEntity in IFC) or type (TypeNamein Revit, ObjectType in IFC) and in the second column we specify the parameters that we want to check for this group of elements.

![](https://opendatabim.io/wp-content/uploads/2023/02/Excel-Check-Revit-IFC-Project.gif)

For each parameter from the check table in the project will be checked:
- presence of the parameter for the group of elements
- percentage of the content of the values in the parameter
- the unique values of this parameter
Once you have the prerequisites installed, you can obtain the source code for the application. You can do this by either cloning the repository using Git or by downloading a zip file of the code from Github.

## Clone or Download



    git clone  https://github.com/OpenDataBIM/Checking-the-quality-of-Revit-and-IFC-projects.git

Install required libraries: The libraries required by your code are specified in the requirements.txt file. To install these libraries, run the following command:




    pip install -r requirements.txt

In the code ODB_Pipeline_Batch_reporting_Revit_IFC_projects.py change the parameters – the path to the folders where your projects are located: pathfold, path, namemap, path_conv




    ########################   Parameters    ########################
    # Folder where the converter are located
    pathfold = r'C:\ODB_Check\ODBCheck\\'
    
    # Folder where the conversion files are located
    path = r'C:\ODB_Check\Sample\\'
    
    # Path to the Excel file with test parameters
    namemap = pathfold + '\ODB Table_of_Parameters_Revit _IFC_Check.xlsx'
    
    # path to noBIM converter (for streaming file conversion)
    path_conv = r'C:\ODB_Check\noBIM_Lite_v1_23-v2jfja\\'
    ################################################################


## Run the code


Now that you have installed Python and the required libraries, you can run your Python code. Simply navigate to the folder where your code is located and run the following command:


    python ODB_Pipeline_Batch_reporting_Revit_IFC_projects.py
    
With these steps, you should be able to run Python code on a new computer without any issues.

![](https://opendatabim.io/wp-content/uploads/2023/02/Excel-Check-Revit-IFC-Project.gif)

## Troubleshooting

 If you encounter any problems, make sure to check the requirements.txt file and ensure that all the required libraries are installed in your virtual environment.

## OpenDataBIM

 At OpenDataBIM, we strive to provide the best possible support to our users. We understand that errors and issues can arise, and we’re committed to finding solutions to these problems as quickly and efficiently as possible.

To that end, we offer consultations with our team of experts to help users address any issues they’re facing. Our team has extensive experience working with BIM software and data, and we’re always happy to share our knowledge and expertise with our users.

Contact Us: info@opendatabim.io
",8,8,1,0,construction,"[3d, bau, check, construction, ifc, jupyter-notebook, models, openbim, parameters, projects, python, python3, revit]",23
