,repo,user,organization,url (HTML),url (API),description,readme,stargazer count,watcher count,subscriber count,open issue count,topic (search),topics,NAICS Code
0,awesome-agriculture,brycejohnston,N/A,N/A,https://api.github.com/repos/brycejohnston/awesome-agriculture,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1AC:0208:2DD717C:5DE2FE6:65223FBD.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
1,farmOS,farmOS,N/A,N/A,https://api.github.com/repos/farmOS/farmOS,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C150:7A65:2826F0:53AD54:65223FBE.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
2,tania,usetania,N/A,N/A,https://api.github.com/repos/usetania/tania,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C13A:458F:2C2D06D:5A978FD:65223FBE.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
3,farmvibes-ai,microsoft,N/A,N/A,https://api.github.com/repos/microsoft/farmvibes-ai,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C119:2EE5:284E6AC:52EBB56:65223FBF.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
4,Farm-Data-Relay-System,timmbogner,N/A,N/A,https://api.github.com/repos/timmbogner/Farm-Data-Relay-System,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C116:53F5:27F3B04:5225404:65223FC0.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
5,ekylibre,ekylibre,N/A,N/A,https://api.github.com/repos/ekylibre/ekylibre,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C147:6B96:284F079:52F335F:65223FC0.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
6,Fields2Cover,Fields2Cover,N/A,N/A,https://api.github.com/repos/Fields2Cover/Fields2Cover,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C105:4771:2976C3:562B18:65223FC1.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
7,pyafipws,reingart,N/A,N/A,https://api.github.com/repos/reingart/pyafipws,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1DE:3B38:2CC2BF:5CB572:65223FC1.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
8,OpenWeedLocator,geezacoleman,N/A,N/A,https://api.github.com/repos/geezacoleman/OpenWeedLocator,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C113:7890:29042A:5564AC:65223FC2.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
9,coffee-quality-database,jldbc,N/A,N/A,https://api.github.com/repos/jldbc/coffee-quality-database,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C15B:1ECC:29B36F:56BF04:65223FC3.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
10,AgroChain,Kerala-Blockchain-Academy,N/A,N/A,https://api.github.com/repos/Kerala-Blockchain-Academy/AgroChain,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C165:38A4:2BA91EB:59979DE:65223FC3.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
11,foodon,FoodOntology,N/A,N/A,https://api.github.com/repos/FoodOntology/foodon,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1F0:9938:29A4ED6:557ACE0:65223FC4.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
12,pytorch-psetae,VSainteuf,N/A,N/A,https://api.github.com/repos/VSainteuf/pytorch-psetae,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C19F:2EE5:284EC46:52EC6F7:65223FC4.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
13,pycrop-yield-prediction,gabrieltseng,N/A,N/A,https://api.github.com/repos/gabrieltseng/pycrop-yield-prediction,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C148:1ECC:29B607:56C436:65223FC5.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
14,dataset,cwfid,N/A,N/A,https://api.github.com/repos/cwfid/dataset,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C121:1D49:2C28CDC:5A84D1E:65223FC6.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
15,EuroCrops,maja601,N/A,N/A,https://api.github.com/repos/maja601/EuroCrops,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C18D:7D6D:292FF2:55C667:65223FC6.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
16,AgML,Project-AgML,N/A,N/A,https://api.github.com/repos/Project-AgML/AgML,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C15D:17C0:285DB0:5424CC:65223FC7.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
17,utae-paps,VSainteuf,N/A,N/A,https://api.github.com/repos/VSainteuf/utae-paps,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1B8:1560:28D0683:53DBFD4:65223FC8.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
18,deep_learning_for_biologists_with_keras,totti0223,N/A,N/A,https://api.github.com/repos/totti0223/deep_learning_for_biologists_with_keras,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C117:406C:29D83D:56FF12:65223FC8.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
19,LiteFarm,LiteFarmOrg,N/A,N/A,https://api.github.com/repos/LiteFarmOrg/LiteFarm,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1D1:1E37:28F2B0:552ED5:65223FC9.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
20,Awesome-Precision-Agriculture,px39n,N/A,N/A,https://api.github.com/repos/px39n/Awesome-Precision-Agriculture,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C184:1560:28D08C4:53DC49B:65223FC9.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
21,harvest_helper,damwhit,N/A,N/A,https://api.github.com/repos/damwhit/harvest_helper,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1C7:4C24:2B63AC3:5904ADE:65223FCA.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
22,Farming-App,hetsuthar028,N/A,N/A,https://api.github.com/repos/hetsuthar028/Farming-App,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C144:6829:2E39E99:5EAA5F2:65223FCB.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
23,lawn_tractor,ros-agriculture,N/A,N/A,https://api.github.com/repos/ros-agriculture/lawn_tractor,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1D7:4C24:2B63C2B:5904DE5:65223FCB.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
24,Autonomous-Farm-Robot,Dhruv2012,N/A,N/A,https://api.github.com/repos/Dhruv2012/Autonomous-Farm-Robot,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C16D:6EA3:2853AB:53FBDF:65223FCC.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
25,Eduponics-Mini,STEMinds,N/A,N/A,https://api.github.com/repos/STEMinds/Eduponics-Mini,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C17E:1D49:2C296FA:5A861CE:65223FCC.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
26,awesome-agtech,MarceloAlves,N/A,N/A,https://api.github.com/repos/MarceloAlves/awesome-agtech,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C178:2EE5:284F5D7:52EDAC9:65223FCD.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
27,ROSConDemo,o3de,N/A,N/A,https://api.github.com/repos/o3de/ROSConDemo,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C143:9938:29A59B5:557C341:65223FCE.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
28,YOLOV2-Tensorflow-2.0,jmpap,N/A,N/A,https://api.github.com/repos/jmpap/YOLOV2-Tensorflow-2.0,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C115:406C:29DDC4:570AB2:65223FCE.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
29,OpenIIoT.Core,OpenIIoT,OpenIIoT,https://github.com/OpenIIoT/OpenIIoT.Core,https://api.github.com/repos/OpenIIoT/OpenIIoT.Core,A cross-platform application platform for the Industrial Internet of Things.,"<h1>OpenIIoT</h1>

[![Build status](https://ci.appveyor.com/api/projects/status/fe97n9g7kc66k6wp?svg=true)](https://ci.appveyor.com/project/OpenIIoTAdmin/openiiot-core)
[![Build Status](https://travis-ci.org/OpenIIoT/OpenIIoT.Core.svg?branch=master)](https://travis-ci.org/OpenIIoT/OpenIIoT.Core)
[![codecov](https://codecov.io/gh/OpenIIoT/OpenIIoT.Core/branch/master/graph/badge.svg)](https://codecov.io/gh/OpenIIoT/OpenIIoT.Core)
[![License: AGPL v3](https://img.shields.io/badge/License-AGPL%20v3-blue.svg)](https://github.com/OpenIIoT/OpenIIoT.Core/blob/master/LICENSE)

## About

OpenIIoT is a cross-platform (via Mono) application platform for the (Industrial) Internet of Things written in C#.  The code in this repository is a work in progress and is presently on hiatus while a web framework is evaluated and selected for front-end development.

Feel free to email <info@openiiot.org> with any questions.

If you'd like to demo the front end, skip to the [demo](#demo) section.

## Concept

The concept is straightforward; the application gathers data from industrial control system assets and moves it somewhere else.  Where the application can get data from, as well as where it can send the data to, is determined by the available plugins.  

The following concept diagram outlines the functionality from a high level:

![concept overview](doc/img/concept.png) 

Plugins come in the form of .NET binaries, and capabilities are extended by the implementation of one or more interfaces (documentation TBD).  The interfaces implemented by plugins determine the functionality, but generally plugins will fall into either the category of ""connector"", which allows the application to retrieve data from various places, or ""endpoint"", which allows the application to send data.

Also pluggable are repository interfaces, however this is not shown in the concept diagram.  Repository plugins are essentially database abstractions.

In addition to Endpoints, the application provides a number of core services, primarily a robust set of RESTful APIs, a real-time data streaming engine (SignalR), and a static file server.  This functionality allows for user-defined web applications to be hosted by the application, and in turn these application consume the available APIs to display and manipulate data.  Future functionality includes MQTT and probably an OPC-UA server.

## Architecture

Up-to-date documentation for the software architecture isn't available, however the present state pretty closely reflects the original concept designed some time around 2010:

![architecture](doc/img/architecture.png)

Notable changes are the addition of SignalR and the static web server, the abandonment of an ODBC interface, and the repositioning of the data model as the central element of the application.

The application wasn't imagined to be pluggable at the time this was made, so there's a bunch of architectural details around that as well.

## Demo

A recent build of the application has been deployed to an AWS EC2 instance for demo purposes.  The demo can be accessed at [http://demo.openiiot.org](http://demo.openiiot.org); use 'admin' for both the username and password, without quotes.

Note that there's nothing else on this server but the demo application, and the application hasn't been secured.  If you find that something isn't working properly or has perhaps been defaced, please create an [issue](https://github.com/OpenIIoT/OpenIIoT.Core/issues) or email <info@openiiot.org>.

## Screenshots

### Dashboard

The application takes a hands-off approach to performance; due to the range of hardware upon which it will run (primarily single-board computers like the Raspberry Pi) and the variety of things that can be done with it, whoever is responsible for configuration needs to keep an eye on the performance characteristics and offload functionality if needed.

The dashboard provides administrators with a quick view of the present CPU, memory and hard drive usage of the host machine.  Additional metrics such as swap (*nix) and paging and Ethernet activity will probably be added later.

![dashboard](doc/img/dashboard.png)

Also available on the dashboard are real-time application logs.  These are presently full of API requests because the application is running with debug logging enabled.

### Sine Wave

The demo contains a few different examples of the types of data visualization that can be achieved; the most comprehensive of which is the Sine Wave graph.

![sine wave](doc/img/sine.png)

This screen demonstrates the application streaming a real-time data item from the application, in this case an array, and displaying the data in a browser.

The current update rate at the back end is 50 milliseconds, and as can be seen in the browser the unbroken sine wave depicted in the graph illustrates that neither the back end nor the real-time data pipe drops frames (on most systems, under most conditions).

### Database

The back end model is completely agnostic about the data it contains, and to illustrate this the Database display was created:

![database display](doc/img/database.png)

This information is fetched from a SQL database (AWS RDS), piped through the application, and sent to the browser as a simple JSON object.

This screen, like most, uses a SignalR connection to display data in real-time, although the database is presently static so no data changes.  If you see data updating on this screen I have since scheduled a task to change it periodically.

### API

The various APIs exposed by the application are fully documented using [Swashbuckle](https://github.com/domaindrivendev/Swashbuckle) annotations in the code.  This allows for use with [Swagger UI](https://swagger.io/swagger-ui/), which has been customized to better match the look and feel of the front end:

![api](doc/img/api.png)

This interface can be accessed via the 'API' menu, or directly at [http://demo.openiiot.org/help](http://demo.openiiot.org/help).

Note that these APIs are very much a work in progress, and presently the only two endpoints which are in a presentable state are the two which are expanded in the screenshot, Security and Packaging.

## Documentation

Code documentation is generated with [Sandcastle Help File Builder](https://github.com/EWSoftware/SHFB) and is updated somewhat regularly at [http://openiiot.org](http://openiiot.org).
",44,44,10,6,agriculture,"[agriculture, construction, cross-platform, energy, iiot, industrial, industrial-automation, industry, industry-4, iot, logistics, manufacturing, mining, platform, transportation, warehousing]",00000
30,agro,AgriculturalSemantics,N/A,N/A,https://api.github.com/repos/AgriculturalSemantics/agro,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C11D:336C:2CED8D2:5C19EDA:65223FCF.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
31,KisanSeva,UtkarshA135,N/A,N/A,https://api.github.com/repos/UtkarshA135/KisanSeva,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1CF:6B96:28502D1:52F590E:65223FCF.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
32,agrobot,nesl,N/A,N/A,https://api.github.com/repos/nesl/agrobot,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1EC:17C0:2866DE:5437C9:65223FD0.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
33,AgriTech,haritha1313,N/A,N/A,https://api.github.com/repos/haritha1313/AgriTech,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C106:5A86:2B93532:5963DC7:65223FD1.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
34,plantFEM,kazulagi,N/A,N/A,https://api.github.com/repos/kazulagi/plantFEM,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C154:38A4:2BAA7D2:599A6B8:65223FD1.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
35,fields2cover_ros,Fields2Cover,N/A,N/A,https://api.github.com/repos/Fields2Cover/fields2cover_ros,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C141:2E63:28FD66:5555E6:65223FD2.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
36,AgriculturalApp,sukhbir-singh,N/A,N/A,https://api.github.com/repos/sukhbir-singh/AgriculturalApp,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1E8:3B38:2CD364:5CD7F7:65223FD2.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
37,rural-facilities-pmgsy,pratapvardhan,N/A,N/A,https://api.github.com/repos/pratapvardhan/rural-facilities-pmgsy,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C155:47EA:2697818:4F463B9:65223FD3.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
38,openminder,autogrow,N/A,N/A,https://api.github.com/repos/autogrow/openminder,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C137:2E63:28FEF2:555931:65223FD4.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
39,varimi,BitMari,N/A,N/A,https://api.github.com/repos/BitMari/varimi,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C186:4771:2987FF:564EE0:65223FD4.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
40,farmOS-map,farmOS,N/A,N/A,https://api.github.com/repos/farmOS/farmOS-map,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1E8:3B38:2CD595:5CDC7C:65223FD5.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
41,cropandweed-dataset,cropandweed,N/A,N/A,https://api.github.com/repos/cropandweed/cropandweed-dataset,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C167:11F8:2B86A9:5A63BE:65223FD6.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
42,togo-crop-mask,nasaharvest,N/A,N/A,https://api.github.com/repos/nasaharvest/togo-crop-mask,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C15D:17C0:286AEC:544075:65223FD6.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
43,awesome_crop_models,EDSEL-skoltech,N/A,N/A,https://api.github.com/repos/EDSEL-skoltech/awesome_crop_models,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C16C:1ECC:29C627:56E5D4:65223FD7.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
44,penmon,sherzodr,N/A,N/A,https://api.github.com/repos/sherzodr/penmon,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1CA:17C0:286BC6:54421A:65223FD7.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
45,Agriculture,cran-task-views,N/A,N/A,https://api.github.com/repos/cran-task-views/Agriculture,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C12E:47EE:2B7D28C:593752D:65223FD8.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
46,cultionet,jgrss,N/A,N/A,https://api.github.com/repos/jgrss/cultionet,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1CB:2772:28BD94D:53CE5D4:65223FD9.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
47,Weather-Prediction,Rajat-dey,N/A,N/A,https://api.github.com/repos/Rajat-dey/Weather-Prediction,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1D1:1E37:29028A:554FE0:65223FD9.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
48,Decision_Analysis_Course,CWWhitney,N/A,N/A,https://api.github.com/repos/CWWhitney/Decision_Analysis_Course,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C19F:2EE5:28503DF:52EF7E0:65223FDA.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
49,vriksha,ambakick,N/A,N/A,https://api.github.com/repos/ambakick/vriksha,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1D3:8AB4:298A7D8:554CAD3:65223FDB.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
50,AgroPi,krogk,N/A,N/A,https://api.github.com/repos/krogk/AgroPi,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C188:2EE5:2850518:52EFA73:65223FDB.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
51,Agricultural-SandboxNL,ManuelHuber-Github,N/A,N/A,https://api.github.com/repos/ManuelHuber-Github/Agricultural-SandboxNL,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1FA:2EE5:28505AD:52EFBB2:65223FDC.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
52,Farmers-Portal,pandeydivesh15,N/A,N/A,https://api.github.com/repos/pandeydivesh15/Farmers-Portal,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C116:53F5:27F59CB:52293C9:65223FDC.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
53,Horta-Inteligente,enzoven,N/A,N/A,https://api.github.com/repos/enzoven/Horta-Inteligente,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1F7:8AB4:298AA76:554D050:65223FDD.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
54,WAPORWP,wateraccounting,N/A,N/A,https://api.github.com/repos/wateraccounting/WAPORWP,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1DB:5A86:2B9423E:59658C9:65223FDE.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
55,HydroMST,montimaj,N/A,N/A,https://api.github.com/repos/montimaj/HydroMST,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1AF:643D:2A0FED8:56439B9:65223FDE.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
56,PySawit,cbsteh,N/A,N/A,https://api.github.com/repos/cbsteh/PySawit,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1F4:47EA:269819A:4F47798:65223FDF.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
57,crop-maml,nasaharvest,N/A,N/A,https://api.github.com/repos/nasaharvest/crop-maml,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1C7:4C24:2B64EFA:59074F7:65223FE0.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
58,kenya-crop-mask,nasaharvest,N/A,N/A,https://api.github.com/repos/nasaharvest/kenya-crop-mask,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1C2:643D:2A100B4:5643D8A:65223FE0.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
59,Space2Ground,Agri-Hub,N/A,N/A,https://api.github.com/repos/Agri-Hub/Space2Ground,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C171:3493:270BA72:506093E:65223FE1.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
60,agroclimatology,brycejohnston,N/A,N/A,https://api.github.com/repos/brycejohnston/agroclimatology,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C152:0208:2DD9EAA:5DE8D1B:65223FE1.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
61,localorbit,LocalOrbit,N/A,N/A,https://api.github.com/repos/LocalOrbit/localorbit,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C11C:24F2:299053F:55531D3:65223FE2.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
62,crops-parser,rugk,N/A,N/A,https://api.github.com/repos/rugk/crops-parser,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C116:53F5:27F5F67:5229F5B:65223FE3.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
63,farm-calculators,brycejohnston,N/A,N/A,https://api.github.com/repos/brycejohnston/farm-calculators,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1B0:7E09:25E4B35:4E16AD3:65223FE3.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
64,bety,PecanProject,N/A,N/A,https://api.github.com/repos/PecanProject/bety,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C103:3B38:2CE22A:5CF6C6:65223FE4.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
65,pynotes-agriscience,soilwater,N/A,N/A,https://api.github.com/repos/soilwater/pynotes-agriscience,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C13D:2EE5:2850E22:52F0D23:65223FE5.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
66,agriculture-portal,vaishnavid0604,N/A,N/A,https://api.github.com/repos/vaishnavid0604/agriculture-portal,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C19B:458F:2C3046D:5A9E419:65223FE5.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
67,agrofelis,meltoner,N/A,N/A,https://api.github.com/repos/meltoner/agrofelis,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C139:336C:2CEEEF7:5C1CCCF:65223FE6.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
68,node-red-contrib-FIWARE_official,FIWARE,N/A,N/A,https://api.github.com/repos/FIWARE/node-red-contrib-FIWARE_official,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C112:18E3:28E49B:551F6B:65223FE6.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
69,AgroSphere,WorldWindLabs,N/A,N/A,https://api.github.com/repos/WorldWindLabs/AgroSphere,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C16B:38A4:2BAC224:599DCC4:65223FE7.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
70,World-Food-Production,sharmaroshan,N/A,N/A,https://api.github.com/repos/sharmaroshan/World-Food-Production,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C13B:17C0:2876FC:5459CE:65223FE8.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
71,CropInsuranceSolution,sachinjegaonkar,N/A,N/A,https://api.github.com/repos/sachinjegaonkar/CropInsuranceSolution,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C103:3B38:2CE619:5CFED2:65223FE8.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
72,Irrigreat,simranvolunesia,N/A,N/A,https://api.github.com/repos/simranvolunesia/Irrigreat,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C100:336C:2CEF15A:5C1D1B4:65223FE9.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
73,GEE_GPR_mapping_vegetation,esjoal,N/A,N/A,https://api.github.com/repos/esjoal/GEE_GPR_mapping_vegetation,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C196:336C:2CEF1D6:5C1D2C4:65223FE9.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
74,soil_logr,Open-Source-Agriculture,N/A,N/A,https://api.github.com/repos/Open-Source-Agriculture/soil_logr,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C15E:38A4:2BAC58D:599E3BD:65223FEA.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
75,evapotranspiration,brycejohnston,N/A,N/A,https://api.github.com/repos/brycejohnston/evapotranspiration,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1B8:1560:28D28E4:53E0676:65223FEB.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
76,Eduponics-Pi-MQTT,STEMinds,N/A,N/A,https://api.github.com/repos/STEMinds/Eduponics-Pi-MQTT,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C174:6B96:2851E3F:52F920D:65223FEB.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
77,MMFAIR,SchmidtPaul,N/A,N/A,https://api.github.com/repos/SchmidtPaul/MMFAIR,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1E1:6584:2830B50:52A37EB:65223FEC.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
78,Agricultural-Production-Optimization-Engine,D-2204,N/A,N/A,https://api.github.com/repos/D-2204/Agricultural-Production-Optimization-Engine,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C116:53F5:27F6794:522B076:65223FEC.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
79,AllInOne,MohsenYN,N/A,N/A,https://api.github.com/repos/MohsenYN/AllInOne,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1D4:68AA:2E7CB90:5F303FF:65223FED.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
80,AgroCulture,thephenom1708,N/A,N/A,https://api.github.com/repos/thephenom1708/AgroCulture,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C156:3493:270C604:5062169:65223FEE.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
81,AgIsoStack-rs,Open-Agriculture,N/A,N/A,https://api.github.com/repos/Open-Agriculture/AgIsoStack-rs,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C133:11F8:2B99E9:5A8BCF:65223FEE.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
82,qgis-plugin,GEOSYS,N/A,N/A,https://api.github.com/repos/GEOSYS/qgis-plugin,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C11A:17C0:287C06:54645D:65223FEF.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
83,AgroMo,hollorol,N/A,N/A,https://api.github.com/repos/hollorol/AgroMo,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1FA:2EE5:28517CB:52F214B:65223FEF.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
84,GeosysPy,GEOSYS,N/A,N/A,https://api.github.com/repos/GEOSYS/GeosysPy,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1EA:500E:2A46AF4:56C3C9C:65223FF0.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
85,crop-rotation,dwave-examples,N/A,N/A,https://api.github.com/repos/dwave-examples/crop-rotation,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C133:11F8:2B9BA6:5A8F71:65223FF1.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
86,AgroGo,grlwholifts,N/A,N/A,https://api.github.com/repos/grlwholifts/AgroGo,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C134:18E3:28EE48:553377:65223FF1.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
87,fabio,fineprint-global,N/A,N/A,https://api.github.com/repos/fineprint-global/fabio,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C177:41EE:27A4973:5197CF3:65223FF2.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
88,agros_gui,MrCerealKiller,N/A,N/A,https://api.github.com/repos/MrCerealKiller/agros_gui,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C155:47EA:26991BD:4F49959:65223FF3.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
89,AwareWeGO,shsarv,N/A,N/A,https://api.github.com/repos/shsarv/AwareWeGO,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1F0:9938:29A7F3A:558110B:65223FF3.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
90,fabio_v1,martinbruckner,N/A,N/A,https://api.github.com/repos/martinbruckner/fabio_v1,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C116:53F5:27F6DF2:522BDCE:65223FF4.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
91,Plant-disease-prediction-using-CNNs,sanmitraD,N/A,N/A,https://api.github.com/repos/sanmitraD/Plant-disease-prediction-using-CNNs,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C18F:3493:270CBBB:5062D52:65223FF4.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
92,field-sustainability-helper,EsriPS,N/A,N/A,https://api.github.com/repos/EsriPS/field-sustainability-helper,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C121:1D49:2C2C962:5A8C981:65223FF5.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
93,Crop-yield-and-profitability-prediction,shreyzo,N/A,N/A,https://api.github.com/repos/shreyzo/Crop-yield-and-profitability-prediction,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1AB:0208:2DDB444:5DEB9A5:65223FF6.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
94,Open-Bodem-Index-Calculator,AgroCares,N/A,N/A,https://api.github.com/repos/AgroCares/Open-Bodem-Index-Calculator,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C14C:7E09:25E5B27:4E18BF6:65223FF6.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
95,multi_objective_irrigation,EDSEL-skoltech,N/A,N/A,https://api.github.com/repos/EDSEL-skoltech/multi_objective_irrigation,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C11B:4776:2ADF97:590470:65223FF7.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
96,isobus-name-resolver-ts,krone-landmaschinen,N/A,N/A,https://api.github.com/repos/krone-landmaschinen/isobus-name-resolver-ts,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C16C:1ECC:29E09A:571CF6:65223FF7.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
97,ALUES,alstat,N/A,N/A,https://api.github.com/repos/alstat/ALUES,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C147:6B96:2852A18:52FAAC9:65223FF8.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
98,AgroLab,sagar-alias-jacky,N/A,N/A,https://api.github.com/repos/sagar-alias-jacky/AgroLab,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C110:458F:2C31BE5:5AA143B:65223FF9.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
99,SmartAgrifood,smart-data-models,N/A,N/A,https://api.github.com/repos/smart-data-models/SmartAgrifood,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1E4:3493:270CFD0:50635D2:65223FF9.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
100,shinyapps,iliastsergoulas,N/A,N/A,https://api.github.com/repos/iliastsergoulas/shinyapps,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C172:2772:28BFBAC:53D2D06:65223FFA.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
101,AgroWorldapp,theashishgavade,N/A,N/A,https://api.github.com/repos/theashishgavade/AgroWorldapp,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C14E:3B38:2CF54C:5D1E76:65223FFA.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
102,Arduino_EdgeControl,arduino-libraries,N/A,N/A,https://api.github.com/repos/arduino-libraries/Arduino_EdgeControl,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1A6:505E:2BCE0A:5ACD25:65223FFB.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
103,herbie,Russ76,N/A,N/A,https://api.github.com/repos/Russ76/herbie,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1B6:7D6D:295D7D:562547:65223FFB.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
104,rsunflo,picasa,N/A,N/A,https://api.github.com/repos/picasa/rsunflo,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C140:406C:2A02AE:575793:65223FFC.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
105,reference-data,terraref,N/A,N/A,https://api.github.com/repos/terraref/reference-data,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C149:11F8:2BA48D:5AA24F:65223FFD.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
106,virtual_maize_field,FieldRobotEvent,N/A,N/A,https://api.github.com/repos/FieldRobotEvent/virtual_maize_field,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1E1:6584:28318E6:52A548B:65223FFD.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
107,AAGS--Lets-Green-It,akshatvg,N/A,N/A,https://api.github.com/repos/akshatvg/AAGS--Lets-Green-It,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1D9:47EA:2699C1C:4F4AF15:65223FFE.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
108,faobulk,muuankarski,N/A,N/A,https://api.github.com/repos/muuankarski/faobulk,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1AD:17C0:28874B:547C11:65223FFE.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
109,Lawn-mower-robot,steger123,N/A,N/A,https://api.github.com/repos/steger123/Lawn-mower-robot,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1C7:4C24:2B66B98:590B06F:65223FFF.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
110,iso-11783-toolsuite,saschadoemer,N/A,N/A,https://api.github.com/repos/saschadoemer/iso-11783-toolsuite,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C120:1ECC:29E84D:572D0E:65224000.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
111,cmrset-examples,ternaustralia,N/A,N/A,https://api.github.com/repos/ternaustralia/cmrset-examples,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C176:33C6:29ED00B:5627389:65224000.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
112,AgroInOne,mohantyrohan3,N/A,N/A,https://api.github.com/repos/mohantyrohan3/AgroInOne,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C182:0208:2DDC14A:5DED48E:65224001.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
113,gribot_ros,gribot-robotics,N/A,N/A,https://api.github.com/repos/gribot-robotics/gribot_ros,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C147:6B96:285350C:52FC16B:65224001.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
114,Plant-counter-CV,millermuttu,N/A,N/A,https://api.github.com/repos/millermuttu/Plant-counter-CV,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C183:1CC6:2A2A675:568AFBE:65224002.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
115,AYNA,RoyIshan,N/A,N/A,https://api.github.com/repos/RoyIshan/AYNA,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1B5:797D:275FA6:521D0D:65224003.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
116,zimfarm,ZimboPy,N/A,N/A,https://api.github.com/repos/ZimboPy/zimfarm,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C144:6829:2E3D8A0:5EB1E71:65224003.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
117,aprp,COAStatistics,N/A,N/A,https://api.github.com/repos/COAStatistics/aprp,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1A9:8AB4:298D62D:5552A81:65224004.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
118,farmOS.org,farmOS,N/A,N/A,https://api.github.com/repos/farmOS/farmOS.org,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C147:6B96:28538FC:52FC99E:65224005.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
119,Plants-Disease-Detection_using_TF_with_Keras,anotherwebguy,N/A,N/A,https://api.github.com/repos/anotherwebguy/Plants-Disease-Detection_using_TF_with_Keras,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C18F:3493:270DD1F:506516E:65224005.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
120,spec-JSONschema,uncefact,N/A,N/A,https://api.github.com/repos/uncefact/spec-JSONschema,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C17A:6B96:2853AAE:52FCD22:65224006.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
121,WorkRecordPlugin,JasonRoesbeke,N/A,N/A,https://api.github.com/repos/JasonRoesbeke/WorkRecordPlugin,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1FB:1E37:292C66:55A700:65224006.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
122,cropCalendars,AgMIP-GGCMI,N/A,N/A,https://api.github.com/repos/AgMIP-GGCMI/cropCalendars,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C13E:24F2:2992F32:555880C:65224007.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
123,text_analyzer,iliastsergoulas,N/A,N/A,https://api.github.com/repos/iliastsergoulas/text_analyzer,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1DF:41EE:27A5F4B:519AA7D:65224008.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
124,rice-awd-shb,adamhsparks,N/A,N/A,https://api.github.com/repos/adamhsparks/rice-awd-shb,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1EF:1560:28D442B:53E3F29:65224008.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
125,farmland-anomalies,amogh7joshi,N/A,N/A,https://api.github.com/repos/amogh7joshi/farmland-anomalies,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C119:2EE5:2852EBE:52F5157:65224009.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
126,csa-on-blockchain,tamedu,N/A,N/A,https://api.github.com/repos/tamedu/csa-on-blockchain,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1CE:797D:2765C1:522997:65224009.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
127,terravion-examples,terravion,N/A,N/A,https://api.github.com/repos/terravion/terravion-examples,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C164:7E09:25E6EC1:4E1B4C4:6522400A.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
128,agridatasets,picasa,N/A,N/A,https://api.github.com/repos/picasa/agridatasets,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C14A:17C0:2890F3:549043:6522400B.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
129,weather_and_agriculture,AIDELabAZ,N/A,N/A,https://api.github.com/repos/AIDELabAZ/weather_and_agriculture,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1A1:8AB4:298DF33:5553D23:6522400B.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
130,crop_row_follow,UGA-AgRobotics,N/A,N/A,https://api.github.com/repos/UGA-AgRobotics/crop_row_follow,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C10F:505E:2BDF96:5AF17B:6522400C.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
131,Agro-Tech,diivyya,N/A,https://github.com/diivyya/Agro-Tech,https://api.github.com/repos/diivyya/Agro-Tech,Overall app for farmers,"# AgroTech

![logo](https://user-images.githubusercontent.com/68610804/112413250-e4740280-8d45-11eb-9515-bcdab5b3cad8.jpeg)


## Features

![Capture](https://user-images.githubusercontent.com/68610804/112470806-1b233a80-8d91-11eb-9731-39c97da3b9c9.PNG)


 In this project, we are providing a farmer friendly web-based app that gives complete information about what crop to grow, what fertilizers and pesticides to use depending upon land condition and weather conditions.
 
 It also provides a platform that connects farmers directly to consumers or retailers thus, eliminates middlemen. This web application can be used by both farmers as well as retailers/consumers accordingly.
 
 ![Capture](https://user-images.githubusercontent.com/68610804/112406730-b806b900-8d3a-11eb-80b6-ef70f6d40278.PNG)

 
 ## Installation Steps:
 
 1. git clone 
 2. pip install virtualenv
 3. python -m venv ve
 4. source ve/Scripts/activate
 5. pip install django pillow joblib sklearn
 6. python manage.py runserver

## And you are all set! <3
",6,6,1,0,agriculture,"[agriculture, crops-dataset, django, farmers, machine-learning, python, python3, random-forest, retailers, sqlite3]",00000
132,awherepy,calekochenour,N/A,N/A,https://api.github.com/repos/calekochenour/awherepy,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C14E:3B38:2D0635:5D4177:6522400C.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
133,Planting-Dates-Charts,Southern-Exposure-Seed-Exchange,N/A,N/A,https://api.github.com/repos/Southern-Exposure-Seed-Exchange/Planting-Dates-Charts,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1E1:6584:283272D:52A722D:6522400D.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
134,agrirouter-middleware,agrirouter-middleware,N/A,N/A,https://api.github.com/repos/agrirouter-middleware/agrirouter-middleware,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1E8:3B38:2D0757:5D43C0:6522400E.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
135,Goodleaf,amit-timalsina,N/A,N/A,https://api.github.com/repos/amit-timalsina/Goodleaf,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C191:33EB:2B3298:59B8F6:6522400E.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
136,go-jelly,autogrow,N/A,N/A,https://api.github.com/repos/autogrow/go-jelly,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C13D:2EE5:2853498:52F5D59:6522400F.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
137,iot2tangle.ayni,Agro-iot,N/A,N/A,https://api.github.com/repos/Agro-iot/iot2tangle.ayni,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1A5:5B68:29ACC7:56D4E2:6522400F.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
138,agros_demo,MrCerealKiller,N/A,N/A,https://api.github.com/repos/MrCerealKiller/agros_demo,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C15F:1E37:2935E8:55BA97:65224010.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
139,Wikilimo,wikilimo,N/A,N/A,https://api.github.com/repos/wikilimo/Wikilimo,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1E1:6584:2832A20:52A7858:65224011.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
140,Examples-and-showcases,GEOSYS,N/A,N/A,https://api.github.com/repos/GEOSYS/Examples-and-showcases,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C123:4776:2AF956:5939E3:65224011.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
141,agx-ruby,brycejohnston,N/A,N/A,https://api.github.com/repos/brycejohnston/agx-ruby,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C160:18E3:290B14:556F65:65224012.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
142,farmingpy,TwinYields,N/A,N/A,https://api.github.com/repos/TwinYields/farmingpy,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C10D:8AB4:298E761:5554DC1:65224012.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
143,data-harvesting-for-agriculture,carpentries-incubator,N/A,N/A,https://api.github.com/repos/carpentries-incubator/data-harvesting-for-agriculture,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1CB:2772:28C1D86:53D72A9:65224013.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
144,crashcouRse,SchmidtPaul,N/A,N/A,https://api.github.com/repos/SchmidtPaul/crashcouRse,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1E5:38A4:2BAFB33:59A51A1:65224014.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
145,pai,cychitivav,N/A,N/A,https://api.github.com/repos/cychitivav/pai,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C145:47EA:269B3E2:4F4E041:65224014.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
146,wasdeparser,fdfoneill,N/A,N/A,https://api.github.com/repos/fdfoneill/wasdeparser,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1B5:797D:276F73:523DDE:65224015.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
147,usetania-static,usetania,N/A,N/A,https://api.github.com/repos/usetania/usetania-static,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C17A:6B96:2854A89:52FEDE0:65224016.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
148,farmy,calvin-puram,N/A,N/A,https://api.github.com/repos/calvin-puram/farmy,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1B0:7E09:25E7A73:4E1CCD9:65224016.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
149,sda-shiny,IFPRI,N/A,N/A,https://api.github.com/repos/IFPRI/sda-shiny,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1C2:643D:2A139E3:564B302:65224017.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
150,portal,sheaft-app,N/A,N/A,https://api.github.com/repos/sheaft-app/portal,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C106:5A86:2B97C28:596D0B4:65224017.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
151,Midwest-Agriculture-Synthesis,Science-for-Nature-and-People,N/A,N/A,https://api.github.com/repos/Science-for-Nature-and-People/Midwest-Agriculture-Synthesis,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1FA:2EE5:2853C5D:52F6D79:65224018.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
152,IranAgricultureDataAnalysis,BahramJannesar,N/A,N/A,https://api.github.com/repos/BahramJannesar/IranAgricultureDataAnalysis,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1E1:6584:2833030:52A84F3:65224018.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
153,Thesis_Farmers_Helper,JamesNikolaidis,N/A,N/A,https://api.github.com/repos/JamesNikolaidis/Thesis_Farmers_Helper,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C14C:7E09:25E7D31:4E1D299:65224019.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
154,AgMarket,prashant-shahi,N/A,N/A,https://api.github.com/repos/prashant-shahi/AgMarket,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C170:500E:2A49A18:56C9DCF:6522401A.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
155,agricultura_activaAO,BatistaTony,N/A,N/A,https://api.github.com/repos/BatistaTony/agricultura_activaAO,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C16B:38A4:2BB0383:59A6289:6522401A.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
156,eco-agri-bot,nalinrajendran,N/A,N/A,https://api.github.com/repos/nalinrajendran/eco-agri-bot,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1DE:3B38:2D12A0:5D5B62:6522401B.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
157,farmOS-community-blog,farmOS,N/A,N/A,https://api.github.com/repos/farmOS/farmOS-community-blog,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C104:4771:29C1D8:56C7AA:6522401B.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
158,extractOz,DPIRD-FSI,N/A,N/A,https://api.github.com/repos/DPIRD-FSI/extractOz,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C127:6584:28332D1:52A8A7D:6522401C.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
159,pyfdc,Nelson-Gon,N/A,N/A,https://api.github.com/repos/Nelson-Gon/pyfdc,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C131:4776:2B03BA:594F6C:6522401D.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
160,Agro-App,likhitgarimella,N/A,N/A,https://api.github.com/repos/likhitgarimella/Agro-App,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1FA:2EE5:28540B4:52F768B:6522401D.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
161,Caloric-Suitability-Index,ozak,N/A,N/A,https://api.github.com/repos/ozak/Caloric-Suitability-Index,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C118:33C6:29EECA3:562AECD:6522401E.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
162,Crop_Recognition_System,manab-kb,N/A,N/A,https://api.github.com/repos/manab-kb/Crop_Recognition_System,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C186:4771:29C41F:56CC77:6522401E.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
163,Deliveree,adjoaEdwin,N/A,N/A,https://api.github.com/repos/adjoaEdwin/Deliveree,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C16F:24F2:29948BA:555BCC2:6522401F.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
164,e16-4yp-Identification-of-Weeds-in-broadcasted-Paddy-fields-using-multispectral-UAV-images,cepdnaclk,N/A,N/A,https://api.github.com/repos/cepdnaclk/e16-4yp-Identification-of-Weeds-in-broadcasted-Paddy-fields-using-multispectral-UAV-images,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1AD:17C0:289EBC:54AD52:65224020.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
165,smallteacher,SmallRobotCompany,N/A,N/A,https://api.github.com/repos/SmallRobotCompany/smallteacher,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C12C:7A65:28861A:5472D5:65224020.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
166,mpr,kirkedev,N/A,N/A,https://api.github.com/repos/kirkedev/mpr,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C193:0BEC:295DCE:562823:65224021.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
167,Mobile_farm_robot_simulation,arunumd,N/A,N/A,https://api.github.com/repos/arunumd/Mobile_farm_robot_simulation,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1BE:68AA:2E80993:5F38358:65224021.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
168,Agromizer,ImaginarySenseHackathons,N/A,N/A,https://api.github.com/repos/ImaginarySenseHackathons/Agromizer,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C104:16F7:26882F0:4F119FC:65224022.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
169,Weather-translation,Dantusaikamal,N/A,N/A,https://api.github.com/repos/Dantusaikamal/Weather-translation,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C127:7646:2942037:5486BEB:65224023.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
170,Agri-Pal,G-Karishni,N/A,N/A,https://api.github.com/repos/G-Karishni/Agri-Pal,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C18E:3996:25FBBC4:4DF5588:65224023.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
171,Krishi-Mitra,adword01,N/A,N/A,https://api.github.com/repos/adword01/Krishi-Mitra,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1D9:4A15:28D1B42:53A2373:65224024.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
172,SmartAg-foundation,open-horizon-services,N/A,N/A,https://api.github.com/repos/open-horizon-services/SmartAg-foundation,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1DE:75D0:2618596:4E46B7B:65224024.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
173,isobus-device-localization-label-encoder,saschadoemer,N/A,N/A,https://api.github.com/repos/saschadoemer/isobus-device-localization-label-encoder,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C122:6AF3:2879DCA:52F496C:65224025.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
174,documentation,gribot-robotics,N/A,N/A,https://api.github.com/repos/gribot-robotics/documentation,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C11C:6459:26424B2:4E9F6D6:65224026.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
175,mapme.agriculture,mapme-initiative,N/A,N/A,https://api.github.com/repos/mapme-initiative/mapme.agriculture,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1E6:5C75:273BEDA:5082E40:65224026.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
176,satellite-image-classification-deforestation-pollution,nadinejackson1,N/A,N/A,https://api.github.com/repos/nadinejackson1/satellite-image-classification-deforestation-pollution,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1AE:12FA:5BCD15:BD14CA:65224027.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
177,eo-crops,j-desloires,N/A,N/A,https://api.github.com/repos/j-desloires/eo-crops,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1CC:39DF:275E3CD:50B71D5:65224028.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
178,ufarm,garrettdowd,N/A,N/A,https://api.github.com/repos/garrettdowd/ufarm,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1BB:16F7:268889D:4F125CC:65224028.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
179,agriclimuz,sherzodr,N/A,N/A,https://api.github.com/repos/sherzodr/agriclimuz,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C108:4AAE:2755CE3:50BAB1F:65224029.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
180,satellite-image-classification-deforestation-pollution,nadinejackson1,N/A,N/A,https://api.github.com/repos/nadinejackson1/satellite-image-classification-deforestation-pollution,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1AE:12FA:5BCD15:BD14CA:65224027.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
181,eo-crops,j-desloires,N/A,N/A,https://api.github.com/repos/j-desloires/eo-crops,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1CC:39DF:275E3CD:50B71D5:65224028.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
182,KTBL-APIs,fruchtfolge,N/A,N/A,https://api.github.com/repos/fruchtfolge/KTBL-APIs,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C197:049C:26E1B16:4FD06D6:65224029.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
183,Krishi-Sahyog-Website,Lalita-Gupta,N/A,N/A,https://api.github.com/repos/Lalita-Gupta/Krishi-Sahyog-Website,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1C3:2299:2535D30:4C75934:6522402A.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
184,inti,Flavjack,N/A,N/A,https://api.github.com/repos/Flavjack/inti,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C107:74C7:2664892:4ED38DE:6522402B.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
185,Open-Food,todrobbins,N/A,N/A,https://api.github.com/repos/todrobbins/Open-Food,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C173:59CA:2614453:4E34C66:6522402B.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
186,ArcGIS-plugin,GEOSYS,N/A,N/A,https://api.github.com/repos/GEOSYS/ArcGIS-plugin,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C195:646E:26D2D77:4FAA047:6522402C.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
187,master-thesis,Amatofrancesco99,N/A,N/A,https://api.github.com/repos/Amatofrancesco99/master-thesis,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1EF:679F:2A8C9BD:5702A02:6522402C.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
188,zero-android,ekylibre,N/A,N/A,https://api.github.com/repos/ekylibre/zero-android,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C157:6AF3:287A46D:52F574B:6522402D.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
189,grow-recipe-schema,njason,N/A,N/A,https://api.github.com/repos/njason/grow-recipe-schema,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C18A:75D0:2618D9B:4E47C0B:6522402E.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
190,Linear-Spacing-Visualizer-for-Transplanters,timmbogner,N/A,N/A,https://api.github.com/repos/timmbogner/Linear-Spacing-Visualizer-for-Transplanters,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C169:99FD:24C7B86:4BADA22:6522402E.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
191,Agrino,Agrino,N/A,N/A,https://api.github.com/repos/Agrino/Agrino,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C166:4AEE:2828F57:5253EC4:6522402F.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
192,farmioc,farmioc,N/A,N/A,https://api.github.com/repos/farmioc/farmioc,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1C7:18FC:2701A7A:5005592:6522402F.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
193,Weekly-Agric-Market-Prices,DavidQuartey,N/A,N/A,https://api.github.com/repos/DavidQuartey/Weekly-Agric-Market-Prices,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C121:7CD5:29EA141:55DE7C8:65224030.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
194,cropDiffusionR,Archaeo-Programmer,N/A,N/A,https://api.github.com/repos/Archaeo-Programmer/cropDiffusionR,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1D5:629D:45150D5:8C2D3E4:65224031.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
195,greenify,LeToyek,N/A,N/A,https://api.github.com/repos/LeToyek/greenify,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1F4:6EFD:2524455:4C5DE07:65224031.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
196,AgroFaaS,sriveros95,N/A,N/A,https://api.github.com/repos/sriveros95/AgroFaaS,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C162:679F:2A8CF3A:5703555:65224032.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
197,crop-health-monitoring,agxone-projects,N/A,N/A,https://api.github.com/repos/agxone-projects/crop-health-monitoring,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C173:59CA:2614A69:4E35928:65224032.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
198,mcx-info-symfony,reiterus,N/A,N/A,https://api.github.com/repos/reiterus/mcx-info-symfony,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1D5:629D:45156AF:8C2DFB9:65224033.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
199,pest-management-opendata,WadhwaniAI,N/A,N/A,https://api.github.com/repos/WadhwaniAI/pest-management-opendata,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C164:58F5:25A1F98:4D4885C:65224034.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
200,soil-moisture,raysummee,N/A,N/A,https://api.github.com/repos/raysummee/soil-moisture,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C12A:2299:2536591:4C76AB0:65224034.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
201,agritrader,agriculture-capstone,N/A,N/A,https://api.github.com/repos/agriculture-capstone/agritrader,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C160:5C75:273CD31:5084BE2:65224035.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
202,jackal_farmer,UGA-AgRobotics,N/A,N/A,https://api.github.com/repos/UGA-AgRobotics/jackal_farmer,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C169:99FD:24C8253:4BAE842:65224035.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
203,arsi_gradient,swood-ecology,N/A,N/A,https://api.github.com/repos/swood-ecology/arsi_gradient,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C13D:1D92:25B8CE7:4D76054:65224036.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
204,Forecast-of-production-with-agricultural-data-of-Turkish-provinces,ulkudilemre,N/A,N/A,https://api.github.com/repos/ulkudilemre/Forecast-of-production-with-agricultural-data-of-Turkish-provinces,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C170:7DF2:268C390:4F10988:65224037.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
205,farmup,aksharma27,N/A,N/A,https://api.github.com/repos/aksharma27/farmup,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C133:4AAE:275691E:50BC4A3:65224038.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
206,SmartAG-SensorNode,markoceri,N/A,N/A,https://api.github.com/repos/markoceri/SmartAG-SensorNode,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1CB:2299:25368EF:4C771B9:65224038.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
207,amia-cis.github.io,amia-cis,N/A,N/A,https://api.github.com/repos/amia-cis/amia-cis.github.io,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1EF:679F:2A8D6D4:5704517:65224038.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
208,sencrop-js-api-client,sencrop,N/A,N/A,https://api.github.com/repos/sencrop/sencrop-js-api-client,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C162:679F:2A8D7FB:5704786:65224039.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
209,agroJSON,fruchtfolge,N/A,N/A,https://api.github.com/repos/fruchtfolge/agroJSON,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1C2:75D0:26197D0:4E4916A:6522403A.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
210,morel-mushrooms,argosopentech,N/A,N/A,https://api.github.com/repos/argosopentech/morel-mushrooms,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C10C:7D9C:2B2AA54:5850E99:6522403A.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
211,picopasco,GrayHatGuy,N/A,N/A,https://api.github.com/repos/GrayHatGuy/picopasco,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1AB:603C:285D4B1:52B5F86:6522403B.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
212,picopasco-water,GrayHatGuy,N/A,N/A,https://api.github.com/repos/GrayHatGuy/picopasco-water,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C13F:638B:2752261:50A0AA6:6522403B.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
213,ontology,BigDataGrapes-EU,N/A,N/A,https://api.github.com/repos/BigDataGrapes-EU/ontology,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C193:646E:26D3E9C:4FAC397:6522403C.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
214,Plantae,gideontong,N/A,N/A,https://api.github.com/repos/gideontong/Plantae,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1CA:9CF4:27DA91F:51B012F:6522403D.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
215,abattoirs,Osigbemes,N/A,N/A,https://api.github.com/repos/Osigbemes/abattoirs,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C12C:27B4:2539F86:4C841E5:6522403D.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
216,libpenmon,sherzodr,N/A,N/A,https://api.github.com/repos/sherzodr/libpenmon,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1D2:12FA:5BE0C4:BD3D91:6522403B.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
217,agrosys,szkkteam,N/A,N/A,https://api.github.com/repos/szkkteam/agrosys,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1FF:4A15:28D3394:53A55D0:6522403B.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
218,android-soil-testing-report,vishalecho,N/A,N/A,https://api.github.com/repos/vishalecho/android-soil-testing-report,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1AE:12FA:5BE42E:BD4479:6522403E.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
219,ggfertilizer,wenlong-liu,N/A,N/A,https://api.github.com/repos/wenlong-liu/ggfertilizer,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C12D:4A15:28D37A2:53A5E2E:6522403E.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
220,whitney,UGA-AgRobotics,N/A,N/A,https://api.github.com/repos/UGA-AgRobotics/whitney,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C15A:7E90:269ECD7:4F2FC37:6522403F.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
221,IBM-Project-13205-1659514193,IBM-EPBL,N/A,N/A,https://api.github.com/repos/IBM-EPBL/IBM-Project-13205-1659514193,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C15B:1B08:27DF612:51B0233:6522403F.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
222,BGR-APIs,fruchtfolge,N/A,N/A,https://api.github.com/repos/fruchtfolge/BGR-APIs,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1A5:4A15:28D39DB:53A62B5:65224040.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
223,zero-android-v3,ekylibre,N/A,N/A,https://api.github.com/repos/ekylibre/zero-android-v3,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C168:39DF:275FCBB:50BA562:65224040.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
224,Advanced-Agriculture,vincegellar,N/A,N/A,https://api.github.com/repos/vincegellar/Advanced-Agriculture,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1C2:75D0:2619EC4:4E49FDC:65224041.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
225,headlands,fruchtfolge,N/A,N/A,https://api.github.com/repos/fruchtfolge/headlands,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1F0:565A:268E0C6:4F27D31:65224042.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
226,Leaf-Disease-Detection-and-Health-Grading-System-using-MATLAB,AabidPatel,N/A,N/A,https://api.github.com/repos/AabidPatel/Leaf-Disease-Detection-and-Health-Grading-System-using-MATLAB,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C18C:4AEE:282A95D:525743B:65224042.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
227,MarketplaceSolution,sachinjegaonkar,N/A,N/A,https://api.github.com/repos/sachinjegaonkar/MarketplaceSolution,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C16E:5C75:273DE7D:5086F5E:65224043.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
228,ROS-WeedSpray,bkbilly,N/A,N/A,https://api.github.com/repos/bkbilly/ROS-WeedSpray,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C11E:1B08:27DFB7A:51B0D30:65224043.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
229,krishi-bazaar,s2sharpit,N/A,N/A,https://api.github.com/repos/s2sharpit/krishi-bazaar,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C142:3996:25FDE74:4DF9D26:65224044.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
230,hpai-tracker-next,bherbruck,N/A,N/A,https://api.github.com/repos/bherbruck/hpai-tracker-next,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C185:6EFD:2525662:4C60356:65224045.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
231,field_boundary_delineation,fkroeber,N/A,N/A,https://api.github.com/repos/fkroeber/field_boundary_delineation,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C150:6459:26445B9:4EA3B1F:65224045.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
232,Plant-Pathology-Kaggle,TheFoodForest,N/A,N/A,https://api.github.com/repos/TheFoodForest/Plant-Pathology-Kaggle,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1D2:12FA:5BEC3D:BD552A:65224045.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
233,Geo-Cooker,iamtekson,N/A,N/A,https://api.github.com/repos/iamtekson/Geo-Cooker,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1FB:4A15:28D4387:53A768C:65224046.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
234,sar_parcel_analyses,fkroeber,N/A,N/A,https://api.github.com/repos/fkroeber/sar_parcel_analyses,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1C7:18FC:2703222:5008687:65224046.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
235,Green,AymanKandil,N/A,N/A,https://api.github.com/repos/AymanKandil/Green,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C157:6AF3:287BE55:52F8CE9:65224047.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
236,farmhouse,theProgrammerDavid,N/A,N/A,https://api.github.com/repos/theProgrammerDavid/farmhouse,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C116:7D9C:2B2B875:5852BC3:65224048.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
237,agriatra,KabirSinghMehrok,N/A,N/A,https://api.github.com/repos/KabirSinghMehrok/agriatra,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C10B:74C7:26664EC:4ED738C:65224048.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
238,krishipradhan,ShubhamChoudharyShubh,N/A,N/A,https://api.github.com/repos/ShubhamChoudharyShubh/krishipradhan,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C158:3D80:26F221D:4FE84DA:65224049.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
239,DEA_MultiSpectralImageTools,ascidian-ai,N/A,N/A,https://api.github.com/repos/ascidian-ai/DEA_MultiSpectralImageTools,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1C2:75D0:261A6A1:4E4AFF1:65224049.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
240,dsfair_quarto,SchmidtPaul,N/A,N/A,https://api.github.com/repos/SchmidtPaul/dsfair_quarto,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C143:74C7:26666A8:4ED7732:6522404A.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
241,NAIP-multispectral-imagery,mlgal24,N/A,N/A,https://api.github.com/repos/mlgal24/NAIP-multispectral-imagery,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C198:9D23:26BF645:4F864E3:65224047.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
242,site,sheaft-app,N/A,N/A,https://api.github.com/repos/sheaft-app/site,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C10C:7D9C:2B2B868:5852BAC:65224048.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
243,agricultural-robot-list,daviderizzo-phd,N/A,N/A,https://api.github.com/repos/daviderizzo-phd/agricultural-robot-list,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C14E:1B08:27E00F3:51B1891:65224048.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
244,ESP32-SDI12,HarveyBates,N/A,N/A,https://api.github.com/repos/HarveyBates/ESP32-SDI12,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C180:1B08:27E018E:51B19BE:65224049.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
245,nscalc,nikitapn,N/A,N/A,https://api.github.com/repos/nikitapn/nscalc,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C13D:1D92:25BA655:4D794A9:65224049.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
246,NFixDB,raw-lab,N/A,N/A,https://api.github.com/repos/raw-lab/NFixDB,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1F3:5C75:273E779:50881F7:6522404B.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
247,asterl1t-processing,brunorpinho,N/A,N/A,https://api.github.com/repos/brunorpinho/asterl1t-processing,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1C7:18FC:27036EE:5009074:6522404B.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
248,agriR,kadyb,N/A,N/A,https://api.github.com/repos/kadyb/agriR,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C164:58F5:25A38DE:4D4BC84:6522404C.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
249,KrishiUnnati,Shubhankar10,N/A,N/A,https://api.github.com/repos/Shubhankar10/KrishiUnnati,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C151:7D9C:2B2BCC8:58534C4:6522404C.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
250,V2-Plant-Seedlings-Classification,sharmaroshan,N/A,N/A,https://api.github.com/repos/sharmaroshan/V2-Plant-Seedlings-Classification,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1C2:75D0:261A998:4E4B62A:6522404D.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
251,generateur-graphique-open-badge-ea,incaya,N/A,N/A,https://api.github.com/repos/incaya/generateur-graphique-open-badge-ea,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C122:6AF3:287C4C1:52F9A39:6522404D.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
252,cropSpreadR,Archaeo-Programmer,N/A,N/A,https://api.github.com/repos/Archaeo-Programmer/cropSpreadR,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C15D:0A36:25E6447:4DDA4D3:6522404E.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
253,smallssd,SmallRobotCompany,N/A,N/A,https://api.github.com/repos/SmallRobotCompany/smallssd,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1F0:565A:268F012:4F29BD9:6522404F.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
254,awesome-regenerative-agriculture,hopeman15,N/A,N/A,https://api.github.com/repos/hopeman15/awesome-regenerative-agriculture,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C178:75D0:261AB80:4E4BA21:6522404F.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
255,AgriNeo,Cephas-Kingori,N/A,N/A,https://api.github.com/repos/Cephas-Kingori/AgriNeo,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C129:7039:275F67F:50C5274:65224050.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
256,fruchtfolge,chrispahm,N/A,N/A,https://api.github.com/repos/chrispahm/fruchtfolge,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1AD:3D80:26F2989:4FE9422:65224051.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
257,agr-spectral-indices,MCroci,N/A,N/A,https://api.github.com/repos/MCroci/agr-spectral-indices,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1D2:12FA:5BF7CC:BD6D07:65224051.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
258,Vriksha-SIH,msadv,N/A,N/A,https://api.github.com/repos/msadv/Vriksha-SIH,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1CC:39DF:2760E7B:50BC9DC:65224052.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
259,AgriAid,shamspias,N/A,N/A,https://api.github.com/repos/shamspias/AgriAid,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C17D:629D:4519FE9:8C373EE:65224052.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
260,NDVI-GO,Abhijeetbyte,N/A,N/A,https://api.github.com/repos/Abhijeetbyte/NDVI-GO,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C155:75D0:261AE4A:4E4BFDF:65224053.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
261,huikee-maatalous,Agrihubi,N/A,N/A,https://api.github.com/repos/Agrihubi/huikee-maatalous,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C173:59CA:2616A61:4E39B52:65224054.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
262,FarmIt-Frontend-Client,Adamantios,N/A,N/A,https://api.github.com/repos/Adamantios/FarmIt-Frontend-Client,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C196:6EFD:252635D:4C61E41:65224054.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
263,farmosnws,almostengr,N/A,N/A,https://api.github.com/repos/almostengr/farmosnws,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1EC:6459:2645664:4EA5DA1:65224055.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
264,psm.api.v1,tech4germany,N/A,N/A,https://api.github.com/repos/tech4germany/psm.api.v1,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C160:5C75:273F282:50898CD:65224055.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
265,AgraQ,suagar10,N/A,N/A,https://api.github.com/repos/suagar10/AgraQ,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1B8:18FC:27040E0:500A529:65224056.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
266,FarmTech,NagiPragalathan,N/A,N/A,https://api.github.com/repos/NagiPragalathan/FarmTech,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C174:646E:26D5CE1:4FB020B:65224057.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
267,cnn-comparison,leandroaquinopereira,N/A,N/A,https://api.github.com/repos/leandroaquinopereira/cnn-comparison,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C12D:4A15:28D5A5D:53AA55D:65224057.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
268,farmvail,blait455,N/A,N/A,https://api.github.com/repos/blait455/farmvail,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C17E:59CA:2616DF9:4E3A2CC:65224058.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
269,ai4b,fkroeber,N/A,N/A,https://api.github.com/repos/fkroeber/ai4b,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C15E:603C:285F5A0:52BA32F:65224058.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
270,imm,oats-center,N/A,N/A,https://api.github.com/repos/oats-center/imm,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C107:74C7:26673E4:4ED92DD:65224059.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
271,Outlier-detection-Agri-data,PriyankaVerma98,N/A,N/A,https://api.github.com/repos/PriyankaVerma98/Outlier-detection-Agri-data,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1B0:28F2:29FBD4A:55F4BD1:65224059.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
272,smart-farm-africastalking-hackathon,rodneyosodo,N/A,N/A,https://api.github.com/repos/rodneyosodo/smart-farm-africastalking-hackathon,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C180:1B08:27E1337:51B3E2F:6522405A.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
273,Vahini-2.0,Blake2912,N/A,N/A,https://api.github.com/repos/Blake2912/Vahini-2.0,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C130:7039:275FE7F:50C630E:6522405A.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
274,Scarcity-water-footprints-,MichalisHadjikakou,N/A,N/A,https://api.github.com/repos/MichalisHadjikakou/Scarcity-water-footprints-,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C12D:4A15:28D5FC9:53AB071:6522405B.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
275,lai4sr,lukasValentin,N/A,N/A,https://api.github.com/repos/lukasValentin/lai4sr,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1BD:2299:2538824:4C7B27A:6522405C.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
276,herbar.io,rje1974,N/A,N/A,https://api.github.com/repos/rje1974/herbar.io,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C11B:0E65:262EDFD:4E62975:6522405C.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
277,smart-agriot,ashu-pixel,N/A,N/A,https://api.github.com/repos/ashu-pixel/smart-agriot,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1B5:7E90:26A0A06:4F338C8:6522405D.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
278,ClimAg,ClimAg,N/A,N/A,https://api.github.com/repos/ClimAg/ClimAg,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1F2:049C:26E482A:4FD64B7:6522405D.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
279,AgroFarm-Webapp,Sanulone,N/A,N/A,https://api.github.com/repos/Sanulone/AgroFarm-Webapp,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1D5:4E78:6D968D:E27E6E:6522405E.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
280,Crop-Yield-Estimation-Model,GhoshParmita841,N/A,N/A,https://api.github.com/repos/GhoshParmita841/Crop-Yield-Estimation-Model,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C120:6EE6:6C415A:DFD3EF:6522405E.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
281,tshansik-app,OpenHackFarm,N/A,N/A,https://api.github.com/repos/OpenHackFarm/tshansik-app,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C15D:29CE:32D4178:67BABB6:6522405F.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
282,Agricultural,RomarioFe44eira,N/A,N/A,https://api.github.com/repos/RomarioFe44eira/Agricultural,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1E8:603C:285F9A8:52BAB7F:6522405C.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
283,Oats_Variety-Fertilizer_SplitPlot_Field_Experiment,KAR-NG,N/A,N/A,https://api.github.com/repos/KAR-NG/Oats_Variety-Fertilizer_SplitPlot_Field_Experiment,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1FA:1D92:25BBA92:4D7BE61:6522405D.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
284,inventory,open-farms,N/A,N/A,https://api.github.com/repos/open-farms/inventory,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1C7:1E3B:2FA70CA:615CE10:6522405E.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
285,ag-node,DPIclimate,N/A,N/A,https://api.github.com/repos/DPIclimate/ag-node,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C171:05EF:6C6098:E01A23:65224060.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
286,yearly-yields,troennes,N/A,N/A,https://api.github.com/repos/troennes/yearly-yields,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C194:4E78:6D9865:E2824E:65224060.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
287,Agriculture-Machinery-Rental-Website,Meshydra,N/A,N/A,https://api.github.com/repos/Meshydra/Agriculture-Machinery-Rental-Website,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C155:7B5B:70ED4C:E8D534:65224061.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
288,3d-model,gribot-robotics,N/A,N/A,https://api.github.com/repos/gribot-robotics/3d-model,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C191:7B5B:70EDD9:E8D670:65224061.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
289,sensor-tech,abidanBrito,N/A,N/A,https://api.github.com/repos/abidanBrito/sensor-tech,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C123:418F:2A483A4:567250A:65224062.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
290,api,sheaft-app,N/A,N/A,https://api.github.com/repos/sheaft-app/api,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C145:7B5B:70EEEF:E8D8A7:65224063.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
291,sensd,PoorRican,N/A,N/A,https://api.github.com/repos/PoorRican/sensd,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C109:8AF9:6E3F5B:E3EDC1:65224063.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
292,Dashboard-for-agriculture,cherry247,N/A,N/A,https://api.github.com/repos/cherry247/Dashboard-for-agriculture,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1C7:1E3B:2FA7784:615DBEB:65224064.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
293,GrowGreens,Ecolistico,N/A,N/A,https://api.github.com/repos/Ecolistico/GrowGreens,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C147:5AB9:2C29123:5A769A9:65224064.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
294,FarmIt-Backend-Client,Adamantios,N/A,N/A,https://api.github.com/repos/Adamantios/FarmIt-Backend-Client,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1F3:5F41:6D6C11:E23617:65224065.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
295,u-words,u-motion,N/A,N/A,https://api.github.com/repos/u-motion/u-words,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C14C:2319:67856E:D65F4C:65224063.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
296,DSC_DR_CROP,Yash7818,N/A,N/A,https://api.github.com/repos/Yash7818/DSC_DR_CROP,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1D1:6A74:1A12D6A:35B3349:65224064.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
297,NSSO-77-Round-SAS,deepakjohnson91,N/A,N/A,https://api.github.com/repos/deepakjohnson91/NSSO-77-Round-SAS,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C165:73C7:6F5EF7:E5EFB9:65224064.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
298,Farm-manager-with-Laravel,Briankim254,N/A,N/A,https://api.github.com/repos/Briankim254/Farm-manager-with-Laravel,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C164:178A:2C78B14:5B0ADB3:65224065.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
299,selection.index,zankrut20,N/A,N/A,https://api.github.com/repos/zankrut20/selection.index,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C102:092A:6EE6A1:E53130:65224066.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
300,Digitized-Kisaan-FYP,hunainahmedj,N/A,N/A,https://api.github.com/repos/hunainahmedj/Digitized-Kisaan-FYP,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C17D:05EF:6C6641:E025F0:65224066.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
301,moz-proirri-savings,dime-worldbank,N/A,N/A,https://api.github.com/repos/dime-worldbank/moz-proirri-savings,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C19E:6611:6C45DC:DFEC6A:65224067.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
302,Phinesture,PhinesTech,N/A,N/A,https://api.github.com/repos/PhinesTech/Phinesture,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1EA:3BF5:71F042:EAF9FC:65224068.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
303,catalog,agrogeophy,N/A,N/A,https://api.github.com/repos/agrogeophy/catalog,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C11E:3BF5:71F0E5:EAFB4A:65224068.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
304,identity,sheaft-app,N/A,N/A,https://api.github.com/repos/sheaft-app/identity,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C122:5934:283D45B:52BD80B:65224069.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
305,e-agriculture,pratap1298,N/A,N/A,https://api.github.com/repos/pratap1298/e-agriculture,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C160:6EE6:6C4B54:DFE8C8:65224069.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
306,AgriTech,VamsiKrishnaGondesi,N/A,N/A,https://api.github.com/repos/VamsiKrishnaGondesi/AgriTech,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C110:3F63:2E5A444:5ED387A:6522406A.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
307,Sprayer,andrewchang98,N/A,N/A,https://api.github.com/repos/andrewchang98/Sprayer,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C109:8AF9:6E46DA:E3FD44:6522406B.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
308,RiceCloud,abhimanyubhowmik,N/A,N/A,https://api.github.com/repos/abhimanyubhowmik/RiceCloud,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1E5:2CBC:758923:F23827:6522406B.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
309,Cucumber_Multi-Env_LatinSquare_Field_Experiment,KAR-NG,N/A,N/A,https://api.github.com/repos/KAR-NG/Cucumber_Multi-Env_LatinSquare_Field_Experiment,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C15B:73C7:6F64C5:E5FBBE:6522406B.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
310,Automated-Hidroponic-System,DaveAlsina,N/A,N/A,https://api.github.com/repos/DaveAlsina/Automated-Hidroponic-System,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1F6:418F:2A48C8C:5673761:6522406C.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
311,blog,sheaft-app,N/A,N/A,https://api.github.com/repos/sheaft-app/blog,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C114:7AEF:2DB0BE8:5D6E07C:6522406D.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
312,frictionless-data-agriculture,carpentries-incubator,N/A,N/A,https://api.github.com/repos/carpentries-incubator/frictionless-data-agriculture,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C14E:6A74:1A1353E:35B4394:6522406D.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
313,go-intelli,autogrow,N/A,N/A,https://api.github.com/repos/autogrow/go-intelli,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C11E:3BF5:71F5B0:EB053F:6522406E.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
314,draft-proposal,runrig-coop,N/A,N/A,https://api.github.com/repos/runrig-coop/draft-proposal,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C14B:5934:283D945:52BE23C:6522406E.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
315,crop_production,japhethkimeu,N/A,N/A,https://api.github.com/repos/japhethkimeu/crop_production,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1FA:37E7:2CEA68A:5BFA59A:6522406F.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
316,learn-permaculture,dwyl,N/A,N/A,https://api.github.com/repos/dwyl/learn-permaculture,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1CF:1F34:1B8220D:3889053:6522406F.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
317,SahelFlux,ScriBanana,N/A,N/A,https://api.github.com/repos/ScriBanana/SahelFlux,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C149:7B5B:70FA39:E8F04B:65224070.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
318,AgriFarm,tuhinaww,N/A,N/A,https://api.github.com/repos/tuhinaww/AgriFarm,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1EF:7B5B:70FAD7:E8F194:65224071.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
319,European-Green-Deal-Tracker,dw-data,N/A,N/A,https://api.github.com/repos/dw-data/European-Green-Deal-Tracker,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C174:5831:2B96888:59524B8:65224071.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
320,CSA_Dashboard,cmguiob,N/A,N/A,https://api.github.com/repos/cmguiob/CSA_Dashboard,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C101:178A:2C79544:5B0C2EC:65224072.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
321,Citrus-Farm-Dataset,UCR-Robotics,N/A,N/A,https://api.github.com/repos/UCR-Robotics/Citrus-Farm-Dataset,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1E6:607B:766DA4:F3FA95:65224072.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
322,2017-ispc,mbacou,N/A,N/A,https://api.github.com/repos/mbacou/2017-ispc,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1DC:309A:2E3EA96:5E59182:65224073.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
323,Iran_agriculture_data_analysis,SoroushGhaderi,N/A,N/A,https://api.github.com/repos/SoroushGhaderi/Iran_agriculture_data_analysis,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1FB:0C72:704A9C:E7F2C8:65224074.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
324,SmkCodingxDewisri,ArieRS,N/A,N/A,https://api.github.com/repos/ArieRS/SmkCodingxDewisri,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1C2:3BF5:71FB32:EB10F1:65224074.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
325,Spectrometer-Line-Scanner,JesseChin,N/A,N/A,https://api.github.com/repos/JesseChin/Spectrometer-Line-Scanner,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C173:4179:2DC9363:5DB2D1C:65224075.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
326,Farmers-Space,nivlapeter,N/A,N/A,https://api.github.com/repos/nivlapeter/Farmers-Space,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C101:178A:2C79905:5B0CACE:65224075.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
327,agData,derekmichaelwright,N/A,N/A,https://api.github.com/repos/derekmichaelwright/agData,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C198:4678:1AB4D7B:36FD1EB:65224076.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
328,farmsense,christad92,N/A,N/A,https://api.github.com/repos/christad92/farmsense,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1AB:7AEF:2DB14D1:5D6F30A:65224077.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
329,PlantWateringSystem-UsingFuzzy,Hisyamkamil,N/A,N/A,https://api.github.com/repos/Hisyamkamil/PlantWateringSystem-UsingFuzzy,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1A4:3F63:2E5B265:5ED55C9:65224077.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
330,electronic,gribot-robotics,N/A,N/A,https://api.github.com/repos/gribot-robotics/electronic,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1A3:505E:744397:EFA371:65224078.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
331,Agribalyse,lou-dupont,N/A,N/A,https://api.github.com/repos/lou-dupont/Agribalyse,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C15D:29CE:32D5B80:67BE1C9:65224078.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
332,DPPD_Niger,gizdatalab,N/A,N/A,https://api.github.com/repos/gizdatalab/DPPD_Niger,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C180:6A74:1A14084:35B5B16:65224079.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
333,Agriculture,GrzegorzMika,N/A,N/A,https://api.github.com/repos/GrzegorzMika/Agriculture,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C19E:6611:6C531E:E00894:6522407A.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
334,agricorn,oki-aryawan,N/A,N/A,https://api.github.com/repos/oki-aryawan/agricorn,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1AD:36DF:3531CEF:6C7396F:6522407A.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
335,Studies-and-Analysis,GEOSYS,N/A,N/A,https://api.github.com/repos/GEOSYS/Studies-and-Analysis,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C187:984A:73C1C8:EEBDDE:6522407B.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
336,Harvest-AI-Crop-recommeder-System-ML,Sumanthkumar2002,N/A,N/A,https://api.github.com/repos/Sumanthkumar2002/Harvest-AI-Crop-recommeder-System-ML,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C193:2CBC:759AE8:F25D0D:6522407B.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
337,AgricultureApp,Intensedog,N/A,N/A,https://api.github.com/repos/Intensedog/AgricultureApp,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C185:1F34:1B82E3A:388A9AE:6522407C.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
338,AI-for-Sustainable-Agriculture,FayElhassan,N/A,N/A,https://api.github.com/repos/FayElhassan/AI-for-Sustainable-Agriculture,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C18A:7AEF:2DB1C26:5D70223:6522407D.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
339,colabs_am_bib,GParolini,N/A,N/A,https://api.github.com/repos/GParolini/colabs_am_bib,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1D0:3BF5:720456:EB23DB:6522407D.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
340,MPs_Soil_Compost,NGBeriot,N/A,N/A,https://api.github.com/repos/NGBeriot/MPs_Soil_Compost,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C101:178A:2C7A4BA:5B0E2C3:6522407E.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
341,canopy-cover,pacs27,N/A,N/A,https://api.github.com/repos/pacs27/canopy-cover,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1DA:178A:2C7A588:5B0E46F:6522407F.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
342,AgriSmart--Advanced-Farming-with-IOT,dubeyx,N/A,N/A,https://api.github.com/repos/dubeyx/AgriSmart--Advanced-Farming-with-IOT,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C102:092A:6EFC88:E55EED:6522407F.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
343,IBM-Project-33958-1660229898,IBM-EPBL,N/A,N/A,https://api.github.com/repos/IBM-EPBL/IBM-Project-33958-1660229898,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1B3:2115:6E192F:E3A6D3:65224080.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
344,cropdatape,omarbenites,N/A,N/A,https://api.github.com/repos/omarbenites/cropdatape,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1F1:5F41:6D889C:E2712D:65224080.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
345,eVoucher,bonifacechacha,N/A,N/A,https://api.github.com/repos/bonifacechacha/eVoucher,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C133:5F41:6D894A:E2727D:65224081.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
346,PlantAI,Wanghley,N/A,N/A,https://api.github.com/repos/Wanghley/PlantAI,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C174:5831:2B97CBC:5954E6C:65224082.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
347,KrushiVikas,mahekn23,N/A,N/A,https://api.github.com/repos/mahekn23/KrushiVikas,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C156:4F4C:7030FC:E78494:65224082.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
348,clustering-moroccan-weather,Badr-MOUFAD,N/A,N/A,https://api.github.com/repos/Badr-MOUFAD/clustering-moroccan-weather,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1AB:7AEF:2DB2492:5D71336:65224083.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
349,smart-agricultural-system,MustofAhmed41,N/A,N/A,https://api.github.com/repos/MustofAhmed41/smart-agricultural-system,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C107:092A:6F0068:E56711:65224083.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
350,Potato-Disease-Classification,utkarshtambe10,N/A,N/A,https://api.github.com/repos/utkarshtambe10/Potato-Disease-Classification,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C12D:7B5B:710DD0:E918DC:65224084.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
351,agrotech,gustavokennedy,N/A,N/A,https://api.github.com/repos/gustavokennedy/agrotech,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1E2:5A27:6F9923:E681D4:65224085.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
352,HackathonBBDTP,muratagyz,N/A,N/A,https://api.github.com/repos/muratagyz/HackathonBBDTP,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C147:5AB9:2C2B176:5A7ACD7:65224085.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
353,bangkit-machine-learning,Terrafarms,N/A,N/A,https://api.github.com/repos/Terrafarms/bangkit-machine-learning,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C180:6A74:1A14D71:35B75C9:65224086.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
354,Agricultural-Information-System-UI,dulyana,N/A,N/A,https://api.github.com/repos/dulyana/Agricultural-Information-System-UI,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1E9:87DB:2FD8550:61B2C42:65224087.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
355,AgriVision,4bdul4ziz,N/A,N/A,https://api.github.com/repos/4bdul4ziz/AgriVision,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1D9:58D0:74F306:F0B197:65224087.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
356,rnass,emraher,N/A,N/A,https://api.github.com/repos/emraher/rnass,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C18C:178A:2C7B14E:5B0FC96:65224088.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
357,EnvironRankAfrica,cjabradshaw,N/A,N/A,https://api.github.com/repos/cjabradshaw/EnvironRankAfrica,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C143:46E9:736161:EDF436:65224088.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
358,agricultural-robot,Aramist,N/A,N/A,https://api.github.com/repos/Aramist/agricultural-robot,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1AC:3819:1ACDA59:371DA68:65224089.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
359,project-agis,ciartf,N/A,N/A,https://api.github.com/repos/ciartf/project-agis,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1C7:1E3B:2FAA450:616387C:6522408A.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
360,DOCHAL,Jon-Fr,N/A,N/A,https://api.github.com/repos/Jon-Fr/DOCHAL,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1AD:36DF:3533422:6C7690F:6522408A.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
361,crop-prediction,aadilkhalifa,N/A,N/A,https://api.github.com/repos/aadilkhalifa/crop-prediction,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1E9:87DB:2FD8AC6:61B3763:6522408B.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
362,AgriDoc,Patil-Vinay,N/A,N/A,https://api.github.com/repos/Patil-Vinay/AgriDoc,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1CE:797D:27D0CA:530921:6522408B.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
363,Plant-and-Weed-detection-using-UNet-CNN,Schine73,N/A,N/A,https://api.github.com/repos/Schine73/Plant-and-Weed-detection-using-UNet-CNN,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C15D:17C0:28EC16:55501E:6522408C.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
364,Crop-Mapping-and-Survey-Drone,mr-finnie-mac,N/A,N/A,https://api.github.com/repos/mr-finnie-mac/Crop-Mapping-and-Survey-Drone,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C12E:47EE:2B894EC:59506FD:6522408D.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
365,smart-agriculture-datasets,firefly-cpp,N/A,N/A,https://api.github.com/repos/firefly-cpp/smart-agriculture-datasets,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C11F:1E37:29ABC1:56AF50:6522408D.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
366,bangkit-coffee-ml,arsyakaukabi,N/A,N/A,https://api.github.com/repos/arsyakaukabi/bangkit-coffee-ml,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C115:406C:2A8366:586326:6522408D.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
367,weather-app-farmer,fahadgudu,N/A,N/A,https://api.github.com/repos/fahadgudu/weather-app-farmer,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1A1:8AB4:29970D5:5566960:6522408E.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
368,Sensor-Network-Project,DenisDPR,N/A,N/A,https://api.github.com/repos/DenisDPR/Sensor-Network-Project,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1B5:797D:27D325:530E15:6522408E.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
369,afsisdb-demos,qedsoftware,N/A,N/A,https://api.github.com/repos/qedsoftware/afsisdb-demos,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1D8:458F:2C3C575:5AB7199:6522408F.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
370,mapas-dinamicos,jmanuelc87,N/A,N/A,https://api.github.com/repos/jmanuelc87/mapas-dinamicos,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1C0:6C98:2A829E:586773:65224090.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
371,agrochemical-billing-software,divyesh599,N/A,N/A,https://api.github.com/repos/divyesh599/agrochemical-billing-software,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C160:18E3:2969D6:563559:65224090.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
372,Orchard_planting_system,mirkopiani98,N/A,N/A,https://api.github.com/repos/mirkopiani98/Orchard_planting_system,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1C8:7A65:28F140:555109:65224091.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
373,CropAndWeedDetection,Daraan,N/A,N/A,https://api.github.com/repos/Daraan/CropAndWeedDetection,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1C2:643D:2A1BE64:565C2FE:65224091.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
374,MKR1010-Environmental-Soil-Sensor,lorestew,N/A,N/A,https://api.github.com/repos/lorestew/MKR1010-Environmental-Soil-Sensor,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C15F:1E37:29B01E:56B86C:65224092.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
375,plotline,earthrise-media,N/A,N/A,https://api.github.com/repos/earthrise-media/plotline,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1F6:797D:27D604:53140E:65224092.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
376,AgriPlus-website,iamkibeh,N/A,N/A,https://api.github.com/repos/iamkibeh/AgriPlus-website,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C165:38A4:2BB9872:59B9535:65224093.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
377,Agro-Biz-SRS,raju-shrestha,N/A,N/A,https://api.github.com/repos/raju-shrestha/Agro-Biz-SRS,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C160:18E3:296C41:563A45:65224094.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
378,PRRC_qPCR_T18,dendrologicus,N/A,N/A,https://api.github.com/repos/dendrologicus/PRRC_qPCR_T18,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C13A:458F:2C3CC0F:5AB7F37:65224094.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
379,StrykerDG.FarmForge,StrykerDG,N/A,N/A,https://api.github.com/repos/StrykerDG/StrykerDG.FarmForge,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1E1:6584:2839B26:52B6399:65224095.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
380,Maize_Soil_Nutrient_CRD_Glasshouse_Experiment-,KAR-NG,N/A,N/A,https://api.github.com/repos/KAR-NG/Maize_Soil_Nutrient_CRD_Glasshouse_Experiment-,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C19A:0BEC:29C181:56F7A0:65224095.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
381,Project---Analyze-Crop-Production-of-India,AnindyaNag,N/A,N/A,https://api.github.com/repos/AnindyaNag/Project---Analyze-Crop-Production-of-India,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C120:1ECC:2A5D88:58224F:65224096.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
382,Terrace-Farming-Robot,Kartik-Aggarwal,N/A,N/A,https://api.github.com/repos/Kartik-Aggarwal/Terrace-Farming-Robot,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C19E:505E:2C62E0:5C00CB:65224097.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
383,Soil_Moisture_Monitoring_using_IoT_Sensors,blitz-cmd,N/A,N/A,https://api.github.com/repos/blitz-cmd/Soil_Moisture_Monitoring_using_IoT_Sensors,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C101:0208:2DE671E:5E02ADB:65224097.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
384,greensyncold,Green-sync,N/A,N/A,https://api.github.com/repos/Green-sync/greensyncold,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C15E:38A4:2BB9DDE:59BA06E:65224098.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
385,corn-leaf-infection-recognition,adhiiisetiawan,N/A,N/A,https://api.github.com/repos/adhiiisetiawan/corn-leaf-infection-recognition,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C18A:4771:2A2246:579141:65224098.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
386,Agribranch,alhussain-shaikh,N/A,N/A,https://api.github.com/repos/alhussain-shaikh/Agribranch,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C16C:1ECC:2A5F3A:5825D4:65224099.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
387,field-carbon-model,agstack,N/A,N/A,https://api.github.com/repos/agstack/field-carbon-model,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1CF:6B96:285CE7A:530FF33:65224099.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
388,AgroWorld,bhaveshppatil,N/A,N/A,https://api.github.com/repos/bhaveshppatil/AgroWorld,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C168:9938:29B2843:5596D7F:6522409A.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
389,lidar-scanner,matiasmicheletto,N/A,N/A,https://api.github.com/repos/matiasmicheletto/lidar-scanner,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C114:3B38:2D85CA:5E4A45:6522409B.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
390,greensyncold,Green-sync,N/A,N/A,https://api.github.com/repos/Green-sync/greensyncold,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C15E:38A4:2BB9DDE:59BA06E:65224098.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
391,Agribranch,alhussain-shaikh,N/A,N/A,https://api.github.com/repos/alhussain-shaikh/Agribranch,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C16C:1ECC:2A5F3A:5825D4:65224099.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
392,field-carbon-model,agstack,N/A,N/A,https://api.github.com/repos/agstack/field-carbon-model,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1CF:6B96:285CE7A:530FF33:65224099.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
393,AgroWorld,bhaveshppatil,N/A,N/A,https://api.github.com/repos/bhaveshppatil/AgroWorld,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C168:9938:29B2843:5596D7F:6522409A.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
394,lidar-scanner,matiasmicheletto,N/A,N/A,https://api.github.com/repos/matiasmicheletto/lidar-scanner,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C114:3B38:2D85CA:5E4A45:6522409B.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
395,template-rgb-plot,AgPipeline,N/A,N/A,https://api.github.com/repos/AgPipeline/template-rgb-plot,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C113:7890:29D57F:571710:65224099.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
396,tsharvest,fdfoneill,N/A,N/A,https://api.github.com/repos/fdfoneill/tsharvest,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1E6:7890:29D6A0:571973:6522409A.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
397,cb-tricot-analysis,AgrDataSci,N/A,N/A,https://api.github.com/repos/AgrDataSci/cb-tricot-analysis,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C16F:24F2:299C457:556BC97:65224099.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
398,smartag_datacollection,adsarver,N/A,N/A,https://api.github.com/repos/adsarver/smartag_datacollection,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C13F:47EA:26A2A1B:4F5D637:6522409A.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
399,CottonDiseaseDetection,jorgerodriguezm,N/A,N/A,https://api.github.com/repos/jorgerodriguezm/CottonDiseaseDetection,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C164:7E09:25EFCC7:4E2DB11:6522409B.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
400,Tea-Leaf-Disease-Detection,jenishborah,N/A,N/A,https://api.github.com/repos/jenishborah/Tea-Leaf-Disease-Detection,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C170:500E:2A52095:56DB3BE:6522409C.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
401,Wheat-Head-Detection,jainaviral898,N/A,N/A,https://api.github.com/repos/jainaviral898/Wheat-Head-Detection,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C112:18E3:297283:564710:6522409C.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
402,ShouldIBurn,paulcushing,N/A,N/A,https://api.github.com/repos/paulcushing/ShouldIBurn,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C125:6829:2E473E4:5EC5FCF:6522409D.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
403,AgriNica,gustavoemc,N/A,N/A,https://api.github.com/repos/gustavoemc/AgriNica,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1E8:3B38:2D884E:5E4F88:6522409E.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
404,plant_care_system,andyschaul,N/A,N/A,https://api.github.com/repos/andyschaul/plant_care_system,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1E4:3493:2716F1B:507809F:6522409E.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
405,Argreeno,nikmartin,N/A,N/A,https://api.github.com/repos/nikmartin/Argreeno,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C172:2772:28CB37D:53EA8C2:6522409F.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
406,Kenyas-Maize-Output-Time-Series,samkamau81,N/A,N/A,https://api.github.com/repos/samkamau81/Kenyas-Maize-Output-Time-Series,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1A9:8AB4:2998231:5568D5D:652240A0.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
407,IndianAgriculture,dbmptr,N/A,N/A,https://api.github.com/repos/dbmptr/IndianAgriculture,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C19B:458F:2C3DA25:5AB9C01:652240A0.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
408,YieldbookDatasetDrafts,Rothamsted-Ecoinformatics,N/A,N/A,https://api.github.com/repos/Rothamsted-Ecoinformatics/YieldbookDatasetDrafts,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C110:458F:2C3D938:5AB9A29:6522409F.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
409,AgriPlus-Website,ChepkemoiMaurene,N/A,N/A,https://api.github.com/repos/ChepkemoiMaurene/AgriPlus-Website,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C159:1CC6:2A3473A:569FC5E:652240A1.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
410,farmbuddy2023,tinkten7,N/A,N/A,https://api.github.com/repos/tinkten7/farmbuddy2023,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C15D:17C0:28FB61:557056:652240A2.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
411,PlantinoCare,mivige,N/A,N/A,https://api.github.com/repos/mivige/PlantinoCare,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1E6:7890:29DDC8:572857:652240A2.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
412,agroScraper,OKFNat,N/A,N/A,https://api.github.com/repos/OKFNat/agroScraper,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1D7:4C24:2B70F13:59202DB:652240A3.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
413,elbow,defenestrator,N/A,N/A,https://api.github.com/repos/defenestrator/elbow,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C159:1CC6:2A349A3:56A0171:652240A3.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
414,project-arture-node,ciartf,N/A,N/A,https://api.github.com/repos/ciartf/project-arture-node,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C144:6829:2E479A6:5EC6BB6:652240A4.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
415,agros_io,MrCerealKiller,N/A,N/A,https://api.github.com/repos/MrCerealKiller/agros_io,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1FE:41EE:27AF9EB:51AEB57:652240A5.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
416,Crop_Recommendation_System,ManyamSanjayKumarReddy,N/A,N/A,https://api.github.com/repos/ManyamSanjayKumarReddy/Crop_Recommendation_System,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C187:2772:28CB8CA:53EB3D8:652240A5.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
417,INRAE_template,super-lou,N/A,N/A,https://api.github.com/repos/super-lou/INRAE_template,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1B1:505E:2C6F31:5C1A75:652240A6.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
418,VineyardComparison,SpencerMartel,N/A,N/A,https://api.github.com/repos/SpencerMartel/VineyardComparison,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C15F:1E37:29C234:56DE30:652240A7.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
419,mschleuder,iameru,N/A,N/A,https://api.github.com/repos/iameru/mschleuder,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1AE:1CC6:2A34D19:56A08AD:652240A7.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
420,PlantinoCare,mivige,N/A,N/A,https://api.github.com/repos/mivige/PlantinoCare,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1E6:7890:29DDC8:572857:652240A2.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
421,AgriculturaVertical,ECFM-USAC,N/A,N/A,https://api.github.com/repos/ECFM-USAC/AgriculturaVertical,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1F1:38A4:2BBA926:59BB7CA:652240A3.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
422,rfdc,Nelson-Gon,N/A,N/A,https://api.github.com/repos/Nelson-Gon/rfdc,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1B8:1560:28DCEE7:53F5F99:652240A3.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
423,GDD,YunwooC,N/A,N/A,https://api.github.com/repos/YunwooC/GDD,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C138:1ECC:2A6704:583651:652240A5.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
424,Kaggle_Plant,aaiit,N/A,N/A,https://api.github.com/repos/aaiit/Kaggle_Plant,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C163:1E37:29BFC1:56D901:652240A4.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
425,fieldtrak,RB-Agriculture,N/A,N/A,https://api.github.com/repos/RB-Agriculture/fieldtrak,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C11F:1E37:29C0EA:56DB6C:652240A5.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
426,pewi3.0,LESEM-PEWI,N/A,N/A,https://api.github.com/repos/LESEM-PEWI/pewi3.0,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1F1:38A4:2BBAC5E:59BBE81:652240A6.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
427,diacol,ionosphere,N/A,N/A,https://api.github.com/repos/ionosphere/diacol,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1C7:4C24:2B7133B:5920B81:652240A8.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
428,agtech-sustainability-index,HarvestProfit,N/A,N/A,https://api.github.com/repos/HarvestProfit/agtech-sustainability-index,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C180:5B68:2A3935:57F874:652240A8.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
429,euraknos-ontology,MaastrichtU-IDS,N/A,N/A,https://api.github.com/repos/MaastrichtU-IDS/euraknos-ontology,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C103:3B38:2D919D:5E62FD:652240A9.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
430,farm-tracker,Dorcy64,N/A,N/A,https://api.github.com/repos/Dorcy64/farm-tracker,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1B2:5A86:2BA0C83:597FBD6:652240AA.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
431,ag-lapse,souravbhadra,N/A,N/A,https://api.github.com/repos/souravbhadra/ag-lapse,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1FC:5A71:304085C:62B4F7F:652240AA.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
432,e18-6sp-Disease-Monitoring-in-dairy-industry,cepdnaclk,N/A,N/A,https://api.github.com/repos/cepdnaclk/e18-6sp-Disease-Monitoring-in-dairy-industry,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1EA:500E:2A52F1A:56DD1E5:652240AB.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
433,Ripeness-Detector-for-Vegetables-and-Fruits,jayant1211,N/A,N/A,https://api.github.com/repos/jayant1211/Ripeness-Detector-for-Vegetables-and-Fruits,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1E1:6584:283ACAF:52B8871:652240AC.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
434,Tilly-FarmBot,specollective,N/A,N/A,https://api.github.com/repos/specollective/Tilly-FarmBot,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1BA:1560:28DD5C6:53F6E02:652240AC.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
435,UC-Small-Grain-Seeding-Rate-Calculator,Grain-Cropping-Systems-Lab,N/A,N/A,https://api.github.com/repos/Grain-Cropping-Systems-Lab/UC-Small-Grain-Seeding-Rate-Calculator,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C171:3493:2717B57:5079A41:652240AD.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
436,icta-2017,jaybaeta,N/A,N/A,https://api.github.com/repos/jaybaeta/icta-2017,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1C8:7A65:290619:557C7A:652240A8.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
437,LoRaHAT,Turta-io,N/A,N/A,https://api.github.com/repos/Turta-io/LoRaHAT,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1A9:8AB4:2998AB6:5569F05:652240A9.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
438,FABI,COS301-SE-2020,N/A,N/A,https://api.github.com/repos/COS301-SE-2020/FABI,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C10A:6584:283AB11:52B8516:652240AA.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
439,Potato-Assessment-Application,Team-Chorotega,N/A,N/A,https://api.github.com/repos/Team-Chorotega/Potato-Assessment-Application,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1AC:0208:2DE7975:5E050E6:652240AA.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
440,Livestock-Guarding-System,SilasPenda,N/A,N/A,https://api.github.com/repos/SilasPenda/Livestock-Guarding-System,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C13A:458F:2C3E403:5ABB083:652240AB.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
441,website-projects,underdog-pm,N/A,N/A,https://api.github.com/repos/underdog-pm/website-projects,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C189:6EA3:291128:5586CB:652240AC.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
442,corn-disease-recognition,adhiiisetiawan,N/A,N/A,https://api.github.com/repos/adhiiisetiawan/corn-disease-recognition,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1FE:41EE:27AFFDC:51AF7C4:652240AB.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
443,Taniland,NizarArdansyah,N/A,N/A,https://api.github.com/repos/NizarArdansyah/Taniland,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1B6:7D6D:29F765:57652B:652240AD.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
444,DATAWIZ,OLAMIDE100,N/A,N/A,https://api.github.com/repos/OLAMIDE100/DATAWIZ,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1C0:6C98:2A9A7D:589961:652240AD.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
445,Farmland_Values,emraher,N/A,N/A,https://api.github.com/repos/emraher/Farmland_Values,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1D0:24F2:299D514:556DFA8:652240AE.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
446,Greenhouse-climate-controler,palexp2,N/A,N/A,https://api.github.com/repos/palexp2/Greenhouse-climate-controler,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1F5:5A86:2BA1064:59803F6:652240AE.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
447,AgFun,essicolo,N/A,N/A,https://api.github.com/repos/essicolo/AgFun,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C123:4776:2B8F73:5A711A:652240AF.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
448,Fruchtfolge,fruchtfolge,N/A,N/A,https://api.github.com/repos/fruchtfolge/Fruchtfolge,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C167:11F8:2C3597:5BD163:652240B0.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
449,climada_papers_crop_production_risk_isimip,sameberenz,N/A,N/A,https://api.github.com/repos/sameberenz/climada_papers_crop_production_risk_isimip,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C166:3493:2717E76:507A0D3:652240B0.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
450,climate-change-droughts,ClimAg,N/A,N/A,https://api.github.com/repos/ClimAg/climate-change-droughts,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C10A:6584:283B16C:52B9268:652240B1.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
451,RPi-NDVI,benbrackenbury,N/A,N/A,https://api.github.com/repos/benbrackenbury/RPi-NDVI,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C13C:7E09:25F1157:4E3061D:652240B2.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
452,lean-agriculture,rmolabanti,N/A,N/A,https://api.github.com/repos/rmolabanti/lean-agriculture,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C110:458F:2C3EAD4:5ABBED4:652240B2.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
453,iseenationalseminar2023,ImmortalCunt,N/A,N/A,https://api.github.com/repos/ImmortalCunt/iseenationalseminar2023,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C147:6B96:285E5BA:5312F91:652240B2.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
454,yellow-rust-disease,igorkf,N/A,N/A,https://api.github.com/repos/igorkf/yellow-rust-disease,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1C8:7A65:290FC3:559093:652240B3.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
455,keukentafeltool,openearth,N/A,N/A,https://api.github.com/repos/openearth/keukentafeltool,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1DB:5A86:2BA1718:59811E0:652240B3.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
456,Farmability,darthbatman,N/A,N/A,https://api.github.com/repos/darthbatman/Farmability,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1C2:643D:2A1E26D:5660D49:652240B4.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
457,SMS-Egg-Logger,Skipper-is,N/A,N/A,https://api.github.com/repos/Skipper-is/SMS-Egg-Logger,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1CF:6B96:285E874:531351E:652240B5.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
458,tricot-training,AgrDataSci,N/A,N/A,https://api.github.com/repos/AgrDataSci/tricot-training,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C112:18E3:298497:566D2B:652240B5.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
459,agriculture,osu-cvl,N/A,N/A,https://api.github.com/repos/osu-cvl/agriculture,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1D8:458F:2C3EFDC:5ABC904:652240B5.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
460,Weed-Detector,undisputedcoder,N/A,N/A,https://api.github.com/repos/undisputedcoder/Weed-Detector,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C17A:6B96:285EA17:5313874:652240B6.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
461,Data-Science-On-Action,BastinRobin,N/A,https://github.com/BastinRobin/Data-Science-On-Action,https://api.github.com/repos/BastinRobin/Data-Science-On-Action,Applications of Data Science Across Different Domains,"# Data Science On Action
Applications of Data Science Across Different Domains**

## [Healthcare](healthcare/chapter.md)
- [Predict Presence Of Heart Disease Using Machine Learning](healthcare/chapter-1.md)
- [Hospital Readmission for Patients with Diabetes](healthcare/chapter-2.md)


## Pharmaceuticals

- Predict outcomes from fever or diverse(eg: animal testing) experiments to reduce experimental R&D costs and time to market.
- Predict risk of individual patient churn and optimal corrective strategy to maintain adherence.
- Identify target patient subgroups that are underserved (eg: not diagnosed) and recommend mitigation strategy.

## Manufacturing

- Predict failures and proactive maintenance of production and moving equipment
- Demand prediction of raw materials for future
  

## Retail

- Optimize in-store product assortment to maximize sales
- Personalize product recommendations and advertising to target individual consumers.


## Finance

- Personalize product offerings to target individual consumers based on multi-modal data (mobile, social media, locations, etc)
- Identify fraudulent activity using customer transactions and other relevant data.

  

## Agriculture

- Customize growing techniques specific to individual plot characteristics and relevant real-time data.
- Optimize price in real-time based on the future market, weather and other forecasts.

  

## Media

- Personalize advertising and recommendations to target individual consumer based on multi modal (mobile, social media, location..etc)
- Discover new trends in consumption patterns (eg: viral content)

  

## Telecom

- Predict lifetime value and risk of churn for individual customers.
- Personalize strategy to target individual citizens based on multi-modal data (social, mobile, location..etc)

  

  

## Transportation / Logistic

- Optimize pricing and scheduling based on real-time demand updates (eg: airlines, less than truckload shipping, mobility service)
- Optimize routing in realtime (eg: airline, logistics, last mile routing for complex events)

## Energy

- Replicate human-made decisions in control room environments to reduce cost and human error.
- Optimize energy scheduling/dispatching of power plants based on energy pricing, weathers, and other real-time data

  

## Public/ Social

- Optimize public resource allocation for urban development to improve quality of life (eg: reduce traffic, minimize pollution)
- Personalize public services to target individual citizens based on multi-modal data (social, mobile, location..etc)



## Authors
- Bastin Robins .J
- Dr. Vandana Bhagat
",1,1,2,0,agriculture,"[agriculture, ai, data-science, energy, finance, healthcare, machine-learning, manufacturing, media, pharma, public, retail]",00000
462,Projeto-Valdecir-Queiroz,LucasUriel2002,N/A,N/A,https://api.github.com/repos/LucasUriel2002/Projeto-Valdecir-Queiroz,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C19F:2EE5:285C179:53082D9:652240B7.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
463,ardn-terra-ref,cct-datascience,N/A,N/A,https://api.github.com/repos/cct-datascience/ardn-terra-ref,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1F1:38A4:2BBC204:59BEB23:652240B7.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
464,xfarm-data-app,flavio2018,N/A,N/A,https://api.github.com/repos/flavio2018/xfarm-data-app,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C106:5A86:2BA1CF4:5981DDE:652240B8.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
465,Lakshya-MIT.github.io,Lakshya-MIT,N/A,N/A,https://api.github.com/repos/Lakshya-MIT/Lakshya-MIT.github.io,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1DF:41EE:27B0D62:51B13D8:652240B9.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
466,udacity_capstone_farmland_avian_dataset,salamandersen93,N/A,N/A,https://api.github.com/repos/salamandersen93/udacity_capstone_farmland_avian_dataset,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C109:4771:2A3C5F:57C815:652240B9.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
467,AgAID-2023-Water-Challenge,hajin-park,N/A,N/A,https://api.github.com/repos/hajin-park/AgAID-2023-Water-Challenge,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C16A:336C:2CFBD28:5C378AA:652240BA.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
468,FarmHug,sahussawud,N/A,N/A,https://api.github.com/repos/sahussawud/FarmHug,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C133:11F8:2C40E3:5BE8AE:652240BB.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
469,agrikulturam-icj,fofajardo,N/A,N/A,https://api.github.com/repos/fofajardo/agrikulturam-icj,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1F0:9938:29B480B:559AF39:652240BA.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
470,435f534c-e49b-43c3-9bd6-3393100bef3f,eds-book-gallery,N/A,N/A,https://api.github.com/repos/eds-book-gallery/435f534c-e49b-43c3-9bd6-3393100bef3f,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C16B:38A4:2BBC83E:59BF7E5:652240BB.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
471,Krushak-Agricultural_Management_System,sanidhya2803,N/A,N/A,https://api.github.com/repos/sanidhya2803/Krushak-Agricultural_Management_System,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C197:1560:28DE6A2:53F90D1:652240BC.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
472,jupyter-notebooks,ClimAg,N/A,N/A,https://api.github.com/repos/ClimAg/jupyter-notebooks,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C119:2EE5:285C776:5308F4D:652240BC.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
473,CoRD,wswz115,N/A,N/A,https://api.github.com/repos/wswz115/CoRD,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C13B:17C0:291241:55A04A:652240BD.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
474,sinteagro,DarkTiengo,N/A,N/A,https://api.github.com/repos/DarkTiengo/sinteagro,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C100:336C:2CFC1DB:5C38230:652240BD.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
475,Factorio-Agriculture,Jan5366x,N/A,N/A,https://api.github.com/repos/Jan5366x/Factorio-Agriculture,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C133:11F8:2C444A:5BEF9F:652240BE.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
476,Greenhouses4.0-ML,VicenteYago,N/A,N/A,https://api.github.com/repos/VicenteYago/Greenhouses4.0-ML,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C108:5A71:30422A4:62B8599:652240BE.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
477,Mary-Wanyama.github.io,Mary-Wanyama,N/A,N/A,https://api.github.com/repos/Mary-Wanyama/Mary-Wanyama.github.io,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1AC:0208:2DE948D:5E088A7:652240BE.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
478,LVP-Basis,Sn1pescope,N/A,N/A,https://api.github.com/repos/Sn1pescope/LVP-Basis,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C15D:17C0:291470:55A4A3:652240BF.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
479,VINA,Blazekiller8,N/A,N/A,https://api.github.com/repos/Blazekiller8/VINA,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C11D:336C:2CFC4DE:5C38877:652240C0.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
480,aeps_open,CIAT-DAPA,N/A,N/A,https://api.github.com/repos/CIAT-DAPA/aeps_open,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1EF:1560:28DEB98:53F9ACD:652240C0.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
481,AI-In-Agriculture,saqib772,N/A,N/A,https://api.github.com/repos/saqib772/AI-In-Agriculture,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C12F:458F:2C3FD48:5ABE4A3:652240C1.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
482,Farmatica,KOSASIH,N/A,N/A,https://api.github.com/repos/KOSASIH/Farmatica,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C191:33EB:2BBB01:5AD6F3:652240C1.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
483,Crop-Yield-Prediction,ChaitanyaPandit1998,N/A,N/A,https://api.github.com/repos/ChaitanyaPandit1998/Crop-Yield-Prediction,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C12C:7A65:291FB1:55B18A:652240C2.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
484,PoBuCraw,herbkonik,N/A,N/A,https://api.github.com/repos/herbkonik/PoBuCraw,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1F8:11F8:2C48C6:5BF8F7:652240C3.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
485,nutcracker,hudsonburgess,N/A,N/A,https://api.github.com/repos/hudsonburgess/nutcracker,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C15A:68AA:2E8BC8D:5F4F4E8:652240C3.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
486,agenergyreport,webdevbc,N/A,N/A,https://api.github.com/repos/webdevbc/agenergyreport,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1D0:24F2:299EF3C:55715A3:652240C4.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
487,html_css_webpage,GParolini,N/A,N/A,https://api.github.com/repos/GParolini/html_css_webpage,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C16A:336C:2CFCA5D:5C39390:652240C4.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
488,oli.be,olivier5741,N/A,N/A,https://api.github.com/repos/olivier5741/oli.be,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1A6:505E:2C8D87:5C593F:652240C5.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
489,somalia,dubilava,N/A,N/A,https://api.github.com/repos/dubilava/somalia,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1AB:0208:2DE9D06:5E099F7:652240C6.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
490,Smart_Agriculture_System,SyedDaniyalAli,N/A,N/A,https://api.github.com/repos/SyedDaniyalAli/Smart_Agriculture_System,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C11E:2772:28CE038:53F0539:652240C6.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
491,AnalyticStreamFormater,GEOSYS,N/A,N/A,https://api.github.com/repos/GEOSYS/AnalyticStreamFormater,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C158:3119:2BE95EA:59FF3F2:652240C7.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
492,awesome-agribusiness,SelemaniLikoko,N/A,N/A,https://api.github.com/repos/SelemaniLikoko/awesome-agribusiness,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C181:38A4:2BBD9DA:59C1B3F:652240C8.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
493,WebApp-Based-Crop-recommendation-system,RanitSarkar,N/A,N/A,https://api.github.com/repos/RanitSarkar/WebApp-Based-Crop-recommendation-system,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C106:5A86:2BA2F03:5984313:652240C8.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
494,MPPTH,mathiasweidinger,N/A,N/A,https://api.github.com/repos/mathiasweidinger/MPPTH,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1CD:6584:283C984:52BC42E:652240C9.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
495,eagi,francismanlangit13,N/A,N/A,https://api.github.com/repos/francismanlangit13/eagi,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1D7:4C24:2B738BB:59258F1:652240CA.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
496,Wheatlo,mandeleung,N/A,N/A,https://api.github.com/repos/mandeleung/Wheatlo,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1D3:8AB4:299B64E:556F8A7:652240CA.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
497,rice-farming-with-crop-rotation,nafsi20,N/A,N/A,https://api.github.com/repos/nafsi20/rice-farming-with-crop-rotation,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C193:0BEC:29F395:575F43:652240CB.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
498,farm2farm.github.io,OneAutumnLeef,N/A,N/A,https://api.github.com/repos/OneAutumnLeef/farm2farm.github.io,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C14D:1CC6:2A3743C:56A58D9:652240CC.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
499,virginia-ag-census-2012,jalbertbowden,N/A,N/A,https://api.github.com/repos/jalbertbowden/virginia-ag-census-2012,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C11D:336C:2CFD184:5C3A2AD:652240CC.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
500,Map-Filter-QGIS,Carlitosh,N/A,N/A,https://api.github.com/repos/Carlitosh/Map-Filter-QGIS,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C186:4771:2A4CAB:57EA13:652240CD.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
501,JupyterDataScienceWorkflow,LaGuer,N/A,N/A,https://api.github.com/repos/LaGuer/JupyterDataScienceWorkflow,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C137:2E63:29C9F6:57016C:652240CD.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
502,cultio,balovbohdan,N/A,N/A,https://api.github.com/repos/balovbohdan/cultio,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C172:2772:28CE7FC:53F1531:652240CE.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
503,SickTrees,sfczekalski,N/A,N/A,https://api.github.com/repos/sfczekalski/SickTrees,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1FD:797D:280616:537874:652240CF.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
504,sentipy,UpstatePedro,N/A,N/A,https://api.github.com/repos/UpstatePedro/sentipy,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C108:5A71:30437D4:62BB111:652240CF.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
505,DataGang,mareloraby,N/A,N/A,https://api.github.com/repos/mareloraby/DataGang,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1FA:2EE5:285D8FC:530B3AC:652240D0.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
506,fundable,austin-sanga,N/A,N/A,https://api.github.com/repos/austin-sanga/fundable,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C142:7A65:292D83:55CE12:652240D1.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
507,AgroHarvest,jayantkp,N/A,N/A,https://api.github.com/repos/jayantkp/AgroHarvest,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C109:4771:2A5018:57F145:652240D1.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
508,jewishagriculture,lauraneckstein,N/A,N/A,https://api.github.com/repos/lauraneckstein/jewishagriculture,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C147:6B96:28607AC:5317580:652240D2.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
509,agriplus_website,sirsimions,N/A,N/A,https://api.github.com/repos/sirsimions/agriplus_website,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C156:3493:271A463:507EEF5:652240D3.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
510,CCAI-NeurIPS22-Personalizing,Agri-Hub,N/A,N/A,https://api.github.com/repos/Agri-Hub/CCAI-NeurIPS22-Personalizing,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1EE:1CC6:2A37BD3:56A689C:652240D3.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
511,pina-tech,alejvz,N/A,N/A,https://api.github.com/repos/alejvz/pina-tech,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C188:2EE5:285DC37:530BA45:652240D4.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
512,sistema_irrigacao,gustavofaquim,N/A,N/A,https://api.github.com/repos/gustavofaquim/sistema_irrigacao,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1D5:22D5:2F3F47B:60BF951:652240D4.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
513,a8dx.github.io,a8dx,N/A,N/A,https://api.github.com/repos/a8dx/a8dx.github.io,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1A1:8AB4:299C267:5571185:652240D5.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
514,RoyalAgro,AsankaRukshanRathnayake,N/A,N/A,https://api.github.com/repos/AsankaRukshanRathnayake/RoyalAgro,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1F8:11F8:2C5A33:5C1D29:652240D6.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
515,green-things,thomasstep,N/A,N/A,https://api.github.com/repos/thomasstep/green-things,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1A6:505E:2C9C3F:5C77EF:652240D6.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
516,agrodata,juanmicl,N/A,N/A,https://api.github.com/repos/juanmicl/agrodata,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1E5:38A4:2BBED42:59C4301:652240D7.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
517,2017-agra-aasr,mbacou,N/A,N/A,https://api.github.com/repos/mbacou/2017-agra-aasr,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1D5:22D5:2F3F760:60BFF33:652240D7.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
518,SmartFarmApp,ankurkiyada,N/A,N/A,https://api.github.com/repos/ankurkiyada/SmartFarmApp,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C176:33C6:29FA30A:564285A:652240D8.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
519,ryoochangwan.github.io,ryoochangwan,N/A,N/A,https://api.github.com/repos/ryoochangwan/ryoochangwan.github.io,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C19A:0BEC:2A0020:577954:652240D9.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
520,bohemian-avantgardeners-website,bartosjiri,N/A,N/A,https://api.github.com/repos/bartosjiri/bohemian-avantgardeners-website,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1D1:1E37:29F7A3:574C87:652240D9.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
521,agri-seasons,dogboy21,N/A,N/A,https://api.github.com/repos/dogboy21/agri-seasons,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1B2:5A86:2BA3FC3:59865D2:652240DA.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
522,AgriInputNetwork,rajDhamsaniya,N/A,N/A,https://api.github.com/repos/rajDhamsaniya/AgriInputNetwork,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C16A:336C:2CFDE6B:5C3BD34:652240DA.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
523,HackTaFerme-PetitsComptesEntreAgris,wizifarm-dev,N/A,N/A,https://api.github.com/repos/wizifarm-dev/HackTaFerme-PetitsComptesEntreAgris,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1C8:7A65:293711:55E1EA:652240D9.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
524,TFG,enrique95,N/A,N/A,https://api.github.com/repos/enrique95/TFG,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C16D:6EA3:293FE7:55E73A:652240DB.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
525,Social_Media_Engagement_Habits_of_Farmers,carter5,N/A,N/A,https://api.github.com/repos/carter5/Social_Media_Engagement_Habits_of_Farmers,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C130:3B38:2DC1B0:5EC69C:652240DB.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
526,Project-Clara,rahularepaka,N/A,N/A,https://api.github.com/repos/rahularepaka/Project-Clara,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1AF:643D:2A2136C:56671D6:652240DC.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
527,web_app_CSA_pindorama,renato-favarin,N/A,N/A,https://api.github.com/repos/renato-favarin/web_app_CSA_pindorama,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C14A:17C0:292B2B:55D420:652240DD.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
528,khetibadi,pri1311,N/A,N/A,https://api.github.com/repos/pri1311/khetibadi,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C134:18E3:29A307:56ACD5:652240DD.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
529,novatech-backend,sarkhanj,N/A,N/A,https://api.github.com/repos/sarkhanj/novatech-backend,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1BF:458F:2C41B47:5AC2293:652240DD.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
530,agro-waste,sureshlazaruspaul,N/A,N/A,https://api.github.com/repos/sureshlazaruspaul/agro-waste,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C10A:6584:283DAB1:52BE7DC:652240DE.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
531,Sistema-de-monitoreo-de-iluminacion-artificial,IICAFabLab,N/A,N/A,https://api.github.com/repos/IICAFabLab/Sistema-de-monitoreo-de-iluminacion-artificial,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1EF:1560:28E059C:53FD0E9:652240DF.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
532,smart-farming-platform,TanvirAnzum,N/A,N/A,https://api.github.com/repos/TanvirAnzum/smart-farming-platform,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1A9:8AB4:299CE4E:5572A18:652240E0.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
533,harvest-calendar-react,jgaehring,N/A,N/A,https://api.github.com/repos/jgaehring/harvest-calendar-react,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1F0:9938:29B6B99:559F908:652240E0.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
534,DroughtEffectsOnCorn,ovinueza,N/A,N/A,https://api.github.com/repos/ovinueza/DroughtEffectsOnCorn,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1D1:1E37:29FE9B:575B0C:652240E1.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
535,firect-android,mssandeepkamath,N/A,N/A,https://api.github.com/repos/mssandeepkamath/firect-android,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1D3:8AB4:299D06B:5572E61:652240E1.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
536,cutoff-bash,mskian,N/A,N/A,https://api.github.com/repos/mskian/cutoff-bash,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C101:0208:2DEBCCB:5E0DB80:652240E2.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
537,crop-leaf-disease-classification-segmentation-in-production,stipe-stanic,N/A,N/A,https://api.github.com/repos/stipe-stanic/crop-leaf-disease-classification-segmentation-in-production,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1F7:8AB4:299D1ED:5573167:652240E3.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
538,Agri-Assistant,Hariprasath12,N/A,N/A,https://api.github.com/repos/Hariprasath12/Agri-Assistant,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1DD:33EB:2BD40A:5B0BA7:652240E3.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
539,marsdiet,seanbhart,N/A,N/A,https://api.github.com/repos/seanbhart/marsdiet,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1B4:6EA3:29482A:55F87C:652240E4.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
540,2017-quadrat,mbacou,N/A,N/A,https://api.github.com/repos/mbacou/2017-quadrat,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C167:11F8:2C6701:5C37C6:652240E5.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
541,agriSense,ikshitiz,N/A,N/A,https://api.github.com/repos/ikshitiz/agriSense,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C155:47EA:26A728F:4F66C92:652240E5.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
542,BITU-2913-Workshop-1,Josie528,N/A,N/A,https://api.github.com/repos/Josie528/BITU-2913-Workshop-1,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1D7:4C24:2B751A4:5928CCF:652240E6.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
543,Prophet,larcc-group,N/A,N/A,https://api.github.com/repos/larcc-group/Prophet,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1E9:47EE:2B8F230:595C7F0:652240E7.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
544,CLIMATE_CHANGE,rstankovic,N/A,N/A,https://api.github.com/repos/rstankovic/CLIMATE_CHANGE,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C14E:3B38:2DCB66:5EDAC1:652240E7.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
545,Apogee-SQ-500,jweedmark,N/A,N/A,https://api.github.com/repos/jweedmark/Apogee-SQ-500,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C195:6C98:2ACE67:590530:652240E8.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
546,farmbot-school-frontend,incaya,N/A,N/A,https://api.github.com/repos/incaya/farmbot-school-frontend,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1E3:840D:293B862:54C2694:652240E8.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
547,AgriMarket,jha-vineet69,N/A,N/A,https://api.github.com/repos/jha-vineet69/AgriMarket,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C17D:33C6:29FB273:564485F:652240E9.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
548,Greenony,eng-ahmedmostafa,N/A,N/A,https://api.github.com/repos/eng-ahmedmostafa/Greenony,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1A0:53F5:2804DC0:5248ED9:652240EA.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
549,Images,GEOSYS,N/A,N/A,https://api.github.com/repos/GEOSYS/Images,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C173:1D49:2C3F7D9:5AB3779:652240EA.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
550,calc-vpd,elzup,N/A,N/A,https://api.github.com/repos/elzup/calc-vpd,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C19C:2EE5:285ED5A:530DE2F:652240EA.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
551,agropark.com,dracoignis-000,N/A,N/A,https://api.github.com/repos/dracoignis-000/agropark.com,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C101:0208:2DEC57B:5E0ED84:652240EB.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
552,cattle-herd-simulator,walimorris,N/A,N/A,https://api.github.com/repos/walimorris/cattle-herd-simulator,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1DB:5A86:2BA4F9F:59886B6:652240EB.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
553,LHMS,oracle002,N/A,N/A,https://api.github.com/repos/oracle002/LHMS,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1FF:4776:2BCC18:5AEE9F:652240EC.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
554,Agri-Assistant,Hariprasath12,N/A,N/A,https://api.github.com/repos/Hariprasath12/Agri-Assistant,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1DD:33EB:2BD40A:5B0BA7:652240E3.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
555,agriculture.chriscates.ca,ChrisCates,N/A,N/A,https://api.github.com/repos/ChrisCates/agriculture.chriscates.ca,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C14B:6EA3:29504B:560981:652240ED.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
556,marsdiet,seanbhart,N/A,N/A,https://api.github.com/repos/seanbhart/marsdiet,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1B4:6EA3:29482A:55F87C:652240E4.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
557,aeps_platform,CIAT-DAPA,N/A,N/A,https://api.github.com/repos/CIAT-DAPA/aeps_platform,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1CD:6584:283E705:52C01B7:652240ED.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
558,moa,vicelab,N/A,N/A,https://api.github.com/repos/vicelab/moa,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C18A:4771:2A6625:581F7A:652240EE.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
559,Andela-Week-1-Challenges,KESA24,N/A,https://github.com/KESA24/Andela-Week-1-Challenges,https://api.github.com/repos/KESA24/Andela-Week-1-Challenges,Building a Technical Documentation Page,"# Responsive Web Design Project - Build a Technical Documentation Page

**Objective: Build a project that is functionally similar to [this](https://shyakaster.github.io/FCCTDP/)**

**Fulfill the below user stories. Feel free to give it your own personal style.**

*Remember this project is meant only to measure the skills you acquired in your ALC journey and does not in anyway affect your qualification to enter into the Andela bootcamp.*

>You are required to use HTML, JavaScript, and CSS to complete this project. In your bootcamp journey you will be require to use vanilla HTML, CSS and JavaScript so some practice here would help you a lot.
> Happy coding!

**Follow the following user stories to complete your challenge**

**User Story #1:** I can see a main element with a corresponding id=""main-doc"", which contains the page's main content (technical documentation).

**User Story #2:** Within the #main-doc element, I can see several section elements, each with a class of main-section. There should be a minimum of 5.

**User Story #3:** The first element within each .main-section should be a header element which contains text that describes the topic of that section.

**User Story #4:** Each section element with the class of main-section should also have an id that corresponds with the text of each header contained within it. Any spaces should be replaced with underscores (e.g. The section that contains the header ""Javascript and Java"" should have a corresponding id=""Javascript_and_Java"").

**User Story #5:** The .main-section elements should contain at least 10 p elements total (not each).
  
**User Story #6:** The .main-section elements should contain at least 5 code elements total (not each).

**User Story #7:** The .main-section elements should contain at least 5 li items total (not each).

**User Story #8:** I can see a nav element with a corresponding id=""navbar"".

**User Story #9:** The navbar element should contain one header element which contains text that describes the topic of the technical documentation.

**User Story #10:** Additionally, the navbar should contain link (a) elements with the class of nav-link. There should be one for every element with the class main-section.

**User Story #11:** The header element in the navbar must come before any link (a) elements in the navbar.

**User Story #12:** Each element with the class of nav-link should contain text that corresponds to the header text within each section (e.g. if you have a ""Hello world"" section/header, your navbar should have an element which contains the text ""Hello world"").

**User Story #13:** When I click on a navbar element, the page should navigate to the corresponding section of the main-doc element (e.g. If I click on a nav-link element that contains the text ""Hello world"", the page navigates to a section element that has that id and contains the corresponding header.

**User Story #14:** On regular sized devices (laptops, desktops), the element with id=""navbar"" should be shown on the left side of the screen and should always be visible to the user.

**User Story #15:** My Technical Documentation page should use at least one media query.
",0,0,2,0,agriculture,"[agriculture, css, html, nav-element, nav-link, navbar, user-stories, waste-management]",00000
560,sagri.co,sagri,N/A,N/A,https://api.github.com/repos/sagri/sagri.co,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1AE:1CC6:2A39610:56A9F03:652240EF.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
561,farming-the-rio-grande-valley,alpual,N/A,N/A,https://api.github.com/repos/alpual/farming-the-rio-grande-valley,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1FA:2EE5:285F31A:530EA02:652240EF.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
562,agriculture_time_prediction,llcorrea,N/A,N/A,https://api.github.com/repos/llcorrea/agriculture_time_prediction,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1AC:0208:2DECD08:5E0FD09:652240F0.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
563,bfh-2021,thevenus,N/A,N/A,https://api.github.com/repos/thevenus/bfh-2021,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C19B:458F:2C43205:5AC514A:652240F0.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
564,api.ernte-teilen.org,milahu,N/A,N/A,https://api.github.com/repos/milahu/api.ernte-teilen.org,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C134:18E3:29B1CE:56CBC8:652240F1.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
565,FRTL,caymanjacob,N/A,N/A,https://api.github.com/repos/caymanjacob/FRTL,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1AE:1CC6:2A398FA:56AA528:652240F2.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
566,TerrafarmsxAgricamp-Papayan,Terrafarms,N/A,N/A,https://api.github.com/repos/Terrafarms/TerrafarmsxAgricamp-Papayan,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C18F:3493:271C114:5082AC5:652240F2.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
567,darsa-group.github.io,darsa-group,N/A,N/A,https://api.github.com/repos/darsa-group/darsa-group.github.io,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1F0:9938:29B7ECE:55A209F:652240F3.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
568,psm-api-to-sqlite,dredlich,N/A,N/A,https://api.github.com/repos/dredlich/psm-api-to-sqlite,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1F6:797D:2823CE:53B68C:652240F3.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
569,DSFW_Peanuts,advancedag,N/A,N/A,https://api.github.com/repos/advancedag/DSFW_Peanuts,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1C4:643D:2A224AC:566954C:652240ED.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
570,marsdiet,seanbhart,N/A,N/A,https://api.github.com/repos/seanbhart/marsdiet,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1B4:6EA3:29482A:55F87C:652240E4.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
571,aeps_platform,CIAT-DAPA,N/A,N/A,https://api.github.com/repos/CIAT-DAPA/aeps_platform,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1CD:6584:283E705:52C01B7:652240ED.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
572,moa,vicelab,N/A,N/A,https://api.github.com/repos/vicelab/moa,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C18A:4771:2A6625:581F7A:652240EE.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
573,Andela-Week-1-Challenges,KESA24,N/A,https://github.com/KESA24/Andela-Week-1-Challenges,https://api.github.com/repos/KESA24/Andela-Week-1-Challenges,Building a Technical Documentation Page,"# Responsive Web Design Project - Build a Technical Documentation Page

**Objective: Build a project that is functionally similar to [this](https://shyakaster.github.io/FCCTDP/)**

**Fulfill the below user stories. Feel free to give it your own personal style.**

*Remember this project is meant only to measure the skills you acquired in your ALC journey and does not in anyway affect your qualification to enter into the Andela bootcamp.*

>You are required to use HTML, JavaScript, and CSS to complete this project. In your bootcamp journey you will be require to use vanilla HTML, CSS and JavaScript so some practice here would help you a lot.
> Happy coding!

**Follow the following user stories to complete your challenge**

**User Story #1:** I can see a main element with a corresponding id=""main-doc"", which contains the page's main content (technical documentation).

**User Story #2:** Within the #main-doc element, I can see several section elements, each with a class of main-section. There should be a minimum of 5.

**User Story #3:** The first element within each .main-section should be a header element which contains text that describes the topic of that section.

**User Story #4:** Each section element with the class of main-section should also have an id that corresponds with the text of each header contained within it. Any spaces should be replaced with underscores (e.g. The section that contains the header ""Javascript and Java"" should have a corresponding id=""Javascript_and_Java"").

**User Story #5:** The .main-section elements should contain at least 10 p elements total (not each).
  
**User Story #6:** The .main-section elements should contain at least 5 code elements total (not each).

**User Story #7:** The .main-section elements should contain at least 5 li items total (not each).

**User Story #8:** I can see a nav element with a corresponding id=""navbar"".

**User Story #9:** The navbar element should contain one header element which contains text that describes the topic of the technical documentation.

**User Story #10:** Additionally, the navbar should contain link (a) elements with the class of nav-link. There should be one for every element with the class main-section.

**User Story #11:** The header element in the navbar must come before any link (a) elements in the navbar.

**User Story #12:** Each element with the class of nav-link should contain text that corresponds to the header text within each section (e.g. if you have a ""Hello world"" section/header, your navbar should have an element which contains the text ""Hello world"").

**User Story #13:** When I click on a navbar element, the page should navigate to the corresponding section of the main-doc element (e.g. If I click on a nav-link element that contains the text ""Hello world"", the page navigates to a section element that has that id and contains the corresponding header.

**User Story #14:** On regular sized devices (laptops, desktops), the element with id=""navbar"" should be shown on the left side of the screen and should always be visible to the user.

**User Story #15:** My Technical Documentation page should use at least one media query.
",0,0,2,0,agriculture,"[agriculture, css, html, nav-element, nav-link, navbar, user-stories, waste-management]",00000
574,sagri.co,sagri,N/A,N/A,https://api.github.com/repos/sagri/sagri.co,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1AE:1CC6:2A39610:56A9F03:652240EF.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
575,farming-the-rio-grande-valley,alpual,N/A,N/A,https://api.github.com/repos/alpual/farming-the-rio-grande-valley,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1FA:2EE5:285F31A:530EA02:652240EF.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
576,agriculture_time_prediction,llcorrea,N/A,N/A,https://api.github.com/repos/llcorrea/agriculture_time_prediction,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1AC:0208:2DECD08:5E0FD09:652240F0.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
577,bfh-2021,thevenus,N/A,N/A,https://api.github.com/repos/thevenus/bfh-2021,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C19B:458F:2C43205:5AC514A:652240F0.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
578,api.ernte-teilen.org,milahu,N/A,N/A,https://api.github.com/repos/milahu/api.ernte-teilen.org,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C134:18E3:29B1CE:56CBC8:652240F1.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
579,FRTL,caymanjacob,N/A,N/A,https://api.github.com/repos/caymanjacob/FRTL,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1AE:1CC6:2A398FA:56AA528:652240F2.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
580,TerrafarmsxAgricamp-Papayan,Terrafarms,N/A,N/A,https://api.github.com/repos/Terrafarms/TerrafarmsxAgricamp-Papayan,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C18F:3493:271C114:5082AC5:652240F2.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
581,darsa-group.github.io,darsa-group,N/A,N/A,https://api.github.com/repos/darsa-group/darsa-group.github.io,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1F0:9938:29B7ECE:55A209F:652240F3.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
582,psm-api-to-sqlite,dredlich,N/A,N/A,https://api.github.com/repos/dredlich/psm-api-to-sqlite,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1F6:797D:2823CE:53B68C:652240F3.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
583,vorgewende,chrispahm,N/A,N/A,https://api.github.com/repos/chrispahm/vorgewende,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C13A:458F:2C43774:5AC5C84:652240F4.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
584,foodstats-basel,foodopendata,N/A,N/A,https://api.github.com/repos/foodopendata/foodstats-basel,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C183:1CC6:2A39C72:56AAC38:652240F5.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
585,Wheat,jlikhuva,N/A,N/A,https://api.github.com/repos/jlikhuva/Wheat,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C12D:2E63:29EB95:574781:652240F5.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
586,jester,cmutel,N/A,N/A,https://api.github.com/repos/cmutel/jester,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1E8:3B38:2DD967:5EF7D6:652240F6.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
587,dashboard,Adalitix,N/A,N/A,https://api.github.com/repos/Adalitix/dashboard,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C124:1D49:2C406B9:5AB55F6:652240F6.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
588,IrrigationRecs,KSUSTL,N/A,N/A,https://api.github.com/repos/KSUSTL/IrrigationRecs,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C166:3493:271C605:50834D9:652240F6.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
589,SVA,gmonteith,N/A,N/A,https://api.github.com/repos/gmonteith/SVA,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C141:2E63:29ED41:574AF5:652240F7.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
590,wheat-forecasting,matthewfarant,N/A,N/A,https://api.github.com/repos/matthewfarant/wheat-forecasting,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C16A:336C:2CFFFE6:5C4026E:652240F8.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
591,agriplus2,Joseph-kirigo,N/A,N/A,https://api.github.com/repos/Joseph-kirigo/agriplus2,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C147:6B96:2862EE9:531C6D1:652240F8.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
592,RiceReseqCNV,zhuochenbioinfo,N/A,N/A,https://api.github.com/repos/zhuochenbioinfo/RiceReseqCNV,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1A3:47EA:26A8730:4F6970C:652240F9.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
593,Leaf-Detection-YOLOv7x,doguilmak,N/A,N/A,https://api.github.com/repos/doguilmak/Leaf-Detection-YOLOv7x,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1D5:22D5:2F41B82:60C4A13:652240F9.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
594,Indian-Commodity-Prices,Rutwik1000,N/A,N/A,https://api.github.com/repos/Rutwik1000/Indian-Commodity-Prices,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C11D:336C:2D00241:5C4071B:652240FA.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
595,Agricon,michaelmuthomi,N/A,N/A,https://api.github.com/repos/michaelmuthomi/Agricon,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C108:5A71:30467CA:62C13B3:652240FA.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
596,Harvest-Management-System,lihini223,N/A,N/A,https://api.github.com/repos/lihini223/Harvest-Management-System,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C137:2E63:29F058:575150:652240FA.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
597,SmartGreenhouse_FYP,BenRGH,N/A,N/A,https://api.github.com/repos/BenRGH/SmartGreenhouse_FYP,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C164:7E09:25F6307:4E3AEC5:652240FB.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
598,SlakeItEasy,Soil-Health-Institute,N/A,N/A,https://api.github.com/repos/Soil-Health-Institute/SlakeItEasy,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1D2:6D2F:2DF9CF:5F60E9:652240FC.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
599,Gnomee-Web-Application,DESIRA-Project,N/A,N/A,https://api.github.com/repos/DESIRA-Project/Gnomee-Web-Application,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C133:11F8:2C7DD5:5C6723:652240FC.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
600,Power-Mate,gingik,N/A,N/A,https://api.github.com/repos/gingik/Power-Mate,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1A3:47EA:26A8B61:4F69FBC:652240FD.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
601,AgriDex-Beckn,Konnect-Agri,N/A,N/A,https://api.github.com/repos/Konnect-Agri/AgriDex-Beckn,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1CD:6584:283F64B:52C214F:652240FD.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
602,farm-manager,hemlockcreek,N/A,N/A,https://api.github.com/repos/hemlockcreek/farm-manager,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C190:2EE5:28602D2:5310A8C:652240FE.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
603,Solar-Energetic-Agriculture-Automation,ozgurkavak,N/A,N/A,https://api.github.com/repos/ozgurkavak/Solar-Energetic-Agriculture-Automation,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C11E:2772:28D1AB0:53F7D93:652240FF.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
604,PoPSS-R-Legacy,ncsu-landscape-dynamics,N/A,N/A,https://api.github.com/repos/ncsu-landscape-dynamics/PoPSS-R-Legacy,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1EC:17C0:29465C:560D11:652240FF.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
605,Smart-Agriculture-Technology,Anuraj99,N/A,N/A,https://api.github.com/repos/Anuraj99/Smart-Agriculture-Technology,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C10E:24F2:29A31C0:5579EA0:65224100.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
606,bfh-2021,bglyvv,N/A,N/A,https://api.github.com/repos/bglyvv/bfh-2021,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1CC:33C6:29FD03C:5648590:65224100.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
607,agricultural-robotics,daviderizzo-phd,N/A,N/A,https://api.github.com/repos/daviderizzo-phd/agricultural-robotics,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1B4:6EA3:296676:563662:65224101.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
608,GravepineDiseaseDetection,andmon97,N/A,N/A,https://api.github.com/repos/andmon97/GravepineDiseaseDetection,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1CB:2772:28D1D9C:53F83A5:65224102.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
609,Agricultural-Production-Optimization-Engine,Shriraj1996,N/A,N/A,https://api.github.com/repos/Shriraj1996/Agricultural-Production-Optimization-Engine,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1E5:38A4:2BC28D1:59CBD30:65224102.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
610,KisanMitr-Dummy,devgru-3-2,N/A,N/A,https://api.github.com/repos/devgru-3-2/KisanMitr-Dummy,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C19F:2EE5:2860735:5311383:65224103.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
611,hardy,SethNC,N/A,N/A,https://api.github.com/repos/SethNC/hardy,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1A5:5B68:2A8E52:58A95A:65224104.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
612,tambua-shamba,MarvinKweyu,N/A,N/A,https://api.github.com/repos/MarvinKweyu/tambua-shamba,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C176:33C6:29FD3A0:5648CB0:65224104.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
613,Wang_2023_TAAG,Illustratien,N/A,N/A,https://api.github.com/repos/Illustratien/Wang_2023_TAAG,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1A6:505E:2CC8F3:5CD441:65224105.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
614,sorghum_snp_prediction,SLUVisLab,N/A,N/A,https://api.github.com/repos/SLUVisLab/sorghum_snp_prediction,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1EB:2E63:29FA1C:5765AF:65224105.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
615,allegheny-food,richiebful,N/A,N/A,https://api.github.com/repos/richiebful/allegheny-food,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1E1:6584:283FD28:52C2FD3:65224106.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
616,sarai-v2-old,project-sarai,N/A,N/A,https://api.github.com/repos/project-sarai/sarai-v2-old,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1DE:3B38:2DE84B:5F16BC:65224107.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
617,Agri-analytics,Agrivatehq,N/A,N/A,https://api.github.com/repos/Agrivatehq/Agri-analytics,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C10A:6584:283FE28:52C31BA:65224107.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
618,economic-game,pb10005,N/A,N/A,https://api.github.com/repos/pb10005/economic-game,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C189:6EA3:296CDC:564392:65224108.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
619,bohemian-avantgardeners-project,bartosjiri,N/A,N/A,https://api.github.com/repos/bartosjiri/bohemian-avantgardeners-project,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C149:11F8:2C8923:5C7EBA:65224109.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
620,Buy-Green-Website,Greenie-Beenie,N/A,N/A,https://api.github.com/repos/Greenie-Beenie/Buy-Green-Website,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1E4:3493:271D825:5085A8F:65224109.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
621,Hulu-Tani-Final-Project,Excellent-Echo,N/A,N/A,https://api.github.com/repos/Excellent-Echo/Hulu-Tani-Final-Project,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C124:1D49:2C41F57:5AB88A1:6522410A.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
622,AgriculturalLandManagementSystem,Lancer59,N/A,N/A,https://api.github.com/repos/Lancer59/AgriculturalLandManagementSystem,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1CB:2772:28D2666:53F95DF:6522410A.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
623,public-datasets,CERP,N/A,N/A,https://api.github.com/repos/CERP/public-datasets,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C197:1560:28E2CD5:5402267:6522410B.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
624,Agriplus,Joseph-kirigo,N/A,N/A,https://api.github.com/repos/Joseph-kirigo/Agriplus,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1C3:53F5:2806DDC:524D180:6522410C.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
625,Climate-Collective-Hackathon--Crop-Recommendation-System,kinsteve,N/A,N/A,https://api.github.com/repos/kinsteve/Climate-Collective-Hackathon--Crop-Recommendation-System,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C11B:4776:2BEC42:5B312D:6522410C.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
626,FarmersKingdom,hmjahid,N/A,N/A,https://api.github.com/repos/hmjahid/FarmersKingdom,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1DB:5A86:2BA7387:598D0DF:6522410D.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
627,gecoerp_agriculture,gecoerp,N/A,N/A,https://api.github.com/repos/gecoerp/gecoerp_agriculture,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C165:38A4:2BC3629:59CD8BC:6522410D.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
628,e-tinga,WilsonKinyua,N/A,N/A,https://api.github.com/repos/WilsonKinyua/e-tinga,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1D4:8AF9:6EF4DA:E56586:6522410E.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
629,FPO_Work,meamanparmar,N/A,N/A,https://api.github.com/repos/meamanparmar/FPO_Work,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C154:73C7:6FFDF8:E739EB:6522410F.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
630,municipalagricultureoffice,francismanlangit13,N/A,N/A,https://api.github.com/repos/francismanlangit13/municipalagricultureoffice,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C12C:5AB9:2C343C7:5A8DB7E:6522410F.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
631,Farmly.AI,akhilesh-kanmanthreddy,N/A,N/A,https://api.github.com/repos/akhilesh-kanmanthreddy/Farmly.AI,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1A4:3F63:2E65945:5EEAE63:6522410F.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
632,awqp-mountain-meadow-spectral-analysis,CSU-Agricultural-Water-Quality-Program,N/A,N/A,https://api.github.com/repos/CSU-Agricultural-Water-Quality-Program/awqp-mountain-meadow-spectral-analysis,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C183:3BF5:728C0C:EC3CCB:65224110.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
633,impacted-areas-identification,GEOSYS,N/A,N/A,https://api.github.com/repos/GEOSYS/impacted-areas-identification,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C119:2CBC:763B45:F3A82C:65224110.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
634,Quantifying-drought-sensitivity-in-coconut-agriculture,tomversluys,N/A,N/A,https://api.github.com/repos/tomversluys/Quantifying-drought-sensitivity-in-coconut-agriculture,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1DA:178A:2C842FD:5B22964:65224111.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
635,Proyecto-Fondas,HembergerV,N/A,N/A,https://api.github.com/repos/HembergerV/Proyecto-Fondas,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C166:092A:6F7836:E66120:65224111.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
636,eexp,adhollander,N/A,N/A,https://api.github.com/repos/adhollander/eexp,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C10E:1E3B:2FB3C26:6177157:65224112.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
637,AgroSistemaExperto,MartinCJ08,N/A,N/A,https://api.github.com/repos/MartinCJ08/AgroSistemaExperto,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C12C:5AB9:2C34741:5A8E2B2:65224113.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
638,BI-and-DW-in-Agrarian-Sector,Lubrum,N/A,N/A,https://api.github.com/repos/Lubrum/BI-and-DW-in-Agrarian-Sector,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C127:784E:747D6D:F07C32:65224113.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
639,Agriculture_10Be_simulator,angelrodes,N/A,N/A,https://api.github.com/repos/angelrodes/Agriculture_10Be_simulator,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C18E:6EE6:6CECEB:E138AD:65224114.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
640,CropWeedClassification,mepix,N/A,N/A,https://api.github.com/repos/mepix/CropWeedClassification,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C180:6A74:1A1D5C7:35C90C0:65224114.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
641,Projeto_IoT,walter-retzer,N/A,N/A,https://api.github.com/repos/walter-retzer/Projeto_IoT,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C17E:4E78:6E4619:E3EB46:65224115.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
642,CuttingDownTrees,darrennorris,N/A,N/A,https://api.github.com/repos/darrennorris/CuttingDownTrees,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1E4:4179:2DD357D:5DC7CA0:65224116.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
643,AgriPlus,gibsonbett,N/A,N/A,https://api.github.com/repos/gibsonbett/AgriPlus,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1A5:7AEF:2DBB7DD:5D842C5:65224117.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
644,annndata_secret-coders,NitishBharat,N/A,N/A,https://api.github.com/repos/NitishBharat/annndata_secret-coders,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1C8:1364:749EA4:F08EF8:65224117.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
645,agriculture_dashboard_peru,ivanvallenas,N/A,N/A,https://api.github.com/repos/ivanvallenas/agriculture_dashboard_peru,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C14F:607B:772A2D:F57F2C:65224118.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
646,akuafulink,amenline,N/A,N/A,https://api.github.com/repos/amenline/akuafulink,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1BB:7AEF:2DBB97F:5D84622:65224118.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
647,es3307-amf-rice,wgohome,N/A,N/A,https://api.github.com/repos/wgohome/es3307-amf-rice,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1DD:1F34:1B8CAEF:389EE64:65224119.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
648,rice-pilaf,bioinfodlsu,N/A,N/A,https://api.github.com/repos/bioinfodlsu/rice-pilaf,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1DF:309A:2E47BC0:5E6BEE6:6522411A.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
649,allotment_gardening,ecofrugalism,N/A,N/A,https://api.github.com/repos/ecofrugalism/allotment_gardening,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1E9:87DB:2FE2DC9:61C87A5:6522411A.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
650,2017-agresults,mbacou,N/A,N/A,https://api.github.com/repos/mbacou/2017-agresults,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C15D:29CE:32E1877:67D670A:6522411B.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
651,Rice_yield_predictor,sudhanshusks,N/A,N/A,https://api.github.com/repos/sudhanshusks/Rice_yield_predictor,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C17E:4E78:6E4BB2:E3F726:6522411B.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
652,Ulavar,OberoiSahaj,N/A,N/A,https://api.github.com/repos/OberoiSahaj/Ulavar,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1A5:7AEF:2DBBCD5:5D84D26:6522411C.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
653,AgroHacks-UI-react-native,manishdhakal,N/A,N/A,https://api.github.com/repos/manishdhakal/AgroHacks-UI-react-native,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1CB:41B1:6F6D0A:E68A34:6522411D.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
654,Projeto-Acan,tomaz-suller,N/A,N/A,https://api.github.com/repos/tomaz-suller/Projeto-Acan,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C18D:4E78:6E4D4D:E3FA64:6522411D.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
655,redeagroflorestal,CultivarDigital,N/A,N/A,https://api.github.com/repos/CultivarDigital/redeagroflorestal,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C193:2CBC:764958:F3C54C:6522411E.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
656,KisanCare,shubhamjain02,N/A,N/A,https://api.github.com/repos/shubhamjain02/KisanCare,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1CA:178A:2C84F7F:5B2435C:6522411E.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
657,LocalSpeciesCatalogue_App,KrishnaTO,N/A,N/A,https://api.github.com/repos/KrishnaTO/LocalSpeciesCatalogue_App,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1AE:607B:773261:F59014:6522411F.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
658,agri-ticket-map,thstarshine,N/A,N/A,https://api.github.com/repos/thstarshine/agri-ticket-map,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1FD:5934:28492EE:52D625E:65224120.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
659,Geospatial,maria-sua,N/A,N/A,https://api.github.com/repos/maria-sua/Geospatial,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1DF:309A:2E4812E:5E6CA2D:65224120.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
660,Crop-Production-Insights-India-EDA-,L98S,N/A,N/A,https://api.github.com/repos/L98S/Crop-Production-Insights-India-EDA-,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C127:784E:748878:F09304:6522411E.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
661,Contouring-Plants,AarjavJain101,N/A,N/A,https://api.github.com/repos/AarjavJain101/Contouring-Plants,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C180:6A74:1A1DDD5:35CA15B:6522411D.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
662,AgriculturalFarm,Vaishnavipurkar,N/A,N/A,https://api.github.com/repos/Vaishnavipurkar/AgriculturalFarm,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C197:64D2:712D67:E99F4D:6522411E.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
663,IrrigationIntelligente,T0uchM3,N/A,N/A,https://api.github.com/repos/T0uchM3/IrrigationIntelligente,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C11E:3BF5:729A9F:EC5B17:65224120.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
664,bw_hestia_bridge,brightway-lca,N/A,N/A,https://api.github.com/repos/brightway-lca/bw_hestia_bridge,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1AB:7AEF:2DBBF7C:5D852B9:6522411F.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
665,allotment_gardening,ecofrugalism,N/A,N/A,https://api.github.com/repos/ecofrugalism/allotment_gardening,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1E9:87DB:2FE2DC9:61C87A5:6522411A.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
666,2017-agresults,mbacou,N/A,N/A,https://api.github.com/repos/mbacou/2017-agresults,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C15D:29CE:32E1877:67D670A:6522411B.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
667,Rice_yield_predictor,sudhanshusks,N/A,N/A,https://api.github.com/repos/sudhanshusks/Rice_yield_predictor,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C17E:4E78:6E4BB2:E3F726:6522411B.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
668,Ulavar,OberoiSahaj,N/A,N/A,https://api.github.com/repos/OberoiSahaj/Ulavar,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1A5:7AEF:2DBBCD5:5D84D26:6522411C.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
669,AgroHacks-UI-react-native,manishdhakal,N/A,N/A,https://api.github.com/repos/manishdhakal/AgroHacks-UI-react-native,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1CB:41B1:6F6D0A:E68A34:6522411D.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
670,Projeto-Acan,tomaz-suller,N/A,N/A,https://api.github.com/repos/tomaz-suller/Projeto-Acan,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C18D:4E78:6E4D4D:E3FA64:6522411D.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
671,redeagroflorestal,CultivarDigital,N/A,N/A,https://api.github.com/repos/CultivarDigital/redeagroflorestal,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C193:2CBC:764958:F3C54C:6522411E.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
672,KisanCare,shubhamjain02,N/A,N/A,https://api.github.com/repos/shubhamjain02/KisanCare,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1CA:178A:2C84F7F:5B2435C:6522411E.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
673,LocalSpeciesCatalogue_App,KrishnaTO,N/A,N/A,https://api.github.com/repos/KrishnaTO/LocalSpeciesCatalogue_App,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1AE:607B:773261:F59014:6522411F.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
674,agri-ticket-map,thstarshine,N/A,N/A,https://api.github.com/repos/thstarshine/agri-ticket-map,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1FD:5934:28492EE:52D625E:65224120.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
675,Geospatial,maria-sua,N/A,N/A,https://api.github.com/repos/maria-sua/Geospatial,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1DF:309A:2E4812E:5E6CA2D:65224120.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
676,IoT-Project-on-Agricultural-Data-Monitoring,Ariful17,N/A,N/A,https://api.github.com/repos/Ariful17/IoT-Project-on-Agricultural-Data-Monitoring,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C179:1299:9CFDE6:1445002:65224118.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
677,laughing-bassoon.io,SanT-Y,N/A,N/A,https://api.github.com/repos/SanT-Y/laughing-bassoon.io,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C154:73C7:7005E6:E74A82:65224118.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
678,kaprella-api,bronsonholden,N/A,N/A,https://api.github.com/repos/bronsonholden/kaprella-api,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C118:0C72:70E2F1:E92F81:65224119.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
679,-bhoomi,Sonaaa10,N/A,N/A,https://api.github.com/repos/Sonaaa10/-bhoomi,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C128:73C7:700742:E74D6E:6522411A.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
680,FarmLand,varun-official,N/A,N/A,https://api.github.com/repos/varun-official/FarmLand,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1D3:178A:2C84B30:5B23A73:6522411A.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
681,indic-agri-PaLM2,dnezan,N/A,N/A,https://api.github.com/repos/dnezan/indic-agri-PaLM2,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C10D:7B5B:719616:EA344C:6522411B.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
682,YieldScapeUSA,SamMajumder,N/A,N/A,https://api.github.com/repos/SamMajumder/YieldScapeUSA,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C181:58D0:7592EE:F1FC0F:6522411B.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
683,Avocado-Yield-Prediction,Luissalazarsalinas,N/A,N/A,https://api.github.com/repos/Luissalazarsalinas/Avocado-Yield-Prediction,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1E9:87DB:2FE3059:61C8CD5:6522411D.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
684,n,herdav,N/A,N/A,https://api.github.com/repos/herdav/n,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C182:1F34:1B8CE20:389F511:6522411C.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
685,AgriMarketResearch,grupodeinnovacion,N/A,N/A,https://api.github.com/repos/grupodeinnovacion/AgriMarketResearch,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C128:73C7:700C45:E757AE:65224120.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
686,Smart-ROI,deshario,N/A,N/A,https://api.github.com/repos/deshario/Smart-ROI,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1A3:505E:74EB2E:F0FEB3:65224121.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
687,VineyardManager,vvyanchenko,N/A,N/A,https://api.github.com/repos/vvyanchenko/VineyardManager,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C199:4179:2DD4048:5DC9319:65224122.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
688,raw-food-forest-homepage,Dima-369,N/A,N/A,https://api.github.com/repos/Dima-369/raw-food-forest-homepage,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C155:7B5B:719C14:EA40CB:65224122.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
689,methanisation,Carto-NA,N/A,N/A,https://api.github.com/repos/Carto-NA/methanisation,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1B6:1E3B:2FB4D70:6179508:65224123.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
690,Aditi_agriculture_nutrition,adgautam,N/A,N/A,https://api.github.com/repos/adgautam/Aditi_agriculture_nutrition,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C140:4F4C:70CC55:E8C697:65224123.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
691,Identify-Diseases-in-Crops-leaf,ashen007,N/A,N/A,https://api.github.com/repos/ashen007/Identify-Diseases-in-Crops-leaf,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C16A:58D0:759C2D:F20F2A:65224124.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
692,thesis,kamataryo,N/A,N/A,https://api.github.com/repos/kamataryo/thesis,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C160:6EE6:6CFB09:E155F2:65224125.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
693,frantz93.github.io,frantz93,N/A,N/A,https://api.github.com/repos/frantz93/frantz93.github.io,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C106:3F63:2E66C94:5EED680:65224125.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
694,MSC_DA_CA2,2020491,N/A,N/A,https://api.github.com/repos/2020491/MSC_DA_CA2,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1AC:3819:1AD7A8A:3732566:65224125.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
695,LandSupply,MatRit,N/A,N/A,https://api.github.com/repos/MatRit/LandSupply,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C17B:29CE:32E23DB:67D7EAA:65224126.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
696,agro.ai,godwins3,N/A,N/A,https://api.github.com/repos/godwins3/agro.ai,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C159:37E7:2CF7DFC:5C161A7:65224127.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
697,sensord,milgradesec,N/A,N/A,https://api.github.com/repos/milgradesec/sensord,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C171:05EF:6D1A7A:E19C82:65224127.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
698,Wheat-Detector,akihiko47,N/A,N/A,https://api.github.com/repos/akihiko47/Wheat-Detector,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1CF:1F34:1B8DA06:38A0DBB:65224128.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
699,norman,sumansai14,N/A,N/A,https://api.github.com/repos/sumansai14/norman,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1CE:3F63:2E67000:5EEDDC0:65224128.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
700,srk-agritech.github.io,srk-agritech,N/A,N/A,https://api.github.com/repos/srk-agritech/srk-agritech.github.io,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C118:0C72:70F0ED:E94CAF:65224129.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
701,coopsahu.github.io,coopsahu,N/A,N/A,https://api.github.com/repos/coopsahu/coopsahu.github.io,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C144:5934:2849D27:52D7775:6522412A.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
702,mcrops,raikel,N/A,N/A,https://api.github.com/repos/raikel/mcrops,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1CA:178A:2C85C12:5B25D85:6522412A.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
703,Plastic_mulch-soil_properties,NGBeriot,N/A,N/A,https://api.github.com/repos/NGBeriot/Plastic_mulch-soil_properties,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1BD:178A:2C85CEC:5B25F57:6522412B.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
704,An-lisisCultivo,DaveAlsina,N/A,N/A,https://api.github.com/repos/DaveAlsina/An-lisisCultivo,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1CB:41B1:6F7D23:E6AB74:6522412B.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
705,Forecasting-Using-R-Shiny,TeamOS-Bangkit,N/A,N/A,https://api.github.com/repos/TeamOS-Bangkit/Forecasting-Using-R-Shiny,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C133:5F41:6E31A3:E3CF62:6522412C.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
706,project-agrohabit,betaoverflow,N/A,N/A,https://api.github.com/repos/betaoverflow/project-agrohabit,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C14C:2319:683177:D7C5BA:6522412D.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
707,AEOP_Public,shine10101,N/A,N/A,https://api.github.com/repos/shine10101/AEOP_Public,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C17C:418F:2A55764:568D995:6522412D.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
708,smartfarmerapp,samirumusa,N/A,N/A,https://api.github.com/repos/samirumusa/smartfarmerapp,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C19B:0C3C:73FE7F:EF56D1:6522412D.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
709,sheep-identification-project,gabrielbelcher,N/A,N/A,https://api.github.com/repos/gabrielbelcher/sheep-identification-project,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C196:2115:6EC206:E50513:6522412E.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
710,Indian-Journal-of-Food-Engineering-IJFE-,latticescipub,N/A,N/A,https://api.github.com/repos/latticescipub/Indian-Journal-of-Food-Engineering-IJFE-,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1EA:3BF5:72A8E5:EC78A8:6522412E.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
711,Agricorp,KOSASIH,N/A,N/A,https://api.github.com/repos/KOSASIH/Agricorp,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C11F:5F41:6E3517:E3D68E:6522412F.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
712,toxibees,julieBarN,N/A,N/A,https://api.github.com/repos/julieBarN/toxibees,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C124:5AB9:2C36513:5A92077:65224130.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture,"[N, /, A]",00000
713,raster4ml,souravbhadra,N/A,N/A,https://api.github.com/repos/souravbhadra/raster4ml,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1D4:8AF9:6F17A8:E5ADBB:65224130.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture-research,"[N, /, A]",00000
714,dssat-csm-os,DSSAT,N/A,N/A,https://api.github.com/repos/DSSAT/dssat-csm-os,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C179:1299:9D147F:1447F31:65224131.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture-research,"[N, /, A]",00000
715,Crop-Classification,bhavesh907,N/A,N/A,https://api.github.com/repos/bhavesh907/Crop-Classification,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C147:5AB9:2C367E1:5A92635:65224132.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture-research,"[N, /, A]",00000
716,agro,AgriculturalSemantics,N/A,N/A,https://api.github.com/repos/AgriculturalSemantics/agro,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C11D:336C:2CED8D2:5C19EDA:65223FCF.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture-research,"[N, /, A]",00000
717,AgriTech,haritha1313,N/A,N/A,https://api.github.com/repos/haritha1313/AgriTech,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C106:5A86:2B93532:5963DC7:65223FD1.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture-research,"[N, /, A]",00000
718,AI-Agro,RentadroneCL,N/A,N/A,https://api.github.com/repos/RentadroneCL/AI-Agro,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1A5:7AEF:2DBD689:5D88228:65224132.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture-research,"[N, /, A]",00000
719,Py_DSSATTools,daquinterop,N/A,N/A,https://api.github.com/repos/daquinterop/Py_DSSATTools,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C166:092A:6F94EE:E69D34:65224133.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture-research,"[N, /, A]",00000
720,penmon,sherzodr,N/A,N/A,https://api.github.com/repos/sherzodr/penmon,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1CA:17C0:286BC6:54421A:65223FD7.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture-research,"[N, /, A]",00000
721,Decision_Analysis_Course,CWWhitney,N/A,N/A,https://api.github.com/repos/CWWhitney/Decision_Analysis_Course,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C19F:2EE5:28503DF:52EF7E0:65223FDA.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture-research,"[N, /, A]",00000
722,gwd-yolov5-pytorch,5m0k3,N/A,N/A,https://api.github.com/repos/5m0k3/gwd-yolov5-pytorch,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1AC:3819:1AD8B43:3734787:65224134.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture-research,"[N, /, A]",00000
723,vriksha,ambakick,N/A,N/A,https://api.github.com/repos/ambakick/vriksha,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1D3:8AB4:298A7D8:554CAD3:65223FDB.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture-research,"[N, /, A]",00000
724,Agricultural-SandboxNL,ManuelHuber-Github,N/A,N/A,https://api.github.com/repos/ManuelHuber-Github/Agricultural-SandboxNL,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1FA:2EE5:28505AD:52EFBB2:65223FDC.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture-research,"[N, /, A]",00000
725,crops-parser,rugk,N/A,N/A,https://api.github.com/repos/rugk/crops-parser,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C116:53F5:27F5F67:5229F5B:65223FE3.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture-research,"[N, /, A]",00000
726,PiCar,Harry-Rogers,N/A,N/A,https://api.github.com/repos/Harry-Rogers/PiCar,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C121:41B1:6F88B1:E6C342:65224134.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture-research,"[N, /, A]",00000
727,AgroGo,grlwholifts,N/A,N/A,https://api.github.com/repos/grlwholifts/AgroGo,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C134:18E3:28EE48:553377:65223FF1.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture-research,"[N, /, A]",00000
728,Plant-disease-prediction-using-CNNs,sanmitraD,N/A,N/A,https://api.github.com/repos/sanmitraD/Plant-disease-prediction-using-CNNs,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C18F:3493:270CBBB:5062D52:65223FF4.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture-research,"[N, /, A]",00000
729,DMIL-WDDS,LuJiangTHU,N/A,N/A,https://api.github.com/repos/LuJiangTHU/DMIL-WDDS,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1CB:41B1:6F8959:E6C492:65224135.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture-research,"[N, /, A]",00000
730,Crop-yield-and-profitability-prediction,shreyzo,N/A,N/A,https://api.github.com/repos/shreyzo/Crop-yield-and-profitability-prediction,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1AB:0208:2DDB444:5DEB9A5:65223FF6.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture-research,"[N, /, A]",00000
731,shinyapps,iliastsergoulas,N/A,N/A,https://api.github.com/repos/iliastsergoulas/shinyapps,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C172:2772:28BFBAC:53D2D06:65223FFA.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture-research,"[N, /, A]",00000
732,hyperview_eagleeyes,ridvansalihkuzu,N/A,N/A,https://api.github.com/repos/ridvansalihkuzu/hyperview_eagleeyes,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1F4:5AB9:2C36C7D:5A92FB4:65224135.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture-research,"[N, /, A]",00000
733,MultiviewCropClassification,fmenat,N/A,N/A,https://api.github.com/repos/fmenat/MultiviewCropClassification,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C185:1F34:1B8EA6A:38A2F81:65224136.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture-research,"[N, /, A]",00000
734,text_analyzer,iliastsergoulas,N/A,N/A,https://api.github.com/repos/iliastsergoulas/text_analyzer,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1DF:41EE:27A5F4B:519AA7D:65224008.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture-research,"[N, /, A]",00000
735,rice-awd-shb,adamhsparks,N/A,N/A,https://api.github.com/repos/adamhsparks/rice-awd-shb,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1EF:1560:28D442B:53E3F29:65224008.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture-research,"[N, /, A]",00000
736,PPBstats,priviere,N/A,N/A,https://api.github.com/repos/priviere/PPBstats,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1E5:2CBC:76669C:F4018E:65224137.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture-research,"[N, /, A]",00000
737,BantuTani-App,Noob-programmer155,N/A,N/A,https://api.github.com/repos/Noob-programmer155/BantuTani-App,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C11A:58D0:75B2F4:F23DE9:65224137.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture-research,"[N, /, A]",00000
738,drone-based-plant-monitoring-system,Paulooh007,N/A,N/A,https://api.github.com/repos/Paulooh007/drone-based-plant-monitoring-system,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C16B:784E:74A378:F0CAF5:65224138.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture-research,"[N, /, A]",00000
739,ag5Tools,AgrDataSci,N/A,N/A,https://api.github.com/repos/AgrDataSci/ag5Tools,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1AD:36DF:3542CFE:6C966D3:65224138.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture-research,"[N, /, A]",00000
740,Corn-Infection-Detection,q-viper,N/A,N/A,https://api.github.com/repos/q-viper/Corn-Infection-Detection,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C110:3F63:2E68671:5EF0BC1:65224139.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture-research,"[N, /, A]",00000
741,slaer,vicelab,N/A,N/A,https://api.github.com/repos/vicelab/slaer,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C12E:1299:9D1D15:14490CB:6522413A.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture-research,"[N, /, A]",00000
742,Caloric-Suitability-Index,ozak,N/A,N/A,https://api.github.com/repos/ozak/Caloric-Suitability-Index,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C118:33C6:29EECA3:562AECD:6522401E.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture-research,"[N, /, A]",00000
743,extractOz,DPIRD-FSI,N/A,N/A,https://api.github.com/repos/DPIRD-FSI/extractOz,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C127:6584:28332D1:52A8A7D:6522401C.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture-research,"[N, /, A]",00000
744,gwd-efficientdet-pytorch,5m0k3,N/A,N/A,https://api.github.com/repos/5m0k3/gwd-efficientdet-pytorch,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C11A:58D0:75B66C:F244FF:6522413A.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture-research,"[N, /, A]",00000
745,agriclimuz,sherzodr,N/A,N/A,https://api.github.com/repos/sherzodr/agriclimuz,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C108:4AAE:2755CE3:50BAB1F:65224029.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture-research,"[N, /, A]",00000
746,Deep-Learning-Locust-Prediction,pinkychow1010,N/A,N/A,https://api.github.com/repos/pinkychow1010/Deep-Learning-Locust-Prediction,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1F2:0FAE:1968E87:3468F61:6522413B.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture-research,"[N, /, A]",00000
747,KTBL-APIs,fruchtfolge,N/A,N/A,https://api.github.com/repos/fruchtfolge/KTBL-APIs,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C197:049C:26E1B16:4FD06D6:65224029.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture-research,"[N, /, A]",00000
748,libpenmon,sherzodr,N/A,N/A,https://api.github.com/repos/sherzodr/libpenmon,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1D2:12FA:5BE0C4:BD3D91:6522403B.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture-research,"[N, /, A]",00000
749,NFixDB,raw-lab,N/A,N/A,https://api.github.com/repos/raw-lab/NFixDB,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1F3:5C75:273E779:50881F7:6522404B.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture-research,"[N, /, A]",00000
750,BGR-APIs,fruchtfolge,N/A,N/A,https://api.github.com/repos/fruchtfolge/BGR-APIs,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1A5:4A15:28D39DB:53A62B5:65224040.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture-research,"[N, /, A]",00000
751,morel-mushrooms,argosopentech,N/A,N/A,https://api.github.com/repos/argosopentech/morel-mushrooms,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C10C:7D9C:2B2AA54:5850E99:6522403A.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture-research,"[N, /, A]",00000
752,fair-data-management-agriculture,carpentries-incubator,N/A,N/A,https://api.github.com/repos/carpentries-incubator/fair-data-management-agriculture,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C143:46E9:7411AA:EF613E:6522413B.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture-research,"[N, /, A]",00000
753,maize-Toff,ecohydro,N/A,N/A,https://api.github.com/repos/ecohydro/maize-Toff,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C10D:7B5B:71B52E:EA74F1:6522413C.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture-research,"[N, /, A]",00000
754,large-scale-pest-recognition,adhiiisetiawan,N/A,N/A,https://api.github.com/repos/adhiiisetiawan/large-scale-pest-recognition,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1B2:418F:2A56987:568FED5:6522413D.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture-research,"[N, /, A]",00000
755,aafc-field-data,devvyn,N/A,N/A,https://api.github.com/repos/devvyn/aafc-field-data,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1AC:3819:1AD9554:3735C5D:6522413D.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture-research,"[N, /, A]",00000
756,ClimMobTools,AgrDataSci,N/A,N/A,https://api.github.com/repos/AgrDataSci/ClimMobTools,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1A9:3819:1AD9603:3735DC7:6522413D.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture-research,"[N, /, A]",00000
757,Apple_Foliar_Disease_Detection,raj-shr-git,N/A,N/A,https://api.github.com/repos/raj-shr-git/Apple_Foliar_Disease_Detection,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C199:4179:2DD628D:5DCD98A:6522413E.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture-research,"[N, /, A]",00000
758,sda-hcapi3,IFPRI,N/A,N/A,https://api.github.com/repos/IFPRI/sda-hcapi3,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1D8:607B:7759B7:F5E0D9:6522413E.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture-research,"[N, /, A]",00000
759,Tomato-Leaf-Disease-Quantification,ascii-monk123,N/A,N/A,https://api.github.com/repos/ascii-monk123/Tomato-Leaf-Disease-Quantification,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1BD:178A:2C8753B:5B29132:6522413F.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture-research,"[N, /, A]",00000
760,esa_training_2022,Prikaziuk,N/A,N/A,https://api.github.com/repos/Prikaziuk/esa_training_2022,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C108:4F4C:70EAED:E905AC:65224140.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture-research,"[N, /, A]",00000
761,Dashboard-for-agriculture,cherry247,N/A,N/A,https://api.github.com/repos/cherry247/Dashboard-for-agriculture,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1C7:1E3B:2FA7784:615DBEB:65224064.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture-research,"[N, /, A]",00000
762,bangkit-internet-of-things,Terrafarms,N/A,N/A,https://api.github.com/repos/Terrafarms/bangkit-internet-of-things,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1C4:6611:6CEBE9:E14897:65224140.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture-research,"[N, /, A]",00000
763,FarmWiser,SaiJeevanPuchakayala,N/A,N/A,https://api.github.com/repos/SaiJeevanPuchakayala/FarmWiser,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C130:41B1:6F969F:E6DFF9:65224140.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture-research,"[N, /, A]",00000
764,leaves-segmentation,HasanBeratSoke,N/A,N/A,https://api.github.com/repos/HasanBeratSoke/leaves-segmentation,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C185:1F34:1B8F5F3:38A4769:65224141.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture-research,"[N, /, A]",00000
765,fruchtfolge,chrispahm,N/A,N/A,https://api.github.com/repos/chrispahm/fruchtfolge,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1AF:3996:25FEA79:4DFB62B:65224051.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture-research,"[N, /, A]",00000
766,green-sense,arkochatterjee,N/A,N/A,https://api.github.com/repos/arkochatterjee/green-sense,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1DD:1F34:1B8F64D:38A482A:65224141.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture-research,"[N, /, A]",00000
767,AgriAid,shamspias,N/A,N/A,https://api.github.com/repos/shamspias/AgriAid,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C17D:629D:4519FE9:8C373EE:65224052.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture-research,"[N, /, A]",00000
768,DeepCropNet,AIAtmiyaUniversity,N/A,N/A,https://api.github.com/repos/AIAtmiyaUniversity/DeepCropNet,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1B4:1364:74CDE6:F0F091:65224142.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture-research,"[N, /, A]",00000
769,Precision-Spraying-for-Agriculture-mobile-Robot,Muhammad-Arsalan03,N/A,N/A,https://api.github.com/repos/Muhammad-Arsalan03/Precision-Spraying-for-Agriculture-mobile-Robot,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1C7:1E3B:2FB7321:617E2B3:65224143.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture-research,"[N, /, A]",00000
770,learn-permaculture,dwyl,N/A,N/A,https://api.github.com/repos/dwyl/learn-permaculture,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1CF:1F34:1B8220D:3889053:6522406F.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture-research,"[N, /, A]",00000
771,Hiperespectrales,Heikelol,N/A,N/A,https://api.github.com/repos/Heikelol/Hiperespectrales,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1C3:5831:2BA514E:59705D9:65224143.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture-research,"[N, /, A]",00000
772,frn-data-collection-toolkit,stats4sd,N/A,N/A,https://api.github.com/repos/stats4sd/frn-data-collection-toolkit,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1EC:7B3E:761FEA:F338D7:65224144.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture-research,"[N, /, A]",00000
773,blacklegRandomForest,pskelsey,N/A,N/A,https://api.github.com/repos/pskelsey/blacklegRandomForest,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C19E:6611:6CEF5B:E14FB3:65224144.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture-research,"[N, /, A]",00000
774,Drone-Processing-Pipeline,cct-datascience,N/A,N/A,https://api.github.com/repos/cct-datascience/Drone-Processing-Pipeline,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1EF:7B5B:71BD14:EA857B:65224145.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture-research,"[N, /, A]",00000
775,EstimationNitrogenANN,whinaal,N/A,N/A,https://api.github.com/repos/whinaal/EstimationNitrogenANN,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C193:2CBC:76766F:F4224A:65224145.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture-research,"[N, /, A]",00000
776,HGSB,SimonShamusRiley,N/A,N/A,https://api.github.com/repos/SimonShamusRiley/HGSB,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C100:29CE:32E4FD3:67DD8D6:65224146.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture-research,"[N, /, A]",00000
777,bangkit-machine-learning,Terrafarms,N/A,N/A,https://api.github.com/repos/Terrafarms/bangkit-machine-learning,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C180:6A74:1A14D71:35B75C9:65224086.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture-research,"[N, /, A]",00000
778,euraknos-ontology,MaastrichtU-IDS,N/A,N/A,https://api.github.com/repos/MaastrichtU-IDS/euraknos-ontology,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C103:3B38:2D919D:5E62FD:652240A9.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture-research,"[N, /, A]",00000
779,template-rgb-plot,AgPipeline,N/A,N/A,https://api.github.com/repos/AgPipeline/template-rgb-plot,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C113:7890:29D57F:571710:65224099.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture-research,"[N, /, A]",00000
780,cb-tricot-analysis,AgrDataSci,N/A,N/A,https://api.github.com/repos/AgrDataSci/cb-tricot-analysis,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C16F:24F2:299C457:556BC97:65224099.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture-research,"[N, /, A]",00000
781,Potato-Disease-Classification,lionelsamrat10,N/A,N/A,https://api.github.com/repos/lionelsamrat10/Potato-Disease-Classification,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1F1:5F41:6E4BF4:E40604:65224147.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture-research,"[N, /, A]",00000
782,fieldtrak,RB-Agriculture,N/A,N/A,https://api.github.com/repos/RB-Agriculture/fieldtrak,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C11F:1E37:29C0EA:56DB6C:652240A5.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture-research,"[N, /, A]",00000
783,YIELTOR,Navaneeth-Gajula,N/A,N/A,https://api.github.com/repos/Navaneeth-Gajula/YIELTOR,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C16C:7B3E:7623A3:F3407B:65224147.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture-research,"[N, /, A]",00000
784,StructureAnnotator,laclouis5,N/A,N/A,https://api.github.com/repos/laclouis5/StructureAnnotator,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C198:4678:1AC0E9E:371632D:65224148.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture-research,"[N, /, A]",00000
785,YieldbookDatasetDrafts,Rothamsted-Ecoinformatics,N/A,N/A,https://api.github.com/repos/Rothamsted-Ecoinformatics/YieldbookDatasetDrafts,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C110:458F:2C3D938:5AB9A29:6522409F.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture-research,"[N, /, A]",00000
786,IL-ag-landuse,spaykin,N/A,N/A,https://api.github.com/repos/spaykin/IL-ag-landuse,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C182:1F34:1B8FD34:38A5691:65224148.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture-research,"[N, /, A]",00000
787,Data-Augmentation-of-Agriculture-Dataset,codeplusmath,N/A,N/A,https://api.github.com/repos/codeplusmath/Data-Augmentation-of-Agriculture-Dataset,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C14E:6A74:1A20928:35CFB2E:65224149.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture-research,"[N, /, A]",00000
788,AgroBit_Nasa_Space_App_Challenge,Rafiul-Omar2022,N/A,N/A,https://api.github.com/repos/Rafiul-Omar2022/AgroBit_Nasa_Space_App_Challenge,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1FD:5934:284BFEB:52DBF32:65224149.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture-research,"[N, /, A]",00000
789,DetectingTomatoPlantDisease,ShivaGanapathy,N/A,N/A,https://api.github.com/repos/ShivaGanapathy/DetectingTomatoPlantDisease,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1DA:178A:2C87F91:5B2A6B7:6522414A.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture-research,"[N, /, A]",00000
790,Agrikon,ashucoder9,N/A,N/A,https://api.github.com/repos/ashucoder9/Agrikon,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1D0:3BF5:72C3D5:ECB0A5:6522414B.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture-research,"[N, /, A]",00000
791,Tomato-leaf-disease-detection,bchryzal,N/A,N/A,https://api.github.com/repos/bchryzal/Tomato-leaf-disease-detection,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1D8:607B:77690C:F60033:6522414B.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture-research,"[N, /, A]",00000
792,IoT-based-WaterFlowRate-measurement-using-Arduino,PiyushRaj714,N/A,N/A,https://api.github.com/repos/PiyushRaj714/IoT-based-WaterFlowRate-measurement-using-Arduino,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C11C:87DB:2FE685C:61D0031:6522414C.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture-research,"[N, /, A]",00000
793,Jute-Insect-Classification-using-Transfer-Learning-and-Deployment-in-Android-App,Sakibsourav019,N/A,N/A,https://api.github.com/repos/Sakibsourav019/Jute-Insect-Classification-using-Transfer-Learning-and-Deployment-in-Android-App,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1E9:87DB:2FE6684:61CFC3D:6522414A.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture-research,"[N, /, A]",00000
794,Krishiyog-Summer-Project,Abhar97,N/A,N/A,https://api.github.com/repos/Abhar97/Krishiyog-Summer-Project,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1B9:505E:751800:F15B2C:6522414B.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture-research,"[N, /, A]",00000
795,rmsystem,stats4sd,N/A,N/A,https://api.github.com/repos/stats4sd/rmsystem,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C191:7B5B:71C30D:EA91C2:6522414B.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture-research,"[N, /, A]",00000
796,weather-app-farmer,fahadgudu,N/A,N/A,https://api.github.com/repos/fahadgudu/weather-app-farmer,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C114:3B38:2D7B55:5E3460:6522408E.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture-research,"[N, /, A]",00000
797,Annotation,kbarni,N/A,N/A,https://api.github.com/repos/kbarni/Annotation,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C174:5831:2BA5A71:59718D4:6522414D.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture-research,"[N, /, A]",00000
798,FIPS-Farmer-Research,stats4sd,N/A,N/A,https://api.github.com/repos/stats4sd/FIPS-Farmer-Research,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C183:3BF5:72C5EF:ECB504:6522414D.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture-research,"[N, /, A]",00000
799,airsens,Ahmosys,N/A,N/A,https://api.github.com/repos/Ahmosys/airsens,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C161:406C:2AE84D:59346F:652240F4.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture-research,"[N, /, A]",00000
800,Weed-Detection-in-Crop-Fields,Deceptrax123,N/A,N/A,https://api.github.com/repos/Deceptrax123/Weed-Detection-in-Crop-Fields,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C194:840D:2942132:54CFEAE:6522414E.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture-research,"[N, /, A]",00000
801,OpenClimateScience.github.io,OpenClimateScience,N/A,N/A,https://api.github.com/repos/OpenClimateScience/OpenClimateScience.github.io,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1F1:38A4:2BC146B:59C938F:652240F5.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture-research,"[N, /, A]",00000
802,Project_Intelligation,adityarp9,N/A,N/A,https://api.github.com/repos/adityarp9/Project_Intelligation,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1D9:47EA:26AD7B1:4F73E89:6522414F.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture-research,"[N, /, A]",00000
803,Scrape-Agri_crop-data-from-the-web-using-Stata,capecha,N/A,N/A,https://api.github.com/repos/capecha/Scrape-Agri_crop-data-from-the-web-using-Stata,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1C7:4C24:2B7BB85:593680A:6522414F.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture-research,"[N, /, A]",00000
804,marsdiet,seanbhart,N/A,N/A,https://api.github.com/repos/seanbhart/marsdiet,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1B4:6EA3:29482A:55F87C:652240E4.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture-research,"[N, /, A]",00000
805,Agriculture_predictor,JonathanAaronDev,N/A,N/A,https://api.github.com/repos/JonathanAaronDev/Agriculture_predictor,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C19E:505E:2D1184:5D6AC9:6522414F.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture-research,"[N, /, A]",00000
806,TerrafarmsxAgricamp-Papayan,Terrafarms,N/A,N/A,https://api.github.com/repos/Terrafarms/TerrafarmsxAgricamp-Papayan,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C18F:3493:271C114:5082AC5:652240F2.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture-research,"[N, /, A]",00000
807,iotBoard,MukeshBisht,N/A,N/A,https://api.github.com/repos/MukeshBisht/iotBoard,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C18F:3493:2721B0F:508E5BF:65224150.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture-research,"[N, /, A]",00000
808,Real-Time-Precision-Farming-through-Cloud-Computer-Vision-and-Deep-Learning,udaykumar1997,N/A,N/A,https://api.github.com/repos/udaykumar1997/Real-Time-Precision-Farming-through-Cloud-Computer-Vision-and-Deep-Learning,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C13B:17C0:29851B:5690A5:65224151.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture-research,"[N, /, A]",00000
809,crop-manag-pnas,AgrDataSci,N/A,N/A,https://api.github.com/repos/AgrDataSci/crop-manag-pnas,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1E8:3B38:2E2938:5F9DFA:65224151.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture-research,"[N, /, A]",00000
810,GLSS-Agricultural-Analysis,gabeb24,N/A,N/A,https://api.github.com/repos/gabeb24/GLSS-Agricultural-Analysis,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C127:6584:2843CA1:52CB3A1:65224152.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture-research,"[N, /, A]",00000
811,mvsc,klautenschlaeger,N/A,N/A,https://api.github.com/repos/klautenschlaeger/mvsc,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1B3:643D:2A290F4:56774B4:65224153.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture-research,"[N, /, A]",00000
812,ProyekMandiriSKD,devan2636,N/A,N/A,https://api.github.com/repos/devan2636/ProyekMandiriSKD,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C150:7A65:29AA26:56D10E:65224153.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture-research,"[N, /, A]",00000
813,PublicBanks,kosalnith,N/A,N/A,https://api.github.com/repos/kosalnith/PublicBanks,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1E8:3B38:2E2B55:5FA276:65224154.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture-research,"[N, /, A]",00000
814,Agriculture-project-notes-and-references,sayan0506,N/A,N/A,https://api.github.com/repos/sayan0506/Agriculture-project-notes-and-references,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1D4:68AA:2E95133:5F62818:65224154.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture-research,"[N, /, A]",00000
815,JAFIO-FRA-Zambia,zhou100,N/A,N/A,https://api.github.com/repos/zhou100/JAFIO-FRA-Zambia,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1DD:33EB:2C281C:5BBC34:65224155.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture-research,"[N, /, A]",00000
816,Colombia-Analysis,inrea21,N/A,N/A,https://api.github.com/repos/inrea21/Colombia-Analysis,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C102:5B68:2AD627:593F6F:65224156.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture-research,"[N, /, A]",00000
817,WorkAreaRecognition,isailg,N/A,N/A,https://api.github.com/repos/isailg/WorkAreaRecognition,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C19B:458F:2C4A32A:5AD3AEA:65224156.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture-research,"[N, /, A]",00000
818,apple-scab-disease-classification,ayushdabra,N/A,N/A,https://api.github.com/repos/ayushdabra/apple-scab-disease-classification,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C134:18E3:29FC87:5768CE:65224157.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture-research,"[N, /, A]",00000
819,report_template,biometryhub,N/A,N/A,https://api.github.com/repos/biometryhub/report_template,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C17C:797D:287575:54610D:65224158.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture-research,"[N, /, A]",00000
820,Agro-Mex,arturo26,N/A,N/A,https://api.github.com/repos/arturo26/Agro-Mex,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1AE:1CC6:2A3F9A0:56B6D03:65224158.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture-research,"[N, /, A]",00000
821,Rendimientos_Agricolas,eitt,N/A,N/A,https://api.github.com/repos/eitt/Rendimientos_Agricolas,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1E9:47EE:2B96AAA:596C165:65224159.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture-research,"[N, /, A]",00000
822,BeanCounter,njwitthoeft,N/A,N/A,https://api.github.com/repos/njwitthoeft/BeanCounter,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C167:11F8:2CD2B9:5D17EC:6522415A.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture-research,"[N, /, A]",00000
823,2021-s34d,mbacou,N/A,N/A,https://api.github.com/repos/mbacou/2021-s34d,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C163:1E37:2A7814:5856A5:6522415A.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture-research,"[N, /, A]",00000
824,agriplus2,Joseph-kirigo,N/A,N/A,https://api.github.com/repos/Joseph-kirigo/agriplus2,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C147:6B96:2862EE9:531C6D1:652240F8.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture-research,"[N, /, A]",00000
825,Agricon,michaelmuthomi,N/A,N/A,https://api.github.com/repos/michaelmuthomi/Agricon,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C108:5A71:30467CA:62C13B3:652240FA.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture-research,"[N, /, A]",00000
826,Macro-Nutrient-Classification,jyotirmoy1997,N/A,N/A,https://api.github.com/repos/jyotirmoy1997/Macro-Nutrient-Classification,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C16A:336C:2D0632A:5C4CFAE:6522415B.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture-research,"[N, /, A]",00000
827,Vriksha,techtocore,N/A,N/A,https://api.github.com/repos/techtocore/Vriksha,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1D6:0BEC:2A7220:5866CE:6522415C.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture-research,"[N, /, A]",00000
828,VseLokalno,andraze,N/A,N/A,https://api.github.com/repos/andraze/VseLokalno,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C18C:840D:2942DAF:54D18D9:6522415C.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture-research,"[N, /, A]",00000
829,NxtLynk,arshPratap,N/A,N/A,https://api.github.com/repos/arshPratap/NxtLynk,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1D9:47EA:26AE2DD:4F755DB:6522415D.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture-research,"[N, /, A]",00000
830,rice-pilaf,bioinfodlsu,N/A,N/A,https://api.github.com/repos/bioinfodlsu/rice-pilaf,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1DF:309A:2E47BC0:5E6BEE6:6522411A.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture-research,"[N, /, A]",00000
831,coopsahu.github.io,coopsahu,N/A,N/A,https://api.github.com/repos/coopsahu/coopsahu.github.io,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C144:5934:2849D27:52D7775:6522412A.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture-research,"[N, /, A]",00000
832,Plant-Disease-Detection-MLND-Capstone,vpinnaka,N/A,N/A,https://api.github.com/repos/vpinnaka/Plant-Disease-Detection-MLND-Capstone,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C193:0BEC:2A7393:5869D8:6522415E.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture-research,"[N, /, A]",00000
833,usda-api,cchummer,N/A,N/A,https://api.github.com/repos/cchummer/usda-api,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C142:7A65:29B3B9:56E509:6522415E.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture-research,"[N, /, A]",00000
834,innspubnet,innspub,N/A,N/A,https://api.github.com/repos/innspub/innspubnet,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C106:5A86:2BAC610:5997BD7:6522415F.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture-research,"[N, /, A]",00000
835,ryoochangwan.github.io,ryoochangwan,N/A,N/A,https://api.github.com/repos/ryoochangwan/ryoochangwan.github.io,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C19A:0BEC:2A0020:577954:652240D9.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture-research,"[N, /, A]",00000
836,2017-agra-aasr,mbacou,N/A,N/A,https://api.github.com/repos/mbacou/2017-agra-aasr,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1D5:22D5:2F3F760:60BFF33:652240D7.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture-research,"[N, /, A]",00000
837,Social_Media_Engagement_Habits_of_Farmers,carter5,N/A,N/A,https://api.github.com/repos/carter5/Social_Media_Engagement_Habits_of_Farmers,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C130:3B38:2DC1B0:5EC69C:652240DB.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture-research,"[N, /, A]",00000
838,Agriculture-Management-System,MarrenOjode,N/A,N/A,https://api.github.com/repos/MarrenOjode/Agriculture-Management-System,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C12F:458F:2C4AB29:5AD4B88:65224160.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture-research,"[N, /, A]",00000
839,SegmentationForPlants,Heikelol,N/A,N/A,https://api.github.com/repos/Heikelol/SegmentationForPlants,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C123:4776:2C391F:5BD0C3:65224160.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture-research,"[N, /, A]",00000
840,red-de-redes,stats4sd,N/A,N/A,https://api.github.com/repos/stats4sd/red-de-redes,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C13E:24F2:29A9217:55865C2:65224160.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture-research,"[N, /, A]",00000
841,agro-waste,sureshlazaruspaul,N/A,N/A,https://api.github.com/repos/sureshlazaruspaul/agro-waste,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C10A:6584:283DAB1:52BE7DC:652240DE.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture-research,"[N, /, A]",00000
842,livroEspeciesArboreasAgrossilvipastoris,afraniogazolla,N/A,N/A,https://api.github.com/repos/afraniogazolla/livroEspeciesArboreasAgrossilvipastoris,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1C2:643D:2A29EE0:5679174:65224161.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture-research,"[N, /, A]",00000
843,Buffer_zones,sow-ibrahima,N/A,N/A,https://api.github.com/repos/sow-ibrahima/Buffer_zones,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1F1:38A4:2BC97DD:59DA1B8:65224161.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture-research,"[N, /, A]",00000
844,IdragraTools,rita-tools,N/A,N/A,https://api.github.com/repos/rita-tools/IdragraTools,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1E5:38A4:2BC987F:59DA2FA:65224162.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture-research,"[N, /, A]",00000
845,Farmatica,KOSASIH,N/A,N/A,https://api.github.com/repos/KOSASIH/Farmatica,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C191:33EB:2BBB01:5AD6F3:652240C1.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture-research,"[N, /, A]",00000
846,awesome-arm-in-smart-agriculture,firefly-cpp,N/A,N/A,https://api.github.com/repos/firefly-cpp/awesome-arm-in-smart-agriculture,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C12E:47EE:2B972B1:596D1FA:65224162.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture-research,"[N, /, A]",00000
847,coopsahu.github.io,coopsahu,N/A,N/A,https://api.github.com/repos/coopsahu/coopsahu.github.io,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C144:5934:2849D27:52D7775:6522412A.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture-research,"[N, /, A]",00000
848,SAEproject,Viperwolf-Official,N/A,N/A,https://api.github.com/repos/Viperwolf-Official/SAEproject,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1D4:68AA:2E95E1D:5F6428D:65224163.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture-research,"[N, /, A]",00000
849,livroSistemaSilvipastoril,afraniogazolla,N/A,N/A,https://api.github.com/repos/afraniogazolla/livroSistemaSilvipastoril,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C13D:2EE5:2865ADB:531C1F6:65224164.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture-research,"[N, /, A]",00000
850,awesome-agribusiness,SelemaniLikoko,N/A,N/A,https://api.github.com/repos/SelemaniLikoko/awesome-agribusiness,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1EE:1CC6:2A3703C:56A50BD:652240C8.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture-research,"[N, /, A]",00000
851,WebApp-Based-Crop-recommendation-system,RanitSarkar,N/A,N/A,https://api.github.com/repos/RanitSarkar/WebApp-Based-Crop-recommendation-system,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1F1:38A4:2BBDABA:59C1CF8:652240C8.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture-research,"[N, /, A]",00000
852,Semi_Autonomous_Drone_Nav,mrhosseini75,N/A,N/A,https://api.github.com/repos/mrhosseini75/Semi_Autonomous_Drone_Nav,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C13E:24F2:29A95D2:5586D92:65224164.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture-research,"[N, /, A]",00000
853,MVCC_IGARSS,DFKI-Earth-And-Space-Applications,N/A,N/A,https://api.github.com/repos/DFKI-Earth-And-Space-Applications/MVCC_IGARSS,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C144:6829:2E53C95:5EDFFB7:65224165.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture-research,"[N, /, A]",00000
854,Yield_forecast_Sunflowers,SamMajumder,N/A,N/A,https://api.github.com/repos/SamMajumder/Yield_forecast_Sunflowers,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C16D:6EA3:29BD9C:56EBEB:65224165.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture-research,"[N, /, A]",00000
855,phd,francivita,N/A,N/A,https://api.github.com/repos/francivita/phd,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C188:2EE5:2865ADC:531C1F8:65224164.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture-research,"[N, /, A]",00000
856,Crop_Prediction,waleedahmed0001,N/A,N/A,https://api.github.com/repos/waleedahmed0001/Crop_Prediction,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C185:11F8:2CDA18:5D274E:65224163.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture-research,"[N, /, A]",00000
857,Group_24-Intro_to_Eng.-Final_Project,AWESOME04,N/A,N/A,https://api.github.com/repos/AWESOME04/Group_24-Intro_to_Eng.-Final_Project,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C143:9938:29BEB05:55B00F0:65224164.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture-research,"[N, /, A]",00000
858,Sorghum-app-kenya,stats4sd,N/A,N/A,https://api.github.com/repos/stats4sd/Sorghum-app-kenya,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C12E:47EE:2B976DC:596DAA1:65224166.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture-research,"[N, /, A]",00000
859,FUMA-Gaskiya-app,stats4sd,N/A,N/A,https://api.github.com/repos/stats4sd/FUMA-Gaskiya-app,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C126:1ECC:2B068C:5983A1:65224167.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture-research,"[N, /, A]",00000
860,Esp8266,ifaiq,N/A,N/A,https://api.github.com/repos/ifaiq/Esp8266,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C14F:1D49:2C48B8F:5AC681F:65224167.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture-research,"[N, /, A]",00000
861,ccrp-soils,stats4sd,N/A,N/A,https://api.github.com/repos/stats4sd/ccrp-soils,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C107:33EB:2C35EF:5BD929:65224168.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,agriculture-research,"[N, /, A]",00000
862,farmOS,farmOS,N/A,N/A,https://api.github.com/repos/farmOS/farmOS,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C150:7A65:2826F0:53AD54:65223FBE.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,crops,"[N, /, A]",00000
863,Harvestify,Gladiator07,N/A,N/A,https://api.github.com/repos/Gladiator07/Harvestify,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C16F:24F2:29A9AEA:5587814:65224169.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,crops,"[N, /, A]",00000
864,katna,keplerlab,N/A,N/A,https://api.github.com/repos/keplerlab/katna,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C16B:38A4:2BCA1B1:59DB603:65224169.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,crops,"[N, /, A]",00000
865,Liquid-Prep,Liquid-Prep,N/A,N/A,https://api.github.com/repos/Liquid-Prep/Liquid-Prep,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1D3:8AB4:29A79CC:5588ACB:6522416A.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,crops,"[N, /, A]",00000
866,Smart_Farming,heyitsdsp,N/A,N/A,https://api.github.com/repos/heyitsdsp/Smart_Farming,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C16A:336C:2D0720A:5C4EE78:6522416B.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,crops,"[N, /, A]",00000
867,CropPhenology,SofanitAraya,N/A,N/A,https://api.github.com/repos/SofanitAraya/CropPhenology,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1CD:6584:28450F7:52CDDEF:6522416B.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,crops,"[N, /, A]",00000
868,crop-recommendation-system-based-on-machine-learning-using-python,anshukrsingh,N/A,N/A,https://api.github.com/repos/anshukrsingh/crop-recommendation-system-based-on-machine-learning-using-python,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1D0:24F2:29A9EFB:5588078:6522416C.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,crops,"[N, /, A]",00000
869,cultionet,jgrss,N/A,N/A,https://api.github.com/repos/jgrss/cultionet,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1CB:2772:28BD94D:53CE5D4:65223FD9.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,crops,"[N, /, A]",00000
870,AgroPi,krogk,N/A,N/A,https://api.github.com/repos/krogk/AgroPi,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C188:2EE5:2850518:52EFA73:65223FDB.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,crops,"[N, /, A]",00000
871,Weed-Detection,sharmaroshan,N/A,N/A,https://api.github.com/repos/sharmaroshan/Weed-Detection,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C196:336C:2D07478:5C4F363:6522416C.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,crops,"[N, /, A]",00000
872,bety,PecanProject,N/A,N/A,https://api.github.com/repos/PecanProject/bety,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C103:3B38:2CE22A:5CF6C6:65223FE4.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,crops,"[N, /, A]",00000
873,crops-parser,rugk,N/A,N/A,https://api.github.com/repos/rugk/crops-parser,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C116:53F5:27F5F67:5229F5B:65223FE3.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,crops,"[N, /, A]",00000
874,Eco-fertilization,Gekko12,N/A,N/A,https://api.github.com/repos/Gekko12/Eco-fertilization,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1AD:17C0:299913:56BAC7:6522416D.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,crops,"[N, /, A]",00000
875,Crop-yield-and-profitability-prediction,shreyzo,N/A,N/A,https://api.github.com/repos/shreyzo/Crop-yield-and-profitability-prediction,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1AB:0208:2DDB444:5DEB9A5:65223FF6.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,crops,"[N, /, A]",00000
876,PlantSimEngine.jl,VirtualPlantLab,N/A,N/A,https://api.github.com/repos/VirtualPlantLab/PlantSimEngine.jl,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C148:1ECC:2B0D41:59917D:6522416E.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,crops,"[N, /, A]",00000
877,Crop-Recommendation,NarutoOp,N/A,N/A,https://api.github.com/repos/NarutoOp/Crop-Recommendation,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1F3:6584:284541C:52CE480:6522416E.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,crops,"[N, /, A]",00000
878,OnSight,brminnick,N/A,N/A,https://api.github.com/repos/brminnick/OnSight,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1FE:41EE:27BABB4:51C5D7E:6522416E.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,crops,"[N, /, A]",00000
879,Epicurean,CottonMC,N/A,N/A,https://api.github.com/repos/CottonMC/Epicurean,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C19A:0BEC:2A82B2:58895E:6522416F.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,crops,"[N, /, A]",00000
880,Crop_Recognition_System,manab-kb,N/A,N/A,https://api.github.com/repos/manab-kb/Crop_Recognition_System,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C186:4771:29C41F:56CC77:6522401E.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,crops,"[N, /, A]",00000
881,Agro-App,likhitgarimella,N/A,N/A,https://api.github.com/repos/likhitgarimella/Agro-App,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1FA:2EE5:28540B4:52F768B:6522401D.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,crops,"[N, /, A]",00000
882,V2-Plant-Seedlings-Classification,sharmaroshan,N/A,N/A,https://api.github.com/repos/sharmaroshan/V2-Plant-Seedlings-Classification,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1C2:75D0:261A998:4E4B62A:6522404D.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,crops,"[N, /, A]",00000
883,plantalyzer,mstrocchi,N/A,N/A,https://api.github.com/repos/mstrocchi/plantalyzer,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C11E:2772:28D8B17:54066E3:6522416F.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,crops,"[N, /, A]",00000
884,cndcR,jafernandez01,N/A,N/A,https://api.github.com/repos/jafernandez01/cndcR,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1C8:7A65:29C620:570B08:65224170.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,crops,"[N, /, A]",00000
885,Quick-Harvest,EwyBoy,N/A,N/A,https://api.github.com/repos/EwyBoy/Quick-Harvest,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C175:505E:2D326B:5DAED0:65224170.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,crops,"[N, /, A]",00000
886,DEA_MultiSpectralImageTools,ascidian-ai,N/A,N/A,https://api.github.com/repos/ascidian-ai/DEA_MultiSpectralImageTools,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1C2:75D0:261A6A1:4E4AFF1:65224049.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,crops,"[N, /, A]",00000
887,CropsXP,nhanaz-pm-pl,N/A,N/A,https://api.github.com/repos/nhanaz-pm-pl/CropsXP,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1B9:0BEC:2A8489:588D38:65224171.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,crops,"[N, /, A]",00000
888,cnn-comparison,leandroaquinopereira,N/A,N/A,https://api.github.com/repos/leandroaquinopereira/cnn-comparison,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1AE:12FA:5BFD4A:BD7872:65224057.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,crops,"[N, /, A]",00000
889,bitfarm,auralshin,N/A,N/A,https://api.github.com/repos/auralshin/bitfarm,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1F4:47EA:26AF66D:4F77E8D:65224172.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,crops,"[N, /, A]",00000
890,Annotator,laclouis5,N/A,N/A,https://api.github.com/repos/laclouis5/Annotator,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1D4:68AA:2E96F6F:5F66628:65224172.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,crops,"[N, /, A]",00000
891,castile-and-leon-crops,garciparedes,N/A,N/A,https://api.github.com/repos/garciparedes/castile-and-leon-crops,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C10E:24F2:29AA8EB:55894C8:65224173.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,crops,"[N, /, A]",00000
892,BlockCrop,dhruti-patel,N/A,N/A,https://api.github.com/repos/dhruti-patel/BlockCrop,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1EF:1560:28E8505:540DA53:65224174.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,crops,"[N, /, A]",00000
893,KisaanApp,Ritzing,N/A,N/A,https://api.github.com/repos/Ritzing/KisaanApp,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C162:7890:2A81EA:587FDC:65224174.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,crops,"[N, /, A]",00000
894,agritech,Hanmant1999,N/A,N/A,https://api.github.com/repos/Hanmant1999/agritech,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1B9:0BEC:2A874B:58930F:65224175.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,crops,"[N, /, A]",00000
895,ICML19_TSW_Presentation,MarcCoru,N/A,N/A,https://api.github.com/repos/MarcCoru/ICML19_TSW_Presentation,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1EB:2E63:2A6059:583A46:65224175.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,crops,"[N, /, A]",00000
896,crop-production-ontology,Charles1625,N/A,N/A,https://api.github.com/repos/Charles1625/crop-production-ontology,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C108:5A71:304ED9E:62D280B:65224176.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,crops,"[N, /, A]",00000
897,Palette_Training,Metaluv,N/A,N/A,https://api.github.com/repos/Metaluv/Palette_Training,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C11F:1E37:2A9537:5892E1:65224176.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,crops,"[N, /, A]",00000
898,cropdatape,omarbenites,N/A,N/A,https://api.github.com/repos/omarbenites/cropdatape,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C14B:5934:283EE12:52C0D51:65224080.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,crops,"[N, /, A]",00000
899,netherlands_crops_prediction,olix20,N/A,N/A,https://api.github.com/repos/olix20/netherlands_crops_prediction,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1B9:0BEC:2A89A7:5897D7:65224177.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,crops,"[N, /, A]",00000
900,water-usage,xegativ,N/A,N/A,https://api.github.com/repos/xegativ/water-usage,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C15B:1ECC:2B1666:59A47C:65224178.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,crops,"[N, /, A]",00000
901,Fruchtfolge,fruchtfolge,N/A,N/A,https://api.github.com/repos/fruchtfolge/Fruchtfolge,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C167:11F8:2C3597:5BD163:652240B0.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,crops,"[N, /, A]",00000
902,Moenga-2020,smoenga55,N/A,N/A,https://api.github.com/repos/smoenga55/Moenga-2020,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1AD:17C0:29A2EF:56CF36:65224178.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,crops,"[N, /, A]",00000
903,FarmersKingdom,hmjahid,N/A,N/A,https://api.github.com/repos/hmjahid/FarmersKingdom,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1DB:5A86:2BA7387:598D0DF:6522410D.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,crops,"[N, /, A]",00000
904,install_Arduinopinic,maxeph,N/A,N/A,https://api.github.com/repos/maxeph/install_Arduinopinic,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C107:33EB:2C4359:5BF51A:65224179.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,crops,"[N, /, A]",00000
905,MyProjects,aksh98,N/A,N/A,https://api.github.com/repos/aksh98/MyProjects,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1B7:7D6D:2AB1E8:58E909:6522417A.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,crops,"[N, /, A]",00000
906,hortus,alexandrelamberty,N/A,N/A,https://api.github.com/repos/alexandrelamberty/hortus,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1F1:38A4:2BCB94F:59DE61F:6522417A.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,crops,"[N, /, A]",00000
907,data,TiempoDeSiembra,N/A,N/A,https://api.github.com/repos/TiempoDeSiembra/data,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1FE:41EE:27BB76F:51C75CF:6522417B.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,crops,"[N, /, A]",00000
908,WpfCropableImageControl,fabian-thomas,N/A,N/A,https://api.github.com/repos/fabian-thomas/WpfCropableImageControl,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C184:1560:28E8C20:540E90B:6522417B.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,crops,"[N, /, A]",00000
909,SARRA-O,SARRA-cropmodels,N/A,N/A,https://api.github.com/repos/SARRA-cropmodels/SARRA-O,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C180:5B68:2AF831:59864E:6522417C.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,crops,"[N, /, A]",00000
910,Harvest_Predictor,SeanP2001,N/A,N/A,https://api.github.com/repos/SeanP2001/Harvest_Predictor,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C103:3B38:2E4F18:5FECCB:6522417D.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,crops,"[N, /, A]",00000
911,farmers,CodeChefVIT,N/A,N/A,https://api.github.com/repos/CodeChefVIT/farmers,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1DE:3B38:2E4FA3:5FEDD3:6522417D.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,crops,"[N, /, A]",00000
912,Plantsper,dan909,N/A,N/A,https://api.github.com/repos/dan909/Plantsper,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C14B:6EA3:29D5B3:571DC6:6522417E.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,crops,"[N, /, A]",00000
913,crop_recommendations,BakerWade,N/A,N/A,https://api.github.com/repos/BakerWade/crop_recommendations,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C114:3B38:2E50AF:5FF006:6522417F.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,crops,"[N, /, A]",00000
914,SARRA-H,SARRA-cropmodels,N/A,N/A,https://api.github.com/repos/SARRA-cropmodels/SARRA-H,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1B4:6EA3:29D709:57208E:6522417F.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,crops,"[N, /, A]",00000
915,csiro-crops,FAIMS,N/A,N/A,https://api.github.com/repos/FAIMS/csiro-crops,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C189:6EA3:29D79D:5721BA:65224180.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,crops,"[N, /, A]",00000
916,Contouring-Plants,AarjavJain101,N/A,N/A,https://api.github.com/repos/AarjavJain101/Contouring-Plants,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C180:6A74:1A1DDD5:35CA15B:6522411D.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,crops,"[N, /, A]",00000
917,EasyFarming,AlexInCube,N/A,N/A,https://api.github.com/repos/AlexInCube/EasyFarming,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C198:18E3:2A190B:57A4D1:65224180.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,crops,"[N, /, A]",00000
918,nexrender,inlife,N/A,N/A,https://api.github.com/repos/inlife/nexrender,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1F1:38A4:2BCC164:59DF6BB:65224181.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,farm,"[N, /, A]",00000
919,awesome-agriculture,brycejohnston,N/A,N/A,https://api.github.com/repos/brycejohnston/awesome-agriculture,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1AC:0208:2DD717C:5DE2FE6:65223FBD.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,farm,"[N, /, A]",00000
920,farm,farm-fe,N/A,N/A,https://api.github.com/repos/farm-fe/farm,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1BF:458F:2C4D816:5ADA7BD:65224182.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,farm,"[N, /, A]",00000
921,tania-core,usetania,N/A,N/A,https://api.github.com/repos/usetania/tania-core,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1CC:33C6:2A05170:565915B:65224182.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,farm,"[N, /, A]",00000
922,farmOS,farmOS,N/A,N/A,https://api.github.com/repos/farmOS/farmOS,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C150:7A65:2826F0:53AD54:65223FBE.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,farm,"[N, /, A]",00000
923,frum,TaKO8Ki,N/A,N/A,https://api.github.com/repos/TaKO8Ki/frum,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1D2:6D2F:2E743E:605F8B:65224183.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,farm,"[N, /, A]",00000
924,tania,usetania,N/A,N/A,https://api.github.com/repos/usetania/tania,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C13A:458F:2C2D06D:5A978FD:65223FBE.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,farm,"[N, /, A]",00000
925,Koi,jobtalle,N/A,N/A,https://api.github.com/repos/jobtalle/Koi,N/A,"# Koi Farm

A Koi breeding game. Get it [on steam](https://store.steampowered.com/app/1518810/Koi_Farm) or [on itch.io](https://jobtalle.itch.io/koifarm).

[![alt text](screenshots.png ""Koi Farm"")](https://youtu.be/2JS6PEr1jUo)

## Building

HTML, CSS and Javascript content is compressed using [squish.py](https://github.com/jobtalle/squish.py), which is included in this repository as a submodule. Before building, ensure that this library has been cloned as well.

Make sure [node.js](https://www.nodejs.org) and [python 3](https://www.python.org/) are installed. After calling `npm i` to install all required packages, the following commands can be used to create binaries using [electron](https://github.com/electron/electron):

| Operating system | Command |
| --- | --- |
| Windows (32 bit) | `npm run build-win-32` |
| Windows (64 bit) | `npm run build-win-64` |
| Linux (64 bit) | `npm run build-linux-64` |
| Mac (64 bit) | `npm run build-mac-64` |

Additionally, `npm run compress` can be called to compress HTML, CSS and Javscript content without building binaries. The compressed HTML file `release.html` will be created in the project root. The file requires the `audio`, `font`, `svg` and `language` directories to run, as well as `favicon.ico` and `manifest.json`.

## Translations

The game is available in several languages. Translations can be found in [this repository](https://github.com/jobtalle/KoiTranslations), and new translations can be proposed there; when new translations are made, I will add them to the game.

## Contributing

Contributions can be proposed by submitting pull requests. The best place to ask questions is in [the official discord](https://discord.gg/bw3ZFe63Qg), which has a dedicated channel for source code related discussions.

## License

Koi Farm is distributed under the [Apache 2.0 with Commons Clause](LICENSE.md) license.

Audio by [3xBlast](http://3xblast.com/3xblast.com/).

Concept art by [Samma van Klaarbergen](https://www.artstation.com/samma).

Logo by [Eveline Dubblinga](https://www.artstation.com/rosebolt).
",N/A,N/A,N/A,N/A,farm,"[N, /, A]",00000
926,cgru,CGRU,CGRU,https://github.com/CGRU/cgru,https://api.github.com/repos/CGRU/cgru,CGRU - AFANASY,"## CGRU <img src=""https://raw.githubusercontent.com/CGRU/cgru/master/favicon.ico"" align=""right"" width=""90"">

CGRU is the Computer Graphics Tools Pack.

It consists of the main tools _Afanasy_ and _Rules_.
Other tools are arranged as satellites around these two,
like _dailies encoding scripts_ and _software submission plug-ins_.

**Afanasy** is a render farm manager.

**Rules** is a Web based CG projects tracker.

[Site](https://cgru.info)

[Documentation](https://cgru.readthedocs.io)

[Forum](https://forum.cgru.info)

You can ask any questions on the CGRU forum.

GitHub issues are used for code development and bug tracking.

### Coding rules:

- Indentation - TABS. You can vary tab length, default 4 spaces length is normal.
	- Python Indentation - SPACES(4). It is not a problem to tune any modern text editor for each file type.
- Code alignment - SPACES, it should not break on various tab length.
- Variable names: variable_name.
- Function names: functionName.
- Class names: ClassName.
- Use prefixes to make code more readable:
	- `i_` - Input variables.
	- `o_` - Output variables.
	- `m_` - Class members.
	- `ms_` - Static class members.
	- `g_` - External variables.
	- `v_` - Virtual functions.
- Do not use ""!"" as NOT, since it is not noticeable for doing code review. It is much more easy to notice `false == `.
- Use `false == var` and `NULL == val` instead of `var == false` or `var == NULL`.
As if you miss one '=' character, it will not be an error, it will be assignment, not comparison.
- Use `const &` to pass complex types as function parameters to not to copy class instance.

#### Example:

```c
// Function with long parameters list:
bool someFunction(std::string &o_status, const std::string &i_param1, const std::string &i_param2,
	const std::string &i_param3, const std::string &i_param4)
{
	...

	if (false == variable_name)
	{
		o_status = ""error"";
		return false;
	}
	return true;
}
```

You will notice, that some parts of the code are not following these rules. This
is mostly because such code has been written before these rules were created or
changed.

The typical file header and code style for C++ and JS files can automatically be applied with the script 
[utilities/maintenance/codeStyleCheck.php](https://github.com/CGRU/cgru/blob/master/utilities/maintenance/codeStyleCheck.php) see the file for instructions of setup and usage. 

The file header shall contain as much information as possible about the file, you can find a good example here:
[afanasy/browser/monitor.js](https://github.com/CGRU/cgru/blob/master/afanasy/browser/monitor.js)
### Some names:
**CGRU** - came from CG - Rules. It has two meanings: computer graphics principles and computer graphics is a cool thing.

**Afanasy** - came from a Greek name meaning [immortal](http://en.wikipedia.org/wiki/Afanasy). 

**Rules** - simple came from rules! This project tracker is based on defined rules.
Mostly project structure rules, where to store sources, references, dailies, outputs.
As Rules does not have its own database, it walks file-server folders structure.
",263,263,43,28,farm,"[afanasy, cgru, farm, manager, render, rendering, vfx, vfx-pipeline]",00000
927,android-farm,agoda-com,agoda-com,https://github.com/agoda-com/android-farm,https://api.github.com/repos/agoda-com/android-farm,Android devices farm with USB and emulated devices support,"# android-farm
Android devices farm with USB and emulated devices support

## TL;DR;

```console
$ helm install openstf
```

## Introduction

This project contains a chart that bootstraps an OpenSTF deployment on a [Kubernetes](http://kubernetes.io) cluster using the [Helm](https://helm.sh) package manager.

# Prerequisites
- Kubernetes cluster with KVM-capable nodes for emulators
- [helm](https://helm.sh)
- [rethinkdb installation](https://github.com/kubernetes/charts/tree/master/stable/rethinkdb)
- [adb-butler](https://github.com/agoda-com/adb-butler) image
- [docker-emulator-android](https://github.com/agoda-com/docker-emulator-android) images

## Installing the Chart

To install the chart with the release name `my-release`:

```console
$ helm install --name my-release openstf
```

The command deploys OpenSTF on the Kubernetes cluster in the default configuration. The [configuration](#configuration) section lists the parameters that can be configured during installation.

You need to set `emulators.imagePrefix` and `adb.image.repository` values to the images of [docker-emulator-android](https://github.com/agoda-com/docker-emulator-android) and [adb-butler](https://github.com/agoda-com/adb-butler) you've built in order for the chart to work properly. This can be done either in `values.yaml` or via the command-line. The full installation will look something like:

```console
$ helm install --name openstf -f openstf/values.yaml \
    --set emulators.imagePrefix=docker-registry/agoda/docker-emulator-android- \
    --set emulators.imageVersion=1.0.0 \
    --set adb.image.repository=docker-registry/agoda/adb-butler \
    --set pullSecret=docker-registry-secret \
    --set ingress.enabled=true \
    --set ingress.hostname=openstf.svc.cluster.local \
    --set ingress.ssl.enabled=true \
    --set ingress.ssl.secret=ssl-secret \
    --set rethinkdb.password=strongpassword \
    openstf
```

> **Tip**: List all releases using `helm list`

## Uninstalling the Chart

To uninstall/delete the `my-release` deployment:

```console
$ helm delete my-release
```

The command removes all the Kubernetes components associated with the chart and deletes the release.

# Nodes configuration
You need to label and taint the usb provider nodes and kvm nodes as following

USB providers:
```
$ kubectl label nodes node-x.cluster.local openstf.io/provider=true
$ kubectl taint nodes node-x.cluster.local openstf.io/provider=true:NoSchedule
```

Emulator nodes:
```
$ kubectl label nodes node-x.cluster.local openstf.io/emulator=kvm
```

# Configuration

The following tables lists the configurable parameters of the openstf chart and their default values.

Parameter | Description | Default
--- | --- | ---
`stf.image.repository` | OpenSTF container image repository | `openstf/stf`
`stf.image.tag` | OpenSTF container image tag | `v3.2.0`
`stf.image.pullPolicy` | OpenSTF container image pull policy | `IfNotPresent`
`stf.api.replicas` | Desired number of API pods | `3`
`stf.app.replicas` | Desired number of app pods | `1`
`stf.auth.replicas` | Desired number of auth pods | `1`
`stf.processor.replicas` | Desired number of processor pods | `5`
`stf.reaper.replicas` | Desired number of reaper pods | `1`
`stf.apkStorage.replicas` | Desired number of apk-storage pods | `1`
`stf.imgStorage.replicas` | Desired number of image-storage pods | `1`
`stf.storage.replicas` | Desired number of storage pods | `1`
`stf.triproxyDev.replicas` | Desired number of triproxy-dev pods | `1`
`stf.triproxyApp.replicas` | Desired number of triproxy-app pods | `1`
`stf.websocket.replicas` | Desired number of websocket pods | `1`
`nginx.image.repository` | nginx container image repository | `nginx`
`nginx.image.tag` | nginx container image repository tag | `1.13.8-alpine`
`nginx.image.pullPolicy` | nginx container image pullPolicy | `IfNotPresent`
`nginx.replicas` | Desired number of nginx pods | `1`
`adb.image.repository` | adb-butler container image repository | `agoda/adb-butler`
`adb.image.tag` | adb-butler container image repository tag | `latest`
`adb.image.pullPolicy` | adb-butler container image pullPolicy | `Always`
`db.url` | URL of RethinkDB  | `rethinkdb-rethinkdb-proxy.openstf`
`db.port` | TCP port of RethinkDB | `28015`
`db.password` | RethinkDB password | `rethinkdb`
`dns.resolver` | Address of DNS server | `kube-dns.kube-system`
`pullSecret` | Pull secret for pulling all the images | `""""`
`ingress.enabled` | Enable ingress controller resource | `false`
`ingress.annotations` | Custom annotations on ingress resource | `nginx.org/websocket-services: nginx`
`ingress.hostname` | Hostname to your OpenSTF installation | `openstf.local`
`ingress.ssl.enabled` | Utilize TLS backend in ingress | `false`
`ingress.ssl.secret` | TLS Secret (certificates) | `openstf.local-tls-secret`
`emulators.imagePrefix` | Prefix of docker android container image  | `agoda/docker-emulator-android-`
`emulators.imageVersion` | Docker android container image tag | `25`
`emulators.pullPolicy` | Docker android container image pull policy | `IfNotPresent`
`emulator.types` | Types of docker android emulators to spawn | `see below for more info`
`telegraf.image.repository` | telegraf container image repository | `telegraf`
`telegraf.image.tag` | telegraf container image repository tag | `1.5-alpine`
`telegraf.image.pullPolicy` | telegraf container image pullPolicy | `IfNotPresent`
`telegraf.config.outputs.prometheus.enabled` | provide prometheus metrics on provider pods | `true`

> **Tip**: You can use the default [values.yaml](openstf/values.yaml)

## Pod resources
All the pods have sane default resources set. To customize check the [values.yaml](openstf/values.yaml)

## Emulators
In order to create emulators you need to provide configuration inside `emulators.types`. For example you want the to name the batch of devices `tablet7i`, add `ci/uiTest/tablet/7inch` note to all these devices in OpenSTF and change the `config.ini` variable for emulator. You also want 3 instances of such config with API version 26 and 3 instances with API version 19.

```YAML
- name: tablet7i
  note: ci/uiTest/tablet/7inch
  args: ""skin.name=600x1024;hw.lcd.density=160;hw.lcd.height=600;hw.lcd.width=1024;hw.device.name=7in WSVGA (Tablet);avd.ini.displayname=7  WSVGA (Tablet) API 23;""
  instances:
  - version: 26
    count: 3
  - version: 19
    count: 3
```

By default you'll have phones with API versions 17 to 26 and 7' + 10' tablets with API version 25.

# License

android-farm is open source and available under the [Apache License, Version 2.0](LICENSE).

OpenSTF is open source and available under the [Apache License, Version 2.0](https://github.com/openstf/stf/blob/master/LICENSE)

Android SDK components are available under the [Android Software Development Kit License](https://developer.android.com/studio/terms.html)

# Related projects

The emulators are spawned using the
[docker-emulator-android](https://github.com/agoda-com/docker-emulator-android) container image

Default adb side container image with self-healing and metrics is [adb-butler](https://github.com/agoda-com/adb-butler)

Connecting to OpenSTF devices with filtering support and reconnect logic is done using [stf-client](https://github.com/Malinskiy/stf-client)

[fork](https://github.com/agoda-com/fork) is an instrumentation runner with support for reconnecting to adb devices on-the-go and more

[example of ci agent container](https://github.com/Malinskiy/docker-android)
",155,155,37,2,farm,"[android, chart, docker, farm, helm, kubernetes, openstf]",00000
928,lol-bot,iholston,N/A,https://github.com/iholston/lol-bot,https://api.github.com/repos/iholston/lol-bot,An account leveling bot for League of Legends written in Python,"<p align=""center"">
  <a href=""https://github.com/iholston/lol-bot"">
    <img src=""https://github.com/iholston/lol-bot/assets/32341824/71f35164-c8a6-42ca-a254-68d8be92780e"" alt=""Logo"">
  </a>
</p>

## Welcome to LoL Bot
- This is a python bot that uses the local League Client API to start games and plays them with a simple but effective game loop.
- This bot has leveled up [thousands of league accounts](https://www.playerauctions.com/lol-account/) and is still going strong.
- No pixel botting and/or image recognition makes it easy to run on any setup.

</br>
<p align=""left"">
  <img src=""https://user-images.githubusercontent.com/32341824/231916860-8cdaa0bb-c808-48f7-8afe-5cd151501a98.gif"")
</p>

## Current Features
- Start League and Login
- Start a Beginner Bot Game
- Buy items and somewhat intelligently push mid until the game is over
- End game, earn experience, collect rewards
- Loop 🥡🧋

## Requirements
- [Python >= 3.10](https://www.python.org/downloads/)
- [League of Legends](https://signup.leagueoflegends.com/en-us/signup/download)
- [League of Legends Account](https://signup.leagueoflegends.com/en-us/signup/index)

## Setup
- Ensure Python is added to your PATH, check ""Add Python to PATH"" when [installing](https://www.youtube.com/watch?v=uDbDIhR76H4)
- Clone the repo or Download the [latest release](https://github.com/iholston/lol-bot/releases)
- Download [extra RAM](https://downloadmoreram.com/) (only if needed)
- Run Installer.bat or ```pip install -r requirements.txt```

## Optional Configuration
- constants.py
  - For non-standard league install paths, update the ```LEAGUE_CLIENT_DIR``` 
  - To level accounts past level 30, update ```ACCOUNT_MAX_LEVEL``` 
  - To change the game mode update ```GAME_LOBBY_ID``` with another lobby id. (*Note*: the bot is designed for beginner or itermediate bots, lobby id: 840/850) 
- account.py
  - To continuously level new league accounts, implement account.py to connect to your database of league accounts.
  - For a simple implementation, add your accounts to the accounts.json file in the resources folder and copy accounts.py from the resources folder into the scripts folder

For Virtual Machine setups, I recommend starting with [this forum](https://www.unknowncheats.me/forum/league-of-legends/480977-run-league-legends-virtual-machine-vmware.html). *Note:* I will not be fixing/troubleshooting VM related issues as there are far too many VM implementation/platform specific issues

The League of Legends accounts should already have accepted the riot promise, set a username, and skipped the tutorials. The bot will automatically change your league settings/configuration and the game window (not the client) should open as a 1024x720 window

## Disclaimer
Another LoL Bot isn’t endorsed by Riot Games and doesn’t reflect the views or opinions of Riot Games or anyone officially involved in producing or managing League of Legends. League of Legends and Riot Games are trademarks or registered trademarks of Riot Games, Inc. League of Legends © Riot Games, Inc.

This software works with other programs/services (League of Legends) so you take full responsibility for breaking their Terms of Service and full responsibility for the accounts that you’re using with this bot and agree to use it at your own risk
",134,134,5,15,farm,"[bot, exp, farm, game, lcu-api, league-bot, league-of-legends, league-of-legends-api, league-of-legends-bot, league-of-legends-python, python]",00000
929,frostline,waldoj,N/A,https://github.com/waldoj/frostline,https://api.github.com/repos/waldoj/frostline,"A dataset, API, and parser for USDA plant hardiness zones.","# Frostline

A parser for USDA plant hardiness zones. That data is provided in bulk by [the PRISM Climate Group at Oregon State University](http://www.prism.oregonstate.edu/projects/plant_hardiness_zones.php). This combines the four bulk files with ZIP location data, and creates a JSON file for each ZIP, functioning as a static API.

Note that _not every U.S. ZIP code is part of this dataset._ The PHZ source data, provided by PRISM, does not include every ZIP, and there is no complete list of the location of all ZIP codes in the PHZ source data.

The resulting data is used to create an API at phzmapi.org, in format `{ZIPCODE}.json`, e.g. [`https://phzmapi.org/20001.json`](https://phzmapi.org/20001.json).

![Map of the U.S.](https://cloud.githubusercontent.com/assets/656758/8011208/c1b7ea48-0b84-11e5-967b-a496cdfe0fe0.jpg)

(Per PRISM Climate Group's Terms of Service, note that the above map is not the official USDA Plant Hardiness Zone Map.)

## Run It Yourself

`./frostline.py`

## Map The Data

You can generate a nice interactive map of the data. First convert the data to GeoJSON:

```
node map.js
```

This creates `map.geojson`. Then view `map.html` in a browser. You will need to serve the map on a simple web server (not at a `file://` URL) so that it can access the GeoJSON file on disk (`file://` URLs block access to other files). That was used by Josh Tauberer to generate the above map.

## Plant Hardiness Zones

This is the national standard for knowing which plants will grow where. It’s determined based on the average annual minimum temperature over the prior 30 years, with each zone comprising a 10°F band. There are 26 zones in all. The standard was developed by the U.S., but other countries have adopted the same standard. Companies that sell plants, seeds, roots, and bulbs  (e.g., Burpee) use these zones to help customers understand what will thrive in their area, and to decide when to ship orders to help them to thrive. For more information, see [the Wikipedia entry](http://en.wikipedia.org/wiki/Hardiness_zone) or the [USDA’s explanation](http://planthardiness.ars.usda.gov/PHZMWeb/About.aspx).
",127,127,12,13,farm,"[api, farm, garden, plants, usda]",00000
930,OsuHelper,Tyrrrz,N/A,https://github.com/Tyrrrz/OsuHelper,https://api.github.com/repos/Tyrrrz/OsuHelper,Beatmap suggester for osu!,"{'message': 'Not Found', 'documentation_url': 'https://docs.github.com/rest/repos/contents#get-repository-content'}",98,98,10,0,farm,"[beatmap, farm, osu, pp, recommendation, rhythm-game, suggestion]",00000
931,mcloud,zebrunner,zebrunner,https://github.com/zebrunner/mcloud,https://api.github.com/repos/zebrunner/mcloud,Mobile farm ecosystem for Android and iOS devices,"Zebrunner MCloud
==================

Zebrunner MCloud is a Device Farm for automated test execution (Appium) and remote web access by humans to physical devices (Android and iOS) including phones, tablets, and TVs. It is fully integrated into the [Zebrunner (Community Edition)](https://zebrunner.github.io/community-edition) ecosystem and can be used both for manual and automated testing.

* It is built on top of [OpenSTF](https://github.com/openstf) and supports iOS devices remote control.

Feel free to support the development with a [**donation**](https://www.paypal.com/donate?hosted_button_id=JLQ4U468TWQPS) for the next improvements.

<p align=""center"">
  <a href=""https://zebrunner.com/""><img alt=""Zebrunner"" src=""https://github.com/zebrunner/zebrunner/raw/master/docs/img/zebrunner_intro.png""></a>
</p>

## System requirements 

### Hardware requirements

|                         	| Requirements                                                     	|
|:-----------------------:	|------------------------------------------------------------------	|
| <b>Operating System</b> 	| Ubuntu 16.04 - 21.10<br>Linux CentOS 7+<br>Amazon Linux 2<br>MacOS|
| <b>       CPU      </b> 	| 4+ Cores                                                         	|
| <b>      Memory    </b> 	| 16 Gb RAM                                                        	|
| <b>    Free space  </b> 	| SSD 32Gb+ of free space                                         	|

### Software requirements

* Install docker ([Ubuntu 16.04](https://www.digitalocean.com/community/tutorials/how-to-install-and-use-docker-on-ubuntu-16-04), [Ubuntu 18.04](https://www.digitalocean.com/community/tutorials/how-to-install-and-use-docker-on-ubuntu-18-04), [Ubuntu 20.04](https://www.digitalocean.com/community/tutorials/how-to-install-and-use-docker-on-ubuntu-20-04), [Amazon Linux 2](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/docker-basics.html), [Redhat/Cent OS](https://www.cyberciti.biz/faq/install-use-setup-docker-on-rhel7-centos7-linux/))
  
* Install [docker-composer](https://docs.docker.com/compose/install/#install-compose) 1.25.5+

* Install git 2.20.0+

## Usage
1. Clone [mcloud](https://github.com/zebrunner/mcloud) and set up:
   ```
   git clone https://github.com/zebrunner/mcloud.git && cd mcloud && ./zebrunner.sh setup
   ```
   > Provide valid protocol, hostname, and port
2. Start services `./zebrunner.sh start`
3. Open `http://hostname:80/stf`
4. Log in using any name/email values as auth-mock is configured by default
5. Goto Settings->Keys and generate new Access Token
6. Paste generated token into the variables.env for `STF_TOKEN` var
7. Restart services using `./zebrunner.sh restart`
8. Set up the servers with Android and iOS devices according to [mcloud-agent](https://github.com/zebrunner/mcloud-agent)
   > [mcloud-ios](https://github.com/zebrunner/mcloud-ios) is deprecated. Use the same can be [mcloud-agent](https://github.com/zebrunner/mcloud-agent) to setup on MacOS too!
9. Use `http://hostname:80/mcloud/grid/console` to see connected devices and `http://hostname:80/mcloud/wd/hub` as Selenium/Appium hub url for test automation.

> Follow the installation and configuration guide in [Zebrunner CE](https://zebrunner.github.io/community-edition) to reuse MCloud components effectively for Test Automation.

## Components
* [mcloud-agent](https://github.com/zebrunner/mcloud-agent) - Device Farm agent for connecting physical Android and iOS devices including phones, tablets, and TVs via Linux or MacOS.
* [mcloud-device](https://github.com/zebrunner/mcloud-device) - Dockerized STF provider image for Android and iOS devices.
* [mcloud-grid](https://github.com/zebrunner/mcloud-grid) - Enhanced Selenium Grid for automating physical devices and emulators/simulators via Appium.
* [appium](https://github.com/zebrunner/appium) - Enhanced Appium image with low-level video recording and local storage for ipa/apk artifacts.

## Documentation and free support
* [Zebrunner PRO](https://zebrunner.com)
* [Zebrunner CE](https://zebrunner.github.io/community-edition)
* [Zebrunner Reporting](https://zebrunner.com/documentation)
* [Carina Guide](http://zebrunner.github.io/carina)
* [Demo Project](https://github.com/zebrunner/carina-demo)
* [Telegram Channel](https://t.me/zebrunner)
 
## License
Code - [Apache Software License v2.0](http://www.apache.org/licenses/LICENSE-2.0)

Documentation and Site - [Creative Commons Attribution 4.0 International License](http://creativecommons.org/licenses/by/4.0/deed.en_US)
",84,84,9,12,farm,"[android, androidtv, ansible, appium, automation, cloud, devicefarm, docker, farm, hub, ios, macos, mobile, openstf, phone, stf, tablet, testing, tv, tvos]",00000
932,controlfloor,nanoscopic,N/A,https://github.com/nanoscopic/controlfloor,https://api.github.com/repos/nanoscopic/controlfloor,System for controlling devices remotely,"# controlfloor
System for controlling devices remotely

# Install Instructions
* See ![ios_remote_provider README](https://github.com/nanoscopic/ios_remote_provider/blob/main/README.md)

Diagram of architecture of Control Floor attached.
![ControlFloor](https://user-images.githubusercontent.com/905365/106125382-f30cb780-6110-11eb-9db1-d74b289205fd.png)
",76,76,9,6,farm,"[appium, farm, ios, remote-control, remote-testing]",00000
933,PoShMon,HiltonGiesenow,N/A,https://github.com/HiltonGiesenow/PoShMon,https://api.github.com/repos/HiltonGiesenow/PoShMon,A PowerShell-based server and farm monitoring solution,"# PoShMon
PoShMon is an open source PowerShell-based server and farm monitoring solution. It's an ""agent-less"" monitoring tool, which means there's nothing that needs to be installed on any of the environments you want to monitor - you can simply run or schedule the script from a regular workstation and have it monitor a single server or group of servers, using PowerShell remoting. PoShMon is also able to monitor ""farm""-based products like SharePoint, in which multiple servers work together to provide a single platform. For details on why I built PoShMon, see the bottom of this page.

## Key Features
Some of the key features / benefits of PoShMon are:
* Agent-less Monitoring - nothing needs to be installed on the remote servers
* Core operating system and web-site monitoring
* Specialized SharePoint monitoring
* Supports frequent/critical as well as comprehensive daily monitoring
* Email, Pushbullet (mobile), Office 365 Teams (""Chat-ops"") and Twilio (SMS) notifications
* Provides a framework for a ['self-healing'](https://github.com/HiltonGiesenow/PoShMon/wiki/Creating-a-Self-Healing-System-Using-PoShMon) system

## Installation Instructions
PoShMon is available on the [PowerShell Gallery](https://www.powershellgallery.com/packages/PoShMon) so you can either download it from this GitHub page or even install it directly from the gallery onto your local workstation using

`PS> Install-Module -Name PoShMon`

## Prerequisites
While PoShMon is indeed ""agent-less"", it **does need to execute remote PowerShell commands** against the servers in question. As a result, you need to ensure that PowerShell remoting is correctly configured and also that you are running PoShMon under an account that has the correct rights to connect to the server remotely and execute the requisite commands. You also need to make sure you're not going to encounter the classic 'Double Hop' issue. If you're already remotely administering your environment you're probably fine, but have a look at the quick [Prerequisite Guide](https://github.com/HiltonGiesenow/PoShMon/wiki/Prerequisites) to confirm / set up what you need.

## Getting Started
(Below is a quick overview - for more, please visit the more complete [Getting Started Guide](https://github.com/HiltonGiesenow/PoShMon/wiki/Getting-Started-With-PoShMon))
Once you've installed PoShMon, you can have a look at the [Samples](https://github.com/HiltonGiesenow/PoShMon/tree/master/src/0.4.0/Samples) folder to get an idea how to use it. As an example, to monitor a farm of web servers you can use

```
$poShMonConfiguration = New-PoShMonConfiguration {
                General `
                    -EnvironmentName 'Intranet Farm' `
                    -MinutesToScanHistory 15 `
                    -ServerNames 'WebServer1','WebServer2' `
                OperatingSystem `
                    -EventLogCodes 'Critical'
                WebSite `
                    -WebsiteDetails @{ 
                                        ""http://intranet"" = ""Read our terms""
                                     }
                Notifications -When OnlyOnFailure {
                    Email `
                        -ToAddress ""IntranetTeam@Company.com"" `
                        -FromAddress ""Monitoring@company.com"" `
                        -SmtpServer ""EXCHANGE.COMPANY.COM"" `
                }         
            }

$monitoringOutput = Invoke-OSMonitoring -PoShMonConfiguration $poShMonConfiguration
```

Some things to note on the above:

* The actual ""monitoring"" takes place on the last line with [`Invoke-OSMonitoring`](https://github.com/HiltonGiesenow/PoShMon/blob/master/src/0.4.0/Functions/PoShMon.OSMonitoring/Invoke-OSMonitoring.ps1). The lines above are just setting up your specific configuration.
* To make the config a little more readable, I've put each parameter on a new line (note the '`' PowerShell line-continuation character). This is not required, or course, so your configuration could be shorter.

Here's another example, to monitor a SharePoint farm

```
$poShMonConfiguration = New-PoShMonConfiguration {
                General -EnvironmentName 'SharePoint' -MinutesToScanHistory 1440 -PrimaryServerName 'SPAPPSVR01' -ConfigurationName SpFarmPosh -TestsToSkip ""SPDatabaseHealth""
                OperatingSystem -EventLogCodes 'Error','Warning'
                WebSite -WebsiteDetails @{ 
                                        ""http://intranet"" = ""Read our terms""
                                        ""http://extranet.company.com"" = ""Read our terms""
                                     }
                Notifications -When All {
                    Email -ToAddress ""SharePointTeam@Company.com"" -FromAddress ""Monitoring@company.com"" -SmtpServer ""EXCHANGE.COMPANY.COM""
                }
            }

$monitoringOutput = Invoke-SPMonitoring -PoShMonConfiguration $poShMonConfiguration
```

* Note the use of `PrimaryServerName` instead of `ServerNames`. Instead of a list of servers, you need only to supply PoShMon with details of a ""primary"" server (you can choose any of the SharePoint servers, but typically this is an ""application"" or ""batch"" server, on which the main monitoring work will occur) and it will use SharePoint's API to determine the remaining servers.
* Note also the use of [`Invoke-SPMonitoring`](https://github.com/HiltonGiesenow/PoShMon/blob/master/src/0.4.0/Functions/PoShMon.SharePoint/Invoke-SPMonitoring.ps1) instead of [`Invoke-OSMonitoring`](https://github.com/HiltonGiesenow/PoShMon/blob/master/src/0.4.0/Functions/PoShMon.OSMonitoring/Invoke-OSMonitoring.ps1). ""EnvironmentName"", which appears in notifications (emails etc.) is also changed to something more suitable.
* 'MinutesToScanHistory' is 1440 instead of 15, so this is more of a daily monitoring example. We've also got `Notifications -When All` instead of `Notifications -When OnlyOnFailure` because we want notifications (emails or similar) in all cases for daily monitoring, unlike for Critical monitoring where we only want to be alerted of major issues. This is also why the EventLogCodes have been changed.
* An important note for monitoring tests where direct access to the servers is required, like in SharePoint where certain commands need to be run remotely: In this case, remote PowerShell sessions are used and, to improve security, PowerShell sessions have been configured to run under appropriate user accounts. You can find out more about the related 'double-hop' issue [here](https://blogs.technet.microsoft.com/ashleymcglone/2016/08/30/powershell-remoting-kerberos-double-hop-solved-securely/) and learn about how to configure remote sessions in this way (instead of using Kerberos or CredSSP) by visiting [this link](https://blogs.msdn.microsoft.com/sergey_babkins_blog/2015/03/18/another-solution-to-multi-hop-powershell-remoting/).
* Storing the output of the monitoring (`$monitoringOutput`) is not required, of course, but it's helpful if you want to do anything with it, like try [automatically correct regular issues in your environment](https://github.com/HiltonGiesenow/PoShMon/wiki/Creating-a-Self-Healing-System-Using-PoShMon).

After that, simply run the script and it will perform an on-demand monitoring of the servers or environments. Of course, you might like to schedule these monitoring tests to run automatically, so see the next section for how to do this.

## Scheduled Monitoring
Ad-hoc monitoring can be useful to troubleshoot specific issues, but mostly we want our monitoring to be automated and scheduled. Because PoShMon simply consists of PowerShell scripts, to have then be scheduled we can rely on simple Windows Task Scheduler, and just set the Tasks to run on a reasonable basis. Here are some [example Task Scheduler](https://github.com/HiltonGiesenow/PoShMon/tree/master/src/0.4.0/Samples/Scheduled%20Task%20Definitions) definitions that can be imported. The first runs ""Critical"" level monitoring, so it runs every 15 minutes, skips some of the longer-running and less essential tests and notifies only on failure, whereas the latter runs the full barrage of tests on a nightly basis and send a detailed breakdown.

## That's It!
That's all there is to it! Hopefully PoShMon is of use to you and of course feel free to [contribute](https://github.com/HiltonGiesenow/PoShMon/issues) to the project, there's tons more that can be done!

---

## A Note on Why I built PoShMon
Of course there are loads of monitoring systems and tools out there, both paid and free / open source ones. However, there are two main reasons I initially built PoShMon:

1. I wanted to grow my PowerShell knowledge and there didn't seem to be anything purely PowerShell based that could offer what I wanted

2. Many of the tools don't have a lot of product depth. For instance, many Windows monitoring tools can do basic disk / memory / event log monitoring for SharePoint servers but few can actually give me SharePoint-specific metrics, like how healthy the Search service is, what Timer jobs have failed,  or whether any of the servers need to be upgraded (note that many of these tests can be greatly improved). I'm hoping that PoShMon becomes the home for powerful, specialised monitoring of many other products and platforms, like Exchange, SQL Server, CRM and more.

---

## Release Notes
1.3.0
* Added storing of exceptions for later resolution, where possible (Exception might be environmental, and repairable)
* Fixed bug in Windows Event Log monitoring returning empty details
* Added platform build number to email notifications (SharePoint and OOS)
* Added ability to set SMTP authentication separately from other Internet access

1.2.0
* Improved ability to ignore event log entries (based on a minimum count)
* Added a repair for Office Online Server (previously 'Office Web Apps') to repair the W3C service if stopped
* Improved discovery of other servers in a 'farm' product (e.g. SharePoint, Office Online Server)
* Improved some Verbose output
* Improved formatting for Exception and Repair emails
* Other minor bug fixes

1.1.1
* Various bug fixes in Web tests
* Renamed html ad hoc report function
* Various bug fixes in html ad hoc report function

1.1.0
* Added ability to create ad-hoc html report
* For Drive Space test, added Volume Name to output
* Added html formatting to Exception emails

1.0.0
* Official 1.0.0 release
* Added SMS notification via Twilio
* Improved SharePoint Distributed Cache health test
* Fixed some unit tests
* Fixed Unsupported Verbs warning
* Notification refactor
* Fixed failing Websites test for cookie prompt
* Fixed CPU test failing on local machine
* Fixed CPU test bug for group of servers
* Fixed EventLog test bug
* Improved failure message for Windows Service tests

0.15.1
* Adding capability to run without any config (to scan local machine)
* Minor wording change

0.15.0
* Bug fixes for Pushbullet and Microsoft Teams message posting
* Added sample for self-healing
* Minor code cleanups

0.14.0
* Integration with Operation Validation Framework (OVF)

0.13.0
* Implement hyperlinks in output
* Implemented CI server
* Created a Merger framework (to merge multiple outputs)
* Create a Merger for OS output
* Removed ApplicationName from SharePoint Job Health Test
* Add 'Last Reboot Time' test  

0.12.0
* Added Office Web Apps / Office Online Server monitoring
* Added some style to Email output
* Changed display to Hard Drive and Memory output
* Fixed bug in email footer for skipped tests

See [here](https://github.com/HiltonGiesenow/PoShMon/wiki/Changelog) for full Changelog
",57,57,13,27,farm,"[farm, monitoring, powershell, powershell-remoting, sharepoint]",00000
934,awesome-indoor-farming,csmsx,csmsx,https://github.com/csmsx/awesome-indoor-farming,https://api.github.com/repos/csmsx/awesome-indoor-farming,"A curated list of awesome dataset, technologies, companies, and media about Indoor Farming.","{'message': 'Not Found', 'documentation_url': 'https://docs.github.com/rest/repos/contents#get-repository-content'}",54,54,10,0,farm,"[awesome-list, dataset, farm, indoor-farming, oss]",00000
935,ppl,valebes,N/A,https://github.com/valebes/ppl,https://api.github.com/repos/valebes/ppl,Parallelo Parallel Library (PPL) is a small parallel framework that brings Structured Parallel Programming in Rust.,"<p align=""center"">
  <img width=""325"" height=""104"" src="".github/logo.png"">
</p>

<hr/>
<p align=""center"">
  <a href=""https://github.com/valebes/pspp/actions/workflows/rust.yml"">
    <img alt=""Build"" src=""https://img.shields.io/github/actions/workflow/status/valebes/ppl/rust.yml?style=for-the-badge"">
  </a>

  <a href=""https://opensource.org/license/apache-2-0/"">
    <img src=""https://img.shields.io/github/license/valebes/ppl?style=for-the-badge"">
  </a>

  <a href=""https://crates.io/crates/ppl"">
    <img alt=""Crates.io"" src=""https://img.shields.io/crates/v/ppl?style=for-the-badge"">
  </a>

  <a href=""https://docs.rs/ppl/latest/ppl/"">
    <img alt=""Docs.rs"" src=""https://img.shields.io/docsrs/ppl?style=for-the-badge"">
  </a>

   <a href=""https://codecov.io/gh/valebes/ppl"">
    <img alt=""Codecov"" src=""https://img.shields.io/codecov/c/github/valebes/ppl?style=for-the-badge"">
  </a>
  
</p>
 
# Parallelo Parallel Library (PPL): Unlock the Power of Parallel Computing in Rust

🌟 Welcome to Parallelo Parallel Library (PPL) – a small, but powerful, parallel framework written in Rust. 🚀

Parallelo Parallel Library (PPL) is an under-development parallel framework written in Rust. The main goal of PPL is to provide a structured approach to parallel programming in Rust, allowing developers to unleash the power of parallelism without having to deal with low-level concurrency management mechanisms.
PPL empowers your Rust programs by unlocking the immense potential of parallelism, making your computations faster and more efficient. Whether you're working on large-scale data processing, simulations, or any computationally intensive task, PPL has got you covered.

## Table of Contents

- [Features](#features)
- [Installation](#installation)
- [Usage](#usage)
  - [A Simple (but long) Example: Fibonacci pipeline](#a-simple-but-long-example-fibonacci-pipeline)
  - [A More Complex Example: Word Counter](#a-more-complex-example-word-counter)
  - [An Advanced Example: Single-Input Multi-Output stage](#an-advanced-example-single-input-multi-output-stage)
- [Configuration](#configuration)
- [Channel Backend](#channel-backend)
  - [FastFlow Channel](#fastflow-channel)
- [Benchmarks](#benchmarks)
  - [Available Benchmarks](#available-benchmarks)
  - [Image-Processing Results](#image-processing-results)
  - [Mandelbrot Set Results](#mandelbrot-set-results)
- [Contributing](#contributing)
  - [Code of Conduct](#code-of-conduct)
  - [How to Contribute](#how-to-contribute)
  - [Reporting Issues](#reporting-issues)
- [Warning](#warning)
- [License](#license)


## Features

- **Parallel Computing**: Unleash the full power of parallelism in Rust with the Parallelo Parallel Library (PPL). Tap into the potential of multiple cores to turbocharge your computations, making them faster and more efficient than ever before.

- **Task, Stream, and Data Parallelism**: PPL offers tools to express task, stream, and data parallelism models. Harness the power of task parallelism to break down your computations into smaller tasks that can be executed in parallel. Handle continuous data streams and process structured datasets in parallel, enabling efficient data processing and analysis.

- **Work-Stealing Thread Pool**: PPL includes a work-stealing thread pool that elevates parallel execution to new heights. Thanks to the work-stealing thread pool, tasks are dynamically distributed among available threads, ensuring load balancing and efficient utilization of computational resources. This feature boosts the efficiency of parallel computations, enabling superior performance and scalability in your Rust applications.

- **Efficient Resource Management**: Optimal resource management is vital in the realm of parallel programming. PPL grants you fine-grained control over resource allocation, including choose the number of threads to use, set up thread wait policies, and enable CPU pinning. This level of control ensures the optimal utilization of your hardware resources, resulting in enhanced performance and efficiency for your parallel computations.

- **Multiple Channel Backends**: PPL provides you with the freedom to choose from a range of channel backends for seamless communication and coordination between parallel tasks. Take advantage of popular channel implementations like crossbeam-channel, flume, and kanal. Each backend possesses its own unique performance characteristics, memory usage, and feature set, allowing you to select the one that perfectly aligns with your specific requirements. These versatile channel backends facilitate smooth data flow and synchronization within your parallel computations.

- **Flexibility and Customization**: With PPL you have the flexibility to create custom nodes for your pipeline, allowing you to express more complex parallel computations. This empowers you to tailor your parallel pipelines to suit your precise needs, creating highly customizable parallel workflows. Stateful nodes can store intermediate results and maintain crucial context information, enabling efficient data sharing between different stages of the computation. This flexibility and customizability augment the expressiveness of PPL, enabling you to tackle a wide range of parallel programming scenarios.

- **Intuitive API**: Whether you're a seasoned parallel computing expert or a parallelism novice, PPL simplifies parallel programming with its intuitive API based on Structured Parallel Programming. Developers of all skill levels can effortlessly harness the power of parallel computing in Rust. The intuitive API ensures a smooth learning curve, allowing you to dive straight into parallelizing your computations with ease.

## Installation

Parallelo Parallel Library (PPL) is currently available on both GitHub and Crates.io. 

Please make sure you have Rust and Cargo installed on your system before proceeding. If you don't have them installed, you can get them from the official Rust website: [https://www.rust-lang.org/tools/install](https://www.rust-lang.org/tools/install)

To use PPL in your Rust project, you can add the following in your Cargo.toml:

```toml
[dependencies]
ppl = { git = ""https://github.com/valebes/ppl.git"" }
```

## Usage
### A Simple (but long) Example: Fibonacci pipeline
Here a simple example that show how create a pipeline that computes the first 20 numbers of Fibonacci.

This pipeline is composed by:
- **Source**: emits number from 1 to 20.
- **Stage**: computes the i-th number of Fibonacci.
- **Sink**: accumulates and return a Vec with the results.

Here a snipped of code to show how build this pipeline:
```rust
use ppl::{prelude::*, templates::misc::{SourceIter, Sequential, SinkVec}};

fn main() {
    let mut p = pipeline![
        SourceIter::build(1..21),
        Sequential::build(fib), // fib is a method that computes the i-th number of Fibonacci
        SinkVec::build()
    ];
    p.start();
    let res = p.wait_end().unwrap().len();
    assert_eq!(res, 20)
}
```

In this example we're building a simple pipeline, so why not use clousure instead than the library templates?
```rust
use ppl::prelude::*;

fn main() {
    let mut p = pipeline![
        {
            let mut counter = 0; 
            move || { 
                if counter < 20 {
                    counter += 1;
                    Some(counter)
                } else {
                    None
                }
            }
        },
        |input| Some(fib(input)),
        |input| println!(""{}"", input)
    ];
    p.start();
    p.wait_end();
}
```

The run-time supports of the framework will call the clousure representing the Source till it returns `None`, when the Source returns `None` then a termination message will be propagated to the other stages of the pipeline.

If we want to parallelize the computation we must find a part of this algorithm that can be parallelized.
In this case the stage in the middle is a good candidate, we replicate that stage introducing a Farm.

Now the code is as follows:
```rust
use ppl::{prelude::*, templates::misc::{SourceIter, Parallel, SinkVec}};

fn main() {
    let mut p = pipeline![
        SourceIter::build(1..21),
        Parallel::build(8, fib), // We create 8 replicas of the stage seen in the previous code.
        SinkVec::build()
    ];
    p.start();
    let res = p.wait_end().unwrap().len();
    assert_eq!(res, 20)
}
```

If we don't want to use the templates offered by the library, there is the possibility to create custom stage.
By creating custom stages it is possible to build stateful and more complex nodes for our pipeline.

Here the same example but using custom defined stages:
```rust
use ppl::prelude::*;

struct Source {
    streamlen: usize,
    counter: usize,
}
impl Out<usize> for Source {
    // This method must be implemented in order to implement the logic of the node
    fn run(&mut self) -> Option<usize> {
        if self.counter < self.streamlen {
            self.counter += 1;
            Some(self.counter)
        } else {
            None
        }
    }
}

#[derive(Clone)]
struct Worker {}
impl InOut<usize, usize> for Worker {
    // This method must be implemented in order to implement the logic of the node
    fn run(&mut self, input: usize) -> Option<usize> {
        Some(fib(input))
    }
    // We can override this method to specify the number of replicas of the stage
    fn number_of_replicas(&self) -> usize {
        8
    }
}

struct Sink {
    counter: usize,
}
impl In<usize, usize> for Sink {
    // This method must be implemented in order to implement the logic of the node
    fn run(&mut self, input: usize) {
        println!(""{}"", input);
        self.counter += 1;
    }
    // If at the end of the stream we want to return something, we can do it by implementing this method.
    fn finalize(self) -> Option<usize> {
        println!(""End"");
        Some(self.counter)
    }
}

fn main() {
    let mut p = pipeline![
        Source {
            streamlen: 20,
            counter: 0
        },
        Worker {},
        Sink { counter: 0 }
    ];

    p.start();
    let res = p.wait_end(); // Here we will get the counter returned by the Sink
    assert_eq!(res.unwrap(), 20);
}
```

Surely is more verbose, but allows to express a more variety of parallel computations in which each node can be stateful. Also, thanks to this approach, it is possible to build templates for stages that can be reused in different pipelines and/or projects.

Parallelo also offers a powerful work-stealing threadpool. Using that instead, we can express the same parallel computation as following:

```rust
use ppl::thread_pool::ThreadPool;

fn main() {
    let tp = ThreadPool::new(); // We create a new threadpool
    for i in 1..21 {
        tp.execute(move || {
            fib(i);
        });
    }
    tp.wait(); // Wait till al worker have finished
}
```

If we don't want to wait the threads explicitly, we can create a parallel scope.
At the end of the scope, all the threads are guaranteed to have finished their jobs.
This can be done with the following code:

```rust
use ppl::thread_pool::ThreadPool;

fn main() {
    let tp = ThreadPool::new(); // We create a new threadpool
    tp.scope(|s| {
        for i in 1..21 {
            s.execute(move || {
                fib(i);
            });
        }
    }); // After this all threads have finished
}
```

### A More Complex Example: Word Counter

To demonstrate the capabilities of Parallelo Parallel Library (PPL), let's consider a common problem: counting the occurrences of words in a text dataset. This example showcases how PPL can significantly speed up computations by leveraging parallelism.

#### Problem

The task is to count the occurrences of each word in a given text dataset. This involves reading the dataset, splitting it into individual words, normalizing the words (e.g., converting to lowercase and removing non-alphabetic characters), and finally, counting the occurrences of each word.

#### Approach 1: Pipeline

The pipeline approach in PPL provides an intuitive and flexible way to express complex parallel computations. In this approach, we construct a pipeline consisting of multiple stages, each performing a specific operation on the data. The data flows through the stages, with parallelism automatically applied at each stage.

In the word counter example, the pipeline involves the following stages:
- **Source**: Reads the dataset and emits lines of text.
- **Map**: Converts each line of text into a list of words, where each word is paired with a count of 1.
- **Reduce**: Aggregates the counts of words by summing them for each unique word.
- **Sink**: Stores the final word counts in a hashmap.

By breaking down the computation into stages and leveraging parallelism, PPL's pipeline approach allows for efficient distribution of work across multiple threads or cores, leading to faster execution.

Here's the Rust code for the word counter using the pipeline approach:

```rust
use ppl::{
    templates::map::{Map, Reduce},
    prelude::*,
};

struct Source {
    reader: BufReader<File>,
}

impl Out<Vec<String>> for Source {
    // Implementation details...
}

struct Sink {
    counter: HashMap<String, usize>,
}
impl In<Vec<(String, usize)>, Vec<(String, usize)>> for Sink {
    fn run(&mut self, input: Vec<(String, usize)>) {
        // Increment value for key in hashmap
        // If key does not exist, insert it with value 1
        for (key, value) in input {
            let counter = self.counter.entry(key).or_insert(0);
            *counter += value;
        }
    }
    fn finalize(self) -> Option<Vec<(String, usize)>> {
        Some(self.counter.into_iter().collect())
    }
}

pub fn ppl(dataset: &str, threads: usize) {
    // Initialization and configuration...

    let mut p = pipeline![
        Source { reader },
        Map::build::<Vec<String>, Vec<(String, usize)>>(threads / 2, |str| -> (String, usize) {
            (str, 1)
        }),
        Reduce::build(threads / 2, |str, count| {
            let mut sum = 0;
            for c in count {
                sum += c;
            }
            (str, sum)
        }),
        Sink {
            counter: HashMap::new(),
        },
    ];

    p.start();
    let res = p.wait_end();
}
```
#### Approach 2: Thread Pool

Alternatively, PPL also provides a thread pool for parallel computations. In this approach, we utilize the `par_map_reduce` function of the thread pool to perform the word counting task.

The thread pool approach in PPL involves the following steps:
- Create a thread pool with the desired number of threads.
- Read the dataset and collect all the lines into a vector.
- Use the `par_map_reduce` function to parallelize the mapping and reducing operations on the vector of words.
- The mapping operation converts each word into a tuple with a count of 1.
- The reducing operation aggregates the counts of words by summing them for each unique word.

Using the thread pool, PPL efficiently distributes the work across the available threads, automatically managing the parallel execution and resource allocation.

```rust
use ppl::prelude::*;

pub fn ppl_map(dataset: &str, threads: usize) {
    // Initialization and configuration...

    let file = File::open(dataset).expect(""no such file"");
    let reader = BufReader::new(file);

    // We can also create custom-sized thread pool
    let mut tp = ThreadPool::with_capacity(threads);

    let mut words = Vec::new();

    reader.lines().map(|s| s.unwrap()).for_each(|s| words.push(s));

    let res = tp.par_map_reduce(
        words
            .iter()
            .flat_map(|s| s.split_whitespace())
            .map(|s| {
                s.to_lowercase()
                    .chars()
                    .filter(|c| c.is_alphabetic())
                    .collect::<String>()
            })
            .collect::<Vec<String>>(),
        |str| -> (String, usize) { (str, 1) },
        |str, count| {
            let mut sum = 0;
            for c in count {
                sum += c;
            }
            (str, sum)
        },
    );
}
```

### An Advanced Example: Single-Input Multi-Output stage

In this example, we demonstrate how to model a data processing pipeline using PPL, where a stage produces multiple outputs for each input received.

This pipeline involves the following stages:
- **Source**: Generates a stream of 1000 numbers.
- **Worker**: Given a number, it produces multiple copies of that number.
- **Sink**: The `SinkVec` struct acts as a sink stage in the pipeline. It collects the output from the worker stage and stores the results in a vector.

The implementation of the `InOut<usize, usize>` trait overrides the `run` method to process the input received from the source and prepare the worker for producing multiple copies. The `produce` method generates the specified number of copies of the input. By implementing the `is_producer` method and returning `true`, this stage is marked as a producer. Additionally, the `number_of_replicas` method specifies the number of replicas of this worker to create for parallel processing.

```rust
use ppl::{templates::misc::SinkVec, prelude::*};

// Source
struct Source {
    streamlen: usize,
    counter: usize,
}
impl Out<usize> for Source {
    fn run(&mut self) -> Option<usize> {
        if self.counter < self.streamlen {
            self.counter += 1;
            Some(self.counter)
        } else {
            None
        }
    }
}

// Given an input, it produces 5 copies of it.
#[derive(Clone)]
struct Worker {
    number_of_messages: usize,
    counter: usize,
    input: usize,
}
impl InOut<usize, usize> for Worker {
    fn run(&mut self, input: usize) -> Option<usize> {
        self.counter = 0;
        self.input = input;
        None
    }
    // After calling the run method, the rts of the framework
    // will call the produce method till a None is returned.
    // After a None is returned, the node will fetch the 
    // next input and call the run method again.
    fn produce(&mut self) -> Option<usize> {
        if self.counter < self.number_of_messages {
            self.counter += 1;
            Some(self.input)
        } else {
            None
        }
    }
    // We mark this node as a producer
    fn is_producer(&self) -> bool {
        true
    }
    fn number_of_replicas(&self) -> usize {
        8
    }
}

fn main() {
    // Create the pipeline using the pipeline! macro
    let mut p = pipeline![
        Source {
            streamlen: 1000,
            counter: 0
        },
        Worker {
            number_of_messages: 5,
            counter: 0,
            input: 0
        },
        SinkVec::build()
    ];

    // Start the processing
    p.start();

    // Wait for the processing to finish and collect the results
    let res = p.wait_end().unwrap();
}
```

More complex examples are available in *benches/*, *examples/*, and in *tests/*.

## Configuration

The configuration of Parallelo Parallel Library (PPL) can be customized by setting environment variables. The following environment variables are available:

- **PPL_MAX_CORES**: Specifies the maximum number of CPUs to use. This configuration is only valid when pinning is active.

- **PPL_PINNING**: Enables or disables the CPU pinning. By default, pinning is disabled (`false`). (Equivalent to `OMP_PROC_BIND` in OpenMP).

- **PPL_SCHEDULE**: Specifies the scheduling method used in the pipeline. The available options are:
  - `static`: Static scheduling (Round-robin) (**Default**).
  - `dynamic`: Dynamic scheduling (Work-stealing between replicas of the same stage enabled).

- **PPL_WAIT_POLICY**: If set to `passive`, the threads will try to give up their time to other threads when waiting for a communication or unused. This is particularly useful when we are using SMT and can improve performances. Instead, if is set to `active`, the threads wil do busy waiting. By default, this option is set to `passive`.

- **PPL_THREAD_MAPPING**: Specifies the thread mapping. By default, the threads are mapped in the order in which the CPUs are found. This option is only valid when pinning is active. (Note that this environment variable is kinda similar to the `OMP_PLACES` environment variable in OpenMP). 
  - Example: `PPL_THREAD_MAPPING=0,2,1,3` will map the threads in the following order:
  `0 -> core 0`, `1 -> core 2`, `2 -> core 1`, `3 -> core 3`.

To customize the configuration, set the desired environment variables before running your Rust program that uses PPL. For example, you can set the environment variables in your shell script or use a tool to load them from a file.

Please note that changing these configuration options may have an impact on the performance and behavior of your parallel computations. Experiment with different settings to find the optimal configuration for your specific use case.

## Channel Backend

Parallelo Parallel Library (PPL) provides flexibility in choosing the channel backend used for multi-producer, single-consumer communication in the framework. Depending on your requirements and preferences, you can select the desired channel backend at compile time using feature flags.

The default backend in PPL is **crossbeam**.

Crossbeam provides a highly performant channel implementation that provides efficient and reliable communication differents threads. It is well-suited for a wide range of parallel computing scenarios.

Overall, PPL supports the following backends:

- **crossbeam**: Uses the [Crossbeam](https://github.com/crossbeam-rs/crossbeam) channel (**Default**).
- **flume**: Uses the [Flume](https://github.com/zesterer/flume) channel.
- **kanal**: Uses the [Kanal](https://github.com/fereidani/kanal) channel.
- **ff**: Uses a channel based on [FastFlow](http://calvados.di.unipi.it/) queues (**Experimental**).

To select a specific channel backend, enable the corresponding feature flag during the build process. For example, to use the flume channel, add the following to your Cargo.toml file:

```toml
[dependencies]
ppl = { git = ""https://github.com/valebes/ppl.git"", default-features = false, features = [""flume""]}
```

### FastFlow Channel
In addition to the others channel backends, PPL also provides an experimental mpsc channel implementation based on FastFlow queues. This backend is available using the `ff` feature flag.
This implementation can be found [here](https://github.com/valebes/ff_buffer) and is substantially based on the [FF Buffer](https://github.com/lucarin91/ff_buffer) by [Luca Rinaldi](https://github.com/lucarin91).

This backend is built around a wrapper for the FastFlow queues that provides a channel-like interface.

In order to use this implementation you must download and install the FastFlow library in the home directory. The library can be downloaded from [here](http://calvados.di.unipi.it/) or as follows:

```bash
cd ~
git clone https://github.com/fastflow/fastflow.git
```

## Benchmarks
The benchmarks are available in the *benches/* directory. To run the benchmarks, use the following command:

```bash
cargo bench
```

In order to generate the data set for the Image-Processing benchmark, do the following:
```bash
cd benches/benchmarks/img/images
./generate_input.sh
```

### Available Benchmarks
- **Image Processing**: A benchmark that is based on the Image-Processing benchmark found in [RustStreamBench](https://github.com/GMAP/RustStreamBench/). You can find the benchmark source code [here](https://github.com/GMAP/RustStreamBench/tree/main/image-processing).

- **Mandelbrot Set**: A basic parallel implementation of the well-known iterative algorithm to compute the Mandelbrot Set.

### Image-Processing Results
Following are reported the results obtained by running the image-processing benchmark.
Both benchmarks were implemented using the Pipeline interface (`ppl`) and the Threadpool interface (`ppl-tp`).

#### Ampere Altra (ARM)
- **Processor**: 2x Ampere Altra 80 Cores @ 3.0GHz
- **Configuration**: PPL with pinning and dynamic scheduling enabled

<table><tr>
<td> <img src="".github/benchmark/AMPERE_PINNING/result_time.svg"" alt=""Time"" style=""width: 450px;""/> </td>
<td> <img src="".github/benchmark/AMPERE_PINNING/speedup.svg"" alt=""SpeedUp"" style=""width: 450px;""/> </td>
</tr></table>

<table><tr>
<td> <img src="".github/benchmark/AMPERE_PINNING/efficiency.svg"" alt=""Efficiency"" style=""width: 450px;""/> </td>
<td> <img src="".github/benchmark/AMPERE_PINNING/scala.svg"" alt=""Scalability"" style=""width: 450px;""/> </td>
</tr></table>

#### AMD EPYC 7551 (x86)
- **Processor**: 2x AMD EPYC 7551 32 Cores @ 2.5 GHz
- **Configuration**: PPL with pinning and dynamic scheduling enabled

<table><tr>
<td> <img src="".github/benchmark/TITANIC_PINNING/result_time.svg"" alt=""Time"" style=""width: 450px;""/> </td>
<td> <img src="".github/benchmark/TITANIC_PINNING/speedup.svg"" alt=""SpeedUp"" style=""width: 450px;""/> </td>
</tr></table>

<table><tr>
<td> <img src="".github/benchmark/TITANIC_PINNING/efficiency.svg"" alt=""Efficiency"" style=""width: 450px;""/> </td>
<td> <img src="".github/benchmark/TITANIC_PINNING/scala.svg"" alt=""Scalability"" style=""width: 450px;""/> </td>
</tr></table>

### Mandelbrot Set Results
Following are reported the results obtained by running the mandelbrot set benchmark.

#### Ampere Altra (ARM)
- **Processor**: 2x Ampere Altra 80 Cores @ 3.0GHz
- **Configuration**: PPL with pinning and dynamic scheduling enabled

<table><tr>
<td> <img src="".github/benchmark/AMPERE_PINNING_MS/result_time.svg"" alt=""Time"" style=""width: 450px;""/> </td>
<td> <img src="".github/benchmark/AMPERE_PINNING_MS/speedup.svg"" alt=""SpeedUp"" style=""width: 450px;""/> </td>
</tr></table>

<table><tr>
<td> <img src="".github/benchmark/AMPERE_PINNING_MS/efficiency.svg"" alt=""Efficiency"" style=""width: 450px;""/> </td>
<td> <img src="".github/benchmark/AMPERE_PINNING_MS/scala.svg"" alt=""Scalability"" style=""width: 450px;""/> </td>
</tr></table>

#### AMD EPYC 7551 (x86)
- **Processor**: 2x AMD EPYC 7551 32 Cores @ 2.5 GHz
- **Configuration**: PPL with pinning and dynamic scheduling enabled

<table><tr>
<td> <img src="".github/benchmark/TITANIC_PINNING_MS/result_time.svg"" alt=""Time"" style=""width: 450px;""/> </td>
<td> <img src="".github/benchmark/TITANIC_PINNING_MS/speedup.svg"" alt=""SpeedUp"" style=""width: 450px;""/> </td>
</tr></table>

<table><tr>
<td> <img src="".github/benchmark/TITANIC_PINNING_MS/efficiency.svg"" alt=""Efficiency"" style=""width: 450px;""/> </td>
<td> <img src="".github/benchmark/TITANIC_PINNING_MS/scala.svg"" alt=""Scalability"" style=""width: 450px;""/> </td>
</tr></table>

## Contributing

Thank you for considering contributing to Parallelo Parallel Library (PPL)!

If you would like to fix a bug, propose a new feature, or create a new template, you are welcome to do so! Please follow the steps below to contribute to PPL.

### Code of Conduct

Please review our [Code of Conduct](./CODE_OF_CONDUCT.md) before contributing.

### How to Contribute

1. **Create an Issue:** Before starting significant changes, [create an issue](https://github.com/valebes/ppl/issues) to discuss and coordinate efforts.

2. **Fork and Clone:** Fork the repository, then clone it to your local machine.

3. **Branching:** Create a new branch for your changes.

4. **Make Changes:** Implement your changes, write clear commit messages.

5. **Tests:** Add tests to ensure the correctness of your changes.

6. **Run Tests:** Verify that all tests pass successfully.

7. **Submit a Pull Request:** Push your branch and [create a pull request](https://github.com/valebes/ppl/pulls) referencing the relevant issue(s).

8. **Review and Iterate:** Address feedback and make necessary changes.

9. **Celebrate! 🎉:** Once approved and merged, your contributions will be part of PPL!

### Reporting Issues

To report bugs, ask questions, or suggest new ideas, [create an issue](https://github.com/valebes/ppl/issues).

## Warning

 This library is still in an early stage of development. The API is not stable and may change in the future.

## License

Licensed under either of
 * Apache License, Version 2.0
   ([LICENSE-APACHE](LICENSE-APACHE) or http://www.apache.org/licenses/LICENSE-2.0)
 * MIT license
   ([LICENSE-MIT](LICENSE-MIT) or http://opensource.org/licenses/MIT)

at your option.

Unless you explicitly state otherwise, any contribution intentionally submitted
for inclusion in the work by you, as defined in the Apache-2.0 license, shall be
dual licensed as above, without any additional terms or conditions.




",49,49,4,0,farm,"[farm, hpc, map, parallel, parallel-programming, pipeline, rust, structured-parallel-programming, thread-pool]",00000
936,PUBG-Battlepoint-FarmBot,ClintOxx,N/A,https://github.com/ClintOxx/PUBG-Battlepoint-FarmBot,https://api.github.com/repos/ClintOxx/PUBG-Battlepoint-FarmBot,A simple easy to use working AFk battle point (bp) farming bot for player unknown battle grounds.,"# AfK-Farm-Bot
Bot/script for Playerunknown Battlegrounds (PUBG) that AFK farms battlepoints(bp)


# The bot no longer works as of April 2018. I rolled back the repo to my last commmit and I am archiving the repo since no further changes will be made. It was a fun ride and I hope everyone got a lot of BP out of it.

I plan on going back and adding doc strings/comments explaining each function/class



![alt text](https://i.imgur.com/7gAKF2m.gif ""Screenshot"")



# Features
* Auto jump from plane at random time
* Runs for random amount of time
* Lays down at the end of running
* Anti Drown safety
* Leaves match a few minutes after it starts ands finds a new match
* Around 6k per 8 hours without you having to do anything ( 42k bp a week @ 8 hours a day, all the crates + sell them on steam)
* Safe, no has been banned for AFK farming



# Directions for Farmer Bot

* Download/clone the files here and open the zip. Follow the instructions in the requirements.txt file.

* Close PUBG if you have it open before you start.

* Make sure PUBG is in full screen windowed

* run botgui.py (by double clicking it or opening cmd and runnin gpyhton botgui.py)

* Pick your screen resolution and hit start!

If you have any errors/problems:

Check the faq file included in the download or check the #faq-and-troubleshooting channel in the discord

# Donate

If you end up making some money off of the boxes you farm, feel free to return the favor and donate to support development

Bitcoin address : 16mCfoqBuvymgVVktCAPp1W6HNL3zoMiFq

ETH: 0x63e41bd08392d69ef698c86af2f83e4e1fcf55a5


# Future plans

I plan to keep updating the bot with theses functions:

* Auto fighting afk players so you can leave earlier(long term) 

* Selecting the server

* Selecting the random jump time 

* Making the bot not freeze up as much while running

[![HitCount](http://hits.dwyl.io/{clintoxen}/{PUBG-Afk-FarmBot}.svg)](http://hits.dwyl.io/{clintoxen}/{PUBG-Afk-FarmBot})
",43,43,16,3,farm,"[afk, afk-battlepoint, battle, battlegrounds, battlepoint, bot, bp, download, farm, farmer, farming, game, player, playerunknown, pubg, python, python36, script, unknown]",00000
937,exploit_farm,alexbers,N/A,https://github.com/alexbers/exploit_farm,https://api.github.com/repos/alexbers/exploit_farm,The utility for CTF hacker competition for team hacking and flag submitting ,"# Exploit Farm #

The utility for CTF hacker competition for launching sploits for all teams
and submitting flags.

## Prepare ##
1. Set FLAG_FORMAT regexp in flag_format.py
2. Set TEAMS in team_list.py
3. Edit submit_flags in start_posting.py for the checking system

## Usage ##
### Starting a sploit ###
    ./start_sploit.py <sploit>

Launches sploit for all teams.
Sploit should take team ip as first arg. Its output should contain flags.
Flags will be saved in **flags/\<sploit\_name\>\_\<team\_name\>.txt**

### Starting the poster ###
    ./start_posting.py

Posts the flags in flags/\*.txt to the checking system.
Saves posted flags in **posted_good_flags.txt** and **posted_bad_flags.txt**.

## Optimizing a sploit ###

If there are >100 teams, don't write a sploit like this:

    hack(ip)
    
Write like this:
    
    while True:
        hack(ip)
        sys.stdout.flush()
        sleep(30)

It is much faster.
",41,41,6,2,farm,"[ctf, farm, sploit]",00000
938,CoopCommand,hms-11,N/A,https://github.com/hms-11/CoopCommand,https://api.github.com/repos/hms-11/CoopCommand,CoopCommand aims to increase automation in small scale egg-laying chicken flocks for the hobby farmer. Final product aims to have ease of installation and use for non-technical users. ,"# CoopCommand

# Development on this project has stopped. See [CoopCommand ESP32](https://github.com/hms-11/CoopCommandESP32) for the next generation controller and code.

Chickens are simple animals with lots of benefits. The downside? Humans are not the only creatures that find chickens tasty and chickens themselves require some basic maintenance and care to keep happy and healthy. 

CoopCommand aims to reduce the daily labour of looking after chickens, improve their well-being as well as allow hobby-farmers the ability to go out for the night without worrying if their chickens are in danger from wandering predators. 

Contributors always welcome, I could use people smarter than myself to keep improving this project. 

You can also support this project through ""Buy me a Coffee"": 

<a href=""https://www.buymeacoffee.com/AutoHobbyFarm"" target=""_blank""><img src=""https://www.buymeacoffee.com/assets/img/custom_images/orange_img.png"" alt=""Buy Me A Coffee"" style=""height: 41px !important;width: 174px !important;box-shadow: 0px 3px 2px 0px rgba(190, 190, 190, 0.5) !important;-webkit-box-shadow: 0px 3px 2px 0px rgba(190, 190, 190, 0.5) !important;"" ></a>

In action: Here is a video of CoopCommand installed in my coop. https://www.youtube.com/watch?v=HNLnl-pNmuM


[![CoopCommand Picture](https://github.com/hms-11/CoopCommand/blob/main/PXL_20210510_112449138.jpg)](https://github.com)

# GOALS:

- Ease of installation and configuration for non-technical individuals. 

- Multiple Power Options (wall wart mains power or 12-36V off-grid solar/wind/battery systems).

- Configuration settings saved in case of power-outage.

- Wi-Fi connectivity for remote monitoring and overriding of coop door.

- Camera for viewing inside of coop.

# FEATURES:

## COOP COMMAND MAIN BOARD:

- Pluggable Terminal Block connectors for all user-installed inputs/outputs.

- JST XH 5-pin for connection to CoopCam Wi-FI Camera Ad-On.

- DHT22 for interior coop temperature.

- DS18B20 for water temperature.

- GL5539 Photoresistor w/10K resistor voltage divider for daylight sensor.

- MAX3373 level shifting IC for Atmega-ESP32 serial communication.

- 7805 ""footprint"" - Actually uses either one of the drop in footprint compatible buck convertors or my own ""MEGA7805"" buck converter that can output up to 3A cont. 

- TI DRV8871 Motor Driver IC w/3.6A current cabilitity & voltages up to maximimum working voltage of CoopCommand.

- 20x4 LCD.

- I2C backpack integrated.

- 3 user input buttons.

- EEPROM for saving user settings.

- LayLight Relay for supplementing daylight hours to keep chickens laying even with less than 14 hours of Daylight.

- Ventilation Fan Relay for cooling the coop in the summer.

- Water Heat Relay for heating the water in the winter. 

- ATMEGA328P in DIP configuration, easily programmed through Arduino IDE.


## ESP32 COOPCAM:

- ESP32-CAM AI-THINKER based.

- Custom PCB for ESP-32-CAM to socket into, breaks out remaining GPIO's, breaks out serial header for programming and boot button as well as on-board bulk capacity (200UF).

- JST XH 5-pin Connector, identical pinout to mainboard side to allow cable to be plugged in either way.

- Wi-Fi connection through Blynk.

- Serial connection to main board.

## BLYNK:

- Override door open or closed.

- Take a picture with the CoopCam and display it in the app

- Monitor door status (Open, Closed, Opening/Closing).

# Getting Started:

All files are included in this git-repository to get CoopCommand up and running. To get started, use the Gerber files and BOM to get the PCB's coming. The pic n place files can be used if your board house supports assembly. These boards were designed to use JLCPCB's assembly service with as many ""basic"" components as possible. 

Once you have the boards in hand and assembled, see the programming notes file for instructions on how to load the code. ATTENTION: This guide assumes the ATMEGA328P has a bootloader already installed, if working with new, ""bare"" chips you will need to burn a bootloader before installing the sketch. 

For the ESP32-CAM ""CoopCam"" aspect, this guide from Random Nerd Tutorials outlines the steps for setting up a gmail account with the proper settings. https://randomnerdtutorials.com/esp32-cam-send-photos-email/ 
These settings, along with your wifi info and BLYNK authentication token will need to be put into the sketch for the camera. 

# CURRENT KNOWN ISSUES:

- Some Camera ribbon cables seem to be different lengths, some tweaking of CamLid file may be needed to ensure lens fits through housing.  

- The CoopCam and associated Blynk app should not be used at this point. Reboot can cause CoopCommand to go into manual door mode, leaving the door open at night. Main board functions fine running solo. 

# PLANNED UPGRADES:


- Figure out what is up with the multi-button press sometimes required. 

- Improved EEPROM setting saves with more user settings being saved to EEPROM (currently door close light level, water heat on and ventilation fan on temps are saved).

- ""self configuration"" of system on startup. I would like the door to run an initial cycle on first power-on so it can self test motor connections and adjust if connected ""backwards"" 

- Easy deployment of CoopCam. Would like users to log into a self-hosted website on the ESP32-Cam, input their Wifi info and Blynk Authorization certificate. then have the system reboot on their network, attached to their Blynk app. 
",39,39,8,3,farm,"[arduino, atmega328p, automation, chickens, esp32, esp32-cam, farm, open-source, pcb]",00000
939,hou_farm,fxnut,N/A,https://github.com/fxnut/hou_farm,https://api.github.com/repos/fxnut/hou_farm,A Deadline farm submission tool.,"# hou_farm
A Deadline farm submission tool. 

![Hou Farm Screenshot](doc/img/Submit.png)

For a short blog post with more screen shots, [click here](https://www.andynicholas.com/post/hou-farm-deadline-submission-tool-for-houdini)

## Features

  * Do away with the cluttered and over-complicated submission dialog. Instead, it places all the submission settings on the ROP nodes. This saves having to remember the settings for each ROP task that you submit to the farm.
  * Hides many of the less common Deadline settings under an Advanced section (hidden by default)
  * Supports the following ROPs (not all fully tested yet, although they should be fine):
    * Mantra ROP
    * Geometry ROP (and SOP version)
    * Alembic ROP
    * IFD Archive ROP
    * Comp ROP
    * Channel ROP
    * BakeTexture ROP
    * OpenGL ROP
    * DOP ROP
  * Respects simple dependency indicated by ROP tree network. Creates jobs on a ROP by ROP basis, and does not split into individual frame dependencies.
  * Allows submission of:
    * Individual nodes
    * Nodes above the submitted ROP node
    * The entire connected ROP tree.
  * Shelf tool patches existing ROP nodes with settings. No custom nodes
  * Deadline interface for the nodes is built on the fly from config file. Easy to reuse parameter layouts and add new nodes.
  * Allows you to split tasks into N chunks, or automatically calculate number of chunks based on number of frames.
  * Performs validation of ROP nodes before submission and reports errors and warnings. For example, it catches common errors such as:
    * Missing camera
    * Disabled IFD export
    * Using default IFD path
    * Missing specified Deadline pool
    * Camera background image enabled
  * Graceful fallback should hou_farm or Deadline not be present on the system. Won't break your scene or generate annoying errors.
  * Allows you to develop/test Hou Farm without Deadline installed by defining HOUFARM_VIRTUAL_DEADLINE in the environment.

## Installation

  1) Open hou_farm_example.env and copy the lines into your own $HOME/houdini/XX.Y/houdini.env file. 
  1) Change the HOUFARM environment variable to point to the location of hou_farm.
  1) Launch Houdini.
  1) Add the hou_farm shelf to your toolbar at the top by clicking on the + button and selecting Shelves->Hou Farm.

## Usage
  1) Now that hou_farm is installed you should be able to select ROPs in the network view and use the hou_farm ""Patch"" shelf tool to add the settings to the ROPs.
  1) Patching a node puts all existing parameters under a top-level folder, and creates a new folder called Deadline where you can find all the submission settings.
  1) When you first do this in a session of Houdini, hou_farm will cache the Deadline pools and groups to save having to re-interrogate the Deadline database everytime you select a new node. If you need to update the lists, then go to the Settings tab and click on ""Refresh Pools/Groups"".
  1) Once you're happy with the settings, just click on the appropriate Submit button to send the scene to the farm.

## Future Work

  * Better usage documentation
  * Provide checkboxes to allow validation tests to be enabled/disabled.
  * Add support for custom validation python code.
  * Support Fetch ROP
  * Add Wedge functionality (possibly through custom ROP rather than existing Wedge ROP)

## Development Notes

  * Only tested on Windows so far. In theory, it should work fine on Linux and OSX, although I'm sure there'll be some fixes required.
  * Mostly written a functional style, and relatively little OOP. This was done mainly because I've been using OOP for a long time and after working on a pure C project, I wanted to experiment with seeing how necessary OOP actually is. Sometimes OOP just gets in the way. May decide at some point to rework some of this into classes to reduce code bloat.
  * Hou_farm was written to potentially expand to support other farm software. It would still need a lot of factorisation for better reuse of much of the Deadline code.
  * There's a makefile for generating code documentation using Sphinx in the docs folder.
",34,34,11,0,farm,"[farm, houdini, submission]",00000
940,ValorantBot,sogoeslight,N/A,https://github.com/sogoeslight/ValorantBot,https://api.github.com/repos/sogoeslight/ValorantBot,Valorant bot ¯\_(ツ)_/¯,"# Valorant bot

### Features! (Valorant v3.1 compatible :heavy_check_mark:)
- Completely safe UI bot, NOT a single injection to the game files - 0 bans since the beginning of September.

- Already done:
    - Anti-afk simulation!
    - Relaunches game in case of error and continues working!
    - Handles game updates too!
    - Statistics!
    - ...
    - Goes well with pizza!
    
- Coming soon:
    - Timer with exit function
    - Support of different game modes
    - Trigger bot
    - App interface
    - Special mode ""Bilbo Teabaggins""


Supposed only for Deathmatches  
Currently supports FullHD and QHD screens

## !!! Important disclaimer !!!
- Since we all have a different graphic settings - you can always just make your own screenshots and replace the default ones in the folder, according, to your resolution (full/qhd).

---

## Requirements:
- [Valorant](https://playvalorant.com/en-us/ ""https://playvalorant.com/en-us/"")
- [Python v3.7.9*](https://www.python.org/downloads/ ""https://www.python.org/downloads/release/python-379/"") 
(Please use it as the last non-bugfix version)  
[Direct link for Windows 10 installer*](https://www.python.org/ftp/python/3.7.9/python-3.7.9-amd64.exe)  
*Do not forget to check ""Add Python to PATH""
- [PC](https://downloadmoreram.com/ ""Go on, do it"")
- Screen
- If you are using *Windows 10 Pro **N*** you need to add **Media Feature Pack** by going to  
`Start > Settings > Apps > Apps and features > Optional features > Add a feature`,  
 and then locate Media Feature Pack in the list of available optional features.

## Setup:
0. [**Download latest release**](https://github.com/sogoeslight/ValorantBot/archive/1.44.zip) and unzip it anywhere
1. Make sure you have python installed
2. Execute -> Installer.bat
3. Valorant -> Settings -> General -> Text Language: **English (United States)**
4. Valorant -> Settings -> Video -> Display Mode: **Windowed**;  
Resolution: your native resolution, so game should be on whole screen, but in window  
### Additional:
- If you want script to launch Valorant for you - set `valorant_is_opened` in /scripts/settings.py to `False`,  
but don't forget that it will open in the last used resolution and display mode!
- Also, you can adjust `average_valorant_load_time` 
and `average_match_load_time` (/scripts/settings.py 20 and 21 lines)

## Launch:
0. Execute -> Launcher.bat

![Getting Started](./resources/bot_pic.png)

## Hints:
- Press `ctrl+c` in console window to stop bot
- Launching it by simply `bot.py` may cause unpredictable errors

Since bot is graphically-based, if anything doesn't work for you - try next graphic quality settings:
- Everything: High
- Vignette: On
- Anti-Aliasing: MSAA 4x
- Anisotropic Filtering: 8x
- Improve Clarity: Off
- Experimental Sharpening: Off
- Bloom: On
- Distortion: On 

### You would help to this project by
- Simply leaving a star on this repo
- [Buying me a pizza](https://www.buymeacoffee.com/SoGoesLight)
- [Donating any amount](https://www.paypal.com/donate/?hosted_button_id=JDHGX3H6NL9LA)

### Contacts:
[E-mail](mailto:SoGoesLight@gmail.com)  
",29,29,4,2,farm,"[afk, bot, exp, experience, farm, python, valorant]",00000
941,farmOS-map,farmOS,N/A,N/A,https://api.github.com/repos/farmOS/farmOS-map,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1E8:3B38:2CD595:5CDC7C:65223FD5.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,farm,"[N, /, A]",00000
942,sunflower-land-bot,newerton,N/A,https://github.com/newerton/sunflower-land-bot,https://api.github.com/repos/newerton/sunflower-land-bot,"This is a Python bot, which automates logging in, purchasing and planting the seeds. Open source bot and completely free.","<h1 align=""center"">

![Sunflower Land Banner](https://raw.githubusercontent.com/newerton/sunflower-land-bot/main/images/readme/banner.jpg)

  <a>
    🌻 Sunflower Land Bot 🌻 
  </a>
</h1>

## ⚠️ Warning

### I am not responsible for any penalties incurred by those who use the bot, use it at your own risk.
## This BOT is completely secure, it does not ask for your metamask password or private key.

## 📌 Glossary

  * [Donation](#donation)
  * [About](#about)
  * [Robot - Preview](#robot-preview)
  * [Installation](#installation)
    * [Terminal commands](#commands)
  * [How to works](#how-to-works)
  * [Tests](#tests)
  * [Configs](#configs)

# 🎁 <a id=""donation""></a>Donation (for support)
## BUSD/USDC/BNB/MATIC: 0x4847C29561B6682154E25c334E12d156e19F613a  
## PIX (Brazil Payment): 08912d17-47a6-411e-b7ec-ef793203f836   

## 📋 <a id=""about""></a>About

This bot contains code from other developers, this bot was just refactored, to facilitate new implementations and maintenance.

This bot is free and open source.

## 🤖 <a id=""robot-preview""></a>Robot - Preview
![Screenshot - Preview](https://raw.githubusercontent.com/newerton/sunflower-land-bot/main/images/readme/bot_working.jpg)

## 🪟 <a id=""installation""></a>Installation

### **Python**

🖥️ Computer/Laptop High or Medium Profile  
🐍 Install the Python 3.9.9

🖥️ Computer/Laptop Low Profile or Low Profile with Windows 7 Pro  
🐍 Install the Python 3.8.10

🔗 [https://www.python.org/downloads/](https://www.python.org/downloads/)

⚠️ **It is important to check the option to add python to PATH**

### <a id=""commands""></a>Commands
Install the dependencies by running the command below into the project folder:

```
pip install -r requirements.txt
```
Ready! Now just start the bot with the command, inside the project folder

```
python index.py
```

### <a id=""how-to-works""></a>**How to works?**

The bot doesn't change any of the game's source code, it just takes a screenshot of the game's screen to find the buttons and simulates mouse movements.

⚠️ Some settings can be changed in the /config/config.yaml file, don't forget to restart the bot if you change the settings, some changes in the /config/config.yaml file may cause the bot to stop, such as activating the telegram when the bot is running. 

The waiting time for harvesting the sunflower is 1 minute, and for the other plants it is 5 minutes. 

## 🧪 <a id=""tests""></a>Tests
**Desktop Medium Profile**  
Intel i5-3570k @ 3.4Ghz, 24GB RAM  
Windows 11, Resolution@1920x1080  
Python 3.9.9  

**Laptop Low Profile**  
Laptop Samsumg RV411, Pentium P6200 @ 2.13Ghz, 2GB RAM  
Windows 7, Resolution@1366x768  
Python 3.8.10

## <a id=""configs""></a>🧑‍🌾 Config

### ⚠️ Don't forget to rename /config/EXAMPLE-farn.yaml file, to /config/farm.yaml.  
### Use the enable option to activate which seed you want to use and the sell option to deactivate the sale of the seed, in this case it is for you not to sell the seed, if you are accumulating to buy some NFT.

```
{
  crops:
    [
      { position: 0, enable: true, title: ""sunflower"", sell: true },
      { position: 1, enable: true, title: ""potato"", sell: true },
      { position: 2, enable: true, title: ""pumpkin"", sell: true },
      { position: 3, enable: true, title: ""carrot"", sell: true },
      { position: 4, enable: true, title: ""cabbage"", sell: true },
      { position: 5, enable: true, title: ""beetroot"", sell: true },
      { position: 6, enable: true, title: ""cauliflower"", sell: true },
      { position: 7, enable: false, title: ""parsnip"", sell: false },
      { position: 8, enable: false, title: ""radish"", sell: false },
      { position: 9, enable: false, title: ""wheat"", sell: false },
    ],
  forest: [],
  water: [],
}

```

## 👍 Did you like it? :)

### BUSD/USDC/BNB/MATIC: 0x4847C29561B6682154E25c334E12d156e19F613a  
### PIX (Brazil Payment): 08912d17-47a6-411e-b7ec-ef793203f836",20,20,6,0,farm,"[automated, automation, bot, farm, farming, python, seeds, sunflower, sunflower-land, sunflowers]",00000
943,SmartGreenhouse,obernardovieira,N/A,https://github.com/obernardovieira/SmartGreenhouse,https://api.github.com/repos/obernardovieira/SmartGreenhouse,:leaves: An arduino system for autonomous greenhouse. Only the basic. :four_leaf_clover:,"# SmartGreenhouse

### Description:
A repository with the basic functions to an autonomous greenhouse.
There is no limited number of connected components (e.g. sensors)

### Installation:
There is not specific installation, it just need to be uploaded to arduino. But the data struct need to be configured to make the components work.
**How to configure a new component**
*This is really easy to add, just follow the steps below*
* 1. Increment the number os components
  * Go to file ""datatype.h"" and in ""#define TOTAL_COMPONENTS 3"" change 3 to the number of your components
* 2. Upload the sketch and run it
  * Run the arduino and use the command ""c help"" trough the Serial Monitor
* 3. Give them things to do
  * Go to file ""components.h"" the last function called ""check_components"" and crete your own method to controle one component,
  using the output of another one, or by time. You know what to do. (Don't forget to reupload)


### Usage:
After the installation, everything should be running fine. If any port number and/or type is change, it changes in realtime, with need to restart. But there ar some precaution, read **Notes** below!
**Note** Changes are not automatically updated, the user needs to update using the command *save*. Data is automatically loaded. 
**Note(2)** It's recomended to not disconnect components from one port and connect to another with arduino running. So, update the data, save it, turn of arduino, change ports and start again.
#### In this example
In this example it uses three components, in this case, two leds and one **potentiometer** (the circuit sketch is at the end)
***The first led*** is controlled by time. At the time *X* it turns on, at the time *Y* it turns off
***The second led*** is controlled using the potentiometer's output.
It can be used as a water dropped controller by hour, using an rtc, and a heater and coller controlled by temperature.
This is just an example. See th sketch ![here](https://github.com/obernardovieira/SmartGreenhouse)

### Contributing:
Everyone is free to contribute. Fork the project, make you changes and pull request. If you find bugs open an issue, or you can fix by yourself just forking, make changings and then pull request. It's complitly free project, so you can download and use it on your own.

### Credits:
obernardovieira

### License:
GNUv3
",19,19,9,0,farm,"[arduino, automation, autonomous, farm, farming, greenhouse]",00000
944,farm-invest-cli,mykeels,N/A,https://github.com/mykeels/farm-invest-cli,https://api.github.com/repos/mykeels/farm-invest-cli,"A CLI tool, built to detect updates to the products on eFarms, FarmCrowdy, ThriveAgric and AgroPartnerships","# Farm Invest CLI

A CLI tool, built to detect updates to the products on:

- [AgroPartnerships](https://agropartnerships.co)
- [EFarms](https://www.efarms.com.ng)
- [ThriveAgric](https://www.thriveagric.com)
- [FarmCrowdy](https://www.farmcrowdy.com)

## Installation

with npm

```sh
npm i -g farm-invest-cli
```

with yarn

```sh
yarn add global farm-invest-cli
```

for developers

```sh
git clone https://github.com/mykeels/farm-invest-cli
cd farm-invest-cli
npm install
npm link
```

## Usage as a CLI tool

```sh
farm-invest-cli
farm-invest-cli agro # only agro-partnerships
farm-invest-cli efarms # only efarms
farm-invest-cli farm-crowdy # only farm-crowdy
farm-invest-cli thrive-agric # only thrive-agric
```

You'll get an output like:

![farm-invest-cli output](https://user-images.githubusercontent.com/11996508/51835933-238da100-22ff-11e9-8dfc-1086b0db4d52.png)

Where the green text shows new products, and text is only shown when there is a difference between the products currently existing and the last time it checked.

## Usage in Node environment

```js
const { syncAll, syncAgro, syncEFarms, syncFarmCrowdy, syncThriveAgric } = require('farm-invest-cli')

syncAll().then(diff => {
    console.log(diff) // an array of (array | fast-array-diff) objects for all sources
})

syncAgro().then(diff => {
    console.log(diff) // an (array | fast-array-diff) object for Agro-Partnerships
})

syncEFarms().then(diff => {
    console.log(diff) // an (array | fast-array-diff) object for eFarms
})

syncFarmCrowdy().then(diff => {
    console.log(diff) // an (array | fast-array-diff) object for Farm-Crowdy
})

syncThriveAgric().then(diff => {
    console.log(diff) // an (array | fast-array-diff) object for Thrive-Agric
})
```

NB: A fast-array-diff object looks like:

```js
{
   removed:[
       { title: 'Foo', link: 'Bar' },
       { title: 'Bar', link: 'Foo' }
   ],
   added: [ { title: 'Baz', link: 'Foo' } ]
}
```

```js
const { getAgro, getEFarms, getFarmCrowdy, getThriveAgric } = require('farm-invest-cli')

getAgro().then(productList => {
    console.log(productList) // an array of active products on Agro-Partnerships
})

getEFarms().then(productList => {
    console.log(productList) // an array of active products on eFarms
})

getFarmCrowdy().then(productList => {
    console.log(productList) // an array of active products on Farm-Crowdy
})

getThriveAgric().then(productList => {
    console.log(productList) // an array of active products on Thrive-Agric
})
```",18,18,2,3,farm,"[cli, efarms, farm, farm-crowdy, investment, node, thrive-agric]",00000
945,flasc,NREL,NREL,https://github.com/NREL/flasc,https://api.github.com/repos/NREL/flasc,A rich floris-driven suite for SCADA analysis,"{'message': 'Not Found', 'documentation_url': 'https://docs.github.com/rest/repos/contents#get-repository-content'}",18,18,8,20,farm,"[analysis, control, data, farm, floris, model, scada, validation, wind]",00000
946,ITEMS-Interface,EthereansOS,EthereansOS,https://github.com/EthereansOS/ITEMS-Interface,https://api.github.com/repos/EthereansOS/ITEMS-Interface,"🕹 🔷 An open source interface for the ITEMS protocol. Create, Wrap, Farm, Trade, Swap ITEMS","# ITEMS Interface

Dapp: https://item.eth.link

Explainer: https://ethos.eth.link/items.html

Documentation: https://docs.ethos.wiki/items/
",16,16,8,1,farm,"[defi, farm, items, nft]",00000
947,Crypto-LP-Compounder,lwYeo,N/A,https://github.com/lwYeo/Crypto-LP-Compounder,https://api.github.com/repos/lwYeo/Crypto-LP-Compounder,Autocompound your LP without fear of rugpull from addtional 3rd party autocompound farms.,"# Crypto LP Compounder
Autocompound your LP without fear of rugpull from addtional 3rd party autocompound farms.  
Take control with your LP and reward tokens being directly processed in the project's farm, using your PC/laptop via console/command line.  
> Do note that this is a BETA software, and there is a 1% performance fee to developer on every harvest process.  
> And do not forget that gas fee is required for the process to work.  
> It is recommended that you have a seperate wallet for use with this software.  
> I am not responsible for your usage and investments, as I am not a financial advisor.  
> Please do your own research before using this software.  

Built with .NET 6 SDK, compiled to work with Windows/Linux/MacOS.

### Releases can be found [here](https://github.com/lwYeo/Crypto-LP-Compounder/releases).

## LICENSE

'Crypto LP Compounder' is licensed under the [Apache License, Version 2.0 (the ""License"")](http://www.apache.org/licenses/LICENSE-2.0);

Libraries are included in the Software under the following license terms:
    
    Nethereum [https://github.com/Nethereum/Nethereum/blob/master/LICENSE.md]
    
    Json.NET [https://github.com/JamesNK/Newtonsoft.Json/blob/master/LICENSE.md]

### Usage

If you like this project and wish to support me, you may donate to the following address (Ethereum/BSC/Polygon/Fantom/Harmony etc)
    
    0x9172ff7884CEFED19327aDaCe9C470eF1796105c
    
If you have any suggestion or feedback, please feel free to raise an issue in GitHub.

Currently only the following has been implemented for, if you have any tokens to suggest please feel free to raise an issue as well.
- WFTM-TOMB (TSHARE)
- WFTM-YEL (YEL)
- WBNB-MOMA (MOMA)

Please refer to the examples found in the sample settings files.  
Default web API can be accessed from the following (URL can be changed in settings.json file)
- http://127.0.0.1:5050/api/instance
- http://127.0.0.1:5050/api/summary
- http://127.0.0.1:5050/api/log/all/{instance_name}
- http://127.0.0.1:5050/api/log/process/{instance_name}
",16,16,3,1,farm,"[autocompound, binance-smart-chain, blockchain, bsc, compound-finance, crypto, cryptocurrency, defi, ethereum, fantom, fantom-opera, farm, liquidity-mining, liquidity-pool, polygon, yield-farming]",00000
948,RewardsGG-Farm,demaisj,N/A,https://github.com/demaisj/RewardsGG-Farm,https://api.github.com/repos/demaisj/RewardsGG-Farm,"Want to participate in some giveaways but you're lazy, enjoy this automatic ticket farm!","# RewardsGG-Farm
[![Maintenance](https://img.shields.io/maintenance/yes/2016.svg)]() [![GitHub release](https://img.shields.io/github/release/DeathMiner/RewardsGG-Farm.svg)](https://github.com/DeathMiner/RewardsGG-Farm/releases/latest) [![Tested on](https://img.shields.io/badge/tested%20on-v1.7.0b1-orange.svg)]() [![Visit our IRC channel](https://kiwiirc.com/buttons/irc.kiwiirc.com/RewardsGGFarm.png)](https://kiwiirc.com/client/irc.kiwiirc.com/?&theme=mini#RewardsGGFarm)

Want to participate in some giveaways but you're lazy, enjoy this automatic ticket farm!

- [Quick install](https://github.com/DeathMiner/RewardsGG-Farm/raw/master/rewardsgg-farm.user.js)

### Actually the best way to get some giveways without wasting your time

Working only on **[Rewards.gg](https://rewards.gg)**.

Features:
- Removes stream, ads and annoying content
- _Auto click stream ad_ **Removed in v1.7.1b1 Site Update**
- Auto add some random tickets
- Auto spam the server to get tickets

This script is updating automatically, you don't need to go & check updates by yourself.

> **28/07/2016: I got my account locked today, I can't test updates anymore (maybe it's because I flushed out all my illegal tickets xD). I'll start to develop new updates when I'll create a new account under a brand new IP, PC & Browser (it will be near September 2016). Please be patient and send me all the suggestions you want.**

> **My account got locked without me being warned, because I'm the developer of this farm. But they were pretty slow to lock my account since the launch of their website xD**

**How to install:**
- Install the [Tampermonkey](http://tampermonkey.net/) extension
- Click **[Install script](https://github.com/DeathMiner/RewardsGG-Farm/raw/master/rewardsgg-farm.user.js)**
- Done!

**How to use it:**
- Open [Rewards.gg](https://rewards.gg)
- Login with your Steam account
- Go to **Get Tickets**
- Let the magic happen

## Screenshots
![screen](https://cloud.githubusercontent.com/assets/2797696/15590725/697a84de-2399-11e6-8d39-8b5abea78e55.png)

## Issues
Feel free to report any bug, or suggest me some new features!

## Changelog

**RewardsGG-Farm v2.3**
- ""HUMAN & REAL™"" UPDATE! The script is stealth & shall not be noticed.
- ticket to $ conversion
- extra-tickets
- compatibility with site v1.7.0b1

**RewardsGG-Farm v2.2.2**
- Fixed missing tracking for ticket stats

**RewardsGG-Farm v2.2.1**
- No changes, I just fucked up my update system by messing with the tags. This update is to fix the update alert always opening. Sorry m8s. RT if you cry everytiem.

**RewardsGG-Farm v2.2**
- STATS NOW WORKING!
- Reseted Privacy settings for new/old users

**RewardsGG-Farm v2.1**
- Fixed bug showing wrong ticket count
- UI tweaks

**RewardsGG-Farm v2.0**
- Brand new design, give less chances for the farm to be broken
- New Ad progress bar
- New console that shows the history of the activity of the farm
- The farm is completely independant & indetectable
- The farm is loading faster
- Some vulgarity because f**k off

**RewardsGG-Farm v1.6**
- Read-Only console: the farm no longer freeze when loading
- Cleaned up page: Less requests excecuted by background code
- Removed job offer: feature removed from website

**RewardsGG-Farm v1.5**
- added irc chat
- Reworked page ui
- Fixes detection of adblock
- Replaces countdown with a custom one
- No more Langur error alerts

**RewardsGG-Farm v1.4**
- Checks for updates directly on github
- UI tweaks
- Fixed a bug while fetching site version

**RewardsGG-Farm v1.3.1**
- Better alert ui
- More unwanted content removed
- NEW FEATURE: The farm is now showing a leaderboard of the best farmers!
- You can choose to show your username or not in the leaderboards, in order to respect your privacy

**RewardsGG-Farm v1.3**
- Tested on website version 1.0.3b2
- Now collecting stats (username, visits & tickets) for future features
- Fixed bug in requests

**RewardsGG-Farm v1.2.1**
- Fuck FuckAdblock updated to version 5
- Message in title bar when tickets are earned

**RewardsGG-Farm v1.2**
- Tested on rewards.gg v1.0.2b2
- FlashBlock compatible
- Cleaner code

**RewardsGG-Farm v1.1**
- Less dependency on Rewards.gg code (dumped jQuery)
- Now showing the right number of tickets that will be earned
- Cleaner code

**RewardsGG-Farm v1.0**
+ initial release
",15,15,5,9,farm,"[brand, farm, giveaways, rewardsgg-farm, ticket]",00000
949,IdbClient,SergKhram,N/A,https://github.com/SergKhram/IdbClient,https://api.github.com/repos/SergKhram/IdbClient,"IdbClient is kotlin-like client, created to connect and control Apple devices and simulators","# IdbClient
[![Maven Central](https://img.shields.io/maven-central/v/io.github.sergkhram/idbclient.svg?label=Maven%20Central)](https://search.maven.org/search?q=g:%22io.github.sergkhram%22%20AND%20a:%22idbclient%22)
[![License](https://img.shields.io/badge/License-Apache%202.0-purple.svg)](https://opensource.org/licenses/Apache-2.0)

It is the way to get access to the idb programmatically, using kotlin. You can control Apple devices and simulators from 
your code with this client, which creates a connection to them by grpc. All you need to set up is to install the idb companion
(https://fbidb.io/docs/installation) on your Mac and run it. You can use idb client connection from any architecture.

## Functionality
We provide commands' wrappers to functionality of idb companion(you can check the full list here https://fbidb.io/docs/commands)

## How to
1. Import library from maven:
```
<dependency>
  <groupId>io.github.sergkhram</groupId>
  <artifactId>idbclient</artifactId>
  <version>0.0.5-RELEASE</version>
</dependency>
```
2. Create idbClient: 
```
val idb = IOSDebugBridgeClient()
```
3. Connect companion:
```
val udid = idb.connectToCompanion(TcpAddress(""127.0.0.1"", 10882))
```
4. Execute request:
```
val result = idb.execute(
    LogRequest(
        predicate = {false}, 
        timeout = Duration.ofSeconds(10)
    ),
    udid
)
result.forEach(::println)
```

## LICENSE
```
Licensed under the Apache License, Version 2.0 (the ""License"");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an ""AS IS"" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
```
",14,14,3,0,farm,"[client, control, farm, idb, idbclient, ios, kotlin, macos, manage, testing]",00000
950,Melon_Green,mhgolkar,N/A,https://github.com/mhgolkar/Melon_Green,https://api.github.com/repos/mhgolkar/Melon_Green,"Agricultural Automation Controller :seedling: (Greenhouse, Farm, Garden, etc.)","# Melon Green

### [ discontinued ]
Although the code may work properly;
This repo is not maintained anymore.

### Greenhouse, Farm & Garden Automation Project
To assist plant lovers & hobby gardeners, as well as greenhouse or garden keepers, Melon Green project is an open-source farm, garden and greenhouse automation controller system (hardware & software), which is aimed to be easy to use, affordable and multipurpose.   


### How does it work?
In summary, Melon Green is a [board](Documentation/1_Melon_Green_Board_[DIY].md) (based on AVR microprocessors) with an [operating software](Documentation/2_Upload_Melon_Green_to_AVR.md), which gets [your orders (settings)](Documentation/3_Serial_Command_Line_Interface.md), detects events in its environment, and toggles agricultural machinery (like irrigation pumps, solenoid valves, heaters, humidifiers, etc.) on or off, whenever it's needed.  
Melon Green Keeps Date & Time, Senses Temperature, Humidity, Soil Moisture, Rain (Detection) & Room/Sun Light Intensity. It can operate irrigation system/facilities, grow light supplier, heater, fan/cooler and humidifier. Melon Green has also some experimental functionalities to mix feeding solution (e.g. diluting concentrated liquid fertilizer).  

### How-to & Instructions
For more information, please take a look at links below:
*   [Make your custom *Melon Green* board](Documentation/1_Melon_Green_Board_[DIY].md)
*   [Setup *Melon Green* operating software to board's AVR](Documentation/2_Upload_Melon_Green_to_AVR.md)
*   [Communicate with board & configure M.G.](Documentation/3_Serial_Command_Line_Interface.md)
*   [Sample Setup Guide](Documentation/4_Sample_Setup_Guide.md)

### Revision History
|Hardware|Software|Description|
|:------:|:------:|:----------|
|v1.0.0|v1.0.0|First Release|
|v1.1.0||+ Switchable Ext/Int Power Source for Relays|
|v1.2.0||+ Battery Power (Auto-Switch)|
||v1.1.0|✓ More Accurate Internal Clock|
|||✓ Some Bugs *Fixed* in Duty Cycle |
|||✓ Analog Sensors Noise Protection|
|||+ Irrigation per Day Limit
|||+ Night-time Humidity & Temperature Controller (Independent)|   
||v1.2.0|Fully Revised OS (Major Bug Fixes) + RTC is Now Required.|

Compilation Report (Approx.):  
> *ATmega328p \[~ Arduino Uno]*  
> Sketch uses 30134 bytes (93%) of program storage space. Maximum is 32256 bytes.  
> Global variables use 1101 bytes (53%) of dynamic memory, leaving 947 bytes for local variables. Maximum is 2048 bytes.

<!-- ( ![](Documentation/0_Readme_MG_Image.jpg) ) -->

*M. H. Golkar*  
*2017*
",14,14,6,0,farm,"[arduino, automation, diy, farm, garden, greenhouse, hardware, smart, software]",00000
951,MobileDevicePool,thyrlian,N/A,https://github.com/thyrlian/MobileDevicePool,https://api.github.com/repos/thyrlian/MobileDevicePool,Web UI to manage your mobile devices kingdom.,"MobileDevicePool
===========

Web UI to manage your mobile devices kingdom.  Currently support Android and iOS devices.

Forked from my own project: [**Captain-ADB**](https://github.com/thyrlian/Captain-ADB)

## Demo
<img src=""https://github.com/thyrlian/MobileDevicePool/blob/master/public/img/demo.png"">

## Setup

* Run `bundle install` to install all ruby dependencies
* Install [libimobiledevice](https://github.com/libimobiledevice/libimobiledevice) (iOS devices communication tool)
* Install [ideviceinstaller](https://github.com/libimobiledevice/ideviceinstaller) (manage apps on iOS devices)

## Setup on [Raspbian](https://www.raspberrypi.org/downloads/raspbian/)

* `sudo gem install bundler`
* `bundle install`
* `sudo apt-get install libimobiledevice4 libimobiledevice-utils ideviceinstaller usbmuxd` (apt-get doesn't guarantee to have the latest version, which might not support the latest iOS version)
* Download and install [Android SDK](https://developer.android.com/studio/index.html)

## Run Service

Run `rackup -p <PORT> -o 0.0.0.0` and the open `http://localhost:<PORT>/` in the browser 

## License
Copyright (c) 2016 Jing Li. See the [LICENSE](https://github.com/thyrlian/MobileDevicePool/blob/master/LICENSE) file for details.
",14,14,3,0,farm,"[android, deploy, device, farm, ios, mobile, pool, test]",00000
952,deadline-docker,jDmacD,N/A,https://github.com/jDmacD/deadline-docker,https://api.github.com/repos/jDmacD/deadline-docker,Dockerized Deadline deployment,"{'message': 'Not Found', 'documentation_url': 'https://docs.github.com/rest/repos/contents#get-repository-content'}",13,13,2,0,farm,"[deadline, docker, docker-compose, farm, render, thinkbox, thinkbox-deadline]",00000
953,content-farm-list,wildskyf,N/A,https://github.com/wildskyf/content-farm-list,https://api.github.com/repos/wildskyf/content-farm-list,"List all content farm, and provide a json for fetch.","# Content Farm List
List all content farm, and provide a json for fetch.

# How to use
<https://rawgit.com/> is a good way to use files on GitHub.

# Maintain
Feel free to [open issues](https://github.com/wildskyf/ContentFarm-List/issues/new) to provide new content farm sites.

# Develop

```
git clone https://github.com/wildskyf/content-farm-list/ && cd content-farm-list
# edit src.txt
node generate.js
# commit, push, and open a PR
```
",12,12,3,3,farm,"[content, farm, list]",00000
954,dankmemer-farm,6A31,N/A,https://github.com/6A31/dankmemer-farm,https://api.github.com/repos/6A31/dankmemer-farm,Automatic script to farm dankmemer coins. Support for multiple accounts at once. Script runs in the background.,"
# dankmemer-farm

Simple script to farm Dankmemer coins with multiple accounts at once.

**Requires:** `Discord Tokens` | `requests` module

## Disclaimer

**SOME COMMANDS NOLONGER WORK. THE SCRIPT IS NOLONGER ABLE TO AUTO-TRANSFER MONEY FROM A ALT ACCOUNT TO ANOTHER ACCOUNT! ALL OTHER COMMANDS STILL WORK AND CAN BE FULLY CUSTOMIZED!**

I don't take responsibility if you get banned from a server or if your Tokens get locked

You can run this script with 15 accounts at once before getting rate limited.

**All accounts need access to the channel ID you provide. Make sure all accounts are in the server and have send message permission**

## Usage
This script was build for [Python 3.9](https://www.python.org/downloads/release/python-390/)

```
py main.py
```

How to use.
------------
**1.** Create a folder.

**2.** Place the python file in the folder.

**3.** Place a text file (`tokens.txt`) with discord Tokens in the folder.
**Call the file ""tokens.txt""**. If you change the name, the script won't find your Tokens.

**4.** Edit the script and change the following variables. They are indicated with ""CHANGE THIS"".

`channel_id` -> Set this to the ID of the channel you want to farm in.

`id` -> Set this to your user ID. The bots will send their money to this account.

**All your Tokens need access to the channel, so make sure they are joined, and have send message permission.**

**5.** Run the script with `python3 main.py`

**6. Profit**

## Support
Open a github issue

You can join my Disocrd [server](https://daddyissue.org)



## FAQ
> **Do i need multiple accounts?**

No, you can run this with as many accounts as you like. Note that Discord will rate limit you if you send too many API requests.

> **The file closes after i open it**

You have to run the file via the command prompt / terminal. If you don't know how to do that, ask for help in [my discord server](https://daddyissue.org)

> **How do i download Python**

You can download the latest version of [Python3 here](https://www.python.org/downloads/)
After downloading, run the file, and make sure you click the checkbox `add to path` as it will help you out later.

> **Can i get banned**

Yes. You can always get banned. Blacklisted by dankmemer or banned by discord. It's very unlikely tho.

> **All the commands are saying they failed**

Make sure your tokens are valid and that all accounts have permission to send messages in the channel you supplied. If you still get errors, open a Github issue
> **How do i get channel id's and user id's**

You can enable developer settings in Discord like this: `settings -> advanced -> developer settings` then right-click a channel or user and click `copy id`

> **How do i get my Discord token**

I can't explain this here, but **google it**

",12,12,1,0,farm,"[autofarm, automate, background, bot, dank-memer, dank-memer-coin-farmer, dankmemer, discord, farm, hack, python, script, selfbot]",00000
955,pyTRS,JamesPImes,N/A,https://github.com/JamesPImes/pyTRS,https://api.github.com/repos/JamesPImes/pyTRS,"A Python library for parsing real-world Public Land Survey System (PLSS) land descriptions (or ""legal descriptions"") for use in data analysis, GIS mapping, spreadsheets, etc.","{'message': 'Not Found', 'documentation_url': 'https://docs.github.com/rest/repos/contents#get-repository-content'}",12,12,4,0,farm,"[energy, farm, gis, land, parser, parsing, plss, python, township, water]",00000
956,AutoOwoFarm,TheAxes,N/A,https://github.com/TheAxes/AutoOwoFarm,https://api.github.com/repos/TheAxes/AutoOwoFarm,A Discord Selfbot That Farm OwO Cowoncy 24/7 Ban Bypassed!,"# AutoOwoFarm
A Discord Selfbot That Farm OwO Cowoncy 24/7 Ban Bypassed!


# Made By TheAxes

## It Is Designed For Replit !

### its Secure | Credentials will be in env

# Features 
- [x] **Ban Bypassed**
- [x] **24/7**
- [x] **Easy To Use**
- [x] **For Replit**
- [x] **Many More +**
###### Youtube Tutorial - [Click Here](https://youtu.be/dah2MPihCqk)
###### Direct Replit Fork - [Click Here](https://replit.com/@AxeHelper/AutoOwOFarm?v=1)
# Installation 
1. **Clone This Repo To Replit**
2. **Go To Commands > secrets**
3. **Add A Env As A Key Name `Token` And Value As Your Discord Account Token -- If You Don't Know Your Token Watch my YouTube video for tutorial link below!** 
### Tutorial Of Token - [Click Here](https://youtu.be/bixC0tQl_Wg)

4. **Save It**
5. **Run The Repl**
6. **It Will Ask For You prefix | Enter An Prefix For The Bot**
7. **You Done! Type (prefix)help for help command**
8. **Use Uptimer Robot to 24/7 This Bot Or Use My Uptimer Bot Link Below!**
### Uptimer Bot Invite Link - [Click Here](https://discord.com/oauth2/authorize?client_id=1003002613098369186&permissions=8&scope=bot)
### YouTube Channel - [Click Here](https://youtube.com/channel/UCMEhNSLa2O6WQqtqpjwu-sw)
",12,12,2,1,farm,"[discord-owo-selfbot, farm, owo, owo-bot, owo-self-bot, selfbot, selfbot-discord, selfbot-for-discord, theaxes]",00000
957,rfcs,farm-fe,farm-fe,https://github.com/farm-fe/rfcs,https://api.github.com/repos/farm-fe/rfcs,RFC for Farm,"<div align=""center"">
  <a href=""https://github.com/farm-fe/farm"">
  <img src=""https://raw.githubusercontent.com/farm-fe/farm/main/assets/logo.png"" width=""550"" />
  </a>
  <h1>Farm RFC</h1>
  <h3>
    <a href=""https://github.com/farm-fe/rfcs/blob/main/rfcs/001-core-architecture/rfc.md"">English</a>   |
    <a href=""https://github.com/farm-fe/rfcs/blob/main/rfcs/001-core-architecture/rfc.zh-CN.md"">简体中文</a>  
  </h3>
  
  <br/>

</div>

* **[RFC-001 Architecture](./rfcs/001-core-architecture/rfc.md)**
* **[RFC-002 Runtime Management](./rfcs/002-runtime-module-management/rfc.md)**
* **[RFC-003 Partial Bundling](./rfcs/003-partial-bundling/rfc.md)**",11,11,3,0,farm,"[farm, rfcs]",00000
958,coinswap-farm-master-contract,aifeelit,N/A,https://github.com/aifeelit/coinswap-farm-master-contract,https://api.github.com/repos/aifeelit/coinswap-farm-master-contract,(Farm-Master) CoinSwap is a DEX with a suite of products available in Decentralized Finance Environment,"The CoinSwap is a suite of products in Decentralized Finance. Perfect ecosystem for automated liquidity provision on Binance Smart Chain, incentivizing community for their efforts to AMM model.
https://coinswap.space

## CSS Token 
- Name: CoinSwap Token
- Ticker: CSS
- Decimals: 18
- Initial supply: 400,000
- Max supply: 19,999,999

## CSS Farm
Emission rate CSS/block
- 10 days - 0.6
- after - 0.45
- 12 months - 0.41
- 24 months - 0.37
- 36 months - 0.33
- 48 months - 0.29

- Reduction 0.04 per block every 12 months

### FEES
Dev fee: hard coded 8% of the emission rate is sent to DEV wallet which is also used to pay for advertising, partnerships and other expenses to boost the ecosystem.

Referral fee: hard coded 15%. The fee, is calculated on top of referral farming reward.

Deposit fee: Maximum can be set at 5% (can differ on each farm)
Initial deposit fee is distributed as follows, 1.25% for the DEV wallet and 3.75% for the TREASURY wallet.

TREASURY wallets are designed for community votes, either for buybacks and burns or for staking rewards through our vote for stake model.
DEV wallet purpose is improving the project (marketing, audit payment, and more)

### BSCMAINNET
- CoinSwap Token - https://bscscan.com/address/0x3bc5798416c1122BcFd7cb0e055d50061F23850d#code
- MasterCSS - https://bscscan.com/address/0x3A0a988D680dBBB02DECBfd35F9E0676B4bEc292#code
- CoinSwapFactory - https://bscscan.com/address/0xC2D8d27F3196D9989aBf366230a47384010440c0#code
- CoinSwapRouter - https://bscscan.com/address/0x34DBe8E5faefaBF5018c16822e4d86F02d57Ec27#code
- CoinSwapPair init code hash - `2e3f108b8526ff1faa4d526bb84210fc5a2bfc5aad2f62207d7964554a5d029d`

### BSCTESTNET
- CoinSwapFactory - https://testnet.bscscan.com/address/0xf236c05e86f4d7226199F7b60DB2f8CA17117dE7#code
- CoinSwapRouter - https://testnet.bscscan.com/address/0x2F5Ed71C1fFE31Caf917fD9B31583572f84Cf3F7#code
- CoinSwapPair - https://testnet.bscscan.com/address/0x18a3d7b6CA2c7b699218BAf67639aA834E5d5aC3#code
- CoinSwap Token - https://testnet.bscscan.com/address/0x88b24495E1e632be0F0bb40467e0Ad1a145fE4F9#code
- MasterCSS - https://testnet.bscscan.com/address/0x74A9313f40b04b906Eb9D357C0F277e648eD7480#code
- CssReferral - https://testnet.bscscan.com/address/0x84a36D764889DEB889265F222962705C072423eB#code

",9,9,2,0,farm,"[coinswap, contract, dex, farm, finance, master, smartcontract, solidity]",00000
959,mochimo-farm-manager,0rtis,N/A,https://github.com/0rtis/mochimo-farm-manager,https://api.github.com/repos/0rtis/mochimo-farm-manager,Mochimo mining farm manager,"[![GitHub license](https://img.shields.io/github/license/0rtis/mochimo-farm-manager.svg?style=flat-square)](https://github.com/0rtis/mochimo-farm-manager/blob/master/LICENSE)
[![Build Status](https://img.shields.io/travis/0rtis/mochimo-farm-manager.svg?style=flat-square)](https://travis-ci.org/0rtis/mochimo-farm-manager)
[![Follow @Ortis95](https://img.shields.io/twitter/follow/Ortis95.svg?style=flat-square)](https://twitter.com/intent/follow?screen_name=Ortis95) 


## A command center for Mochimo miners

Mochimo Farm Manager aggregates statistics from your miner in a simple web interface


### What is Mochimo ?

[Mochimo](https://mochimo.org/) is a quantum proof, scalable, ASIC-resistant POW cryptocurrency.
You can download the Mochimo miner from the official [repository](https://github.com/mochimodev/mochimo).


### What is Mochimo Farm Manager ?
The nature of Mochimo blockchain (1 CPU = 1 Vote) requires to setup several miner through virtualization/dockerization in order to fully use the processing power of a multi-core CPU. An alternative solution is to setup multiple low resource host (usually rented through a cloud provider).
Whatever solution you choose, the end result will be multiple independent miners which makes monitoring very tedious.

Mochimo Farm Manager brings all your miner together in a simple web interface (both standard HTML and API). A large panel of monitoring features is available:

- Aggregation of mining statistics (HPS, Block Solved, Height & Difficulty, running processes, etc)
- Remote start/stop capabilities
- Expected Time to Reward calculation (expected time before solving a block given the current HPS of the farm). 
- Customizable network consensus calculation (bx.mochimo.org, miner specific, farm wide)
- Detection of lagging miner and automatic restart
- Detection of stopped miner and automatic start
- Automatic reboot of a miner after specified uptime is reached
- etc...

*Tip*: You don't need to run the full Mochimo Farm Manager to compute Network Estimates and/or the Expected Time to Reward. Use the `estimate` command. 
```
java -jar mochimo-farm-manager-version.jar estimate --height 2423 --diff 38 --hps 200000
Height: 2423.0
Block Reward:   5.483720450999266 MCM
Difficulty:     38.0
Estimated Network HPS:  815,661,444.94
Mining HPS:     200,000.00
Contribution:   0.024519977159798145 %
Estimated Time to Reward:       15 days, 22 Hrs, 20 Minutes, 28 Seconds
```




### How does Mochimo Farm Manager works ?

Mochimo Farm Manager is performing an [SSH](https://en.wikipedia.org/wiki/Secure_Shell) connection to each miner in the farm on regular intervals. Once the connection is established, it will remotely execute several command to get the status of the miner (CPU load, running processes, etc) and will close the connection. There is no need to run it on the miner's host, your day to day PC will do just fine.


### Download, Install & Configuration

*This software is not endorsed by, directly affiliated with, maintained, authorized, or sponsored by the Mochimo Foundation. All product and company names are the registered trademarks of their original owners. The use of any trade name or trademark is for identification and reference purposes only and does not imply any association with the trademark holder of their product brand.*

<br/>

##### :exclamation: Use a dedicated user to run and monitor your miner. Avoid naming it 'mochimo'. Do not use `root`.

<br/>

##### Part 1 - Configure the miner

1. Edit **start.sh** and set the path to the bin folder of the miner (ex: `/home/mysuer/mochi/bin`)
2. Upload **start.sh** to your miner's host. Even though the location does not matter, I recommend the bin folder
3. Give executing permission to **start.sh** `chmod +x start.sh`
4. Run `./start.sh` on the miner's host. This command will create a file name `miner.log` that contains the output of the running miner. You will not be able to interact with the miner at this point but you can still monitor it by reading the content of `miner.log`. Use the command `tail -f -n100 miner.log` to read the log (it will update automatically when a new line is written)


##### Part 2 - Configure Mochimo Farm Manager

1. Install [Java](https://java.com/en/download/) (version 8 or higher)
2. Download the latest release of Mochimo Farm Manger [here](https://github.com/0rtis/mochimo-farm-manager/releases). *Note*: the executable `jar` `mochimo-farm-manager-version.jar` is only available in the release package. If you clone the repository, you will need to build the `jar` yourself with [Maven](https://maven.apache.org/)
3. Create a farm configuration file based on the example `example_mining_farm.json`:
	* `networkConsensus`: specify the method to compute the network consensus
		1. `bx.mochimo.org`: uses https://bx.mochimo.org/ (this is the default method)
		2. `farm`: average statistics from each miner
		3. `miner MINER_ID`: use statistics from miner MINER_ID
	* `id`: unique ID of the miner
	* `host`: ip and port for ssh connection. example: `192.168.1.2:22`
	* `user`: username for SSH connection
	* `password` or `privateKeyPath`: SSH authentication can be made with password or a path to private key
	* `startCommand`: start command of the miner. Set the path to **start.sh** that you uploaded to the host in Part 1 
	* `stopCommand`: stop command of the miner. If not specified, a `kill` command is send
	* `logCommand`: command to retrieve miner's log. Edit the existing command by replacing `/home/myuser/mochi/bin/miner.log` by the path to **miner.log** (there is two instance to replace)
	* `policy`: policy can be set for automatically restart the miner on specific events. A `policy` is composed of triggers:
		1. `maxLag LAG`: reboot the miner if the difference between its height and the network consensus height is greater or equal to LAG
		2. `maxDowntime AMOUNT`: start the miner if it has been down more than AMOUNT of time. AMOUNT can be seconds, minutes or hours (ex: `30s`, `5M`, `3H`)
		3. `maxUptime AMOUNT`: reboot the miner after AMOUNT of time
		
        
        Triggers can be combined to create a policy. For example -> `""policy"":""maxLag 3, maxDowntime 1H, maxUptime 12H""`:
        - Reboot if the height difference reaches 3
        - Start if downtime reaches 1 hour
        - Reboot if the uptime reaches 12 hours
        
    	Check the formatting of your config file in a [JSON validator](https://jsonlint.com/) (Remove sensitive information before doing so). A badly formatted config file will generate an error when starting the farm manager (`com.google.gson.JsonSyntaxException`)
    
4. *Higly Recommended*: encrypt your configuration file `java -jar mochimo-farm-manager-version.jar encrypt plain_text_config.json encrypted_config.json`
5. Start the farm manager `java -jar [path to the mochimo farm manager jar] start [path to your config file] [path to the html folder]` <br/> For example `java -jar ""C:/Users/ortis/Downloads/mochimo-farm-manager-0.5/mochimo-farm-manager-0.5.jar"" start ""C:/Users/ortis/Downloads/mochimo-farm-manager-0.5/my_farm.json"" ""C:/Users/ortis/Downloads/mochimo-farm-manager-0.5/html""`
6. Access the dashboard http://localhost:8888

There are several start option available. Make sure to check them out `java -jar mochimo-farm-manager-version.jar start -h`

Mochimo Farm Manager also provides a REST API:
* http://localhost:8888/status : farm statistics
* http://localhost:8888/miner?id=minerId : miner statistics
* http://localhost:8888/command?id=minerId&cmd=commandToExecute : execute remote command `cmd=start`, `cmd=stop`, `cmd=restart`




### TODO
- [x] Webservice API
- [x] Web interface
- [x] Dashboard
- [x] Start/Stop command
- [x] Configuration file encryption
- [x] Detect lagging miner and restart 
- [x] Start/Stop task scheduling
- [ ] Email notification


### Donation
Like the project ? Consider making a donation :) 

MCM: *mcmdonationaddr.dat in this repository*

ETH & ERC-20: _0xaE247d13763395aD0B2BE574802B2E8B97074946_

BTC: _18tJbEM2puwPBhTmbBkqKFzRdpwoq4Ja2a_

BCH: _16b8T1LB3ViBUfePCMuRfZhUiZaV7tUxGn_

LTC: _Lgi89D1AmniNS8cxyQmXJhKm9SCXt8fQWC_


",9,9,5,0,farm,"[api, blockchain, control-center, cryptocurrency, dashboard, farm, manager, mining, mochimo-farm-manager, pool, python, webservice]",00000
960,FLORISSE_M,TUDelft-DataDrivenControl,TUDelft-DataDrivenControl,https://github.com/TUDelft-DataDrivenControl/FLORISSE_M,https://api.github.com/repos/TUDelft-DataDrivenControl/FLORISSE_M,An exhaustive MATLAB implementation of the steady-state FLORIS wind farm model,"{'message': 'Not Found', 'documentation_url': 'https://docs.github.com/rest/repos/contents#get-repository-content'}",9,9,6,4,farm,"[control, farm, floris, matlab, model, modeling, modelling, optimization, steady-state, wind]",00000
961,Mt2-Stone-Farm-Bot,notsaki,N/A,https://github.com/notsaki/Mt2-Stone-Farm-Bot,https://api.github.com/repos/notsaki/Mt2-Stone-Farm-Bot,Automatic Metin Stone farmer for Rubinum server.,"# Metin2 Stone-Farm Bot
A bot written in Python using image processing to auto-farm Metin stones. The bot may not be suitable for slow computers as it needs CPU power to process images and detect objects in it. Otherwise it will be painfully slow or may not even work properly.

## How it works
- Logins to your character.
- Teleports to the correct map.
- Rotates the camera looks for a Metin stone.
- Breaks the stone and collect items.
- Checks if the player is killed, stuck, or kicked.

### Notes
- Rubinum seems to have prevented such scripts from sending input to the client. So currently it seems the bot doesn't work anymore.
- The bot may not work for every server especially in its current version. It was created for Rubinum. The client must give you the ability to save your login credentials, your player must have a ring that teleports you to the place you want to farm and a map that is made specifically for stone-breaking. The bot isn't advanced enough to run around searching.
- Configuration for this bot is a bit complex so it may be difficult to understand.
- Recommended game resolution: 1024x768. 800x600 makes the UI elements overlap each other and causes problems on detection. And larger resolutions will increase the time of image processing.
- Your character should have a horse and ride it for the bot to work properly.
- The bot can handle multiple clients at the same time.
- The bot uses libraries that only work on Windows.
- The bot is still not finished. However, it may or may not be continued. There are many configurations that are hardcoded and the modularity is poor.

## Configuration
First of all, I need to explain the config files. In order to configure the bot properly, you need to understand how exactly it works.

We have 3 directories: clients, maps and relatives.

### relatives
Note: The current version doesn't support multiple resolutions as they are hardcoded. So you can skip the current guide if you want unless you are going to change the code yourself.

This file contains some screen coordinates for specific resolutions. If you want to use one of the two that are already there you can leave the file as it is. This configuration basically creates an example of a hypothetical client that is going to be used to calculate the relative position on your screen.

For example: If our hypothetical client's top left position was in (895, 270) position, where would the mini-map be? Let's say it's on (1903, 286) Where would the the stone hp be? Let's say it's on (1408, 293). So if your actual top left position is on (862, 315) the program can guess where the these positions are by finding the relation of them. This is done by the following code:

### bmath.py

    def get_relative(top_left, new_top_left, def_pos):
        dif = (def_pos[0] - top_left[0], def_pos[1] - top_left[1])

        pos = (new_top_left[0] + dif[0], new_top_left[1] + dif[1])

        return pos
        
- `top_left` is the config's file top left position of the client. It is used to find all relative positions.  
- `new_top_left` is the top left position of your actual client.  
- `def_pos` is the configs position we want to find the relative one.  
- `[0]` is the x position on screen and `[1]` is y. So by writing `new_top_left[0]` we mean the x value of your client's top left position.

So, to find the position of the mini-map, we have:

    top_left = (895, 270)  
    new_top_left = (862, 315)  
    def_position = (1903, 286)

Replacing the values:

    dif = (1903 - 895, 286 - 270) = (1008, 16)
    pos = (862 + 1008, 315 + 16) = (1870, 331)

So in this example, the mini-map's position would be at (1870, 331). This applies to all positions that are included in this configuration file.


### Create your own config of relatives

Now that we know how it works, let's see how to create our own config file for other resolutions.

First of all, you need to take a couple of screenshots. One of your login screen, one of your game screen while having a mob or a stone as a target so the health bar at the top is visible and one while being dead. You also need an image editor or any other software that you can find cordinates by pointing your cursor in the image. [paint.net](https://www.getpaint.net/index.html) is good enough and also free. Now let's explain some things:

- `top-left` is of course your screen's top left position. Not the window but the very top left pixel of your game screen. It is recommended to get it right so it doesn't cause miscalculations.
- `window-size` is your client's window size. Basically the game resolution however, the height should be the without including the bottom bar. Give it some extra 50-100 pixels offset as well because you won't need that part of your screen the image process. See the already existing values to get an idea.
- `stone-bar-close` is the x button on the health bar. This is basically the main issue with the 800x600 resolution as it may overlap with the event buttons next to it.
- `mini-map` is the button that closes the minimap at the top right of your screen.

For the stone hp the bot creates a rectangle around the hp value and detects the text inside it. So in order to take the value we need a top left position and the rectangle size:
- `hp` is the top left position.
- `hp-rectangle` is the rectangle size. This may not be necessary to change it.

The same method applies here. The bot detects if the player died by trying to find the revive here button.
- `revive-here` is the top left position of the revive button.
- `revive-rectangle` is the rectangle size.

- `account1-12` is the saved accounts on the login screen. If the client doesn't support saved accounts you may put some safe value that will not affect anything on click. The bot, by the way, will get stuck.
- `channel1-8` is for channel selection. Add whateer values if the channels are less. Add the emptier channels if the channels are more.

The following ones are for Rubinum2 only. They are used on map configuration to set the navigation of that specific map through the menu. If you can make it work somehow on other servers, good.
- `next` is the next page option.
- `ork` and `red-forest` are map names. Self explanatory.
- `area1-8` are specific areas on each map.

### maps
This file contains map settings. This file is much simpler.

- `name` is the name of the map. This is used to set which map a specific client will go to search for stones. See clients.
- `stone-sample` contains the directory of stone pictures which will be used to detect the Metin stone you want to search for. You can add to that directory as many samples as you want. In the current version, you have to screenshot the name of the stone and not the texture. If you want to detect the texture, make sure to get only small samples for more accuracy. Look the content of the `icons` folder to get the idea. Furthermore, make sure to change the code accordingly: open `actions.py` and find the function `select_target`. There's a line `loc = (loc[0], loc[1] + 80)`. 80 is the offset of the click downwards. If you're using the name as the target keep it as it is or change it to a different offset if 80 doesn't work on you. Put 0 if you are using textures as samples. Note: The sub-folders that exist in the folder are not being used. You can use them to store more samples while not using them. At the current version, you cannot use the name in one case and texture in another.
- `object-detection` currently doesn't work. However, it would be used to change the object detection method in case one doesn't work. This is a bit of an advanced option so keep it as it.
- `hl` basically means high-low. Some object detection methods give high values to best matches and some the opposite. So this says the bot which of these cases to look for. Advanced option.
- `threshold` is a threshold that helps the bot determine if the best match of the detection is actually the object being searched. Again, advanced option. Leave it as it is.

- `navigation` is the clicks you have to do to navigate to the specific map. You can add as many as you want and also name them whatever you want. It doesn't matter.

### clients
This is the config files for the clients you want to use. Each file is used for a different client.

- `account` includes some settings for each account. If enabled is fales the bot ignores this client. Id is the client's position on the saved logins. channel is the channel you want to login. username is only used in the console to let you know which client is being used at the moment. map is the map you want to go.
- `position` is used to tell the bot where your player is being placed in character selection. Currently doesn't work so make sure it's at the front.
- `navigation` has some settings to help your bot navigate through your client. task-bar is the position of the client's window on the Windows task bar. Make sure to not combine the same windows into one in the task bar settings. top-left is your clients top left position. Use the guide at the relatives to see how to get it (Create your own config of relatives). ring is the position of the map menu at the bottom bar. Supported values (`1`, `2`, `3`, `4`, `f1`, `f2`, `f3`, `f4`).
- `skills` is the same as ring but for skills. Add the skills like Aura of Sword or buffs or whatever that you need to have your character prepared. Add as many as you want. Also, the name doesn't matter. It's just an identifier.
- `horse-skills` is, of course, for horse skills. Currently only slash is supported that is used to unstuck your character if they're being surrounded.

## Run

### Requirements
- You need to install Python 3.7 or newer.
- Open cmd and using `pip`, install the following libraries:
 
    - pillow
    - cv2
    - opencv-python
    - pyautogui
    - numpy
    - keyboard
    - imutils
    - pytesseract

### Start the bot
Before you run, make sure you you have opened the clients you want to use in their login screens. Run the bot by typing `python main.py`. After that, don't touch your keyboard and don't click anywhere. Do it only if you want to stop the bot. To do so, quickly open the cmd window and press `Ctrl` + `C`.

The bot will run for 5000 times in total. That means each time it catches a player farming, it counts +1. In `main.py` change the `max_loops` value if you want to change the value or replace the `while loop < max_loops:` line with `while True:` to run the program infinitely.

There are also two extra scripts:
- `cords.py` which you can use to click anywhere on your screen and get the coordinates. It uses only the `pyautogui` library.
- `xp.py` is a very simple bot that automates xp farming by automatically pressing `space` and every 10 seconds `2` to activate a cape. I uses only the `keyboard` library. You can change the button if you want inside the code:
    - `binput.press_button('2')` is to press the cape. Supported values (`1`, `2`, `3`, `4`, `f1`, `f2`, `f3`, `f4`).
    - `sleep(10)` is the frequency for each cape in seconds.
    - `task_bar = (1291, 1062)` is the position of your client in the task bar. It is used for the bot to bring the window at the top.
",8,8,1,1,farm,"[bot, farm, image, metin2, python, rubinum, stone]",00000
962,Question-answering-python,pradeepdev-1995,N/A,https://github.com/pradeepdev-1995/Question-answering-python,https://api.github.com/repos/pradeepdev-1995/Question-answering-python,"Question answering (QA) is a computer science discipline within the fields of information retrieval and natural language processing (NLP), which is concerned with building systems that automatically answer questions posed by humans in a natural language.","# Question answering natural language processing

Question answering (QA) is a computer science discipline within the fields of information retrieval and natural language processing (NLP), which is concerned with building systems that automatically answer questions posed by humans in a natural language. 

![Alt text](output/qa.png?raw=true ""Question answering"")

There are two domains in question answering.  
1 - Open domain question answering  (ODQA)  
2 - Closed domain question answering (CDQA)  

## Open domain question answering  (ODQA)
The ability to answer factoid questions is a key feature of any dialogue system. Formally speaking, to give an answer based on the document collection covering wide range of topics is called open-domain question answering (ODQA). The ODQA task combines the challenges of document retrieval (finding the relevant articles) with that of machine comprehension of text (identifying the answer span from those articles). An ODQA system can be used in many applications. Chatbots apply ODQA to answer user requests, while the business-oriented Natural Language Processing (NLP) solutions leverage ODQA to answer questions based on internal corporate documentation. The picture below shows a typical dialogue with an ODQA system.

![Alt text](output/odqa.png?raw=true ""Open domain question answering"")

## Closed domain question answering (CDQA)
When no restriction is made on the domain of the questions we are talking about open domain question answering. Instead, when questions are bound to a specific domain we are talking about closed (or restricted) domain question answering (CDQA). Here we are providing a paragraph or a document with a question. The CDQA system will extract the answer to the question by analysing the given paragraph or document;

![Alt text](output/cdqa.png?raw=true ""Closed domain question answering"")

Here I am explaining different approaches for both open domain question answering and closed domain question answering.  

## Closed domain question answering
1 - Adaptnlp  
2 - Deeppavlov  
3 - Distilbert  
4 - Cdqa-suite  
5 - Transformer  
6 - Transformer Pipeline  
7 - Simple Transformers  
8 - txtai  
9 - Haystack  
10 - Ktrain simpleQA  



## Open domain question answering
1 - Deeppavlov  
2 - Wikipedia QA  
	
",8,8,1,0,farm,"[adaptnlp, albert, artificial-intelligence, bert, cdqa, cdqa-suit, deep-learning, deeppavlov, farm, haystack, ktrain, machine-learning, natual-language-inference, python, question-answering, transformer]",00000
963,Covenants-Core,EthereansOS,EthereansOS,https://github.com/EthereansOS/Covenants-Core,https://api.github.com/repos/EthereansOS/Covenants-Core,"🧙‍♂️✨ Covenants protocol helps Contracts, Organizations (DFOs, DAOs), or regular people to build and manage cross AMMs financial applications","{'message': 'Not Found', 'documentation_url': 'https://docs.github.com/rest/repos/contents#get-repository-content'}",7,7,6,0,farm,"[amms, covenants, defi, farm, inflate, wrapped-usd, wusd]",00000
964,WorkRecordPlugin,JasonRoesbeke,N/A,N/A,https://api.github.com/repos/JasonRoesbeke/WorkRecordPlugin,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1FB:1E37:292C66:55A700:65224006.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,farm,"[N, /, A]",00000
965,lol-bot,ksyncpro,N/A,https://github.com/ksyncpro/lol-bot,https://api.github.com/repos/ksyncpro/lol-bot,An account leveling bot for League of Legends written in Python.,"## Welcome to lol bot
- This is a python bot that uses the local League Client API to start games and plays them with a simple but effective game loop.
- This bot has leveled up [thousands of league accounts](https://www.playerauctions.com/lol-account/) and is still going strong.
- No pixel botting and/or image recognition makes it easy to run on any setup.

</br>
<p align=""left"">
  <img src=""https://user-images.githubusercontent.com/32341824/231916860-8cdaa0bb-c808-48f7-8afe-5cd151501a98.gif"")
</p>

## Current Features
- Start League and Login
- Start a Beginner Bot Game
- Buy items and somewhat intelligently push mid until the game is over
- End game, earn experience, collect rewards
- Loop 🥡🧋

## Requirements
- [League of Legends](https://signup.leagueoflegends.com/en-us/signup/download)
- [League of Legends Account](https://signup.leagueoflegends.com/en-us/signup/index)
- [Python >= 3.10](https://www.python.org/downloads/)

## Setup
- Ensure Python is added to your PATH, check ""Add Python to PATH"" when installing
- Clone/Download the repo
- Download [extra RAM](https://downloadmoreram.com/) (only if needed)
- Run Installer.bat or ```pip install -r requirements.txt```

## Optional Configuration
- For non-standard league install paths, update the league_dir in constants.py
- To continuously level new league accounts:
  - Implement account.py to connect to your database of league accounts
  - Make sure that ""stay signed in"" is not checked when league of legends starts. 
  - This allows the bot to log out of league by closing it, get new account credentials, restart league, log in with the new credentials, and start another leveling loop, cycling indefinitely
- To level accounts past level 30 or play in different game types update game data variables in constants.py

## Disclaimer
Another LoL Bot isn’t endorsed by Riot Games and doesn’t reflect the views or opinions of Riot Games or anyone officially involved in producing or managing League of Legends. League of Legends and Riot Games are trademarks or registered trademarks of Riot Games, Inc. League of Legends © Riot Games, Inc.

This software works with other programs/services (League of Legends) so you take full responsibility for breaking their Terms of Service and full responsibility for the accounts that you’re using with this bot and agree to use it at your own risk.
",7,7,3,0,farm,"[bot, exp, farm, game, lcu-api, league-bot, league-of-legends, league-of-legends-api, league-of-legends-bot, league-of-legends-python, python]",00000
966,SI4403_A_Farm.io,SI-RPL-2023,SI-RPL-2023,https://github.com/SI-RPL-2023/SI4403_A_Farm.io,https://api.github.com/repos/SI-RPL-2023/SI4403_A_Farm.io, Farm House.io adalah sebuah website pembelajaran untuk setiap orang yang ingin belajar tentang perternakan di Indonesia terutama para peternak yang ingin menambah ilmu dalam bidang peternakan.  Farm House.io merupakan course yang menyediakan berbagai macam materi dan video pembelajaran yang diakses secara gratis ataupun berbayar,"## Hello, Kami Dari Kelompok 233 Kelas SI-44-03  <img src=""https://media.giphy.com/media/hvRJCLFzcasrR4ia7z/giphy.gif"" width=25> !
<div align=""center"">
<img src=""https://i.giphy.com/media/qgQUggAC3Pfv687qPC/giphy.webp"">
</div>
<br>
 
 
## TUGAS BESAR REKAYASA PERANGKAT LUNAK
Pada tugas besar Rekayasa Perangkat Lunak (RPL) ini kami membuat sebuah website bernama `FarmHouse`. `FarmHouse` adalah sebuah website tentang edukasi dunia peternakan. Website ini dibuat menggunakan [PHP](https://www.php.net/) dan [Laravel](https://laravel.com/) sebagai framework untuk Backend dan [HTML](https://en.wikipedia.org/wiki/HTML) dan [CSS](https://en.wikipedia.org/wiki/CSS) dengan framework [Bootstrap](https://getbootstrap.com/) untuk Frontend.

## Tentang Kami
Kami merupakan kelompok 233 (FarmHousers)  yang berasal dari kelas SI-44-03, program studi S1 Sistem Informasi, Telkom University. Kami beranggotakan 6 orang, diantaranya:

| No  | Nama                                                                 | NIM        | Role            |
| --- | -------------------------------------------------------------------- | ---------- | --------------- |
| 1   | [M. Felix Nugraha Tarjono](https://www.instagram.com/felix.ngrh)     | 1202204268 | Project Manager |
| 2   | [Rafid Fadhil](https://www.instagram.com/rafidfadhill)               | 1202204021 | Analyst         |
| 3   | [Novan Janis Aditya Halawa](https://www.instagram.com/novanjanis)    | 1202201382 | Programmer      |
| 4   | [Fadli Izurohman](https://www.instagram.com/izurohmanq)              | 1202204033 | Programmer      |
| 5   | [Ruben Adisuryo Nugroho](https://www.instagram.com/rubenadi_)        | 1202200152 | Programmer      |
| 6   | [Diki Ilham Firmansyah](https://www.instagram.com/diki_if)           | 1202202134 | Programmer      |


## Repository Structure

The repository is structured as follows:

-   `main` adalah main branch repositori dan berisi kode versi stabil terbaru.
-   `dev` adalah development branch repositori dan berisi versi pengembangan kode terbaru.
-   `feature/feature_name` adalah Branch repositori yang digunakan untuk mengembangkan fitur baru dan digabungkan menjadi dev saat sudah selesai.

## Cara Menjalankan Aplikasi
*Salin perintah ini di terminal kamu atau git bash*

- Clone project from github

```bash
git clone https://github.com/SI-RPL-2023/SI4402_228_TITIPAN.git 
```

- Copy the .env.example file to .env

```bash
cp .env.example .env
```

- Change the database name in the .env file

```bash
DB_PORT=your_mysql_port
DB_DATABASE=your_database_name
```

- Install Composer

```bash
composer install
```

- Generate Key

```bash
php artisan key:generate
```

- Migrate Database

```bash
php artisan migrate
php artisan migrate:fresh --seed
```

- Link Storage

```bash
php artisan storage:link
```

- Run the server

```bash
php artisan serve
```

",6,6,0,14,farm,[farm],00000
967,brave-rewards-bot,LordAlex2015,N/A,https://github.com/LordAlex2015/brave-rewards-bot,https://api.github.com/repos/LordAlex2015/brave-rewards-bot,Brave Rewards Farm Bot  |  EDUCATIONAL PURPOSES ONLY,"# brave-rewards-bot

Brave Rewards Farm Bot 

**By: ArviX#8443**

**EDUCATIONAL PURPOSES ONLY**

***READ LICENSE FILE PLEASE***

## Installation
`git clone https://github.com/LordAlex2015/brave-rewards-bot.git`

`cd brave-rewards-bot`

`npm install`

## Configuration

Rename `example.config.json` and rename it to `config.json`

Modify `config.json` for your screen

### Elements Coords

Check [https://github.com/LordAlex2015/get-mouse-coords](https://github.com/LordAlex2015/get-mouse-coords) to get mouse coords

search_bar = ![img1.png](https://i.arvix.ml/AxWmxzD.png)

new_tab = ![img2.png](https://i.arvix.ml/pkL7SCZ.png)

first_tab = ![img3.png](https://i.arvix.ml/cxypMu1.png)

scroll_bar = ![img4.png](https://i.arvix.ml/d2QXZH7.png)

Set Mouse Coords (x, y)

### Websites

Add websites to visit 

### Loop

Set to true if you want to repeat the websites list on finish

### Limit

Set to 0 if loop is false or to do infinite

Set to 3 to visit 3 times websites

*(Your list have 5 websites, if you set 3 it will be only visits 3 websites)*

### stayOnPage

The time to stay on the page before skip

## Usage

Open Brave close all tabs *(Keep just one tab)*

Execute `npm start` and select Brave, wait 5 seconds and FARM!",6,6,2,0,farm,"[bot, brave, farm]",00000
968,dbd-xp-farm,Pazdikan,N/A,https://github.com/Pazdikan/dbd-xp-farm,https://api.github.com/repos/Pazdikan/dbd-xp-farm,Dead by Daylight Auto AFK script for farming XP and Rift Fragments.,"
# Dead by Daylight XP/Rift Farm

In DBD you get 1 XP per second capped at 10 minutes, so this script will get you around 4950 XP (500 XP = 1 Rift Fragment) per hour (during my tests).

Remember that you can get banned even thought I haven't heard about AFK bans.

## Warnings

**[!] This script may not work with your monitor! You can open `screenshot.png` file and change values at line 39.**

**[!] You can't use your pc while using this script! The game has to be focused.**

## Features

- Auto queue

## Roadmap

- Statistics

- Text recognition area selector.

## Installation

- If you don't know what git is you can [click here to download the zip](https://github.com/Pazdikan/dbd-xp-farm/archive/refs/heads/master.zip) and unpack it.

## Usage
- Run the game, select the killer and stay on the screen with ready button.
- Run the `start.bat` file.

You can bring perks like [Corrupt Intervention](https://deadbydaylight.fandom.com/wiki/Corrupt_Intervention) and [Hex: Ruin](https://deadbydaylight.fandom.com/wiki/Hex:_Ruin) to slow down the game (for full 10 minutes XP)
",6,6,1,0,farm,"[afk, auto, cheat, dbd, deadbydaylight, farm, xp]",00000
969,farmOS-community-blog,farmOS,N/A,N/A,https://api.github.com/repos/farmOS/farmOS-community-blog,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C104:4771:29C1D8:56C7AA:6522401B.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,farm,"[N, /, A]",00000
970,FarmManagementApp,arib7701,N/A,https://github.com/arib7701/FarmManagementApp,https://api.github.com/repos/arib7701/FarmManagementApp,Management system for farm,"# FarmManagementApp
Management system for farm - WIP

Front: Angular
Back: Java + Spring
Database: MySQL

Application for farmers in order to manage :
- animals inventory
- animals growth
- animals deliveries

// TO BE ADDED
- revenue
- expenditures
- invoices 


",5,5,1,18,farm,"[angular6, farm, fullstack, hibernate, java, mysql, rest-api, springboot]",00000
971,ZBSchools-Macro,TheTrustyPwo,N/A,https://github.com/TheTrustyPwo/ZBSchools-Macro,https://api.github.com/repos/TheTrustyPwo/ZBSchools-Macro,✨Farm ZBSchools in the background at 25M points/day (at your own risk),"<!--suppress ALL -->
<div align=""center"">
  <a href=""https://github.com/TheTrustyPwo/ZBSchools-Macro/graphs/contributors"" target=""_blank"">
    <img src=""https://img.shields.io/github/contributors/TheTrustyPwo/ZBSchools-Macro.svg?style=for-the-badge"" alt=""Contributors"">
  </a>
  <a href=""https://github.com/TheTrustyPwo/ZBSchools-Macro/network/members"" target=""_blank"">
    <img src=""https://img.shields.io/github/forks/TheTrustyPwo/ZBSchools-Macro.svg?style=for-the-badge"" alt=""Forks"">
  </a>
  <a href=""https://github.com/TheTrustyPwo/ZBSchools-Macro/stargazers"" target=""_blank"">
    <img src=""https://img.shields.io/github/stars/TheTrustyPwo/ZBSchools-Macro.svg?style=for-the-badge"" alt=""Contributors"">
  </a>
  <a href=""https://github.com/TheTrustyPwo/ZBSchools-Macro/issues"" target=""_blank"">
    <img src=""https://img.shields.io/github/issues/TheTrustyPwo/ZBSchools-Macro.svg?style=for-the-badge"" alt=""Forks"">
  </a>
  <a href=""https://github.com/TheTrustyPwo/ZBSchools-Macro/blob/master/LICENSE.txt"" target=""_blank"">
    <img src=""https://img.shields.io/github/license/TheTrustyPwo/ZBSchools-Macro.svg?style=for-the-badge"" alt=""Contributors"">
  </a>
</div>


<!-- PROJECT TITLE -->
<!--suppress HtmlDeprecatedAttribute, HtmlUnknownAnchorTarget -->

<div align=""center"">
<h3 align=""center"">ZBSchools - Macro</h3>
  <p align=""center"">
    Auto grinder for ZBSchools built with Python Selenium
    <br/>
    <a href=""https://github.com/TheTrustyPwo/ZBSchools-Macro/issues"">Report Bug</a>
    ·
    <a href=""https://github.com/TheTrustyPwo/ZBSchools-Macro/issues"">Request Feature</a>
  </p>
</div>


<!-- TABLE OF CONTENTS -->
<details>
  <summary>Table of Contents</summary>
  <ol>
    <li><a href=""#about-the-project"">About The Project</a></li>
    <li><a href=""#installation"">Installation</a></li>
    <li><a href=""#configuration"">Configuration</a></li>
    <li><a href=""#contributing"">Contributing</a></li>
    <li><a href=""#license"">License</a></li>
    <li><a href=""#contact"">Contact</a></li>
  </ol>
</details>


<!-- ABOUT THE PROJECT -->
## About The Project

This is a rather simple Python script which makes use of Selenium's ability
to interact with the web browser to create a sophisticated bot capable of solving
most questions with absolute precision.

Some awesome features:
* Lightweight
* Runs in the background
* Solves nearly all questions
* Multi threaded
* Gain 25 million points per day (On 8 Threads)
* Instant setup and configurable

### Disclaimer
Use this program at your own risk. According to <a href=""https://www.sph.com.sg/legal/website_tnc/"">SPH Terms and Conditions</a>
Section 6 Part D, users must not ""use any automated process, use any kind of scripting software or bots or service to access and/or use the Site and/or Services"".
This program is merely demonstrating the capabilities of the Selenium webdriver, and you are liable
for all consequences of your actions.

<p align=""right"">(<a href=""#top"">back to top</a>)</p>


<!-- INSTALLATION -->
## Installation

Prerequisites: Cookie Editor browser extension, Chrome version 110 (Latest as of 19 Feb 2023)

1. Head to <a href=""https://github.com/TheTrustyPwo/ZBSchools-Macro/releases/"">Release</a> and download the release zip file
2. Once complete, extract the zip file
3. In the extracted folder, you should see 3 files, namely `main.exe`, `config.json` and `cookies.json`
4. Go to <a href=""https://www.zbschools.sg/"">ZBSchools</a> and sign in
5. Using the <a href=""https://chrome.google.com/webstore/detail/cookie-editor/hlkenndednhfkekhgcdicdfddnkalmdm?hl=en"">Cookie Editor</a> extension, export your cookies which should copy them to your clipboard
6. Open `cookies.json` and clear all the text in the file and paste your cookies in
7. Note that you need to do this every time your cookies change (Which depends on your activity)
8. Modify `config.json` to your liking. Refer to the section below.
9. Finally, run main.exe which will open a terminal

<p align=""right"">(<a href=""#top"">back to top</a>)</p>


<!-- CONFIGURATION -->
## Configuration

This is a list of configurable options in the `config.json` file and what they mean.

| Configurable             | Description                                                                                                                                                                  | Default | Datatype |
|--------------------------|------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|---------|----------|
| `lastProcessedArticleID` | Saves the last processed article ID to prevent repeated processing. Do not modify this unless you know what you are doing.                                                   | 14      | int      |
| `articlesPerSession`     | Number of articles the script will process every time you run it. Once it processes that many articles, it will stop and exit.                                               | 100     | int      |
| `threads`                | Number of threads to run. More threads means that the script will be able to solve more articles concurrently, but will also use more system resources.                      | 4       | int      | 
| `headless`               | If set to true, the browser will be invisible which increases performance. It is recommended to turn this on for quicker solving, especially when multiple threads are used. | false   | bool     |

<p align=""right"">(<a href=""#top"">back to top</a>)</p>


<!-- CONTRIBUTING -->
## Contributing

Contributions are what make the open source community such an amazing place to learn, inspire, and create. Any contributions you make are **greatly appreciated**.

If you have a suggestion that would make this better, please fork the repo and create a pull request. You can also simply open an issue with the tag ""enhancement"".
Don't forget to give the project a star! Thanks again!

1. Fork the Project
2. Create your Feature Branch (`git checkout -b feature/AmazingFeature`)
3. Commit your Changes (`git commit -m 'Add some AmazingFeature'`)
4. Push to the Branch (`git push origin feature/AmazingFeature`)
5. Open a Pull Request

<p align=""right"">(<a href=""#readme-top"">back to top</a>)</p>


<!-- LICENSE -->
## License

Distributed under the GNU GPLv3 License. See `LICENSE.txt` for more information.

<p align=""right"">(<a href=""#top"">back to top</a>)</p>


<!-- CONTACT -->
## Contact

TheTrustyPwo - Pwo#0001 - thetrustypwo@gmail.com

Project Link: [https://github.com/TheTrustyPwo/ZBSchools-Macro](https://github.com/TheTrustyPwo/ZBSchools-Macro)

<p align=""right"">(<a href=""#top"">back to top</a>)</p>
",5,5,2,0,farm,"[background, bot, farm, grind, macro, python, selenium, zbschools]",00000
972,autodrop3dClient,Autodrop3d,Autodrop3d,https://github.com/Autodrop3d/autodrop3dClient,https://api.github.com/repos/Autodrop3d/autodrop3dClient,Client software for 3d printers interfacing with AutoDrop3D,"# autodrop3dClient
Client software for 3d printers interfacing with AutoDrop3D. This software will let you connect your printer to the https://autodrop3d.com cloud.


This is the client software for the autodrop3d printer system.
This software automatically retrieves gcode print jobs from the autodrop3d server and sends the gcode via serial to the printer connected to the raspberry pi.

There are additional features to make automatic part ejection possible by toggling the GPIO pins of the raspberry pi using wiringpi. It is also capable of using filament run out detectors with out any modifications to printer firmware.


![Image description](hookup.png)

#Instructions 
1) Hook up push buttons, LEDs and other items to GPIO header on the raspberry pi. 
    pin numbers are using the board pin header numbers for the raspberry pi
    

    A minimal setup dose not require all pins listed to be used. 

    | Required | Type   | Function        | pin # |
    |:--------:|--------|-----------------|-------|
    | NO       | Sensor | FilamentSensor1 | 22    |
    | NO       | Sensor | FilamentSensor2 | 37    |
    | YES      | Button | Config          | 32    |
    | NO       | Button | Cancel          | 12    |
    | YES      | Button | Next            | 33    |
    | NO       | Button | FilamentLoad1   | 36    |
    | NO       | Button | FilamentLoad2   | 11    |
    | NO       | Output | EjectorMotor    | 16    |
    | NO       | Output | LEDred          | 7     |
    | NO       | Output | LEDyellow       | 29    |
    | NO       | Output | LEDgreen        | 18    |
    | NO       | Serial | Serial TX       | 8     |
    | NO       | Serial | Serial RX       | 10    |
    |          |        |                 |       |
    

    
2) Download prebuilt raspberry pi image image from the following link
https://github.com/Autodrop3d/autodrop3dClient/releases/download/latest/autodrop3dimage-20201128.zip

3) Extract the ZIP file and use etcher (https://www.balena.io/etcher/) or similar softwar to write the image file to a 16gb sd card.

4) Boot the raspberry pi with the SD card.

5) Once booted press the config button. This will switch the raspberry pi in to wifi config mode and make the pi broadcast out a wifi access point.

6) Connect to the wifi network ""autodrop3dConfig"" with the password of ""autodrop3d"". Once connected goto http://192.168.4.1:8080

7) On the configuration page enter your wifi network credentials and save the configuration. Pres the config button connected to the pi to switch it back in to wifi station mode and connect to your local wifi. 

",5,5,5,10,farm,"[farm, print]",00000
973,flutter-avon-farm-foods,tnc1997,N/A,https://github.com/tnc1997/flutter-avon-farm-foods,https://api.github.com/repos/tnc1997/flutter-avon-farm-foods,"The Avon Farm Foods app has been designed as a very simple, yet effective way to browse our product range and place orders.","{'message': 'Not Found', 'documentation_url': 'https://docs.github.com/rest/repos/contents#get-repository-content'}",4,4,2,0,farm,"[avon, dart, farm, flutter, foods]",00000
974,cow,trngl8,trngl8,https://github.com/trngl8/cow,https://api.github.com/repos/trngl8/cow,Simple farm implementation,"# The Сow

```
 _     _
((_____))
[ o   o ]
 \     /
  (' ')
   (U)
```

""The Cow"" is a simple training demo-project for describing OOP Principles and paradigm.

## Demo mode
Simple demo locate here: [open demo](https://blockfarming.herokuapp.com/)

### Basics

Cow belongs to the class of animals.

Cow can eat grass (herb) and produce milk.

Only female cows can produce milk.

Other abilities will be described in the documentation ...

## How to set up
1. Clone this repository and install dependencies

```shell
$ git clone https://github.com/trngl8/cow.git
$ cd cow
```

2. Install dependencies

```shell
$ composer install
```

3. Run tests

```shell
$ make tests
```

4. Run cow in command-line interface

```shell
$ php start.php
```
",4,4,3,20,farm,"[blockchain, farm, game]",00000
975,jd-farm,ClassmateLin,N/A,https://github.com/ClassmateLin/jd-farm,https://api.github.com/repos/ClassmateLin/jd-farm,东东农场,"# jd_farm

## 简介

东东农场(京东首页->免费水果)

## docker

- 执行一次: `docker run -it --rm -e JD_COOKIE=""pt_pin=jdxx;pt_key=xxx;"" -e RUST_LOG=info classmatelin/jd-farm jd_farm`

- 内置定时任务:`30 6,12,18 * * *`. `docker run -itd -e JD_COOKIE=""pt_pin=jdxx;pt_key=xxx;"" -e RUST_LOG=info --name=jd-farm classmatelin/jd-farm`

- docker-compose, 见[lazy-docker](https://github.com/ClassmateLin/lazy-docker/blob/main/docker-compose.script.yml)
## 安装

[Release](https://github.com/ClassmateLin/jd-farm/releases)下载.

## 使用

多个cookie用&分隔, remark为可选, 用于备注账号。

- 方式一:

```bash
export JD_COOKIE=""pt_pin=xxx;pt_key=xxx;remark=账号1;&pt_pin=sfafa;pt_key=sfafaf;"";
export RUST_LOG=info;
```

```bash
./jd_farm
```

- 方式二:

创建.env文件, 在文件中写入:

```env
RUST_LOG=info;
JD_COOKIE=""pt_pin=xxx;pt_key=xxx;&pt_pin=sfafa;pt_key=sfafaf;remark=xx的账号;"";
```

```bash
./jd_farm
```

## 其他脚本

- [签到领京豆](https://github.com/ClassmateLin/jd-take-bean)

- [丘大叔签到](https://github.com/ClassmateLin/uncle-qiu-sign-in)

## 免责声明

本仓库发布的脚本，仅用于测试和学习研究，禁止用于商业用途，不能保证其合法性，准确性，完整性和有效性，请根据情况自行判断。

本项目内所有资源文件，禁止任何公众号、自媒体进行任何形式的转载、发布。

本人对任何脚本问题概不负责，包括但不限于由任何脚本错误导致的任何损失或损害。

间接使用脚本的任何用户在某些行为违反国家/地区法律或相关法规的情况下进行传播, 本人对于由此引起的任何隐私泄漏或其他后果概不负责。

请勿将本项目的任何内容用于商业或非法目的，否则后果自负。

如果任何单位或个人认为该项目的脚本可能涉嫌侵犯其权利，则应及时通知并提供身份证明，所有权证明，本人将在收到认证文件后删除相关内容。

以任何方式查看此项目的人或直接或间接使用本项目的使用者都应仔细阅读此声明, 本人保留随时更改或补充此免责声明的权利。

一旦使用/复制了本项目的任何内容，则视为您已接受此免责声明。

**您必须在下载后的24小时内从计算机或手机中完全删除以上内容。**

",4,4,3,0,farm,"[farm, jd, rust, script]",00000
976,treeform-angular-webapp,JunkieLabs,JunkieLabs,https://github.com/JunkieLabs/treeform-angular-webapp,https://api.github.com/repos/JunkieLabs/treeform-angular-webapp,Angular Realworld Project with beautiful animations. Implemented with Angular Material. ,"
<img  src=""https://firebasestorage.googleapis.com/v0/b/thedroid-835ee.appspot.com/o/developments%2Ftreeform_header.png?alt=media&token=88447c1f-3dd3-4670-852c-af959d0cca4a""/>

<div align=""center"">
<img  src=""https://firebasestorage.googleapis.com/v0/b/thedroid-835ee.appspot.com/o/developments%2Ftreeform_2.png?alt=media&token=8122e058-5f70-40a9-a5b2-f01df82193b9"" alt=""Get it on Google Play""
     height=""140""/>

</div>

<h1 align=""center"">Demo</h1>

<div align=""center"">
<a  href=""https://treeform.junkielabs.in/"">https://treeform.junkielabs.in/</a> 
</div>
<br>
<br>


<div align=""center"">
<img  src=""https://firebasestorage.googleapis.com/v0/b/thedroid-835ee.appspot.com/o/developments%2Ftreeform_banner.png?alt=media&token=a4951a8d-3653-4f59-88d0-2c230cbf1578"" alt=""Treeform demo""
     width=""100%""/>

</div>
<br>

---


## What is this repo? 
This repository is maintained by [JunkieLabs](https://www.instagram.com/junkie_labs/) team, is meant to be a beautiful web-app example using Angular 9.0+.

This project contains all of the latest technologies, from design to developemnt, and common features needed in static webapp like Progressing webapp [read here](#PWA), SEO [ search engine]. 


<br>

## Table of contents

- [About](#about)
- [Getting started](#getting-started)
- [Features](#features)
- [Components](#components)
- [Breaking changes](#breaking-changes)
- [FAQ](#faq)
- [Contributors](#contributors)

<br>


# Getting Started:

- **Node version > 10**
- **Angular > 9.0**

### **Initial Setup**


```bash

git clone https://github.com/JunkieLabs/treeform-angular-webapp.git 
cd treeform-angular-webapp
npm install
npm start

```


### **Graphics Magick setup**
 This part of setup is needed, if you want to convert images for gallery 
 - Install image magick from [here](https://imagemagick.org/) for your system's OS.
 - For more details [read here](#image-gallery)


### **For PWA**
- Clone the project you haven't done that.
- then checkout into branch: `treeform-pwa`

```bash

git checkout treeform-pwa
npm install
npm start

```


**Note**: If you get any errors during install and build, please put report the issue in the same repo.

<br>

# Features:

> These are some of the important features implemented in this starter!

- **PWA: Progressive Webapp**
  - For more details, [read here](https://web.dev/what-are-pwas/)
  - service-workers, [read here](https://angular.io/guide/service-worker-getting-started) 


- **Fully responsive design using flex properties**
  - Responsiveness without using any grid based library.  
  - Usage of next generation [Flex-Layout](https://github.com/angular/flex-layout) library provided by Angular Team.

- **SCSS based atomic styling**
  - Avoided css style based large files.  
  - Scss helps in improving overall quality and pattern of styling.
  - For more details, [ read here](#scss-styling) 

<br>

<br>

# Components:

> These are some of the important components in this app!

- **Image Gallery**
   - Very common gallery system needed in all apps.
- **Angular Animations**
  
<br>


## Image Gallery

The out of box and responsive image gallery made by modifing angular2-image-gallery.


To change the images in **[assets/img/gallery](https://github.com/JunkieLabs/treeform-angular-webapp/tree/master/src/assets/img/gallery)**.
Follow these steps.

- Install [Image Magick](https://imagemagick.org/index.php) in your system. 
- Add Images in any folder except gallery inside assets/img  folder.
- Craete command in pacakge.json file. For example

```json
    ""convert:newImages"": ""node ./image-convert.js --gName=newImages ./src/assets/img/newImages"",

```
- In above command newImages is a new folder. And [image-convert.js](https://github.com/JunkieLabs/treeform-angular-webapp/blob/master/image-convert.js) file is the script. After conversion one new folder will be there in assets/img/gallery.

<br>

## SCSS: Styling


> No CSS in any style related file ! The design is fully design using scss structure.



All the basic and common scss class has a prefix selector *tb-* to distinguish it from other angular material related classes. you can find the styles in [theme/tb](https://github.com/JunkieLabs/treeform-angular-webapp/tree/master/src/theme/tb)

<br>



<br>


# FAQ:

### Does this project require bootstrap?



>  No! There isn't a requirement of this library. The design is implemented only using angular material and SCSS styles.




<br>

# Contributors:


<table>
  <tr>
    <td align=""center""><a href=""https://github.com/bhrthkshr""><img src=""https://avatars1.githubusercontent.com/u/14331601?s=460&u=2dd953a5e2f864746a9545a2208d2c3e4f962955&v=4"" width=""100px;"" alt=""""/><br /><sub><b>Bharath Kishore</b></sub></a><br /></td>
    <td align=""center""><a href=""https://github.com/nirajprakash""><img src=""https://avatars3.githubusercontent.com/u/4013595?s=400&u=09af7b3ce0c4695ddbc37fd9df5007660611b2e7&v=4"" width=""100px;"" alt=""""/><br /><sub><b>Niraj Prakash</b></sub></a><br /></td>
    </table>


<br>
<br>

# Special Thanks:

A special thanks to other 3rd party libraries, which we have used in this project.

- Benjamin Brandmeier: [angular2-image-gallery](https://github.com/BenjaminBrandmeier/angular2-image-gallery)

- Nicholas Koehler(nkoehler): [mat-video](https://github.com/nkoehler/mat-video)

- ZEF Oy: [ngx-swiper-wrapper](https://github.com/zefoy/ngx-swiper-wrapper)

- Aaron Heckmann: [gm](https://github.com/aheckmann/gm)

<br>
<br>

# Further help

This project is an open-source initiative by Junkie Labs team.

For any questions or suggestions send a mail to junkielabs.dev@gmail.com or chat with the core-team on gitter.

[![Gitter](https://badges.gitter.im/JunkieLabs/treeform-angular.svg)](https://gitter.im/JunkieLabs/treeform-angular?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge)


<br>
<br>

# License

[MIT License](https://github.com/JunkieLabs/treeform-angular-webapp/blob/master/LICENSE).
",4,4,3,0,farm,"[angular, angular-material, farm, farming, graden, image-gallery, image-magick, material-design, organic, pwa, realworld, scss, shopping, typescript]",00000
977,yeild-farm,jacobabiola,N/A,https://github.com/jacobabiola/yeild-farm,https://api.github.com/repos/jacobabiola/yeild-farm,Yield farming contracts,"#   liqidity staking/Farming 



This project is copied from [sashimiswap](https://github.com/SashimiProject/sashimiswap) and modified to work with
non-mintable tokens.

# Quickstart

## Installation

```
npm install
```

## Run tests

```
npm test
```

## Configuration

Create a `.env` file with keys

```
MNEMONIC=""...""
INFURA_ID=""...""
ETHERSCAN_API_KEY=""...""
```

* Deployment to rinkeby is done via [Infura](https://infura.io/).
* Create an [Etherscan API key](https://etherscan.io/myapikey) for contract verification.

_Forks of this project should also modify `config.json`. Decimals aren't considered in the configuration._

## Deployment

### Ganache

[Ganache](https://www.trufflesuite.com/ganache) is a personal Ethereum blockchain for development and
tests.

```
truffle migrate -- --network development
```

### Rinkeby

To deploy on the [Rinkeby](https://rinkeby.io/) Ethereum testnet, make sure your wallet has enough ETH to pay for the
GAS.

[Faucet 1](https://testnet.help/en/ethfaucet/rinkeby) | [Faucet 2](https://faucet.rinkeby.io/)

```
truffle migrate -- --network rinkeby
truffle run verify -- --network rinkeby
```

You may also want to verify the ERC20Mock and LPMock contracts on Etherscan.

```
node_modules/.bin/truffle verify ERC20Mock
node_modules/.bin/truffle verify LPMock
```

_Verification may fail because of rate limits. Just try again._

### Ethereum mainnet

```
truffle migrate -- --network mainnet
truffle run verify -- --network mainnet
```

The account that is used to create the Farm contract should have a sufficient amount of (LTO) ERC20 to fund the
contract. Alternatively; to manually fund, remove the 'fund' property from the configuration.

# How it works

The `Farm` contract will distribute ERC20 tokens to participants relative to the number of LP tokens deposited to the
contract. These ERC20 tokens aren't minted. Instead, the contract needs to be funded.

## Creation

The address of the ERC20 token, the reward per block, and the starting block are specified in the constructor of the
`Farm` contract.

## Fund

The contract needs to be funded before the start block. 

To fund the contract, the `Farm` must be allowed to withdraw the amount of ERC20 using the `approve` method of the ERC20
contract.

Call the `fund` method with the appropriate amount The end block is calculated as

    endBlock = startBlock + (funds / rewardPerBlock)

It's possible to add funds with the farm is running and increase the end block.
 
If the end block is reached, the farm is closed and it will no longer be possible to add funds.   

## Adding liquidity pairs

Tokens are distributes amount users that has deposited specific LP tokens. These LP tokens are distributed by the
Uniswap contract for providing liqidity. _Other LP tokens could be used as well._

Each LP token has a specific contract address which can be found on the [Uniswap exchange](https://info.uniswap.org/).

Use the `add` method to add a liquidity pair for which the farm will pay out a reward.

It's possible to add liquidity pairs at a later time. The reward is shared over all pairs.

### AllocPoint

The `add` method takes an `allocPoint` parameter. When adding multiple pairs, this decides the portion of the reward
shared for that LP token.

**Example:** the farm is configured for 3 pairs with an `allocPoint` of resp 6, 12, 18. The
total alloc points is 36. 1/6th of the tokens is distributed under participants that deposited the pair with 6
alloc points: (`6 / 36 = 1/6`). 

It's possible to change the alloc points at a later time via the `update` method.

## Deposit and withdraw

To participate in farming, users must deposit LP tokens using the `deposit` method.

Before using this method, the farm must be allowed to withdraw the LP tokens. This is done via the `approve` method on
the LP token contract.

The current deposit can be check using the `deposited` method. 

Participants can withdraw their LP tokens at any time using the `withdraw` method.

## Reward

Each participant has a pending reward which is hold by the farm. The pending reward can be checked using the `pending`
method.

Any change to the deposit of the participant (with `deposit` or `withdraw`), will pay out the pending reward. It's
possible to do a zero withdraw to just receive the pending reward.

## Deployed on Binance Smart Chain testnet 

Farm: https://testnet.bscscan.com/address/0xa0e3aec3d84911a4e1e95b013453eb27d63bd4cc <br>
IPO MOCK TOKEN: https://testnet.bscscan.com/token/0x5f9e0f75a459453cba8a07519ce85ffc8e03ef47

## Deployed on Kovan test net
FARM: https://kovan.etherscan.io/address/0xdcc83498Bd687Dda3e51aA98B0d09795370e08E7 <br>
LP MOCK : https://kovan.etherscan.io/address/0x791c567484fE64209C1B819d179fe10797a0f753 <br>
LTO MOCK TOKEN : https://kovan.etherscan.io/token/0x5a3D821F02e39c1f74CD3A2AEF2d5F5A94c27321<br>

",4,4,2,0,farm,"[farm, yeild]",00000
978,TwitchDropsFarmer,MDoloresGui,N/A,https://github.com/MDoloresGui/TwitchDropsFarmer,https://api.github.com/repos/MDoloresGui/TwitchDropsFarmer,A bot with visual UI that farms Twitch drops for you,"Hi! This is an utility created in order to farm Twitch drops events.

You have to download the Google Chrome Webdriver, set into the application and enter username, password and Game Category Name. You are completly free to inspect my code and check that I'm not making a malicious use of your personal data.

It's a project made in a few hours, just for fun (and motivated in let the computer watching streams all night long).

Good farm!~

Lastest release:
https://github.com/MDoloresGui/TwitchDropsFarmer/releases/download/v1.1.0/TwitchDropsFarmer-1_1_0.jar

Note: make sure you have your Twitch's email open in other browser. This bot can't handle (yet, and possibly never) with Twitch's Double Authentification.
Note 2: check the category URL when you enter the game name. e.g.: the game name for [https://www.twitch.tv/directory/game/Black%20Desert%20Online] is Black Desert Online. I'm working on make a more user-friendly system.
",4,4,1,0,farm,"[bot, drops, farm, twitch]",00000
979,owoSistem,thegears,N/A,https://github.com/thegears/owoSistem,https://api.github.com/repos/thegears/owoSistem,OwO'da gelişmek için bir sistem.,"# owoSistem
OwO'da gelişmek için bir sistem.


1) Sisteminizde node.js yüklü olduğundan emin olun.
2) Klasöre gelip klasörde bir terminal ( cmd ) açın.
3) node index.js yazın.
4) İstenen bilgileri yazın. ( token = hesabınızın tokeni , kanal owo kasılacak kanal id )
5) Doğrulamaya düştüğünde sistem durur doğrulamayı yapıp terminalde enter'a basmanız gerekir.

## Star atmayı unutmayın :)

## [Buraya tıklayarak kodlar paylaştığım sunucuya gidebilirsiniz.](https://gearscode.xyz/discord)
",3,3,1,0,farm,"[discord, farm, owo, owofarm]",00000
980,Dairy-Business,kadimasum,N/A,https://github.com/kadimasum/Dairy-Business,https://api.github.com/repos/kadimasum/Dairy-Business,This repository will lead you to a dairy farm monitor where you will be able to enter the volume of milk you produce per shed and get projected results.,"# Dairy Farm Monitor
#### This is a website that allows you to remotely monitor income from your farm produce.

 2nd May, 2021

#### By Augustine Kadima Samuel
## Description
This application will prove useful to anyone who is looking to remotely monitor the proceeds of their dairy farm. The app provides information that is projected ahead of time. It also provides a good comparison of prices as they change. Once you fill in the form data about the produce you get per shed and submit, it will go ahead and do the calculations for you. The results are well articulated and onpoint. Once you are done, you can refresh the page by clicking on reset.
## Setup/Installation Requirements
* Open your browser on your computer
* Navigate to the search bar and paste the following link https://augustinekadima.github.io/Dairy-Business/
* Once on the site, start by filling in the form.
* click on the submit button.
* Read the output from the right side of the screen.
* Scroll down to see more content.
* Click on the reset button to reload the page

You do not need any third party plugin or server to use the website. You can use it as it is.
## Known Bugs
The website does not have a backend, so data will not be saved when you refresh the page.
## Technologies Used
I used HTML, CSS and JavaScript to create this page. I appended most information on the HTML page using JavaScript. This feature enabled me accomplish many tasks.
## Support and contact details
If you would like to reach me out for any enquiries or contribution, you can reach me through kadimasam@gmail.com
### License
MIT License

Copyright (c) [2021] [Augustine Kadima Samuel]

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the ""Software""), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.
",3,3,2,0,farm,"[brookside, cows, dairy, farm, farmer, farming, milk, remote, report]",00000
981,ai-dungeon-better-farmer,Alluseri,N/A,https://github.com/Alluseri/ai-dungeon-better-farmer,https://api.github.com/repos/Alluseri/ai-dungeon-better-farmer,"A new, better & safe advertisement farmer & bypass for AI Dungeon.","<img src=""https://komarev.com/ghpvc/?username=AIDBF&label=Actual telemetry&color=0099ff&style=flat"" alt=""AIDBF"" />

# Better ad farmer for AI Dungeon
A new, better & safer advertisement farmer & bypass for AI Dungeon.

Yes, I am [u/Forever1April](https://www.reddit.com/user/Forever1April) and I still advertise this. I think I did a good job anyway.

## Important
There are no ads in AI Dungeon anymore. It's a win, guys.

AIDBF v2.4x is the last version of AIDBF. Development stopped because it's already perfect and who cares anyway?

[AI Dungeon Farmer](https://github.com/Alluseri/ai-dungeon-farmer) still works, so if AIDBF breaks, use that instead. You remember how, right?

[We couldn't get it banned in 24 hours :(](https://www.reddit.com/r/AIDungeon/comments/ygjppv/can_we_get_this_acc_banned_in_under_24_hours/)

## Usage
Android users will need to use dorynode or termux.

For browser users:
1. Install TamperMonkey(GreaseMonkey NOT TESTED!).
2. Copy the contents of either provided `.js` file(`ai-dungeon-better-farmer.min.js` recommended) into clipboard.
3. Create a new TamperMonkey script and paste the copied contents into the script content(overwrite everything!).
4. Ctrl+S.
5. Enable it if required.
6. Open any adventure play of yours and, if you don't see the additional buttons on your hotbar, refresh the page.
7. Click `+10 ACTIONS` or `+10 ACTIONS [FAST]`(fast mode might get the counter out of sync).
8. Your updated actions will be visible at the top right.
9. To use the newly acquired actions, you'll have to refresh the page again.
10. Enjoy!

### Dorynode commands
1. `cd /storage/emulated/0/Android/data/io.tempage.dorynode/files`
2. `cd aidbf`
3. `npm test`/`node .`
",3,3,2,0,farm,"[ad-bypass, ai-dungeon, farm, farmer]",00000
982,NFTeGG-Contracts,NFTeGG,NFTeGG,https://github.com/NFTeGG/NFTeGG-Contracts,https://api.github.com/repos/NFTeGG/NFTeGG-Contracts,All Contracts and proxy for our NFTeGG.,"{'message': 'Not Found', 'documentation_url': 'https://docs.github.com/rest/repos/contents#get-repository-content'}",3,3,3,0,farm,"[defi, erc20, erc721, eth, ethereum, farm, farming, finance, metadata, nft, solidity, stake, token]",00000
983,WebSiteStatusChecker,Niraj-Dilshan,N/A,https://github.com/Niraj-Dilshan/WebSiteStatusChecker,https://api.github.com/repos/Niraj-Dilshan/WebSiteStatusChecker,This project is built by FARM Stack to check the website status and whether it's up or not. Website status will check by a python program every 5 minutes and update the databse.,"Web Site Status Checker Using FARM Stack<br>
(FastAPI, React, and MongoDB)
======================================

This project is built by FARM Stack to check the website status and whether it's up or not. Website status will check by a python program every 5 minutes and update the databse.

## open a terminal window

### First clone the repository
    git clone https://github.com/Niraj-Dilshan/WebSiteStatusChecker.git

### Then change your working directory to the project file
    cd WebSiteStatusChecker

### Then lets setup the backend first
    cd backend

### In Ubuntu 

### install python virtual environment
    sudo apt install python3-virtualenv

### Then create python virtual environment
    virtualenv virtualenv_name

### After that activate environment
    source virtualenv_name/bin/activate

### install dependencies
    pip install -r requirements.txt

### In Windows

### Install python virtual environment
    pip install virtualenv

### Then create python virtual environment
    virtualenv virtualenv_name

### After that activate environment
    virtualenv_name\Scripts\activate

### install dependencies
    pip install -r requirements.txt

### After that add .env file to the /backend, make sure you add your mongo db connection link
    MONGO_URI=""mongodb+srv://username:password@cluster0.gwqfihf.mongodb.net/?retryWrites=true&w=majority""

### startup the FAST-API backend
    uvicorn main:app --reload
  
---

## open another terminal window

### Then change your working directory to the project file
    cd WebSiteStatusChecker

### Then go to backend folder
    cd backend

### Run web site status checker script
    python3 webcheck.py

---

## open another terminal window

### Then lets setup the frontend 
    cd frontend

### if you dont have react installed
    npm i

### then startup the frontend
    npm start
",3,3,1,0,farm,"[farm, farm-stack, fastapi, python, reactjs]",00000
984,covenants-interface,EthereansOS,EthereansOS,https://github.com/EthereansOS/covenants-interface,https://api.github.com/repos/EthereansOS/covenants-interface,"🕹 🧙‍♂️ An open source interface for the Covenants protocol. WUSD, Farm, Inflate, Index, Arbitrage, Multi-swap and more","An interface for Covenants https://covenants.eth.link
",3,3,4,0,farm,"[covenants, defi, farm, wusd]",00000
985,PVSReplicate,ryancbutler,N/A,https://github.com/ryancbutler/PVSReplicate,https://api.github.com/repos/ryancbutler/PVSReplicate,Citrix PVS Farm Replication,"[![Build status](https://ci.appveyor.com/api/projects/status/gnucva535gqroatb/branch/master?retina=true)](https://ci.appveyor.com/project/ryancbutler/pvsreplicate/branch/master)
## Provisioning Services 7.x vDisk version Export and Import Script

Keep PVS vDisk versioning consistent across multiple PVS sites and additional PVS farms

**PVSReplicate.ps1**

**PLEASE USE WITH CAUTION. THIS WILL OVERWRITE SETTINGS ON IMPORT**

### Requirements

- PC\Server with Citrix PVS Console 7.7 or greater installed
- Admin access to PVS farm
- PowerShell v3 or greater
- PassThru is used for all PVS server authentication
- vDisk store path is the same across all servers (eg E:\vdisks)

### PS Gallery
If running PowerShell version 5 or above you can install via [Microsoft PowerShell Gallery](https://www.powershellgallery.com/)

#### Install
```
Install-Script -Name PVSReplicate -Scope currentuser
```
### Inspect
```
Save-Script -Name PVSReplicate -Path <path>
```
#### Update
```
Update-Script PVSReplicate
```

### Changelog

- 02-28-2017: Initial release
- 05-09-2017: Added ""Site"" option to only replicate specific site.
- 07-27-2017: Added 'JustAdmin' switch to only replicate to single server
- 07-27-2017: Added 'disk' argument to copy specific disk
- 08-28-17: Updated for PS gallery

### PVS Versions Tested

- 7.13

### What is performed?

- vDisk information is copied to all farm servers utilizing robocopy
- Imports missing vDisks
- vDisk versions are imported to all or specific sites
- vDisk override versions set to all or specific sites
- Remove any unneeded vDisk versions

### What this doesn't do?

- Delete non-used vDisks

### Usage

Copies and imports disks and versions to all PVS farm servers accessible via localhost and uses the vDisk store at ""E:\teststore"" for robocopy.

`.\PVSReplicate.ps1 -StorePath ""E:\teststore""`

Copies and imports disks and versions to all PVS farm servers accessible via localhost, PVSFARM01, PVSFARM02 and uses the vDisk store at ""E:\teststore"" for robocopy.

`.\PVSReplicate.ps1 -StorePath ""E:\teststore"" -PVSServers ""PVSFARM01"",""PVSFARM02""`

Copies and imports disk versions to all PVS farm servers accessible via localhost, PVSFARM01, PVSFARM02 and uses the vDisk store at ""E:\teststore"" and ""E:\teststore2"" for robocopy.

`.\PVSReplicate.ps1 -StorePath ""E:\teststore"",""E:\teststore2"" -PVSServers ""PVSFARM01"",""PVSFARM02""`

Copies and imports disks and versions to all PVS farm servers in 'General' site accessible via localhost, PVSFARM01, PVSFARM02 and uses the vDisk store at ""E:\teststore"" for robocopy.

`.\PVSReplicate.ps1 -StorePath ""E:\teststore"" -PVSServers ""PVSFARM01"",""PVSFARM02"" -Site ""General""`
   
Imports disks and versions on all PVS farm servers accessible via localhost for each server. Does not perform any robocopy

`.\PVSReplicate.ps1 -nocopy`

Copies and imports ""MYDISK"" ONLY to all servers in ""MYSITE""

`.\PVSReplicate.ps1 -StorePath ""E:\teststore"" -Site ""MySite"" -Disk ""MYDISK""`

Copies and imports disks and versions from MYSITE to PVSFARM01 server ONLY. (Images must be replicated from PVSFARM01)   

`.\PVSReplicate.ps1 -StorePath ""E:\teststore"" -Site ""MySite"" -PVSServers ""PVSFARM01"" -JUSTADMIN`
   
",3,3,2,0,farm,"[citrix, farm, provisioning, pvs]",00000
986,farm-lib,aaronvanston,N/A,https://github.com/aaronvanston/farm-lib,https://api.github.com/repos/aaronvanston/farm-lib,"The farm library behind farm-cli, clicker game","# 🐮 farm-lib

Simple JavaScript interface to help build a farm idle ""clicker"" game. The library behind farm-cli and farm-clicker.

## ✨ Features

- Built in TypeScript, exported to `es5`
- Accepts custom Products, Producers and Sellers
- Ability to save and load progress
- Runs on 1s tick rate (produces and sells goods automatically every 1 second)

## 📦 Install

For now this package is on the GitHub Packages, as such you will need to set the following in your `.npmrc` first:

```bash
#.npmrc
@aaronvanston:registry=https://npm.pkg.github.com
```

Then install:

```bash
$ yarn add @aaronvanston/farm-lib

# or

$ npm install @aaronvanston/farm-lib
```

## 🔨 Usage

Import the library:

```JavaScript
import FarmLib from '@aaronvanston/farm-lib'

const farm = new FarmLib()
```

### Arguments to Farm

The farm class takes in a single object with keys as arguments, all are **optional** with default values being used if nothing is passed.

See [customising the farm](#-customising-the-farm) to understand more about custom producers, products and sellers.

```JavaScript
const farm = new FarmLib({
  producers,
  products,
  sellers
  handleTick
})
```

| Argument     | Type                 | Default Value                                                                                        | Description                                                                                                                                                                 |
| ------------ | -------------------- | ---------------------------------------------------------------------------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |
| `producers`  | `array`, optional    | [Default producers](https://github.com/aaronvanston/farm-lib/blob/master/src/catalogue/producers.ts) | An array of available producers to purchase in game. You can pass in your own custom set as long as it conforms to the producers interface.                                 |
| `products`   | `array`, optional    | [Default products](https://github.com/aaronvanston/farm-lib/blob/master/src/catalogue/products.ts)   | An array of available products to purchase in game. You can pass in your own custom set as long as it conforms to the products interface.                                   |
| `sellers`    | `array`, optional    | [Default sellers](https://github.com/aaronvanston/farm-lib/blob/master/src/catalogue/sellers.ts)     | An array of available sellers to purchase in game. You can pass in your own custom set as long as it conforms to the sellers interface.                                     |
| `handleTick` | `function`, optional | no-op function                                                                                       | Callback function that receives the status of the farm each tick (1 second). See [`.total`](https://github.com/aaronvanston/farm-lib#total) method to see what is returned. |

## 🖥 API

The farm class includes the following methods:

### `.buy`

```JavaScript
farm.buy(item, quantity)
```

**Params:**

- `item` | `{string}` - Name of Producer or Seller you wish to purchase.
- `quantity` | `{number?}` - Quantity you wish to purchase. Optional field, defaults to 1.

**Example:**

```JavaScript
farm.buy('chicken', 10)
```

**Return:**

- `message` | `{object}` - A message object with the keys:
  - `message` | `{string}` - Returns a message based on success/ failure with context.
  - `isSuccessful` | `{bool}` - Was the operation successful

**Description:**

The `.buy` action allows you to purchase either a producer or seller of products. You must have the required amount of goods (money) to purchase them. If you supply a quantity, you must have the entire amount needed, no partial purchases.

---

### `.sell`

```JavaScript
farm.sell(product, quantity)
```

**Params:**

- `product` | `{string}` - Name of Product you wish to sell.
- `quantity` | `{number?}` - Quantity you wish to sell. Optional field, defaults to 1.

**Example:**

```JavaScript
farm.sell('egg', 5)
```

**Return:**

- `message` | `{object}` - A message object with the keys:
  - `message` | `{string}` - Returns a message based on success/ failure with context.
  - `isSuccessful` | `{bool}` - Was the operation successful

**Description:**

The `.sell` action allows you to sell a product to earn money. You can supply a quantity if you wish to sell in bulk.

---

### `.total`

```JavaScript
farm.total()
```

**Return:**

- `farmInfo` | `{object}` - Object of the farm information at the time of call. Includes the following keys:
  - `farmProducers` | `{object}` - Object of farm producers, with each producer as a key and their quantity as a number value.
  - `farmProducts` | `{object}` - Object of farm products, with each product as a key and their quantity as a number value.
  - `farmSellers` | `{object}` - Object of farm sellers, with each seller as a key and their quantity as a number value.
  - `farmBank` | `{number}` - Total value value (available to spend), the bank stores a single \$1 as `100`, divide the farmBank value by 100 for dollar value.

Example return:

```javascript
{
  farmProducers: {
    chicken: 10,
    cow: 2
  },
  farmProducts: {
    egg: 21,
    milk: 1
  }
  farmSellers: {
    for_sale_sign: 1
  },
  farmBank: 11000
}
```

**Description**

The total method returns the farms status. This includes the farm bank and all the sub shops such as producers, products and sellers. This total value can be used to update/sync your record of the farm totals upon action.

The output of `.total` is the same data returned in the `handleTick` callback function.

---

### `.save`

```JavaScript
farm.save()
```

**Return:**

- `saveToken` | `{string}` - a base64 encoded save token.

**Description**

The `.save` method returns a serialised string that represents your farm, its quantities and value. Used to load your farm contents in the future.

---

### `.load`

```JavaScript
farm.buy(saveToken)
```

**Params:**

- `saveToken` | `{string}` - Base64 encoded save token.

**Example:**

```JavaScript
farm.load('eyJmYXJtUHJvZHVjZXJzIjp7ImNoaWNrZW5fY29vcCI6MX0sImZhcm1Qcm9kdWN0cyI6e30sImZhcm1TZWxsZXJzIjp7ImZvcl9zYWxlX3NpZ24iOjF9LCJmYXJtQmFuayI6ODkwMDAsImRhdGUiOjE1ODE1MDY0MDE1NDF9')
```

**Return:**

- `message` | `{string}` - A message object with the keys:
  - `message` | `{string}` - Returns a message based on success/ failure with context.
  - `isSuccessful` | `{bool}` - Was the operation successful

**Description**

The `.load` action accepts a base64 encoded string with the contents of the farm. Upon successful load, it will return the date and timestamp of the loaded save token.

---

## Interfaces

You can customise the products, producers and sellers within the farm library. In order to do so, you will need to conform to the following types and interfaces:

### Producers

```JavaScript
[
  {
    name: 'bakery',
    cost: 1000,
    multiplier: 1.05,
    produces: {
      name: 'cookie`
      rate: 0.1
    }
  }
]
```

**Keys:**

- `name` | `{string}` - The name of the producer.
- `cost` | `{number}` - The cost of the producer without decimal places. $1 is stored as `100`, in this example the bakery would cost $10.
- `multiplier` | `{number}` - The compound cost multiplier of the producer, as you buy more of the producer the cost exponentially increases. Set to `1` for no increase.
- `produces` | `{object}` - Object of Produce:
  - `name` | `{string}` - The product name it produces, this must match exactly to an associated product's name.
  - `rate` | `{number}` - The amount it produces per tick. This number can be a decimal. 0.1 would mean it adds 0.1 cookies to the inventory per tick.

### Products

```JavaScript
[
  {
    name: 'cookie',
    value: 100
  }
]
```

**Keys:**

- `name` | `{string}` - The name of the product
- `value` | `{number}` - The value of the product without decimal places. $1 is stored as `100`, in this example the cookie's would be $1.

### Sellers

```JavaScript
[
  {
    name: 'stall',
    cost: 1000,
    multiplier: 1.05,
    products: {
      name: 'cookie`
      rate: 1
    }
  }
]
```

**Keys:**

- `name` | `{string}` - The name of the seller.
- `cost` | `{number}` - The cost of the seller without decimal places. $1 is stored as `100`, in this example the store would cost $10.
- `multiplier` | `{number}` - The compound cost multiplier of the seller, as you buy more of the seller the cost exponentially increases. Set to `1` for no increase.
- `products` | `{object}` - Object of produce:
  - `name` | `{string}` - The product name it sells, this must match exactly to an associated product's name.
  - `rate` | `{number}` - The amount it sells per tick. This number has to be a whole number (no decimals).

## 🎨 Customising the farm

The farm class can take in a custom set of Producers, Products and Sellers. These custom sets must conform to the shape/interface detailed:

- [Producers](#producers): Things that produce products
- [Products](#products): The products being produces
- [Sellers](#sellers): The things that sell the products

You can be quite creative in the theme you choose. It does not just have to be about farms, it can literally be anything!

An example of a customised ""farm"":

```JavaScript
import FarmLib from '@aaronvanston/farm-lib'

const customProducers = [{
  name: 'gold mind',
  cost: 10000,
  multiplier: 1.10,
  produces: {
    name: 'gold_ore',
    rate: 0.1,
  },
}]

const customProducts = [{
  name: 'gold_ore',
  value: 100,
}]

const customSellers = [{
  name: 'smelter',
  cost: 10000,
  multiplier: 1.02,
  products: {
    name: 'gold_ore',
    rate: 1,
  }
}]

const logger = (farmInfo) => console.log(farmInfo)

const farm = new FarmLib({
  producers: customProducers,
  products: customProducts,
  sellers: customSellers,
  handleTick: logger
})
```

### Extending default lists

In addition to creating your own you can extend the current default set to include you own. To access the default lists, you can import them from the `farm-lib` as named imports.

```JavaScript
import FarmLib, { producers, products, sellers } from '@aaronvanston/farm-lib'

// extend, change, remove etc
const customProducers = {
  ...producers,
  // NEW PRODUCER
}

const farm = new FarmLib({
  producers: customProducers,
})
```
",3,3,1,12,farm,"[clicker, farm, idle, idle-clicker-game, idle-game]",00000
987,workestrator,Yaty,N/A,https://github.com/Yaty/workestrator,https://api.github.com/repos/Yaty/workestrator,Workestrator is a Node.js library to distribute tasks to child processes.,"<a href=""https://coveralls.io/github/Yaty/workestrator?branch=master"" target=""_blank""><img src=""https://coveralls.io/repos/github/Yaty/workestrator/badge.svg?branch=master"" alt=""Coverage Status"" data-canonical-src=""https://coveralls.io/github/Yaty/workestrator?branch=master"" style=""max-width:100%;""/></a>
<a href=""https://travis-ci.org/Yaty/workestrator"" target=""_blank""><img src=""https://travis-ci.org/Yaty/workestrator.svg?branch=master"" alt=""Build Status"" data-canonical-src=""https://travis-ci.org/Yaty/workestrator"" style=""max-width:100%;""/></a>
<a href=""https://snyk.io/test/github/Yaty/workestrator"" target=""_blank""><img src=""https://snyk.io/test/github/Yaty/workestrator/badge.svg"" alt=""Known Vulnerabilities"" data-canonical-src=""https://snyk.io/test/github/Yaty/workestrator"" style=""max-width:100%;""/></a>
<img src=""https://img.shields.io/github/license/Yaty/workestrator.svg""/>

# Workestrator

[![Greenkeeper badge](https://badges.greenkeeper.io/Yaty/workestrator.svg)](https://greenkeeper.io/)

Workestrator is a library to distribute tasks to child processes. It is written in TypeScript and use ES2017 features.
This project is highly inspired by [`node-worker-farm`](https://github.com/rvagg/node-worker-farm) and add some new features.
Typescript Documentation : [https://yaty.github.io/workestrator/](https://yaty.github.io/workestrator/)

`npm install --save workestrator`

## Features

1. Concurrency options
2. Durability / Resilience : when a call fails it will be re-queued automatically (according to the farm options).
3. Async/Await support out of the box
4. Events
5. Serializers : You can choose among several serializers according to the data types you send to the workers. You can also write your own :)
6. Broadcasting

## Usage

```js
const workestrator = require(""workestrator"");

const farm = workestrator.create({
    module: ""/absolute/path/to/the/worker/module.js"",
});

try {
    await farm.run(1, 2, 3); // returns 6
    await farm.runMethod(""foo"", 1, 2, 3); // returns ""bar:1:2:3""
} catch (err) {
    console.log(""Oh ... it failed :("", err);
}
```

And the module is :

```js
module.exports = function(a, b, c) {
    return a + b + c;
};

module.exports.foo = function(a, b, c) {
    return `bar:${a}:${b}:${c}`;
};
```

## Examples

## Basic

[Running and broadcasting methods.](./examples/basic)

### Approximating π

```
Doing it the slow (single-process) way...
π ≈ 3.141597687999999   (0.000005034410206050666 away from actual!)
took 12217 milliseconds

Doing it the fast (multi-process) way...
π ≈ 3.1415487919999996  (0.000043861589793525724 away from actual!)
took 3425 milliseconds
```

[See the full example with code here !](./examples/pi)

## API

### Workestrator

#### workestrator.create(options)

Create a new farm.

```js
const workestrator = require(""workestrator"");

const farm = workestrator.create({
    module: ""/absolute/path/to/the/worker/module.js""
});
```

##### `options`

Options is an object, the default values are :

```
{
    fork: {
        args: process.argv,
        cwd: process.cwd(),
        env: process.env,
        execArgv: process.execArgv.filter((v) => !(/^--(debug|inspect)/).test(v)), // without debug and inspect
        execPath: process.execPath,
        silent: false,
    },
    killTimeout: 500,
    maxConcurrentCalls: Infinity,
    maxConcurrentCallsPerWorker: 10,
    maxIdleTime: Infinity,
    maxRetries: 3,
    numberOfWorkers: require(""os"").cpus().length,
    serializerPath: workestrator.serializers.JSON
    timeout: Infinity,
    ttl: Infinity,
}
```

- **`module`** (*mandatory !*) : Absolute path to your module.
- **`fork`** : Fork options used for each worker ([see Node.js documentation](https://nodejs.org/docs/latest-v8.x/api/child_process.html#child_process_child_process_fork_modulepath_args_options))
- **`killTimeout`** : The amount of time in ms for a worker to exit gracefully before killing it like butchers with SIGKILL.
- **`maxConcurrentCalls`** : The maximum number of calls in the farm queue, i.e. : calls being processed by workers + calls waiting in the queue.
- **`maxConcurrentCallsPerWorker`** : The maximum number of calls a worker can execute concurrently.
- **`maxIdleTime`** : The maximum amount of time a worker can live without receiving a call. It will kill the worker and restart another one according to your policy.
- **`maxRetries`** : How many times a call should be retried before failing once and for all, it will throw a CallMaxRetryError with the original error in the `reason` property if this is reached.
- **`numberOfWorkers`** : The amount of workers in the farm.
- **`serializerPath`** : Absolute path to the serializer, Workestrator provides two serializers (JSON for basic data types, CBOR for complex data types). [See `Serializers` section.](#serializers)
- **`timeout`** : A call will have to finish under `timeout` ms. It will throw a TimeoutError. It will be retried according to the farm options.
- **`ttl`** : The amount of calls a worker can execute. The worker will be killed, his tasks will be redistributed to other workers. A new worker will be created.

#### workestrator.kill()

Kill all farms.

```js
workestrator.kill();
```

### Farm

#### farm.run(...args)

Run the default exported method in your module with arguments. Async.
Returns what's returned by the default method.

```js
try {
    const res = await farm.run(1, [], """");
    console.log(""Result :"", res);
} catch (err) {
    console.log(""Oh no :'("", err);
}
```

#### farm.runMethod(method, ...args)

Run a specific method in your module. Async.
Returns what's returned by the method.

```js
try {
    // bar is a method exported with : module.exports.bar = function ...
    const res = await farm.runMethod(""bar"", 1, [], """");
    console.log(""Result :"", res);
} catch (err) {
    console.log(""Oh no :'("", err);
}
```

#### farm.broadcast(...args)

Run the default exported method in every worker with arguments. Async.
Returns an array with the first element being the succeeded calls and the second element the failures.

```js
const [successes, failures] = await farm.broadcast(1, [], """");
console.log(""Successes :"", successes);
console.log(""Failures :"", failures);
```

#### farm.broadcastMethod(method, ...args)

Run a specific method in every worker. Async.
Returns an array with the first element being the succeeded calls and the second element the failures.

```js
// bar is a function exported with : module.exports.bar = function ...
const [successes, failures] = await farm.broadcastMethod(""foo"", 1, [], """");
console.log(""Successes :"", successes);
console.log(""Failures :"", failures);
```

#### farm.kill()

Kill the farm.

```js
farm.kill();
```

## Serializers

According to the data you send and receive to your workers you might need to use a different serializer.
Data needs to be serialized in order to be sent to the worker process.

Two serializers are available :
1. JSON (default, Node.js internal serializer), supported types :
    - boolean
    - number (without -0, NaN, and ±Infinity)
    - string
    - Array
    - Object
2. [CBOR](https://github.com/hildjj/node-cbor), supported types :
    - boolean
    - number (including -0, NaN, and ±Infinity)
    - string
    - Array, Set (encoded as Array)
    - Object (including null), Map
    - undefined
    - Buffer
    - Date,
    - RegExp
    - url.URL (Legacy URL API)
    - [bignumber](https://github.com/MikeMcl/bignumber.js)

For performances you might want to check [the benchmark](./benchmarks/serialization).

You can also build your own serializer. You need to extends the Serializer class :

```js
 const {Serializer} = require(""workestrator"");

class MySerializer extends Serializer {
    encode(data) {
        // do some encoding
        return encodedData;
    }

    decode(data) {
        // do some decoding
        return decodedData;
    }
}

module.exports = MySerializer;
```

Then set the farm options accordingly :

```js
const farm = workestrator.create({
    module: ""/absolute/path/to/the/worker/module.js"",
    serializerPath: ""/absolute/path/to/MySerializer"", // you can use require.resolve to get the absolute path
});
```

JSON serializer path is in `workestrator.serializers.JSON`.

CBOR serializer path is in `workestrator.serializers.CBOR`.

## Events

You can listen to events from a worker of from the farm directly. They both extends Node.js EventEmitter.
All those events are already being used by Workestrator. You do not have to implement anything, it works out of the box.
I wanted to expose events to have the possibility to add logging but I'm sure they are other use-cases :)

### Farm

```js
farm.on(event, callback)
```

#### online

When a new worker is created within the farm.

```js
farm.on(""online"", (worker) => {
    // ...
});
```

#### message

When a worker is sending a message to the farm.

`data` looks like this :

```
{
    callId: number;
    res?: any;
    err?: Error;
    workerId: number;
}
```

```js
farm.on(""message"", (worker, data) => {
    // ...
});
```

#### disconnect

When a worker disconnect.
See [Node.js documentation](https://nodejs.org/docs/latest-v8.x/api/child_process.html#child_process_event_disconnect)

```js
farm.on(""disconnect"", (worker) => {
    // ...
});
```

#### error

The `error` event is emitted whenever:
- The process could not be spawned, or
- The process could not be killed, or
- Sending a message to the child process failed.

See [Node.js documentation](https://nodejs.org/docs/latest-v8.x/api/child_process.html#child_process_event_error)

```js
farm.on(""error"", (worker, err) => {
    // ...
});
```

#### close

When a stdio streams of a worker have been closed.
See [Node.js documentation](https://nodejs.org/docs/latest-v8.x/api/child_process.html#child_process_event_close)

```js
farm.on(""close"", (worker, code, signal) => {
    // ...
});
```

#### exit

See [Node.js documentation](https://nodejs.org/docs/latest-v8.x/api/child_process.html#child_process_event_exit)

```js
farm.on(""exit"", (worker, code, signal) => {
    // ...
});
```

#### ttl

When `ttl` is reached.

```js
farm.on(""ttl"", (worker) => {
    // ...
});
```

#### idle

When `maxIdleTime` is reached.

```js
farm.on(""idle"", (worker) => {
    // ...
});
```

## Logging

You can enable logging by using an environment variable : `DEBUG=workestrator:*`

## Why I created this ?

I was looking for a project to use TypeScript, so the idea was to reproduce `node-worker-farm` and add some new features. It actually went pretty smoothly and I'm happy with the result ;)

## License

Workestrator is Copyright (c) 2018 Hugo Da Roit ([@Yaty](https://github.com/Yaty)) and licensed under the MIT license. All rights not explicitly granted in the MIT license are reserved. See the included LICENSE file for more details.
",3,3,1,19,farm,"[cluster, farm, node, nodejs, pool, typescript, workers]",00000
988,ExPeasant,vheathen,N/A,https://github.com/vheathen/ExPeasant,https://api.github.com/repos/vheathen/ExPeasant,AirAtomized.Farm Elixir+Nerves-based controller for air atomized aeroponic systems,"# ExPeasant
Raspberry Pi + Nerves based AirAtomized.Farm controller prototype

Currently I use it in a air atomized aeroponic system prototype to control misting schedule. More to come (I hope so).
It works but is very far from any release-kind state.

The following description is very rough, sketchy and probably will be outdated soon enough.

## Modules

- Firmware: Nerves-specific part to allow the main component run on the Raspberry Pi device (RPi3 in my case)
- Peasant: the main part with the core component and the Phoenix LiveView-based UI

## Conceptions
It was intended to be a temporary solution until I made the bigger complex out of the cloud management system and a number of thin IoT controllers just to test an air-atomized aeroponics hardware with real plants. But it might be useful in its current (single fat IoT controller) form.

As I have never worked with such devices before I'm just trying to find better and convenient ways to make it functional therefore some design and implementation decisions can be controversial. If you have any suggestion on how to make things work better please share.

In general there are two main conceptions currently:

### Tool
A tool is a specific [probably hardware] device which a ""peasant"" use to have a specific ""farm"" work done. Each tool has a number of tool-specific actions and fire tools-specific events.

To describe a tool I've decided to use power of Elixir Protocols. Each tool is a struct (actually it is an Ecto model under the hood) made out of [Peasant.Tool.State](peasant/lib/peasant/tool/state.ex) base module, each action is a named after the specific action protocol, each tool must have supported actions protocols implementations. The only exception at the moment is the Attach action which has `for: Any` implementation.

An example of a tool is the [Peasant.Tools.SimpleRelay](peasant/lib/peasant/tools/simple_relay.ex) with [TurnOn](peasant/lib/peasant/tools/simple_relay/action/turn_on.ex) and [TurnOff](peasant/lib/peasant/tools/simple_relay/action/turn_off.ex) actions. It handles a simple relay module (via GPIO pull up\pull down).

All available tools and their actions are recognizing via specific namespaces analysis and protocol enumeration, so Protocol consolidation must be on. The required namespaces should be set in [config.exs](peasant/config/config.exs) (search for `config :peasant, Actions` option).

TODO: Implement a ""chain of tools"" when it is possible to introduce tools which are using other tools resources in a way the parent tools can control own resources availability: for example, a simple relay require a GPIO pin, and currently there is no way to control if a new Simple Relay wants to work with the same GPIO pin as one of the already added replays. If we add a GPIO tool first then we can link it with a simple relay instance after the first `attach` so it will deny the second `attach` with an another relay.

### Automation

Automation is a list of tools actions, like a cyclic schedule. 

For example, one of my current automations:

![Automation Screenshot 1](images/automation-001.png?raw=true)

![Automation Screenshot 2](images/automation-002.png?raw=true)


More main part implementation details is in the `peasant` (README)[peasant/README.md], but it can (and most possibly is) outdated.

## Supported tools (devices)

- [X] Simple GPIO-pin controlled relay 
- [ ] ds18b20 1wire temperature sensor

## UI
UI is based on the Phoenix LiveView. 

Currently it allows to 

list Tools:

![Tools list](images/tools-001.png?raw=true)

list current, add new automations:

![Automations list](images/automation-003.png?raw=true)

start, stop a specific automation, add, delete, pause or alter automation steps.

UI doesn't have any tests as of yet.

## OTA Updates

The project uses [Nerves Hub](https://www.nerves-hub.org/) for automatic OTA firmware updates.

## Other
Please don't forget to change required `firmware` configs. You should at lease create `firmware/config/target.secret.exs` file with salts:

```elixir
import Config

config :peasant, PeasantWeb.Endpoint,
  secret_key_base: ""YOUR SECRET KEY BASE: use `mix phx.gen.secret`"",
  live_view: [signing_salt: ""YOUR SIGNING KEY: use `mix phx.gen.secret 32`""]
```

Also the project uses VintageNet WiFi Wizard to configure wifi: it creates a WiFi network with SSID `peasant_wifi` if no networks were configured before, you can connect into it and enter your main SSID\password settings.

You can use try to use `http://peasant.local` URL to connect to the UI or connect with ssh to the Nerves command prompt.

The following text is almost unaltered original Nerves poncho example README. 

## Hardware

This example serves a Phoenix-based web page over the network. The steps below
assume you are using a Raspberry Pi Zero, which allows you to connect a single
USB cable to the port marked ""USB"" to get both network and serial console
access to the device. By default, this example will use the virtual Ethernet
interface provided by the USB cable, assign an IP address automatically, and
make it discoverable using mDNS (Bonjour). For more information about how to
configure the network settings for your environment, including WiFi settings,
see the [`vintage_net` documentation](https://hexdocs.pm/vintage_net/).

## How to Use this Repository

1. Connect your target hardware to your host computer or network as described
   above
2. Prepare your Phoenix project to build JavaScript and CSS assets:

    ```bash
    # These steps only need to be done once.
    cd peasant
    mix deps.get
    cd assets
    npm install
    ```

3. Build your assets and prepare them for deployment to the firmware:

    ```bash
    # Still in ui/assets directory from the prior step.
    # These steps need to be repeated when you change JS or CSS files.
    node node_modules/webpack/bin/webpack.js --mode production
    cd ../
    mix phx.digest
    ```

4. Change to the `firmware` app directory

    ```bash
    cd ../firmware
    ```

5. Specify your target and other environment variables as needed:

    ```bash
    export MIX_TARGET=rpi3
    # If you're using WiFi (not necessary as WiFi should be configured via wizard):
    # export NERVES_NETWORK_SSID=your_wifi_name
    # export NERVES_NETWORK_PSK=your_wifi_password
    ```

6. Get dependencies, build firmware, and burn it to an SD card:

    ```bash
    mix deps.get
    mix firmware
    mix firmware.burn
    ```

7. Insert the SD card into your target board and connect the USB cable or otherwise power it on
8. Wait for it to finish booting (5-10 seconds)
9. Open a browser window on your host computer to `http://peasant.local/`
10. You should see a ""Tech'n'Plants Peasant"" main page

[Phoenix Framework]: http://www.phoenixframework.org/
[Poncho Projects]: http://embedded-elixir.com/post/2017-05-19-poncho-projects/

## Learn More

* Official docs: https://hexdocs.pm/nerves/getting-started.html
* Official website: https://nerves-project.org/
* Discussion Slack elixir-lang #nerves ([Invite](https://elixir-slackin.herokuapp.com/))
* Source: https://github.com/nerves-project/nerves
",3,3,1,4,farm,"[aaa, aeroponics, elixir, elixir-lang, farm, growth, nerves, phoenix]",00000
989,mffbashbot,HackerHarry,N/A,https://github.com/HackerHarry/mffbashbot,https://api.github.com/repos/HackerHarry/mffbashbot,My Free Farm Bash Bot,"My Free Farm Bash Bot
=====================

English text further [down](#english)

Ein Bot für das Browser-Spiel ""My Free Farm"".

Es sei an dieser Stelle deutlichst darauf hingewiesen, dass der Gebrauch<br>
von Bots gegen die AGB des Betreibers verstösst und u.a. eine Löschung<br>
des Spielerkontos zur Folge haben kann!<br>
Der Einsatz dieser Skripte geschieht auf **eigenes Risiko**.

Auch möchte ich euch ermutigen, die Farmspiel-Entwickler durch den Kauf von<br>
Coins zu unterstützen.

Diesen Bot hätte es sicher nicht ohne die hervorragende Arbeit von<br>
[@Bastian Kanaan](https://github.com/BastianKanaan) gegeben. Sein 'Berater' und 'Automat' leisten vielen Spielern<br>
treue Dienste. Inspiriert von Bastians Automaten, fing ich an diesen Bot zu entwickeln.

Alle nötigen Informationen stehen im [mffbashbot Wiki](https://github.com/HackerHarry/mffbashbot/wiki).

Fragen und Kommentare richtet ihr bitte ans [Forum](http://myfreefarm-berater.forumprofi.de/f15-Bash-Bot.html).

---
###### English

A bot for the browser game ""My Free Farm"".

Be advised, that the usage of bots is against the game provider's terms and<br>
conditions. Your game account may be suspended.<br>
Use the bot scripts at your **own risk**.

I want to encourage you, to support the game designers by purchasing coins.

This bot would not have seen the light of day without the superb work of<br>
[@Bastian Kanaan](https://github.com/BastianKanaan). His 'Adviser' and 'Automaton' have been working for many gamers<br>
reliably. Inspired by Bastian's Automaton, i started developing this bot.

All the info you might need, can be found in the [mffbashbot wiki](https://github.com/HackerHarry/mffbashbot/wiki).

Questions and comments can be posted to the [forum](http://myfreefarm-berater.forumprofi.de/f15-Bash-Bot.html).

[![Hits](https://hits.seeyoufarm.com/api/count/incr/badge.svg?url=https%3A%2F%2Fgithub.com%2FHackerHarry%2Fmffbashbot&count_bg=%2362AE28&title_bg=%23555555&icon=probot.svg&icon_color=%23E7E7E7&title=Hits+today+%2F+total&edge_flat=false)](https://hits.seeyoufarm.com)
",3,3,3,0,farm,"[bot, farm, free, freefarm, myfreefarm]",00000
990,orca-api,Bisonai,Bisonai,https://github.com/Bisonai/orca-api,https://api.github.com/repos/Bisonai/orca-api,REST API server that defines a user-friendly interface for Orca SDK,"# Orca API

Orca API is a REST API server that defines a user-friendly interface for [Orca SDK](https://github.com/orca-so/typescript-sdk).
The Orca SDK contains a set of simple-to-use APIs to allow developers to integrate with Orca's decentralized exchange platform.

## Installation

```bash
npm install
```

## Running the app

```bash
# development
npm run start

# watch mode
npm run start:dev

# production mode
npm run start:prod
```

When running locally, Orca API is accessible at http://0.0.0.0:3000.

## Test

```bash
# unit tests
npm run test

# e2e tests
npm run test:e2e

# test coverage
npm run test:cov
```

## Endpoints

All endpoints with detailed parameters and responses can be found at http://0.0.0.0:3000/docs/.

### Pools

#### `/pool`

List all Orca pools.

#### `/pool/balance`

Gauge funds allocated in designated pool.

#### `/pool/deposit`

Deposit funds to designated pool.

#### `/pool/withdraw`

Withdraw funds from designated pool.

### Farms

#### `/farm`

List all Orca farms.

#### `/farm/balance`

Gauge funds allocated in designated farm.

#### `/farm/deposit`

Deposit funds to designated farm.

#### `/farm/withdraw`

Withdraw funds from designated farm.

### Swap

#### `/swap`

Swap tokens.

### Others

#### `/portfolio`

List account's portfolio.

#### `/token`

List all tokens traded at Orca.

## License

Apache License 2.0
",3,3,2,0,farm,"[blockchain, cryptocurrency, decentralized-exchange, decentralized-finance, defi, dex, farm, orca, pool, rest-api, solana, stake, swap]",00000
991,FarmIt-Backend-Client,Adamantios,N/A,N/A,https://api.github.com/repos/Adamantios/FarmIt-Backend-Client,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1F3:5F41:6D6C11:E23617:65224065.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,farm,"[N, /, A]",00000
992,farmosnws,almostengr,N/A,N/A,https://api.github.com/repos/almostengr/farmosnws,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1EC:6459:2645664:4EA5DA1:65224055.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,farm,"[N, /, A]",00000
993,WIMD-Core,EthereansOS,EthereansOS,https://github.com/EthereansOS/WIMD-Core,https://api.github.com/repos/EthereansOS/WIMD-Core,🐉 The first card game based on ITEMS Standard. Where Is My Dragon is a card-crafting game. Your objective is to acquire one of the 8 Unicorn Dragon cards. These entitle you to a portion of the treasury.,"# Where-Is-My-Dragon

The first card game based on <a href=""https://medium.com/dfohub/unimergency-done-ethitem-arriving-but-where-is-my-dragon-dfohub-weekly-oct-17-e51c82370cac"">ITEMS</a>

#### Links:

<b>Rules and Info<b>: https://ethos.eth.link/wimd.html

WIMD Website: https://whereismydragon.eth.link

WIMD Cards farming: https://whereismydragon.eth.link/?toggle=farming

WIMD OpenSea Collection: https://opensea.io/assets/where-is-my-dragon

WIMD Cards Smart Contract: https://etherscan.io/address/0xb6ab68a44ecc9fb2244aab83eb2f6dba54205ebf

WIMD Crafting Game Smart Contract: https://etherscan.io/address/0x87ad9009c4fd0aaa7bfe74f7e00845b3f09ad0ce

WIMD Dragon Trasury Smart Contract: https://etherscan.io/address/0x32c87193c2cc9961f2283fca3ca11a483d8e426b

# Good Luck Hunting!
",2,2,4,0,farm,"[card-game, defi, farm, items, nft, whereismydragon]",00000
994,NFTeGG-iClops-Meta,NFTeGG,NFTeGG,https://github.com/NFTeGG/NFTeGG-iClops-Meta,https://api.github.com/repos/NFTeGG/NFTeGG-iClops-Meta,This is a backup for the NFTeGG Series #1 Meta Data.,"# iClops-Meta
This is a backup for the NFTeGG Series #1 Meta Data.

The structure is : #ID, Name, $Fame, Power
",2,2,4,0,farm,"[defi, erc20, erc721, eth, ethereum, farm, farming, finance, metadata, nft, solidity, stake, token]",00000
995,SmartFarm,diogodanielsoaresferreira,N/A,https://github.com/diogodanielsoaresferreira/SmartFarm,https://api.github.com/repos/diogodanielsoaresferreira/SmartFarm,Smart farm monitoring,"# SmartFarm

Project presented in the Software Engineering course (Universidade de Aveiro), 2018.

The main goal was to develop a system capable of helping the farmers to monitor its farm, using different types of sensors.
The system collects the data from the sensors in farms and shows them in real-time, also allowing to define alerts based on the data coming from the sensors.

The platform was made using SpringBoot (Java) and followed DevOps techniques.
Several technologies were used to follow a micro-services arquitecture, like Docker, Kafka, Kafka streams, ReactJS, MongoDB, PostgreSQL, Jenkins, Cucumber, TICK Stack, ELK Stack, among others.

Daniela Simões  
Diogo Daniel Ferreira  
Diogo Filipe Ferreira  
Luís Leira  
Pedro Martins
",2,2,1,0,farm,"[cucumber, docker, elk-stack, farm, java, jenkins-pipeline, kafka, kafka-streams, mongodb, reactjs, spring-boot, tick-stack, universidade-de-aveiro]",00000
996,Tekno-Baserri,Andowna9,N/A,https://github.com/Andowna9/Tekno-Baserri,https://api.github.com/repos/Andowna9/Tekno-Baserri,"Farm management system, including its parking.","# Tekno-Baserri

Tiempo meterológico obtenido de: https://www.tutiempo.net/ (créditos necesarios para su uso)
",2,2,1,0,farm,"[c, console, cpp, farm, libcurl, parking, qt, xml]",00000
997,PV-MAPS,CEEDAnalytics,N/A,https://github.com/CEEDAnalytics/PV-MAPS,https://api.github.com/repos/CEEDAnalytics/PV-MAPS,A physics-based solar farm simulator. ,"## Welcome to PVMAPS Beta 


[![DOI](https://zenodo.org/badge/594789400.svg)](https://zenodo.org/badge/latestdoi/594789400)


PVMAPS lets you simulate the energy yield potential of solar farms anywhere in the world. 

Current version supports the following solar farm configurations: (i) systems with fixed-tilted c-Si monofacial and  (ii) systems with vertical bifacial modules with ground-sculpting.

The simulator requires MATLAB (version > 2016a) to be installed on your computer. 

For an example of how to use the simulator, open the 'run_singleLocation.mlx' in this folder  with MATLAB.

For theory underlying the code is discussed in **“Principles of Solar Cells: Connecting Perspectives on Device, System, Reliability, and Data Science” by Professor Alam and Khan  (https://doi.org/10.1142/12139).** 

Also see: 
 - Khan, M. R., Hanna, A., Sun, X., & Alam, M. A. (2017). Vertical bifacial solar farms: Physics, design, and global optimization. Applied energy, 206, 240-248. Patel, M. T.
 -  Khan, M. R., Sun, X., & Alam, M. A. (2019). A worldwide cost-based design and optimization of tilted bifacial solar farms. Applied Energy, 247, 467-479. 

If you have any questions, please email to jabir@purdue.edu. If you you would like to report an issue, please also attach a screenshot of the MATLAB's Command Window when the issue occured. 
",2,2,2,0,farm,"[bifacial, farm, monofacial, photovoltaics, solar]",00000
998,FarmIt-Frontend-Client,Adamantios,N/A,N/A,https://api.github.com/repos/Adamantios/FarmIt-Frontend-Client,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C193:646E:26D5A18:4FAFC38:65224054.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,farm,"[N, /, A]",00000
999,grupomateu,Alexbeis,N/A,https://github.com/Alexbeis/grupomateu,https://api.github.com/repos/Alexbeis/grupomateu,Grupo Mateu,"# grupomateu
Grupo Mateu
",2,2,1,0,farm,"[developing, farm]",00000
1000,Grovit,vishalkrishnads,N/A,https://github.com/vishalkrishnads/Grovit,https://api.github.com/repos/vishalkrishnads/Grovit,A simple house gardening assistant,"# Grovit
### [Get the app](https://drive.google.com/file/d/1Ok9KaMp1aSh3Tp1zmp3DB-eL4I84cjbG/view?usp=sharing)
This project combines the possibilities of IoT microcontrollers, mobile apps and cloud computing services to make house farming and gardening a breeze for busy professionals. This README will guide you through to give you an understanding about the structure of the project, covering the basics of the circuit and then explaining how to use this app to control the device and grow your plants. If you want to build the app from source, then please refer to the contributing guide.

<a><img src=""https://github.com/vishalkrishnads/Grovit/blob/master/.github/Screenshots/adding.png?raw=true"" height=""420"" width=""200"" ></a>
<a><img src=""https://github.com/vishalkrishnads/Grovit/blob/master/.github/Screenshots/home.png?raw=true"" height=""420"" width=""200"" ></a>
<a><img src=""https://github.com/vishalkrishnads/Grovit/blob/master/.github/Screenshots/details.png?raw=true"" height=""420"" width=""200"" ></a>
<a><img src=""https://github.com/vishalkrishnads/Grovit/blob/master/.github/Screenshots/watering.png?raw=true"" height=""420"" width=""200"" ></a>

## What's this?
This project consists of a device equipped with moisture and light sensors with the facility to grow greenhouse and indoor plants inside of it as well as a mobile app and a cloud server. While growing a plant, the users can leave the headache of watering and lighting them regularly entirely to the device. With the powerful software running inside the app, users will be able to monitor and control the water and lighting that their plant recieves, as well as view monthly overall performance graphs of the plants, get tips, set to do lists for each device and much more.

## Prerequisites
* A smartphone running Android 8.0+
* A good internet connection
* Dummy credentials for a [ThingSpeak](https://thingspeak.com) channel. If you don't wanna create an account for yourself, use our credentials:
  * ID: 1315722
  * Password: FWSEJN2A2UOMPZ6H
* Optionally, set up the cicuit as explained in the cicuits section 

## Setting up the app
1. Install the app on your android device by following [this link](https://drive.google.com/file/d/1Ok9KaMp1aSh3Tp1zmp3DB-eL4I84cjbG/view?usp=sharing) from the device to start the installation automatically.
2. Open it and grant all necessary permissions
3. Add a device using the dummy credentials or by creating a ThingSpeak channel with 4 fields and then using it's credentials. While creating a channel, please follow the same pattern as that of our [demo channel](https://thingspeak.com/channels/1315722).
4. Select the device that you added
5. Now, you can interact with your device through Grovi, a virtual assistant or by directly switching values from the app.
If you want way more granular control over the app or want to build it from source, check out the [directory structure & contribution guide](https://github.com/vishalkrishnads/Grovit/blob/master/.github/Code%20Structure.md).

## Setting up your microcontrollers (optional)
1. Complete the connections as per the [circuit guide](https://github.com/vishalkrishnads/Grovit/blob/master/.github/Circuitry.md) and upload the `microcontroller.ino` found in the `microcontroller/` directory in this repo.
2. Power up the cicuit

## Testing
Now, you should be able to switch the Lights and water tap ON & OFF from the app itself. If you have set up the microcontrollers, once they've connected to Wi-Fi, you should be able to see the lights and water pump responding to your commands from the app.

## Grovi
Grovi is our virtual assistant built into the app itself. It can do many things such as controlling the light and water pump, tell you the weather and do much more. You can activate Grovi for each farm from within the details of that farm by clicking on the green mic button. You can ask her things like:
* Turn on the lights
* Take care of everything
* What's the climate?

## Features
The app has many features to assist gardeners which includes, but is not limited to:
1. To Do Lists
2. Ability to add tips from expert farmers for the not-so experienced ones to follow
3. Monthly Analytics & graphs for water usage and lighting history
4. Ability to implement account based data saving and cloud storage within the app
",2,2,1,0,farm,"[farm, lights, microcontrollers, plant]",00000
1001,PP_Looter,Naozumi520,N/A,https://github.com/Naozumi520/PP_Looter,https://api.github.com/repos/Naozumi520/PP_Looter,A cli tool that help you search for the best scores from players similar to you.,"<h1 align=""center"">
  <a href=""https://github.com/Naozumi520/Sawayo""><img src=""https://cdn.discordapp.com/attachments/859094490395574302/875771736744947762/PPL.png"" PPL_c_icon"" width=""200""></a>
  <br>
  osu! PP Looter
  <br>
  <br>
</h1>

[![JavaScript Style Guide](https://cdn.rawgit.com/standard/standard/master/badge.svg)](https://github.com/standard/standard)<br/>

## Introduction
This is osu! PP Looter. A crazy idea has just been born. This tools search player that similar to you via google, then list their best performace via the osu! api.

![Preview](https://cdn.discordapp.com/attachments/859094490395574302/875778476538478642/unknown.png)

## Release
Latest verisons:
[Windows (x64)](https://github.com/Naozumi520/PP_Looter/releases/download/1.0.0/PPL_1.0.0_win.zip)

Before you start to using the tool, an osu! [`api key`](https://osu.ppy.sh/p/api) is required to get the user info. `config.json` is the place to save the api key and the settings. [**Sample config.json**](https://github.com/Naozumi520/PP_Looter#sample-configjson)

## Self-execution
If you're getting problem when running the .exe, you can try to do **self-execution**.  
This tool was built with nodeJS. To run the tool, you will need to get [`node.js`](https://nodejs.org/en/) installed.

This tool uses npm module. Use the following command if you don't have them locally installed.
```bash
$ cd PP_looter/
$ npm install
```

Before you start to using the tool, an osu! [`api key`](https://osu.ppy.sh/p/api) is required to get the user info. `config.json` is the place to save the api key and the settings.

## Sample config.json
```
{
    ""api_key"": ""gsd3faketokenlsU"",
    ""uurl"": ""site:osu.ppy.sh/users/"",
    ""nfpr"": 1,
    ""filter"": 0,
    ""pws"": 0,
    ""delay"": 2000,
    ""num"": 100
}
```

## Start the tool
```bash
node index.js
```

## Special thanks
[![](https://github.com/ChinHongTan.png?size=50)  ChinHongTan](https://github.com/ChinHongTan)<br/>
[![](https://github.com/veeeleven.png?size=50)  veeeleven](https://github.com/veeeleven)

## TO-DO
- [ ] Improve search accuracy, more results and more similar to user.
",2,2,2,0,farm,"[farm, osugame, pp, rank]",00000
1002,SeansLifeArchive_MinecraftPE_Backup_Worlds_Farmtopia,seanpm2001,N/A,https://github.com/seanpm2001/SeansLifeArchive_MinecraftPE_Backup_Worlds_Farmtopia,https://api.github.com/repos/seanpm2001/SeansLifeArchive_MinecraftPE_Backup_Worlds_Farmtopia, The module for my life story project that contains my world backup data for my MinecraftPE world: farmtopia,"{'message': 'Not Found', 'documentation_url': 'https://docs.github.com/rest/repos/contents#get-repository-content'}",2,2,3,0,farm,"[android, bedrock, cpp, external, farm, farming, gpl3, gplv3, md, minecraft, minecraft-map, minecraftpe, seanpm2001-life-archive, txt]",00000
1003,PLOWMAN,Terkwood,N/A,https://github.com/Terkwood/PLOWMAN,https://api.github.com/repos/Terkwood/PLOWMAN,A pixel art game inspired by Piers Plowman,"
# PLOWMAN

![PLOWMAN screenshot](/doc/screenshot.png)

A procedural farming game inspired by [Piers Plowman](https://en.wikipedia.org/wiki/Piers_Plowman).

🚧 *PROCEED WITH CAUTION* 🚧

🏗 *PROJECT UNDER CONSTRUCTION*  🏗

# Overview

> In a summer season when the sun shone softly
>
> I wrapped myself in woolens as if I were a sheep;
>
> In a hermit's habit, unholy in his works,
>
> I went out into the world to hear wonders
>
> And to see many strange and seldom-known things.

The dreamer will seek, among other things, the allegorical characters Dowel (""Do-Well""), Dobet (""Do-Better""), and Dobest (""Do-Best"").

Grow crops in a procedural world. Earn rewards for undertaking wholesome actions. Barter with nearby civilians.

If you do too much evil, the adventure ends.

In ""the real world"", specific interactions, item placement, and NPC spawns should be randomized.

Dreams which tell the story of Piers Plowman are scripted by hand.

## Running the game

You can run the game using Godot engine, version 3.1+.

Binaries for various systems are made available on the [Releases Page](https://github.com/Terkwood/PLOWMAN/releases).

## Potential additions

A running list of potentially-useful artwork, which is not yet included in this repo:

- [LPC plants, trees, fungi, flowers](https://opengameart.org/node/80124) 
- [LPC assets: multiple collections](https://opengameart.org/content/liberated-pixel-cup-0)
- [LPC Farming game collection](https://opengameart.org/content/lpc-farming-game-collection)
- [LPC tree recolors](https://opengameart.org/content/lpc-tree-recolors)
- [LPC leaf recolor](https://opengameart.org/content/lpc-leaf-recolor)
- [Harvest Moon clone assets](https://opengameart.org/content/harvest-moon-clone-assets)
- [LPC style well](https://opengameart.org/content/lpc-style-well)
- [LPC Tile atlas 2](https://opengameart.org/content/lpc-tile-atlas2)

# Attributions

Thank you to all open source contributors!

- [Daniel Eddeland's LPC submissions](https://opengameart.org/content/lpc-farming-tilesets-magic-animations-and-ui-elements) and [farm animals](https://opengameart.org/content/lpc-style-farm-animals)
- [Various authors for LPC base assets](/lpc_base_credits.txt)
- [Base characters](https://opengameart.org/content/lpc-character-skintone-rework). Original adult walkcycles done by Redshrike.
- [Universal LPC character generator](http://gaurav.munjal.us/Universal-LPC-Spritesheet-Character-Generator/)
- [jrconway3's universal LPC spritesheet](https://github.com/jrconway3/Universal-LPC-spritesheet)
- [Leshy spritesheet generator](https://www.leshylabs.com/apps/sstool/)
- [Oen44's Inventory Example](https://github.com/Oen44/Godot-Inventory)
- [hiulit's day/night cycle example](https://github.com/hiulit/Godot-3-2D-Day-Night-Cycle)
- [Wolthera van Hövell tot Westerflier for the Ancient Greek Architecture and various graphics](https://opengameart.org/content/lpc-compatible-ancient-greek-architecture)
- [OPEN FONT LICENSE](/doc/OFL_for_IM_FELL_ENGLISH_SC.txt) for [IM FELL ENGLISH SC by Igino Marini](https://fonts.google.com/specimen/IM+Fell+English+SC?selection.family=IM+Fell+English+SC)

## References

Opening quotation is [from George Economou's verse translation of C text](http://piers.chass.ncsu.edu/resources/university.html).

For further reading, we recommend [E. Talbot Donaldson's Alliterative Verse Translation](https://www.amazon.com/Wills-vision-Plowman-William-Langland/dp/0393027724/).  This version reads clearly in modern English, and contains helpful annotations.
",2,2,2,18,farm,"[fan-art, farm, game, godot, piers-plowman, procedural-generation]",00000
1004,awesome-landscape,thiago-scherrer,N/A,https://github.com/thiago-scherrer/awesome-landscape,https://api.github.com/repos/thiago-scherrer/awesome-landscape,"A list created for everything related to landscape, environment, farm and much more","# awesome-landscape

A list created for everything related to landscape, environment, farm and much more

[![lint](https://github.com/thiago-scherrer/awesome-landscape/actions/workflows/lints.yml/badge.svg)](https://github.com/thiago-scherrer/awesome-landscape/actions/workflows/lints.yml)

## Online communities

- [Homestead - reddit](https://www.reddit.com/r/homestead/)
- [Landscaping - reddit](https://www.reddit.com/r/landscaping/)

## Essential tools

- [Garden Hoe](https://http2.mlstatic.com/D_NQ_NP_2X_747259-MLB53601602031_022023-F.webp):
For breaking up soil and removing weeds.
- [Shovel](https://http2.mlstatic.com/D_NQ_NP_2X_889924-MLB49718441366_042022-F.webp):
For digging holes, trenches and transplanting plants.
- [Garden Rake](https://http2.mlstatic.com/D_NQ_NP_2X_669233-MLB44008340311_112020-F.webp):
For leveling soil and gathering debris.
- [Pruning Shears](https://http2.mlstatic.com/D_NQ_NP_853376-MLB41847298066_052020-O.webp):
For cutting back unwanted growth from plants and trees.
- [Garden Scissors](https://http2.mlstatic.com/D_NQ_NP_2X_615927-MLB31207740313_062019-F.webp):
For harvesting vegetables, fruits, and flowers.
- [Garden Gloves](https://http2.mlstatic.com/D_NQ_NP_2X_941818-MLB50210644777_062022-F.webp):
To protect your hands while working with soil and plants.
- [Watering Can](https://http2.mlstatic.com/D_NQ_NP_933192-MLB48285588455_112021-W.webp):
For watering plants by hand.
- [Weed Whacker](https://http2.mlstatic.com/D_NQ_NP_945673-MLA42952677615_072020-O.webp):
Handheld gardening tool used for trimming or cutting grass, weeds, and other
vegetation in areas that a lawn mower cannot easily reach, such as around trees,
along fences, and in tight spaces.

## About biomes

### Brazil

- [São Paulo](./biomes/brazil/sao_paulo.md)
",2,2,1,0,farm,"[awesome-list, environment, farm]",00000
1005,ChickensAndBees,johnnyawesome,N/A,https://github.com/johnnyawesome/ChickensAndBees,https://api.github.com/repos/johnnyawesome/ChickensAndBees,A bunch of Chickens - They look for Food and eat it when they find some. And there are Bees! Written in P5JS. ,"# 🐔Chickens and Bees🐝
A bunch of Chickens - They look for Food and eat it when they find some. And there are Bees! Written in P5JS.

![ChickensAndBees](https://github.com/johnnyawesome/ChickensAndBees/blob/main/ChickensAndBees/DemoImages/ChickensAndBees.gif?raw=true)

## Copyright & Attribution

**Chicken**: Author: [daneeklu](https://opengameart.org/node/11629) License: [GPL 2.0](https://creativecommons.org/licenses/by/3.0/) and [CC-BY 3.0](https://www.gnu.org/licenses/old-licenses/gpl-2.0.html) /
**Bee**: Author: [ChickenTeddy](https://opengameart.org/content/16x16-pigeon-shrimp-bee-snail-pack) License: [CC BY 4.0](https://creativecommons.org/licenses/by/4.0/) /
**Grass**: Author: [Invincible](https://opengameart.org/content/grass-tiles-0) License: [CC0](https://creativecommons.org/publicdomain/zero/1.0/) /
**Fence**: Author: [William.Thompsonj](https://opengameart.org/content/16x16-fence-and-well-tiny-16) License: [CC0](https://creativecommons.org/publicdomain/zero/1.0/) /
**Flowers**: Author: [vassago-labs](https://vassago-labs.itch.io/just-a-few-flowers) License: [CC BY-SA 4.0](https://creativecommons.org/licenses/by-sa/4.0/) /
**Grain / Cereal**: Author: [ScratchIO](https://opengameart.org/content/2d-cereals) License: [CC0](https://creativecommons.org/publicdomain/zero/1.0/)

## About the Project

The Code is written in [P5JS](https://p5js.org/). I also coded a [Squirrel 🐿️ that lives in the Forest](https://github.com/johnnyawesome/Squirrel) and searches for Acorns, using the [P5.Play-Library](https://p5play.org/) which in turn uses the [Planck Physics Engine](https://piqnt.com/planck.js/).

## Initialization

- Generate a Background out of Grass-Tiles
- Generate a number of Chickens (You can change ""numberOfChickens"" to get more / less Chickens)
- Generate a number of Bees (You can change ""numberOfBees"" to get more / less Bees)
- Generate a random Pattern of Plants / Flowers
- Generate Food-Piles at random Places
- Draws the Fence

## 🐔The Chickens🐔

- The Chickens will search for Food
- When they find Food, they'll eat it
- When the current Food is gone, the Chicken will search for more Food
- Sometimes a Chicken will take a short break, standing still, to be more natural-looking

## 🐝The Bees🐝
- The Bees fly all over the screen, from right to left 🐝
- Bees fly at random Speeds on their X-Axis. Some are slower, some are faster
- To look more natural, the Bees oscillate on their Y-Axis
- When a bee hits the left edge of the Screen, it dies
- A new Bee is generated in it's place

## 🌾The Food🌾

- Food will spawn in random Locations
- When a Food-Pile is eaten, a new Food-Pile will spawn at a new random Location


## Related Projects

I also coded a [Pixel-Art Squirrel 🐿️ that lives in the Forest 🌳 and searches for Acorns 🌰](https://github.com/johnnyawesome/Squirrel) using [P5JS](https://p5js.org/), the [P5.Play-Library](https://p5play.org/), which in turn uses the [Planck Physics Engine](https://piqnt.com/planck.js/).

![Squirrel](https://raw.githubusercontent.com/johnnyawesome/Squirrel/main/Squirrel/DemoImages/Squirrel.gif)
",1,1,2,0,farm,"[animation, animations, animations-demostration, farm, farming, javascript, javascript-animation, p5, p5js, p5js-animation, p5js-animations, p5js-game, p5js-visualization, pixel-art, pixelart, processing, processing-animation, sprite, sprite-animation, spritesheet]",00000
1006,1tronic-frontend,ONETRONIC,N/A,https://github.com/ONETRONIC/1tronic-frontend,https://api.github.com/repos/ONETRONIC/1tronic-frontend,Fitur Utama dari 1Tronic DEX,"# 1TRONIC-FRONTEND
",1,1,1,0,farm,"[advertising, farm, liquidity, staking, swap]",00000
1007,farm-stack-sample,Jayvirrathi,N/A,https://github.com/Jayvirrathi/farm-stack-sample,https://api.github.com/repos/Jayvirrathi/farm-stack-sample,farm stack,"# FARM Stack 

### FARMstands for FastAPI - React - MongoDB.


## Prerequisites

-   Nodejs
-   MongoDB 

## Build Setup

### Backend 

```bash
# install dependencies
pip install -r requirements.txt

# serve with hot reload at localhost:8000 && opendocs at localhost:8000/docs
uvicorn main:app --reload
```

### Frontend 

```bash
# install dependencies
npm i 

# serve with hot reload at localhost:3000
npm run start
```",1,1,2,0,farm,"[farm, farm-stack, fastapi, mongodb, react]",00000
1008,imerionfarm,sylvesterimerion,N/A,https://github.com/sylvesterimerion/imerionfarm,https://api.github.com/repos/sylvesterimerion/imerionfarm,farm project ,"# imerionfarm
farm WEBSITE
.......
This is a website i created for my company.
........
this company is an agricultural firm that deals on farming & processing of this produce into by-products and derivates.
......

",1,1,1,0,farm,"[farm, imerion, website]",00000
1009,voxelfarm-assets,Ra-Coding,Ra-Coding,https://github.com/Ra-Coding/voxelfarm-assets,https://api.github.com/repos/Ra-Coding/voxelfarm-assets,Voxel assets for voxel farm.,"{'message': 'Not Found', 'documentation_url': 'https://docs.github.com/rest/repos/contents#get-repository-content'}",1,1,1,0,farm,"[2d-graphics, assets, farm, isometric-graphics, magicavoxel, voxel]",00000
1010,procfarm,Terkwood,N/A,https://github.com/Terkwood/procfarm,https://api.github.com/repos/Terkwood/procfarm,Tinkering with procedural generation in godot,"# procedural farm

🏗 🚧 This project is under construction. 🚧 🏗

## Useful things

[Leshy spritesheet generator](https://www.leshylabs.com/apps/sstool/) is really nice.


## License attribution

- [Universal LPC character generator](http://gaurav.munjal.us/Universal-LPC-Spritesheet-Character-Generator/)
- [jrconway3's universal LPC spritesheet](https://github.com/jrconway3/Universal-LPC-spritesheet)
- [Daniel Eddeland LPC submissions](https://opengameart.org/content/lpc-farming-tilesets-magic-animations-and-ui-elements)
- [Various authors for LPC base assets](/lpc_base_credits.txt)

",1,1,2,0,farm,"[farm, game, godot, procedural-generation]",00000
1011,farm-stack-sample,Jayvirrathi,N/A,https://github.com/Jayvirrathi/farm-stack-sample,https://api.github.com/repos/Jayvirrathi/farm-stack-sample,farm stack,"# FARM Stack 

### FARMstands for FastAPI - React - MongoDB.


## Prerequisites

-   Nodejs
-   MongoDB 

## Build Setup

### Backend 

```bash
# install dependencies
pip install -r requirements.txt

# serve with hot reload at localhost:8000 && opendocs at localhost:8000/docs
uvicorn main:app --reload
```

### Frontend 

```bash
# install dependencies
npm i 

# serve with hot reload at localhost:3000
npm run start
```",1,1,2,0,farm,"[farm, farm-stack, fastapi, mongodb, react]",00000
1012,neoburger.github.io,neoburger,neoburger,https://github.com/neoburger/neoburger.github.io,https://api.github.com/repos/neoburger/neoburger.github.io,a balance between justice and profits for neo governance,"# neoburger.github.io

LANDING PAGE OF NEOBURGER

## Welcome to GitHub Pages

You can use the [editor on GitHub](https://github.com/neoburger/neoburger.github.io/edit/main/README.md) to maintain and preview the content for your website in Markdown files.

Whenever you commit to this repository, GitHub Pages will run [Jekyll](https://jekyllrb.com/) to rebuild the pages in your site, from the content in your Markdown files.

### Markdown

Markdown is a lightweight and easy-to-use syntax for styling your writing. It includes conventions for

```markdown
Syntax highlighted code block

# Header 1
## Header 2
### Header 3

- Bulleted
- List

1. Numbered
2. List

**Bold** and _Italic_ and `Code` text

[Link](url) and ![Image](src)
```

For more details see [GitHub Flavored Markdown](https://guides.github.com/features/mastering-markdown/).

### Jekyll Themes

Your Pages site will use the layout and styles from the Jekyll theme you have selected in your [repository settings](https://github.com/neoburger/neoburger.github.io/settings/pages). The name of this theme is saved in the Jekyll `_config.yml` configuration file.

### Support or Contact

Having trouble with Pages? Check out our [documentation](https://docs.github.com/categories/github-pages-basics/) or [contact support](https://support.github.com/contact) and we’ll help you sort it out.
",1,1,1,0,farm,"[bneo, dao, farm, governance, neo, nep17]",00000
1013,3Part-Harmony-Cento,wb2ifs,N/A,https://github.com/wb2ifs/3Part-Harmony-Cento,https://api.github.com/repos/wb2ifs/3Part-Harmony-Cento,Poem curated by Jesse Alexander in collaboration with the Three Part Harmony Farm Community,"# 3Part-Harmony-Cento
3Part Harmony 2035 in 9 parts...a Cento This poem was written at an ""Imagination Station"" during the 3rd Annual Farm festival at Three Part Harmony Farm (http://threepartharmonyfarm.org/) Held October 17th, 2015 for the U.S. Department of Arts and Culture's (http://usdac.us) #DARETOIMAGINE project (http://dare-to-imagine.us/).

The project asked participants/poets to imagine the food and community that would have grown in and around the farm in 2035 and to contribute 3-5 lines of verse to a ""cento""--a community written poem.

You can see the photographed stanzas of the poem via twitter search on the hash-tag #3phfCento2035

Although this platform doesn't show the option, this README text and the poem are licensed under the Creative Commons Attribution-Noncommercial-Share-alike 4.0 International license.

<a rel=""license"" href=""http://creativecommons.org/licenses/by-nc-sa/4.0/""><img alt=""Creative Commons License"" style=""border-width:0"" src=""https://i.creativecommons.org/l/by-nc-sa/4.0/88x31.png"" /></a><br />This work is licensed under a <a rel=""license"" href=""http://creativecommons.org/licenses/by-nc-sa/4.0/"">Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License</a>.
",1,1,2,0,farm,"[cento, centos, farm, harmony-farm, imagine, poem]",00000
1014,WebAppTemplate-FARM,park-junha,N/A,https://github.com/park-junha/WebAppTemplate-FARM,https://api.github.com/repos/park-junha/WebAppTemplate-FARM,A full stack web application template that uses a Python backend and a JavaScript frontend.,"## Full Stack Web App Template - FARM Stack

This repository contains a full stack web application template that runs on the FARM solution stack, which stands for:
- **F**lask, a backend **Python** web framework.
- **A**mazon Web Services, a cloud service that can host software.
- **R**eact, a frontend **JavaScript** web framework.
- **M**ySQL, a relational database management system.

## What is FARM?
The FARM stack is more or less an extension of the LAMP stack with these notable changes:
- The middleware framework is explicit (Flask)
- Like the MEAN stack, it includes an application presentation layer (React)
- The environment which the software runs on is instead replaced by PaaS/IaaS cloud computing services (AWS)
- There is no opinion for which operating system to use

### Flask
Flask is used to write the web APIs / middleware that can communicate between the web UI and the web backend / database. This is the core of the entire application that glues the pieces of the full stack application together.

Note that this particular template does not use an ORM, and instead uses the `pymysql` module. This means developers need to write SQL queries, but can maximize the complexity of the queries they need to run on the database.

### Amazon Web Services
AWS is the cloud service which the application can be hosted on. We can host the entire software stack on the following services:
- **AWS Lambda** for hosting our applications on a serverless infrastructure. We can also choose to host our Flask APIs via [Zappa](https://github.com/Miserlou/Zappa), making deployment to production exceedingly easy.
- **AWS RDS** for hosting our database. 
- **AWS S3** for storing all sorts of other objects like images and files.

This means that developers can keep everything on one platform and minimize DevOps / IT work.

### React
React is the framework which the web UI runs on. The React application may also be run on AWS Lambda with NodeJS.

This template uses JavaScript / JSX, but TypeScript may be used as well.

### MySQL
MySQL is the relational database which the web backend uses. This can also be hosted on AWS through its RDS service.

## How to Run Locally
To run this web application, the following needs to be done:
1. Setup a local MySQL instance using the schema in `db/`
2. Install modules for the API and UI
3. Run the API and UI locally

### Database Setup
To set up the MySQL instance, follow these steps:
1. Create and connect to a MySQL database instance. The most common ways to do this are with MySQL Workbench or `mysql` on the Linux command line interface.
2. Run `sample.sql` within the instance. It will create a schema called `SampleInventory` and then initialize a table called `Inventory`.

### API Setup
The codebase for the Flask API can be found in the `api/` directory.

#### First-time Setup (macOS)
1. Create a Python virtual environment with `virtualenv farm-stack` after navigating to that directory.
2. Activate it with `source farm-stack/bin/activate`
3. Navigate to `api/` and run `pip3 install -r requirements.txt` to install all Python modules necessary for the API.
4. Open `dbcreds.py` in the `api/` directory and edit database credentials as needed.

#### Running the API
1. Activate the virtual environment from above.
2. Run `python3 app.py` to run the API on `http://localhost:8080`.

### UI Setup
The codebase for the React UI can be found in the `ui/` directory. This template uses `yarn` as its package manager; it is crucial that developers do not mix other package managers like `npm` when adding new modules.

Note that packages like `react-bootstrap` are missing from this template.

#### First-time Setup (macOS)
1. Run `yarn install` to install all dependencies required.

#### Running the UI
1. Run `yarn start` to run in development mode.
2. Navigate to `http://localhost:3000` on the browser.
",1,1,3,0,farm,"[aws-lambda, database, farm, flask, flask-api, full-stack, fullstack, mysql, react, stack, template, web-app, web-app-template, web-backend, webapp]",00000
1015,open-best-farm,bieli,N/A,https://github.com/bieli/open-best-farm,https://api.github.com/repos/bieli/open-best-farm,Farm like engine for agriculture simulations,"# Open best farm [![Travis CI](https://travis-ci.org/bieli/open-best-farm.svg?branch=master)](https://travis-ci.org/bieli/open-best-farm) [![Coverage Status](https://coveralls.io/repos/github/bieli/open-best-farm/badge.svg?branch=master)](https://coveralls.io/github/bieli/open-best-farm?branch=master) #
==============


How to start
------------

```

$ ./gradlew clean build test jacocoTestReport run

> Configure project :
> Task :run
d780873e-f617-4770-8087-3ef617a770ff >> ProductImpl{productKind=EGG, points=1, price=3, stars=2, ticks=3, tick=0}
4a76e1df-f985-4faf-b6e1-dff9856faf05 >> ProductImpl{productKind=CORN, points=2, price=2, stars=1, ticks=7, tick=0}
0b61edc5-5d03-4be7-a1ed-c55d03dbe7de >> ProductImpl{productKind=EGG, points=1, price=3, stars=2, ticks=3, tick=0}
137320bc-419a-4e35-b320-bc419a6e352d >> ProductImpl{productKind=MILK, points=4, price=6, stars=5, ticks=5, tick=0}
f49a13f0-347b-4dd2-9a13-f0347bedd26e >> ProductImpl{productKind=CREAM, points=2, price=5, stars=3, ticks=1, tick=0}
02b02363-559e-455e-b023-63559e055e9c >> ProductImpl{productKind=BUTTER, points=2, price=5, stars=3, ticks=2, tick=0}
961ecbc3-1921-4352-9ecb-c319211352a7 >> ProductImpl{productKind=EGG, points=1, price=3, stars=2, ticks=3, tick=0}


 ============= Barn report ============= 

|     name |    count |    ticks |
+----------+----------+----------+
|      EGG |        3 |        3 |
|     CORN |        1 |        7 |
|     MILK |        1 |        5 |
|    CREAM |        1 |        1 |
|   BUTTER |        1 |        2 |


 =============== FeedMill ============== 


------ START: feedMill.run - product: ProductImpl{productKind=EGG, points=1, price=3, stars=2, ticks=3, tick=0}

  -> feedMill.tick(): 1, product.getTick(): 1

  -> feedMill.tick(): 2, product.getTick(): 2

  -> feedMill.tick(): 3, product.getTick(): 3

------ STOP: feedMill.stop - product: ProductImpl{productKind=EGG, points=1, price=3, stars=2, ticks=3, tick=3}


------ START: feedMill.run - product: ProductImpl{productKind=CORN, points=2, price=2, stars=1, ticks=7, tick=0}

  -> feedMill.tick(): 1, product.getTick(): 1

  -> feedMill.tick(): 2, product.getTick(): 2

  -> feedMill.tick(): 3, product.getTick(): 3

  -> feedMill.tick(): 4, product.getTick(): 4

  -> feedMill.tick(): 5, product.getTick(): 5

  -> feedMill.tick(): 6, product.getTick(): 6

  -> feedMill.tick(): 7, product.getTick(): 7


------ STOP: feedMill.stop - product: ProductImpl{productKind=CORN, points=2, price=2, stars=1, ticks=7, tick=7}


------ START: feedMill.run - product: ProductImpl{productKind=MILK, points=4, price=6, stars=5, ticks=5, tick=0}

  -> feedMill.tick(): 1, product.getTick(): 1

  -> feedMill.tick(): 2, product.getTick(): 2

  -> feedMill.tick(): 3, product.getTick(): 3

  -> feedMill.tick(): 4, product.getTick(): 4

  -> feedMill.tick(): 5, product.getTick(): 5


------ STOP: feedMill.stop - product: ProductImpl{productKind=MILK, points=4, price=6, stars=5, ticks=5, tick=5}


------ START: feedMill.run - product: ProductImpl{productKind=CREAM, points=2, price=5, stars=3, ticks=1, tick=0}

  -> feedMill.tick(): 1, product.getTick(): 1


------ STOP: feedMill.stop - product: ProductImpl{productKind=CREAM, points=2, price=5, stars=3, ticks=1, tick=1}


------ START: feedMill.run - product: ProductImpl{productKind=BUTTER, points=2, price=5, stars=3, ticks=2, tick=0}

  -> feedMill.tick(): 1, product.getTick(): 1

  -> feedMill.tick(): 2, product.getTick(): 2


------ STOP: feedMill.stop - product: ProductImpl{productKind=BUTTER, points=2, price=5, stars=3, ticks=2, tick=2}
result: limit: 10, str: net.bieli.machine.FeedMill@a09ee92


BUILD SUCCESSFUL in 4s
10 actionable tasks: 10 executed


```

REST API for game server
---------------

Creating object:

- POST /api/object
    - /{type}
    - /{name}

where {type}s:
 - barn
 - mill_machine
 - field


```
curl -H ""Content-Type: application/json; charset=utf-8""\
 -X POST 'http://localhost:8099/api/object'\
 -d '{""name"":""barn1"",""type"":""BARN""}'

Response HTTP 201: {""id"": <UUID>}
```

Get all objects with ids and names:

- GET /api/object


```
curl -H ""Content-Type: application/json; charset=utf-8""\
 -X GET 'http://localhost:8099/api/object'\

Response HTTP 200: [{""id"": <UUID>, ""name"":""little barn""}, {""id"": <UUID>, ""name"":""first mill machine""}]
```

Creating product:

- POST /api/product
    - /{type}
    - /quantity

where {type}s:
 - EGG
 - MILK
 - CORN


```
curl -H ""Content-Type: application/json; charset=utf-8""\
 -X POST 'http://localhost:8099/api/product'\
 -d '{""type"":""EGG"", ""quantity"": 1}'

Response HTTP 201: {""id"": <UUID>}
```

Adding product into dedicated machine for proccessing:

- POST /api/production
    - /{product_id}
    - /{object_id}

where {type}s:
 - EGG
 - MILK
 - CORN


```
curl -H ""Content-Type: application/json; charset=utf-8""\
 -X POST 'http://localhost:8099/api/production'\
 -d '{""prodct_id"":""<UUID>"", ""object_id"":""<UUID>""}'
 
Response HTTP 201: {""proccess_id"": <UUID>}
```

Getting production proccess status:


- GET /api/production/proccess/status/{proccess_id}
    - {proccess_id} - result from POST /api/production

```
curl -H ""Content-Type: application/json; charset=utf-8""\
 -X GET 'http://localhost:8099/api/production/proccess/status/<UUID>'\

Response HTTP 200: {""prodct_id"":""<UUID>"", ""tick"":3, ""ticks"": 5}
```

Getting production proccess status by product:


- GET /api/production/product/{product_id}/status
    - {{product_id}} - product id

```
curl -H ""Content-Type: application/json; charset=utf-8""\
 -X GET 'http://localhost:8099/api/production/product/<UUID>/status'\

Response HTTP 200: {""prodct_id"":""<UUID>"", ""tick"":2, ""ticks"": 8}
```



TODOs
-----

- [x] create repository with first conceptual version
- [x] creating state machine prototype
- [x] adding conccurent usage example and unit tests
- [?] creating document/concept with REST API for ""farm like"" games
- [x] creating Swagger API doc (http://localhost:8099/v2/api-docs)
- [ ] REST API prototype (with storage in RAM) with integration tests
- [ ] try to self-consume REST API service in simple game with GUI / UI
- [ ] implementing persistent storage (i.e. RIAK, Couchbase, Redis, MySQL/MariaDB, MongoDB, ...)
- [ ] service as backend for text mode game play
- [ ] testing game with this backend by other developers
- [ ] find best UI game frameworka for implementing multiplatform game
- [ ] create background and graphics/prints fot game UI
- [ ] implementing game UI and connecting with this backend
- [ ] first ALPHA game release
- [ ] serving game on www/domain",1,1,4,0,farm,"[backend, farm, game, java, simulator]",00000
1016,myDomain,jslawinsk,N/A,https://github.com/jslawinsk/myDomain,https://api.github.com/repos/jslawinsk/myDomain,Spring REST API Project and Web UI interface. Allows to retrieve data from various types of sensors and present data. Measurement data may also be entered manually. The API also provide for restful calls to receive data. Optionally the Bluetooth and WiFi interfaces may be used to automatically log sensor data. ,"# Under Construction (Work In Progress)

# My Domain spring-rest-api and Web UI Interface

This project is a refactored from the Brewery Services project to allow for other domains to log data (Greenhouse, Winery, Garden, House, Farm). Domains are defined by an admin user.

My Domain Services Spring REST API Project and Web UI interface. Allows to retrieve data from various types of sensors and present data. Measurement data may also be entered manually. The API also provide for restful calls to receive data. Optionally the Bluetooth or WiFi interfaces may be used to automatically log sensor data.

Refer to the Brewery Services Wiki page for design and more details: https://github.com/jslawinsk/brewery-services/wiki

## My Domain Dashboard

The Dashboard will display measurements for all measurements for active batches. The measurement type table will determine the type of sensor gauge displayed. The domain icons may be used to filter the dashboard and data to be domain specific.

## PC

<img src=""https://github.com/jslawinsk/myDomain/blob/main/documentation/PcDashboard.png"" width=""650"">

## Mobile Device

<img src=""https://github.com/jslawinsk/myDomain/blob/main/documentation/MobileDashboard.png"" width=""200"">
<img src=""https://github.com/jslawinsk/myDomain/blob/main/documentation/MobileDashboard2.png"" width=""200"">

#### Tools Used:
- Eclipse
- Maven Plugin 
- Git Plugin
- Java Plugin
- PostgreSQL Database
- H2 Database
- Spring Plugin
- Highcharts
- Swagger
- PostMan
- Draw.io
- dbdiagram.io",1,1,1,0,farm,"[bluetooth, brewing-beer, cloud, farm, gardening, greenhouse, h2, h2-database, java, mit-license, postgres, postgresql, rest-api, spring-boot, spring-data, spring-data-jpa, wifi-network]",00000
1017,BTD6-MM---INSTA-Farm,snipergaming888,N/A,https://github.com/snipergaming888/BTD6-MM---INSTA-Farm,https://api.github.com/repos/snipergaming888/BTD6-MM---INSTA-Farm,A bloons TD6 Monkey Money or Insta Monkey Farm,"# BTD6-MM/INSTA-Farm
A bloons TD6 Monkey Money or Insta Monkey Farm

This Macro Recorder Script Plays The game on the map Dark castle on Deflation for 6 hours (4 if it the insta farming one).

# requirements
The Expert map ""Dark Castle"" and its Deflation mode. (under ""Easy"")

The hero Obyn (select him)

0/0/2 Monkey Village.

2/0/3 Super Monkey.

3/0/1 Ninja Monkey.

3/0/0 Alchemist.

Auto-Start must be enabled.

you must have a 1920x1080p monitor.

# how to use
1. download and install macro recorder. https://www.macrorecorder.com/
2.  download the script from this repository. (click on the file name, then click ""download"")
3.  open up bloons and play dark castle on easy and select deflation.
4.  close out the popup and run the macro.
5.  optional: set it to loop, Playback --> Repeat (input number) (max 10 for free version of macro recorder)
# compatabily
currently, the easter event allows the farming of insta-monkeys. 
there are 2 scripts, 1 for insta and monkey money farming, and one just for money farming.
use the no money one for only money, and for collection events, use the onther one.
# will i get banned for using this!?!?!??!
most likey not. if you are still sceptical, run steam in offline mode.
# How do i farm insta monkeys!!!!!
right now the insta farming one only works if there is a BTD6 event that has the insta-monkey loot crates.
# Why is insta farming so slow!?
currently I have only one recorded game, more shall come in the future.

",1,1,1,0,farm,"[btd6, farm, insta-monkey, money]",00000
1018,RWWD,kitella1,N/A,https://github.com/kitella1/RWWD,https://api.github.com/repos/kitella1/RWWD,McIntire Fruits website in VueJS.,"# mcintire-fruits

## Project setup
```
npm install
```

### Compiles and hot-reloads for development
```
npm run serve
```

### Compiles and minifies for production
```
npm run build
```

### Run your unit tests
```
npm run test:unit
```

### Customize configuration
See [Configuration Reference](https://cli.vuejs.org/config/).
",1,1,1,7,farm,"[css, farm, farm-to-table, html, javascript, mcintire-fruits, vue, vue-js]",00000
1019,Ciftlik-Yonetim-Oyunu,ErenElagz,N/A,https://github.com/ErenElagz/Ciftlik-Yonetim-Oyunu,https://api.github.com/repos/ErenElagz/Ciftlik-Yonetim-Oyunu,Text-Based Python Çiftlik Yönetim Oyunu,"# Tur Tabanlı Çiftlik Yönetim Oyunu
Ciftlik Oyunu, bir ahır birde tarlanızın  olduğu küçük bir çiftlikte başlar.\nVe oyuna birkac hayvan birkac tarla ve 5000₺ ile başlarsınız.
Amacınız Her Hafta Üretim yapıp ve elde ettiginiz ürünleri pazar yerinde sattiğınız ve elde ettiğiniz parayla yatırım yaptığınız bir oyun


Fakat Herşey bu kadar basit değil! Her hafta fiyatlar değişiyor bazen fiyatlar çakılıyor bazende uçabiliyor.
Peki ya şimdi sıra sizde elindekileri satacak mısın? bekleyecek misin?


## Kullanım
Kullanmadan önce şu kütüphaneyi kurun,tablo görünümü için kullanılıyor.
```bash
pip install prettytable
```

```bash
ZIP indir ya da repo yu klonla sonrasında direkt main.py çalıştır.Bu kadar.
```
    
## Özellikler
- Tur Tabanlı
- 3 Hayvan, 3 Bitki
- 3 Hayvan Ürün, 3 Bitki Ürün
- Her hafta saman ve gübre tüketimi
- Haftalık Üretim
- Her hafta Değişen fiyatlar
- Pazaryeri
- Çiftlik İstatistikleri

## Dökümantasyon
Bu haftalık ilerleyen bir oyundur, amacın çiftliğini büyütmek,ama bazı engeller var mesela hayvanların tüketimi ya da değişen ürün fiyatları,ve hayvanların telef olması gibi engeller var.
Basit bir dönem projesiydi  ilk versiyonu Nesne yönelimli programlamaya yönelik geliştirildi. ama konusu hoşuma gittiği için tekrardan geliştiriyorum eğer merak ediyorsanız gelişimi takip edebilirsiniz.
İyi oyunlar, iyi geliştirmeler... <3

## Ekran Görüntüleri
![Screenshot 2023-06-25 003641](https://github.com/ErenElagz/Ciftlik-Yonetim-Oyunu/assets/125195062/e997beb2-5dc8-4aeb-8c44-80eccf7a11c8)
![Screenshot 2023-06-25 003623](https://github.com/ErenElagz/Ciftlik-Yonetim-Oyunu/assets/125195062/1b231556-aaf2-4273-b5ec-bf512827f121)
![Screenshot 2023-06-25 003657](https://github.com/ErenElagz/Ciftlik-Yonetim-Oyunu/assets/125195062/806a09a3-4396-4440-aafa-30952de03acf)
![Screenshot 2023-06-25 003710](https://github.com/ErenElagz/Ciftlik-Yonetim-Oyunu/assets/125195062/36708c6b-4b22-46cc-9ff8-a3b136012788)
![Screenshot 2023-06-25 003729](https://github.com/ErenElagz/Ciftlik-Yonetim-Oyunu/assets/125195062/8dd1a600-5d7e-4365-add7-a4d9989360e9)

## Lisans
[MIT](https://choosealicense.com/licenses/mit/)
İstedğiniz gibi geliştirebilir, yükseltebilir ve kullanabilirsiniz.


## 🔗 Bağlantılar
[![Gİthub](https://img.shields.io/badge/my_portfolio-000?style=for-the-badge&logo=ko-fi&logoColor=white)](https://github.com/ErenElagz)
[![Twitter](https://img.shields.io/badge/twitter-1DA1F2?style=for-the-badge&logo=twitter&logoColor=white)](https://twitter.com/ErenElagz)

## Destek, İletişim ve Geribildirim
Eğer sorunuz, geribildiriminiz varsa ya da iletişime geçmek isterseniz elagzeren@gmail.com üzerinden ulaşabilirsiniz.

",1,1,1,0,farm,"[farm, game, object-oriented-programming, python, python-game]",00000
1020,Crop-Recommendation,vineetpatel725,N/A,https://github.com/vineetpatel725/Crop-Recommendation,https://api.github.com/repos/vineetpatel725/Crop-Recommendation,Crop Recommendation is a web application that suggest/recommend the farmer to which crop to grown his/her field.,"{'message': 'Not Found', 'documentation_url': 'https://docs.github.com/rest/repos/contents#get-repository-content'}",1,1,1,0,farm,"[crop, crop-recommendation, django, django-application, django-framework, django-project, farm, farmer, farming, field, jupyter, jupyter-notebook, machine-learning, machine-learning-algorithms, machinelearning, python, python-3, python3, recommendation-system]",00000
1021,ansible_farm,jjak0b,N/A,https://github.com/jjak0b/ansible_farm,https://api.github.com/repos/jjak0b/ansible_farm,Ansible collection to deploy a VM farm and to provision the virtual machines with custom tasks.,"# jjak0b.ansible_farm Collection

An ansible collection used to create a farm of virtual machines and control these with tasks categorized in different provision phases orchestrated by Ansible.

- **What**: Create a farm composed by multiple VM for different platform and targets

- **Where**: into any personal or professional available hypervisor hosts of a network

- **Why**: to create a CI/CD or any use case workflow of a single or multiple projects using the same farm structure

- **How**: by definiting some repeatable deploy jobs to create a VM and provision it with some repeatable CI/CD and testing jobs

- **When**: anytime a developer, a webhook or any type of periodic job request it

This collection allow ""**What**"", ""**Where**"", ""**Why**"", ""**How**"" according to your project needs.
The ""**When**"" is up to you :-) .

The roles of this collection focus on:

- Create VM definitions from different configuration files separating platform-specific data and target-specific data
- Provision an hypervisor host with VMs of different VM definitions
- Provision a VM (guest) host with **repeateable** and **cachable** provision phases by using **snapshots**
- **Don't require root privileges** whenever possible and for the use main use cases of this collection don't require root privileges by default.

The main use case for this collection is to create a VM farm made of different platforms and targets to distribute repeateable and cachable provision phases over these like project builds and testing scripts.

This collection is flexible so you can use the features it provide also for other purposes.

All roles of this collection uses some common terms:

- The `VM configuration` is a convenient object which describes a permutations of all platforms and targets pairs that we need as virtual machines and each of those are going to be generated in the form of `VM definition` object after parsing some `platform and target definitions` files.
- The `VM definition` object describes the characteristics of a VM about the hardware it emulates, the firmware or OS that is installed onto it and other parameters like credentials and network host configuration. It's a combination of `platform` and `target` definitions.
- The `platform` definition (synonym of OS) is the definition of the used OS, disks, network, credentials, VM components that may be required by the OS. This specify also how a resource should be processed and installed later into libvirt.
- The `target` definition (synonym of machine, architecture of machine) is the definition of emulated hardware components in each `VM definition`, like CPU, RAM, machine type, emulator, etc ...

The Hypervisor and VM provisioning
----------------------------------

the `VMs configurations` should be defined in the hypervisors inventory and these configurations vars should be then provided as input of the `parse_vms_definitions` role such that it generates the `VM definitions` items in a `virtual_machines` list.

These `VM definitions` should be prepared with the `init_vm_connection` role first, installed using the `kvm_provision` role later and provisioned using the `guest_provision` role finally

### Standard Usage and How it works

- For each host of hypervisors
  - ( optional: Assign `VMs configurations` to the hypervisor host using `roles/vm_dispatcher` )
  - Provide all `VMs configurations` as input of `roles/parse_vms_definitions`
    - This will generate a list of `VM Definition` items called `virtual_machines`
  - Each `vm` item of `virtual_machines` should be provided as input of:
    - `roles/init_vm_connection`
      - to add a new ansible inventory host entry to the global inventory
      - to configure the connection to allow the controller to connect to the VM
        - Eventually defining a libvirt network and a DHCP entry for connection such that the vm should be connected to it
      - After that
        - each VM host is added as ansible inventory host
        - the `VM definition` is added as `vm` inventory host var
        - the hypervisor's `inventory_hostname` is added as `kvm_host` inventory host var to keep a reference of its hypervisor node.
        - Each VM host are added to the following ansible groups:
          - `vms`
          - `""{{ vm.metadata.name }}""`
          - `""{{ vm.metadata.platform_name }}""`
          - `""{{ vm.metadata.target_name }}""`

- For each host in `vms` should run:
  - Delegated `roles/kvm_provision` to `kvm_host`, to define and install the `VM definition` stored in `vm` inventory host var
  - `roles/guest_provision` to provision the VM with the guest lifecycle

The VM Guest lifecycle
----------------------

The lifecycle of the provisioned VM runs the following workflow:

0. **Startup** 
   - Start the VM
   - Wait until connection is ready

1. **Init** use case phase
   - Restore to a '**init**' snapshot if exists
   - otherwise fallback to restore or create a '**clean**' snapshot and run the **init** phase:

      1. **dependencies** pre-phase
         - Run dependencies tasks (`{{ import_path }}/dependencies.yaml`)
      2. use case phase: 
         - Run init tasks `{{ import_path }}/init.yaml`
         - Create 'init' snapshot

2. **Main** use case phase: 
   - Run main tasks `{{ import_path }}/main.yaml`

3. **Terminate** use case phase: 
   - Run end tasks `{{ import_path }}/terminate.yaml` whether the main phase succeeds or fails

4. **shutdown**
   - Shutdown gracefully first the VM, otherwise force it
 
Where `import_path` is a subpath that match with the most detailited phase file location, according to the target and platform type of the VM.
The `import_path` is the one in the following priority list path which contains a phase file:
- `""{{ ( phases_lookup_dir_path, vm.metadata.platform_name, vm.metadata.target_name| path_join }}""`
- `""{{ ( phases_lookup_dir_path, vm.metadata.platform_name ) | path_join }}""`
- `""{{ phases_lookup_dir_path }}""`

**Why:** A use case may needs specific tasks/vars for a target on platform or only platform; for instance:

- *debian_11* folder (`vm.metadata.platform_name` value in `platforms/debian_sid.yml`)
    - *amd64* folder (`vm.metadata.target_namevalue )
      - tasks or vars files, ... specific for *amd64* targets in *debian_11* platforms
    - *arm64* folder (`vm.metadata.target_namevalue )
      - tasks or vars files, ... specific for *arm64* targets in *debian_11* platforms
- *fedora_36* folder (`vm.metadata.platform_name` value )
    - *amd64* folder (`vm.metadata.target_namevalue )
      - tasks or vars files, ... specific for *amd64* targets in *fedora_36* platforms
    - tasks or vars files, ... specific *fedora_36* platforms but any target
- tasks or vars files, ... generic for any platform and target which file does not exists with a specific `import_path` sub path

The `import_path` is useful when some dependencies have different alias in some platform's packets manager, or user needs ""ad hoc"" tasks/vars for some others use cases.

Support and Requirements
------------

Read the documentation of each role for specific role's requirements.
The following tables shows support and requirements for the full collection.

- Required requirements are minimal and allow the collection to work but you will need at least some of recommended requirements to use in most cases
- Recommended requirements are used inside some builtin templates, target definitions and callback-tasks for common use cases


### Ansible controller host

<table title=""Ansible controller support"">
  <thead>
    <tr>
      <th>Platform</th>
      <th>Support</th>
      <th>Tested</th>
      <th>Requirements</th>
    </tr>
  </thead>
  </tbody>
    <tr>
      <td>Any GNU/Linux distribution</td>
      <td>should work if ansible support them</td>
      <td></td>
      <td rowspan=""2"">
        <ul>
          <li>ansible >=2.10.8
            <ul>
              <li>See control node <a href=""https://docs.ansible.com/ansible/2.10/installation_guide/intro_installation.html#control-node-requirements"">requirements</a></li>
            </ul>
          </li>
          <li>python >=2.6</li>
          <li>sshpass</li>
        </ul>
      </td>
    </tr>
    <tr>
      <td>Debian 11, 12</td>
      <td>yes</td>
      <td>yes</td>
    </tr>
  </tbody>
</table>


### Hypervisor target host:

<table title=""Hypervisor target hosts support"">
  <thead>
    <tr>
      <th>Platform</th>
      <th>Support</th>
      <th>Tested</th>
      <th>Requirements</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>Any GNU/Linux distribution and others</td>
      <td>should work if libvirt and an hypervisor driver is supported</td>
      <td>partial (No SELinux)</td>
      <td>
        <ul>
          <li>Required
            <ul>
              <li>Ansible managed node <a href=""https://docs.ansible.com/ansible/2.10/installation_guide/intro_installation.html#managed-node-requirements"">requirements</a></li>
              <li>Configured libvirt environment</li>
              <li>Configured SSH server</li>
              <li>Configured Hypervisor compatible with libvirt. 
                <p>Note: Only builtin templates and target definitions use KVM or QEMU so you can use the hypervisor you want and override the builtin ones if needed.</p>
              </li>
            </ul>
          </li>
          <li> Recommended hypervisors
            <ul>
              <li>KVM</li>
              <li>QEMU</li>
            </ul>
          </li>
        </ul>
        <details>
          <summary>Required Commands</summary>
          <ul>
            <li>virsh</li>
            <li>qemu-img (external snapshots only)</li>
          <ul>
        </details>
        <details>
          <summary>Recommended Commands</summary>
          <ul>
            <li>virt-sysprep</li>
            <li>qemu-system-<code>&ltarch&gt</code></li>
            <li>qemu-img</li>
            <li>unzip</li>
            <li>gzip</li>
            <li>bunzip2</li>
            <li>xz</li>
          </ul>  
        </details>
      </td>
    </tr>
    <tr>
      <td>Debian 11, 12</td>
      <td>yes</td>
      <td>yes</td>
      <td rowspan=""2"">
        <details>
          <summary>Required Packages</summary>
          <ul>
            <li>libvirt-daemon-system</li>
            <li>python3-libvirt</li>
            <li>python3-lxml</li>
            <li>libvirt-clients</li>
            <li>qemu-utils</li>
          </ul>
        </details>
        <details>
        <summary>Recommended Packages</summary>
        <ul>
          <li>libguestfs-tools</li>
          <li>qemu-kvm</li>
          <li>qemu-utils</li>
          <li>unzip</li>
          <li>bzip2</li>
          <li>gzip</li>
          <li>xz-utils</li>
        </ul>
        </details>
      </td>
    </tr>
    <tr>
      <td>Ubuntu 22.04 LTS</td>
      <td>should work</td>
      <td>no</td>
    </tr>
    <tr>
      <td>Arch Linux</td>
      <td>should work</td>
      <td>no</td>
      <td>
        <details>
          <summary>Required Packages</summary>
          <ul>
            <li>libvirt</li>
            <li>libvirt-python</li>
            <li>python-lxml</li>
            <li>qemu-img</li>
          </ul>
        </details>
        <details>
          <summary>Recommended Packages</summary>
          <ul>
            <li>guestfs-tools</li>
            <li>qemu</li>
            <li>qemu-img</li>
            <li>unzip</li>
            <li>bzip2</li>
            <li>gzip</li>
            <li>xz</li>
          </ul>
        </details>
      </td>
    </tr>
  </tbody>
</table>

**Note: QEMU or KVM are recommended** for the following reasons:

- The collection support `qemu:///session` URI by default only when the `VDE` and `user` (userspace connections) virtual networks types are supported by the hypervisor.
- **[Since libvirt 9.0.0](https://libvirt.org/news.html#v9-0-0-2023-01-16)** the support of `passt` as network interface backend for [userspace connections](https://libvirt.org/formatdomain.html#userspace-slirp-or-passt-connection) has been added but it's [unstable](https://gitlab.com/libvirt/libvirt/-/issues/462), and so the VM template will use the network type `user` with that backend **since libvirt 9.2.0** only.
- **Prior libvirt 9.2.0** The `VDE` and `user` virtual networks are supported only when custom network interface can be added via the XML libvirt template through the libvirt [QEMU namespace](https://libvirt.org/drvqemu.html#pass-through-of-arbitrary-qemu-commands) for now. So other hypervisors may require specific extra configuration like definining other VM XML template.
- the [SSH connection plugin](https://docs.ansible.com/ansible/latest/collections/ansible/builtin/ssh_connection.html) support may be achieved with `qemu:///session` only when SSH port of the VM is reachable from the hypervisor. The `user` network interface built with the **QEMU** namespace allow to specify a port forward with the `hostfwd` option or alternativelly using port forward with `passt`; but the first one is not supported by libvirt XML format for other hypervisors, and the second one is not supported on libvirt versions prior than `9.2.0`.
- the [community.libvirt.libvirt_qemu connection plugin](https://docs.ansible.com/ansible/latest/collections/community/libvirt/libvirt_qemu_connection.html) is supported only for local (ansible controller) hypervisor and **only if** you pre-install the **QEMU Guest Agent** on VM OS. The use of `ssh+qemu` URIs has not been tested.


### VM target host:

There are very few particular requirements for the platform used for virtual machines

<table title=""VM target hosts support"">
  <thead>
    <tr>
      <th>Platform</th>
      <th>Support</th>
      <th>Tested</th>
      <th>Requirements</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>GNU/Linux based OS</td>
      <td>yes</td>
      <td>yes (No SELinux)</td>
      <td rowspan=""3"">
        <ul>
          <li>Ansible managed node <a href=""https://docs.ansible.com/ansible/2.10/installation_guide/intro_installation.html#managed-node-requirements"">requirements</a></li>
          <ul>
            <li>Configured SSH server (preinstalled in VM image)</li>
          </ul>
          <li>Support for <code>/bin/sync</code></li>
        <ul>
      </td>
    </tr>
    <tr>
      <td>Mac OS</td>
      <td>yes</td>
      <td>no</td>
    </tr>
    <tr>
      <td>Others Unix-like OS</td>
      <td>should work</td>
      <td>no</td>
    </tr>
    <tr>
      <td>Windows</td>
      <td>yes</td>
      <td>no</td>
      <td>
        <ul>
          <li>Ansible managed node <a href=""https://docs.ansible.com/ansible/2.10/installation_guide/intro_installation.html#managed-node-requirements"">requirements</a></li>
          <ul>
            <li>Configured SSH server (preinstalled in VM image)</li>
          </ul>
          <li>Requirements for <a href=""https://learn.microsoft.com/sysinternals/downloads/sync"">Sync</a> executable</li>
        <ul>
      </td>
    </tr>
  </tbody>
</table>

Dependencies
------------

The following collections are ansible dependencies of this collection's roles and can be installed with ```ansible-galaxy install -r requirements.yml```

  - [community.libvirt](https://galaxy.ansible.com/community/libvirt) 
  - [community.general](https://docs.ansible.com/ansible/latest/collections/community/general/index.html)
  - [community.crypto](https://docs.ansible.com/ansible/latest/collections/community/crypto/index.html)
  - [ansible.utils](https://docs.ansible.com/ansible/latest/collections/ansible/utils/index.html)
",1,1,2,0,farm,"[ansible, ansible-collection, ansible-role, ansible-roles, farm, kvm, libvirt, qemu, qemu-kvm, test-automation, testing-farm, testing-tools, virtualization, vm-provisioning]",00000
1022,Project-Farm-Game,BurakEnsarH,N/A,https://github.com/BurakEnsarH/Project-Farm-Game,https://api.github.com/repos/BurakEnsarH/Project-Farm-Game,"This is a farm game prototype. There are fields where players can plant vegetables. Main goal in this project, Player has to grow vegetables and buy all the fields. Player has 2 field in the start. This project based on basic farming elements.","# Project-Farm-Game

This is a farm game prototype. There are fields where players can plant vegetables. Main goal in this project, Player has to grow vegetables and buy all the fields. Player has 2 field in the start. This project based on basic farming elements.

![Screenshot_8](https://user-images.githubusercontent.com/88538924/236848525-1bf38be2-8dc1-41cd-8941-d1f93db62ae4.png)

![Screenshot_9](https://user-images.githubusercontent.com/88538924/236848532-e7e0d33c-2d09-49dc-b5c9-da3bd50c1939.png)
",1,1,1,0,farm,"[farm, game-development, unity]",00000
1023,stardew-valley-farming,EliCDavis,N/A,https://github.com/EliCDavis/stardew-valley-farming,https://api.github.com/repos/EliCDavis/stardew-valley-farming,Attempting to find optimal crop placement for my sister,"# Stardew Valley Farming

Attempting to optimize crop placement in stardew valley.

I'm pretty sure this is an np problem.

This is an imense amount of different configurations that need to be checked. Moving this to cuda would be advantageous, atleast for the validation of a farming configuration. I'm running into memory issues, so something like c/++ is probably required. Any tips for figuring out a configuration is going to be sub optimal before exploring it further would be extremely advantagous.

# Problem Description

We have a player on a square grid. The player can move up, down, left, and right on the grid. They can not move in a diagonal. The player can also only water crops above, below, left, and right of them. They can not water in a diagonal. The player has a plot of land for farming represented as n by m matrix, where n and m are integers and greater than 0 and n can but not have to be equal to m. The goal is to maximize the number of crops on a nxm plot of land so that they can still be watered by the player. If a crop is not watered by the player it dies. The player has a plot of land for farming located in a plot of land they own. They can walk around the perimeter of farm land and enter their field at any point they'd like. This means a 5x5 grid is actually a 7x7 with the outer layer having no crops. At any cell in the grid it can be marked as either an `x`, which means it is free for the player to walk on, or a `c` where a crop has been planted and the player is not able to walk on.

## Medium Difficulty

Crops need to be surrounded by a scare crow or they can be potentially eaten by crows. The likelyhood of being eaten by crows changes with the number of crops present and is hard to deduce by the behaviour described [here](https://www.reddit.com/r/StardewValley/comments/7bndnd/does_anyone_know_exactly_how_crows_work/). Scarecrows can protect crops with an 8 cell radius.

## Hard Difficulty

There exists 3 different sprinkler systems in the game, each being better than the last. The cells they cover is dictated by `.` and a cell uncovered is dictated as `o`. If the sprinkler covers a given area then the player does not have to water it.

```
sprinkler
	cross cover pattern
	0 . 0
	. s .
	0 . 0

Q sprinkler
	. . .
	. Q .
	. . .

Irid Sprinkler
	. . . . .
	. . . . .
	. . I . .
	. . . . .
	. . . . .
```

# Strategies

| symbol | description |
| -------| ----------- |
| x      | Clear area  |
| c      | Spot for a crop |

## Bruteforce

There's absilutely no way this is scalable. The only pruning going on is stopping the search if the board can not be traversed by the player. After being smart with a job system the time reduced from ~2m30s to ~30s on 8 core computer.

Running a 6x6 board causes me to run out of memory and have the program crash. Even if we had enough memory to run this, it still took a 5x5 30s to run. 6x6 - 5x5 = 36 - 25 = 11 new tiles to explore, each with the option to either be a crop or a square the player can walk in. That's 2^11 more solutions multiplied by the time it takes to explore the first 25. This ends up with 2^11 * 30 = 61440s = 1024m = 17 hours of running. 

![crash](https://i.imgur.com/Mea5qg6.png)

```
Search took 36.1950397s with 8 workers; chunking 10000
Explored 48408284 solutions
Total Crops: 21

c c x c c
c c x c c
c c x c c
c c x c c
c c c c c
```

## Pruning based on niave best guess layout

The next idea I came up with is using some strategy to come up with a pretty good layout, but not optimal. Then with this layout we know when exploring solutions, if it ever becomes impossible to become better than the guess, then we can stop exploring. The best guess algorithm for layout took the largest side, and would lay crops along it in pairs of 2, so if we had a 5x5 grid, then our best guess would return:

```
c c c c c
c c c c c 
x x x x x 
c c c c c 
c c c c c 
```

Which is 20 crops, close to the optimal 21 crops.

### Results

This actually ended up helping immensely, and allowed me to run a 6x6 for the first time.

5x5
```
Search took 148.9861ms with 8 workers; chunking 5000
Explored 31620 solutions
Total Crops: 21

c c x c c
c c x c c
c c x c c
c c x c c
c c c c c
```

6x6
```
Search took 7m37.0579751s with 8 workers; chunking 5000
Explored 384706620 solutions
Total Crops: 28

c x c c c c
c c c x c c
c c c x c c
x x x x x c
c c c c c c
c c c c c c
```

This current best guess does not scale however. If we could figure out the optimal number of crops before starting this run then it would help tremendousely, as all the program would have to do at that point is try placing them. After figuring out the optimal placement had 28 crops in a 6x6, I just made the best guess function return 28 to see the speed improvements. It went from taking 7m37 to JUST 2 SECONDS. Picking a number greater than 28 stops in less than 2 seconds with an incomplete board.

```
Search took 2.5670386s with 8 workers; chunking 5000
Explored 2102643 solutions
Total Crops: 28

c c c x c c
x c c x c c
c c c x c c
x x c x c c
c c c x c c
c c c c c c
```

I took this and hard coded the guess to 40 for a 7x7 board. The board never finishes so I'd knock down the hard coded guess by one until the board finished. As a result I finally got a valid board with 12 minutes of runtime.

7x7
```
Search took 12m17.9270004s with 8 workers; chunking 5000
Explored 547254570 solutions
Total Crops: 37

c c x c x c c
c c x c x x c
c c x c c c c
c c x c c c c
c x x x x x c
c c c c c c c
c c c c c c c
```

From this we see that even if we know the optimal number of crops for any board, coming up with a valid configuration will still take way too much time on larger boards. Which warrants the need for better strategies to be implemented along with this.

## Pruning based on uncovered regions

If a region is every left wholy empty then it can be shown that it can always be optimized. For example if a configuration contains a 3x3 region that is always empty, then we can always improve it by placing a crop in the center

```
x x x   can be improved to    x x x
x x x  ====================>  x c x
x x x                         x x x

```

I am making the assumption that this also applied to a 2x2 grid, but I can't prove it in my mind. However I have not seen a solution yet that ever contains a empty 2x2 grid in it. So I check to see if a grid ever contains an empty 2x2 with no crops, and if it does then I prune it. Doing this reduced the 7x7 grid by 8 minutes (12 minutes to 4 minutes). But is far from what's needed if I want to start evaluating 8x8 grids.

```
Search took 4m43.4358307s with 8 workers; chunking 5000
Explored 203492374 solutions
Total Crops: 37

c c c x c c c
c x x x x x c
c c c c c c c
c c c c c c c
x x x x x x c
c c c c c c c
c c c c c c c
```

## Smaller optimizations

I realized im doing a breath first search to determine if a board can be traversed by the player even if I just added an empty square. Since adding empty squares will always ensure the board is traversable, I stopped doing the BFS. I also stopped initializing some arrays every expansion and am keeping up with arrays long term. Doing these two things dropped the time for a 7x7 by a minutes, taking a total of 3m36s to compute now.

```
Search took 3m36.2419507s with 8 workers; chunking 5000
Explored 203492374 solutions
Total Crops: 37

c c c c c c c
c c x x x x x
x c c c c c c
c c c c c c c
x x x x x x c
c c c c c c c
c c c c c c c
```",1,1,3,0,farm,"[farm, np, stardew-valley]",00000
1024,homeassistant-aerogarden,dalinicus,N/A,https://github.com/dalinicus/homeassistant-aerogarden,https://api.github.com/repos/dalinicus/homeassistant-aerogarden,Aerogarden integration for Home Assistant,"# homeassistant-aerogarden

[![hacs_badge](https://img.shields.io/badge/HACS-Custom-41BDF5.svg)](https://github.com/hacs/integration)
[![Aerogarden API Status](https://github.com/dalinicus/homeassistant-aerogarden/actions/workflows/synthetic-api-test.yaml/badge.svg)](https://github.com/dalinicus/homeassistant-aerogarden/actions/workflows/synthetic-api-test.yaml)

[![codecov](https://codecov.io/gh/dalinicus/homeassistant-aerogarden/graph/badge.svg?token=TNP1DC74AW)](https://codecov.io/gh/dalinicus/homeassistant-aerogarden)
[![Tests](https://github.com/dalinicus/homeassistant-aerogarden/actions/workflows/tests.yaml/badge.svg)](https://github.com/dalinicus/homeassistant-aerogarden/actions/workflows/tests.yaml)

[![Code Style](https://github.com/dalinicus/homeassistant-aerogarden/actions/workflows/style.yaml/badge.svg)](https://github.com/dalinicus/homeassistant-aerogarden/actions/workflows/style.yaml)
[![HACS/HASS](https://github.com/dalinicus/homeassistant-aerogarden/actions/workflows/validate.yaml/badge.svg)](https://github.com/dalinicus/homeassistant-aerogarden/actions/workflows/validate.yaml)
[![CodeQL](https://github.com/dalinicus/homeassistant-aerogarden/actions/workflows/codeql.yaml/badge.svg)](https://github.com/dalinicus/homeassistant-aerogarden/actions/workflows/codeql.yaml)

This is a custom component for [Home Assistant](http://home-assistant.io) that adds support for the Miracle Grow [AeroGarden](http://www.aerogarden.com) Wifi hydroponic gardens.

## Background

Overhaul of work done by [jacobdonenfeld](https://github.com/jacobdonenfeld/homeassistant-aerogarden) who picked up the torch from [ksheumaker](https://github.com/ksheumaker/homeassistant-aerogarden) who was inspired by a [forum post by epotex](https://community.home-assistant.io/t/first-timer-trying-to-convert-a-working-script-to-create-support-for-a-new-platform).  Utilizes the non-public Aerogarden API to read and write information for gardens added to a user's Aerogarden account.

## Data available

A device will be created for each Aerogarden registered in a user's Aerogarden account.  A device has the following sensors associated with it:

### Binary Sensors

* Light - `On` if garden light is on; `Off` otherwise
* Needs Nutrients - `Problem` if garden needs nutrients; `OK` otherwise
* Needs Water -  `Problem` if garden needs water; `OK` otherwise
* Pump - `Running` if garden pump is running; `Not running` otherwise

### Sensors

* Nutrient Days - Days left in the configured nutrient cycle.
* Planted Days - Days since the garden was initially planted.
* Water Level - Current state of the reservoir level; `Full`, `Medium`, or `Low`

![Aerogarden-Device](/images/aerogarden-device.png)

## Tested Models

* Harvest Wifi
* Bounty

Other models are expected to work. Actively interested in users with a multi-garden setup to test code paths I cannot with my single-garden setup.

## Installation

### HACS

Follow [this guide](https://hacs.xyz/docs/faq/custom_repositories/) to add this git repository as a custom HACS repository. Then install from HACS as normal.

### Manual Installation

Copy `custom_components/aerogarden` into your Home Assistant `$HA_HOME/config` directory, then restart Home Assistant

## Initial Setup

Add an integration entry as normal from integration section of the home assistant settings.  You'll need the following configuration items

* **Email**: The e-mail registered with your AC Infinity account.
* **Password**: The password for this account.

![Initial-Setup](/images/initial-setup.png)

## Additional Configuration

After adding an integration entry, the following additional configurations can be modified via the configuration options dialog.

* **Polling Interval (Seconds)**: The time between update calls to the AC Infinity API.  Minimum allowed polling interval is 30 seconds.

![Additional-Configuration](/images/additional-configuration.png)

## Note about the Aerogarden API

This integration uses a non-public API to fetch information; the same API that is used by Aerogarden devices.  This API has had a number of outages this last year, which leads to issues using this integration.  Please make sure this status badge is reporting green before opening any issues, as a red status would indicate problems with the API and not the Integration

[![Aerogarden API Status](https://github.com/dalinicus/homeassistant-aerogarden/actions/workflows/synthetic-api-test.yaml/badge.svg)](https://github.com/dalinicus/homeassistant-aerogarden/actions/workflows/synthetic-api-test.yaml)
",1,1,0,1,farm,"[aerogarden, bounty, farm, hacs, hacs-integration, harvest, home-assistant, homeassistant, hydroponics]",00000
1025,FarmingRPG,mkinney,N/A,https://github.com/mkinney/FarmingRPG,https://api.github.com/repos/mkinney/FarmingRPG,,"
Farming RPG from 

https://www.youtube.com/watch?v=cdJoJdtFbwc&list=PLSFMekK0JFgzbFfj1vAsyluKTymnBiriY

https://opengameart.org/

or https://github.com/jrconway3/Universal-LPC-spritesheet


",1,1,2,0,farm,"[farm, farming, gamemaker, gamemaker-studio-2]",00000
1026,StrykerDG.FarmForge,StrykerDG,N/A,N/A,https://api.github.com/repos/StrykerDG/StrykerDG.FarmForge,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1E1:6584:2839B26:52B6399:65224095.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,farm,"[N, /, A]",00000
1027,kapusta-2,Frintest,Frintest,https://github.com/Frintest/kapusta-2,https://api.github.com/repos/Frintest/kapusta-2,🥦Kapusta 2.0,,1,1,0,1,farm,"[farm, game, game-interface, kapusta-2, web-game]",00000
1028,Twitch-Farm-Bot,GabrielBigardi,N/A,https://github.com/GabrielBigardi/Twitch-Farm-Bot,https://api.github.com/repos/GabrielBigardi/Twitch-Farm-Bot,Twitch Bot made to farm points on lots of channel at the same time,"# A tool to farm points on twitch

## How to use ?
```
npm install
```

And finally run the bot like so
```
node index.js --user=botname01 --pass=oauth:botoauth01 --farmChannels=channel01,channel02,channel03
```

## How do i contribute to this project?
[Click here](CONTRIBUTING.md).

## Contact
**Discord**: *Gabriel Bigardi#2292*  
**Twitter**: *@BigardiGabriel*  
**Email**: *gabrielbigardi@hotmail.com*  
",1,1,2,0,farm,"[bot, farm, farming, points, streamelements, twitch, twitch-bot]",00000
1029,scavo.farm,e-scavo,N/A,https://github.com/e-scavo/scavo.farm,https://api.github.com/repos/e-scavo/scavo.farm,SCAVO - Self-sustaining Crypto Mining Farm,"# scavo.farm
SCAVO - Self-sustaining Crypto Mining Farm
",1,1,1,0,farm,"[bitcoin, blockchain, blockchain-platform, crypto, cryptocurrencies, cryptocurrency, ethereum, farm, ico, initial-coin-offering, mining, monero, pool, pool-server, profitable, token, wallet]",00000
1030,Farm-Helper-app,YogPanjarale,N/A,https://github.com/YogPanjarale/Farm-Helper-app,https://api.github.com/repos/YogPanjarale/Farm-Helper-app,In my current prototype I have implemented a feature by which farmers can control their farm water-pump remotely through my app and an IOT device would we be placed at farm which would turn on/off the motor.,"{'message': 'Not Found', 'documentation_url': 'https://docs.github.com/rest/repos/contents#get-repository-content'}",1,1,1,0,farm,"[farm, iot-device, react-native]",00000
1031,Farm-Simulator-Game,ErenElagz,N/A,https://github.com/ErenElagz/Farm-Simulator-Game,https://api.github.com/repos/ErenElagz/Farm-Simulator-Game,"a Web Based Farming Simulator Game, Weekly prices, Marketplaces and more...","# Farming Simulator Game Using Javascript
The Farm Game starts on a small farm where you have a barn and a field. And you start the game with a few animals, a few fields and 5000$. Your Goal is a game where you produce every week and sell your products in the market place and invest with the money you get. But everything is not that simple! Prices change every week, sometimes the prices crash and sometimes they can fly.  
So now it's your turn to sell what you have? will you wait?

## Installation
```bash
Download the project and run the index.html. thats it
```

## Features
 - 3 Animal, 3 Plants
 - 3 Animal Product, 3 Plants Product 
 - Every week Feed and Fertilizer consumption.
 - Weekly Production
 - Changing Prices every week and see last 2 weeks prices
 - Detailed UI Design
 - Sell and Buy Everything
 - See your Farm Stats

## Documentation

### How to Play
It's turn based Farm Managment Game. Your purpose must be have a biggest Farm.  
But you have some issues like animal feed and plant fertilizer. This ıtems spending every week from the your producer items.  
If you want to produce something you must spending something its a nature!  
Whatever, its a basic game and prices coming your change in the this day.  
Try dont to perish your animals and plants.  
I think thats enough. Good Luck <3

### Used Technologies and Standarts
 1. HTML
 2. CSS
 3. Bootstrap v5.3
 4. JavaScript
 5. JS DOM

## Screenshots
![Screenshot 2023-04-02 184640](https://user-images.githubusercontent.com/125195062/229364226-a226d9d3-f93a-4aa5-9e25-8ea8706a7b38.png)
![Screenshot 2023-04-02 184628](https://user-images.githubusercontent.com/125195062/229364234-5255de10-3659-4ca7-9774-dd31ae622db4.png)
![Screenshot 2023-04-02 184618](https://user-images.githubusercontent.com/125195062/229364235-e63b04a5-523e-4608-8464-7b219e8b61db.png)
![Screenshot 2023-04-02 184605](https://user-images.githubusercontent.com/125195062/229364238-e63ed4d5-679e-47ff-bbde-ee352804c0f2.png)
![Screenshot 2023-06-24 111744](https://github.com/ErenElagz/Farm-Simulator-Game/assets/125195062/ef4be995-0aed-4e00-a0c7-55262ccf8e50)

## License
[MIT](https://choosealicense.com/licenses/mit/)

## 🔗 Links
[![Github](https://img.shields.io/badge/my_portfolio-000?style=for-the-badge&logo=ko-fi&logoColor=white)](https://github.com/ErenElagz)
[![Twitter](https://img.shields.io/badge/twitter-1DA1F2?style=for-the-badge&logo=twitter&logoColor=white)](https://twitter.com/erenelagz)

## Support, Contact and Feedback
If you have any question or feedback, please reach out to me at elagzeren@gmail.com
",1,1,1,0,farm,"[bootstrap, farm, farming-simulator, html-css-javascript, javascript-game, web-based]",00000
1032,commits-farm,SelimWaly,N/A,https://github.com/SelimWaly/commits-farm,https://api.github.com/repos/SelimWaly/commits-farm,A program that will farm and create commits on your GitHub account by creating files and uploading them onto GitHub,"# GitHub Commits Farm
A program that will farm and create commits on your GitHub account.

## Introduction
This project was created simply to farm GitHub commits on your account for 3 reasons:
<br>
1. Keep your account active.
2. Look cool.
3. Flex on your friends the fact that your life is just non-existent.

## Results
A long time ago I have create a very simple version and tested it on an alternative account and these were the results:
<br>
<br>
![112,000 commits on GitHub](src/results.jpg)

## How it works?
You might wonder what is the formula used by this program
<br>
This program does a simple operation using the built-in Python module `random` to generate a random integer from 1 to 10.
After choosing a number, if the number is 1, 2 or 3 it waits 15 seconds then chooses another number.
The rest of the numbers correspond to a progrmamming language that the program writes a simple script with to output ""Hello, world!"" then publish the file on GitHub with the name Temp- then a random salt then the file type of that programming language.
<br>
Here are the programming languages the numbers correspond to:
<br>
<br>
4. C++
<br>
5. C
<br>
6. Python
<br>
7. Jupyter
<br>
8. JavaScript
<br>
9. TypeScript
<br>
10. Brainfuck
<br>

## How to use
Using this program is very simple.
If you look in the files of this repository you will find a file called `main.py` containing the code.
All you have to do is create an empty folder, create a python file inside of it and insert the code, change the username with yours and write the name of an empty repository on your account to be used then run the program using any Python interpreter.

1. Install [Git Bash](https://git-scm.com/downloads) and run the installer.
2. After setting Git Bash, enter the command `git config --global user.name ""Your Name""` and replace Your Name with your actual name.
3. After running that first command run the other command `git config --global user.email ""user@domain.com""` and replace user@domain.com with the email you used to sign up for GitHub.
4. Copy the contents of the file `main.py` from this repository.
5. Create an empty repository on your account (preferably with the name `commit`).
6. Create an empty folder on your computer dedicated to this program.
7. Create a Python file in that new folder and paste the program's code inside of it.
8. Change the username inside (currently written mine) and change the GitHub repository to the name of the GitHub repository you created.
9. Run the program using any Python interpreter.

*The program should now work. If any errors or issues occur, don't hesitate to create an issue here in this repository.*
<br>
<br>

**WARNING: DO NOT RUN THIS SCRIPT IN THE DESKTOP OR ANY DIRECTORY SIMILAR TO THAT. PLEASE CREATE A FOLDER DEDICATED TO THIS FARM TO PREVENT ISSUES WITH YOUR COMPUTER OR RANDOM FILES APPEARING ON YOUR COMPUTER.**

## License
This project is under the `MIT License`. Please check `LICENSE` for more information.

## **Thank you for viewing this repository and happy farming**
",1,1,1,0,farm,"[commit, commits, farm, github, python, server, spam]",00000
1033,Farmers-of-Capitalism-OLD,Prophets-of-Profit,Prophets-of-Profit,https://github.com/Prophets-of-Profit/Farmers-of-Capitalism-OLD,https://api.github.com/repos/Prophets-of-Profit/Farmers-of-Capitalism-OLD,"The second failed attempt to make the game Farmers of Capitalism. A game about farming, power, and aliens.","{'message': 'Not Found', 'documentation_url': 'https://docs.github.com/rest/repos/contents#get-repository-content'}",1,1,4,0,farm,"[aliens, capitalism, d, dlang, farm, farmers, farming]",00000
1034,botpackage,bigteacup,N/A,https://github.com/bigteacup/botpackage,https://api.github.com/repos/bigteacup/botpackage,Bot Travian,"# botpackage
## Bot Travian

-Basé sur selenium

-Interface graphique sous JavaFX

-En developement mais parfaitement fonctionnel

-Avant de démarrer le bot : Faire une ""tuile de compte"" en entrant son *pseudo*, son *mot de passe*, puis l'*adresse du serveur* puis cliquer sur *Ajouter*. 
Pour finir selectionner le compte à lancer en cliquant sur *selectionner* et cliquer sur *On*

-Ne fonctionne que sur les *serveurs français* pour le moment

",1,1,1,1,farm,"[2008, 2017, bot, css, farm, java, javafx, selenium, travian, v2, v3, v4]",00000
1035,PyFarm,ErenElagz,N/A,https://github.com/ErenElagz/PyFarm,https://api.github.com/repos/ErenElagz/PyFarm,Text-Based Python Farming Simulator Game,"# Turn Based Farming Simulator Game 
The Farm Game starts on a small farm where you have a barn and a field. And you start the game with a few animals, a few fields and 5000$.
Your Goal is a game where you produce every week and sell your products in the market place and invest with the money you get.

But everything is not that simple! Prices change every week, sometimes the prices crash and sometimes they can fly.
So now it's your turn to sell what you have? will you wait?


## Installation
Before the Use. Install this Library for TableView

```bash
pip install prettytable
```

```bash
Download zip or clone repo. and run main.py
```
    
## Features
- Turn based 
- 3 Animal, 3 Plants
- 3 Animal Product, 3 Plants Product
- Every week Feed and Fertilizer consumption.
- Weekly Production
- Changing Prices every week and see last 2 weeks prices
- Detailed UI Design
- Sell and Buy Everything
- See your Farm Stats

## Documentation
It's turn based Farm Managment Game. Your purpose must be have a biggest Farm.
But you have some issues like animal feed and plant fertilizer. This ıtems spending every week from the your producer items.
If you want to produce something you must spending something its a nature!
Whatever, its a basic game and prices coming your change in the this day.
Try dont to perish your animals and plants.
I think thats enough. Good Luck <3


# Screenshots
#![Screenshot 2023-06-25 122858](https://github.com/ErenElagz/PyFarm/assets/125195062/61f4e1af-892b-4ad0-aacc-65bea44e7e24)
![Screenshot 2023-06-25 122842](https://github.com/ErenElagz/PyFarm/assets/125195062/172a41da-7748-496a-97aa-5f41745d7f04)
![Screenshot 2023-06-25 122908](https://github.com/ErenElagz/PyFarm/assets/125195062/7c1667fb-6157-4625-a036-81058ba7f024)
![Screenshot 2023-06-25 122920](https://github.com/ErenElagz/PyFarm/assets/125195062/7360476f-66dc-496f-baa9-97022fcb6b3e)
![Screenshot 2023-06-25 123015](https://github.com/ErenElagz/PyFarm/assets/125195062/51bf062d-1379-4e93-a6cb-3ce872651a4d)


## License
[MIT](https://choosealicense.com/licenses/mit/)


## 🔗 Links
[![Github](https://img.shields.io/badge/my_portfolio-000?style=for-the-badge&logo=ko-fi&logoColor=white)](https://github.com/ErenElagz)
[![Twitter](https://img.shields.io/badge/twitter-1DA1F2?style=for-the-badge&logo=twitter&logoColor=white)](https://twitter.com/ErenElagz)

## Support, Contact and Feedback
If you have any question or feedback, please reach out to me at elagzeren@gmail.com


",1,1,1,0,farm,"[farm, oop, python, python-game-development, text-based-game]",00000
1036,JimFarm,AdsGames,AdsGames,https://github.com/AdsGames/JimFarm,https://api.github.com/repos/AdsGames/JimFarm,A massive procedurally generated world in which you can set up a farm and collect resources.,"# JimFarm

Our submission to ToJam 11.

A massive procedurally generated world in which you can set up a farm and collect resources.

[![Code Smells](https://sonarcloud.io/api/project_badges/measure?project=AdsGames_JimFarm&metric=code_smells)](https://sonarcloud.io/summary/new_code?id=AdsGames_JimFarm)
[![Bugs](https://sonarcloud.io/api/project_badges/measure?project=AdsGames_JimFarm&metric=bugs)](https://sonarcloud.io/summary/new_code?id=AdsGames_JimFarm)

## Demo

[Web Demo](https://adsgames.github.io/JimFarm/)

## Setup

### Dependencies

To pull the submodules, run the following command:

```bash
git submodule update --init --recursive
```

### Windows (MSYS2)

```bash
pacman -S mingw-w64-i686-gcc-libs mingw-w64-i686-SDL2 mingw-w64-i686-SDL2_mixer mingw-w64-i686-SDL2_image mingw-w64-i686-SDL2_ttf
```

### Mac OS

```bash
brew install sdl2 sdl2_image sdl2_ttf sdl2_mixer
```

### Linux

```bash
sudo apt install libsdl2-dev libsdl2-image-dev libsdl2-ttf-dev libsdl2-mixer-dev
```

### Build

```bash
cmake .
make
```

### Build Emscripten

```bash
emcmake cmake .
make
```
",1,1,3,4,farm,"[asw, farm, farming, game, procedural-generation, sandbox, sdl2, tojam, tojam11]",00000
1037,WINDOW,sebasanper,N/A,https://github.com/sebasanper/WINDOW,https://api.github.com/repos/sebasanper/WINDOW,Wind Farm Integrated Design and Optimisation Workflow,"![alt text](logowindow.png)
# WINDOW
Wind Farm Integrated Design and Optimisation Workflow

WINDOW is a Multidisciplinary Design, Analysis and Optimisation (MDAO) workflow for the domain of offshore wind farms.

Description of the disciplines included in this analysis tool will follow.
",1,1,3,0,farm,"[design, energy, farm, multidisciplinary-design-project, offshore, power, wind]",00000
1038,kmetija-cehovin,artnetik,artnetik,https://github.com/artnetik/kmetija-cehovin,https://api.github.com/repos/artnetik/kmetija-cehovin,Kmetija Čehovin,"# Kmetija Čehovin website

## Build Setup

```bash
# install dependencies
$ yarn install

# serve with hot reload at localhost:3000
$ yarn dev

# build for production and launch server
$ yarn build
$ yarn start

# generate static project
$ yarn generate
```

For detailed explanation on how things work, check out [Nuxt.js docs](https://nuxtjs.org).
",1,1,2,0,farm,"[cherries, farm, turism, wine]",00000
1039,rabbitFarm,ivayloivanof,N/A,https://github.com/ivayloivanof/rabbitFarm,https://api.github.com/repos/ivayloivanof/rabbitFarm,Rabbit Farm,"{'message': 'Not Found', 'documentation_url': 'https://docs.github.com/rest/repos/contents#get-repository-content'}",1,1,2,0,farm,"[beast, farm, software, testing]",00000
1040,DeviceIO,SergKhram,N/A,https://github.com/SergKhram/DeviceIO,https://api.github.com/repos/SergKhram/DeviceIO,Farm-like service to manage ios/android devices,"# DeviceIO
Farm-like service to manage ios/android devices with ui",1,1,2,4,farm,"[adam, adb, allure, allure-report, allure2, android, docker, emulator, farm, grpc, idb, ios, marathon, rest, rest-api, simulator, vaadin]",00000
1041,IrisFarmBot,MrSmitix,N/A,https://github.com/MrSmitix/IrisFarmBot,https://api.github.com/repos/MrSmitix/IrisFarmBot,IrisFarmBot - автоматический бот для фарма ирис-койнов,"# IrisFarmBot (deprecated)
IrisFarmBot - автоматический бот для фарма ирис-койнов


## Этот бот больше не работает, эта версия больше не поддерживается! Новый, улучшенный IrisFarmBot находится в [IrisFarmBotWeb](https://github.com/MrSmitix/IrisFarmBotWeb)
Если техничка вам не интересна и вообще вы на этом сайте в первый раз, можете сразу подключаться к фарму на [IrisFarmBot.ru](https://IrisFarmBot.ru/)

## А как это работает?

Данный бот просто автоматизирует отправку комментария с текстом `Ферма` к [посту](https://vk.com/iris_cm?w=wall-174105461_35135). В принципе вы можете делать это и в ручную, но зачем?

## Инструкция по запуску

Для работы бота можно использовать бесплатный сервис [Heroku](https://heroku.com), далее в инструкций будет рассматриваться запуск именно на нём. Но так же бота без проблем можно запустить на собственном пк или сервере.

Инструкция:
1. Зарегистрироваться на [Heroku](https://heroku.com) и создать приложение.
2. Скопировать репозитой к себе в профиль и изменить настройки в файле [settings.py](https://github.com/MrSmitix/IrisFarmBot/blob/main/settings.py) если это требуется.
3. Во вкладке `Deploy` в панели управления приложением выбрать `GitHub`, найти репозиторий с этим ботом и подключить его к приложению нажав кнопку `Connect`.
4. Во вкладке `Settings` найти `Config Vars` и добавить новую переменную окружения с KEY `TOKENS` и VALUE `ВАШ ТОКЕН` (или несколькими токенами через запятую `токен1,токен2,токен3`) (получить токен можно на [vkhost](http://vkhost.github.io)).
5. Во вкладке `Deploy` нажать на кнопку `Deploy Branch` и дождаться сборки проекта.
6. Далее потребуется [Heroku CLI](https://devcenter.heroku.com/articles/heroku-cli) который нужно установить
7. Авторизоваться в Heroku CLI
```shell script
heroku login
```
8. Запустить бота
```shell script
heroku ps:scale clock=1 --app НАЗВАНИЕ_ВАШЕГО_ПРИЛОЖЕНИЯ_В_HEROKU
```

Через заданный в `DELAY` промежуток времени (по умолчанию 4 часа и 15 секунд) бот начнёт работать, и каждые `DELAY` секунд будет получать вам ирис-койны. Но не чаще чем раз в 4 часа.

## Проверка работы бота

Вы можете проверить то что бот работает просмотрев его логи командой
```shell script
heroku logs --tail --app НАЗВАНИЕ_ВАШЕГО_ПРИЛОЖЕНИЯ_В_HEROKU
```
В случае если по какой-то причине бот перестал работать, вы так же можете узнать причину просмотрев логи.
ВАЖНО! При стандартных настройках приложения комментарий будет удаляться, как и уведомление от группы Iris. 

## Отключение бота

Для отключения бота достаточно просто удалить приложение в Heroku, что можно сделать нажав на кнопку `Delete app...` во вкладке `Settings`. Удаление репозитория не отключит бот!

Или выполнив команду
```shell script
heroku ps:scale clock=0 --app НАЗВАНИЕ_ВАШЕГО_ПРИЛОЖЕНИЯ_В_HEROKU
```

## Очень интересно но ничего не понятно, можно как-то попроще?

Можно, вы можете получить токен на [vkhost](http://vkhost.github.io) и прислать его мне [ВКонтакте](https://vk.com/mrsmitix) или [Телеграм](https://t.me/MrSmitix) с просьбой подключить к фарму ирисов. И я добавлю его в своего уже запущенного и рабочего бота. Но настоятельно рекомедую НИКОГДА и НИКОМУ не сообщать свой токен, так как по сути это тоже самое что и логин с паролем от вашей страницы.
",1,1,2,0,farm,"[bot, farm, iris, vk]",00000
1042,MultiCam,conceptfarm,N/A,https://github.com/conceptfarm/MultiCam,https://api.github.com/repos/conceptfarm/MultiCam,MultiCam Submitter set of scripts all for easy 3dsmax scene submission to Deadline Render Manager.,"{'message': 'Not Found', 'documentation_url': 'https://docs.github.com/rest/repos/contents#get-repository-content'}",1,1,0,3,farm,"[3dsmax, deadline, farm, rendering]",00000
1043,Project-Tiny-Farm,kathyswu,N/A,https://github.com/kathyswu/Project-Tiny-Farm,https://api.github.com/repos/kathyswu/Project-Tiny-Farm,Project Zero - General Assembly Software Engineering Immersive Bootcamp First Project,"# Project-Tiny-Farm
> Craft a tiny farm by raising one of six animals: goat, sheep, pig, cow, chicken, and bunny. Try to keep your animal alive for 5 minutes through feeding, petting, cuddling, and putting it to sleep. If any of the meters reach zero, your animal will pass away. 
> Live demo [_here_](https://kathyswu.github.io/Project-Tiny-Farm/).

## Table of Contents
* [General Info](#general-information)
* [Version](#version)
* [Features](#features)
* [Screenshots](#screenshots)
* [User Stories](#user-stories)
* [Wireframe](#wireframe)
* [Room for Improvement](#room-for-improvement)
* [Acknowledgements](#acknowledgements)
* [Contact](#contact)

<hr> 

## General Information
- This project was created as a first project for the Software Engineering Immersive Program at General Assembly
- The purpose of this project was to reproduce a game mechanic (inspired by the &copy;Tamagotchi) of using timers to showcase the pet's current state and trying to keep it alive through actionable items that increment the pet's hunger, happiness, and sleepiness stats.

<hr> 

## Version
- Tiny Farm - version 1.0

## Features
The current features:
- Choose the type of farm animal you want to raise
- Six different options: goat, sheep, pig, cow, chicken, bunny
- Name your farm animal
- Feed, Cuddle, Pet, and make your animal go to sleep
- Timer counts how long the animal has been alive
- The animal morphs as it ages from a baby to an adult
- The animal shows different animations and message for each actionable item
- The animal changes into a ghost upon death
- Endgame screens feature the ability to reset game and play from the beginning


## Screenshots
![Home Screen](Images/demo/demo1.png)
![Menu Screen](Images/demo/demo2.png)
![Sleep](Images/demo/demo3.png)
![Pet](Images/demo/demo4.png)
![Successful](Images/demo/demo5.png)
![Death](Images/demo/demo6.png)
![Game Over](Images/demo/demo7.png)


## User Stories

1. When the user loads the game, they are greeted with a start menu that populates the button to start the game.

2. When the user presses the start button, the game screen transitions into a screen asking for the user to choose one of six farm animals by clicking on their associated picture (chicken, bunny, cow, goat, sheep, pig). Upon clicked, the animal's icon will light up and the user must enter a name for the animal in an input-field. The user must enter a valid name (not empty string) for the confirm button to work and bring them to the game screen.

3. After submitting, the screen will transition to the game screen showcasing revealing the baby animal who is sleeping. The user may wake the animal by clicking on the image of it. The timer on the message section will show time kept alive and start counting up, the age of the animal will start at 0 and increment over time as well. 

4. Upon reveal, the hunger, happiness, and sleepiness meters of the animal appears along with 3 new buttons on the bottom of the screen (feed, cuddle, and sleep). The meters begin to decrease by different rates and the user must interact with the buttons in order to feed, cuddle, and make the animal go to sleep. When the buttons are pressed, the corresponding metric to the actionable button will increase depending on the type of animal.

5. As the time passes and the animal will be animated across the screen, moving left and right. While the animal is still alive, the animal will start growing (two stages: baby -> adult), 3 minutes of being kept alive the animal will grow to full adult size.

6. If animal is kept alive in adult size for 2 more minutes (total game time and time kept alive reaches 5 minutes), then the game will be over and the animal will be sent to a loving barn, so the player gets the Game Over - Successful screen and can choose to raise another animal by pressing the reset game button.

7. At any point if the hunger, sleep, or happiness, meter reaches 0, the animal passes away and the Game over - RIP screen appears where the player can press the reset game button to reset the entire game from the beginning.

## Wireframe
![Wireframe](TinyFarm-Wireframe.png)

## Project Status
> <h4> <strong>Complete</strong></h4>
* Link to [presentation](https://docs.google.com/presentation/d/1YKgK20nHuoWfF-yKCsRGYPQ4izXKmx26RI6OQjEAmXE/edit#slide=id.gf00c15a6b2_0_40)


## Room for Improvement

Room for improvement:
- DRY code!!
- Clean up CSS
- Better form validation on name input

To do:
- Have multiple animals
- Introduce scoring functionality
- Have barn where animals are sent to successfully add points to score
- Add sound effects and music
- Add birthing feature using classes

<hr>

## Acknowledgements
Credits to Licenses and Assets Used:
- RPGUI by [RonenNess](https://github.com/RonenNess/RPGUI)
- Cozy Farm Asset Pack by [Shubibubi](https://shubibubi.itch.io/cozy-farm)
- Google Fonts
- jQuery
- and many thanks to Jake, my number one supporter!


## Contact
Created by [@kathyswu](https://github.com/kathyswu) - feel free to contact me!
",0,0,1,0,farm,"[animals, bootcamp-project, css, farm, game, gamedev, html, javascript, jquery, project, rpgui]",00000
1044,ske-pi,sre990,N/A,https://github.com/sre990/ske-pi,https://api.github.com/repos/sre990/ske-pi,Data parallel and stream parallel skeletons implemented in erlang,"# SkePi
Data parallel and stream parallel skeletons implemented in erlang.

## compilation, debug and cleanup
Once you have moved to ske-pi's root directory, you can compile all sources to object code.


` make all ` or ` make ` may be used to compile with debug mode turned on.

In this mode, some information regarding inter-process communication (and timeouts, if any have occurred), as well as function calls for each skeleton will be saved to a log file (located inside the *ske-pi/logs* directory by default).

` make all DEBUG= ` or ` make DEBUG= ` will compile with debug mode turned off.

` make clean ` may be used to remove the directory containing all the object files and keep the log files.

` make cleanall ` will remove both object files and the log files generated previously.

## usage examples
Each module has its own usage function printing a brief description and giving a simple usage example.


Once you have compiled ske-pi, you may:
* start the Erlang shell with ` cd ebin; erl ` from ske-pi's root directory
* call the usage function for a given skeleton. Via the Erlang shell, use the following command:
```
> <module_name>:usage().
```

* additionally, you may test the stream parallel skeletons' performance using an example with a default configuration. Like so:
```
> test_stream:benchmark().
```

* similarly, you may run the data parallel skeletons example. Write:
```
> test_mapred:benchmark().
```

* the above is also available for the skeletons implementing the google mapreduce skeleton. Try it with:
```
> test_mapred_google:benchmark().
```

* for the stream parallel skeletons example, it is possible to configure the length of the list, the length of the chunks onto which the list is split, the number of worker processes and the number of schedulers used (N.B. dependent on the machine used to run the tests)
* you may also configure the length of the list, the length of chunks and the number of schedulers used for the data parallel skeletons example
* for the google mapreduce example, you may input the name of a directory containing your own test files, an atom to be used to perform an unix grep-like operation on the test files and the number of scherdulers used (please note that the directory with your own test files **must** be located inside ske-pi's top directory and it **must** be in string format)
* the erlang shell may be exited with the following command: ` q(). `

## acknowledgements
The stream skeleton (*stream.erl*) is taken and then modified from the [skel](https://github.com/ParaPhrase/skel) library for the [ParaPhrase Project](http://calvados.di.unipi.it/paragroup/projects/).
",0,0,0,6,farm,"[data-parallelism, erlang, farm, mapreduce, parallel, parallelism, skeletons, stream-parallelism]",00000
1045,gili,karolus-git,N/A,https://github.com/karolus-git/gili,https://api.github.com/repos/karolus-git/gili,A self hosted gift list (FARM Stack),"# [ In Development ] GILI, your own gift list application

A simple way to exchange your wish lists to friends :
- Create an account 
- Login
- Create lists
- Add items to your lists 
- Add friends
- And share your lists with them !

## The FARM Stack

* FastAPI
* React
* MongoDB

## Configure

Create your `.env` file in the root folder: 

```
MONGO_USER=""yourusername""
MONGO_PWD=""yourpassword""
MONGO_DATABASE=""gili""
MONGO_PORT=""yourmongoserverport""
MONGO_IP=""yourmongoserverIP""
```

## Run
```
docker-compose up --build
```

Go to `localhost:3000`



## Screenshots

<img src=""assets/home.png"" width=""600"" />
<img src=""assets/register.png"" width=""600"" />
<img src=""assets/login.png"" width=""600"" />
<img src=""assets/lists.png"" width=""600"" />
<img src=""assets/items.png"" width=""600"" />
<img src=""assets/settings.png"" width=""600"" />

# TODOs
- [ ] Fill the README file
- [ ] Write comments, a lot !
- [ ] /!\ Do not push the all user settings... pwd included /!\
- [ ] Add try/catch everywehere to handle errors
- [ ] Make the design prettier (usercards) 
- [ ] Add a licence file
- [ ] Enable the user to modify the avatar
- [ ] Be able to stroe images
- [ ] Send mails to users
- [ ] Invite new users by mail
- [ ] Comment a wish (for more info)
- [ ] Add a price range
- [ ] Ask for the same wish multiple times
- [ ] Find out why ethe logout button got a 'max depth exceeded' error
",0,0,1,0,farm,"[docker-compose, farm, fastapi, friends, gift, mongodb, react, social-network, wishlist]",00000
1046,reimagined-octo-funicular,kelompok-oop-sekar,kelompok-oop-sekar,https://github.com/kelompok-oop-sekar/reimagined-octo-funicular,https://api.github.com/repos/kelompok-oop-sekar/reimagined-octo-funicular,Farm Simulation Game using C++ object oriented programming,"# reimagined-octo-funicular
",0,0,2,0,farm,"[cpp, farm, game, oop, simulation, simulator, terminal, terminal-game]",00000
1047,Yuibot-Farm,KnlnKS,N/A,https://github.com/KnlnKS/Yuibot-Farm,https://api.github.com/repos/KnlnKS/Yuibot-Farm,Simple Deno application that will farm for resources from the Yuibot economy.,"# 🚜🌸 Yuibot Farm 🌸🚜
<a href=""https://deno.land/""><img src=""https://img.shields.io/badge/deno-^1.8.0-lightgrey?logo=deno"" alt=""Deno""></a>
<a href=""https://gitmoji.dev""><img src=""https://img.shields.io/badge/gitmoji-%20😜%20😍-FFDD67.svg?style=flat-square"" alt=""Gitmoji""></a>

## 📚 About
Simple Deno application that will farm for resources from the Yuibot economy.
See here for more details on [Yuibot](https://discordyui.net/). 
To run simply provide url of discord channel to farm in and account's authorization token.
Project can be run with Deno or with Docker.

## 🦕 Running with Deno 
Have Deno installed and run the following, replacing the variables:  
`deno run --allow-net index.ts --url=$URL --auth=$AUTH`

## 🐳 Running with Docker
Have Docker installed and run the following, replacing the variables:  
`./docker-build.sh --url=""$URL"" --auth=""$AUTH""`
",0,0,1,0,farm,"[deno, discord, docker, farm, typescript]",00000
1048,farm-dashboard-prototype,eolatham,N/A,https://github.com/eolatham/farm-dashboard-prototype,https://api.github.com/repos/eolatham/farm-dashboard-prototype,"A prototype for a farmer utility application built with JavaFX as an exercise in using design patterns such as entity-control-boundary, composite, visitor, and adapter","# Farm Dashboard Prototype

Author: Eric Latham

Email: ericoliverlatham@gmail.com

## Description

I initially developed this program as a team leader for a final project in a software engineering course taught by [Dr. Ramaraju Rudraraju](https://www.linkedin.com/in/ramarajur/) at [UAB](https://www.uab.edu/) with the help of Tahseen Robbani, Wesley Hataway, Daniel Swinney, and Hardik Patel.

This program is a prototype for a farmer utility application built with [JavaFX](https://docs.oracle.com/javase/8/javase-clienttechnologies.htm) as an exercise in using design patterns such as [entity-control-boundary](https://en.wikipedia.org/wiki/Entity-control-boundary), [composite](https://en.wikipedia.org/wiki/Composite_pattern), [visitor](https://en.wikipedia.org/wiki/Visitor_pattern), and [adapter](https://en.wikipedia.org/wiki/Adapter_pattern).

![screenshot](img/screenshot.png)

## Classes

### Entity Classes

- **ItemComponent** class (composite, pro-transparency)
  - **Item** class
  - **ItemContainer** class
- **ItemComponentVisitor** class
  - **AggregatePurchasePriceVisitor** class
  - **AggregateMarketValueVisitor** class
- **AnimatedDroneInterface** class
  - **AnimatedDrone** class
  - **TelloDroneAdapter** class (adapts **TelloDrone** to **AnimatedDrone**)
- **TelloDrone** class (provided by Seth)

### Boundary Classes

- **Dashboard** class (main)

### Control Classes

- **DashboardController** class

### Other Classes

All classes other than `TelloDroneAdapter` in [the physical drone module](src/entity/adapter/physical) were provided by [Seth Lewis](https://gitlab.cs.uab.edu/jesusaur) from his [drone library](https://gitlab.cs.uab.edu/jesusaur/CS420_520_Drone_Library) in order for the adapter design pattern to be completed.

### Class Diagram

![Class Diagram](img/class_diagram.png)

## Features

### Farm Items Tree View

I used a [TreeView](https://docs.oracle.com/javase/8/javafx/api/javafx/scene/control/TreeView.html) object to allow the user to add, edit, and remove `Items` and `ItemContainers` from the [Farm Map](#farm-map).

### Farm Map

I used a [Group](https://docs.oracle.com/javase/8/javafx/api/javafx/scene/Group.html) object to contain and display the shape of each `Item` and `ItemContainer`, as well as the drone icon that is used in the [drone animation](#drone-animation).

### Drone Animation

I used an [ImageView](https://docs.oracle.com/javase/8/javafx/api/javafx/scene/image/ImageView.html) object to display the drone icon in the farm map and [SequentialTransition](https://docs.oracle.com/javase/8/javafx/api/javafx/animation/SequentialTransition.html) objects to animate the drone icon for two different flight simulations:

- `Item`/`ItemContainer` visits
- full farm scans

Note that the drone animation feature is intended to mirror what a real drone would do on a real farm if commanded by the `TelloDroneAdapter` class. However, the `TelloDroneAdapter` is untested on real drones and currently only exists for simulation purposes.

### Automatic Save/Load

#### Description

I implemented a bonus feature that does the following things:

- automatically saves the root `ItemContainer` of the `Dashboard` every time a component is added, updated, or deleted
- automatically loads the previous saved root `ItemContainer` when the `Dashboard` is re-opened

This feature allows the `Dashboard` to ""remember"" its previous state so that the user does not have to recreate all of the desired farm items each time they run the application.

#### Implementation

To implement this feature, I added static methods in the `ItemContainer` class for saving and loading `ItemContainer` objects via JSON serialization and deserialization.

```java
public static void saveJSON(ItemContainer itemContainer, String filePath);
```

I used the `saveJSON` method in the `DashboardController` class to save the root `ItemContainer` as a JSON string in a file named `rootItemContainer.json` whenever changes were made by the user.

```java
public static ItemContainer loadJSON(String filePath);
```

I used the `loadJSON` method in the `DashboardController` class to load the previous root `ItemContainer` (saved as a JSON string in `rootItemContainer.json` by `saveJSON`) whenever the `Dashboard` and `DashboardController` objects are initialized (which is whenever the application starts).

In both `saveJSON` and `loadJSON`, I leveraged the power of [the Gson library](https://github.com/google/gson) to serialize and deserialize `ItemComponent` objects to/from JSON. `Gson` is a popular tool used for Java object-JSON serialization and deserialization, and I found it easy to use, especially with the help of its excellent documentation.

Also, I added the required `Gson` jars as dependencies in the project so that there would be no need to import `Gson` manually when building and running the project.

## How To Run

(assuming you have **Eclipse IDE** and **Java JDK 8** installed)

- clone this repository into `farm-dashboard-prototype`
- open **Eclipse**
- select **File** -> **Import** -> **Existing Projects into Workspace** -> **Next** -> **Browse**
- locate the cloned `farm-dashboard-prototype` directory in the filesystem dialogue and select to open it
- select **Finish**
- click the green play button labeled ""Run"" on the upper icon bar
",0,0,2,0,farm,"[adapter-pattern, animation, composite-pattern, desgin-pattern, drone, farm, javafx, visitor-pattern]",00000
1049,farm-plugin-weapp,molvqingtai,N/A,https://github.com/molvqingtai/farm-plugin-weapp,https://api.github.com/repos/molvqingtai/farm-plugin-weapp,Building Native WeChat Mini Programs in Farm.,"# farm-plugin-weapp (WIP)

Building Native WeChat Mini Programs in [Farm](https://github.com/farm-fe/farm)
",0,0,1,0,farm,"[farm, miniprogram, plugin, weapp, wechat, wxml, wxss]",00000
1050,MediaWikiFarm-sample-setup,iSCInc,iSCInc,https://github.com/iSCInc/MediaWikiFarm-sample-setup,https://api.github.com/repos/iSCInc/MediaWikiFarm-sample-setup,Sample wiki farm setup with the MediaWikiFarm extension,"# MediaWikiFarm Sample Setup

> Sample wiki farm setup with the [MediaWikiFarm extension](https://www.mediawiki.org/wiki/Extension:MediaWikiFarm).
",0,0,1,0,farm,"[data, extension, farm, iscinc, linux, mediawiki, mediawikifarm, sample, server, setup, ubuntu, unix, wiki, wiki-farm]",00000
1051,gruntwork-server,apekearo,N/A,https://github.com/apekearo/gruntwork-server,https://api.github.com/repos/apekearo/gruntwork-server,A Job List For Rural Communities to Connect Via Texting and Web,"{'message': 'Not Found', 'documentation_url': 'https://docs.github.com/rest/repos/contents#get-repository-content'}",0,0,2,0,farm,"[farm, job-board, job-listing, rural, rural-communities, rural-development, texting, twilio-sms-api, workers, workers-rights]",00000
1052,cs-twinks-creator,vladislav-puzyrev,N/A,https://github.com/vladislav-puzyrev/cs-twinks-creator,https://api.github.com/repos/vladislav-puzyrev/cs-twinks-creator,Создание и настройка твинков для CS 1.6,"## CS Twinks Creator

Этот скрипт создает и настраивает твинки для `CS 1.6` через программу `Sandboxie`. Установите один игровой клиент,
настройте `config.json` и `userconfig.cfg`, затем он сгенерирует нужное количество копий клиентов, а так же настроит за
вас `Sandboxie`.

Возможности:

* Разные ники и SteamID.
* Массовое открытие, закрытие и сворачивание твинков.
* Автоматическое подключение к серверу.
* Обход анти-афк плагинов.
* Указание задержки между запуском твинков.
* Указание количества желаемых твинков.
* Настройка твинков через файл конфигурации `userconfig.cfg`.
* Возможность модификации клиента. Установка читов, кастомные лого и прочее.

Варианты использования:

* Фрикилл на джайлах. Чтобы другие игроки не переводили вас за заключенных можно заполнить баланс охраны твинками.
* Фарм на серверах с лвл системой.

## Предварительная настройка

1. Установите `Node.js`.
2. Установите `Yarn` командой в терминале:

```shell
npm install -g yarn
```

3. Установите `Sandboxie-Plus`.
4. Может понадобиться добавить `cs-twinks-creator` в исключения антивируса. Это нужно из-за того,
   что `SteamID Changer By OSTROG` как и большинство читов распознается как вирус. Он никогда не вызывал у меня проблем,
   но так как исходный код закрыт, используйте его на свой страх и риск.

## Требования к игровому клиенту

Не каждая сборка `CS 1.6` подходят для создания твинков. От используемой сборки требуется:

1. Запускаться через песочницу `Sandboxie`.
2. Работать со `SteamID Changer By OSTROG`.
3. Исполнять файлы конфигурации, такие как `userconfig.cfg`.

## Проверенные игровые клиенты

Пожалуйста, дайте знать если вы найдете новый клиент. Следующие клиенты полностью подходят для создания твинков:

* [Counter-Strike 1.6 Clean English](https://xn----7sba0bce7bg3c.xn--p1ai/product/44-Counter_Strike_16_Original_ENG.html)

## Создание твинков

Перед запуском убедитесь что проделаны шаги по предварительной настройке. Учтите что скрипт перезапишет
настройки `Sandboxie`, если вы не хотите потерять их сохраните вашу конфигурацию.

1. Если вы хотите использовать собственный клиент `CS 1.6` поместите ваш клиент в директорию `user-data/clients/CS`.
   Иначе пропустите этот шаг. **Первоначальный клиент будет оставаться неизменным**
2. Настройте параметры запуска клиентов и их количество в файле `user-data/config.json`. Смотрите описание настроек
   ниже.
3. Настройте файл конфигурации `user-data/userconfig.cfg`, который содержит наиболее распространенные команды для
   первоначальной настройки клиента. Вы можете закомментировать или раскомментировать существующие настройки.
4. По желанию поместите модификации клиента в папку `user-data/mods` (вх, кастомные лого и прочее). Эта папка уже
   содержит `SteamID Changer By OSTROG` и будет слита с каждым твинком при их создании. Если вам нужна папка `cstrike`,
   создайте ее внутри `mods`.
5. Откройте терминал в директории `cs-twinks-creator` и выполните команду, чтобы установить зависимости проекта:

```shell
yarn install
```

6. В директории `cs-twinks-creator` выполните команду, чтобы запустить копирование и настройку твинков:

```shell
yarn run bootstrap
```

7. Чтобы открыть все твинки, запустите сгенерированный `start.bat` или выполните команду в
   директории `cs-twinks-creator`:

```shell
yarn run start
```

## Очистка системы

Для очистки твинков, сброса настроек `Sandboxie` и удаления `start.bat` выполните команду в
директории `cs-twinks-creator`:

```shell
yarn run cleanup
```

## Конфигурация (config.json)

* startTimeout — задержка после запуска каждой копии клиента
* windowedMode — запускать в оконном режиме
* lowGraphics — запускать с низкой графикой
* highPriority — запускать с высоким приоритетом
* shuffleClients — перемешивать клиенты
* activeClients — количество клиентов к запуску (min = 1, max = 32)
* clients — список клиентов (можно указать постоянный nickname и steamId)
  * nickname — никнейм (например - nickname: ""Player"")
  * steamId — steamId (например - steamId: ""8483213"")

## Failed to initialize authentication interface

Для решения этой ошибки проделайте следующее:

1. Запустите `regedit.exe`.
2. Найдите и удалите `HKEY_CURRENT_USER\Software\Valve`.
3. Если у вас есть `Steam`, придется перезайти в аккаунт.

## Как закрыть все твинки?

Вы можете убить все процессы `hl.exe` через контекстное меню `Sandboxie` нажав на `Завершить все процессы`.

## Как свернуть все твинки?

Вы можете свернуть / развернуть все программы в `Windows` горячей клавишей `Win + D`.

## Боты, искусственный интеллект

Если вам нужны умные игровые боты, обратите внимание на программу `XFakePlayers`.
",0,0,1,0,farm,"[counter-strike, cs, farm, freekill, sandboxie, smurfs, twinks]",00000
1053,documentation,FarmDyn,FarmDyn,https://github.com/FarmDyn/documentation,https://api.github.com/repos/FarmDyn/documentation,Source code for the FarmDyn documentation 📚,"# FarmDyn Documentation
This is the manual for the FarmDyn documentation.
In this document the process on how a) to work on the documentation and b) build the website or PDF version of it will be described.

Please feel encouraged to play around with the documentation: There's nothing that can go broken (everything is under version control), and you'll see that writing Markdown is a breeze!

The latest version of the documentation will be available on
[http://www.ilr.uni-bonn.de/em/rsrch/farmdyn/FarmDynDoku/index.html](http://www.ilr.uni-bonn.de/em/rsrch/farmdyn/FarmDynDoku/index.html)

## Installation

No need to install. Just head to

`N:\em\work1\Pahmeyer\FarmDyn\FarmDynDoku\FarmDyn`


## Getting up and running
The documentation lives in the docs folder. Instead of a Word document, the documentation is written in Markdown. Markdown is a simple markup language. That means, instead of clicking buttons for making a text bold, italic or else, you can do it through simple commands. Please don't be afraid, as writing in Markdown does require almost no learning and should be as easy to use as Word. The main benefit over a Word file is that we can easily create a Website and a PDF from the same documentation source (among other benefits). You can read more about Markdown [here](https://www.markdownguide.org/getting-started).

Every chapter of the documentation is in it's own file with the file extension `.md`. The `.md` files can be opened and edited with any text editor of your choice (e.g. Notepad, KEdit, TextMate), however, it is recommended to use [Atom](https://atom.io/), because it has many built in features that help you to write in Markdown. The following hints and shortcuts will assume the usage of Atom.

### Starting a development version of the website with live updates
When working on the documentation, it is helpful to see the changes in realtime. This way you can also check if your formulas were typeset correctly or if images appear the way they should.

You can get a quick and nice preview by pressing `ctrl-shift-m` when you have a Markdown file open in Atom. However, this will not show you exactly how the website will look like.

In order to start the development website simply double-click the `startDevServer.cmd` file.

![Location of the startDevServer.cmd file](assets/folder_overview_devServ.png)

A new browser window (or tab, if the browser was already opened) will appear saying ""This Website is not available"". Now switch back to the command prompt window that was openend by `startDevServer.cmd` (it's the black icon in the taskbar) and wait until it says `Serving on http:...`.

![The command prompt window stating that the website is served](assets/cmd_window.png)

This will take 0 - 2 minutes. Now reload the browser window, and the Website will be displayed.

#### Changing the structure of the website
The structure of the website is determined by the contents of the `mkdocs.yml` file.

![The mkdocs.yml file contains all information relevant for the structure of the website.](assets/folder_overview_yml.png)

Everything indented after the `pages:` directive will be rendered as a page on the website.

The notation works as follows
```
- This will be the navigation headline: TheMatchingMarkdownFile.md
```

The file names will be relative to the `docs` folder.

See the following contents of the `mkdocs.yml` file for working examples of relative paths:
```yml
pages:
    - FarmDyn: index.md
    - About: about.md
    - Introduction: introduction.md
    - Dynamic Character: dynamics.md
    - Risk and Risk behavior: risk.md
    - GHG Accounting: ghgAcc.md
    - Coefficient Generator: coeffGen.md
    - Technical Realization: technical.md
    - Graphical User Interface: gui.md
    - References: References.md
    - Appendix: appendix.md
    - The Template Model:
       - Introduction: template/introduction.md
       - Herd Module: template/herd_module.md
       - Feeding module: template/feeding_module.md
       - Cropping, Land and Land Use: template/cropping__land_and_land_use.md
       - Labour: template/labour.md
       - Stables: template/stables.md
       - Other Type of Buildings: template/other_type_of_buildings.md
       - Farm Machinery: template/farm_machinery.md
       - Investments, Financing and Cash Flow Definition: template/investments__financing_and_cash_flow_definition.md
       - Manure: template/manure.md
       - Synthetic Fertilizers: template/synthetic_fertilizers.md
       - Plant Nutrition: template/plant_nutrition.md
       - Environmental Accounting Module: template/environmental_accounting_module.md
       - Biogas Module: template/biogas_module.md
    - Staff:
       - Development: staff/development.md
```
will be rendered on the website like the following:

![The navigation bars on the FarmDyn website](assets/website_nav.png)

As the example shows, all top level indents will be rendered under the **FarmDyn** tab (all vertical links, see FarmDyn, About, Introduction, etc.). A new tab, e.g. **The Template Model** (horizontal links), is introduced by `- The Template Model:` without specifying a file name afterwards. Now all sub-pages of the Template Model tab need to be on the next indentation level, as shown above.

It is good practice to store all markdown files belonging to a certain tab in a subfolder in the `docs` directory (see `template` or `staff` folders.)

### Building the website and publishing it online
If you're happy with the changes you made, you can directly publish the website online. In order to do so, just double click the `buildWebsite.cmd` file.

![The buildWebsite.cmd file will publish the documentation under [http://www.ilr.uni-bonn.de/em/rsrch/farmdyn/farmDynDoku/](http://www.ilr.uni-bonn.de/em/rsrch/farmdyn/farmDynDoku/)](assets/folder_overview_buildSite.png)

Obviously, this will only work if you have WRITE access to `\\agpserv2\ilrweb\em\rsrch\farmdyn\FarmDynDoku`.

### Building a PDF / Word document
In case you would like to create a printable (publishable) version of the documentation, just double-click the `createPDFFile.cmd` or respectively `createWordFile.cmd` file.

![These two cmd files will create either a printable PDF or Word Version of the documentation.](assets/folder_overview_doc.png)

The resulting documents can be found in the `print` folder once the conversion is done.

#### Changing the structure of the document
The structure of the print documents can be changed by adapting the `tableOfContents.txt` file in the `print` folder.

The following `tableOfContents.txt` file
![Overview of the tableOfContents.txt file](assets/tocFile.png)

will result in the following table of contents in a PDF
![Excerpt of the Table of Contents in the PDF](assets/tocPDF.png)

As you can see, each file path given in the `tableOfContents.txt` file will turn out to be a top-level heading in the Table of Contents, with the sub-level headings specified in those files.

You may notice a couple of things here: in the first line, a file called `print/frontMatter.yml` is referenced. This file will ONLY be used when a PDF file is created (not Word), and stores all information which will be displayed on the first page of the PDF (e.g. Title, Authors, Abstract ...).

Another thing of interest is the next line `docs/index_print.md`. Sometimes, it may be appropriate to have some information on the website that does not need to be in a printable version. In this case, the original `docs/index.md` file features an overview image of the FarmDyn results exploiter. In case we do not want the image to be in the printable version, we can create a copy of the `index.md` file and append the wording `_print` for future reference. In this file, we delete the reference to the image (or may do other alterations). By referencing this other file in the `tableOfContents.txt` file, we now have the chance of adapting the printable version to our needs, while mostly using the same ressources as the website.

### Updating code blocks
In the past, code blocks were simply copied into the documentation by hand. However, as the code frequently changes, this turned out to be cumbersome. We automated this process by using a little program called [embedmd](https://github.com/campoy/embedmd).

Unlike all other edits, the code blocks won't be updated automatically (neither with the live dev server nor the building of the website).
You can update all code blocks in the documentation by double-clicking the `reloadCodeSections.cmd` file.


![The reloadCodeSections.cmd file updates all code blocks in the documentation.](assets/folder_overview_code.png)

Further details on how to use the program are outlined in the [**Code blocks**](#codeblocks) section in the **Basic Markdown writing reference** outlined below.


## Basic Markdown writing reference
The most important reference for working with Markdown is the [Markdown Cheatsheet](https://github.com/adam-p/markdown-here/wiki/Markdown-Cheatsheet).
Also, many things will be self-explanatory when you look through the existing files.
In the following, I will copy (and add to) some of the things that are written in the cheatsheet.

### Headings
You can create a new heading by beginning a line with a `#` (or more depending on the level). Make sure to leave a blank line afterwards.

This markdown:
```
# Heading level 1

## Heading level 2

### Heading level 3

#### Heading level 4

##### Heading level 5

###### Heading level 6

```
Outputs:

# Heading level 1

## Heading level 2

### Heading level 3

#### Heading level 4

##### Heading level 5

###### Heading level 6


### Emphasis
You can write in *italics* or **bold** by doing the following
```
Emphasis, aka italics, with *asterisks* or _underscores_.
Strong emphasis, aka bold, with **asterisks** or __underscores__.
Combined emphasis with **asterisks and _underscores_**.
Strikethrough uses two tildes. ~~Scratch this.~~
```
Outputs:
Emphasis, aka italics, with *asterisks* or _underscores_.
Strong emphasis, aka bold, with **asterisks** or __underscores__.
Combined emphasis with **asterisks and _underscores_**.
Strikethrough uses two tildes. ~~Scratch this.~~

### Lists
(In this example, leading and trailing spaces are shown with with dots: ⋅)

```no-highlight
1. First ordered list item
2. Another item
⋅⋅* Unordered sub-list.
1. Actual numbers don't matter, just that it's a number
⋅⋅1. Ordered sub-list
4. And another item.

⋅⋅⋅You can have properly indented paragraphs within list items. Notice the blank line above, and the leading spaces (at least one, but we'll use three here to also align the raw Markdown).

⋅⋅⋅To have a line break without a paragraph, you will need to use two trailing spaces.⋅⋅
⋅⋅⋅Note that this line is separate, but within the same paragraph.⋅⋅
⋅⋅⋅(This is contrary to the typical GFM line break behaviour, where trailing spaces are not required.)

* Unordered list can use asterisks
- Or minuses
+ Or pluses
```

1. First ordered list item
2. Another item
  * Unordered sub-list.
1. Actual numbers don't matter, just that it's a number
  1. Ordered sub-list
4. And another item.

   You can have properly indented paragraphs within list items. Notice the blank line above, and the leading spaces (at least one, but we'll use three here to also align the raw Markdown).

   To have a line break without a paragraph, you will need to use two trailing spaces.  
   Note that this line is separate, but within the same paragraph.  
   (This is contrary to the typical GFM line break behaviour, where trailing spaces are not required.)

* Unordered list can use asterisks
- Or minuses
+ Or pluses

### Tables
Tables aren't part of the core Markdown spec, but they are part of GFM and *Markdown Here* supports them. They are an easy way of adding tables to your email -- a task that would otherwise require copy-pasting from another application.

```no-highlight
Colons can be used to align columns.

| Tables        |      Are      |  Cool |
|:--------------|:-------------:|------:|
| col 3 is      | right-aligned | $1600 |
| col 2 is      |   centered    |   $12 |
| zebra stripes |   are neat    |    $1 |

There must be at least 3 dashes separating each header cell.
The outer pipes (|) are optional, and you don't need to make the
raw Markdown line up prettily. You can also use inline Markdown.

| Markdown | Less      | Pretty     |
|:---------|:----------|:-----------|
| *Still*  | `renders` | **nicely** |
| 1        | 2         | 3          |
```

Colons can be used to align columns.

| Tables        |      Are      |  Cool |
|:--------------|:-------------:|------:|
| col 3 is      | right-aligned | $1600 |
| col 2 is      |   centered    |   $12 |
| zebra stripes |   are neat    |    $1 |

There must be at least 3 dashes separating each header cell. The outer pipes (|) are optional, and you don't need to make the raw Markdown line up prettily. You can also use inline Markdown.

| Markdown | Less      | Pretty     |
|:---------|:----------|:-----------|
| *Still*  | `renders` | **nicely** |
| 1        | 2         | 3          |


### Images
```no-highlight
Images can be placed just like links, but they have an ! at the beginning.

Inline-style:
![alt text](docs/media/image1.png ""Logo Title Text 1"")

Reference-style:
![alt text][logo]

[logo]: docs/media/image1.png ""Logo Title Text 2""
```

Images can be placed just like links, but they have an ! at the beginning.

Inline-style:
![alt text](docs/media/image1.png ""Logo Title Text 1"")

Reference-style:
![alt text][logo]

[logo]: docs/media/image1.png ""Logo Title Text 2""

### Code blocks
<a name=""codeblocks""></a>

```no-highlight
Inline `code` has `back-ticks around` it.
```

Inline `code` has `back-ticks around` it.

Blocks of code on the other hand can be inserted as follows:

<pre lang=""no-highlight""><code>```GAMS
p_test = 2;
```
</code></pre>

which will result in:

```GAMS
p_test = 2;
```

When referencing code from the FarmDyn model, we use a small program that automatically pulls the code from the files. This way the documentation stays in sync with the latest model updates.

The syntax for pulling in the code blocks is as follows:

<pre lang=""no-highlight""><code>
[embedmd]:# (N:/path/to/gamsFile.gms GAMS /startingPoint/ /endPoint/)
</code></pre>

Where the startingPoint and endPoint need to be [regular expressions](https://docs.microsoft.com/de-de/dotnet/standard/base-types/regular-expression-language-quick-reference). Don't worry, you can copy the most common regular expressions that you will need down below.

Let's say we want to insert the `herdSize_` equation from the `general_herd_module.gms` file in our documentation. In order to do so, we would insert the following markdown

<pre lang=""no-highlight""><code>
[embedmd]:# (N:/agpo/work1/FarmDyn_QM/gams/model/general_herd_module.gms GAMS /herdSize_[\S\s][^;]*?\.\./ /;/)
</code></pre>

In plain English, this tells the program: Look through the general_herd_module.gms file, until you find a line that begins with 'herdSize_' and ends with '..', while ANYTHING may be in between the two. If you found this starting line, copy everything until the first semi-colon ';'.

Once you added such a markdown statement, make sure to double click the `reloadCodeSections.cmd` file as described above. The program will then pull in the code block and update all other ones.

#### Most common code blocks
Keep in mind that the regular expression will always return the FIRST entry it found in the file. That said, your regular expression needs to be precise enough that it is matched only once in the file. Otherwise a code block will be pulled in which you did not want to see at the desired position. In that case, just delete it and try again! It is sometimes even helpful to copy the content of the file to [regex101](https://regex101.com/) and try your regular expression there.

##### A whole function

<pre lang=""no-highlight""><code>
[embedmd]:# (N:/path/to/gamsFile.gms GAMS /EquationName_[\S\s][^;]*?\.\./ /;/)
</code></pre>

##### Parameter value assignment

<pre lang=""no-highlight""><code>
[embedmd]:# (N:/path/to/gamsFile.gms GAMS /p_someParam(""domain1"",""domain2"",domain3)  = 1/ /;/)
</code></pre>

##### Sets or Tables
<pre lang=""no-highlight""><code>
[embedmd]:# (N:/path/to/gamsFile.gms GAMS /set setName/ /;/)
[embedmd]:# (N:/path/to/gamsFile.gms GAMS /table tableName/ /;/)
</code></pre>

### Footnotes

#### Inserting the reference
The footnote reference is enclosed in square brackets and starts with a caret, followed by an arbitrary label which may contain numeric identifiers [1, 2, 3, ...] or names [Granovetter et al. 1998]. The rendered references are always consecutive superscripted numbers.

Example:

```md
Lorem ipsum[^1] dolor sit amet, consectetur adipiscing elit.[^2]
```

Result:

Lorem ipsum[^1] dolor sit amet, consectetur adipiscing elit.[^2]

#### Inserting the content
The footnote content is also declared with a label, which must match the label used for the footnote reference. It can be inserted at an arbitrary position in the document and is always rendered at the bottom of the page. Furthermore, a backlink is automatically added to the footnote reference.

**on a single line¶**
Short statements can be written on the same line.

Example:

```md
[^1]: Lorem ipsum dolor sit amet, consectetur adipiscing elit.
```

Result:
See at the bottom of the page
[^1]: Lorem ipsum dolor sit amet, consectetur adipiscing elit.


**on multiple lines**
Paragraphs should be written on the next line. As with all Markdown blocks, the content must be indented by four spaces.

Example:

```md
[^2]:
    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod
    nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor
    massa, nec semper lorem quam in massa.
```

Result:
see at the bottom of the page
[^2]:
    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod
    nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor
    massa, nec semper lorem quam in massa.

### Equations
Typesetting equations in Markdown is done using the powerful LaTeX notation. Already know LaTeX? Then directly go to Step 2. If not, no worries, just keep on reading.

1) A lot of Visual Equation Editors are available online. A really simple, but powerful one is [Gruppy](https://guppy.js.org/site/). Just type your equation in the ""Click to start typing math!"" field and once done, copy the LaTeX output which is shown below.

2) In the Markdown file, inline math is written by using single dollar signs:

```md
this will be some inline math $2+2=4$ and it will look really pretty
```

outputs:

this will be some inline math $2+2=4$ and it will look really pretty

Equation blocks (on a new line and centered), will be surrounded by two dollars:

```md
this will be a block equation

$$2+2=4$$

and it will look really pretty
```
outputs:

this will be a block equation

$$2+2=4$$

and it will look really pretty


### Admonition blocks
Admonition is an extension included in the standard Markdown library that makes it possible to add block-styled side content to your documentation, for example summaries, notes, hints or warnings.

Admonition blocks follow a simple syntax: every block is started with !!!, followed by a single keyword which is used as the type qualifier of the block. The content of the block then follows on the next line, indented by four spaces.

```md
!!! note
    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod
    nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor
    massa, nec semper lorem quam in massa.
```

will result in

![An admonition block](assets/admonition.png)

Beware that these blocks won't appear in the printable documents (at least at the time of writing).

You can read more about how to set up admonition blocks [here](https://squidfunk.github.io/mkdocs-material/extensions/admonition/).
",0,0,0,1,farm,"[documentation, farm, farmdyn, model]",00000
1054,FarmDispensers,matthew-mccall,N/A,https://github.com/matthew-mccall/FarmDispensers,https://api.github.com/repos/matthew-mccall/FarmDispensers,A 1.19 Paper Minecraft Server Plugin for making dispensers plant seeds on tilled soil.,"![demo.gif](docs/demo.gif)
# FarmDispensers [![Java CI with Gradle](https://github.com/mxtt-mmxix/FarmDispensers/actions/workflows/gradle.yml/badge.svg)](https://github.com/mxtt-mmxix/FarmDispensers/actions/workflows/gradle.yml)
This plugin for 1.19 Paper Minecraft Servers makes it so that dispensers can plant seeds on tilled soil. Simply place a dispenser facing an air block above a farmland block to plant the seeds on the farmland block.

## Supported Platforms
- 1.19 Paper Minecraft Server

## Suppported Crops
- Wheat
- Carrots
- Potatoes
- Beetroot
- Melons
- Pumpkins",0,0,1,0,farm,"[bukkit, dispenser, farm, minecraft, minecraft-plugin, minecraft-server, paper, papermc, spigot, spigot-plugin, spigotmc]",00000
1055,mini_farm_control,pozsarzs,N/A,https://github.com/pozsarzs/mini_farm_control,https://api.github.com/repos/pozsarzs/mini_farm_control,Growing house and irrigation controlling and remote monitoring system,"**Growing house and irrigation controlling and remote monitoring system**  
Copyright (C) 2020-2022 Pozsár Zsolt <pozsarzs@gmail.com>  
GitHub: <https://github.com/pozsarzs/mini_farm_control>

Licence:             CC-BY-NC-4.0

The aim of this project is to ensure the automatic operation mushroom growing tents and irrigation system of garden and so that the characteristics of the growing environment can be monitored and modified remotely on my mini farm. This is a mixed system, it contents Raspberry Pi, personal computer and Adafruit ESP8266 microcontrollers.  
The system consists of devices called MM8D, MM9A and several MM6D and MM7D. This package shows how these devices are physically and software related.

*Homepage:*  

  * Summary page; there are *only newest packages*: <http://szerafingomba.hu/en_download.html>  
  * Summary page; on my hobby site: there are descriptions, Technical Manual, schematic draws, PCB draws and all useable release of softwares: <http://www.pozsarzs.hu/en/controllers.html>


*Github repository of parts:*

  * Hardware of the MM6D: <https://github.com/pozsarzs/mm6d-hw.git>  
  * Software of the MM6D: <https://github.com/pozsarzs/mm6d-sw.git>  
  * Hardware of the MM7D: <https://github.com/pozsarzs/mm7d-hw.git>  
  * Software of the MM7D: <https://github.com/pozsarzs/mm7d-sw.git>  
  * Hardware of the MM8D: <https://github.com/pozsarzs/mm8d-hw.git>  
  * Software of the MM8D: <https://github.com/pozsarzs/mm8d-sw.git>  
  * Hardware of the MM8D console: <https://github.com/pozsarzs/mini_serial_console-hw>
  * Software of the MM8D console: <https://github.com/pozsarzs/mini_serial_console_mm8d-sw>
  * Software for remote setup: <https://github.com/pozsarzs/xmmeec-remote.git>  
  * Hardware of the MM9A: <https://github.com/pozsarzs/mm9a.git>

*Programs for Linux and Windows:*

  * Status reader for MM6D: <https://github.com/pozsarzs/mm6dread.git>  
  * Status reader for MM7D: <https://github.com/pozsarzs/mm7dread.git>  
  * Status reader for MM8D: <https://github.com/pozsarzs/mm8dread.git>  
  * Remote setup program: <https://github.com/pozsarzs/xmmeec.git>  
",0,0,1,0,farm,"[agro-climatic-tools, creative-commons, esp8266, farm, garden, linux, microcontroller, mushroom, pc, raspberrypi, raspbian, windows]",00000
1056,bigboyswap,agelessZeal,N/A,https://github.com/agelessZeal/bigboyswap,https://api.github.com/repos/agelessZeal/bigboyswap,DEX on binance smart chain,"#  BigboySwap Frontend 

[BigboySwap](https://bigboyswap.com/)
",0,0,1,0,farm,"[dex, farm, pancakeswap, referral]",00000
1057,weeding_bot_CMP9767M,harismats,N/A,https://github.com/harismats/weeding_bot_CMP9767M,https://api.github.com/repos/harismats/weeding_bot_CMP9767M,"This is an assignment aiming to develop a weeding robot that can autonomously navigate and identify obstacles, while also spray the unwanted weeds in a farm, using ROS and Gazebo.","# Summary
This is a ROS package for the CMP9767M course of Lincoln University. The focus area that we have chosen is **navigation**. The aim os this work is to develop a robot that can autonomously navigate between obstacles (both static and dynamic), identify different kinds of weeds and then spray at them in the Gazebo simulation environment. To achieve a precise localization we have used **amcl**, and with the help of **move_base** we can freely navigate in our map by using the action client-server interface. We identify the different types of weeds using contours and compute their final position in the ""map"" frame by correcting it, using the camera's intrinsic parameters. To spray the weeds we call a service that only considers the last 500 detected weeds to reduce computations.

### Prerequisites

To use this package you need to have: 
* Ubuntu 18.04 LTS
* OpenCV 4.5.1
* ROS Melodic

### Setup

To use our package you first have to install the L-CAS Ubuntu/ROS software distribution. To do so, do:
1. ```sudo ls``` (this is just to cache you admin password for the next steps)
2. ```sudo apt-get update && sudo apt-get install curl``` (curl is required for the next step)
3. ```curl https://raw.githubusercontent.com/LCAS/rosdistro/master/lcas-rosdistro-setup.sh | bash -``` (should install everything required)

Then clone the main CMP9767M package, and our package in your catkin workspace:
```
cd ~/catkin_ws/src
git clone https://github.com/harismats/CMP9767M
git clone https://github.com/harismats/weeding_bot_CMP9767M
cd ..
catkin_make
```

After you are done with that with no erros, do:
```
pip install scipy==1.2.0
```

In case any other package is missing, you can install it with:
```
sudo apt-get install ros-melodic-<package_name>
```

### How to run

To run our system, do the followings in different terminals in this sequence:
1. ```roscore```
2. ```roslaunch weeding_bot our_sim.launch``` (wait for the whole simulation to load before running the next step's command)
3. ```roslaunch weeding_bot system_nodes.launch```
",0,0,1,0,farm,"[farm, gazebo, ros]",00000
1058,scraper,openfarmsubsidies,openfarmsubsidies,https://github.com/openfarmsubsidies/scraper,https://api.github.com/repos/openfarmsubsidies/scraper,"OpenFarmsubsidies, Repository for scraping EU farmsubsidy payments","# openfarmsubsidies

[![Join the chat at https://gitter.im/holgerd77/openfarmsubsidies-scraper](https://badges.gitter.im/holgerd77/openfarmsubsidies-scraper.svg)](https://gitter.im/holgerd77/openfarmsubsidies-scraper?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)

Repository for building EU farmsubsidy scrapers with ``Python/Django`` and
[django-dynamic-scraper](https://github.com/holgerd77/django-dynamic-scraper).

Documentation for this and associated repositories can be found at:

* http://openfarmsubsidies.readthedocs.org

",0,0,3,0,farm,"[agricultural, cap, eu, farm, farmsubsidies, open, openfarmsubsidies, scraper, subsidies]",00000
1059,farm,ngankhanh98,N/A,https://github.com/ngankhanh98/farm,https://api.github.com/repos/ngankhanh98/farm,Bài tập Phương pháp lập trình hướng đối tượng. Xây dựng một trang trại theo yêu cầu 🐄🐑🐐 💨,"{'message': 'Not Found', 'documentation_url': 'https://docs.github.com/rest/repos/contents#get-repository-content'}",0,0,1,0,farm,"[cow, csc1003, farm, goat, hcmus, oop, pplthdt, sheep]",00000
1060,autonomic-farm,danilonumeroso,N/A,https://github.com/danilonumeroso/autonomic-farm,https://api.github.com/repos/danilonumeroso/autonomic-farm,Farm pattern capable of adjusting its parallelism degree based on whether the system is performing worse or better than a given service time,"# Autonomic Farm Pattern
Provide a farm pattern capable of adjusting its parallelism degree based on whether the system is performing worse or better
than a given service time. Hence, the pattern aims at achieving (consistently) the service time taken as input.
The pattern is tested providing a collection of tasks such that the tasks in the initial, central and
final part all require a different average time to be computed (e.g. 4L in the first part, L in the second part
and 8L in the third part) and the task collection execution time is considerably longer than the time needed
to reconfigure the farm.

## Usage
```
chmod +x run
make && run  
```
",0,0,0,0,farm,"[farm, parallel-patterns, parallel-programming]",00000
1061,farm,aryavarma,N/A,https://github.com/aryavarma/farm,https://api.github.com/repos/aryavarma/farm,The farm is a website for farmers to sell their farm produce. Created this during my UnderGrad CS program. Final year project.,"# farm
I created this project during my Bsc. Computer Science Final Year(2019-2020) program. Submitted as a final year project.


Caution: Many folders and files are not uploaded,above. Only some folders are uploaded. So download the above folder for reference.As the project will not work.

Hello!

The project was created using php, javascript, mysql. Xampp was used to host this project . Why xampp? XAMPP is an abbreviation for cross-platform, Apache, MySQL, PHP and Perl, and it allows you to build site offline, on a local web server on your computer.

Description:

    The project was created with an intention that if a farmer wants to sell their farm produce like fruits, vegetables , seeds or diary products like milk, etc or if they want, they can sell them online using this website, also provide information like nutritious value and stuff related to the products easily using this website.
    The customer just have to register and login themselves and can buy any product easily, online. They can view the blogs , gain information and buy products if they want. 
    
Components:

1.Index file.(Home page)
2.Login/Register
3.Product and service Categories like (vegetables, Milk, Fruits, Seeds, and additional option of rooms available.). 
4.The admin(Farmer) can describe the product , put up images about the product, quanity,etc.
5.Dashboard: To view total sales,sales for current day, number of products, number of users. The admin can add new users, categories and product.
6.View Cart for customers
7.Check-out online.



To run the project:
1. Install xampp/wampp , but for this project I used xampp and for xampp, after installation start xampp-control panel and start 2 buttons apache and mysql.
2. Go to phpmyadmin(or click on the admin section in front of apache of xampp control panel ) and open phpmyadmin page .
3. When phpmyadmin server page is opened, click on new tab, write the database name(if you have a sql file(farm.sql like this format) write that name eg. farm)and select create button.
4. After that import the sql file / create the desired tables.
5. Make project/ unzip the project/ copy paste the whole project inside the xampp>htdocs folder and paste your folder e.g for me , my location was C:\xampp\htdocs\farm 
6. To run project make sure the folder path is correct ,your xampp-control panel is open and both the actions in front of Apache and mysql and started. IF working properly green colour will be highlighted in both of their names.
7. After everything is done. Write eg. localhost/farm or whatever your filename is and run the file in the browser.(any browser).
8. If any error occurs .. Very common.. Mysql error. Now this might occur if you have password set for mysql and while creating project you have not passed the correct mysql password, or sometimes because of mysql's presence your xampp might not work, so check thoroughly (errors) and copy paste them and google properly.

P.S i did this project earlier and used the older version of xampp, so version difference error might occur.
    
Some Snapshots of UI.
 
 Login and Signup
 
![image](https://user-images.githubusercontent.com/74491117/120925717-6d6cca00-c6f7-11eb-905a-8df6ce50f46a.png)


Forgot password

![image](https://user-images.githubusercontent.com/74491117/120925332-c9ceea00-c6f5-11eb-9872-8b071e0c84bd.png)

Index page

![image](https://user-images.githubusercontent.com/74491117/120925350-d7846f80-c6f5-11eb-92ae-0ce440171284.png)

Category:Product section:Vegetables

![image](https://user-images.githubusercontent.com/74491117/120925359-e8cd7c00-c6f5-11eb-9873-e0147101ba88.png)

Product view and blogging option

![image](https://user-images.githubusercontent.com/74491117/120925371-f7b42e80-c6f5-11eb-8ef2-ca27bc5266c9.png)

Customer/users' cart

![image](https://user-images.githubusercontent.com/74491117/120925383-07337780-c6f6-11eb-8e70-60836cfd2669.png)

Admin Dashboard

![image](https://user-images.githubusercontent.com/74491117/120925396-1286a300-c6f6-11eb-81be-f971bcfc1798.png)

Sales HIstory

![image](https://user-images.githubusercontent.com/74491117/120925397-1286a300-c6f6-11eb-849a-1d17011e1bea.png)

Users section+Add new user

![image](https://user-images.githubusercontent.com/74491117/120925425-34802580-c6f6-11eb-817a-74b914c7a7bc.png)

Product list: Add new product+Edit product

![image](https://user-images.githubusercontent.com/74491117/120925439-49f54f80-c6f6-11eb-8cda-3caf1301a3f7.png)


Category+ Add new Category

![image](https://user-images.githubusercontent.com/74491117/120925447-57aad500-c6f6-11eb-8133-a46918131e81.png)

Admin profile information Edit

![image](https://user-images.githubusercontent.com/74491117/120925458-642f2d80-c6f6-11eb-8de5-a2a8b8f274d5.png)


Reference: Google,Youtube,etc. 

Thanks and Regards,

Arya 






",0,0,1,0,farm,"[farm, mysql, phpmyadmin, xampp, xampp-control-panel]",00000
1062,orbitau-farm-bot,tanzcntt,N/A,https://github.com/tanzcntt/orbitau-farm-bot,https://api.github.com/repos/tanzcntt/orbitau-farm-bot,orbitau nft game farm bot,"# orbitau-farm-bot
Bot farm đá và uOri cho game Orbitau.io

# Cài dặt

Tải và cài đặt PyCharm CE

Clone code & cài đặt thư viên

Pyautogui

Cpencv-python

Thay các button tương ứng theo tài khoản game, theo kích thước màn hình mọi người, hình hiện tại mình đang cho game chạy ở độ phân giản 1280x1088px

Chụp hình tất cả các hero của bạn

 Sửa config các ải trong func/action.py sẽ farm theo mẫu sau

 ```python

 config_stage = {
    ""3-normal"": [""./resources/heroes/kim.png"",
                 ""./resources/heroes/thuy.png"",
                 ],
    ""3-easy"": [""./resources/heroes/hoa3.png"",
               ""./resources/heroes/moc3.png"",
               ""./resources/heroes/thuy3.png"",
               ],
    ""6-normal"": [""./resources/heroes/tho5.png"",
                 ""./resources/heroes/thuy5.png"",
                 ""./resources/heroes/moc5.png"",
                 ""./resources/heroes/moc51.png"",
                 ""./resources/heroes/moc52.png"",
                 ]
}
```
Như cấu hình trên mình có 2 hero farm solo ở map 3.1 normal, 3 hero farm solo ở map 3.1 ez, 5 hero farm solo ở 6.1 normal

# Sửa lại file main chạy bao nhiều ải tuỳ vào account của bạn
```python
while True:
        screen = check_screen()
        if screen['name'] == 'home':
            status = start_farm(stage=6, lvl=""normal"")
            if not status:
                pos1 = pyautogui.locateCenterOnScreen(""./resources/buttons/x-btn.png"", region=(settings['region']['left'], settings['region']['top'], settings['region']['width'], settings['region']['height']), confidence=0.9)
                pyautogui.click(x=pos1.x, y=pos1.y)
                time.sleep(1)
                break
        print(screen)
        # pos1 = pyautogui.locateCenterOnScreen(""./resources/buttons/back-button.png"", region=(settings['region']['left'], settings['region']['top'], settings['region']['width'], settings['region']['height']), confidence=0.9)
        # pyautogui.click(x=pos1.x, y=pos1.y)
        time.sleep(1)

    while True:
        screen = check_screen()
        if screen['name'] == 'home':
            status = start_farm(stage=3, lvl=""normal"")
            if not status:
                pos1 = pyautogui.locateCenterOnScreen(""./resources/buttons/x-btn.png"", region=(settings['region']['left'], settings['region']['top'], settings['region']['width'], settings['region']['height']), confidence=0.9)
                pyautogui.click(x=pos1.x, y=pos1.y)
                time.sleep(1)
                break
        print(screen)
        # pos1 = pyautogui.locateCenterOnScreen(""./resources/buttons/back-button.png"", region=(settings['region']['left'], settings['region']['top'], settings['region']['width'], settings['region']['height']), confidence=0.9)
        # pyautogui.click(x=pos1.x, y=pos1.y)
        time.sleep(1)
    while True:
        screen = check_screen()
        if screen['name'] == 'home':
            status = start_farm(stage=3, lvl=""easy"")
            if not status:
                pos1 = pyautogui.locateCenterOnScreen(""./resources/buttons/x-btn.png"", region=(settings['region']['left'], settings['region']['top'], settings['region']['width'], settings['region']['height']), confidence=0.9)
                pyautogui.click(x=pos1.x, y=pos1.y)
                time.sleep(1)
                break
        print(screen)
        # pos1 = pyautogui.locateCenterOnScreen(""./resources/buttons/back-button.png"", region=(settings['region']['left'], settings['region']['top'], settings['region']['width'], settings['region']['height']), confidence=0.9)
        # pyautogui.click(x=pos1.x, y=pos1.y)
        time.sleep(1)
```

như trên mình cho bot chạy solo 3 map với config hero ở trên

# Bot hiện chỉ chạy được 1 account một máy cho cơ chế chiếm chuột và màn hình, a e làm muốn chạy nhiều account có thể sử dụng vmware or virtual box

# Code này mình mới test được trên Ubuntu, trên window a e tự quẩy
",0,0,1,0,farm,"[autoclick, bots, farm, orbitau, pyautogui, python3]",00000
1063,erdbeerfarm,cvknet,N/A,https://github.com/cvknet/erdbeerfarm,https://api.github.com/repos/cvknet/erdbeerfarm,DIY Erdbeerfarm auf dem Dach einer Fertiggarage,"# Erdbeerfarm
DIY Erdbeerfarm auf dem Dach einer Fertiggarage

Hier entsteht eine Beschreibung für mein Projekt ""Erdbeerfarm auf dem Garagendach""

## Motivation
Ich besitze ein Reihenhaus im Osten von Bremen. Da das Grundstück relativ klein ist, und ich nicht viel Platz für 'Nutzpflanzen' habe, kam mir die Idee den Platz auf dem Garagendach doch auch zu nutzen. Die Grundidee entsprang einer Bierlaune, doch inzwischen wirft die kleine Farm gute Erträge ab, und ich plane schon den Ausbau. 

## Version 0.2 - aktuelle Version

Die Version 0.2 besteht aus 8 Blumenkästen. Die Bewässerung erfolgt über einen 210 Liter Tank in der Garage mit einer Tauchpumpe. Die Steuerung der Pumpe wird mit einem Shelly Plug S realisiert. 


* [Materialliste für Version 0.2](vers_0.2/bom.md)
* [Beschreibung](vers_0.2/beschreibung.md)

## Version 0.1
Die Version 0.1 bestand aus 4 Blumenkästen mit integriertem Wasservorratsbehälter. Die Blumenkästen enthielten jeweils 3 Erdbeerpflanzen. Automatisiert war hier noch nichts. Ich musste immer mit einer Trittleiter auf die Garage klettern und die Blumenkästen von Hand bewässern.

[Materialliste für Version 0.1](vers_0.1/bom.md)

",0,0,1,0,farm,"[bewaesserung, diy, erdbeeren, farm, garage, hausautomation, irrigation]",00000
1064,dreamy-farm-client,sontungexpt,N/A,https://github.com/sontungexpt/dreamy-farm-client,https://api.github.com/repos/sontungexpt/dreamy-farm-client,The ui for dreamy farm website,"# The development branch of the dreamy farm website

## 1. Features

- **Searchbar**: search products and recipes (priority products) 5 results for
  each time

- **Login, Register**: with password encryption

- **Feedback**: User cand send feedback to you

- **Two language**: Vietnamese and English

- **Pages**:

  - **Home page**: Introduce website

  - **Product page**: Show products in your db

  - **Recipe page**: Show recipes in your db

  - **About us**: Information about the company

  - **Wishlist page**: Show your favorite products

  - **Order page**: Show your old orders

  - **Address page**: Show your addreses

  - **Account information page**: To change your acount information

  - **Shopping cart page**: Show your products you choose to buy

  - **Checkout page**: Checkout before finsihed your order

  - **Product detail**: Show detail about product

  - **Recipe detail**: Show detail about recipe

## 2. Preview

<details>
  <summary>Show Images</summary>

![Preview 1](./gitsources/previews/dreamy_farm_1.png)
![Preview 2](./gitsources/previews/dreamy_farm_2.png)
![Preview 3](./gitsources/previews/dreamy_farm_3.png)
![Preview 4](./gitsources/previews/dreamy_farm_4.png)
![Preview 5](./gitsources/previews/dreamy_farm_5.png)
![Preview 6](./gitsources/previews/dreamy_farm_6.png)
![Preview 7](./gitsources/previews/dreamy_farm_7.png)
![Preview 8](./gitsources/previews/dreamy_farm_8.png)
![Preview 9](./gitsources/previews/dreamy_farm_9.png)
![Preview 10](./gitsources/previews/dreamy_farm_10.png)
![Preview 11](./gitsources/previews/dreamy_farm_11.png)
![Preview 12](./gitsources/previews/dreamy_farm_12.png)
![Preview 14](./gitsources/previews/dreamy_farm_14.png)
![Preview 17](./gitsources/previews/dreamy_farm_17.png)

</details>

## 3. How to run this project

- **Step 1. Install mongodb (because this project use local db)**

- **Step 2. Clone backend repo and this repo**

  ```
  git clone https://github.com/sontungexpt/dreamy-farm-server.git
  ```

  ```
  git clone https://github.com/sontungexpt/dreamy-farm-client.git
  ```

- **Step 3. Run mongodb**

- **Step 4. Run the backend project first**

  **NOTE: Make sure installed all dependencies packages when pull from the remote if not run this command**

  ```
  npm install
  ```

  **Run project (Make sure you are in the root folder of the project)**

  ```
  npm start
  ```

- **Step 5. Run the frontend project**

  **NOTE: Make sure installed all dependencies packages when pull from the remote if not run this command**

  ```
  npm install
  ```

  **Run project (Make sure you are in the root folder of the project)**

  ```
  npm start
  ```

## 4. Authors

- **1. [Tran Vo Son Tung](https://github.com/sontungexpt)**
- **2. [Pham Nguyet Quynh](https://github.com/PhamNguyetQuynh)**
- **3. [Vo Nhu Phi](https://github.com/phifin)**
",0,0,1,4,farm,"[farm, javascript, javascriptreact, project, reactjs, scss, web]",00000
1065,Fruit-Analise,Matilda-bit,N/A,https://github.com/Matilda-bit/Fruit-Analise,https://api.github.com/repos/Matilda-bit/Fruit-Analise,"In this project, we use MATLAB to ensure the quality of the fruit from the farm. This is done by photographing A sample from the production line and comparing this product with a fruit base (in which the type of fruit is introduced in advance) (User chooses in advance) and health and disease parameters on the fetus using color and diameter parameters, etc. (Variables for selected fruits) to confirm the packaging of the product and its marketing throughout the country.","# FruitAnalise
In this project, you must use MATLAB to ensure the quality of the fruit from the farm. This is done by photographing A sample from the production line and comparing this product with a fruit base (in which the type of fruit is introduced in advance) (User chooses in advance) and health and disease parameters on the fetus using color and diameter parameters, etc. (Variables for selected fruits) to confirm the packaging of the product and its marketing throughout the country.
",0,0,1,0,farm,"[farm, fruit, matlab]",00000
1066,qfarming,morshadunnur,N/A,https://github.com/morshadunnur/qfarming,https://api.github.com/repos/morshadunnur/qfarming,,"{'message': 'Not Found', 'documentation_url': 'https://docs.github.com/rest/repos/contents#get-repository-content'}",0,0,2,10,farm,"[farm, la, php, poul]",00000
1067,Farming-In-The-Jefferson-Years,dhimitrimano,N/A,https://github.com/dhimitrimano/Farming-In-The-Jefferson-Years,https://api.github.com/repos/dhimitrimano/Farming-In-The-Jefferson-Years,"Farming In The Jefferson Years, also known as just ""Farm Game,"" was a farming simulator that my US History teacher made, and the first game I coded individually in Java. Since it is my first game, it was bound to be coded horribly from the very start. However, it works, and that's all that mattered back in the Jefferson Years.","# Farming In The Jefferson Years

I created this game in 2018, during the time that I was in AP Programming A, a time before my teacher taught me what a ""class"" or ""array"" was. My US History teacher created this game to show how much of a gamble farming used to be during the Westward Expansion, and I decided to port it to Java in one day, over nine long hours. This game is a simple one. Just buy some livestock or seeds and hope that you can make a profit by selling your items at the end of the year after prices have fluctuated. However, unlike in a stock market simulator where prices fluctuate for everyone, the prices that you, the farmer, must pay to buy livestock and seeds each year are fixed. I wish you good luck, farmer, for you are going to need it.
",0,0,1,0,farm,"[farm, farmer, farmers, farming, gambling, gambling-game, game, java, jefferson-years, livestock, prices]",00000
1068,tracker,farmthedip,N/A,https://github.com/farmthedip/tracker,https://api.github.com/repos/farmthedip/tracker,Our custom-built farm tracker. The FIRST open source farm in history!,"{'message': 'Not Found', 'documentation_url': 'https://docs.github.com/rest/repos/contents#get-repository-content'}",0,0,1,0,farm,"[farm, react]",00000
1069,octofi-uniswap-lp-farm,OctoFi,OctoFi,https://github.com/OctoFi/octofi-uniswap-lp-farm,https://api.github.com/repos/OctoFi/octofi-uniswap-lp-farm,,"# octofi-uniswap-lp-farm

## Content and Inst. follow
",0,0,3,0,farm,"[farm, liquidity-pool, octofi, uniswap, uniswap-v2, yield]",00000
1070,p8.farm.water-flowerpot,timetzhang,N/A,https://github.com/timetzhang/p8.farm.water-flowerpot,https://api.github.com/repos/timetzhang/p8.farm.water-flowerpot,water sensor for plants in k7,"# p8.farm.water-flowerpot
",0,0,1,0,farm,"[farm, iot]",00000
1071,jetty,jetbangs,N/A,https://github.com/jetbangs/jetty,https://api.github.com/repos/jetbangs/jetty,,"{'message': 'Not Found', 'documentation_url': 'https://docs.github.com/rest/repos/contents#get-repository-content'}",0,0,1,0,farm,[farm],00000
1072,next-dapp,lin-crypto,N/A,https://github.com/lin-crypto/next-dapp,https://api.github.com/repos/lin-crypto/next-dapp,"Farm, Swap, Pool","{'message': 'Not Found', 'documentation_url': 'https://docs.github.com/rest/repos/contents#get-repository-content'}",0,0,1,0,farm,"[dapp, farm, material-ui, nextjs, pool, swap]",00000
1073,Minha-Fazenda,obaraujo,N/A,https://github.com/obaraujo/Minha-Fazenda,https://api.github.com/repos/obaraujo/Minha-Fazenda,Sistema que tinha como objetivo facilitar o gerenciamento das fazendas.,"{'message': 'Not Found', 'documentation_url': 'https://docs.github.com/rest/repos/contents#get-repository-content'}",0,0,1,0,farm,"[farm, manager]",00000
1074,CROPS,kolergy,N/A,https://github.com/kolergy/CROPS,https://api.github.com/repos/kolergy/CROPS,C.R.O.P.S. : CRoissance Optimale des Plantes en Sol. Gestion des capteurs et stockage dans CouchDB,"# CROPS
C.R.O.P.S. : CRoissance Optimale des Plantes en Sol. Gestion des capteurs et stockage dans CouchDB

## C'est Quoi?
Colecte des donnees environementales pour unbe croissance optimale des plantes
et stockage de ces donnees dans une base de donmnee de type couchDB

Le systeme est base sur les capteurs suivants:
 - Le capteur DHT22 permet la mesure de la temperature ambiante
   ainsi que du niveau d'humiditee ambiante
 - Le capteur CSMS V1.2 permet la mesure de la quantitee d'eau dans le sol.
   CSMS: 'Capacitive Soil Moisture Sensor'
 - Le captteur BMP085 permet la mesure de la pression et de la temperature
   (de maniere semblet'il plus precise aue le DHT mais je ne l'ai pas encore verifie)
 - Le capteur TSL2561 Permet de mesurer la lumiere recue par les plantes
 
 le tout controle par un microcontroleur de type ESP32 avec wifi integre le ""LoLin d32-Pro"" et utilisant un afichage e-Paper LOLIN_IL3897.
 
 - main.cpp       : Contiens le code a flasher sur l'EPS32 et qui vas collecter les donnees
 - cropsDB.ipyndb : Contiens le notebook Jupyter permetant de visualiser et d'analyser les donnees
 
## Pour quoi ?
Il y as deux idees deriere ce developement:
- Tester differents capteurs pour une agriculture plus digitale et voir ce que l'on peux tirer de l'analyse des donnees mais tout de meme a bas cout et partager avec tous les moyens de le metre en oeuvre (l'ensemble du systeme de captation des donnees coute moins de 50$)
- L'autre question est est'il possible de produire en appartement avec eclairage artificiel tout en emetant autant voire moins de CO2 que des produits issus du suipermarche.

Ce Developement c'est effectue au Fablab Artilect https://artilect.fr/ et as ete presente pour la premiere fois durant le Fablab Festival 2019 https://fablabfestival.artilect.fr/
 
## Coment l'installer?

### Instalation de la partie capture des donnees
pour pouvoir fonctioner il vous faudra soit avoir un acces a CouchDB soit instale sur votre ordinateur soit une en ligne de style CloudAnt dont la version Lite (Gratuite) devrais etre sufisante: https://cloud.ibm.com/catalog/services/cloudant) 

le code main.cpp est prevu pour etre utilise avec PlatformIO sur atom
* Il vous faudra installer Atom: https://atom.io/
* Ensuite platformIO: dans Atom aller dans settings > Pakages > et instaler ""platformio-ide""
* Dans platformIO Home, aller dan libraries et instalez les libraries suivantes:
  * Adafruit BMP085 
  * Adafruit GFX
  * Adafruit Unified Sensor
  * Adafruit TSL2561
  * ArduinoJson (Par Benoit Blanchon)
  * DHTesp (Par Bernd Giesecke)
  * NTPClient (Par Fabrice Weinberg)
  * TimeLib (Par Paul Stoffregen)
  * La librarie LOLIN_EPD (Par Wemos) est aussi necessaire mais n'est pas disponible en installation automatique il faudra aller la chercher ici: https://github.com/wemos/LOLIN_EPD_Library et copier le repository dans le repertoire lib de votre projet.
* Modifier le main.cpp afin dy introduire vos parametres WiFi et CouchDB dans les definitions 
 
### Instalation de la partie analyse des donnees
a detailler...
 
Ce code peut etre utilise avec la Nano ferme disponible sur thingiverse: https://www.thingiverse.com/thing:3654094

![NanoFarm Picture](https://github.com/kolergy/CROPS/blob/master/IMG_20190528_093121088.jpg)
![Sensor Board Layout1](https://github.com/kolergy/CROPS/blob/master/IMG_20190604_190130655_HDR.jpg)
![Sensor Board Layout2](https://github.com/kolergy/CROPS/blob/master/IMG_20190604_190144534_HDR.jpg)
![Display initial set-up](https://github.com/kolergy/CROPS/blob/master/IMG_20190604_190254926.jpg)
![Display data](https://github.com/kolergy/CROPS/blob/master/IMG_20190604_195025825.png)
",0,0,0,2,farm,"[artilect, atom, bmp085, cpp, csms, d32-pro, dht22, e-paper, epaper, epd, esp32, esp32-arduino, fablab, farm, farming, grow, il3897, platformio, python3, tsl2561]",00000
1075,rainmaker,53645714n,N/A,https://github.com/53645714n/rainmaker,https://api.github.com/repos/53645714n/rainmaker,Remote control and timer for sprinkler system,"# rainmaker
Remote control and timer for sprinkler system.
The pumpcontroller for the sprinkler system is a DAB ESC 4 T, which has a s/w connection for turning on and off the pump which I will be switching with a relais connected to a Raspberry Pi.

## The concept
### Remote
Because it is hard to find the correct spot for the sprinkler at once, the farmer spends a lot of time walking back and forth between the sprinkler and the pump controller. Being able to switch the pump remotely can save lots of time and miles.

### Timer
Waiting for the moment to switch off the pump isn't exactly time well spent, with this program the farmer is able to set a timer to two pre-defined times remotely and go home.

## Hardware
- 4 channel 433Mhz RF remote with receiver
- Raspberry Pi B+ (yeah, the oldie)
- 5V relais 1-channel high-active
- Green and red buttons with switchable LED
- 2 x 16 LCD with I2C backpack
- KEYES040 rotary encoder

### Schematics
![schematics, also available in gpio configuration](https://raw.githubusercontent.com/53645714n/rainmaker/master/Rainmaker.png ""Schematics"")

## Raspberry Pi
### Enable I2C
For the I2C backpackfor the lcd screen we need to enable I2C. Type:
```
sudo raspi-config
```

In the menu, select '5 Interfacing options' and then 'P5 I2C'. Choose Yes when asked: 'Would you like the ARM I2C interface to be enabled?'

### Setup HW-clock
Follow this guide: https://trick77.com/adding-ds3231-real-time-clock-raspberry-pi-3/
Use sudo a bit more often (everywhere) and reboot between step #3 and #4.

### Software
Install python and git if you haven't already and then clone the repository and install the dependencies.
```
sudo apt-get update
sudo apt-get upgrade
sudo apt install python3-pip
sudo apt-get install git
git clone https://github.com/53645714n/rainmaker.git
pip install -r rainmaker/requirements.txt
```

### Setup
If you wired everything exactly like I did, skip this and go to run the program.
```
nano rainmaker/rainmaker.py
```

### Run the program
```
python3 rainmaker/rainmaker.py #this will start the script
tail -f rainmaker.log #this will show you what it's doing.
```
Type 'kill -9 [PROCESS]'  to kill the script where [PROCESS] is the number returned after the python3 command.

### Auto start
Move the systemd service file I created to the systemd folder and change it's permissions by doing the following.
```
sudo mv rainmaker/rainmaker.service /lib/systemd/system/rainmaker.service
sudo chmod 644 /lib/systemd/system/rainmaker.service
```
After this, reload the daemon and enable the service
```
sudo systemctl daemon-reload
sudo systemctl enable rainmaker.service
```
Reboot and check the service:
```
sudo systemctl status rainmaker.service
```

## Manual
The program will start at boot and log any events to rainmaker.log in the home folder.

### Buttons
The green and A buttons turn on the pump indefinately
The red and B buttons turn off the pump and interrupt any timer set
The C and D buttons set a timer for a set time (standard 60 and 120 minutes)
Pushing the rotary encoder opens the timer menu, the first time you enter is the start time, the second time (after pushing again) is the end-time. Pushing a third time starts the timer. Witht the red button you can exit the menu any time and interrupt the timer.

### LED's
| Green | Red | *Function* |
| --- | --- | --- |
| On | Off | Pump is off |
| Off | On | Error occured, view logging |
| Blinking | On | Pump is on indefinately |
| Blinking | Blinking | The timer is enabled |
| Off | Blinking 0.2 seconds | In timer menu, push to exit | 
",0,0,1,0,farm,"[farm, garden, relais, remote, sprinkler, timer]",00000
1076,RaffleAutoJoin,erxson,N/A,https://github.com/erxson/RaffleAutoJoin,https://api.github.com/repos/erxson/RaffleAutoJoin,Auto !join for StreamElements' raffles,"1. npm i
2. rename REMOVETEXTBEFORETHISDOT>.env to .env and edit it
3. npm run bot

skidded, btw
",0,0,1,0,farm,"[bot, farm, raffles, stream, streamelements, twitch]",00000
1077,Business-Analysis-Method-with-R,julioeli86,N/A,https://github.com/julioeli86/Business-Analysis-Method-with-R,https://api.github.com/repos/julioeli86/Business-Analysis-Method-with-R,Config files for my GitHub profile.,"# A case study evaluation of the factors influencing the U.S. swine industry during COVID-19

The US pork integrated industry includes pig farmers, transportation companies, hog processing plants, distributors, and retailers.
The Hog processing plants around the country got affected during the early months of the Covid-19 Pandemic due to Covid-19 outbreaks inside the plants that led to a reduction in pig processing capacity of about 45% (Marchant-Forde and Boyle 2020).
The reduction of hog processing capacity at the plant level caused a backlog of ready pigs to market around the country swine’s farm sector.
The pig inventories sudden increase caused reduced hog prices and a disruption of normal livestock production.
This study focuses on the disruption of the swine producers by the Covid-19 Pandemic at the Hog Farming level due to the closure of Hog Processing Plants down the supply chain. The study investigates how contract farming, the farm’s marketing plan, the farm’s size, and the type helped to manage the risk associated with the closure of the Hog Processing Plants. To develop this study, we used the farm classification developed by USDA’s Economic Research Service (ERS) which classifies USA’s Farms (EIBN, 2018).

**Hypothesis (H1)**: The reduction of hog processing capacity negatively impacted the implementation of the swine farm’s daily standard operating procedures (SOPs).

**Hypothesis (H2)**: A swine farming operation under a production contract was positively associated with a better emergency plan to reestablish business continuity and daily standard operating procedures (SOPs) at the swine farm.

**Hypothesis (H3)**: A team of swine nutritionists and veterinary resources helped to manage the oversupply of ready pigs to market at the swine farming operation under a production contract.

![My Image](BAN-701-FIG-001.jpg)

This study uses data from swine farmers around the country. The data collection's main goal was to explore the factors that caused the disruption of the swine producers by the Covid-19 Pandemic at the Hog Farming level.

The questionnaire intends to collect the following information: (1) farm’s demographic data; (2) data on production, operation, and the number of hogs harvest per day, (3) monthly farm’s operational mode during 2020; (4) farm’s operational contract type; (5) data on each farmer’s knowledge on swine diet adjustment to reduce growth and farmer’s participation in the webinar by the swine’s industry to manage diets during the COVID-19 pandemic.

![My Image](BAN-701-FIG-002.jpg)

# Testing the Hypotheses

The case study used a [survey](https://www.surveymonkey.com/r/995CQV3) of 10 questions. The [survey](https://www.surveymonkey.com/r/995CQV3) was posted using the surveymonkey.com website platform. The [survey](https://www.surveymonkey.com/r/995CQV3) was sent to a total of 46 individual farms within the United States. In addition, the [survey](https://www.surveymonkey.com/r/995CQV3) was posted to 11 Facebook Groups with a total of 64,800 members as per Facebook-provided data. The [survey](https://www.surveymonkey.com/r/995CQV3) questions were collected between April and May 2021. The online [survey](https://www.surveymonkey.com/r/995CQV3) can be accessed [here](https://www.surveymonkey.com/r/995CQV3). The ten survey questions and variable combinations can be seen below, See Table 1.

![My Image](BAN-701-Table1-R.jpg)

Due to limited time and a lack of networking within the swine industry. The sample size is only 13 participants. However, the survey was able to help us to collect important information that compares to data available through the USDA’s Economic Research Service (ERS) which classifies USA’s Farms (EIBN, 2018).

As an example, the survey was able to identify that 62% of the people who answered the survey were from Small to Midsize Family farms, See Table 2. This quantity is mirroring the distribution of farms by the value of products shown on the USDA’s Economic Research Service (ERS) (EIBN, 2018).

![My Image](BAN-701-Table2-R.jpg)

According to our data analysis, we were able to accept all of the following hypotheses:

The Hypothesis (H1) was accepted as the p-value of 1.315e-05 is less than the 0.10 needed for a confidence interval of 90%. The code used to calculate Hypothesis (H1) values can be found here: [Mod_13_Part2_Analysis_Hypothesis_H1](Code/Mod_13_Part_2_Analysis_Hypothesis_H1.R)

In addition, as you can see in Table 3, the Oversupply variable results show that farmers agree that a variation in the number of harvest hogs lead to an increase in the inventory level during the first half of 2020 compared to the same period of 2019, (Marchant & Boyle 2020).

![My Image](BAN-701-Table3-R.jpg)

As per Table 3, a total of 14 participants, or 36% of the participants agreed that disruption on the normal levels of hogs occurred during the first half of 2020.

The Hypothesis (H2) was accepted as the p-value of 2.169e-06 is less than the 0.10 needed for a confidence interval of 90%. The code used to calculate Hypothesis (H2) values can be found here: [Mod_13_Part2_Analysis_Hypothesis_H2](Code/Mod_13_Part_2_Analysis_Hypothesis_H2.R)

The Hypothesis (H3) was accepted as the p-value of 1.028e-05 is less than the 0.10 needed for a confidence interval of 90%. The code used to calculate Hypothesis (H3) values can be found here: [Mod_13_Part2_Analysis_Hypothesis_H3](Code/Mod_13_Part_2_Analysis_Hypothesis_H3.R)

As you can see in Table 4 below, a higher percentage of participants agreed that the Hog diet played an important role in their inventory management during the early months of the COVID-19 pandemic, (Freese, 2020) & (Ep13-Pipestone, 2020).

![My Image](BAN-701-Table4-R.jpg)


# REFERENCES

•	Marchant-Forde JN, Boyle LA. COVID-19 Effects on Livestock Production: A One Welfare Issue. Front Vet Sci. 2020 Sep 30;7:585787. doi: 10.3389/fvets.2020.585787. Erratum in: Front Vet Sci. 2020 Nov 19;7:625372. PMID: 33195613; PMCID: PMC7554581. 

•	WHAT THE PORK INDUSTRY LEARNED FROM THE CORONAVIRUS DEBACLE - By Betsy Freese10/12/2020, Successful Farming, www.agriculture.com 
https://www.agriculture.com/livestock/pork-powerhouses/what-the-pork-industry-learned-from-the-coronavirus-debacle 

•	THESE 15 PLANTS SLAUGHTER 59% OF ALL HOGS IN THE US 
April, 9, 2020,  
http://jaysonlusk.com/blog/2020/4/9/these-15-plants-slaughter-59-of-all-hogs-in-the-us 
These 15 Plants Slaughter 59% of All Hogs in the US — Jayson Lusk 

•	US hog prices fall sharply in April as COVID-19 constrains slaughter capacity 
COVID-19: US hog prices drop as slaughter capacity is constrained - Swine news - pig333, pig to pork community 
https://www.pig333.com/latest_swine_news/covid-19-us-hog-prices-drop-as-slaughter-capacity-is-constrained_16155/ 

•	Episode 11: COVID-19 and it’s Impact on Pig Production with Dr. Beth Thompson 
Swine Time Podcast with Pipestone, By Pipestone, Jun 16, 2020 
https://www.pipestone.com/episode-11-covid-19-and-its-impact-on-pig-production-with-dr-beth-thompson/ 

•	Episode 13: We slowed pigs down: What was the effect and where do we go from here? 
Swine Time Podcast with Pipestone, By Pipestone, Jul 9, 2020 
https://www.pipestone.com/episode-13-we-slowed-pigs-down-what-was-the-effect-and-where-do-we-go-from-here/ 

•	Economic Information Bulletin Number (EIBN, 2018) 
America’s Diverse Family Farms: 2018 Edition (usda.gov) 

•	Marketing and Production Contracts Are Widely Used in U.S. Agriculture 
USDA ERS - Marketing and Production Contracts Are Widely Used in U.S. Agriculture 

•	Coronavirus: How the pandemic has changed the future of meat processing plants 
Coronavirus: How the pandemic has changed the future of meat processing plants - YouTube 

•	Slowing pig growth during COVID-19, models for use in future market fluctuations Mike D. Tokach, Bob D. Goodband, Joel M. DeRouchey, Jason C. Woodworth, and Jordan T. Gebhardt Department of Animal Sciences and Industry, Kansas State University, Manhattan, KS

•	Partnerships Were Key When COVID-19 Struck Pork Producers | News (iastate.edu)
https://www.extension.iastate.edu/news/partnerships-were-key-when-covid-19-struck-pork-producers The Iowa Pork Industry Center worked with industry partners to provide critical information to pork producers. September 24, 2020, 1:24 pm | Jason Ross, Chris Rademacher

•	COVID-19 Effects on Livestock Production: A One Welfare Issue. Jeremy N. Marchant-Forde and Laura A.Boyle. Published: 30 September 2020, doi: 10.3389/fvets.2020.585787


",0,0,1,0,farm,"[config, covid-19, farm, farmers, food, food-industry, food-products, github-config, supply-chain-management, swine]",00000
1078,Node-Farm,hishamraeda,N/A,https://github.com/hishamraeda/Node-Farm,https://api.github.com/repos/hishamraeda/Node-Farm,My first introduction to Node.Js. A simple program that will showcase organic and non-organic foods and gives a general overview of the context of the food. ,"{'message': 'Not Found', 'documentation_url': 'https://docs.github.com/rest/repos/contents#get-repository-content'}",0,0,1,3,farm,"[farm, html-css-javascript, node-js]",00000
1079,pokecord-farmer,g-ae,N/A,https://github.com/g-ae/pokecord-farmer,https://api.github.com/repos/g-ae/pokecord-farmer,Farmer for Pokecord Discord BOT,"# Pokecord farmer

### Setup

* You will need :
  * Node (tested with v17.3)
  * Python (tested with v3.9)
* Create config.json file with:
  * tokenBot
  * tokenUser
  * botPrefix
* Install all needed dependencies
```bash
  npm i
```
* Install python's dependencies
```bash
  py -m pip install -r requirements.txt
```
* Execute the bot
```bash
  node bot.js
```",0,0,1,0,farm,"[bot, discord, farm]",00000
1080,template-farm,oedokumaci,N/A,https://github.com/oedokumaci/template-farm,https://api.github.com/repos/oedokumaci/template-farm,My template repository to build Web Apps using the FARM stack.,"<div align=""center"">

This is a template Python repository to start a fresh Web development project with a default FARM stack.

<img src=./style/farmstack.png width=""300"">

![Tests](https://github.com/oedokumaci/template-farm/actions/workflows/tests.yml/badge.svg)
![Quality](https://github.com/oedokumaci/template-farm/actions/workflows/quality.yml/badge.svg)
[![pdm-managed](https://img.shields.io/badge/pdm-managed-blueviolet)](https://pdm.fming.dev)
[![Code style: black](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/psf/black)
![pre-commit](https://img.shields.io/badge/pre--commit-enabled-brightgreen?logo=pre-commit&logoColor=white)
[![License: MIT](https://img.shields.io/badge/License-MIT-yellow.svg)](https://opensource.org/licenses/MIT)

</div>

The project setup includes:

- Python >= 3.10
- Ubuntu, MacOS, Windows latest OS versions
- [FastAPI](https://fastapi.tiangolo.com/) for backend
- [React](https://reactjs.org/) for frontend
- [MongoDB](https://www.mongodb.com/) for database
- [PDM](https://pdm.fming.dev/latest/) for dependency management
- [GitHub Actions](https://github.com/features/actions) and [pre-commit](https://pre-commit.com/) for linting, formatting, CI/CD
  - [Black](https://black.readthedocs.io/en/stable/#) for code formatting
  - [Mypy](https://mypy.readthedocs.io/en/stable/) for static type checking
  - [Pytest](https://docs.pytest.org/) for testing
- [MIT](https://en.wikipedia.org/wiki/MIT_License) license
- The above badges of this README.md

# Getting Started

1. Install [Python](https://www.python.org/downloads/) 3.10 in your local machine. For MacOS use
```zsh
brew install python@3.10
```
2. Click on the `Use this template` button [at this page](https://github.com/oedokumaci/template-farm) to create a new repository from this template (you must be logged in to GitHub to see the button).
3. Name your repository and click `Create repository from template`. If the repository name is more than one word, make sure to use -hyphens- instead of spaces or underscores.
4. Git clone the repository to your local machine.
5. Cd into the repository directory.
6. Run template_setup.py with
```zsh
python template_setup.py [--user-name YOUR_GIT_USER_NAME] [--user-email YOUR_GIT_USER_EMAIL]
```
7. Follow the instructions in the terminal.

### Running the setup script will:
 - Rename file contents, names, and directories that contains template repository name with the new repository name
 - Rename user name and user email in and `README_main.md`
 - Configure GitHub user name and user email locally
 - Remove `pdm.lock`, `pyproject.toml`, and `requirements.txt`
 - Remove `README.md` and rename `README_main.md` to `README.md`
 - If not installed pip install [PDM](https://pdm.fming.dev/latest/) in your local machine
 - Update PDM to the latest version
 - [PDM](https://pdm.fming.dev/latest/) init with Python 3.10. Select the default options (hit `Enter`) when prompted except:
   - Select `y` to make project installable
 - Install dependencies with [PDM](https://pdm.fming.dev/latest/)
 - Install [pre-commit](https://pre-commit.com/) hooks to local `.git` folder
 - Prompt user an option include `.vscode/settings.json`
 - Remove `template_setup.py`
 - Prompt user an option to git add commit and push
 - Remove `.mypy_cache` and `.pytest_cache` folders
",0,0,1,0,farm,"[farm, fastapi, fullstack, mongodb, python, react, template]",00000
1081,sol-project,sre990,N/A,https://github.com/sre990/sol-project,https://api.github.com/repos/sre990/sol-project,This is the repository for my second year Operating Systems Lab project.,"# FARM
This is the repository for my second year Operating Systems Lab project. I was required to give an implementation of the farm pattern in c.

The project is made up of two processes: the masterworker and the collector. The masterworker is a multithreaded entity responsible for setting up an AF_UNIX socket connection (i.e. acting as a server), for asynchronous signal handling and for distributing tasks among its worker threads. Whilst the collector is a process forked by the masterworker and its job is to connect to the socket (i.e. acting as a client), to gather the results sent by each worker via socket connection and to print the results.

Inter-process communication is achieved via the use of a stream socket of the AF_UNIX family, as mentioned before, and via an unnamed pipe. They, respectively, handle the transmission of results from the worker threads to the collector process and the delivery of signals from the masterworker's signal handler thread to the collector.

The workers are created from within the master thread and put into a pool. Communication between the master and the worker threads is achieved by using a concurrent structure storing filepaths representing tasks: the bounded buffer. The master puts tasks into the buffer and each worker removes one task from it at a time. Each worker then proceeds to open the file located at the path represented by the task, performs a simple computation on its contents and sends the result to the collector.

Input validation and error checking is performed throughout and a rudimental system for tracing is employed. Additionally, some data structures written specifically for the project are unit-tested for correctness.

For more information, please build the program (see section below) and run the command `farm -h`. 

Feel also free to have a look at the Makefile and the source files.

## possible usages: 
* `make (all)` -> builds the executables
* `make test` -> executes the test.sh script
* `make test1` -> executes the default configuration in verbose mode with valgrind
* `make test2` -> same as above but a configuration file is passed as an argument
* `make test3` -> executes ./farm -n 2 -q 4 -t 2000 test/*.dat -d test -v
* `make test4` -> executes the signals.sh script
* `make sample_report` -> same as test1, but saves the stderr and stdout in ""./logs/report.log""
* `make error[1,2]` -> tests some configuration files that may generate errors
* `make error3` -> tests some user inputs that may generate errors
* `make clean(all)` -> gets rid of all files created with the previous commands
",0,0,1,0,farm,"[bounded-buffer, client-server, concurrency, farm, linked-list, master-worker, multithreading, signals, socket-programming, thread-pool, unipi]",00000
1082,harrow,faerietree,N/A,https://github.com/faerietree/harrow,https://api.github.com/repos/faerietree/harrow,"A tool that serves meadow care, e.g. it can be pulled across a meadow after manure has been spread if it is still too clumsy.","# Harrow

A tool for meadow care, e.g. it can be pulled across a field after manure has been spread if it is still too clumsy. The better it is distributed, the more plants benefit from the muck, and the less likely it is to mow into possible chunks later.

It also serves to spread earth hills created by mice (also - questionably - easing the life of those as they have an easier time getting material out).
",0,0,2,0,farm,"[animal, care, farm, field, linkable, meadow, operating, system, tool, worlddevelopment]",00000
1083,autonomic-farm,giacomodeliberali,N/A,https://github.com/giacomodeliberali/autonomic-farm,https://api.github.com/repos/giacomodeliberali/autonomic-farm,"🎓Farm parallel pattern that can increment or decrement the number of workers to achieve a constant service time, provided as input","{'message': 'Not Found', 'documentation_url': 'https://docs.github.com/rest/repos/contents#get-repository-content'}",0,0,1,0,farm,"[architecture, cpp, farm, farm-parallel-pattern, monitor, multicore, parallel-patterns, workerpool, workers, workers-spawned]",00000
1084,farm,ghyghoo8,N/A,https://github.com/ghyghoo8/farm,https://api.github.com/repos/ghyghoo8/farm,🚜 🌱🌾🌵🍀🍏🥦🌺,"## farm 

[![Build Status](https://github.com/ghyghoo8/farm/workflows/ci/badge.svg?branch=master)](https://github.com/ghyghoo8/farm/actions)


🚜 🌱🌾🌵🍀🍏🥦🌺


----

## License

[auto-green](https://github.com/justjavac/auto-green) is released under the MIT License. See the bundled [LICENSE](./LICENSE) file for details.
",0,0,1,0,farm,"[farm, farming]",00000
1085,fastapi-mongo-todo,mabdullahadeel,N/A,https://github.com/mabdullahadeel/fastapi-mongo-todo,https://api.github.com/repos/mabdullahadeel/fastapi-mongo-todo,A fullstack todo demo built using FastAPI and mongoDB,"# Fullstack todo app with fastapi and nextjs
",0,0,1,0,farm,"[farm, fastapi, mongodb, todo]",00000
1086,DankMemer_Farm,C0ffeeL0ver,N/A,https://github.com/C0ffeeL0ver/DankMemer_Farm,https://api.github.com/repos/C0ffeeL0ver/DankMemer_Farm,"A Script to farm dank memer on discord, using post requests.","{'message': 'Not Found', 'documentation_url': 'https://docs.github.com/rest/repos/contents#get-repository-content'}",0,0,1,0,farm,"[dank-memer, discord, dotenv, farm, farming]",00000
1087,ecosia,spinfal,N/A,https://github.com/spinfal/ecosia,https://api.github.com/repos/spinfal/ecosia,"a dumb and simple tool to """"""abuse"""""" ecosia's search-to-tree system. i really mean no harm in making this, if anything, this helps ecosia.","# what is this?
it is a very simple way to ""abuse"" ecosia's search-to-tree system.

## sPiN, hOw dO i UsE this
if you cant figure out how to open a html file, then... good luck...

or yk, use the link in the about section.",0,0,1,0,farm,"[ecosia, ecosia-search, farm, html, javascript, simple, useless]",00000
1088,farmosweb,almostengr,N/A,https://github.com/almostengr/farmosweb,https://api.github.com/repos/almostengr/farmosweb,Custom version of farmOS with additional modules.,"# FarmOS Web
Custom version of FarmOS with additional modules and functionality for maintaining a garden.

## Project Goals 
The goals of this project is to develop and maintain a garden that can automatically water itself, 
monitor growing conditions, and alert if a problem is detected. Features and functionality regarding 
the project will be tracked using issues.

## Hardware
* Ubuntu Server 16.04 LTS

## Software
* FarmOS distribution running on Drupal 7

## Maintainer
Kenny Robinson, @almostengr

",0,0,2,0,farm,"[data-collection, drupal7, farm, farming, farmos, garden, gardening, php, website]",00000
1089,DEFHR-Site-Redesign,ptisdel,N/A,https://github.com/ptisdel/DEFHR-Site-Redesign,https://api.github.com/repos/ptisdel/DEFHR-Site-Redesign,,"# DEFHR-Site-Redesign

This website acts as a landing page for the Days' End Farm Horse Rescue. Discover how to get involved - either through donations, training sessions, volunteer work, or horse adoption.
",0,0,2,0,farm,"[adopt, adopting, adoption, farm, horse, horses]",00000
1090,tibz.farm,g105b,N/A,https://github.com/g105b/tibz.farm,https://api.github.com/repos/g105b/tibz.farm,An update of my first ever web project.,"An update of my first ever web project.
=======================================

In 2005 I was a young lad. I'd self-taught myself a few programming languages including BASIC, Delphi and DIV. It was at this time I decided to try out web development.

As it turns out, the whole web thing caught on, and I somehow made a career out of it.

**The TIBZ Farm** is the first project that I ever wrote for the web. I've  decided to tweak the code and open-source it for its 12 year anniversary.

In a nutshell
-------------

The project started life as the simplest interactive website I could imagine: a single input field that would put your input into the database and regurgitate it back to other users.

This sounded too bland. Flashing colours and wobbling words were added. The rest is history.

What is a TIBZ and why does it live on a farm?
----------------------------------------------

The project was originally called ""The AutoTIBZ"". Tibz was an in-joke with some guys at school, with whom I'm still great friends with to this day. None of us can explain what it really means, just that it sounded funny at the time. The ""farm"" is just the most random domain I could register in 2015 when I did a bit of spring cleaning of my servers.

NSFW; terrible, horrific content
--------------------------------

The internet of 2005 caught on to this site. Like any site that allows anonymous content, it has not been used for many pleasantries. Currently there is no censorship, and all user contributed content is **horrific, disgusting, racist, perverted, sick**, beautiful art. It's wonderful to think that my code has contributed such commentary to the internet for over a decade.

Sub-projects
------------

For fun and to flex my web developer muscles, I'm going to do the following sub-projects with The TIBZ Farm, whenever I get time:

+ [x] Update the code and open-source it
+ [ ] Package the project as an app for mobile devices
+ [ ] Create a Twitter bot
+ [ ] NSFWipsum dummy text generator
+ [ ] ... Any ideas? Open an [issue](https://github.com/g105b/tibz.farm/issues) or [pull request](https://github.com/g105b/tibz.farm/pulls)",0,0,1,0,farm,"[farm, filth, internet, tibz-farm]",00000
1091,Farm-order,abdulweb,N/A,https://github.com/abdulweb/Farm-order,https://api.github.com/repos/abdulweb/Farm-order,,"{'message': 'Not Found', 'documentation_url': 'https://docs.github.com/rest/repos/contents#get-repository-content'}",0,0,2,0,farm,"[farm, managnment-system]",00000
1092,farm-website,eugbabenko,N/A,https://github.com/eugbabenko/farm-website,https://api.github.com/repos/eugbabenko/farm-website,Website for Nature Farm,"<h1>Nature Farm website</h1>

The ""Nature Farm"" is a website that allows customers find information about helthy and nature farm near the city. Website includes a variety of features that make it easy to see a lot of farm photo. The website have a responsive design that adapts to different screen sizes and optimized for mobile devices.",0,0,1,0,farm,"[css, css-grid, farm, html, responsive-web-design]",00000
1093,simple_token_farm_eth,MaximilianoTRZ,N/A,https://github.com/MaximilianoTRZ/simple_token_farm_eth,https://api.github.com/repos/MaximilianoTRZ/simple_token_farm_eth,Solidity implementation of a TokenFarm which allows the user to make deposits and withdrawals of a LP Token. Users can also claim the rewards generated during staking.,"# Simple DeFi Yield Farming Exercise

Cómo usar Granjas (Yield Farming) en PancakeSwap
https://docs.pancakeswap.finance/products/yield-farming/how-to-use-farms

### Caso de uso

En este ejercicio, implementarás un proyecto DeFi Simple Token Farm.

La Granja permite al usuario hacer depósitos y retiros de un Token LP simulado.
Los usuarios también pueden reclamar las recompensas generadas durante el staking. Estos tokens de recompensa son el token de la plataforma: nombre: ""Token DApp"", token ""DAPP"".

El caso de uso del contrato Simple Token Farm es el siguiente:

- Los usuarios depositan Tokens LP `deposit()`
- El usuario puede cosechar o reclamar recompensas `claimRewards()`
- El usuario puede retirar (unstake) todos sus Tokens LP `withdraw()` pero aún reclamar recompensas pendientes
- Cada vez que se actualiza la cantidad de tokens LP apostados, primero se deben recalcular las recompensas
- El propietario de la plataforma puede llamar al método `distributeRewardsAll()` regularmente para actualizar las recompensas pendientes de todos los usuarios que están apostando (staking).

### Contratos

- LPToken.sol: Contrato de token LP, utilizado para staking.
- DappToken.sol: Contrato de token de la plataforma, utilizado como recompensa.
- TokenFarm.sol: El contrato de la Granja.

## Requerimientos

1. Crea un nuevo proyecto _Hardhat_, agrega el contrato proporcionado
2. Implementa todas las funciones, eventos y todo lo mencionado en los comentarios del código en el contrato
3. Despliega los contratos en un entorno local

### Bonus: 1 Modifier

Crea funciones `modifier()` que validen: 1. si el llamante de la función es un usuario que está apostando 2. si el llamante de la función es el propietario del contrato
Añade el modificador en las funciones que lo requieran.

### Bonus: 2 Struct

Crea una `Struct{}` que contenga la información de staking del usuario y reemplace los siguientes `mapping()`

```
mapping(address => uint256) public stakingBalance;
mapping(address => uint256) public checkpoints;
mapping(address => uint256) public pendigRewards;
mapping(address => bool) public hasStaked;
mapping(address => bool) public isStaking;
```

Por un nuevo `mapping()` de `(address => structUser)`.
Modifica las funciones correspondientes de acuerdo a este nuevo `mapping()`.

### Bonus: 3 Tests

Crea un archivo de tests para el contrato SimpleBank que te permita probar:

1. Acuñar Tokens LP para un usuario y hacer un depósito de esos tokens
2. La plataforma distribuye correctamente las recompensas a todos los usuarios que están apostando
3. El usuario reclama recompensas y verifica si se transfirieron exitosamente a su cuenta
4. El usuario des-apuesta todos los tokens LP depositados y reclama recompensas pendientes, si las hay

### Bonus: 4 Recompensas variables por bloque

1. Transforma las recompensas por bloque en un rango, permite al propietario cambiar ese valor.

### Bonus: 5 Tarifa de retiro ( Withdrawal fee)

1. Cobra una tarifa al momento de reclamar las recompensas.
2. Añade una función para que el propietario pueda retirar esa tarifa.

### Bonus: 6 Proxy (nuevo proyecto)

1. Implementa el extra 5 como una versión V2 de nuestro contrato de agricultura
   O
2. Nuestra plataforma ha crecido y vamos a implementar granjas para más tipos de tokens LP. ¿Cómo podemos solucionar el despliegue de nuevos contratos de agricultura ahorrando gas?
",0,0,1,0,farm,"[blockchain, ethereum, farm, solidity, token, web3]",00000
1094,farm,go-ego,go-ego,https://github.com/go-ego/farm,https://api.github.com/repos/go-ego/farm,,# farm,0,0,3,0,farm,"[farm, hash]",00000
1095,OpenFarm,openfarmcc,openfarmcc,https://github.com/openfarmcc/OpenFarm,https://api.github.com/repos/openfarmcc/OpenFarm,A free and open database for farming and gardening knowledge. You can grow anything!,"![OpenFarm](https://github.com/openfarmcc/OpenFarm/blob/master/app/assets/images/OpenFarm%20f%20logo%20-%20green%20%23219653.svg)

[![Coverage Status](https://img.shields.io/coveralls/openfarmcc/OpenFarm.svg)](https://coveralls.io/r/openfarmcc/OpenFarm)
[![Code Climate](https://codeclimate.com/github/openfarmcc/OpenFarm/badges/gpa.svg)](https://codeclimate.com/github/FarmBot/OpenFarm)
[![OpenCollective](https://opencollective.com/openfarm/backers/badge.svg)](#backers)
[![OpenCollective](https://opencollective.com/openfarm/sponsors/badge.svg)](#sponsors)

# Security Concerns

We take security seriously and value the input of independent researchers. Please email `security@farmbot.io` for issues that require immediate attention. Please follow [responsible disclosure](). **Do not use Slack or Github issues to discuss security vulnerabilities.**

# The Community of Contributors: How it Works

### About

[OpenFarm](http://openfarm.cc) is a free and open database and web application for farming and gardening knowledge. One might think of it as the Wikipedia for growing plants, though it functions more like a cooking recipes site.

The main content are Growing Guides: creative, crowd-sourced, single-author, structured documents that include all of the necessary information for a person or machine to grow a plant, i.e.: seed spacing and depth, watering regimen, recommended soil composition and companion plants, sun/shade requirements, etc. In this Freebase platform, gardeners can find answers to questions like &ldquo;How do I grow tomatoes?&rdquo;

### Start by Joining Existing Contributors

To start the discussion, get involved, and meet OpenFarm core community of contributors, we strongly recommend joining [our Slack room](http://slack.openfarm.cc/)! This is where you'll find the latest conversation about Openfarm and the most active contributors.

Check also the [FAQ](http://openfarm.cc/pages/faq) for some frequently asked questions about contributing (Angular, Issue Trackers, IRC Channels).

Check the [ongoing issues](https://github.com/openfarmcc/OpenFarm/projects) that need work on in the priority list.

### Look for Something You Want to Work On

For [front-end](https://github.com/openfarmcc/OpenFarm/projects/1) and [back-end](https://github.com/openfarmcc/OpenFarm/projects/3) code contributions, we aim at maintaining and prioritizing the Github issues through Github Projects, the Trello-like web-based project management board of Github: [OpenFarm Projects](https://github.com/openfarmcc/OpenFarm/projects).

Need to use OpenFarm Assets? [Here they are](https://drive.google.com/open?id=0B-wExYzQcnp3cGphOGZQS1lBRFk)!

We have few more languages missing for the website content to be translated: help us [translate the website](https://www.transifex.com/projects/p/openfarm/)!

### Who Can Contribute

Everyone is welcome to bring value to the Open Source community of OpenFarm. Time is our most valuable assets here, so any minute of your time counts to make things happen! ""Better done, than perfect!""
We strive for diversity in our community and want to ensure we provide a safe and inclusive space for everyone by adopting a [Code of Conduct](https://openfarm.cc/pages/code_of_conduct?locale=en).

Our community is composed of tech and non-tech folks, newbie as well as experts in gardening, overall great people willing to take actions for a better future and sharing knowledge and growing our own food.

### Our problem-solving process

On the way we work together, we aim at:
- having transparency in reasoning behind actions: taking time for documentation, questions and answers
- prefering done, than perfect: breaking down tasks so that anyone can contribute few minutes of their time on a regular basis
- taking shortcuts: what's the most obvious for a better usability? what's the shortest way to build a feature? What's the most valuable inputs for a feedback?

## Development

### Getting Started (The Easy Way)

You should use Vagrant to get the OpenFarm system running on your computer. It will avoid having to install the things listed in The Hard Way below.

1. Install [Vagrant](https://www.vagrantup.com/docs/installation/).
2. Install [VirtualBox](https://www.virtualbox.org/wiki/Downloads).
3. Open your terminal.
4. `$ git clone https://github.com/openfarmcc/OpenFarm.git` - this tells your computer to fetch the data stored in this repository using git.
5. `$ cd OpenFarm` - change to the OpenFarm directory.
6. `$ vagrant up` This will take a long time. We're downloading a whole bunch of stuff. Go make yourself a pot of coffee, or brew some tea. If something goes wrong at this point, reach out to us directly via GitHub issue.

#### Accessing Vagrant

Once Vagrant is set up on your system, you might want to actually access it. For example, if you want to start up the server (though vagrant up should run `rails s` for you):

8. `$ vagrant ssh` - this makes you access the new virtual server we just created to run OpenFarm on.
9. `cd /vagrant` - the `vagrant` directory is mirrored in your own computer. If you add a file there, you'll see it appear here.
10. `rails s` - actually run the Rails server!
11. you should now be able to access OpenFarm on your local system at http://localhost:3000. If all went well, you will have a seeded database and can use the account `admin@admin.com` with password `admin123`.

The above is still being patched, so please reach out to us if something went wrong!

### Getting Started (The Hard Way)

You will need to install [Ruby](http://www.ruby-lang.org/en/), [Rails](http://rubyonrails.org/), [ElasticSearch](http://www.elasticsearch.org/) [v6.5.0](https://www.elastic.co/guide/en/elasticsearch/reference/6.5/release-notes-6.5.0.html), and [Mongodb](http://docs.mongodb.org/manual/installation/) before you can get an OpenFarm server up and running on your local machine. Once you have these prerequisites to get started with a local copy of the project, run:

```bash
$ git clone https://github.com/openfarmcc/OpenFarm.git
$ cd OpenFarm
$ bundle install
$ rake db:setup
$ echo ""ENV['SECRET_KEY_BASE'] = '$(rake secret)'"" >> config/app_environment_variables.rb
$ echo ""ENV['GOOGLE_MAPS_API_KEY'] = ''"" >> config/app_environment_variables.rb # or get an actual API key at https://console.developers.google.com/flows/enableapi?apiid=maps_backend&keyType=CLIENT_SIDE&reusekey=true&pli=1
$ rails s
```

Then, visit [http://127.0.0.1:3000/](http://127.0.0.1:3000/) in your browser to see the OpenFarm web application running on your local machine. If all went well, you will have a seeded database and can use the account `admin@admin.com` with password `admin123`.

**Note about ElasticSearch**: Some Linux users have noted issues installing ElasticSearch onto a host machine. One workaround is to install ElasticSearch via Docker:

```
sudo docker pull elasticsearch:6.5.0
sudo docker pull mongo
```

```
sudo sysctl -w vm.max_map_count=262144 # <= Some linux users must run this
sudo docker run -p 9300:9300 -p 9200:9200 elasticsearch:6.5.0
sudo docker run -p 27017:27017 mongo

```


**If you had any problem** installing bundles getting up and running etc see the [Common Issues Page](https://github.com/openfarmcc/OpenFarm/wiki/Common-Issues).

Remember that `/vagrant` folder in the Vagrant VM is largely for convenience, and working in it can cause unexpected behavior with other tools - you should do your work in your own non-vagrant environment. Use the environment you're most familiar with to program, and Vagrant will do the rest.


#### Become a Core Contributor

If you've made two PRs, we'll add you as a core contributor.

For core-code contributors, here are a few basic ground-rules:

* No --force pushes or modifying the Git history in any way.
* Non-master branches ought to be used for ongoing work.
* External API changes and significant modifications ought to be subject to an internal pull-request to solicit feedback from other contributors.
* Internal pull-requests to solicit feedback are encouraged for any other non-trivial contribution but left to the discretion of the contributor.
* Contributors should attempt to adhere to the prevailing code-style.

([based on the OPEN open source model](https://github.com/Level/community/blob/master/CONTRIBUTING.md))

[Further reading](https://medium.com/the-javascript-collection/healthy-open-source-967fa8be7951#.alkpecsnd)

### Actual Code Contributors

Here are some of the [Github contributors](https://github.com/openfarmcc/OpenFarm/graphs/contributors).

Outside of Github, there's a whole host of people who also contributed financially, by building gardening content on the website, on providing more visibility for OpenFarm in any ways!

### Donate to OpenFarm as a Backer

Support us with a monthly donation and help us continue our activities. [[Become a backer](https://opencollective.com/openfarm#backer)]

<a href=""https://opencollective.com/openfarm"" target=""_blank""><img src=""https://opencollective.com/openfarm/backers.svg?avatarHeight=36&width=600""></a>

### Support OpenFarm as a Sponsor

Become a sponsor and get your logo on our README on Github with a link to your site. [[Become a sponsor](https://opencollective.com/openfarm#sponsor)]

<a href=""https://opencollective.com/openfarm"" target=""_blank""><img src=""https://opencollective.com/openfarm/sponsors.svg?avatarHeight=36&width=600""></a>

### Software License

The MIT License (MIT)

Copyright (c) 2019 OpenFarm [(http://openfarm.cc/)](http://openfarm.cc/).

Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the “Software”), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

### Data License

All data within the OpenFarm.cc database is in the [Public Domain (CC0)](http://creativecommons.org/publicdomain/zero/1.0/).
",1337,1337,62,130,farming,"[farming, gardening, open-source, plants, rails]",00000
1096,awesome-agriculture,brycejohnston,N/A,N/A,https://api.github.com/repos/brycejohnston/awesome-agriculture,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1AC:0208:2DD717C:5DE2FE6:65223FBD.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,farming,"[N, /, A]",00000
1097,TwitchDropsMiner,DevilXD,N/A,https://github.com/DevilXD/TwitchDropsMiner,https://api.github.com/repos/DevilXD/TwitchDropsMiner,"An app that allows you to AFK mine timed Twitch drops, with automatic drop claiming and channel switching.","# Twitch Drops Miner

This application allows you to AFK mine timed Twitch drops, without having to worry about switching channels when the one you were watching goes offline, claiming the drops, or even receiving the stream data itself. This helps both you and Twitch save on bandwidth and hassle. Everyone wins!

### How It Works:

Every ~60 seconds, the application sends a ""minute watched"" event to the channel that's currently being watched - this is enough to advance the drops. Note that this completely bypasses the need to download any actual stream video and sound. To keep the status (ONLINE or OFFLINE) of the channels up-to-date, there's a websocket connection established that receives events about streams going up or down, or updates regarding the current amount of viewers.

### Features:

- Stream-less drop mining - save on bandwidth.
- Game priority and exclusion lists, allowing you to focus on mining what you want, in the order you want, and ignore what you don't want.
- Sharded websocket connection, allowing for tracking up to `8*25-2=199` channels at the same time.
- Automatic drop campaigns discovery based on linked accounts (requires you to do [account linking](https://www.twitch.tv/drops/campaigns) yourself though)
- Stream tags and drop campaign validation, to ensure you won't end up mining a stream that can't earn you the drop.
- Automatic channel stream switching, when the one you were currently watching goes offline, as well as when a channel streaming a higher priority game goes online.
- Login session is saved in a cookies file, so you don't need to login every time.
- Mining is automatically started as new campaigns appear, and stopped when the last available drops have been mined.

### Usage:

- Download and unzip [the latest release](https://github.com/DevilXD/TwitchDropsMiner/releases) - it's recommended to keep it in the folder it comes in.
- Run it and login into your Twitch account using your username and password, and a 2FA key if you have one setup. It's recommended to avoid having to double-take this step, as you can run into CAPTCHA that will prevent you from trying to log in again for the next 12+ hours. You can retry afterwards though.
- After a successful login, the app should fetch a list of all available campaigns and games you can mine drops for - you can then select and add games of choice to the Priority List available on the Settings tab, and then press on the `Reload` button to start processing. It will fetch a list of all applicable streams it can watch, and start mining right away. You can also manually switch to a different channel as needed.
- Make sure to link your Twitch account to game accounts on the [campaigns page](https://www.twitch.tv/drops/campaigns), to enable more games to be mined.
- Persistent cookies will be stored in the `cookies.jar` file, from which the authorization (login) information will be restored on each subsequent run.

### Pictures:

![Main](https://user-images.githubusercontent.com/4180725/164298155-c0880ad7-6423-4419-8d73-f3c053730a1b.png)
![Inventory](https://user-images.githubusercontent.com/4180725/164298315-81cae0d2-24a4-4822-a056-154fd763c284.png)
![Settings](https://user-images.githubusercontent.com/4180725/164298391-b13ad40d-3881-436c-8d4c-34e2bbe33a78.png)

### Notes:

- Make sure to keep your cookies file safe, as the authorization information it stores can give another person access to your Twitch account.
- Successfully logging into your Twitch account in the application, may cause Twitch to send you a ""New Login"" notification email. This is normal - you can verify that it comes from your own IP address. The application uses the Twitch's SmartTV account linking process, so the detected browser during the login should signify that as well.
- The time remaining timer always countdowns a single minute and then stops - it is then restarted only after the application redetermines the remaining time. This ""redetermination"" can happen as early as at 10 seconds in a minute remaining, and as late as 20 seconds after the timer reaches zero (especially when finishing mining a drop), but is generally only an approximation and does not represent nor affect actual mining speed. The time variations are due to Twitch sometimes not reporting drop progress at all, or reporting progress for the wrong drop - these cases have all been accounted for in the application though.

### Notes about the Windows build:

- To achieve a portable-executable format, the application is packaged with PyInstaller into an `EXE`. Some non-mainstream antivirus engines might report the packaged executable as a trojan, because PyInstaller has been used by others to package malicious Python code in the past. These reports can be safely ignored. If you absolutely do not trust the executable, you'll have to install Python yourself and run everything from source.
- The executable uses the `%TEMP%` directory for temporary runtime storage of files, that don't need to be exposed to the user (like compiled code and translation files). For persistent storage, the directory the executable resides in is used instead.
- The autostart feature is implemented as a registry entry to the current user's (`HKCU`) autostart key. It is only altered when toggling the respective option. If you relocate the app to a different directory, the autostart feature will stop working, until you toggle the option off and back on again

### Notes about the Linux build:

- The Linux app is built and distributed in a portable-executable format (similar to [AppImages](https://appimage.org/)).
- The Linux app should work out of the box on any modern distribution (as long as it has `glibc>=2.31` and a working display server).
- Every feature of the app is expected to work on Linux just as well as it does on Windows. If you find something that's broken, please [open a new issue](https://github.com/DevilXD/TwitchDropsMiner/issues/new).
- The size of the Linux app is significantly larger than the Windows app due to the inclusion of the `gtk3` library (and its dependencies), which is required for proper system tray/notifications support.
- As an alternative to the native Linux app, you can run the Windows app via [Wine](https://www.winehq.org/) instead. It works really well!

### Support

<div align=""center"">

[![Buy me a coffee](https://i.imgur.com/cL95gzE.png)](
    https://www.buymeacoffee.com/DevilXD
)
[![Support me on Patreon](https://i.imgur.com/Mdkb9jq.png)](
    https://www.patreon.com/bePatron?u=26937862
)

</div>

### Advanced Usage:

If you'd be interested in running the latest master from source or building your own executable, see the wiki page explaining how to do so: https://github.com/DevilXD/TwitchDropsMiner/wiki/Setting-up-the-environment,-building-and-running

### Project goals:

Twitch Drops Miner (TDM for short) has been designed with a couple of simple goals in mind. These are, specifically:

- Twitch Drops oriented - it's in the name. That's what I made it for.
- Easy to use for an average person. Includes a nice looking GUI and is packaged as a ready-to-go executable, without requiring an existing Python installation to work.
- Intended as a helper tool that starts together with your PC, runs in the background through out the day, and then closes together with your PC shutting down at the end of the day. If it can run continuously for 24 hours at minimum, and not run into any errors, I'd call that good enough already.
- Requiring a minimum amount of attention during operation - check it once or twice through out the day to see if everything's fine with it.
- Underlying service friendly - the amount of interactions done with the Twitch site is kept to the minimum required for reliable operation, at a level achievable by a diligent site user.

TDM is not intended for/as:

- Mining channel points - again, it's about the drops: only. The current points you're getting are a byproduct of getting the drops, not the main goal of it.
- Mining anything else besides Twitch drops - no, I won't be adding support for a random 3rd party site that also happens to rely on watching Twitch streams.
- Unattended operation: worst case scenario, it'll stop working and you'll hopefully notice that at some point. Hopefully.
- 100% uptime application, due to the underlying nature of it, expect fatal errors to happen every so often.
- Being hosted on a remote server as a 24/7 miner.
- Being used with more than one managed account.
- Mining campaigns the managed account isn't linked to.

This means that features such as:

- It being possible to run it without a GUI, or with only a console attached.
- Any form of automatic restart when an error happens.
- Docker or any other form of remote deployment.
- Using it with more than one managed account.
- Making it possible to mine campaigns that the managed account isn't linked to.
- Anything that increases the site processing load caused by the application.
- Any form of additional notifications system (email, webhook, etc.), beyond what's already implemented.

..., are most likely not going to be a feature, ever. You're welcome to search through the existing issues to comment on your point of view on the relevant matters, where applicable. Otherwise, most of the new issues that go against these goals will be closed and the user will be pointed to this paragraph.

For more context about these goals, please check out these issues: [#161](https://github.com/DevilXD/TwitchDropsMiner/issues/161), [#105](https://github.com/DevilXD/TwitchDropsMiner/issues/105), [#84](https://github.com/DevilXD/TwitchDropsMiner/issues/84)

### Credits:

<!---
Note: When adding a new credits line below, please add two spaces at the end of the previous line,
if they aren't already there. Doing so ensures proper markdown rendering on Github.

• Last line can have them omitted.
• Please ensure your editor won't trim the spaces upon saving the file.
• Please leave a single empty new line at the end of the file.
-->

@Suz1e - For the entirety of the Chinese (简体中文) translation and revisions.  
@wwj010 - For the Chinese (简体中文) translation corrections and revisions.  
@nwvh - For the entirety of the Czech (Čeština) translation.  
@ThisIsCyreX - For the entirety of the German (Deutsch) translation.  
@Shofuu - For the entirety of the Spanish (Español) translation.  
@zarigata - For the entirety of the Portuguese (Português) translation.  
@alikdb - For the entirety of the Turkish (Türkçe) translation.  
@roobini-gamer - For the entirety of the French (Français) translation.  
@Sergo1217 - For the entirety of the Russian (Русский) translation.  
@Ricky103403 - For the entirety of the Traditional Chinese (繁體中文) translation.  
@Patriot99 - For the Polish (Polski) translation (co-authored with @DevilXD).  
@Nollasko - For the entirety of the Ukrainian (Українська) translation.  
@casungo - For the entirety of the Italian (Italiano) translation.  
@Bamboozul - For the entirety of the Arabic (العربية) translation.
",832,832,28,36,farming,"[drop, drops, farming, miner, mining, twitch]",00000
1098,tania-core,usetania,N/A,N/A,https://api.github.com/repos/usetania/tania-core,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1E3:840D:2945676:54D6D10:65224182.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,farming,"[N, /, A]",00000
1099,awesome-geospatial-companies,chrieke,N/A,https://github.com/chrieke/awesome-geospatial-companies,https://api.github.com/repos/chrieke/awesome-geospatial-companies,":globe_with_meridians: List of 500+ geospatial companies (GIS, Earth Observation, UAV, Satellite, Digital Farming, ..)","# Awesome Geospatial Companies [![Awesome](https://awesome.re/badge-flat.svg)](https://awesome.re)

List of 500+ geospatial companies & interactive map

:earth_americas: Earth Observation :globe_with_meridians: GIS / Spatial Analysis :airplane: UAV / Aerial :seedling: Digital Farming :world_map: Webmap / Cartography :artificial_satellite: Satellite Operator


<p align=""center"">
  <img width=""600"" src=""figures/companies.png"">
</p>

<p align=""center"">
  <img width=""500"" src=""figures/preview.jpg"">
</p>

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; **[Or explore the list as an interactive map](https://www.google.com/maps/d/u/0/edit?mid=1SCCvhv3Tn3acV3EeY91dGxCdLuvSPGCH&ll=5.275933136532167%2C0&z=2)**

<br>

- Office size (S < 20, M 20-100, L > 100) is an estimate (LinkendIn, industry knowledge, job ads etc.)
- Relevant (B)ranch offices (non-sales office with sufficient amount of geo-related jobs) are listed separately.
- Focus on commercial companies, currently no research institues included.

Thank you to the many contributors! To contribute please see the 
[contribution guide](https://github.com/chrieke/awesome-geospatial-companies/blob/master/CONTRIBUTING.md). 


<br>

[:argentina: Argentina](https://github.com/chrieke/awesome-geospatial-companies#argentina-argentina) - [:armenia: Armenia](https://github.com/chrieke/awesome-geospatial-companies#armenia-armenia) - [:australia: Australia](https://github.com/chrieke/awesome-geospatial-companies#australia-australia) - [:austria: Austria](https://github.com/chrieke/awesome-geospatial-companies#austria-austria) - [:azerbaijan: Azerbaijan](https://github.com/chrieke/awesome-geospatial-companies#azerbaijan-azerbaijan) - [:bahrain: Bahrain](https://github.com/chrieke/awesome-geospatial-companies#bahrain-bahrain) - [:bangladesh: Bangladesh](https://github.com/chrieke/awesome-geospatial-companies#bangladesh-bangladesh) - [:belgium: Belgium](https://github.com/chrieke/awesome-geospatial-companies#belgium-belgium) - [:benin: Benin](https://github.com/chrieke/awesome-geospatial-companies#benin-benin) - [:bolivia: Bolivia](https://github.com/chrieke/awesome-geospatial-companies#bolivia-bolivia) - [:bosnia_herzegovina: Bosnia Herzegovina](https://github.com/chrieke/awesome-geospatial-companies#bosnia_herzegovina-bosnia-herzegovina) - [:botswana: Botswana](https://github.com/chrieke/awesome-geospatial-companies#botswana-botswana) - [:brazil: Brazil](https://github.com/chrieke/awesome-geospatial-companies#brazil-brazil) - [:bulgaria: Bulgaria](https://github.com/chrieke/awesome-geospatial-companies#bulgaria-bulgaria) - [:cambodia: Cambodia](https://github.com/chrieke/awesome-geospatial-companies#cambodia-cambodia) - [:cameroon: Cameroon](https://github.com/chrieke/awesome-geospatial-companies#cameroon-cameroon) - [:canada: Canada](https://github.com/chrieke/awesome-geospatial-companies#canada-canada) - [:chile: Chile](https://github.com/chrieke/awesome-geospatial-companies#chile-chile) - [:cn: China](https://github.com/chrieke/awesome-geospatial-companies#cn-china) - [:colombia: Colombia](https://github.com/chrieke/awesome-geospatial-companies#colombia-colombia) - [:costa_rica: Costa Rica](https://github.com/chrieke/awesome-geospatial-companies#costa_rica-costa-rica) - [:croatia: Croatia](https://github.com/chrieke/awesome-geospatial-companies#croatia-croatia) - [:cyprus: Cyprus](https://github.com/chrieke/awesome-geospatial-companies#cyprus-cyprus) - [:czech_republic: Czech Republic](https://github.com/chrieke/awesome-geospatial-companies#czech_republic-czech-republic) - [:denmark: Denmark](https://github.com/chrieke/awesome-geospatial-companies#denmark-denmark) - [:egypt: Egypt](https://github.com/chrieke/awesome-geospatial-companies#egypt-egypt) - [:estonia: Estonia](https://github.com/chrieke/awesome-geospatial-companies#estonia-estonia) - [:finland: Finland](https://github.com/chrieke/awesome-geospatial-companies#finland-finland) - [:fr: France](https://github.com/chrieke/awesome-geospatial-companies#fr-france) - [:de: Germany](https://github.com/chrieke/awesome-geospatial-companies#de-germany) - [:greece: Greece](https://github.com/chrieke/awesome-geospatial-companies#greece-greece) - [:guatemala: Guatemala](https://github.com/chrieke/awesome-geospatial-companies#guatemala-guatemala) - [:hungary: Hungary](https://github.com/chrieke/awesome-geospatial-companies#hungary-hungary) - [:india: India](https://github.com/chrieke/awesome-geospatial-companies#india-india) - [:indonesia: Indonesia](https://github.com/chrieke/awesome-geospatial-companies#indonesia-indonesia) - [:iran: Iran](https://github.com/chrieke/awesome-geospatial-companies#iran-iran) - [:ireland: Ireland](https://github.com/chrieke/awesome-geospatial-companies#ireland-ireland) - [:israel: Israel](https://github.com/chrieke/awesome-geospatial-companies#israel-israel) - [:it: Italy](https://github.com/chrieke/awesome-geospatial-companies#it-italy) - [:jp: Japan](https://github.com/chrieke/awesome-geospatial-companies#jp-japan) - [:kenya: Kenya](https://github.com/chrieke/awesome-geospatial-companies#kenya-kenya) - [:luxembourg: Luxembourg](https://github.com/chrieke/awesome-geospatial-companies#luxembourg-luxembourg) - [:malaysia: Malaysia](https://github.com/chrieke/awesome-geospatial-companies#malaysia-malaysia) - [:mexico: Mexico](https://github.com/chrieke/awesome-geospatial-companies#mexico-mexico) - [:netherlands: Netherlands](https://github.com/chrieke/awesome-geospatial-companies#netherlands-netherlands) - [:new_zealand: New Zealand](https://github.com/chrieke/awesome-geospatial-companies#new_zealand-new-zealand) - [:nigeria: Nigeria](https://github.com/chrieke/awesome-geospatial-companies#nigeria-nigeria) - [:norway: Norway](https://github.com/chrieke/awesome-geospatial-companies#norway-norway) - [:pakistan: Pakistan](https://github.com/chrieke/awesome-geospatial-companies#pakistan-pakistan) - [:peru: Peru](https://github.com/chrieke/awesome-geospatial-companies#peru-peru) - [:poland: Poland](https://github.com/chrieke/awesome-geospatial-companies#poland-poland) - [:portugal: Portugal](https://github.com/chrieke/awesome-geospatial-companies#portugal-portugal) - [:romania: Romania](https://github.com/chrieke/awesome-geospatial-companies#romania-romania) - [:ru: Russia](https://github.com/chrieke/awesome-geospatial-companies#ru-russia) - [:saudi_arabia: Saudi Arabia](https://github.com/chrieke/awesome-geospatial-companies#saudi_arabia-saudi-arabia) - [:serbia: Serbia](https://github.com/chrieke/awesome-geospatial-companies#serbia-serbia) - [:singapore: Singapore](https://github.com/chrieke/awesome-geospatial-companies#singapore-singapore) - [:slovakia: Slovakia](https://github.com/chrieke/awesome-geospatial-companies#slovakia-slovakia) - [:slovenia: Slovenia](https://github.com/chrieke/awesome-geospatial-companies#slovenia-slovenia) - [:south_africa: South Africa](https://github.com/chrieke/awesome-geospatial-companies#south_africa-south-africa) - [:kr: South Korea](https://github.com/chrieke/awesome-geospatial-companies#kr-south-korea) - [:es: Spain](https://github.com/chrieke/awesome-geospatial-companies#es-spain) - [:sri_lanka: Sri Lanka](https://github.com/chrieke/awesome-geospatial-companies#sri_lanka-sri-lanka) - [:sweden: Sweden](https://github.com/chrieke/awesome-geospatial-companies#sweden-sweden) - [:switzerland: Switzerland](https://github.com/chrieke/awesome-geospatial-companies#switzerland-switzerland) - [:taiwan: Taiwan](https://github.com/chrieke/awesome-geospatial-companies#taiwan-taiwan) - [:tanzania: Tanzania](https://github.com/chrieke/awesome-geospatial-companies#tanzania-tanzania) - [:thailand: Thailand](https://github.com/chrieke/awesome-geospatial-companies#thailand-thailand) - [:tr: Turkey](https://github.com/chrieke/awesome-geospatial-companies#tr-turkey) - [:united_arab_emirates: UAE](https://github.com/chrieke/awesome-geospatial-companies#united_arab_emirates-uae) - [:uk: UK](https://github.com/chrieke/awesome-geospatial-companies#uk-uk) - [:us: USA](https://github.com/chrieke/awesome-geospatial-companies#us-usa) - [:ukraine: Ukraine](https://github.com/chrieke/awesome-geospatial-companies#ukraine-ukraine) - [:uzbekistan: Uzbekistan](https://github.com/chrieke/awesome-geospatial-companies#uzbekistan-uzbekistan) - [:vietnam: Vietnam](https://github.com/chrieke/awesome-geospatial-companies#vietnam-vietnam) - [:zimbabwe: Zimbabwe](https://github.com/chrieke/awesome-geospatial-companies#zimbabwe-zimbabwe) - 

## :argentina: Argentina 
| Company (5)                                       | Size & City                                                                                                                                            | Focus                                                                        |
|:--------------------------------------------------|:-------------------------------------------------------------------------------------------------------------------------------------------------------|:-----------------------------------------------------------------------------|
| [Aeroterra](https://www.aeroterra.com/es-ar/home) | **M** [:round_pushpin: Buenos Aires](https://www.google.com/maps/search/Calle+Carlos+M.+Della+Paolera+218,+Retiro,+Buenos+Aires,+Argentina+)           | :globe_with_meridians: ESRI Reseller & consultancy Argentinia                |
| [Dymaxion Labs](http://dymaxionlabs.com)          | **S** [:round_pushpin: Buenos Aires](https://www.google.com/maps/search/Castillo+1366+1414+Buenos+Aires,+Ciudad+Autónoma+de+Buenos+Aires,+Argentina+)  | :earth_americas: Monitoring drivers of economic development in Latin America |
| [Geosystems S.A.](https://www.geosystems.com.ar/) | **M** [:round_pushpin: Buenos Aires](https://www.google.com/maps/search/Esteban+de+Luca+2223,+Capital+Federal,+Buenos+Aires+C1246ABS,+AR+)             | :globe_with_meridians: GIS software development                              |
| [Satellogic](https://www.satellogic.com)          | **M** (H) [:round_pushpin: Ciudad](https://www.google.com/maps/search/Av.+Raúl+Scalabrini+Ortíz+3306,+C1425DCO+CABA,+Argentina+)                       | :artificial_satellite: Cubesat 1m optical or 30m hyperspectral               |
| [SpaceSUR](https://www.spacesur.com)              | **M** (H) [:round_pushpin: Buenos Aires](https://www.google.com/maps/search/Av.+Rivadavia+611,+Piso+11+-+C1002AAE,+Ciudad+de+Buenos+Aires,+Argentina+) | :earth_americas: EO: All-purpose, InSAR, Geospatial Analytics                | 

 ## :armenia: Armenia 
| Company (2)                              | Size & City                                                                                                                    | Focus                                   |
|:-----------------------------------------|:-------------------------------------------------------------------------------------------------------------------------------|:----------------------------------------|
| [Geovibe](https://geo-vibe.com/)         | **S** [:round_pushpin: Yerevan](https://www.google.com/maps/search/41+Arshakunyats+Avenue,+Yerevan+0026,+Republic+of+Armenia+) | :globe_with_meridians: GIS: All-purpose |
| [Intelinair](https://www.intelinair.com) | **S** (H) [:round_pushpin: Yerevan](https://www.google.com/maps/search/2/2+Melik+Adamyan+Street,+Yerevan,+Armenia+)            | :seedling: UAV crop insights            | 

 ## :australia: Australia 
| Company (47)                                                                  | Size & City                                                                                                                                                                                                                                                                                                                                                                                   | Focus                                                                                      |
|:------------------------------------------------------------------------------|:----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|:-------------------------------------------------------------------------------------------|
| [360Environmental](https://360environmental.com.au/)                          | **M** [:round_pushpin: West Leederville](https://www.google.com/maps/search/10+Bermondsey+Street,+West+Leederville,+Western+Australia+6007,+Australia+)                                                                                                                                                                                                                                       | :globe_with_meridians: Environmental Consultants & Services                                |
| [AAM Group](http://www.aamgroup.com)                                          | **M** (B) [:round_pushpin: Sydney](https://www.google.com/maps/search/33+Waterloo+Road,+Macquarie+Park+NSW+2113,+Australia+) <br /> **M** (H) [:round_pushpin: Brisbane](https://www.google.com/maps/search/Leichhardt+Court,+55+Little+Edward+Street,+Spring+Hill+QLD+4000,+Australia+)                                                                                                      | :airplane: Aerial image & LiDAR acquisition, 3D GIS                                        |
| [Aerial Survey Limited](https://www.aerialsurveys.co.nz/)                     | **M** [:round_pushpin: Albany](https://www.google.com/maps/search/8+Saturn+Place,+Albany,+North+Shore,+Auckland+0632,+New+Zealand+)                                                                                                                                                                                                                                                           | :airplane: Aerial photography and mapping services                                         |
| [Aerometrex](https://aerometrex.com.au/)                                      | **M** (H) [:round_pushpin: Adelaide](https://www.google.com/maps/search/51-53+Glynburn+Rd,+Glynde,+SA+5070,+Australia+) <br /> **M** (B) [:round_pushpin: Perth](https://www.google.com/maps/search/10+Brodie-Hall+Dr,+Technology+Park,+Bentley,+6102,+Australia+)                                                                                                                            | :airplane: Aerial image & LiDAR acquisition, 3D GIS                                        |
| [Anditi](https://www.anditi.com/)                                             | **M** [:round_pushpin: Newcastle](https://www.google.com/maps/search/287+King+St,+Newcastle,+New+South+Wales+2300,+Australia+)                                                                                                                                                                                                                                                                | :globe_with_meridians: GIS + EO: All-purpose                                               |
| [Arlula](https://www.arlula.com/)                                             | **S** [:round_pushpin: Sydney](https://www.google.com/maps/search/608+Harris+St,+Ultimo+NSW+2007,+Australia+)                                                                                                                                                                                                                                                                                 | :earth_americas: Single API for satellite imagery access                                   |
| [Astron](http://www.astron.com.au)                                            | **S** [:round_pushpin: Perth](https://www.google.com/maps/search/129+Royal+Street,+East+Perth+WA+6004,+Australia+)                                                                                                                                                                                                                                                                            | :earth_americas: Environmental consulting, remote sensing                                  |
| [Biosys](https://www.biosis.com.au/)                                          | **L** [:round_pushpin: Melbourne](https://www.google.com/maps/search/38+Bertie+St,+Port+Melbourne+VIC+3207,+Australia+)                                                                                                                                                                                                                                                                       | :globe_with_meridians: Ecology and Heritage Consulting                                     |
| [Core Logic](http://www.corelogic.co.nz)                                      | **L** [:round_pushpin: Wellington](https://www.google.com/maps/search/275+Cuba+St,+Te+Aro,+Wellington+6011,+New+Zealand+)                                                                                                                                                                                                                                                                     | :globe_with_meridians: Property intelligence, Geospatial consulting                        |
| [DAS (DIgital Agriculture Services)](https://digitalagricultureservices.com/) | **M** [:round_pushpin: Melbourne](https://www.google.com/maps/search/St+Door+34,+Docklands,+Victoria,+3008,+Australia+)                                                                                                                                                                                                                                                                       | :globe_with_meridians: SAAS for agriculture and finance                                    |
| [ESRI](https://esriaustralia.com.au)                                          | **L** (B) [:round_pushpin: Brisbane](https://www.google.com/maps/search/111+Elizabeth+Street,+Brisbane+QLD+4000,+Australia+)                                                                                                                                                                                                                                                                  | :globe_with_meridians: ArcGIS software, GIS                                                |
| [Eco Logical Australia](https://www.ecoaus.com.au/)                           | **L** (H) [:round_pushpin: Sutherland](https://www.google.com/maps/search/668+Old+Princes+Highway,+Sutherland,+NSW+2232,+Australia+) <br /> **M** (B) [:round_pushpin: Sydney](https://www.google.com/maps/search/101+Sussex+St,+Sydney,+NSW+2000,+Australia+) <br /> **M** (B) [:round_pushpin: Perth](https://www.google.com/maps/search/235+St+Georges+Terrace+Perth,+WA+6000,+Australia+) | :globe_with_meridians: Environmental consultancy                                           |
| [Envirometrics](https://www.envirometrics.io/)                                | **S** [:round_pushpin: Brisbane](https://www.google.com/maps/search/10+Browning+St,+South+Brisbane+QLD+4101,+Australia+)                                                                                                                                                                                                                                                                      | :earth_americas: EO: environmental monitoring & mining rehabilitation                      |
| [FloodMapp](https://www.floodmapp.com/)                                       | **S** [:round_pushpin: Brisbane](https://www.google.com/maps/search/315+Brunswick+St,+Fortitude+Valley,+Queensland+4006,+Australia+)                                                                                                                                                                                                                                                          | :globe_with_meridians: Live flood mapping data                                             |
| [FrontierSI](https://frontiersi.com.au/)                                      | **M** [:round_pushpin: Melbourne](https://www.google.com/maps/search/Village+Street,+Docklands,+VIC,+3008,+Melbourne,+Australia+)                                                                                                                                                                                                                                                             | :globe_with_meridians: Spatial mapping, infrastructure, positioning, geodesy               |
| [GIS People](http://www.gispeople.com.au)                                     | **M** [:round_pushpin: Brisbane](https://www.google.com/maps/search/27+Commercial+Road,+Newstead,+QLD+4006,+Australia+)                                                                                                                                                                                                                                                                       | :globe_with_meridians: Spatial data insights plattform development, geospatial consultancy |
| [Gaia Ressources](https://www.gaiaresources.com.au/)                          | **M** [:round_pushpin: Perth](https://www.google.com/maps/search/191+St+Georges+Terrace,+Perth,+Western+Australia+6000,+AU+)                                                                                                                                                                                                                                                                  | :globe_with_meridians: Environmental technology consultancy                                |
| [Geo Image](https://www.geoimage.com.au/)                                     | **S** [:round_pushpin: Brisbane](https://www.google.com/maps/search/72+Costin+St,+Fortitude+Valley,+Queensland+4006,+Australia+)                                                                                                                                                                                                                                                              | :earth_americas: EO: All-purpose                                                           |
| [Geoimage](https://www.geoimage.com.au)                                       | **S** [:round_pushpin: Brisbane](https://www.google.com/maps/search/72+Costin+Street,+Fortitude+Valley+QLD+4006,+Australia+)                                                                                                                                                                                                                                                                  | :earth_americas: EO consultancy                                                            |
| [Geoscape](https://geoscape.com.au/)                                          | **M** [:round_pushpin: Canberra](https://www.google.com/maps/search/113+Canberra+Avenue,+Griffith,+Canberra,+ACT+2603,+Australia+)                                                                                                                                                                                                                                                            | :globe_with_meridians: Location data-as-a-service                                          |
| [Geospatial Australia](https://www.geospatial.land/)                          | **S** [:round_pushpin: Dubbo](https://www.google.com/maps/search/274+Macquarie+Street,+Dubbo,+NSW+2830,+Australia+)                                                                                                                                                                                                                                                                           | :globe_with_meridians: GIS: All-purpose                                                    |
| [Geospatial Intelligence PTY LTD](https://geoint.com.au/)                     | **M** [:round_pushpin: Canberra](https://www.google.com/maps/search/42+Macquarie+Street+Barton+ACT,+Canberra,+2600+Australia+)                                                                                                                                                                                                                                                                | :globe_with_meridians: GIS: Environment, natural resource management, defence and security |
| [HQPlantations](https://www.hqplantations.com.au/)                            | **M** [:round_pushpin: North Lakes](https://www.google.com/maps/search/3a/2+Flinders+Parade,+North+Lakes+QLD+4509,+Australia+)                                                                                                                                                                                                                                                                | :globe_with_meridians: Forest Management                                                   |
| [Latconnect](https://latconnect60.com/)                                       | **S** [:round_pushpin: Perth](https://www.google.com/maps/search/191+St+Georges+Terrace,+Perth,+Australia+)                                                                                                                                                                                                                                                                                   | :artificial_satellite: Multispectral and hyperspectral satellites                          |
| [Location IQ](https://locationiq.com.au/)                                     | **M** [:round_pushpin: Sydney](https://www.google.com/maps/search/19+Martin+Place,+Sydney,+New+South+Wales+2000,+Australia+)                                                                                                                                                                                                                                                                  | :globe_with_meridians: Property economics advisory                                         |
| [Lotssearch](https://www.lotsearch.com.au/)                                   | **M** [:round_pushpin: Sydney](https://www.google.com/maps/search/68+Alfred+Street,+Milsons+Point,+Sydney,+NSW+2061,+Australia+)                                                                                                                                                                                                                                                              | :globe_with_meridians: Environmental risk mapping                                          |
| [Mapizy](http://www.mapizy.com)                                               | **S** [:round_pushpin: Crawley](https://www.google.com/maps/search/UWA+School+of+Computer+Science,+Crawley+WA+6009,+​Australia+)                                                                                                                                                                                                                                                              | :earth_americas: Infrastructure and natural ressources monitoring                          |
| [Maptek](https://www.maptek.com/)                                             | **L** (H) [:round_pushpin: Adelaide](https://www.google.com/maps/search/31+Flemington+Street,+Glenside,+Adelaide,+SA+5065,+Australia+)                                                                                                                                                                                                                                                        | :globe_with_meridians: Mining decision-making support solutions                            |
| [NGIS](https://ngis.com.au/)                                                  | **S** [:round_pushpin: Sydney](https://www.google.com/maps/search/300+Barangaroo+Ave,+Sydney+NSW+2000,+Australia+) <br /> **M** (H) [:round_pushpin: Perth](https://www.google.com/maps/search/1a/53+Burswood+Road,+Burswood+WA+6100,+Australia+)                                                                                                                                             | :globe_with_meridians: GIS + EO: All purpose                                               |
| [Nearmap](https://www.nearmap.com/us/en)                                      | **L** [:round_pushpin: Sydney](https://www.google.com/maps/search/Tower+One,+100+Barangaroo+Avenue,+Barangaroo,+NSW+2000,+Australia+)                                                                                                                                                                                                                                                         | :airplane: High-res aerial maps                                                            |
| [Outline Global](https://outlineglobal.com.au)                                | **S** [:round_pushpin: Mirrabooka](https://www.google.com/maps/search/Doncaster+Road,+Mirrabooka+Western+Australia+6061,+Australia+)                                                                                                                                                                                                                                                          | :earth_americas: EO data reseller, GIS services                                            |
| [Ozius Spatial](http://www.ozius.com.au/#intro)                               | **S** [:round_pushpin: Brisbane](https://www.google.com/maps/search/Camp+Hill+QLD,+4152,+Australia+)                                                                                                                                                                                                                                                                                          | :earth_americas: EO: environmental monitoring, land management                             |
| [Pelicancorp](https://www.pelicancorp.com/us/home)                            | **M** [:round_pushpin: Richmond](https://www.google.com/maps/search/2/600+Victoria+St,+Richmond+VIC+3121,+Australia+)                                                                                                                                                                                                                                                                         | :globe_with_meridians: Utilities & asset infrastructure monitoring                         |
| [Plotlogic](https://www.plotlogic.com/)                                       | **M** [:round_pushpin: Red Hill](https://www.google.com/maps/search/25+Musgrave+Rd,+Red+Hill,+Queensland+4059,+Australia+)                                                                                                                                                                                                                                                                    | :earth_americas: Mining Exploration                                                        |
| [Propeller Aero](https://www.propelleraero.com/)                              | **L** (H) [:round_pushpin: Surry](https://www.google.com/maps/search/251+Riley+Street,+Surry+Hills,+NSW+2010,+Australia+)                                                                                                                                                                                                                                                                     | :airplane: UAV 3D mapping and data analytics solutions                                     |
| [Revelare](https://revelare.com.au/)                                          | **S** [:round_pushpin: Revelare](https://www.google.com/maps/search/119+Condon+St,+Kennington,+Victoria+3550,+Australia+)                                                                                                                                                                                                                                                                     | :airplane: Photomapping Services & LiDAR                                                   |
| [Risk Frontiers](https://riskfrontiers.com/)                                  | **M** [:round_pushpin: St Leonards](https://www.google.com/maps/search/100+Christie+St,+St+Leonards,+New+South+Wales+2065,+Australia+)                                                                                                                                                                                                                                                        | :globe_with_meridians: Natural hazard risk and catastrophe modelling                       |
| [Seequent](https://www.seequent.com/)                                         | **M** (B) [:round_pushpin: Perth](https://www.google.com/maps/search/11+Mounts+Bay+Road,+Perth,+Australia+)                                                                                                                                                                                                                                                                                   | :globe_with_meridians: Earth modelling & geo-data management software                      |
| [Sensorem](https://sensorem.com.au/)                                          | **S** [:round_pushpin: Perth](https://www.google.com/maps/search/A4/435+Roberts+Rd,+Subiaco+WA+6008,+Australia+)                                                                                                                                                                                                                                                                              | :airplane: Drone & software solutions for remote inspections                               |
| [Soar](https://about.soar.earth/index.html)                                   | **S** [:round_pushpin: Belmont](https://www.google.com/maps/search/2+Cowcher+Pl,+Belmont,+Western+Australia+6104,+Australia+)                                                                                                                                                                                                                                                                 | :world_map: Distribution & collaboration platform for EO imagery & maps                    |
| [Spatial Destillery](https://spatialdistillery.com/)                          | **S** [:round_pushpin: Melbourne](https://www.google.com/maps/search/425+Smith+St,+Fitzroy,+Victoria+3065,+Australia+)                                                                                                                                                                                                                                                                        | :globe_with_meridians: Location intelligence & spatial data solutions                      |
| [Spatial Services](https://www.spatial-services.com/en/spatial-services-ltd/) | **S** [:round_pushpin: Salzburg](https://www.google.com/maps/search/Schillerstraße+30,+A-5020+Salzburg,+Germany+)                                                                                                                                                                                                                                                                             | :globe_with_meridians: GIS+EO: All-purpose                                                 |
| [Spatial Vision](https://spatialvision.com.au/)                               | **M** [:round_pushpin: Melbourne](https://www.google.com/maps/search/575+Bourke+Street,+Melbourne+3000,+Australia+)                                                                                                                                                                                                                                                                           | :globe_with_meridians: Geospatial consultancy, App/IT, cartography                         |
| [Spectrum Spatial](https://spectrumspatial.com.au/)                           | **S** [:round_pushpin: Leederville](https://www.google.com/maps/search/660c+Newcastle+St,+Leederville,+Western+Australia+6007,+AU+)                                                                                                                                                                                                                                                           | :globe_with_meridians: Environmental consultancy                                           |
| [Sprial Blue](https://spiralblue.space/)                                      | **S** [:round_pushpin: Sydney](https://www.google.com/maps/search/1/39+Wellington+St,+Chippendale+NSW+2008,+Australia+)                                                                                                                                                                                                                                                                       | :earth_americas: EO satellite edge computing                                               |
| [The Yield](https://www.theyield.com)                                         | **M** [:round_pushpin: Sydney](https://www.google.com/maps/search/Holt+Street+50,+Surry+Hills,+Sydney,+NSW+2010,+Australia+)                                                                                                                                                                                                                                                                  | :globe_with_meridians: Agriculture and aquaculture insights platform                       |
| [eratos](https://www.eratos.com/)                                             | **S** [:round_pushpin: Richmond](https://www.google.com/maps/search/487+Swan+St,+Level+2,+Richmond,+Victoria+3121,+Australia+)                                                                                                                                                                                                                                                                | :globe_with_meridians: Data platform                                                       | 

 ## :austria: Austria 
| Company (11)                                                      | Size & City                                                                                                                   | Focus                                                                              |
|:------------------------------------------------------------------|:------------------------------------------------------------------------------------------------------------------------------|:-----------------------------------------------------------------------------------|
| [Airborne Technologies](http://www.airbornetechnologies.at)       | **M** [:round_pushpin: Wien](https://www.google.com/maps/search/Viktor+Lang-Straße+8,+2700+Wiener+Neustadt,+Austria+)         | :airplane: Aerial multisensor acquisitions, analysis                               |
| [BlackShark](https://blackshark.ai/)                              | **M** [:round_pushpin: Graz](https://www.google.com/maps/search/Kaiserfeldgasse+1/1/2,+8010+Graz,+Austria+)                   | :globe_with_meridians: 3D Digital Twin                                             |
| [EOX IT Services](https://eox.at)                                 | **S** [:round_pushpin: Wien](https://www.google.com/maps/search/Thurngasse+8,+1090+Wien,+Austria+)                            | :earth_americas: ""Sentinel 2 cloudless"", EO data infrastructure                    |
| [Geoville](https://www.geoville.com)                              | **M** [:round_pushpin: Innsbruck](https://www.google.com/maps/search/Sparkassenplatz+2,+A+-+6020+Innsbruck,+Austria+)         | :earth_americas: EO: All-purpose                                                   |
| [Sentinelhub Austria](https://www.sentinel-hub.at/)               | **M** [:round_pushpin: Graz](https://www.google.com/maps/search/Eggenberger+Allee+49,+Graz,+Styria+8020,+Austria+)            | :earth_americas: EO: All-purpose, subsidary of Sinergise (sentinelhub data portal) |
| [Sistema GmbH](http://www.sistema.at/wp/)                         | **S** [:round_pushpin: Vienna](https://www.google.com/maps/search/Tiefer+Graben+19/2,+1050+Vienna,+Austria+)                  | :earth_americas: EO for atmospheric composition, climate change, AI for emergency  |
| [SynerGIS Informationssysteme GmbH](https://www.esri-austria.at/) | **S** [:round_pushpin: Wien](https://www.google.com/maps/search/Technologiestraße+10/2E,+A-1120+Wien,+Austria+)               | :globe_with_meridians: ESRI distributor Austria                                    |
| [Ubiq](https://www.ubiq.ai/)                                      | **M** [:round_pushpin: Vienna](https://www.google.com/maps/search/Treustrasse+22-24,+Wien,+1200,+Austria+)                    | :globe_with_meridians: Car fleet solutions                                         |
| [Umweltdata](https://umweltdata.at/)                              | **S** [:round_pushpin: Tullnerbach](https://www.google.com/maps/search/Knabstraße+7/4,+3013+Tullnerbach,+Austria+)            | :globe_with_meridians: LIDAR and Drones in Forest Inventory                        |
| [Vertigis](https://www.vertigis.com/)                             | **M** (B) [:round_pushpin: Innsbruck](https://www.google.com/maps/search/Wilhelm-Greil-Straße+17,+A-6020+Innsbruck,+Austria+) | :globe_with_meridians: GIS: All-purpose                                            |
| [ms.GIS](https://www.msgis.com/)                                  | **S** [:round_pushpin: Mödling](https://www.google.com/maps/search/Bahnhofplatz+1a,+Mödling,+Niederösterreich+2340,+Austria+) | :globe_with_meridians: Geo Solutions for Cities, Government, Infrastructure        | 

 ## :azerbaijan: Azerbaijan 
| Company (2)                                        | Size & City                                                                                                                                 | Focus                                                                         |
|:---------------------------------------------------|:--------------------------------------------------------------------------------------------------------------------------------------------|:------------------------------------------------------------------------------|
| [Caspian Geomatics](https://caspiangeomatics.com/) | **S** [:round_pushpin: Baku](https://www.google.com/maps/search/Ahmad+Rajabli+street+1/47,+Tech+Plaza,+Baku,+Narimanov+AZ1075,+Azerbaijan+) | :globe_with_meridians: Geomatics, Hydrography survey & environmental services |
| [Datum](https://datum.az/)                         | **M** [:round_pushpin: Baku](https://www.google.com/maps/search/Afiyeddin+Jalilov+Street+20,+9+floor,+Baku,+AZ+1025,+Azerbaijan+)           | :globe_with_meridians: GIS + EO: All-purpose                                  | 

 ## :bahrain: Bahrain 
| Company (1)                                                                    | Size & City                                                                                                                                    | Focus                                        |
|:-------------------------------------------------------------------------------|:-----------------------------------------------------------------------------------------------------------------------------------------------|:---------------------------------------------|
| [Microcenter GIS Solutions](https://www.microcentergulf.com/gis-solutions.php) | **M** [:round_pushpin: Al Janabiyah](https://www.google.com/maps/search/Road+No:7544+Building+3050+Block:+575,+Al+Janabiyah,+Manama,+Bahrain+) | :globe_with_meridians: ESRI distributor, GIS | 

 ## :bangladesh: Bangladesh 
| Company (5)                                                     | Size & City                                                                                                                           | Focus                                                         |
|:----------------------------------------------------------------|:--------------------------------------------------------------------------------------------------------------------------------------|:--------------------------------------------------------------|
| [Arc Bangladesh](https://www.arcbangladesh.com/)                | **L** [:round_pushpin: Dhaka](https://www.google.com/maps/search/6/5,+Block+-+B,+Lalmatia,+Dhaka-1219,+Bangladesh+)                   | :globe_with_meridians: GIS & Engineering consultancy          |
| [Digital Survey & GIS Services (DSGS)](https://www.dsgsbd.com/) | **S** [:round_pushpin: Dhaka](https://www.google.com/maps/search/126/3,+Monipuripara,+Airport+Road,+Tejgaon,+Dhaka-1215,+Bangladesh+) | :globe_with_meridians: GIS: All-purpose                       |
| [GIS Mapping Bangladesh](http://gismappingbd.com/)              | **S** [:round_pushpin: Dhaka](https://www.google.com/maps/search/Road+#+16,+Banani,+Dhaka-1213,+Bangladesh+)                          | :globe_with_meridians: GIS: Utilities                         |
| [HawarIT Limited](https://www.hawarit.com/)                     | **M** [:round_pushpin: Dhaka](https://www.google.com/maps/search/Narsinghapur,+Zirabo,+Ashulia,+Dhaka,+Dhaka+1341,+Bangladesh+)       | :globe_with_meridians: GIS application development & services |
| [iFarmer Asia](https://ifarmer.asia/en/home)                    | **L** [:round_pushpin: Dhaka](https://www.google.com/maps/search/Road+-+81,+Gulshan+2,+Dhaka+1212,+Bangladesh+)                       | :seedling: Farming supply chain platform                      | 

 ## :belgium: Belgium 
| Company (13)                                                  | Size & City                                                                                                                                                                                                                                           | Focus                                                                           |
|:--------------------------------------------------------------|:------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|:--------------------------------------------------------------------------------|
| [Aerodata International Surveys](http://aerodata-surveys.com) | **M** (H) [:round_pushpin: Antwerpen](https://www.google.com/maps/search/Luchthavenlei+7a,+2100+Deurne,+Belgium+)                                                                                                                                     | :airplane: Airborne surveying and mapping, analysis                             |
| [Aerospacelab](https://www.aerospacelab.be/)                  | **L** [:round_pushpin: Mont-Saint-Guibert](https://www.google.com/maps/search/Rue+André+Dumont+9,+1435,+Mont-Saint-Guibert,+Belgium+)                                                                                                                 | :artificial_satellite: Satellite manufacturer and geospatial insights           |
| [ConstellR](https://constellr.space/)                         | **S** [:round_pushpin: Liege](https://www.google.com/maps/search/Rue+des+Chasseurs+Ardennais+6,+Liège,+Walloon+Region+4031,+Belgium+)                                                                                                                 | :artificial_satellite: Hyperspectral satellite constellation                    |
| [ESRI](http://www.esribelux.com)                              | **M** (B) [:round_pushpin: Wemmel](https://www.google.com/maps/search/54,+Nerviërslaan,+B-+1780+Wemmel,+Belgium+)                                                                                                                                     | :globe_with_meridians: ArcGIS software, GIS                                     |
| [Eurosense](http://www.eurosense.com/)                        | **M** (H) [:round_pushpin: Wemmel](https://www.google.com/maps/search/Nerviërslaan+54,+B-1780+WEMMEL,+BELGIUM+)                                                                                                                                       | :airplane: Aerial imagery & LiDAR acquisition, all-purpose analysis             |
| [Geckomatics](https://geckomatics.com)                        | **S** [:round_pushpin: Antwerpen](https://www.google.com/maps/search/Borsbeeksebrug+34,+2600+Antwerpen-Berchem,+Belgium+)                                                                                                                             | :globe_with_meridians: GIS, outdoor, mobile mapping                             |
| [Geo Solutions](https://geosolutions.be/)                     | **M** [:round_pushpin: Edegem](https://www.google.com/maps/search/Prins+Boudewijnlaan+41,+2650+Edegem,+Belgium+)                                                                                                                                      | :globe_with_meridians: GIS, Fleet management, Routing                           |
| [Gim](https://www.gim.be/en)                                  | **S**  (B) [:round_pushpin: Gembloux](https://www.google.com/maps/search/Rue+Camille+Hubert+13C+-+5032+Gembloux,+Belgium+) <br /> **M** (H) [:round_pushpin: Leuven](https://www.google.com/maps/search/Philipssite+5+bus+27+-+3001+Leuven,+Belgium+) | :globe_with_meridians: GIS+EO: All-purpose                                      |
| [Inflights](https://inflights.com/)                           | **S** [:round_pushpin: Brussels](https://www.google.com/maps/search/Cantersteen+10+BeCentral,+1000+Brussel,+Belgium+)                                                                                                                                 | :airplane: Drones for remote inspections                                        |
| [Merkator BV](https://www.merkator.com/)                      | **M** (B) [:round_pushpin: Belgium](https://www.google.com/maps/search/Vliegwezenlaan+48,+1731+Zellik,+Belgium+)                                                                                                                                      | :globe_with_meridians: Geo-ICT Consultants for Goverment and  Utilities & Telco |
| [Spacebel](https://www.spacebel.com/)                         | **M** [:round_pushpin: Angleur](https://www.google.com/maps/search/Rue+des+Chasseurs+Ardennais+6,+LIEGE+science+park,+4031+Angleur,+Belgium+)                                                                                                         | :earth_americas: Space systems engineering & EO applications                    |
| [TomTom](https://www.tomtom.com)                              | **L** (B) [:round_pushpin: Housse](https://www.google.com/maps/search/Rue+Richassa+32,+4671+Housse,+Belgium+)                                                                                                                                         | :globe_with_meridians: GIS for navigation                                       |
| [Vito Remote Sensing](https://remotesensing.vito.be/)         | **M** [:round_pushpin: Mol](https://www.google.com/maps/search/Boeretang+200,+2400+Mol,+Belgium+)                                                                                                                                                     | :earth_americas: Large scale EO image processing, Terrascope platform           | 

 ## :benin: Benin 
| Company (1)                                  | Size & City                                                                                                       | Focus                                   |
|:---------------------------------------------|:------------------------------------------------------------------------------------------------------------------|:----------------------------------------|
| [Atlas GIS Sarl](https://atlasgis-sarl.com/) | **S** [:round_pushpin: Cotonou](https://www.google.com/maps/search/04BP1089+Cotonou,+Cotonou,+Littoral++229,+BJ+) | :globe_with_meridians: GIS: All-purpose | 

 ## :bolivia: Bolivia 
| Company (1)                                | Size & City                                                                                                               | Focus                                   |
|:-------------------------------------------|:--------------------------------------------------------------------------------------------------------------------------|:----------------------------------------|
| [Igeo](https://www.igeo.com.bo/es-bo/home) | **S** [:round_pushpin: Santa Cruz](https://www.google.com/maps/search/Santa+Cruz+de+la+Sierra,+Santa+Cruz+0000,+Bolivia+) | :globe_with_meridians: ESRI distributor | 

 ## :bosnia_herzegovina: Bosnia Herzegovina 
| Company (3)                                          | Size & City                                                                                                                     | Focus                                                  |
|:-----------------------------------------------------|:--------------------------------------------------------------------------------------------------------------------------------|:-------------------------------------------------------|
| [Gauss Geoinformation Systems](https://gauss.ba/en/) | **S** [:round_pushpin: Tuzla](https://www.google.com/maps/search/Stupine+B2,+75000+Tuzla,+Bosnia+and+Herzegowina+)              | :globe_with_meridians: GIS: All-purpose                |
| [GeoGis](https://www.geogis.ba/)                     | **S** [:round_pushpin: Sarajevo](https://www.google.com/maps/search/Ferde+Hauptmana+7,+Sarajevo+71000,+Bosnia+and+Herzegowina+) | :globe_with_meridians: Surveying, GIS, and 3D modeling |
| [Geobiro](https://www.geobiro.ba/)                   | **M** [:round_pushpin: Konjic](https://www.google.com/maps/search/Pleha+2A,+88+400+Konjic,+Bosnia+and+Herzegovina+)             | :globe_with_meridians: 3D Modelling, Building Survey   | 

 ## :botswana: Botswana 
| Company (1)                             | Size & City                                                                                                   | Focus                                                                        |
|:----------------------------------------|:--------------------------------------------------------------------------------------------------------------|:-----------------------------------------------------------------------------|
| [Geosmart](https://www.geosmartbw.com/) | **S** [:round_pushpin: Botswana](https://www.google.com/maps/search/Independence+Avenue,+Gaborone,+Botswana+) | :globe_with_meridians: Environmental Engineering and Geo-Spatial Consultancy | 

 ## :brazil: Brazil 
| Company (15)                                                           | Size & City                                                                                                                                                                                                                                                                                             | Focus                                                                                             |
|:-----------------------------------------------------------------------|:--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|:--------------------------------------------------------------------------------------------------|
| [Agrooffico](https://www.agrofficio.com.br/)                           | **S** [:round_pushpin: Piracicaba](https://www.google.com/maps/search/Piracicaba,+Butantã,+São+Paulo+-+State+of+São+Paulo,+05508-000,+Brazil+)                                                                                                                                                          | :globe_with_meridians: EO: All-purpose                                                            |
| [Agrosatellite](https://agrosatelite.com.br)                           | **M** [:round_pushpin: Florianópolis](https://www.google.com/maps/search/SC-401+Highway+8600,+Santo+Antonio+de+Lisboa,+Florianópolis,+Brazil+)                                                                                                                                                          | :earth_americas: EO for agriculture, GIS development                                              |
| [Audsat](https://www.audsat.com.br/)                                   | **S** [:round_pushpin: Sao Paulo](https://www.google.com/maps/search/Al.+Santos,+1773,+São+Paulo,+SP+01255-000,+Brazil+)                                                                                                                                                                                | :seedling: AG financing & support platform                                                        |
| [Canopy Remote Sensing Solutions](http://www.canopyrss.tech/)          | **S** [:round_pushpin: Florianópolis](https://www.google.com/maps/search/4150+Rod.+José+Carlos+Daux,+Florianópolis,+SC+88032-005,+Brazil+)                                                                                                                                                              | :earth_americas: Forest mapping, inventory, and monitoring                                        |
| [Climate Corperation](https://www.climate.com)                         | **M** (B) [:round_pushpin: São Paulo,](https://www.google.com/maps/search/Av.+das+Nações+Unidas+12.901,+Torre+Norte+–+7o+andar,+São+Paulo,+04578-910,+Brazil+)                                                                                                                                          | :seedling: ""Field View"" crop insights platform                                                    |
| [Engemap](http://engemap.com.br/)                                      | **S** (B) [:round_pushpin: Boa Vista](https://www.google.com/maps/search/Av.+Santos+Dumont,+160+-+Aparecida,+Boa+Vista+-+RR,+Brazil+) <br /> **S** (B) [:round_pushpin: Chác. Sto. Antônio](https://www.google.com/maps/search/R.+Alexandre+Dumas,+1601+Cj.+67,+Chác.+Sto.+Antônio,+04717-004,+Brazil+) | :globe_with_meridians: GIS, infrastructure feasibility Studies, aerial image acquisition, mapping |
| [Geo3topografia](http://www.geo3topografia.com.br/principal.html)      | **S** [:round_pushpin: Resende](https://www.google.com/maps/search/R.+Luís+Ferreira+Pinto,+80+-+32+-+Manejo,+Resende+-+RJ,+27520-330,+Brazil+)                                                                                                                                                          | :globe_with_meridians: Cadastre, GIS services for energy, mining, urban                           |
| [Geoambiente](https://www.geoambiente.com.br)                          | **M** [:round_pushpin: Urbanova](https://www.google.com/maps/search/São+José+dos+Campos+-+SP,+CEP:+12244-000,+Brazil+)                                                                                                                                                                                  | :globe_with_meridians: GIS & EO: All-purpose                                                      |
| [Geodados](https://www.geodados.com.br/)                               | **M** [:round_pushpin: São José do Rio Preto](https://www.google.com/maps/search/Rua+Inglaterra,+840+Vila+Nossa+Senhora+de+Fátima,+São+José+do+Rio+Preto,+Brazil+)                                                                                                                                      | :globe_with_meridians: Geoprocessing platform for municipalities                                  |
| [Grupo Engemap](http://grupoengemap.com.br)                            | **S** [:round_pushpin: São Paulo](https://www.google.com/maps/search/Rua+Alexandre+Dumas,+1601+6º+andar+CJ+67,+São+Paulo,+Brazil+)                                                                                                                                                                      | :globe_with_meridians: GIS: All-purpose, aerial survey                                            |
| [Imagem](https://www.img.com.br/pt-br/home)                            | **L** [:round_pushpin: São José dos Campos](https://www.google.com/maps/search/Rua+Itororó,+555+-+Vila+Cardoso,+São+José+dos+Campos,+Brazil+)                                                                                                                                                           | :globe_with_meridians: GIS: All-purpose, ESRI reseller                                            |
| [TecTerra Geotecnologias](https://tecterra.com.br)                     | **S** [:round_pushpin: Nova Lima City](https://www.google.com/maps/search/89,+Alameda+do+Ingá+Street,+Nova+Lima+City,+Minas+Gerais+State,+Brazil+)                                                                                                                                                      | :earth_americas: Land monitoring, digital terrain modeling, geospatial data reseller              |
| [TerraGIS](https://www.terragis.com.br/)                               | **S** [:round_pushpin: Rio de Janeiro](https://www.google.com/maps/search/Rio+de+Janeiro+-+RJ+-+Brazil+)                                                                                                                                                                                                | :globe_with_meridians: GIS: All-purpose                                                           |
| [Visiona Tecnologia Espacial S.A.](https://www.visionaespacial.com.br) | **M** [:round_pushpin: São Paulo](https://www.google.com/maps/search/500+Distrito+de+Eugênio+de+Melo,+São+José+dos+Campos,+São+Paulo,+Brazil+)                                                                                                                                                          | :earth_americas: Satellite & EO coordination with defence focus, EO image reseller                |
| [codex](https://codex.com.br/)                                         | **L** [:round_pushpin: Porto Alegre](https://www.google.com/maps/search/Campinas,+Porto+Alegre,+São+José+dos+Campos,+Brazil+)                                                                                                                                                                           | :earth_americas: IT & Environmental consultancy                                                   | 

 ## :bulgaria: Bulgaria 
| Company (6)                                     | Size & City                                                                                                                                 | Focus                                                               |
|:------------------------------------------------|:--------------------------------------------------------------------------------------------------------------------------------------------|:--------------------------------------------------------------------|
| [Bitmap Bulgaria](https://bitmap-bulgaria.com/) | **S** [:round_pushpin: Sofia](https://www.google.com/maps/search/Sofia+1582,+z.k.+Druzhba+bl.+291,+Bulgaria+)                               | :globe_with_meridians: GIS: All-purpose                             |
| [ESRI](http://esribulgaria.com)                 | **M** (B) [:round_pushpin: Hladilnika](https://www.google.com/maps/search/bul.+""Nikola+Y.+Vaptsarov""+35,+1407+Hladilnika,+Sofia,+Bulgaria+) | :globe_with_meridians: ArcGIS software, GIS                         |
| [Eurosense](http://www.eurosense.com/)          | **S** (B) [:round_pushpin: Hladilnika](https://www.google.com/maps/search/bul.+""Nikola+Y.+Vaptsarov""+35,+1407+Hladilnika,+Sofia,+Bulgaria+) | :airplane: Aerial imagery & LiDAR acquisition, all-purpose analysis |
| [GAP Consult](https://gapconsult.bg/)           | **S** [:round_pushpin: Sofia](https://www.google.com/maps/search/48,+Evlogi+Georgiev+Bldv,+Sofia,+1504,+Bulgaria+)                          | :globe_with_meridians: GIS consultancy                              |
| [GIS Sofia](https://www.gis-sofia.bg/en/)       | **S** [:round_pushpin: Sofia](https://www.google.com/maps/search/5+Serdika+Str.,+Sofia+1000,+Bulgaria+)                                     | :globe_with_meridians: Land Surveying & GIS                         |
| [Map International](http://www.map-intl.com/)   | **S** [:round_pushpin: Sofia](https://www.google.com/maps/search/40,+Tsarigradsko+Shose+Blvd,+floor+4,+1113,+Sofia,+Bulgaria+)              | :globe_with_meridians: Aerial Survey & GIS Solutions                | 

 ## :cambodia: Cambodia 
| Company (1)                                       | Size & City                                                                                                                               | Focus                                   |
|:--------------------------------------------------|:------------------------------------------------------------------------------------------------------------------------------------------|:----------------------------------------|
| [Aruna Technologies](http://arunatechnology.com/) | **M** [:round_pushpin: Phnom Penh](https://www.google.com/maps/search/417+Sisowath+Blv.d,+Sangkat+Chaktomuk,+Phnom+Penh+12206,+Cambodia+) | :globe_with_meridians: GIS: All-purpose | 

 ## :cameroon: Cameroon 
| Company (1)                         | Size & City                                                                                              | Focus                                   |
|:------------------------------------|:---------------------------------------------------------------------------------------------------------|:----------------------------------------|
| [Immergis](https://immergis.fr/en/) | **S** (B) [:round_pushpin: Yaoundé](https://www.google.com/maps/search/Rue+Elig+Efi,+Yaoundé,+Cameroon+) | :globe_with_meridians: GIS: All-purpose | 

 ## :canada: Canada 
| Company (36)                                                  | Size & City                                                                                                                                                                                                                                                                                                                                                                       | Focus                                                                                |
|:--------------------------------------------------------------|:----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|:-------------------------------------------------------------------------------------|
| [4DM](http://www.4dm-inc.com/)                                | **S** [:round_pushpin: Toronto](https://www.google.com/maps/search/671+Danforth+Ave.,+Suite+305,+Toronto,+ON,+Canada+)                                                                                                                                                                                                                                                            | :globe_with_meridians: GIS: All-purpose                                              |
| [Auracle Remote Sensing](http://www.auracleremotesensing.com) | **S** [:round_pushpin: Vancouver](https://www.google.com/maps/search/1435+West+Georgia+Street,+Vancouver,+BC,+V6E+4A2,+Canada+)                                                                                                                                                                                                                                                   | :earth_americas: EO for energy deposit modeling                                      |
| [Avenza International](https://www.avenza.com/)               | **L** [:round_pushpin: Toronto](https://www.google.com/maps/search/84+Merton+Street,+Toronto,+ON,+Canada+)                                                                                                                                                                                                                                                                        | :globe_with_meridians: GIS software and mobile mapping apps development              |
| [C-Core](https://www.c-core.ca)                               | **M** [:round_pushpin: St. John's](https://www.google.com/maps/search/Morrissey+Road,+St.+John's,+NL,+Canada+)                                                                                                                                                                                                                                                                    | :earth_americas: EO: All-purpose                                                     |
| [Cartovista](https://cartovista.com)                          | **S** [:round_pushpin: Gatinbeau](https://www.google.com/maps/search/37+Saint-Joseph+Blvd,+Gatineau,+Quebec,+Canada+)                                                                                                                                                                                                                                                             | :world_map: Webmap SDK, services                                                     |
| [Catalyst](https://www.pcigeomatics.com)                      | **M** (H) [:round_pushpin: Markham](https://www.google.com/maps/search/90+Allstate+Parkway,+Markham,+Ontario,+Canada+) <br /> **M** (B) [:round_pushpin: Gatineau](https://www.google.com/maps/search/490+Saint+Joseph+Blvd.,+Gatineau,+Quebec,+Canada+)                                                                                                                          | :earth_americas: ""Geomatica"" for remote sensing, photogrammetry, geospatial analysis |
| [Chaac Technologies Inc.](https://chaac.tech)                 | **S** [:round_pushpin: Montreal](https://www.google.com/maps/search/201-4710+Saint-Ambroise,+Montréal,+Québec,+Canada+)                                                                                                                                                                                                                                                           | :globe_with_meridians: Mobile data collection, 3D modeling, virtual reality training |
| [ESRI](https://esri.ca/en)                                    | **L** (B) [:round_pushpin: Toronto](https://www.google.com/maps/search/12+Concorde+Place,+Suite+900,+Toronto,+ON,+Canada+)                                                                                                                                                                                                                                                        | :globe_with_meridians: ArcGIS software, GIS                                          |
| [Eagle GIS](https://eagle-gis.com)                            | **S** [:round_pushpin: New Brunswick](https://www.google.com/maps/search/8+Avery+Street,+Hanwell,+New+Brunswick,+Canada+)                                                                                                                                                                                                                                                         | :globe_with_meridians: Mobile mapping, GIS, Field data collection                    |
| [EarthDaily Analytics](https://earthdaily.com/)               | **L** [:round_pushpin: Vancouver](https://www.google.com/maps/search/1055+Canada+Pl,+Vancouver,+British+Columbia,+Canada+)                                                                                                                                                                                                                                                        | :earth_americas: EO: Analytics, Ground Segment Pipeline as a Service                 |
| [Ecopia](https://www.ecopiatech.com)                          | **S** [:round_pushpin: Torronto](https://www.google.com/maps/search/101+College+St,+Toronto,+Canada+)                                                                                                                                                                                                                                                                             | :earth_americas: High-res mapping                                                    |
| [Effigis](http://www.effigis.com)                             | **S**  (B) [:round_pushpin: Quebec City](https://www.google.com/maps/search/6655+Pierre-Bertrand+Boulevard,+Quebec,+Canada+) <br /> **S** (B) [:round_pushpin: Vaughan](https://www.google.com/maps/search/2300,+Steeles+Avenue+West,+Vaughan+ON,+Canada+) <br /> **M** (H) [:round_pushpin: Montréal](https://www.google.com/maps/search/4101+Rue+Molson,+Montréal,+QC,+Canada+) | :globe_with_meridians: GIS+EO: All-purpose                                           |
| [FYBR](https://www.fybrsolutions.com)                         | **S** [:round_pushpin: Vancouver](https://www.google.com/maps/search/138+E+7th+Avenue,+Vancouver,+BC,+Canada+)                                                                                                                                                                                                                                                                    | :earth_americas: EO: Forestry and supply-chain intelligence solutions                |
| [Farmers Edge](https://www.farmersedge.ca)                    | **L** (H) [:round_pushpin: Winnipeg](https://www.google.com/maps/search/Unit+B+-+1470+Willson+Place,+Winnipeg,+Canada+)                                                                                                                                                                                                                                                           | :seedling: Crop insights platform                                                    |
| [GHGSAT](https://www.ghgsat.com/)                             | **M** [:round_pushpin: Montreal](https://www.google.com/maps/search/3981+St-Laurent,+Montreal,+Quebec,+Canada+)                                                                                                                                                                                                                                                                   | :artificial_satellite: Greenhouse gas satellite constellation and monitoring tools   |
| [Hatfield Consultants](https://www.hatfieldgroup.com)         | **L** (H) [:round_pushpin: Vancouver](https://www.google.com/maps/search/200+–+850+Harbourside+Drive,+North+Vancouver,+BC,+Canada+)                                                                                                                                                                                                                                               | :globe_with_meridians: GIS+EO: All-purpose                                           |
| [Kongsberg Geospatial](https://www.kongsberggeospatial.com)   | **M** [:round_pushpin: Ottawa](https://www.google.com/maps/search/411+Legget+Drive,+Suite+400,+Ottawa,+Canada+)                                                                                                                                                                                                                                                                   | :world_map: ""Terralens"" geo. viz/mapping SDK, UAV insights platform                  |
| [KorrAI](https://www.korrai.com/)                             | **S** [:round_pushpin: Halifax](https://www.google.com/maps/search/1505+Barrington+Street,+Halifax,+Canada+)                                                                                                                                                                                                                                                                      | :earth_americas: Satellite data analysis for mining                                  |
| [Maxar](https://www.maxar.com)                                | **L** [:round_pushpin: Richmond](https://www.google.com/maps/search/13800+Commerce+Parkway+Richmond,+British+Columbia,+Canada+)                                                                                                                                                                                                                                                   | :artificial_satellite: ""Radarsat"" SAR satellites                                     |
| [PRS Corp](https://prscorp.ca/)                               | **S** [:round_pushpin: Vancouver](https://www.google.com/maps/search/1131+Dufferin+St,+Coquitlam,+BC,+Canada+)                                                                                                                                                                                                                                                                    | :earth_americas: EO: All-purpose                                                     |
| [Pharros](https://www.pharossoftware.com/)                    | **S** [:round_pushpin: Toronto](https://www.google.com/maps/search/4+Devonshire+Pl,+Toronto,+Ontario,+Canada+)                                                                                                                                                                                                                                                                    | :globe_with_meridians: API for geospatial data                                       |
| [Planet](https://www.planet.com)                              | **M** (B) [:round_pushpin: Lethbridge](https://www.google.com/maps/search/3528+30th+Street+North,+Lethbridge,+Alberta,+Canada+)                                                                                                                                                                                                                                                   | :artificial_satellite: Cubesat constellation (optical, daily coverage)               |
| [Presagis](https://www.presagis.com/en/)                      | **L** [:round_pushpin: Montreal](https://www.google.com/maps/search/4700+Rue+de+la+Savane,+Montreal,+Quebec,+Canada+)                                                                                                                                                                                                                                                             | :globe_with_meridians: Digital twin & simulation development framework               |
| [SGA](https://sga.ai/)                                        | **S** [:round_pushpin: Saskatoon](https://www.google.com/maps/search/116+Research+Dr,+Saskatoon,+Canada+)                                                                                                                                                                                                                                                                         | :seedling: Agriculture AI platform                                                   |
| [Seequent](https://www.seequent.com/)                         | **M** (B) [:round_pushpin: Toronto](https://www.google.com/maps/search/207+Queens+Quay+West,+Suite+810,+Toronto,+Ontario,+Canada+)                                                                                                                                                                                                                                                | :globe_with_meridians: Earth modelling & geo-data management software                |
| [SkyX](https://skyx.com)                                      | **M** [:round_pushpin: Markham](https://www.google.com/maps/search/3780+14th+Ave+(Unit+107),+Markham,+Ontario+L3R+9Y5,+Canada+)                                                                                                                                                                                                                                                   | :airplane: UAV manufacturer, oil & gas pipeline monitoring                           |
| [Skywatch](https://www.skywatch.com/)                         | **M** (H) [:round_pushpin: Waterloo](https://www.google.com/maps/search/14+Erb+St.+W.+,+Waterloo,+ON,+N2L+1S7,+Canada+)                                                                                                                                                                                                                                                           | :earth_americas: ""Earthwatch"" Sat-imagery platform + analysis API                    |
| [Sparkgeo](http://www.sparkgeo.com)                           | **M** [:round_pushpin: Prince George](https://www.google.com/maps/search/Under+Coast+Inn+of+the+North,+770+Brunswick+St,+Prince+George,+British+Columbia,+Canada+)                                                                                                                                                                                                                | :globe_with_meridians: Web mapping solutions, ""maptiks"" platform                     |
| [Streambatch](https://www.streambatch.io/)                    | **S** [:round_pushpin: Toronto](https://www.google.com/maps/search/329+Brock+Ave,+Toronto,+Canada+)                                                                                                                                                                                                                                                                               | :earth_americas: API for daily Analysis-Ready NDVI                                   |
| [Terra Remote Sensing](http://www.terraremote.com)            | **M** (H) [:round_pushpin: Sydney](https://www.google.com/maps/search/1962+Mills+Road,+Sidney,+BC,+Canada+)                                                                                                                                                                                                                                                                       | :earth_americas: EO: All-purpose, LiDAR acquisition                                  |
| [Terrasolis Inc.](https://www.terrasolis.ca)                  | **S** [:round_pushpin: Vilna](https://www.google.com/maps/search/Vilna,+Alberta,+Canada+)                                                                                                                                                                                                                                                                                         | :globe_with_meridians: Cartography, wildfire mapping & conservation, UAV             |
| [Tesera Systems](https://tesera.com)                          | **M** [:round_pushpin: Calgary](https://www.google.com/maps/search/Royal+Oak,+Calgary,+Canada+)                                                                                                                                                                                                                                                                                   | :globe_with_meridians: Geospatial Application Development, Data Analysis Consultancy |
| [Tre Altamira](http://tre-altamira.com)                       | **S** (B) [:round_pushpin: Vancouver](https://www.google.com/maps/search/475+West+Georgia+Street,+Vancouver+BC,+Canada+)                                                                                                                                                                                                                                                          | :earth_americas: EO: InSAR                                                           |
| [Vertigis](https://www.vertigis.com/)                         | **M** (B) [:round_pushpin: Victoria](https://www.google.com/maps/search/300-1117+Wharf+St.,+Victoria+BC,+Canada+)                                                                                                                                                                                                                                                                 | :globe_with_meridians: GIS: All-purpose                                              |
| [Vineview](https://vineview.com/)                             | **M** [:round_pushpin: Bedford](https://www.google.com/maps/search/1595+Bedford+Hwy,+Bedford,+NS,+Canada+)                                                                                                                                                                                                                                                                        | :airplane: Vineyard insights                                                         |
| [Wyvern](http://www.wyvern.space/)                            | **M** [:round_pushpin: Edmonton](https://www.google.com/maps/search/11135+83+Ave+NW,+Edmonton,+Alberta,+Canada+)                                                                                                                                                                                                                                                                  | :artificial_satellite: Hyperspectral satellite constellation                         | 

 ## :chile: Chile 
| Company (4)                                        | Size & City                                                                                                                                                     | Focus                                               |
|:---------------------------------------------------|:----------------------------------------------------------------------------------------------------------------------------------------------------------------|:----------------------------------------------------|
| [Agrospace](https://agrospace.cl/)                 | **S** [:round_pushpin: Santiago](https://www.google.com/maps/search/Santiago,+Metropolitana+Region,+Chile+)                                                     | :globe_with_meridians: EO monitoring & reports      |
| [ESRI](http://www.esri.cl)                         | **M** (B) [:round_pushpin: Las Condes-Santiago-Chile](https://www.google.com/maps/search/Av.+Apoquindo+6550,+piso+7,+Las+Condes-Santiago-Chile,+Chile+)         | :globe_with_meridians: ArcGIS software, GIS         |
| [Geosoluciones](http://www.geosoluciones.cl)       | **S** [:round_pushpin: Santiago de Chile](https://www.google.com/maps/search/Plaza+Pedro+de+Valdivia+1783,+Oficina+188,+Providencia,+Santiago+de+Chile,+Chile+) | :earth_americas: EO: All-purpose                    |
| [Terra Remote Sensing](http://www.terraremote.com) | **S** (B) [:round_pushpin: Valparaíso](https://www.google.com/maps/search/Av+Tupungato+3850,+Placilla,+Valparaíso,+Chile+)                                      | :earth_americas: EO: All-purpose, LiDAR acquisition | 

 ## :cn: China 
| Company (3)                               | Size & City                                                                                                                                | Focus                                                    |
|:------------------------------------------|:-------------------------------------------------------------------------------------------------------------------------------------------|:---------------------------------------------------------|
| [ESRI](http://www.esrichina.com.cn)       | **L** (B) [:round_pushpin: Beijing](https://www.google.com/maps/search/No.1+Xibahe+South+Road,+Chaoyang+District,+Beijing,+100028,+China+) | :globe_with_meridians: ArcGIS software, GIS              |
| [Spacewill](http://en.spacewillinfo.com/) | **S** [:round_pushpin: Beijing](https://www.google.com/maps/search/11+Changchunqiao+Road,+Beijing+100089,+China+)                          | :earth_americas: Superview-1 & GF satellites reseller    |
| [TerraQuanta](https://www.terraqt.com)    | **S** [:round_pushpin: Beijing](https://www.google.com/maps/search/Tower+2,+Wangjing+SOHO,+Chaoyang+District,+Beijing,+China+)             | :earth_americas: EO: All-purpose, focus on AI & big data | 

 ## :colombia: Colombia 
| Company (3)                                  | Size & City                                                                                                                 | Focus                                       |
|:---------------------------------------------|:----------------------------------------------------------------------------------------------------------------------------|:--------------------------------------------|
| [ESRI](http://www.esri.co)                   | **L** (B) [:round_pushpin: Bogotá](https://www.google.com/maps/search/Bogotá,+Cundinamarca,+Colombia+)                      | :globe_with_meridians: ArcGIS software, GIS |
| [Geospatial](https://www.geospatial.com.co/) | **M** [:round_pushpin: Bogotá](https://www.google.com/maps/search/Carrera+32A,+Bogotá,+Bogotá+D.C.+111321,+Colombia+)       | :earth_americas: EO: All-purpose            |
| [Gkudos](https://gkudos.com)                 | **S** [:round_pushpin: Bogotá](https://www.google.com/maps/search/Bogotá+DC,+Calle+53A+Bis+No+22-16+Oficina+402,+Colombia+) | :world_map: Webmapping                      | 

 ## :costa_rica: Costa Rica 
| Company (1)                                          | Size & City                                                                                                                            | Focus                                                                   |
|:-----------------------------------------------------|:---------------------------------------------------------------------------------------------------------------------------------------|:------------------------------------------------------------------------|
| [Geotecnologias S.A.](http://www.geotecnologias.com) | **M** (H) [:round_pushpin: San José,](https://www.google.com/maps/search/Calle+Masis+Mercedes+San+José+CR+2604,+San+José,+Costa+Rica+) | :globe_with_meridians: Cadastre, GIS consulting, ESRI & Trimble partner | 

 ## :croatia: Croatia 
| Company (2)                                      | Size & City                                                                                                    | Focus                                     |
|:-------------------------------------------------|:---------------------------------------------------------------------------------------------------------------|:------------------------------------------|
| [GISCloud](https://www.giscloud.com)             | **S** [:round_pushpin: Zagreb](https://www.google.com/maps/search/Jurišićeva+9,+10000,+Zagreb,+Croatia+)       | :world_map: Colaborative Mapping platform |
| [Promet i Prosta](https://prometiprostor.hr/en/) | **S** [:round_pushpin: Zagreb](https://www.google.com/maps/search/Ul.+Otona+Kučere+5,+10000,+Zagreb,+Croatia+) | :globe_with_meridians: GIS development    | 

 ## :cyprus: Cyprus 
| Company (2)                                 | Size & City                                                                                                          | Focus                                   |
|:--------------------------------------------|:---------------------------------------------------------------------------------------------------------------------|:----------------------------------------|
| [Geo Imaging](http://www.geoimaging.com.cy) | **S** [:round_pushpin: Nicosia](https://www.google.com/maps/search/Perikleous+47,+Strovolos,+2021+Nicosia,+Cyprus+)  | :globe_with_meridians: GIS services     |
| [Selas](https://www.selas.com.cy/)          | **S** [:round_pushpin: Nicosia](https://www.google.com/maps/search/51,+RIK+Avenue,+2122+Aglantzia,+Nicosia,+Cyprus+) | :globe_with_meridians: GIS: All-purpose | 

 ## :czech_republic: Czech Republic 
| Company (11)                                         | Size & City                                                                                                                    | Focus                                                                                    |
|:-----------------------------------------------------|:-------------------------------------------------------------------------------------------------------------------------------|:-----------------------------------------------------------------------------------------|
| [Ceda Maps](https://www.ceda.cz/en/)                 | **S** [:round_pushpin: Prague](https://www.google.com/maps/search/Jihlavská+1558/21,+140+00+Prague+4,+Czech+Republic+)         | :globe_with_meridians: Maps for Mobility                                                 |
| [Clever Maps](https://www.clevermaps.io/)            | **M** [:round_pushpin: Brno](https://www.google.com/maps/search/Vídeňská+101/119,+Brno+61900,+Czech+Repbulic+)                 | :globe_with_meridians: Location insights for buiseness descisions                        |
| [DynaCrop](https://dynacrop.space/en/)               | **S** [:round_pushpin: Brno](https://www.google.com/maps/search/Pellicova+624/3,+Brno,+Czech+Republic+)                        | :seedling: Satellite Crop Monitoring                                                     |
| [Geoczech](https://geoczech.org/)                    | **S** [:round_pushpin: Klimkovice](https://www.google.com/maps/search/Josefovice+108,+742+83+Klimkovice,+Czech+Republic+)      | :globe_with_meridians: Geospatial analysis & processing                                  |
| [Georeal](http://georeal.net/en)                     | **M** [:round_pushpin: Plzeň](https://www.google.com/maps/search/Hálkova+12,+301+00+Plzeň,+Czech+republic+)                    | :globe_with_meridians: GIS & data collection                                             |
| [Gisat](https://www.gisat.cz/)                       | **M** [:round_pushpin: Prague](https://www.google.com/maps/search/Milady+Horakove+57,+170+00+Praha+7,+Czech+Republic+)         | :earth_americas: EO: All-purpose                                                         |
| [Mapotik](https://www.mapotic.com/)                  | **S** [:round_pushpin: Prague](https://www.google.com/maps/search/Pod+Hajkem,+Prague,+Czech+republic,+180+00,+Czech+Republic+) | :world_map: Webmap platform                                                              |
| [Maptiler](https://www.maptiler.com/)                | **M** [:round_pushpin: Brno](https://www.google.com/maps/search/Tišnovská+137,+614+00+Brno,+Czech+Republic+)                   | :world_map: Maps, documentation, code samples, and developer tools for web & mobile      |
| [Spaceknow](https://spaceknow.com)                   | **M** (B) [:round_pushpin: Prague](https://www.google.com/maps/search/Thamova+18,+18600,+Prague,+Czech+republic+)              | :earth_americas: EO: business, financial, commodity insights, Big Data                   |
| [T-Mapy](https://www.tmapy.com)                      | **M** [:round_pushpin: Hradec](https://www.google.com/maps/search/Spitalska+150,+500+03+Hradec+Kralove,+Czech+Republic+)       | :globe_with_meridians: Spatial web asseg management, Analytic maps, Smart city solutions |
| [World from Space](https://worldfrom.space/en/home/) | **S** [:round_pushpin: Brno](https://www.google.com/maps/search/Technická+23,+61600+Královo+Pole,+Czechia+)                    | :earth_americas: EO: Agriculture & urban                                                 | 

 ## :denmark: Denmark 
| Company (3)                                  | Size & City                                                                                                      | Focus                                                                                      |
|:---------------------------------------------|:-----------------------------------------------------------------------------------------------------------------|:-------------------------------------------------------------------------------------------|
| [DHI Gras](http://www.dhi-gras.com)          | **M** [:round_pushpin: Horlsholm](https://www.google.com/maps/search/AGERN+ALLÉ+5+·+DK-2970+Horlsholm,+Denmark+) | :earth_americas: EO: environmental assessment, water resources and marine monitoring       |
| [Fieldsense](https://site.fieldsenseapp.com) | **M** [:round_pushpin: Aarhus](https://www.google.com/maps/search/Åbogade+34,+8200+Aarhus,+Denmark+)             | :seedling: Crop insights platform                                                          |
| [LIFA A/S](https://www.lifa.dk)              | **M** [:round_pushpin: Odense](https://www.google.com/maps/search/Lucernemarken+1,+5260+Odense+S,+Denmark+)      | :globe_with_meridians: Geospatial software development & datadistribution, GIS consultancy | 

 ## :egypt: Egypt 
| Company (2)                                        | Size & City                                                                                                             | Focus                                         |
|:---------------------------------------------------|:------------------------------------------------------------------------------------------------------------------------|:----------------------------------------------|
| [ESRI](http://www.esrinea.com)                     | **L** (B) [:round_pushpin: Egypt](https://www.google.com/maps/search/Ahmed+Kamel+St.,+Cairo,+Egypt+)                    | :globe_with_meridians: ArcGIS software, GIS   |
| [Visual and AI Solutions (VAIS)](https://vais.ai/) | **S** [:round_pushpin: Giza](https://www.google.com/maps/search/LINX+Business+Park,+Smart+Village,+Giza,+12577,+Egypt+) | :seedling: Farm management software solutions | 

 ## :estonia: Estonia 
| Company (2)                                   | Size & City                                                                                                                   | Focus                                                                                               |
|:----------------------------------------------|:------------------------------------------------------------------------------------------------------------------------------|:----------------------------------------------------------------------------------------------------|
| [Eyevi Technologies](https://www.eyevi.tech/) | **M** [:round_pushpin: Estonia](https://www.google.com/maps/search/Friedrich+Reinhold+Kreutzwaldi+19g,+51014+Tartu,+Estonia+) | :globe_with_meridians: AI-powered platform for geospatial data production, on-demand mobile mapping |
| [Regio](http://www.regio.ee/)                 | **M** [:round_pushpin: Tartu](https://www.google.com/maps/search/Regio,+Riia+35+Tartu,+50410,+Estonia+)                       | :globe_with_meridians: GIS development, geospatial data                                             | 

 ## :finland: Finland 
| Company (7)                              | Size & City                                                                                                           | Focus                                                                                        |
|:-----------------------------------------|:----------------------------------------------------------------------------------------------------------------------|:---------------------------------------------------------------------------------------------|
| [Arbonaut](https://www.arbonaut.com/en/) | **M** [:round_pushpin: Joensuu](https://www.google.com/maps/search/Kaislakatu+2,+80130+Joensuu,+Finland+)             | :globe_with_meridians: GIS development for forest inventory and natural resource management  |
| [ESRI](http://www.esri.fi)               | **M** (B) [:round_pushpin: Espoo](https://www.google.com/maps/search/Bertel+Jungin+aukio+3,+FI-02600+Espoo,+Finland+) | :globe_with_meridians: ArcGIS software, GIS                                                  |
| [Gispo](https://www.gispo.fi/en/home/)   | **S** [:round_pushpin: Helsinki](https://www.google.com/maps/search/Kalevankatu+31,+00100,+Helsinki,+Finland+)        | :globe_with_meridians: Open Source GIS development, training                                 |
| [Iceye](https://www.iceye.com)           | **M** [:round_pushpin: Espoo](https://www.google.com/maps/search/Metallimiehenkuja+10,+02150+Espoo,+Finland+)         | :artificial_satellite: SAR constellation (launch 2018), aerial imaging, EO data distribution |
| [Maptionaire](https://maptionnaire.com)  | **S** [:round_pushpin: Helsinki](https://www.google.com/maps/search/Kanavaranta+7,+00160+Helsinki,+Finland+)          | :world_map: Resident engagement & map insights for urban planning                            |
| [Sharpershape](https://sharpershape.com) | **S** (B) [:round_pushpin: Espoo](https://www.google.com/maps/search/Lintuvaarantie+2,+02650+Espoo,+Finland+)         | :airplane: UAV automated utility inspections                                                 |
| [SoilWatch](https://soilwatch.eu/)       | **S** [:round_pushpin: Helsinki](https://www.google.com/maps/search/Mikonkatu+23,+00100+Helsinki,+Finland+)           | :earth_americas: Soil remote monitoring                                                      | 

 ## :fr: France 
| Company (24)                                                     | Size & City                                                                                                                                                                                                                                                                     | Focus                                                                                    |
|:-----------------------------------------------------------------|:--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|:-----------------------------------------------------------------------------------------|
| [ACRI-ST](http://www.acri-st.fr)                                 | **M** [:round_pushpin: Garbejaire](https://www.google.com/maps/search/260+Route+du+Pin+Montard,+06904+Sophia-Antipolis,+France+)                                                                                                                                                | :earth_americas: EO mission simulation, environmental monitoring                         |
| [Airbus Defence and Space](http://www.intelligence-airbusds.com) | **L** (B) [:round_pushpin: Toulouse](https://www.google.com/maps/search/31,+Avenue+des+Cosmonautes,+31402+Toulouse,+France+) <br /> **L** (B) [:round_pushpin: Toulouse](https://www.google.com/maps/search/15,+avenue+de+l'Europe,+31522+Ramonville+Saint-Agne,+France+)       | :earth_americas: EO: All-purpose, Government/Defence intelligence                        |
| [Alteia](https://alteia.com/)                                    | **M** [:round_pushpin: Labège](https://www.google.com/maps/search/676,+Rue+Max+Planck,+Labège,+31670,+France+)                                                                                                                                                                  | :globe_with_meridians: Visual data analysis platform, AI, cloud GIS platform             |
| [CLS](https://www.cls.fr/en/)                                    | **S** (B) [:round_pushpin: Villeneuve d’Ascq](https://www.google.com/maps/search/27+rue+du+Carrousel+59650+Villeneuve+d’Ascq,+France+) <br /> **L** (H) [:round_pushpin: Toulouse](https://www.google.com/maps/search/11+Rue+Hermès,+31520+Ramonville-Saint-Agne,+France+)      | :earth_americas: EO: Monitoring & Surveillance                                           |
| [Collecte Localisation Satellites (CLS)](https://www.cls.fr/en/) | **M** (B) [:round_pushpin: Plouzané](https://www.google.com/maps/search/525+Avenue+Alexis+de+Rochon,+29280+Plouzané,+France+) <br /> **L** (H) [:round_pushpin: Ramonville Saint-Agne](https://www.google.com/maps/search/11,+rue+Hermès,+31520+Ramonville+Saint-Agne,+France+) | :earth_americas: EO: Environmental monitoring, maritime services, energy                 |
| [Delta Drone](http://www.deltadrone.com/en/)                     | **M** [:round_pushpin: Dardilly](https://www.google.com/maps/search/8,+chemin+du+Jubin,+69570+Dardilly,+France+)                                                                                                                                                                | :airplane: UAV image acquistion, analysis                                                |
| [ESRI](http://www.esrifrance.fr)                                 | **L** (B) [:round_pushpin: Meudon Cedex](https://www.google.com/maps/search/21,+rue+des+Capucins,+92195+Meudon+Cedex+)                                                                                                                                                          | :globe_with_meridians: ArcGIS software, GIS                                              |
| [EarthDaily](https://earthdailyagro.com/)                        | **M**  (B) [:round_pushpin: Toulouse](https://www.google.com/maps/search/81,+Boulevard+Lazard+Carnot,+31000+Toulouse,+France+)                                                                                                                                                  | :earth_americas: EO: Agriculture, insurance, commodity insights and monitoring           |
| [Echo Analytics](https://echo-analytics.io/)                     | **M** [:round_pushpin: Paris](https://www.google.com/maps/search/115+Rue+Cardinet,+75017+Paris,+France+)                                                                                                                                                                        | :globe_with_meridians: Point of Interest Data, Building Footprints and Mobility Insights |
| [Eurosense](http://www.eurosense.com/)                           | **S** (B) [:round_pushpin: Boescheppe](https://www.google.com/maps/search/Rue+de+la+Gare,+3087,+59299+Boescheppe,+France+)                                                                                                                                                      | :airplane: Aerial imagery & LiDAR acquisition, all-purpose analysis                      |
| [Fruition Science](https://fruitionsciences.com/en/home)         | **S** (B) [:round_pushpin: Montpellier](https://www.google.com/maps/search/MIBI+-+672+rue+du+Mas+de+Verchant,+34000+Montpellier,+FRANCE+)                                                                                                                                       | :seedling: Vineyard monitoring                                                           |
| [Geo4i](http://geo4i.com/en/)                                    | **S** [:round_pushpin: Copenhagen](https://www.google.com/maps/search/100+rue+Louis+Blanc,+bâtiment+Copenhage,+60160+Montataire,+France+)                                                                                                                                      | :earth_americas: Geospatial defence intelligence                                         |
| [Geomatys](https://www.geomatys.com/en/)                         | **S** [:round_pushpin: Arles](https://www.google.com/maps/search/24+rue+Pierre+Renaudel,+13200+Arles,+France+)                                                                                                                                                                  | :globe_with_meridians: Geodata processing plattform, GIS development, training           |
| [HEAD Aerospatial Group France](https://www.head-aerospace.eu)   | **M** [:round_pushpin: Paris](https://www.google.com/maps/search/71+Boulevard+national,92250,+La+Garenne-Colombes,Paris,+France+)                                                                                                                                               | :earth_americas: EO: VHR, MR and Hyperspectral Images, SAR. 30 satellites constellation  |
| [Iconem](https://iconem.com)                                     | **S** [:round_pushpin: Paris](https://www.google.com/maps/search/82+Rue+du+Faubourg+Saint-Martin,+75010,+Paris+)                                                                                                                                                                | :airplane: 3D scanning endangered heritage sites and monuments                           |
| [Immergis](https://immergis.fr/en/)                              | **S** (H) [:round_pushpin: Montpellier](https://www.google.com/maps/search/La+Valsière,+44+rue+Antoine+Jérôme+Balard,+Grabels,+34790,+France+)                                                                                                                                  | :globe_with_meridians: GIS: All-purpose                                                  |
| [Kayrros](https://kayrros.com)                                   | **L** (H) [:round_pushpin: Paris](https://www.google.com/maps/search/33+Rue+La+Fayette,+75009,+Paris,+France+)                                                                                                                                                                  | :earth_americas: EO: Energy, insurance, infrastructure, commodities, Big Data            |
| [LuxCarta](http://luxcarta.com)                                  | **S** (B) [:round_pushpin: Mouans-Sartoux,](https://www.google.com/maps/search/460+Avenue+de+la+Quiéra,+06370+Mouans-Sartoux,+France+)                                                                                                                                          | :globe_with_meridians: Geodata and Analysis for Wireless Network Planning                |
| [Planet Observer](https://www.planetobserver.com)                | **S** [:round_pushpin: Clermont](https://www.google.com/maps/search/25+boulevard+Gergovia,+63000+Clermont-Ferrand,+France+)                                                                                                                                                     | :earth_americas: EO data reseller                                                        |
| [Preligens](https://www.preligens.com/)                          | **M** [:round_pushpin: Paris](https://www.google.com/maps/search/13+Rue+de+Calais,+Paris,+IdF+75009,+France+)                                                                                                                                                                   | :earth_americas: EO: Economic, Environment, Defence Insights, AI                         |
| [Spacesense](https://www.spacesense.ai/)                         | **S** [:round_pushpin: Paris](https://www.google.com/maps/search/62+rue+Jean-Jacques+Rousseau,+75001+Paris,+France+)                                                                                                                                                            | :earth_americas: Geospatial AI toolbox                                                   |
| [Technatium](https://technatium.com/en/)                         | **S** [:round_pushpin: Paris](https://www.google.com/maps/search/55+rue+de+la+Boétie,+Paris+75008,+France+)                                                                                                                                                                     | :globe_with_meridians: GIS: All-purpose                                                  |
| [Terranis](http://terranis.fr/en/)                               | **S** [:round_pushpin: Ramonville-Saint-Agne](https://www.google.com/maps/search/12+Avenue+de+l'Europe,+31520+Ramonville-Saint-Agne,+France+)                                                                                                                                   | :seedling: EO: precision agriculture and viticulture services                            |
| [Visioterra](https://www.visioterra.fr/web/?lang=en)             | **S** [:round_pushpin: Champs-sur-Marne](https://www.google.com/maps/search/14+rue+Albert+Einstein,+77420+Champs-sur-Marne,+France+)                                                                                                                                            | :earth_americas: EO: All-purpose                                                         | 

 ## :de: Germany 
| Company (65)                                                              | Size & City                                                                                                                                                                                                                                       | Focus                                                                                                       |
|:--------------------------------------------------------------------------|:--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|:------------------------------------------------------------------------------------------------------------|
| [Aerowest](http://www.aerowest.de)                                        | **M** [:round_pushpin: Dortmund](https://www.google.com/maps/search/Flughafenring+11,+44319+Dortmund,+Germany+)                                                                                                                                   | :airplane: Aerial image acquistion                                                                          |
| [Airbus Defence and Space](http://www.intelligence-airbusds.com)          | **L** (B) [:round_pushpin: Immenstadt am Bodensee](https://www.google.com/maps/search/Claude-Dorner-Str,+88090+Immenstaad+am+Bodensee,+Germany+)                                                                                                  | :earth_americas: EO: All-purpose, Government/Defence intelligence                                           |
| [Brockmann Consult](https://web.brockmann-consult.de)                     | **M** [:round_pushpin: Geesthacht](https://www.google.com/maps/search/Max-Planck-Str.+2,+21502+Geesthacht,+Germany+)                                                                                                                              | :earth_americas: EO Toolbox developer, e.g. Sentinel Toolbox                                                |
| [ConstellR](https://constellr.space/)                                     | **S** (H) [:round_pushpin: Freiburg](https://www.google.com/maps/search/Ernst-Zermelo-Str.+4,+79104+Freiburg,+Germany+)                                                                                                                           | :globe_with_meridians: Global Temperature Monitoring                                                        |
| [Delphi IMM](http://www.delphi-imm.de/en/homepage/)                       | **S** [:round_pushpin: Potsdam](https://www.google.com/maps/search/Eisenhartstraße+2,+14469+Potsdam,+Germany+)                                                                                                                                    | :globe_with_meridians: Geo-IT solutions, geospatial analysis, training/consulting                           |
| [Disy Informationssysteme](https://www.disy.net/nc/home.html)             | **M** [:round_pushpin: Karlsruhe](https://www.google.com/maps/search/Ludwig-Erhard-Allee+6,+76131+Karlsruhe,+Germany+)                                                                                                                            | :globe_with_meridians: GIS, Spatial Reporting                                                               |
| [EDEO](https://www.edeo-gmbh.de)                                          | **S** [:round_pushpin: Roding](https://www.google.com/maps/search/Reinwaldstraße+14.+93426+Roding,+Germany+)                                                                                                                                      | :earth_americas: EO+GIS: All-purpose                                                                        |
| [EGEOS GmbH](https://www.e-geos.it/en/)                                   | **S** [:round_pushpin: Kiel](https://www.google.com/maps/search/Einsteinstraße+1,+24118+Kiel,+Germany+)                                                                                                                                           | :world_map: Web mapping, GIS                                                                                |
| [ESRI](https://www.esri.de/de-de/home)                                    | **L** (B) [:round_pushpin: Kranzberg](https://www.google.com/maps/search/Ringstrasse+7,+85402+Kranzberg,+Germany+)                                                                                                                                | :globe_with_meridians: ArcGIS software, GIS                                                                 |
| [Eftas](http://www.eftas.de/en/)                                          | **M** [:round_pushpin: Münster](https://www.google.com/maps/search/Oststraße+2-18,+48145+Münster,+Germany+)                                                                                                                                       | :earth_americas: EO: All-purpose, GeoIT services                                                            |
| [European Space Imaging](http://www.euspaceimaging.com)                   | **M** [:round_pushpin: Munich](https://www.google.com/maps/search/Arnulfstraße+197,+80634+Munich,+Germany+)                                                                                                                                       | :earth_americas: EO data reseller                                                                           |
| [Eurosense](http://www.eurosense.com/)                                    | **S** (B) [:round_pushpin: Rheinbach](https://www.google.com/maps/search/Marie-Curie+Strasse+3,+53359+Rheinbach,+Germany+)                                                                                                                        | :airplane: Aerial imagery & LiDAR acquisition, all-purpose analysis                                         |
| [GAF AG](https://www.gaf.de)                                              | **M** (B) [:round_pushpin: Neustrelitz](https://www.google.com/maps/search/Kalkhorstweg+53,+17235+Neustrelitz,+Germany+) <br /> **L** (H) [:round_pushpin: München](https://www.google.com/maps/search/Arnulfstraße+199,+80634+München,+Germany+) | :earth_americas: EO: All-purpose                                                                            |
| [GBD Geoinformatikbüro Dassau](https://www.gbd-consult.de/en/)            | **S** [:round_pushpin: Düsseldorf](https://www.google.com/maps/search/Rethelstrasse+153,+40237+Düsseldorf,+Germany+)                                                                                                                              | :globe_with_meridians: GIS consultancy, training                                                            |
| [GFK](https://www.gfk.com/home)                                           | **L** [:round_pushpin: Nurenburg](https://www.google.com/maps/search/Bamberger+Str.+6,+90425+Nürnberg,+Germany+)                                                                                                                                  | :globe_with_meridians: GIS for business insights                                                            |
| [GIS Consult GmbH](https://www.gis-consult.de)                            | **S** [:round_pushpin: Haltern](https://www.google.com/maps/search/Schultenbusch+3,+45721+Haltern+am+See,+Germany+)                                                                                                                               | :globe_with_meridians: GIS: All-purpose, Smallworld GIS Partner                                             |
| [Geocledian](https://geocledian.com)                                      | **S** [:round_pushpin: Landshut](https://www.google.com/maps/search/Am+Wirtsanger+20,+84036+Landshut,+Germany+)                                                                                                                                   | :seedling: Crop insights, farm management                                                                   |
| [Geocontent](http://www.geocontent.de)                                    | **S** [:round_pushpin: Magdeburg](https://www.google.com/maps/search/Ottersleber+Chaussee+91,+39120+Magdeburg,+Germany+)                                                                                                                          | :earth_americas: Sat/Aerial data reseller, Webmap services                                                  |
| [Geofabrik](https://www.geofabrik.de/en/index.html)                       | **S** [:round_pushpin: Karlsruhe](https://www.google.com/maps/search/Amalienstraße+44,+76133+Karlsruhe,+Germany+)                                                                                                                                 | :globe_with_meridians: Open Street Map data services                                                        |
| [Geofly](http://web.geofly.eu/en/geofly.html)                             | **S** [:round_pushpin: Magdeburg](https://www.google.com/maps/search/Ottersleber+Chaussee+91,+39120+Magdeburg+)                                                                                                                                   | :airplane: Aerial Image/LiDAR acquisition                                                                   |
| [Geoplana](https://www.geoplana.de/)                                      | **S** [:round_pushpin: Marbach-Rielingshausen](https://www.google.com/maps/search/Backnanger+Str.+4,+71672+Marbach-Rielingshausen,+Germany+)                                                                                                      | :airplane: Aerial image acquistion, GIS                                                                     |
| [Geops](http://geops.de/?language=en)                                     | **S** [:round_pushpin: Freiburg](https://www.google.com/maps/search/Kaiser-Joseph-Str.+263,+79098+Freiburg,+Germany+)                                                                                                                             | :world_map: Webmap portals design, spatial CMS                                                              |
| [Geospin](https://www.geospin.de/en/)                                     | **S** [:round_pushpin: Freiburg](https://www.google.com/maps/search/Im+Gärtle+21,+79098+Freiburg,+Germany+)                                                                                                                                       | :globe_with_meridians: E-Mobility & financial sector insights                                               |
| [Geosysnet](http://www.geosysnet.de/en/index.html)                        | **S** [:round_pushpin: Berlin](https://www.google.com/maps/search/Pfluegerstr.+56,+12047+Berlin,+Germany+)                                                                                                                                        | :globe_with_meridians: Geodata collection, management, analysis, webmapping applications                    |
| [Greenspin](https://www.greenspin.de)                                     | **S** [:round_pushpin: Würzburg](https://www.google.com/maps/search/Magdalene-Schoch-Strasse+5,+97074+Würzburg,+Germany+)                                                                                                                         | :seedling: Crop insights platform                                                                           |
| [HERE Technologies](https://www.here.com/en)                              | **L** [:round_pushpin: Berlin](https://www.google.com/maps/search/Invalidenstraße+116,+10115+Berlin+) <br /> **L** (B) [:round_pushpin: Schwalbach](https://www.google.com/maps/search/Am+Kronberger+Hang+8,+65824+Schwalbach,+Germany+)          | :globe_with_meridians: Car navigation mapping, GIS                                                          |
| [Hawa Dawa](https://www.hawadawa.com)                                     | **M** [:round_pushpin: Munich](https://www.google.com/maps/search/Gotzinger+Straße+8,+Munich,+Bavaria+81371,+Germany+)                                                                                                                            | :earth_americas: Urban air pollution monitoring for descision support                                       |
| [IABG](https://www.iabg.de/en/)                                           | **L** [:round_pushpin: Taufkirchen bei München](https://www.google.com/maps/search/Lilienthalstrasse+12,+85521+Taufkirchen+bei+München,+Germany+)                                                                                                 | :globe_with_meridians: GIS+EO: All-purpose                                                                  |
| [Jua](https://www.jua.ai/)                                                | **S** (B) [:round_pushpin: Berlin](https://www.google.com/maps/search/Warschauer+Pl.+11-13,+10245+Berlin,+Germany+)                                                                                                                               | :earth_americas: High-accuracy weather data                                                                 |
| [Landbanking Group](https://thelandbankinggroup.com/)                     | **M** [:round_pushpin: Munich](https://www.google.com/maps/search/Platzl+5,+80331+Munich,+Germany+)                                                                                                                                               | :globe_with_meridians: Finance platform for nature Restoration and Presevation                              |
| [LiveEO](http://live-eo.com)                                              | **M** [:round_pushpin: Berlin](https://www.google.com/maps/search/Gitschiner+Straße94,+10969+Berlin,+Germany+)                                                                                                                                    | :earth_americas: EO based infrastructure monitoring                                                         |
| [Mayday ai GmbH](https://mayday.ai/)                                      | **S** [:round_pushpin: Darmstadt](https://www.google.com/maps/search/Robert-Bosch-Straße+7,+64293+Darmstadt,+Germany+)                                                                                                                            | :earth_americas: EO: Disaster minotirong                                                                    |
| [Motiontag](https://motion-tag.com/)                                      | **M** [:round_pushpin: Potsdam](https://www.google.com/maps/search/Rudolf-Breitscheid-Straße+162,+14482+Potsdam,+Germany+)                                                                                                                        | :globe_with_meridians: Transport analytics                                                                  |
| [Mundialis](https://www.mundialis.de)                                     | **S** [:round_pushpin: Bonn](https://www.google.com/maps/search/Kölnstrasse+99,+53111+Bonn,+Germany+)                                                                                                                                             | :earth_americas: EO+GIS: All-purpose, EO data infrastructure                                                |
| [NaVvis](https://www.navvis.com)                                          | **L** [:round_pushpin: Munich](https://www.google.com/maps/search/Blutenburgstraße+18,+80636+München+)                                                                                                                                            | :globe_with_meridians: Mobile LiDAR mapping sustems, digital twin solutions                                 |
| [Nadar](https://www.nadar.earth/)                                         | **S** [:round_pushpin: Leipzig](https://www.google.com/maps/search/Kasseler+Straße+42,+04155+Leipzig,+Germany+)                                                                                                                                   | :globe_with_meridians: Forest Analytics platform                                                            |
| [Opencage](https://opencagedata.com/)                                     | **S** [:round_pushpin: Hannover](https://www.google.com/maps/search/Philipsbornstrasse+2,+30165+Hannover,+Germany+)                                                                                                                               | :globe_with_meridians: Geocoding API                                                                        |
| [OroraTech](https://ororatech.com/)                                       | **M** [:round_pushpin: Munich](https://www.google.com/maps/search/Agnes-Pockels-Bogen+1,+80992+Munich,+Germany+)                                                                                                                                  | :earth_americas: Realtime Thermal Infrared Products (30min Mid-Wave Thermal & RGB, edge computing in space) |
| [Pina Earth](https://pina.earth/en)                                       | **S** [:round_pushpin: Munich](https://www.google.com/maps/search/Vogelanger+Str.,+Starnberg,+82319,+Germany+)                                                                                                                                    | :earth_americas: Forest carbon certification digitilaization                                                |
| [Pix4D](https://pix4d.com)                                                | **S** (B) [:round_pushpin: Berlin](https://www.google.com/maps/search/Alte+Jakobstraße+85,+10179+Berlin,+Germany+)                                                                                                                                | :airplane: Photogrametry software, UAV                                                                      |
| [Planet](https://www.planet.com)                                          | **M** (B) [:round_pushpin: Berlin](https://www.google.com/maps/search/Kurfürstendamm+22,+10719+Berlin,+Germany+)                                                                                                                                  | :artificial_satellite: Cubesat constellation (optical, daily coverage)                                      |
| [Point Cloud Technology](https://www.pointcloudtechnology.com/en/)        | **S** [:round_pushpin: Potsdam](https://www.google.com/maps/search/August-Bebel-Str.+26-53,+14482+Potsdam,+Germany+)                                                                                                                              | :earth_americas: 3D point cloud analysis software                                                           |
| [Promegis](http://www.promegis.de)                                        | **S** [:round_pushpin: Melle](https://www.google.com/maps/search/Breslauer+Straße+31,+49324+Melle,+Germany+)                                                                                                                                      | :globe_with_meridians: GIS solutions: admin., military, energy industry etc.                                |
| [Rapidlasso](https://rapidlasso.de/)                                      | **S** [:round_pushpin: Gilching](https://www.google.com/maps/search/Friedrichshafener+Straße+1,+82205+Gilching,+Germany+)                                                                                                                         | :earth_americas: ""LasTools"" point cloud processing/analysis software                                        |
| [Remote Sensing Solutions RSS](https://www.remote-sensing-solutions.com/) | **S** [:round_pushpin: Baierbrunn](https://www.google.com/maps/search/Isarstraße+3,+82065+Baierbrunn,+Germany+)                                                                                                                                   | :earth_americas: EO: All-purpose                                                                            |
| [Riscognition GmbH](https://riscognition.com/)                            | **S** [:round_pushpin: Munich](https://www.google.com/maps/search/Bahnhofstr.+120,+82269+Geltendorf,+Germany+)                                                                                                                                    | :earth_americas: Earth Observation Services for Developers                                                  |
| [Seqana](https://www.seqana.com/)                                         | **S** [:round_pushpin: Berlin](https://www.google.com/maps/search/Oranienstrasse+183,+2.+Hof,+Aufgang+A,+10999+Berlin+)                                                                                                                           | :globe_with_meridians: Agriculure/Soil/Carbon                                                               |
| [Supervision](http://supervision.earth)                                   | **S** [:round_pushpin: Darmstadt](https://www.google.com/maps/search/Otto-Hesse-Straße+19/T2,+64293+Darmstadt,+Germany+)                                                                                                                          | :earth_americas: EO based infrastructure monitoring                                                         |
| [Targomo](https://www.targomo.com/)                                       | **M** [:round_pushpin: Potsdam](https://www.google.com/maps/search/Alexanderstraße+5,+10178+Berlin,+Germany+)                                                                                                                                     | :globe_with_meridians: Location Intelligence Platform for Business Decisions                                |
| [Terranea](http://www.terranea.de)                                        | **S** [:round_pushpin: Geltendorf](https://www.google.com/maps/search/Bahnhofstr.+120,+82269+Geltendorf,+Germany+)                                                                                                                                | :earth_americas: EO: Environmental consultancy, Geo IT                                                      |
| [Terrestris](https://www.terrestris.de/en/)                               | **S** [:round_pushpin: Bonn](https://www.google.com/maps/search/Koelnstr.+99,+53111+Bonn,+Germany+)                                                                                                                                               | :globe_with_meridians: Open source Geodata/GIS service development                                          |
| [Trigis Geoservices GmbH](https://www.trigis.de/en/willkommen.html)       | **M** [:round_pushpin: Korbußen](https://www.google.com/maps/search/Heidelbergstraße,+Korbußen,+07554,+Germany+)                                                                                                                                  | :globe_with_meridians: GIS: construnction                                                                   |
| [Trimble](http://www.ecognition.com/)                                     | **S** (B) [:round_pushpin: Munich](https://www.google.com/maps/search/Arnulfstr.+126,+80636+München,+Germany+)                                                                                                                                    | :earth_americas: eCognition Software                                                                        |
| [UP42](https://up42.com)                                                  | **M** [:round_pushpin: Berlin](https://www.google.com/maps/search/Ohlauer+Str.+42,+10999+Berlin,+Germany+)                                                                                                                                        | :earth_americas: Marketplace & Platform for geospatial analysis at scale                                    |
| [Ubilabs](https://ubilabs.net)                                            | **M** [:round_pushpin: Hamburg](https://www.google.com/maps/search/Juliusstraße+25,+22769+Hamburg,+Germany+)                                                                                                                                      | :world_map: Interactive map solutions development, Google Maps products reseller                            |
| [VISTA Remote Sensing](http://www.vista-geo.de/en/)                       | **S** [:round_pushpin: Munich](https://www.google.com/maps/search/Gabelsbergerstr.+51,+80333+Munich,+Germany+)                                                                                                                                    | :earth_americas: EO: All-purpose                                                                            |
| [Vertigis](https://www.vertigis.com/)                                     | **S** (B) [:round_pushpin: Berlin](https://www.google.com/maps/search/Eichenstraße+3b,+D-12435+Berlin,+Germany+)                                                                                                                                  | :globe_with_meridians: GIS: All-purpose                                                                     |
| [WhereGroup GmbH](https://wheregroup.com/)                                | **M** [:round_pushpin: Bonn](https://www.google.com/maps/search/Eifelstraße+7,+Bonn,+Germany+)                                                                                                                                                    | :globe_with_meridians: Spatial open-source development                                                      |
| [atfarm](https://www.at.farm)                                             | **M** [:round_pushpin: Berlin](https://www.google.com/maps/search/Berlin,+Germany+)                                                                                                                                                               | :seedling: EO based fertilizer optimization tool & field manager                                            |
| [cloudEO](https://www.cloudeo.group/)                                     | **M** [:round_pushpin: Munich](https://www.google.com/maps/search/Ludwigstraße+8,+80539+Munich,+Germany+)                                                                                                                                         | :earth_americas: Geodata/software marketplace infrastructure                                                |
| [codematix](http://www.codematix.de/)                                     | **S** [:round_pushpin: Jena](https://www.google.com/maps/search/Felsbachstr.+5,+07745+Jena,+Germany+)                                                                                                                                             | :globe_with_meridians: (Web)GIS focused software development/infrastructure, Geo-IT/GIS training            |
| [con terra](https://www.con-terra.com)                                    | **L** [:round_pushpin: Münster](https://www.google.com/maps/search/Martin-Luther-King-Weg+24,+48155+Münster,+Germany+)                                                                                                                            | :globe_with_meridians: Geo-IT services, data infrastructures, spatial modelling                             |
| [eomap](http://www.eomap.com)                                             | **S** [:round_pushpin: Seefeld](https://www.google.com/maps/search/Schloßhof+4,+82229+Seefeld,+Germany+)                                                                                                                                          | :earth_americas: EO: Aquatic                                                                                |
| [nFrames](http://www.nframes.com)                                         | **S** [:round_pushpin: Stuttgart](https://www.google.com/maps/search/Kornbergstraße+36,+70176+Stuttgart,+Germany+)                                                                                                                                | :earth_americas: Photogrammetry software development                                                        |
| [xarvio](https://www.xarvio.com/de/de.html)                               | **L** [:round_pushpin: Münster](https://www.google.com/maps/search/Albrecht-Thaer-Straße+34,+48147+Münster,+Germany+)                                                                                                                             | :seedling: Crop Insights                                                                                    | 

 ## :greece: Greece 
| Company (7)                                                      | Size & City                                                                                                                                        | Focus                                                                                           |
|:-----------------------------------------------------------------|:---------------------------------------------------------------------------------------------------------------------------------------------------|:------------------------------------------------------------------------------------------------|
| [Agroapps](https://agroapps.gr/en/home/)                         | **S** [:round_pushpin: Thessaloníki](https://www.google.com/maps/search/Kountourioti+3,+Thessaloníki,+54625,+Greece+)                              | :seedling: Services for farm management advisory, climate and weather forecast                  |
| [Draxis](https://draxis.gr)                                      | **M** [:round_pushpin: Thessaloniki](https://www.google.com/maps/search/Themistokli+Sofouli+St.+54-56+,+54655+Thessaloniki,+Greece+)               | :earth_americas: EO: Environmental consultancy, Geo IT                                          |
| [Geospatial Enabling Technologies (GET)](https://www.getmap.eu/) | **S** [:round_pushpin: Athens](https://www.google.com/maps/search/Leoforos+Poseidonos+43+&+Chrysostomou+Smyrnis,+18344,+Moschato,+Athens,+Greece+) | :globe_with_meridians: Spatial data infrastructure & webportal development, EO&GIS: All purpose |
| [Geosystems Hellas](http://www.geosystems-hellas.gr/en/home/)    | **S** [:round_pushpin: Metamorfosi](https://www.google.com/maps/search/Gkinosati+81,+Metamorfosi+144+52,+Greece+)                                  | :globe_with_meridians: Geospatial Analysis Software reseller, GIS+EO: All-purpose               |
| [Map](http://map4u.gr/?lang=el)                                  | **S** [:round_pushpin: Athens](https://www.google.com/maps/search/Aristotelous+str.+6,+15562,+Cholargos,+Athens,+Greece+)                          | :globe_with_meridians: GIS & EO: All-purpose                                                    |
| [Planetek Hellas](http://www.planetek.gr)                        | **M** [:round_pushpin: Athens](https://www.google.com/maps/search/44,+Kifissias+Ave,+15125,+Athens+)                                               | :earth_americas: EO: All-purpose                                                                |
| [SatShipAI](https://satshipai.eu)                                | **S** [:round_pushpin: Athens](https://www.google.com/maps/search/Mitropoleos+43,+105+56,+Athens,+Greece+)                                         | :earth_americas: EO based marine surveillance, ship tracking with EO&AI                         | 

 ## :guatemala: Guatemala 
| Company (1)                                          | Size & City                                                                                                                                  | Focus                                                                   |
|:-----------------------------------------------------|:---------------------------------------------------------------------------------------------------------------------------------------------|:------------------------------------------------------------------------|
| [Geotecnologias S.A.](http://www.geotecnologias.com) | **S**  (B) [:round_pushpin: Santa Catarina Pinula](https://www.google.com/maps/search/Plaza+Tigo+Torre+3,+Santa+Catarina+Pinula,+Guatemala+) | :globe_with_meridians: Cadastre, GIS consulting, ESRI & Trimble partner | 

 ## :hungary: Hungary 
| Company (1)                            | Size & City                                                                                                             | Focus                                                               |
|:---------------------------------------|:------------------------------------------------------------------------------------------------------------------------|:--------------------------------------------------------------------|
| [Eurosense](http://www.eurosense.com/) | **S** (B) [:round_pushpin: Budapest](https://www.google.com/maps/search/Ady+Endre+ùt+42-44,+HU-1191+Budapest,+HUNGARY+) | :airplane: Aerial imagery & LiDAR acquisition, all-purpose analysis | 

 ## :india: India 
| Company (28)                                                    | Size & City                                                                                                                                                                                                                                                                                                                                                                                                                                                     | Focus                                                                                                  |
|:----------------------------------------------------------------|:----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|:-------------------------------------------------------------------------------------------------------|
| [AAM Group](http://www.aamgroup.com)                            | **M** (B) [:round_pushpin: Hyderabad](https://www.google.com/maps/search/Raj+Bhavan+Rd,+Nishat+Bagh+Colony,+Somajiguda,+Hyderabad,+Telangana+500082,+India+)                                                                                                                                                                                                                                                                                                    | :airplane: Aerial image & LiDAR acquisition, 3D GIS                                                    |
| [Aidash](https://www.aidash.com/)                               | **M** (B) [:round_pushpin: Bellandur](https://www.google.com/maps/search/RMZ+Ecoworld,+6A,+Outer+Ring+Rd,+Devarabisanahalli,+Bellandur,+Bengaluru,+Karnataka+560103,+India+)                                                                                                                                                                                                                                                                                    | :earth_americas: EO for utility vegetation management                                                  |
| [Attentive AI](http://attentive.ai)                             | **S** [:round_pushpin: New Delhi](https://www.google.com/maps/search/G2+402,+Ganga+Apartments,+D6,+Vasant+Kunj,+New+Delhi+-+110070,++India+)                                                                                                                                                                                                                                                                                                                    | :earth_americas: EO: buiseness intelligence and asset monitoring                                       |
| [Blue Sky Analytics](https://blueskyhq.in/)                     | **M** [:round_pushpin: Gurgaon](https://www.google.com/maps/search/DLF+Phase+1,+Gurgaon,+Haryana+122008,+India+)                                                                                                                                                                                                                                                                                                                                                | :earth_americas: EO: Environmental monitoring, climate risk assessment                                 |
| [Cropin](https://www.cropin.com/)                               | **L** [:round_pushpin: Bangalore](https://www.google.com/maps/search/16th+Main,+BTM+Layout+1st+Stage,+Bangalore,+560029+Karnataka,+India+)                                                                                                                                                                                                                                                                                                                      | :seedling: Farm management solutions                                                                   |
| [ESRI](http://www.esriindia.com)                                | **L** (B) [:round_pushpin: Ghaziabad](https://www.google.com/maps/search/H-7,+Sector+63,+Noida+-+201301,+India+)                                                                                                                                                                                                                                                                                                                                                | :globe_with_meridians: ArcGIS software, GIS                                                            |
| [ESRI](https://www.esri.com/en-us/home)                         | **M** (B) [:round_pushpin: Mumbai](https://www.google.com/maps/search/106-107,+Marwah+Complex,+Krishanlal+Marwah+Road,+Marol,+Andheri+East,+Mumbai,+Maharashtra+400072,+India+)                                                                                                                                                                                                                                                                                 | :globe_with_meridians: ArcGIS software, GIS                                                            |
| [GalaxEye Space](https://galaxeye.space/)                       | **M** [:round_pushpin: Bengaluru](https://www.google.com/maps/search/27th+Main+Rd,+Bengaluru,+Karnataka+560102,+India+)                                                                                                                                                                                                                                                                                                                                         | :artificial_satellite: Satellite constellation SAR/optical                                             |
| [Geo Adithya Technologies](http://www.geoadithya.com)           | **M** [:round_pushpin: Chennai](https://www.google.com/maps/search/7,+Zackaria+Colony,+Main+Road,+Chennai,+600024+Tamil+Nadu,+India++)                                                                                                                                                                                                                                                                                                                          | :globe_with_meridians: GIS & EO: All-purpose                                                           |
| [GeoIQ](https://geoiq.io/)                                      | **S** [:round_pushpin: Bengaluru](https://www.google.com/maps/search/15th+Main+Rd,+Bengaluru,+560102,+India+)                                                                                                                                                                                                                                                                                                                                                   | :globe_with_meridians: Retail insights via spatial analysis                                            |
| [Geospatial Media+Communications](http://geospatialmedia.net)   | **M** (B) [:round_pushpin: Ghaziabad](https://www.google.com/maps/search/A+-+145,+Sector+63,+Noida,+India+)                                                                                                                                                                                                                                                                                                                                                     | :globe_with_meridians: Organization for public / policy outreach to promote geospatial services / data |
| [Geospoc](https://geospoc.com/)                                 | **L** [:round_pushpin: Maharashtra](https://www.google.com/maps/search/Ideas+to+Impacts+Building,+Lane+3,+Pallod+Farms,+Baner+Road,+Baner,+411045,+India+)                                                                                                                                                                                                                                                                                                      | :globe_with_meridians: GIS+EO: All-purpose                                                             |
| [HERE Technologies](https://www.here.com/en)                    | **L** (B) [:round_pushpin: Navi Mumbai](https://www.google.com/maps/search/Serene+Properties+SEZ,+MIDC+INDL+Area,+Airoli,+Navi+Mumbai,+Maharashtra+400708,+India+)                                                                                                                                                                                                                                                                                              | :globe_with_meridians: Car navigation mapping, GIS                                                     |
| [Hexamap Solutions](http://www.hexamapsolutions.com)            | **S** [:round_pushpin: Kottivakkam](https://www.google.com/maps/search/3rd+Main+Road,+Nehru+Nagar,+Kottivakkam,+Chennai+-+600096,+India+)                                                                                                                                                                                                                                                                                                                       | :globe_with_meridians: GIS consultancy for utilities                                                   |
| [Hyperverge](https://hyperverge.co/)                            | **L** [:round_pushpin: Malleshwaram](https://www.google.com/maps/search/S2904,+WTC,+Malleshwaram,+Bangalore+-+560055,+Inida+)                                                                                                                                                                                                                                                                                                                                   | :earth_americas: HyperVerge Geospatial Platform for object detection & change detection                |
| [Kawa Space](https://www.kawa.space/)                           | **S** [:round_pushpin: Bengaluru](https://www.google.com/maps/search/24th+Main+Road,+Bengaluru,+Karnataka+560078,+India+)                                                                                                                                                                                                                                                                                                                                       | :earth_americas: Geo-intelligence platform                                                             |
| [Marvel Geospatial Solutions](https://www.marvelgeospatial.com) | **M** [:round_pushpin: Hyderabad](https://www.google.com/maps/search/Shapoor+Hall,+5-9-22/1/B,+Shapoorwadi,+Adarsh+Nagar,+Hyderabad-500063,+Telangana,+India.+)                                                                                                                                                                                                                                                                                                 | :globe_with_meridians: GIS+EO: All-purpose                                                             |
| [Pixxel](https://pixxel.space/)                                 | **M** [:round_pushpin: Bangalore](https://www.google.com/maps/search/NO+722,+CMH+Road,+Indiranagar,+Bangalore,+India+)                                                                                                                                                                                                                                                                                                                                          | :artificial_satellite: Building daily global coverage EO smallsat constellation                        |
| [Quantum Asia](https://qapl.in/)                                | **M** [:round_pushpin: Hyderabad](https://www.google.com/maps/search/34/A,+Hitech+City+Station+Road,+Khanamet,+Madhapur,+Hyderabad+–+500+081,+India+)                                                                                                                                                                                                                                                                                                           | :globe_with_meridians: GIS+EO: All-purpose                                                             |
| [RMSI](https://www.rmsi.com)                                    | **L** (B) [:round_pushpin: Hyderabad](https://www.google.com/maps/search/Plot+No.+17+Gate+No.5,+Software+Units+Layout,+Madhapur,+Telangana+500081,+India+) <br /> **L** (B) [:round_pushpin: Dehradun](https://www.google.com/maps/search/1105,+Doon+Express+Business+Park,+Opposite+Transport+Nagar,+Subhash+Nagar,+Dehradun+248002,+India+) <br /> **L** (H) [:round_pushpin: Noida](https://www.google.com/maps/search/A-8+Sector+16,+Noida+201+301,+India+) | :earth_americas: EO+GIS: All-purpose, mapping software, insight platforms                              |
| [Satpalda Geospatial Services](http://www.satpalda.com)         | **S** [:round_pushpin: New Delhi](https://www.google.com/maps/search/Barakhamba+Rd+18,+Barakhamba,+New+Delhi,+Delhi+110001,+India+)                                                                                                                                                                                                                                                                                                                             | :earth_americas: EO data reseller, EO/GIS services                                                     |
| [Satsure](https://satsure.co/)                                  | **M** [:round_pushpin: Bangalore](https://www.google.com/maps/search/18+MG+Road,+Bangalore+,+Karnataka+560008,+India+)                                                                                                                                                                                                                                                                                                                                          | :earth_americas: EO: All-purpose                                                                       |
| [Skymap Global](https://skymapglobal.com)                       | **M** (B) [:round_pushpin: Rajasthan](https://www.google.com/maps/search/SFS+Mansarovar,+Jaipur,+Rajasthan+302020,+India+)                                                                                                                                                                                                                                                                                                                                      | :globe_with_meridians: Location-based analytics platforms for buiseness, agriculture, forest insights  |
| [Skyserve](https://skyserve.ai/)                                | **M** [:round_pushpin: Bengaluru](https://www.google.com/maps/search/5th+Main+Road,+Bengaluru,+Karnataka+560018,+India+)                                                                                                                                                                                                                                                                                                                                        | :earth_americas: EO: Insights-as-a-Service platform                                                    |
| [Spatial Decisions](http://www.spatialdecisions.com/)           | **M** (H) [:round_pushpin: New Delhi](https://www.google.com/maps/search/B-30+Kailash+Colony,+New+Delhi+110048,+India+)                                                                                                                                                                                                                                                                                                                                         | :globe_with_meridians: GIS consultancy (urban/regional planning, energy/infrastructure, climate)       |
| [TomTom](https://www.tomtom.com)                                | **L** (B) [:round_pushpin: Maharashtra](https://www.google.com/maps/search/Deepak+Complex,+Plot+no-190&192+,+Plot+C,+National+Games+Road,+Shastri+Nagar,+Yerawada,+Shastrinagar,+Yerawada,+Pune,+Maharashtra+411006,+India+)                                                                                                                                                                                                                                    | :globe_with_meridians: GIS for navigation                                                              |
| [TraceAgTech](https://traceagtech.com/)                         | **S** [:round_pushpin: Kerala](https://www.google.com/maps/search/Memorial+Building,+SA+Road,+Varghese,+Kerala+682019,+India+)                                                                                                                                                                                                                                                                                                                                  | :globe_with_meridians: Farm management software for agribusiness                                       |
| [Vasundharaa Geo Technologies](https://vasundharaa.in/)         | **S** [:round_pushpin: Pune](https://www.google.com/maps/search/Indiranagar+Society,+Vakil+Nagar,+Erandwane,+Pune,+Maharashtra+411004,+India+)                                                                                                                                                                                                                                                                                                                  | :earth_americas: EO: Urban, Agriculture, Disaster & Environment                                        | 

 ## :indonesia: Indonesia 
| Company (2)                                           | Size & City                                                                                                                                                      | Focus                                       |
|:------------------------------------------------------|:-----------------------------------------------------------------------------------------------------------------------------------------------------------------|:--------------------------------------------|
| [ESRI](http://esriindonesia.co.id)                    | **M** (B) [:round_pushpin: Jakarta](https://www.google.com/maps/search/Menara+165,+6th+Floor+Unit+B,+JL.+TB+Simatupang+Kav+1,+Jakarta+Selatan+12560,+Indonesia+) | :globe_with_meridians: ArcGIS software, GIS |
| [Hatfield Consultants](https://www.hatfieldgroup.com) | **M** (B) [:round_pushpin: Jakarta](https://www.google.com/maps/search/Jl.+Ir.+H.+Juanda+No.18+16122+Bogor+Jawa+Barat,+Indonesia+)                               | :globe_with_meridians: GIS+EO: All-purpose  | 

 ## :iran: Iran 
| Company (1)                                                        | Size & City                                                                                             | Focus                                   |
|:-------------------------------------------------------------------|:--------------------------------------------------------------------------------------------------------|:----------------------------------------|
| [Farazim Consulting Engineers](http://farazamin.com/index.php/en/) | **M** [:round_pushpin: Iran](https://www.google.com/maps/search/Nirou+St.,+Shariati+St.,+Tehran,+Iran+) | :globe_with_meridians: GIS: All-purpose | 

 ## :ireland: Ireland 
| Company (3)                                          | Size & City                                                                                                                                                                                                                                                  | Focus                                        |
|:-----------------------------------------------------|:-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|:---------------------------------------------|
| [ESRI](http://www.esri-ireland.ie)                   | **M** (B) [:round_pushpin: Dublin](https://www.google.com/maps/search/Block+B,+Ashtown+Gate,+Navan+Road,+Dublin,+Ireland+)                                                                                                                                   | :globe_with_meridians: ArcGIS software, GIS  |
| [Mallontechnology](https://www.mallontechnology.com) | **M** (B) [:round_pushpin: Dublin](https://www.google.com/maps/search/34+Fitzwilliam+Square,+Dublin,+Ireland+) <br /> **M** (H) [:round_pushpin: Cookstown](https://www.google.com/maps/search/Union+House,+Union+Place,+Cookstown,+Co.+Tyrone,+N.+Ireland+) | :globe_with_meridians: GIS+EO: All-purpose   |
| [Ryder Geospatial](https://www.rydergeospatial.ie/)  | **S** [:round_pushpin: Newport](https://www.google.com/maps/search/Main+Street,+Newport+Co.+Mayo,+Ireland+)                                                                                                                                                  | :globe_with_meridians: Mapping and surveying | 

 ## :israel: Israel 
| Company (9)                                           | Size & City                                                                                                                  | Focus                                                                         |
|:------------------------------------------------------|:-----------------------------------------------------------------------------------------------------------------------------|:------------------------------------------------------------------------------|
| [Albo](https://www.albosys.com/)                      | **S** [:round_pushpin: Raanana](https://www.google.com/maps/search/HaTidhar+5,+Raanana,+Israel+)                             | :earth_americas: EO for carbon sequestration analysis                         |
| [Asterra](https://asterra.io/)                        | **M** [:round_pushpin: Kfar Saba](https://www.google.com/maps/search/Atir+Yeda+St.+1,+Kfar+Saba+4464301,+Israel+)            | :earth_americas: EO: Below surface insights                                   |
| [HERE Technologies](https://www.here.com/en)          | **L** (B) [:round_pushpin: Ramat Gan](https://www.google.com/maps/search/12+Abba+Hillel,+HaBursa,+Ramat+Gan,+52506,+Israel+) | :globe_with_meridians: Car navigation mapping, GIS                            |
| [ISI](https://www.imagesatintl.com/)                  | **L** [:round_pushpin: Or Yehuda](https://www.google.com/maps/search/6+Yoni+Netanyahu+St.,+Or+Yehuda,+Israel+)               | :artificial_satellite: EROS NG satellite constellation, EO Analytics          |
| [Kaplan Open Source](https://kaplanopensource.co.il/) | **S** [:round_pushpin: Ramat Gan](https://www.google.com/maps/search/Ramat+Gan+5214001,+Israel+)                             | :globe_with_meridians: Open Source & GIS software & tools development         |
| [Planet Watchers](http://planetwatchers.com)          | **S** [:round_pushpin: Tel Aviv](https://www.google.com/maps/search/Tel+Aviv,+Israel+)                                       | :earth_americas: EO: SAR asset monitoring (commercial & environment)          |
| [Prospera](https://www.prospera.ag)                   | **M** [:round_pushpin: Tel Aviv-Yafo](https://www.google.com/maps/search/124+Ibe+Gabirol+St,+Tel+Aviv-Yafo,+Israel+)         | :seedling: Crop insights platform                                             |
| [Sivan Design](http://sivandesign.com)                | **M** [:round_pushpin: Ra'anana](https://www.google.com/maps/search/Ha-Tidhar+St+17,+Ra'anana,+Israel+)                      | :globe_with_meridians: GIS and 3D GIS software development, some GIS analysis |
| [Taranis](http://www.taranis.ag)                      | **M** [:round_pushpin: Tel Aviv-Yafo](https://www.google.com/maps/search/3+HaBarzel+St,+Tel+Aviv-Yafo,+Israel+)              | :seedling: Crop insights platform                                             | 

 ## :it: Italy 
| Company (15)                                          | Size & City                                                                                                                                                                                                                     | Focus                                                                                         |
|:------------------------------------------------------|:--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|:----------------------------------------------------------------------------------------------|
| [Aersys](http://www.aresys.it)                        | **S** [:round_pushpin: Milan](https://www.google.com/maps/search/Via+Flumendosa+16,+20132+Milan,+Italy+)                                                                                                                        | :earth_americas: SAR/InSAR ground monitoring                                                  |
| [Ariespace](https://www.ariespace.com/en/)            | **S** [:round_pushpin: Naples](https://www.google.com/maps/search/Centro+Direzionale,+IS.+A3,+80143+Napoli,+Italy+)                                                                                                             | :seedling: EO based agriculture irrigiation advisory service, crop insights                   |
| [ESRI](http://www.esriitalia.it)                      | **L** (B) [:round_pushpin: Rome](https://www.google.com/maps/search/Via+Casilina+98,+00182+Roma,+Italy+)                                                                                                                        | :globe_with_meridians: ArcGIS software, GIS                                                   |
| [GeoSolutions](https://www.geo-solutions.it)          | **M** [:round_pushpin: Massarosa](https://www.google.com/maps/search/Via+di+Montramito+3/A,+55054+Massarosa+(Lucca),+Italy+)                                                                                                    | :globe_with_meridians: Enterprise Support and development for open-source geospatial software |
| [Geobeyond](http://www.geobeyond.it/)                 | **S** [:round_pushpin: Italy](https://www.google.com/maps/search/Via+delle+Cave+91B,+00181,+Roma,+Italy+)                                                                                                                       | :globe_with_meridians: Spatial Data Infrastructures, Webgis                                   |
| [Geodatalab](https://www.geodatalab.it/)              | **M** [:round_pushpin: Rome](https://www.google.com/maps/search/Via+Tiburtina,+912,+00156+Roma+RM,+Italy+)                                                                                                                      | :globe_with_meridians: GIS focused software development/infrastructure, Geo-IT/GIS training   |
| [Meeo](https://www.meeo.it/)                          | **S** [:round_pushpin: Ferrara](https://www.google.com/maps/search/Corso+Ercole+I+d'Este+6/A,+44121+Ferrara,+Italy+)                                                                                                            | :earth_americas: Meteorological Enviroment EO, ADAM Platform                                  |
| [Planetek Italia](https://www.planetek.it/eng)        | **M** [:round_pushpin: Bari](https://www.google.com/maps/search/Via+Massaua+12,+I-70132+Bari,+Italy+)                                                                                                                           | :earth_americas: EO+GIS: All-purpose                                                          |
| [Planetek](http://www.planetek.it/eng)                | **M** [:round_pushpin: Bari](https://www.google.com/maps/search/Via+Massaua,+12,+70132+Bari+BA,+Italy+)                                                                                                                         | :earth_americas: EO: All-purpose                                                              |
| [Progressive Systems](https://progressivesystems.it/) | **S** [:round_pushpin: Rome](https://www.google.com/maps/search/Via+Enrico+Fermi+62,+Frascati,+Rome,+Rm+00044,+IT+)                                                                                                             | :earth_americas: EO: All-purpose                                                              |
| [SaferPlaces](https://saferplaces.co/)                | **S** [:round_pushpin: Rimini](https://www.google.com/maps/search/Piazza+Malatesta,+21,+47923+Rimini,+Italy+)                                                                                                                   | :globe_with_meridians: Flood Risk Intelligence                                                |
| [Telespazio](http://www.telespazio.com)               | **L** (B) [:round_pushpin: Capua](https://www.google.com/maps/search/Via+Maiorise,+81043+Capua+(CE),+Italy+) <br /> **L** (H) [:round_pushpin: Rome](https://www.google.com/maps/search/Via+Tiburtina,+965,+00156+Rome,+Italy+) | :globe_with_meridians: GIS+EO: All-purpose                                                    |
| [Terradue](https://www.terradue.com/portal/)          | **S** [:round_pushpin: Rome](https://www.google.com/maps/search/Via+Giovanni+Amendola+46,+00185+Roma,+Italy+)                                                                                                                   | :earth_americas: EO data cloud infrastructure services                                        |
| [Tre Altamira](http://tre-altamira.com)               | **M** (H) [:round_pushpin: Milan](https://www.google.com/maps/search/Ripa+di+Porta+Ticinese,+79,+20143+Milano,+Italy+)                                                                                                          | :earth_americas: EO: InSAR                                                                    |
| [e-Geos](https://www.e-geos.it/#/)                    | **L** [:round_pushpin: Rome](https://www.google.com/maps/search/Via+Tiburtina,+965,+00156+Rome,+Italy+)                                                                                                                         | :earth_americas: EO: All-purpose                                                              | 

 ## :jp: Japan 
| Company (6)                                   | Size & City                                                                                                                                           | Focus                                                                            |
|:----------------------------------------------|:------------------------------------------------------------------------------------------------------------------------------------------------------|:---------------------------------------------------------------------------------|
| [Asia Air Survey](http://www.ajiko.co.jp/en/) | **M** [:round_pushpin: Kawasaki-shi](https://www.google.com/maps/search/1-2-2+Manpukuji,+Asao-ku,+Kawasaki-shi,+Kanagawa+Prefecture+215-0004,+Japan+) | :airplane: Aerial image & LiDAR acquistion, analysis                             |
| [Axelspace](https://www.axelspace.com/)       | **M** [:round_pushpin: Tokyo](https://www.google.com/maps/search/3-3-3+Nihonbashi-Honcho,+Chuo-ku,+Tokyo,+103-0023,+Japan+)                           | :artificial_satellite: Microsatellite constellation for daily global observation |
| [Georepublic](https://georepublic.info/en/)   | **S** [:round_pushpin: Kobe](https://www.google.com/maps/search/5-3-1+Kumoidori,+Chuo+Ward,+Kobe,+Japan+)                                             | :globe_with_meridians: GIS/geodata solution consultancy                          |
| [Mirune](https://www.mierune.co.jp/?lang=en)  | **M** [:round_pushpin: Sapporo](https://www.google.com/maps/search/Kita+1-Jo+Higashi+4-Chome,+Chuo-ku,+Sapporo,+Hokkaido,+Japan+)                     | :globe_with_meridians: GIS solutions, focus on open source                       |
| [Pasco](http://www.pasco.co.jp/eng/)          | **M** [:round_pushpin: Tokyo](https://www.google.com/maps/search/1-1-2+Higashiyama,+Meguro-ku,+Tokyo+153-0043,+Japan+)                                | :earth_americas: EO data reseller, Aerial image acquisition, GIS services        |
| [Synspective](https://synspective.com)        | **S** [:round_pushpin: Tokyo](https://www.google.com/maps/search/Ginza+1-chome+bldg.+7F,+1-15-4+Ginza,+Chuo-ku,+Tokyo,+Japan+)                        | :earth_americas: EO: Smallsat SAR constellation & analytics                      | 

 ## :kenya: Kenya 
| Company (7)                                              | Size & City                                                                                                             | Focus                                                                   |
|:---------------------------------------------------------|:------------------------------------------------------------------------------------------------------------------------|:------------------------------------------------------------------------|
| [Apollo Agriculture](https://www.apolloagriculture.com/) | **L** (H) [:round_pushpin: Nairobi](https://www.google.com/maps/search/ABC+Place+Waiyaki+Way,+Nairobi,+Kenya+)          | :seedling: Agri support and finances platform                           |
| [Astral Aerial](https://astral-aerial.com/)              | **S** [:round_pushpin: Nairobi](https://www.google.com/maps/search/Matundu+Close,+off+School+lane,+Nairobi,+Kenya+)     | :airplane: Aerial mapping & drone reseller                              |
| [ESRI](https://www.esriea.com)                           | **L** (B) [:round_pushpin: Nairobi](https://www.google.com/maps/search/Kilimanjaro+Avenue,+Upper+Hill,+Nairobi,+Kenya+) | :globe_with_meridians: ArcGIS software, GIS                             |
| [Gro Intelligence](https://gro-intelligence.com)         | **S** (B) [:round_pushpin: Nairobi](https://www.google.com/maps/search/Eldama+Ravine+Road,+Westlands+Nairobi,+Kenya+)   | :earth_americas: Agriculture commodity intelligence                     |
| [Oakar Services](https://osl.co.ke)                      | **M** [:round_pushpin: Nairobi](https://www.google.com/maps/search/KUSCCO+Centre,+Kilimanjaro+Road,+Upper+Hill,+Kenya+) | :globe_with_meridians: Geospatial software / data reseller and analysis |
| [Orbital Africa](http://www.orbital.co.ke)               | **S** [:round_pushpin: Nairobi](https://www.google.com/maps/search/Kimathi+Building,+Kimathi+Ln,+Nairobi,+Kenya+)       | :globe_with_meridians: Geospatial software / data reseller and analysis |
| [QED](https://qed.ai/)                                   | **S** (B) [:round_pushpin: Nairobi](https://www.google.com/maps/search/Nairobi,+Westlands+Chiromo+Road,+Kenya+)         | :earth_americas: EO for agriculture, environment, and health            | 

 ## :luxembourg: Luxembourg 
| Company (5)                                           | Size & City                                                                                                                                             | Focus                                                                   |
|:------------------------------------------------------|:--------------------------------------------------------------------------------------------------------------------------------------------------------|:------------------------------------------------------------------------|
| [Hydrosat](https://www.hydrosat.com/)                 | **S** [:round_pushpin: Luxembourg](https://www.google.com/maps/search/9+Rue+du+Laboratoire,+L-1911+Luxembourg,+Luxembourg+)                             | :earth_americas: Thermal imagery insights with focus on agriculture     |
| [Kleos Space](https://kleos.space/)                   | **M** [:round_pushpin: Luxembourg](https://www.google.com/maps/search/Luxite+Two+7,+Rue+de+l'Innovation,+1896,+Luxembourg+)                             | :earth_americas: RF Reconnaissance Data as a Service                    |
| [RSS-Hydro](https://rss-hydro.lu/)                    | **S** [:round_pushpin: Dudelange](https://www.google.com/maps/search/Innovation+Hub+Dudelange,+100,+route+de+Volmerange,+L-3593+Dudelange,+Luxembourg+) | :airplane: R&D, Remote Sensing, Environmental consulting, UAV, flooding |
| [Space4Environment](http://www.space4environment.com) | **S** [:round_pushpin: Niederanven](https://www.google.com/maps/search/48,+rue+Gabriel+Lippmann,+L-6947+Niederanven,+Luxembourg+)                       | :earth_americas: EO: All-purpose                                        |
| [Spire](https://spire.com/)                           | **M** (B) [:round_pushpin: Vienna](https://www.google.com/maps/search/8000+Towers+Crescent+Dr,+Vienna,+VA+22182,+USA+)                                  | :artificial_satellite: Remote Frequency satellite constellation         | 

 ## :malaysia: Malaysia 
| Company (2)                               | Size & City                                                                                                                                     | Focus                                                                                                 |
|:------------------------------------------|:------------------------------------------------------------------------------------------------------------------------------------------------|:------------------------------------------------------------------------------------------------------|
| [ESRI](http://esrimalaysia.com.my)        | **M** (B) [:round_pushpin: Petaling Jaya](https://www.google.com/maps/search/16+Persiaran+Barat,+46050+Petaling+Jaya,+Selangor,+Malaysia+)      | :globe_with_meridians: ArcGIS software, GIS                                                           |
| [Skymap Global](https://skymapglobal.com) | **S** (B) [:round_pushpin: Kuala Lumpur](https://www.google.com/maps/search/Lingkaran,+Sunway+Velocity,+Cheras,+55100,+Kuala+Lumpur,+Malaysia+) | :globe_with_meridians: Location-based analytics platforms for buiseness, agriculture, forest insights | 

 ## :mexico: Mexico 
| Company (4)                                                      | Size & City                                                                                                                                                            | Focus                                                                           |
|:-----------------------------------------------------------------|:-----------------------------------------------------------------------------------------------------------------------------------------------------------------------|:--------------------------------------------------------------------------------|
| [Descifra](https://www.descifra.global)                          | **M** [:round_pushpin: Álvaro Obregón](https://www.google.com/maps/search/Insurgentes+Sur+1806,+Col.+Florida,+Álvaro+Obregón,+01030,+CDMX,+México+)                    | :globe_with_meridians: Geospatial Intelligence for retail, telco, logistic etc. |
| [HERE Technologies](https://www.here.com/en)                     | **L** (B) [:round_pushpin: León](https://www.google.com/maps/search/Blvd.+Campestre+2502,+El+Refugio+Campestre,+37156+León,+Gto.,+Mexico+)                             | :globe_with_meridians: Car navigation mapping, GIS                              |
| [Merrick](https://www.merrick.com/services/geospatial-services/) | **M** [:round_pushpin: Maxico City](https://www.google.com/maps/search/Jaime+Balmes+no.+11,+Col.+Los+Morales+Polanco,+C.P.+11510,+Mexico+)                             | :earth_americas: EO data reseller, LiDAR, mapping, all-purpose geodata analysis |
| [Tycho Solutions](https://tycho.solutions/)                      | **S** [:round_pushpin: Mexico](https://www.google.com/maps/search/Aristóteles+321-Dpto+103,+Polanco,+Polanco+IV+Secc,+Miguel+Hidalgo,+11550+Ciudad+de+México,+Mexico+) | :earth_americas: EO: Energy, Mobility, Land Ressources                          | 

 ## :netherlands: Netherlands 
| Company (31)                                                  | Size & City                                                                                                                                                                                                                                                           | Focus                                                                                                  |
|:--------------------------------------------------------------|:----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|:-------------------------------------------------------------------------------------------------------|
| [52Impact](https://www.52impact.nl/)                          | **S** [:round_pushpin: Rotterdam](https://www.google.com/maps/search/Van+Nelleweg+1,+3044+BC,+Rotterdam,+Netherlands+)                                                                                                                                                | :earth_americas: Risk assessment & mapping                                                             |
| [Aerodata International Surveys](http://aerodata-surveys.com) | **S** (B) [:round_pushpin: Utrecht](https://www.google.com/maps/search/Groenewoudsedijk+40,+3528+BK+Utrecht,+Netherlands+)                                                                                                                                            | :airplane: Airborne surveying and mapping, analysis                                                    |
| [Apollo Agriculture](https://www.apolloagriculture.com/)      | **L** (B) [:round_pushpin: Amsterdam](https://www.google.com/maps/search/Herengracht+472,+1017+CA+Amsterdam,+Netherlands+)                                                                                                                                            | :seedling: Agri support and finances platform                                                          |
| [Aurea Imaging](http://www.aureaimaging.com/)                 | **S** [:round_pushpin: Utrecht](https://www.google.com/maps/search/Weg+der+Verenigde+Naties+1,+3527+KT+Utrecht,+Netherlands+)                                                                                                                                         | :seedling: Crop insights platform                                                                      |
| [B3Partners BV](https://www.tailormap.com/)                   | **S** [:round_pushpin: Utrecht](https://www.google.com/maps/search/Zonnebaan+12-C,+Utrecht,+3542+EC,+Netherlands+)                                                                                                                                                    | :world_map: Web mapping, GIS, map & data publishing platform Tailormap                                 |
| [ESRI](http://www.esri.nl)                                    | **L** (B) [:round_pushpin: Rotterdam](https://www.google.com/maps/search/Weena+695+(B2+-+036),+3013AM+Rotterdam,+Netherlands+)                                                                                                                                        | :globe_with_meridians: ArcGIS software, GIS                                                            |
| [Elastic](https://www.elastic.co/products/kibana)             | **L** (B) [:round_pushpin: Amsterdam](https://www.google.com/maps/search/Rijnsburgstraat+9-11,+1059+AT,+Amsterdam,+Netherlands+)                                                                                                                                      | :globe_with_meridians: General data analysis plattform with some geo/GIS/Maps                          |
| [Ellipsis Drive](https://ellipsis-drive.com/)                 | **S** [:round_pushpin: Amsterdam](https://www.google.com/maps/search/Nieuwpoortkade,+1055+RX+Amsterdam,+Netherlands+)                                                                                                                                                 | :globe_with_meridians: Storage solution for geospatial data                                            |
| [Eurosense](http://www.eurosense.com/)                        | **S** (B) [:round_pushpin: Zwijndrecht](https://www.google.com/maps/search/Stationsweg+41+B,+3331+LR+Zwijndrecht,+THE+NETHERLANDS+)                                                                                                                                   | :airplane: Aerial imagery & LiDAR acquisition, all-purpose analysis                                    |
| [Fugro](https://www.fugro.com/)                               | **L** [:round_pushpin: Leidschendam](https://www.google.com/maps/search/Veurse+Achterweg+10,+Leidschendam,+2264+South+Holland,+Netherlands+)                                                                                                                          | :globe_with_meridians: Marine, land and asset engineering                                              |
| [Genscape](https://www.genscape.com)                          | **M** (B) [:round_pushpin: Amsterdam](https://www.google.com/maps/search/Damrak+20A,+1012+LH+Amsterdam,+Netherlands+)                                                                                                                                                 | :earth_americas: EO: Oil storage and infrastructure monitoring                                         |
| [Geospatial Media+Communications](http://geospatialmedia.net) | **M** (H) [:round_pushpin: Amsterdam](https://www.google.com/maps/search/Donauweg+10,+1043+AJ+Amsterdam,+Netherlands+)                                                                                                                                                | :globe_with_meridians: Organization for public / policy outreach to promote geospatial services / data |
| [HERE Technologies](https://www.here.com/en)                  | **L** (B) [:round_pushpin: Eindhoven](https://www.google.com/maps/search/Kennedyplein+222,+5611+Eindhoven,+Netherlands+) <br /> **L** (H) [:round_pushpin: Amsterdam](https://www.google.com/maps/search/Beethovenstraat+500,+1082+LC+Amsterdam,+Netherlands+)        | :globe_with_meridians: Car navigation mapping, GIS                                                     |
| [Imagem nl](https://imagemnl.com)                             | **M** [:round_pushpin: Capelle aan den IJssel](https://www.google.com/maps/search/2908+MA+Capelle+aan+den+IJssel,+Netherlands+)                                                                                                                                       | :earth_americas: EO+GIS: Asset Managment, mapping, location intelligence                               |
| [Merkator BV](https://www.merkator.com/)                      | **M** (H) [:round_pushpin: Groningen](https://www.google.com/maps/search/Leonard+Springerlaan+37-3,+9727+KB+Groningen,+Netherlands+) <br /> **M** (B) [:round_pushpin: Zaltbommel](https://www.google.com/maps/search/Hogeweg+137A,+5301+LL+Zaltbommel,+Netherlands+) | :globe_with_meridians: Geo-ICT Consultants for Goverment and  Utilities & Telco                        |
| [NEO BV](https://www.neo.nl)                                  | **M** [:round_pushpin: Amersfoort](https://www.google.com/maps/search/Stadsring+65D,+3811+HN+Amersfoort,+Netherlands+)                                                                                                                                                | :earth_americas: EO: Change detection, agriculture, topography managment system                        |
| [OsmAnd](https://osmand.net/)                                 | **S** [:round_pushpin: Amstelveen](https://www.google.com/maps/search/Logger+41,+1186+RM,+Amstelveen,+Netherlands+)                                                                                                                                                   | :globe_with_meridians: Mapping and navigation for OSM Maps                                             |
| [Overstory](https://www.overstory.ai)                         | **S** [:round_pushpin: Amsterdamn](https://www.google.com/maps/search/Amsterdam,+Netherlands+)                                                                                                                                                                        | :earth_americas: Vegetation Management for Electric Utilities                                          |
| [Readaar](http://en.readaar.com)                              | **S** [:round_pushpin: Utrecht](https://www.google.com/maps/search/Maliestraat+1,+3581+SH+Utrecht,+Netherlands+)                                                                                                                                                      | :earth_americas: EO: Urban insights and surveying at scale                                             |
| [Satelligence](https://satelligence.com)                      | **S** [:round_pushpin: Utrecht](https://www.google.com/maps/search/Maliebaan+22,+Utrecht,+Netherlands+)                                                                                                                                                               | :earth_americas: EO based natural resource management                                                  |
| [Sensar](https://www.sensar.nl)                               | **S** [:round_pushpin: Delft](https://www.google.com/maps/search/Olof+Palmestraat+14,+2616+LR+Delft,+Netherlands+)                                                                                                                                                    | :earth_americas: EO based subsidence and deformation monitoring                                        |
| [SkyGeo](https://skygeo.com)                                  | **M** [:round_pushpin: Delft](https://www.google.com/maps/search/Oude+Delft+175,+Delft,+2611+HB,+Netherlands+)                                                                                                                                                        | :earth_americas: EO: InSAR subsidience monitoring                                                      |
| [Skylab Analytics](http://skylabanalytics.com)                | **S** [:round_pushpin: Amsterdam](https://www.google.com/maps/search/Céramiquelaan,+Amsterdam,+Netherlands+)                                                                                                                                                          | :earth_americas: EO: All-purpose                                                                       |
| [Sobolt](https://www.sobolt.com/)                             | **M** [:round_pushpin: Rotterdam](https://www.google.com/maps/search/Weena+592,+Rotterdam,+South+Holland+3012CN,+Netherlands+)                                                                                                                                        | :earth_americas: EO for sustainability                                                                 |
| [Space4good](https://www.space4good.com/)                     | **M** [:round_pushpin: The Hague](https://www.google.com/maps/search/Fluwelen+Burgwal+58,+The+Hague,+South+Holland+2511,+Netherlands+)                                                                                                                                | :earth_americas: B-Corp for using EO data for humanitarian and environmental projects                  |
| [Spacemetric](http://spacemetric.com)                         | **S** (B) [:round_pushpin: Zwolle](https://www.google.com/maps/search/Eekwal+3,+8011+LA+Zwolle,+Netherlands+)                                                                                                                                                         | :earth_americas: EO image managment solutions                                                          |
| [Tensing](https://www.tensing.com/en/)                        | **M** [:round_pushpin: Waardenburg](https://www.google.com/maps/search/Achterweg+38,+4181+AE+Waardenburg,+Netherlands+)                                                                                                                                               | :globe_with_meridians: GIS Consultancy focused on ArcGIS & FME, GLP                                    |
| [TomTom](https://www.tomtom.com)                              | **L** (H) [:round_pushpin: Amsterdam](https://www.google.com/maps/search/De+Ruijterkade+154,+1011+AC+Amsterdam,+The+Netherlands+)                                                                                                                                     | :globe_with_meridians: GIS for navigation                                                              |
| [Vandersat](https://www.vandersat.com)                        | **M** [:round_pushpin: Haarlem](https://www.google.com/maps/search/Wilhelminastraat+43A,+2011+VK+Haarlem,+Netherlands+)                                                                                                                                               | :earth_americas: EO: Soil moisture / temperature monitoring                                            |
| [Webmapper](https://webmapper.net)                            | **S** [:round_pushpin: Utrecht](https://www.google.com/maps/search/Kromme+Nieuwegracht+3,+3512+HC+Utrecht,+Netherlands+)                                                                                                                                              | :world_map: Web mapping solutions, cartography and GIS consultancy                                     |
| [eLEAF](https://eleaf.com/)                                   | **S** [:round_pushpin: Wageningen](https://www.google.com/maps/search/Hesselink+van+Suchtelenweg+6,+6703CT+Wageningen,+Netherlands+)                                                                                                                                  | :seedling: EO: Solutions for crop production and water management                                      | 

 ## :new_zealand: New Zealand 
| Company (8)                                          | Size & City                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    | Focus                                                                  |
|:-----------------------------------------------------|:---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|:-----------------------------------------------------------------------|
| [Beca](https://www.beca.com)                         | **L** (H) [:round_pushpin: Auckland](https://www.google.com/maps/search/21+Pitt+Street,+Auckland+1010,+New+Zealand+) <br /> **L** (B) [:round_pushpin: Hamilton](https://www.google.com/maps/search/6+Garden+Place,+Hamilton+3204,+New+Zealand+) <br /> **L** (B) [:round_pushpin: Christchurch](https://www.google.com/maps/search/267+High+Street,+Christchurch+8011,+New+Zealand+) <br /> **L** (B) [:round_pushpin: Wellington](https://www.google.com/maps/search/85+Molesworth+Street,+Wellington+6011+) | :globe_with_meridians: Engineering firm with GIS consultancy           |
| [Critchlow Geospatial](https://www.critchlow.co.nz/) | **S** [:round_pushpin: Wellington](https://www.google.com/maps/search/50+Manners+Street,+Wellington+Central,+Wellington,+6011,+NZ+)                                                                                                                                                                                                                                                                                                                                                                            | :earth_americas: Geospatial consultancy & EO data reseller             |
| [Eagle Technology](https://www.eagle.co.nz)          | **M** [:round_pushpin: Albert](https://www.google.com/maps/search/25+Great+South+Road,+Epsom,+Auckland+1051,+New+Zealand+) <br /> **M** [:round_pushpin: Christchurch](https://www.google.com/maps/search/177+High+Street,+Christchurch,+8011,+New+Zealand+)                                                                                                                                                                                                                                                   | :globe_with_meridians: GIS consultancy , ESRI distributor              |
| [GBS](https://gbs.kiwi)                              | **M** [:round_pushpin: Maungakiekie](https://www.google.com/maps/search/45+Mt+Wellington+Highway,+Mount+Wellington,+Auckland,+1060,+New+Zealand+)                                                                                                                                                                                                                                                                                                                                                              | :globe_with_meridians: Geospatial solutions provider, ESRI partner     |
| [Interpret](http://www.interpret.co.nz)              | **S** [:round_pushpin: Auckland](https://www.google.com/maps/search/LEVEL+8,+57+FORT+STREET,+CBD,+AUCKLAND,+New+Zealand+)                                                                                                                                                                                                                                                                                                                                                                                      | :globe_with_meridians: Mapping, web maps, transportation insights      |
| [Koordinates](https://koordinates.com/about/)        | **S** [:round_pushpin: Auckland](https://www.google.com/maps/search/Level+1,+101+Pakenham+Street+West,+Auckland+1010,+New+Zealand+)                                                                                                                                                                                                                                                                                                                                                                            | :globe_with_meridians: Spatial data application building platform      |
| [Orbica](https://orbica.world)                       | **M** [:round_pushpin: Christchurch](https://www.google.com/maps/search/100+Manchester+Street,+Christchurch+Central,+Christchurch+8011,+New+Zealand+)                                                                                                                                                                                                                                                                                                                                                          | :globe_with_meridians: Location insights, GeoAI, Field Data Collection |
| [Seequent](https://www.seequent.com/)                | **L** (H) [:round_pushpin: Christchurch](https://www.google.com/maps/search/20+Moorhouse+Avenue,+Christchurch,+Canterbury+8011,+New+Zealand+)                                                                                                                                                                                                                                                                                                                                                                  | :globe_with_meridians: Earth modelling & geo-data management software  | 

 ## :nigeria: Nigeria 
| Company (1)                                                  | Size & City                                                                                               | Focus                                        |
|:-------------------------------------------------------------|:----------------------------------------------------------------------------------------------------------|:---------------------------------------------|
| [GIS/Transport Ltd.](http://www.gistransport.com/index.html) | **M** [:round_pushpin: Abuja](https://www.google.com/maps/search/1042,+Kur+Muhammed+Av.,+Abuja,+Nigeria+) | :globe_with_meridians: GIS & EO: All-purpose | 

 ## :norway: Norway 
| Company (2)                         | Size & City                                                                                                                                                                                                                                                                                                                                                    | Focus                                                     |
|:------------------------------------|:---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|:----------------------------------------------------------|
| [Geodata](https://geodata.no/)      | **M** (H) [:round_pushpin: Oslo](https://www.google.com/maps/search/Schweigaards+gate+28,+Oslo+0133,+Norway+) <br /> **S** (B) [:round_pushpin: Stavanger](https://www.google.com/maps/search/Lagårdsveien+78,+4010+Stavanger,+Norway+) <br /> **S** (B) [:round_pushpin: Trondheim](https://www.google.com/maps/search/Abels+gate+5,+7030+Trondheim,+Norway+) | :globe_with_meridians: GIS consultancy, ESRI distributor  |
| [Unacast](https://www.unacast.com/) | **M** [:round_pushpin: Oslo](https://www.google.com/maps/search/Karl+Johans+Gate+21,+0159+Oslo,+Norway+)                                                                                                                                                                                                                                                       | :globe_with_meridians: International Location Data vendor | 

 ## :pakistan: Pakistan 
| Company (2)                           | Size & City                                                                                                         | Focus                                                  |
|:--------------------------------------|:--------------------------------------------------------------------------------------------------------------------|:-------------------------------------------------------|
| [LMKT](https://www.lmkt.com/)         | **L** [:round_pushpin: Islamabad](https://www.google.com/maps/search/Street+3rd+&+Lodhi+Road,+Islamabad,+Pakistan+) | :globe_with_meridians: Smart city & agritech solutions |
| [Periegesis](https://periegesis.com/) | **S** [:round_pushpin: Islamabad](https://www.google.com/maps/search/Islamabad,+Islamabad+44000,+Pakistan+)         | :globe_with_meridians: GIS: All purpose                | 

 ## :peru: Peru 
| Company (1)                                    | Size & City                                                                                                       | Focus                                                                           |
|:-----------------------------------------------|:------------------------------------------------------------------------------------------------------------------|:--------------------------------------------------------------------------------|
| [Developmentseed](https://developmentseed.org) | **S** (B) [:round_pushpin: Ayacucho](https://www.google.com/maps/search/Jose+Santos+Chocano+416,+Ayacucho,+Peru+) | :earth_americas: DevSeed Data Team / Mapbox Peru, OSM Mapping, ML data creation | 

 ## :poland: Poland 
| Company (10)                                   | Size & City                                                                                                                                                                                                                                      | Focus                                                                      |
|:-----------------------------------------------|:-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|:---------------------------------------------------------------------------|
| [ESRI](http://www.esri.pl)                     | **M** (B) [:round_pushpin: Warsaw](https://www.google.com/maps/search/ul.+Bonifraterska+17,+00-203+Warszawa,+Poland+)                                                                                                                            | :globe_with_meridians: ArcGIS software, GIS                                |
| [Eurosense](http://www.eurosense.com/)         | **S** (B) [:round_pushpin: Warsaw](https://www.google.com/maps/search/Ul.+Sienna+83,+Lok+218,+PL-00-815+Warsaw,+POLAND+)                                                                                                                         | :airplane: Aerial imagery & LiDAR acquisition, all-purpose analysis        |
| [Geovigo](https://geovigo.pl/en/)              | **S** [:round_pushpin: Iwanowice Dworskie](https://www.google.com/maps/search/Zielna+15,+32-095+Iwanowice+Dworskie,+Poland+)                                                                                                                     | :earth_americas: LIDAR Mapping: software, hardware, training, support      |
| [Globema](https://www.globema.com/)            | **L** [:round_pushpin: Warsaw](https://www.google.com/maps/search/Wita+Stwosza+22,+Warsaw,+Masovian+Voivodeship+02-661,+Poland+)                                                                                                                 | :globe_with_meridians: Network management, routing, GIS                    |
| [Onesoil](https://onesoil.ai)                  | **M** ( B) [:round_pushpin: Warsaw](https://www.google.com/maps/search/Dzielna+60,+01-029+Warszawa,+Poland+)                                                                                                                                     | :seedling: AI-Powered Precision Farming Platform                           |
| [Opegieka](https://opegieka.pl//english)       | **M** (H) [:round_pushpin: Poland](https://www.google.com/maps/search/Aleja+Tysiąclecia+11,+82-300+Elbląg,+Poland+) <br /> **M** (B) [:round_pushpin: Poland](https://www.google.com/maps/search/ul.+Grzybowska+80/82,+00-844+Warszawa,+Poland+) | :airplane: Aerial image & LiDAR acquisition, EO consulting                 |
| [Satrevolution S.A](https://satrevolution.com) | **M** [:round_pushpin: Wrocław](https://www.google.com/maps/search/Stabłowicka+147,+54-066+Wrocław,+Poland+)                                                                                                                                     | :artificial_satellite: EO satellite construction & mission design          |
| [Spectator.earth](https://spectator.earth)     | **S** [:round_pushpin: Krakow](https://www.google.com/maps/search/Podole+60,+30-394+Krakow,+Poland+)                                                                                                                                             | :earth_americas: Acquisition planning, satellite tracking, data management |
| [Tensorflight](https://tensorflight.com/)      | **S** (H) [:round_pushpin: Warsaw](https://www.google.com/maps/search/Mikołaja+Kopernika+32/12,+00-336+Warsaw,+Poland+)                                                                                                                          | :earth_americas: Property data and AI technology for insurance             |
| [TomTom](https://www.tomtom.com)               | **L** (B) [:round_pushpin: Lodz](https://www.google.com/maps/search/Stefana+Żeromskiego+94c,+90-550+Łódź,+Poland+)                                                                                                                               | :globe_with_meridians: GIS for navigation                                  | 

 ## :portugal: Portugal 
| Company (6)                                    | Size & City                                                                                                                                             | Focus                                                              |
|:-----------------------------------------------|:--------------------------------------------------------------------------------------------------------------------------------------------------------|:-------------------------------------------------------------------|
| [Developmentseed](https://developmentseed.org) | **S** (B) [:round_pushpin: Lisabon](https://www.google.com/maps/search/Avenida+da+Liberdade+229,+1250-142+Lisboa,+Portugal+)                            | :earth_americas: EO data and analysis infrastructure (open source) |
| [ESRI](http://www.esriportugal.pt)             | **L** (B) [:round_pushpin: Lisabon](https://www.google.com/maps/search/RUA+JULIETA+FERRÃO,+Nº+10+-+10º+A,+1600-131+LISBOA,+Portugal+)                   | :globe_with_meridians: ArcGIS software, GIS                        |
| [GMV](https://www.gmv.com/en/)                 | **M** (B) [:round_pushpin: Lisboa](https://www.google.com/maps/search/Avenida+Dom+João+II,+no+43,+1998-025+Lisboa,+Portugal+)                           | :earth_americas: EO: All-purpose                                   |
| [GeoSat](https://geosat.space/)                | **M** [:round_pushpin: Lisbon](https://www.google.com/maps/search/Avenida+24+de+Julho+126,+Lisbon,+1350,+Portugal+)                                     | :artificial_satellite: Geosat satellites, EO Analytics             |
| [Gisgeo](https://gisgeo.pt/p/EN/)              | **S** [:round_pushpin: Porto](https://www.google.com/maps/search/Rua+Professor+Bento+de+Jesus+Caraça+Porto,+Edifício+Primus,+Porto+4200-131,+Portugal+) | :globe_with_meridians: GIS, software development, webmapping       |
| [Tesselo](https://tesselo.com/)                | **S** [:round_pushpin: Lisbon](https://www.google.com/maps/search/Lisbon,+Portugal+)                                                                    | :earth_americas: EO: Sustainability, mapping                       | 

 ## :romania: Romania 
| Company (4)                                  | Size & City                                                                                                                           | Focus                                                                              |
|:---------------------------------------------|:--------------------------------------------------------------------------------------------------------------------------------------|:-----------------------------------------------------------------------------------|
| [ESRI](http://www.esri.ro)                   | **L** (B) [:round_pushpin: Voluntari](https://www.google.com/maps/search/Drumul+Potcoavei+48,+Voluntari+077190,+Romania+)             | :globe_with_meridians: ArcGIS software, GIS                                        |
| [Essensys Software](http://www.essensys.ro/) | **M** [:round_pushpin: Bucharest](https://www.google.com/maps/search/8+Iancu+de+Hunedoara+Boulevard,+011742,+Bucharest,+Romania+)     | :globe_with_meridians: GIS solutions, INSPIRE implementation, software development |
| [Eurosense](http://www.eurosense.com/)       | **S** (B) [:round_pushpin: Bucharest](https://www.google.com/maps/search/Calea+Victoriei+26,+Sector+3+-+030027+-+Bucharest,+ROMANIA+) | :airplane: Aerial imagery & LiDAR acquisition, all-purpose analysis                |
| [Terrasigna](http://www.terrasigna.com)      | **S** [:round_pushpin: Bucharest](https://www.google.com/maps/search/3+Logofat+Luca+Stroici+Street,+020581,+Bucharest,+Romania+)      | :earth_americas: EO: All-purpose, InSAR / PSI                                      | 

 ## :ru: Russia 
| Company (1)                        | Size & City                                                                                                             | Focus                                                                                  |
|:-----------------------------------|:------------------------------------------------------------------------------------------------------------------------|:---------------------------------------------------------------------------------------|
| [NextGIS](https://www.nextgis.com) | **M** [:round_pushpin: Moscow](https://www.google.com/maps/search/20+Novaya+Basmannaya+street,+Moscow,+107078,+Russia+) | :globe_with_meridians: GIS, Webgis & server development, data processing, GIS training | 

 ## :saudi_arabia: Saudi Arabia 
| Company (1)                            | Size & City                                                                                                                   | Focus                                       |
|:---------------------------------------|:------------------------------------------------------------------------------------------------------------------------------|:--------------------------------------------|
| [ESRI](http://www.esrisaudiarabia.com) | **M** (B) [:round_pushpin: Riyadh](https://www.google.com/maps/search/Imam+Saud+Bin+Faisal+Road,+Riyadh+11585,+Saudi+Arabia+) | :globe_with_meridians: ArcGIS software, GIS | 

 ## :serbia: Serbia 
| Company (1)                | Size & City                                                                                                  | Focus                                        |
|:---------------------------|:-------------------------------------------------------------------------------------------------------------|:---------------------------------------------|
| [Gilab](https://gilab.rs/) | **S** [:round_pushpin: Belgrade](https://www.google.com/maps/search/Veljka+Dugoševića+54,+Belgrade,+Serbia+) | :globe_with_meridians: GIS + EO: All-purpose | 

 ## :singapore: Singapore 
| Company (5)                               | Size & City                                                                                                                      | Focus                                                                                                 |
|:------------------------------------------|:---------------------------------------------------------------------------------------------------------------------------------|:------------------------------------------------------------------------------------------------------|
| [Adatos](https://www.adatos.com/)         | **S** [:round_pushpin: Singapore](https://www.google.com/maps/search/70+Shenton+Way,+079118,+Singapore++)                        | :earth_americas: Carbon quantification and Agriculture                                                |
| [ESRI](http://esrisingapore.com.sg)       | **M** (B) [:round_pushpin: Singapore](https://www.google.com/maps/search/82+Ubi+Avenue+4,+408832,+Singapore++)                   | :globe_with_meridians: ArcGIS software, GIS                                                           |
| [NextBillion](https://nextbillion.ai/)    | **L** [:round_pushpin: Singapore](https://www.google.com/maps/search/9+Straits+Vw,+Marina+South,+Singapore+018978,+Singapore+)   | :world_map: Mapping SDKs                                                                              |
| [Skymap Global](https://skymapglobal.com) | **S** (H) [:round_pushpin: Singapore](https://www.google.com/maps/search/12+Tannery+Road,+#04-03+HB+Centre+1,+Singapore+347722+) | :globe_with_meridians: Location-based analytics platforms for buiseness, agriculture, forest insights |
| [eofactory](https://eofactory.ai/)        | **M** [:round_pushpin: Singapore](https://www.google.com/maps/search/18+Howard+Rd,+Singapore+)                                   | :earth_americas: EO platform for geo insights                                                         | 

 ## :slovakia: Slovakia 
| Company (2)                            | Size & City                                                                                                               | Focus                                                               |
|:---------------------------------------|:--------------------------------------------------------------------------------------------------------------------------|:--------------------------------------------------------------------|
| [Eurosense](http://www.eurosense.com/) | **S** (B) [:round_pushpin: Bratislava](https://www.google.com/maps/search/Kutuzovova+13,+SK-831+03+BRATISLAVA,+SLOVAKIA+) | :airplane: Aerial imagery & LiDAR acquisition, all-purpose analysis |
| [InSAR Sk](https://insar.space)        | **S** [:round_pushpin: Presov](https://www.google.com/maps/search/08001+Presov,+Slovakia+)                                | :earth_americas: EO: InSAR research, ground deformation etc.        | 

 ## :slovenia: Slovenia 
| Company (2)                              | Size & City                                                                                                               | Focus                                              |
|:-----------------------------------------|:--------------------------------------------------------------------------------------------------------------------------|:---------------------------------------------------|
| [Flai](https://www.flai.ai/)             | **S** [:round_pushpin: Ljubljana](https://www.google.com/maps/search/Bravničarjeva+ulica,+13,+Ljubljana,+1000,+Slovenia+) | :globe_with_meridians: Point Cloud Processing      |
| [Sinergise](http://www.sinergise.com/en) | **M** [:round_pushpin: Ljubljana](https://www.google.com/maps/search/Cvetkova+ulica+29+SI-1000+Ljubljana,+Slovenia+)      | :earth_americas: Sentinel Hub, Data Infrastructure | 

 ## :south_africa: South Africa 
| Company (10)                                           | Size & City                                                                                                                                                                                                                                                                  | Focus                                                                        |
|:-------------------------------------------------------|:-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|:-----------------------------------------------------------------------------|
| [ESRI](http://www.esri-southafrica.com)                | **L** (B) [:round_pushpin: Midrand](https://www.google.com/maps/search/Cnr+New+Road+&+6th+Road,+Midrand,+South+Africa+)                                                                                                                                                      | :globe_with_meridians: ArcGIS software, GIS                                  |
| [Geo Data Design](https://www.geodatadesign.co.za)     | **S** [:round_pushpin: Cape Town](https://www.google.com/maps/search/1F,+Nautica+Building,+The+Water+Club,+Beach+Road,+Granger+Bay,+Cape+Town,+South+Africa+)                                                                                                                | :earth_americas: InSAR displacement monitoring, All-purpose geodata analysis |
| [GeoTerraImage](http://www.geoterraimage.com)          | **M** [:round_pushpin: Pretoria](https://www.google.com/maps/search/477+Witherite+Street,+Die+Wilgers,+Pretoria,+South+Africa+)                                                                                                                                              | :earth_americas: EO+GIS: All-purpose, spatial business intelligence          |
| [Geospace](http://www.geospace.co.za)                  | **S** [:round_pushpin: Pretoria](https://www.google.com/maps/search/290+Glenwood+Road,+Lynnwood+Park,+Pretoria,+0081,+South+Africa+)                                                                                                                                         | :airplane: Aerial image acquisition                                          |
| [Giscoe](http://www.giscoe.com)                        | **S** (B) [:round_pushpin: Western Cape](https://www.google.com/maps/search/Willie+Van+Schoor+Drive,+Tyger+Valley,+7530+Western+Cape,+South+Africa+) <br /> **S** (H) [:round_pushpin: Potchefstroom](https://www.google.com/maps/search/2531,+Potchefstroom,+South+Africa+) | :globe_with_meridians: GIS, Buiseness revenue analysis + maps                |
| [Kartoza](https://kartoza.com/)                        | **S** [:round_pushpin: Stellenbosch](https://www.google.com/maps/search/26+Quantum+Street,+Technopark,+Stellenbosch,+7600,+South+Africa+)                                                                                                                                    | :globe_with_meridians: GIS training, Open source GIS solution development    |
| [LuxCarta](http://luxcarta.com)                        | **S** (B) [:round_pushpin: Cape](https://www.google.com/maps/search/Dreyersdal+Farm+Road,+Bergvliet+7945,+Cape+Town,+South+Africa+)                                                                                                                                          | :globe_with_meridians: Geodata and Analysis for Wireless Network Planning    |
| [Swift Geospatial](https://swiftgeospatial.solutions/) | **S** [:round_pushpin: Pretoria](https://www.google.com/maps/search/414+Vera+St,+Waterkloof+Glen,+Pretoria,+0010+)                                                                                                                                                           | :earth_americas: EO for Forest, Mine, Agriculture                            |
| [WGS Aerial Surveys](http://www.wgsair.com)            | **S** [:round_pushpin: Kwa-Zulu Natal](https://www.google.com/maps/search/Builders+Way+1,+Hillcrest,+3610+Kwa-Zulu+Natal,+South+Africa+)                                                                                                                                     | :airplane: Aerial survey, GIS                                                |
| [Woolpert](https://woolpert.com/)                      | **M** (B) [:round_pushpin: Randburg](https://www.google.com/maps/search/Roos+St,+Beverley+Gardens,+Randburg,+South+Africa+)                                                                                                                                                  | :airplane: Aerial image & LiDAR acquistion, geospatial analysis              | 

 ## :kr: South Korea 
| Company (2)                                      | Size & City                                                                                                               | Focus                                                                         |
|:-------------------------------------------------|:--------------------------------------------------------------------------------------------------------------------------|:------------------------------------------------------------------------------|
| [Angelswing](https://angelswing.io/en/)          | **M** [:round_pushpin: Seoul](https://www.google.com/maps/search/Gwanak-ro1,+Gwanak-gu,+Seoul+00826,+South+Korea+)        | :airplane: Drone data platform                                                |
| [SI Imaging Services](http://www.si-imaging.com) | **M** [:round_pushpin: Dae-jeon](https://www.google.com/maps/search/Gwahak-ro,+Yuseong-gu,+Dae-jeon,+34133,+South+Korea+) | :earth_americas: Kompsat distributor, other satdata, photogrammetric software | 

 ## :es: Spain 
| Company (16)                                  | Size & City                                                                                                                                                                                                                                                            | Focus                                                                                     |
|:----------------------------------------------|:-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|:------------------------------------------------------------------------------------------|
| [Aistech](https://aistechspace.com)           | **M** [:round_pushpin: Barcelona](https://www.google.com/maps/search/Carrer+d'Esteve+Terradas,+1,+08860+Castelldefels,+Barcelona,+Spain+)                                                                                                                              | :earth_americas: Geospatial intelligence (Asset monitoring, EO, Aviation tracking)        |
| [Carto](https://carto.com)                    | **L** (B) [:round_pushpin: Madrid](https://www.google.com/maps/search/Madrid+Plaza+del+Callao,+4,+28013+Madrid,+Spain+)                                                                                                                                                | :globe_with_meridians: Location data analysis platform                                    |
| [ESRI](http://www.esri.es)                    | **M** (B) [:round_pushpin: Madrid](https://www.google.com/maps/search/Emilio+Muñoz+35-37,+28037+Madrid,+Spain+)                                                                                                                                                        | :globe_with_meridians: ArcGIS software, GIS                                               |
| [Earthpulse](https://earthpulse.ai/)          | **S** [:round_pushpin: Barcelona](https://www.google.com/maps/search/San+Juan+de+la+Salle+42,+415,+08022,+Barcelona,+Spain+)                                                                                                                                           | :earth_americas: AI-powered satellite analytics                                           |
| [GMV](https://www.gmv.com/en/)                | **L** (H) [:round_pushpin: Madrid](https://www.google.com/maps/search/Calle+de+Isaac+Newton,+11,+28760+Tres+Cantos,+Madrid,+Spain+)                                                                                                                                    | :earth_americas: EO: All-purpose                                                          |
| [Geocento](http://geocento.com)               | **S** (B) [:round_pushpin: Madrid](https://www.google.com/maps/search/Centro+de+Negocios+Villafranca,+Local+61,+28692+Villafranca+del+Castillo+(Madrid),+Spain+)                                                                                                       | :earth_americas: EO imagery and analytics platform                                        |
| [InfluuntAI](https://www.influunt.ai/)        | **S** [:round_pushpin: Barcelona](https://www.google.com/maps/search/Barcelona,+Spain+)                                                                                                                                                                                | :globe_with_meridians: Water Risk Intelligence                                            |
| [IsardSat](http://www.isardsat.co.uk)         | **M** [:round_pushpin: Barcelona](https://www.google.com/maps/search/Carrer+Marie+Curie,+8-14,+A213.+08042.+Barcelona,+Spain+)                                                                                                                                         | :earth_americas: EO: R&D focus on altimetry, Passive Microwaves and SAR imaging           |
| [La GIStería](https://lagisteria.com)         | **S** [:round_pushpin: Vitoria-Gasteiz](https://www.google.com/maps/search/Portal+de+Foronda+54,+Vitoria-Gasteiz,+01010,+Álava,+Spain+)                                                                                                                                | :world_map: Spatial data vizualisation, webmaps, graphic design with maps                 |
| [Marketingeo](https://www.marketingeo.es)     | **S** [:round_pushpin: Valencia](https://www.google.com/maps/search/Espacio+Arcade+c/+Serpis+68+-+1o,+46022+Valencia,+Spain+)                                                                                                                                          | :globe_with_meridians: Geolocation & online marketing                                     |
| [Near Space Labs](https://nearspacelabs.com/) | **S** [:round_pushpin: Barcelona](https://www.google.com/maps/search/Calle+de+Llull+63,+08005+Barcelona,+Spain+)                                                                                                                                                       | :artificial_satellite: High resolution data from stratosphere baloons                     |
| [Satellogic](https://www.satellogic.com)      | **S**  (B) [:round_pushpin: Barcelona](https://www.google.com/maps/search/Carrer+de+Jordi+Girona+1,+Parc+UPC+-+K2M,+Barcelona,+Spain+)                                                                                                                                 | :artificial_satellite: Cubesat 1m optical or 30m hyperspectral, focused on Data Analytics |
| [SpaceSUR](https://www.spacesur.com)          | **S** (B) [:round_pushpin: Barcelona](https://www.google.com/maps/search/Passeig+Garcia+Fària,+49+-+08019,+Barcelona+-+Spain+)                                                                                                                                         | :earth_americas: EO: All-purpose, InSAR, Geospatial Analytics                             |
| [Telespazio](http://www.telespazio.es/en/)    | **L** (B) [:round_pushpin: Barcelona](https://www.google.com/maps/search/C/Rosa+Sensat+9-11,+6th+Floor+08005+Barcelona,+Spain+) <br /> **M** (B) [:round_pushpin: Madrid](https://www.google.com/maps/search/Julian+Camarillo+4,+Edificio+B,+4,+28037,+Madrid,+Spain+) | :globe_with_meridians: GIS+EO: All-purpose                                                |
| [Tre Altamira](http://tre-altamira.com)       | **M** (B) [:round_pushpin: Barcelona](https://www.google.com/maps/search/Corsega,+381-387,+E-08037+Barcelona,+Spain+)                                                                                                                                                  | :earth_americas: EO: InSAR                                                                |
| [Vizzuality](http://www.vizzuality.com)       | **M** [:round_pushpin: Madrid](https://www.google.com/maps/search/Calle+de+Fuencarral,+123,+28010,+Madrid,+Spain+)                                                                                                                                                     | :world_map: Spatial data vizualization, webmapping                                        | 

 ## :sri_lanka: Sri Lanka 
| Company (1)                         | Size & City                                                                                              | Focus                                                          |
|:------------------------------------|:---------------------------------------------------------------------------------------------------------|:---------------------------------------------------------------|
| [RS Metrics](https://rsmetrics.com) | **S** (B) [:round_pushpin: Pita Kotte](https://www.google.com/maps/search/Pita+Kotte,+Kotte,+Sri+Lanka+) | :earth_americas: EO: Retail, Real Estate, Commodity monitoring | 

 ## :sweden: Sweden 
| Company (9)                            | Size & City                                                                                                                             | Focus                                                                       |
|:---------------------------------------|:----------------------------------------------------------------------------------------------------------------------------------------|:----------------------------------------------------------------------------|
| [ESRI](http://www.esri.se)             | **L** (B) [:round_pushpin: Gävle](https://www.google.com/maps/search/Regementsvägen+29,+S-802+67+Gävle,+Sweden+)                        | :globe_with_meridians: ArcGIS software, GIS                                 |
| [Mapillary](https://www.mapillary.com) | **M** [:round_pushpin: Malmö](https://www.google.com/maps/search/Bredgatan+4,+211+30+Malmö,+Sweden+)                                    | :globe_with_meridians: Street-level imagery analysis                        |
| [Maxar](https://www.maxar.com)         | **M** (B) [:round_pushpin: Linköping](https://www.google.com/maps/search/Bröderna+Ugglas+gata+581+88+Linköping,+Sweden+)                | :earth_americas: 3D visualization platform for EO data                      |
| [SkyQraft](https://www.skyqraft.com/)  | **M** [:round_pushpin: Stockholm](https://www.google.com/maps/search/Kungsgatan+64,+111+22+Stockholm,+Sweden+)                          | :globe_with_meridians: Power grid insights                                  |
| [Solvi](https://solvi.nu)              | **S** [:round_pushpin: Gothenburg](https://www.google.com/maps/search/Östra+Hamngatan+19,+Gothenburg,+Sweden+)                          | :seedling: Software for drone-based crop management                         |
| [Spacemetric](http://spacemetric.com)  | **S** (H) [:round_pushpin: Sollentuna](https://www.google.com/maps/search/Tingsvägen+17,+SE-191+61+Sollentuna,+Sweden+)                 | :earth_americas: EO image managment solutions                               |
| [Spacept](https://spacept.com/)        | **S** [:round_pushpin: Sweden](https://www.google.com/maps/search/Artillerigatan+76,+Ladugårdsgärdet,+Stockholm+County+115+30,+Sweden+) | :earth_americas: EO: Powerline inspection, Light Inspection, Leak detection |
| [T-Kartor](https://www.t-kartor.com)   | **M** [:round_pushpin: Kristianstad](https://www.google.com/maps/search/Olof+Mohlins+väg+12,+291+62+Kristianstad,+Sweden+)              | :world_map: Weggeo solutions, Map production, City Wayfinding               |
| [Vultus](https://www.vultus.io/)       | **S** [:round_pushpin: Lund](https://www.google.com/maps/search/Bankgatan+1a,+223+52+Lund,+Sweden+)                                     | :seedling: Crop insights                                                    | 

 ## :switzerland: Switzerland 
| Company (12)                                      | Size & City                                                                                                                                   | Focus                                                                               |
|:--------------------------------------------------|:----------------------------------------------------------------------------------------------------------------------------------------------|:------------------------------------------------------------------------------------|
| [Camptocamp](https://www.camptocamp.com/en)       | **L** [:round_pushpin: Lausanne](https://www.google.com/maps/search/Camptocamp+SA,+EPFL+Innovation+Park,+1015+Lausanne,+Switzerland+)         | :globe_with_meridians: Open Source GIS development, consultancy & training          |
| [ESRI](https://www.esri.ch)                       | **M** (B) [:round_pushpin: Zurich](https://www.google.com/maps/search/Josefstrasse+218,+8005+Zurich,+Switzerland+)                            | :globe_with_meridians: ArcGIS software, GIS                                         |
| [Gamaya](http://gamaya.com)                       | **M** [:round_pushpin: Lausanne](https://www.google.com/maps/search/EPFL+Innovation+Park,+C,+Route+J-D.Colladon,+1015+Lausanne,+Switzerland+) | :airplane: Hyperspectral UAV data for crop insights                                 |
| [Jua](https://www.jua.ai/)                        | **S** (H) [:round_pushpin: Freienbach](https://www.google.com/maps/search/Hergishalten+38808+Pfäffikon,+Switzerland+)                         | :earth_americas: High-accuracy weather data                                         |
| [Klokan Technologies](https://www.klokantech.com) | **S** [:round_pushpin: Unterageri](https://www.google.com/maps/search/Hofnerstrasse+98,+6314+Unterageri,+Switzerland+)                        | :world_map: Webmap services development                                             |
| [Maptiler](https://www.maptiler.com/)             | **M** [:round_pushpin: Unterägeri](https://www.google.com/maps/search/Höfnerstrasse+98,+6314+Unterägeri,+Switzerland+)                        | :world_map: Maps, documentation, code samples, and developer tools for web & mobile |
| [Onesoil](https://onesoil.ai)                     | **S** (H) [:round_pushpin: Zurich](https://www.google.com/maps/search/Seefeldstr.+123,+8008+Zurich,+Switzerland+)                             | :seedling: AI-Powered Precision Farming Platform                                    |
| [Picterra](https://picterra.ch)                   | **S** [:round_pushpin: Lausanne](https://www.google.com/maps/search/Rue+de+la+Mouline+8,+1022+Chavannes-près-Renens,+Switzerland+)            | :earth_americas: AI Platform for geospatial analysis at scale                       |
| [Pix4D](https://pix4d.com)                        | **M** (H) [:round_pushpin: Prilly](https://www.google.com/maps/search/Route+de+Renens+24,+1008+Prilly,+Switzerland+)                          | :airplane: Photogrametry software, UAV                                              |
| [Sensefly](https://www.sensefly.com/home.html)    | **L** (H) [:round_pushpin: Cheseaux-Lausanne](https://www.google.com/maps/search/Route+de+Genève+38,+1033+Cheseaux-Lausanne,+Switzerland+)    | :airplane: ""ebee"" UAV manufacturer, ""eMotion"" flight software                       |
| [Vertigis](https://www.vertigis.com/)             | **M** (B) [:round_pushpin: Bern](https://www.google.com/maps/search/Kirchbergstrasse+107,+CH-3400+Burgdorf,+Switzerland+)                     | :globe_with_meridians: GIS: All-purpose                                             |
| [Wegaw](https://wegaw.com/)                       | **S** [:round_pushpin: Lausanne](https://www.google.com/maps/search/18+Route+De+Cojonnex,+Lausanne,+Switzerland+)                             | :earth_americas: Renewable Energy Assets Monitoring                                 | 

 ## :taiwan: Taiwan 
| Company (2)                            | Size & City                                                                                                                                        | Focus                                                         |
|:---------------------------------------|:---------------------------------------------------------------------------------------------------------------------------------------------------|:--------------------------------------------------------------|
| [Getchee](http://www.getchee.com)      | **S** [:round_pushpin: Taipei](https://www.google.com/maps/search/7F,+No.+5,+Lane+768,+Section+4,+Bade+Rd.,+Nangang+District,+Taipei+115,+Taiwan+) | :world_map: Spatial buiseness data visualization platform     |
| [Supergeo](http://www.supergeotek.com) | **M** [:round_pushpin: Taipei](https://www.google.com/maps/search/5F.,+No.71,+Zhouzi+Street,+Neihu+District,+Taipei+City+114,+Taipei,+Taiwan+)     | :globe_with_meridians: GIS / Spatial data collection software | 

 ## :tanzania: Tanzania 
| Company (1)                                          | Size & City                                                                                                                 | Focus                                                        |
|:-----------------------------------------------------|:----------------------------------------------------------------------------------------------------------------------------|:-------------------------------------------------------------|
| [Techno-Environment ](https://technoenvironment.com) | **S** [:round_pushpin: Dar Es Salaam](https://www.google.com/maps/search/Tazara+Building,+Temeke,+Dar+Es+Salaam,+Tanzania+) | :globe_with_meridians: Environment resources management, GIS | 

 ## :thailand: Thailand 
| Company (2)                                                    | Size & City                                                                                                                             | Focus                                       |
|:---------------------------------------------------------------|:----------------------------------------------------------------------------------------------------------------------------------------|:--------------------------------------------|
| [ESRI](http://www.esrith.com)                                  | **M** (B) [:round_pushpin: Bangkok](https://www.google.com/maps/search/Nanglinchee+Road+12,+Chongnonsee,+Yannawa,+Bangkok+10120+)       | :globe_with_meridians: ArcGIS software, GIS |
| [GIS Co., Ltd.](https://www.giscompany.co.th/en/home-english/) | **M** [:round_pushpin: Bangkok](https://www.google.com/maps/search/202+CDG+House,+Nanglinchi+Rd.,+Chongnonsee,+Yannawa,+Bangkok+10120+) | :globe_with_meridians: GIS: All-purpose     | 

 ## :tr: Turkey 
| Company (1)                              | Size & City                                                                                                            | Focus                                      |
|:-----------------------------------------|:-----------------------------------------------------------------------------------------------------------------------|:-------------------------------------------|
| [Bits 'n Bricks](http://bitsnbricks.com) | **S** [:round_pushpin: Istanbul](https://www.google.com/maps/search/Safa+Sokak+No.6,+Moda,+Kadikoy,+Istanbul,+Turkey+) | :globe_with_meridians: GIS: Urban insights | 

 ## :united_arab_emirates: UAE 
| Company (2)                                                 | Size & City                                                                                                                              | Focus                                  |
|:------------------------------------------------------------|:-----------------------------------------------------------------------------------------------------------------------------------------|:---------------------------------------|
| [4 Earth Intelligence](https://www.4earthintelligence.com/) | **S** (B) [:round_pushpin: Abu Dhabi](https://www.google.com/maps/search/The+Offices+World+Trade+Center,+Hamdan+Street,+Abu+Dhabi,+UAE+) | :earth_americas: EO: All-purpose       |
| [Pix4D](https://pix4d.com)                                  | **S** (B) [:round_pushpin: Mohammed Bin Zayed City](https://www.google.com/maps/search/Injazat+Building,+Mohammed+Bin+Zayed+City,+UAE+)  | :airplane: Photogrametry software, UAV | 

 ## :uk: UK 
| Company (79)                                                               | Size & City                                                                                                                                                                                                                   | Focus                                                                                         |
|:---------------------------------------------------------------------------|:------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|:----------------------------------------------------------------------------------------------|
| [2Excel Geospatial](http://www.2excelgeo.com)                              | **S** [:round_pushpin: Wellington](https://www.google.com/maps/search/The+Tiger+House,+Sywell+Aerodrome,+Wellingborough+Rd,+Sywell,+Northampton,+UK+)                                                                         | :earth_americas: Forestry/Environment monitoring, Aerial surveying                            |
| [3DEO](https://www.3deo.com/)                                              | **S** [:round_pushpin: Belfast](https://www.google.com/maps/search/7+Donegall+Square+West,+Belfast,+UK+)                                                                                                                      | :earth_americas: Business insights (Ports, Defence, Smart City)                               |
| [4 Earth Intelligence](https://www.4earthintelligence.com/)                | **M** [:round_pushpin: Bristol](https://www.google.com/maps/search/Kings+Court,+Little+King+St,+Bristol,+UK+)                                                                                                                 | :earth_americas: EO: All-purpose                                                              |
| [Advanced Infrastructure](https://www.advanced-infrastructure.co.uk/)      | **S** [:round_pushpin: Cambridge](https://www.google.com/maps/search/21+King+Street,+Cambridge,+UK+)                                                                                                                          | :globe_with_meridians: Energy infrastructure mapping                                          |
| [Air and Space Investigations](https://raymond-purdy-rqws.squarespace.com) | **S** [:round_pushpin: Stroud](https://www.google.com/maps/search/Highfield+Way,+Chalford+Hill,+Stroud,+UK+)                                                                                                                  | :earth_americas: Property monitoring, waste crime, evidence gathering                         |
| [Alba Orbital](https://www.albaorbital.com/)                               | **M** [:round_pushpin: Glasgow](https://www.google.com/maps/search/71+Oxford+Street,+Glasgow,+Scotland,+UK+)                                                                                                                  | :artificial_satellite: Satellites for High Resolution Night-time Imagery                      |
| [Alcis](https://www.alcis.org/)                                            | **S** [:round_pushpin: Guildford](https://www.google.com/maps/search/40+Occam+Road,+Guildford,+UK+)                                                                                                                           | :globe_with_meridians: GIS for international development                                      |
| [Apem](https://www.apemltd.com/)                                           | **L** [:round_pushpin: Stockport](https://www.google.com/maps/search/Riverview,+Heatons+South,+Stockport,+United+Kingdom+)                                                                                                    | :earth_americas: Environmental & geospatial consultancy                                       |
| [Argans](https://argans.co.uk)                                             | **S** [:round_pushpin: Plymouth](https://www.google.com/maps/search/1+Davy+Road,+Plymouth+Science+Park,+Plymouth,+UK+)                                                                                                        | :earth_americas: EO: marine, atmospheric                                                      |
| [Aspia Space](https://aspiaspace.com/)                                     | **S** [:round_pushpin: Penryn](https://www.google.com/maps/search/Tremough+Campus,+Penryn,+Cornwall,+UK+)                                                                                                                     | :earth_americas: Cloud free EO data                                                           |
| [Assimila](http://www.assimila.eu)                                         | **S** [:round_pushpin: Reading](https://www.google.com/maps/search/Reading+Enterprise+Centre,+Earley+Gate+University+of+Reading,+Whiteknights+Rd,+Reading+RG6+6BU,+UK+)                                                       | :earth_americas: EO: environmental monitoring, modelling and prediction                       |
| [Bird.i](https://www.hibirdi.com)                                          | **S** [:round_pushpin: Glasgow](https://www.google.com/maps/search/93+Hope+Street,+Glasgow,+UK+)                                                                                                                              | :earth_americas: EO: Construction and commodity monitoring                                    |
| [CGG](https://www.cgg.com/en)                                              | **M** [:round_pushpin: Reigate](https://www.google.com/maps/search/1+St.+Anne’s+Boulevard,+Redhill,+UK+)                                                                                                                      | :earth_americas: Focus on geophysical insights: InSAR, geology remote sensing, hazards        |
| [CGG](https://www.cgg.com/en)                                              | **M** [:round_pushpin: Houston](https://www.google.com/maps/search/10300+Town+Park+Drive,+Houston,+TX+77072,+USA+)                                                                                                            | :globe_with_meridians: Focus on geological, geophysical insights: GIS                         |
| [Cadcorp](https://www.cadcorp.com)                                         | **M** [:round_pushpin: Stevenage](https://www.google.com/maps/search/Sterling+Court,+Norton+road,+Stevenage,+UK+)                                                                                                             | :globe_with_meridians: ""Cadcorp Spatial Information System"", GIS development                  |
| [Carbomap](https://www.carbomap.xyz)                                       | **S** [:round_pushpin: Edinburgh](https://www.google.com/maps/search/Centre+for+Carbon+Innovation,,+High+School+Yards,+Edinburgh,+UK+)                                                                                        | :earth_americas: EO: Forest                                                                   |
| [Catapult Satellite Applications](https://sa.catapult.org.uk)              | **L** [:round_pushpin: Didcot](https://www.google.com/maps/search/Fermi+Avenue,+Harwell+Campus,+Didcot,+Oxfordshire,+UK+)                                                                                                     | :earth_americas: UK Space & EO innovation hub                                                 |
| [Cervest](https://cervest.earth/)                                          | **L** [:round_pushpin: London](https://www.google.com/maps/search/222+Kensal+Road,+London,+GB+)                                                                                                                               | :globe_with_meridians: Climate Intelligence                                                   |
| [Climate X](https://www.climate-x.com/)                                    | **M** [:round_pushpin: London](https://www.google.com/maps/search/26-30+Artillery+Lane,+London,+UK+)                                                                                                                          | :earth_americas: Weather event analysis for climate change resilience                         |
| [Deep Planet](https://www.deepplanet.ai/)                                  | **M** [:round_pushpin: Oxford](https://www.google.com/maps/search/Hythe+Bridge+Street,+Oxford,+UK+)                                                                                                                           | :seedling: Agtech Platform focused on winemakers                                              |
| [ESRI](https://www.esriuk.com/en-gb/home)                                  | **L** (B) [:round_pushpin: Aylesbury](https://www.google.com/maps/search/65+Walton+Street,+Aylesbury,+UK+)                                                                                                                    | :globe_with_meridians: ArcGIS software, GIS                                                   |
| [Earthblox](https://www.earthblox.io/)                                     | **M** [:round_pushpin: Edinburgh](https://www.google.com/maps/search/6+Redheughs+Rigg,+Edinburgh,+UK+)                                                                                                                        | :earth_americas: No-code access to Google Earth Engine                                        |
| [Earthsense](https://www.earthsense.co.uk/)                                | **M** [:round_pushpin: Leicester](https://www.google.com/maps/search/92+Corporation+Road,+Leicester,+Leicestershire+LE45SP,+GB+)                                                                                              | :globe_with_meridians: Air quality monitoring & modelling                                     |
| [Ecometria](https://ecometrica.com)                                        | **M** [:round_pushpin: Edinburgh](https://www.google.com/maps/search/30+Queensferry+Rd,+Edinburgh,+UK+) <br /> **S** [:round_pushpin: London](https://www.google.com/maps/search/7+Cavendish+Square,+Marylebone,+London,+UK+) | :earth_americas: Platform for geodata analysis, mapping, reporting                            |
| [Emu Analytics](https://www.emu-analytics.com/)                            | **S** [:round_pushpin: London](https://www.google.com/maps/search/21+Brownlow+Mews,+London,+GB+)                                                                                                                              | :globe_with_meridians: Location analytics software for digital twins & smart cities           |
| [Environment Systems](http://www.envsys.co.uk)                             | **M** [:round_pushpin: Ceredigion](https://www.google.com/maps/search/Cefn+Llan+Science+Park,+Aberystwyth,+Ceredigion,+UK+)                                                                                                   | :earth_americas: Environmental consulting, agriculture insights, remote sensing               |
| [Envitia](https://www.envitia.com/)                                        | **M** [:round_pushpin: Horsham](https://www.google.com/maps/search/North+Heath+Lane,+Horsham,+UK+)                                                                                                                            | :earth_americas: Geospatial intelligence solutions                                            |
| [Exodus Orbitals](https://exodusorbitals.com/)                             | **S** [:round_pushpin: Southhampton](https://www.google.com/maps/search/8+Blighmont+Crescent,+Southampton,+UK+)                                                                                                               | :earth_americas: Satellite as a service application hosting platform, EO use cases            |
| [Fathom](https://www.fathom.global/)                                       | **M** [:round_pushpin: Bristol](https://www.google.com/maps/search/17-18+Berkeley+Square,+Clifton,+Bristol,+UK+)                                                                                                              | :globe_with_meridians: Water Risk Intelligence                                                |
| [Fatmap](https://fatmap.com)                                               | **M** [:round_pushpin: Bristol](https://www.google.com/maps/search/8+Brunswick+Square,+Bristol,+BS2+8PE,+UK+)                                                                                                                 | :world_map: Outdoor trip planning 3D map platform                                             |
| [GIS-E](https://ecere.com/)                                                | **S** [:round_pushpin: London](https://www.google.com/maps/search/20+Manchester+Square,+London,+UK+)                                                                                                                          | :world_map: Mapmaking nonprofit                                                               |
| [GMV](https://www.gmv.com/en/)                                             | **M** (B) [:round_pushpin: Didcot](https://www.google.com/maps/search/HQ+Building,+Bldg+77.+1st+floor,+Thomson+Avenue.+Harwell+Science+and+Innovation+Campus,+Didcot,+UK+)                                                    | :earth_americas: EO: All-purpose, Deep Learning/Machine Learning/Robotics/GNSS                |
| [GSI - Global Surface Intelligence](https://www.surfaceintelligence.com)   | **M** [:round_pushpin: Edinburgh](https://www.google.com/maps/search/10+York+Place,+Edinburgh,+UK+)                                                                                                                           | :earth_americas: Natural ressource management platform for forestry, agriculture              |
| [GVL Geomatic Ventures](https://www.geomaticventures.com)                  | **S** [:round_pushpin: Nottingham](https://www.google.com/maps/search/Triumph+Road,+Nottingham,+East+Midlands,+UK+)                                                                                                           | :earth_americas: SAR/InSAR ground monitoring                                                  |
| [Genscape](https://www.genscape.com)                                       | **S** (B) [:round_pushpin: London](https://www.google.com/maps/search/Warnford+Court,+29+Throgmorton+Street,+London,+UK+)                                                                                                     | :earth_americas: EO: Oil storage and infrastructure monitoring                                |
| [Geo-4D](https://www.geo-4d.com/)                                          | **S** [:round_pushpin: Faringdon](https://www.google.com/maps/search/Park+Road,+Faringdon,+Oxfordshire,+UK+)                                                                                                                  | :globe_with_meridians: Geoscience consultancy and survey specialist, UAV                      |
| [Geoblink](https://www.geoblink.com)                                       | **L** [:round_pushpin: London](https://www.google.com/maps/search/China+Works,+Black+Prince+Road,+Vauxhall,+London,+UK+)                                                                                                      | :globe_with_meridians: Location intelligence for Retail & Real estate                         |
| [Geocento](http://geocento.com)                                            | **S** (H) [:round_pushpin: Oxfordshire](https://www.google.com/maps/search/Electron+Building,+Harwell,+Didcot,+Oxfordshire,+UK+)                                                                                              | :earth_americas: EO imagery and analytics platform                                            |
| [Geocollect](https://www.geollect.com/)                                    | **M** [:round_pushpin: Bristol](https://www.google.com/maps/search/Woodlands,+Bradley+Stoke,+Bristol,+UK+)                                                                                                                    | :globe_with_meridians: Platform for geospatial intelligence & asset tracking                  |
| [Geolytix](https://geolytix.com/)                                          | **M** [:round_pushpin: London](https://www.google.com/maps/search/40+Bowling+Green+Lane,+Clerkenwell,+London,+UK+)                                                                                                            | :globe_with_meridians: Location planning consultancy                                          |
| [Geospatial Insight](https://www.geospatial-insight.com)                   | **S** [:round_pushpin: Birmingham](https://www.google.com/maps/search/Coleshill+House,+1+Station+Road,+Coleshill,+Birmingham,+UK+)                                                                                            | :earth_americas: EO: finance, insurance, corporate insights                                   |
| [Geovation](https://geovation.uk/)                                         | **S** [:round_pushpin: London](https://www.google.com/maps/search/Sutton+Yard,+65+Goswell+Road,+London,+UK+)                                                                                                                  | :globe_with_meridians: Geospatial startup accelerator, spinoff Ordonance survey               |
| [Getmapping](https://www.getmapping.com)                                   | **M** [:round_pushpin: London](https://www.google.com/maps/search/27+Rye+Cl,+Fleet,+UK+)                                                                                                                                      | :airplane: Aerial image acquisition                                                           |
| [Global Canopy](https://globalcanopy.org/)                                 | **M** [:round_pushpin: Oxford](https://www.google.com/maps/search/3+Frewin+Chambers,+Frewin+Court,+Oxford,+UK+)                                                                                                               | :earth_americas: Forest monitoring                                                            |
| [Globaltrust](https://globaltrustgrp.com/)                                 | **S** [:round_pushpin: Winchester](https://www.google.com/maps/search/37/39+Southgate+Street,+Winchester,+UK+)                                                                                                                | :earth_americas: EO: All-purpose                                                              |
| [Hummingbirdtechnology](https://hummingbirdtech.com)                       | **S** [:round_pushpin: London](https://www.google.com/maps/search/34-35+Hatton+Garden,+London,+UK+)                                                                                                                           | :seedling: Crop insights platform                                                             |
| [Intellync](https://intellync.com/)                                        | **M** [:round_pushpin: Peterborough](https://www.google.com/maps/search/Lynch+Wood,+United+Kingdom+)                                                                                                                          | :seedling: Agricultural data and tech platform                                                |
| [Land Hawk](https://www.landhawk.uk/)                                      | **S** [:round_pushpin: Swindon](https://www.google.com/maps/search/3+Newbridge+Square,+New+Bridge+Close,+Swindon,+UK+)                                                                                                        | :globe_with_meridians: Intelligent land search and assessment platform for developers         |
| [Landmark](https://www.landmark.co.uk/)                                    | **L** [:round_pushpin: Reading](https://www.google.com/maps/search/Imperial+Way,+Reading,+RG2+0,+UK+)                                                                                                                         | :globe_with_meridians: Property and land data and services                                    |
| [Lutra consulting](https://www.lutraconsulting.co.uk)                      | **S** [:round_pushpin: Burgess Hill](https://www.google.com/maps/search/23+Chestnut+Close+Burgess+Hill+West+Sussex,+UK+)                                                                                                      | :globe_with_meridians: GIS services/spatial software development consultancy                  |
| [Mangomap](https://mangomap.com/)                                          | **S** [:round_pushpin: Bristol](https://www.google.com/maps/search/Hawkins+Cres,+Bradley+Stoke,+Bristol+BS32+8EH,+UK+)                                                                                                        | :world_map: Self-service mapping platform                                                     |
| [Maptek](https://www.maptek.com/)                                          | **S** (B) [:round_pushpin: Edinburgh](https://www.google.com/maps/search/3+Darnaway+Street,+New+Town,+Edinburgh,+EH3+6DW,+Scotland,+UK+)                                                                                      | :globe_with_meridians: Mining decision-making support solutions                               |
| [McKenzie Intelligence](http://www.mckenzieintelligence.co.uk)             | **S** [:round_pushpin: London](https://www.google.com/maps/search/22+Bevis+Marks,+London+EC3A+7JB,+UK+)                                                                                                                       | :earth_americas: EO: Agriculture, buiseness, insurance insights                               |
| [Onespatial](https://1spatial.com)                                         | **M** [:round_pushpin: Cambridge](https://www.google.com/maps/search/Tennyson+House,+Cambridge+Business+Park,+Cambridge,+UK+)                                                                                                 | :globe_with_meridians: Spatial data managment                                                 |
| [Origin Digital](https://digital.originenterprises.com/)                   | **M** [:round_pushpin: Didcot](https://www.google.com/maps/search/HQ+Building+329+F+Wing,+Didcot,+Oxfordshire,+UK+)                                                                                                           | :seedling: Agronomy decision-support software                                                 |
| [Pixalytics](https://www.pixalytics.com)                                   | **S** [:round_pushpin: Plymouth](https://www.google.com/maps/search/Plymouth+Science+Park,+1+Davy+Rd,+Plymouth,+UK+)                                                                                                          | :earth_americas: EO: All-purpose                                                              |
| [Pixpro](https://www.pix-pro.com/)                                         | **S** [:round_pushpin: Norfolk](https://www.google.com/maps/search/28+Seamere+Road,,+Hingham,+Norfolk,+UK+)                                                                                                                   | :earth_americas: Photogrametry software, UAV                                                  |
| [Polar View](http://www.polarview.org)                                     | **S** [:round_pushpin: Didcot](https://www.google.com/maps/search/Fermi+Avenue,+Harwell+Oxford,+Didcot,+Oxfordshire,+UK+)                                                                                                     | :earth_americas: EO: Polar ice monitoring                                                     |
| [Previscio](https://previsico.com)                                         | **S** [:round_pushpin: Loughborough](https://www.google.com/maps/search/Holywell+Building,+Holywell+Way,+Loughborough,+UK+)                                                                                                   | :globe_with_meridians: Flood prediction and analytics                                         |
| [Rezatec](https://www.rezatec.com)                                         | **M** [:round_pushpin: Didcot](https://www.google.com/maps/search/Electron+Building,+Fermi+Ave,+Didcot,+UK+)                                                                                                                  | :earth_americas: EO+GIS: All-purpose                                                          |
| [Risilience](https://risilience.com/)                                      | **M** [:round_pushpin: Cambridge](https://www.google.com/maps/search/33-35+Victoria+Road,+Cambridge,+UK+)                                                                                                                     | :globe_with_meridians: Enterprise climate risk platform                                       |
| [Satellite Vu](https://www.satellitevu.com/)                               | **S** [:round_pushpin: London](https://www.google.com/maps/search/153+Park+Close,+Walton+on+Thames,+Surrey,+UK+)                                                                                                              | :artificial_satellite: Building high resolution thermal imagery satellite constellation       |
| [Satsense](https://satsense.com/)                                          | **S** [:round_pushpin: Leeds](https://www.google.com/maps/search/Discovery+Way,+Leeds,+UK+)                                                                                                                                   | :earth_americas: InSAR ground stability data, geotechnical consultancy                        |
| [Sensat](https://www.sensat.co.uk)                                         | **M** [:round_pushpin: London](https://www.google.com/maps/search/59+Rivington+St,+London,+UK+)                                                                                                                               | :airplane: UAV survey, insights platform                                                      |
| [Sky futures](http://www.sky-futures.com)                                  | **M** [:round_pushpin: Hayes](https://www.google.com/maps/search/Blyth+Road,+Hayes,+Middlesex,+UK+)                                                                                                                           | :airplane: UAV inspections                                                                    |
| [Space Intelligence Ltd](https://www.space-intelligence.com)               | **S** [:round_pushpin: Edinburgh](https://www.google.com/maps/search/GeoVation+suite,+Meadowbank+House,+153+London+Road,+Edinburgh,+UK+)                                                                                      | :earth_americas: Deforestation asessment, general EO consulting                               |
| [Spatial Days](https://spatialdays.com/)                                   | **S** [:round_pushpin: Aldermaston](https://www.google.com/maps/search/5+Fortuna+Court,+Aldermaston,+UK+)                                                                                                                     | :globe_with_meridians: GIS mapping, consulting, software development                          |
| [Specto Natura](http://www.specto-natura.co.uk)                            | **S** [:round_pushpin: Cambridge](https://www.google.com/maps/search/9+College+Road,+Impington,+Cambridge,+UK+)                                                                                                               | :earth_americas: EO project management services, consulting                                   |
| [Spire](https://spire.com/)                                                | **L** (B) [:round_pushpin: Glasgow](https://www.google.com/maps/search/45+Finnieston+Street,+Anderston,+Glasgow,+Scotland,+UK+)                                                                                               | :artificial_satellite: Remote Frequency satellite constellation                               |
| [Terrabotics](http://www.terrabotics.co.uk)                                | **S** [:round_pushpin: London](https://www.google.com/maps/search/71-75+Shelton+Street+Covent+Garden,+London,+UK+)                                                                                                            | :earth_americas: 3D Terrain mapping, Change Detection                                         |
| [Think Where](http://www.thinkwhere.com)                                   | **M** [:round_pushpin: Stirling](https://www.google.com/maps/search/Glendevon+House,+Castle+Business+Park,+Stirling,+UK+)                                                                                                     | :globe_with_meridians: GIS consultancy                                                        |
| [Topolytics](http://topolytics.com)                                        | **S** [:round_pushpin: Edinburgh](https://www.google.com/maps/search/38+Castle+Terrace,+Edinburgh,+UK+)                                                                                                                       | :earth_americas: EO: Mapping of industrial & commercial waste, analytics platform             |
| [Traveltime](https://traveltime.com/)                                      | **M** [:round_pushpin: London](https://www.google.com/maps/search/16+Broadway+West+Ealing,+London,+UK+)                                                                                                                       | :globe_with_meridians: API for travel time calculation                                        |
| [Vercator](https://vercator.com/)                                          | **S** [:round_pushpin: London](https://www.google.com/maps/search/190+Clarence+Gate+Gardens,+London,+UK+)                                                                                                                     | :earth_americas: Point cloud processing                                                       |
| [Verna](https://verna.earth/)                                              | **S** [:round_pushpin: Hertford](https://www.google.com/maps/search/Borehamwood,+Hertford,+United+Kingdom+)                                                                                                                   | :earth_americas: Land-use planning for tree planting                                          |
| [Vizzuality](http://www.vizzuality.com)                                    | **S** [:round_pushpin: Cambridge](https://www.google.com/maps/search/Gwydir+St,+Cambridge,+CB1+2LJ,+UK+)                                                                                                                      | :world_map: Spatial data vizualization, webmapping                                            |
| [earth-i](http://earthi.space)                                             | **M** [:round_pushpin: Guildford](https://www.google.com/maps/search/10+Nugent+Road,+Surrey+Research+Park,+Guildford,+Surrey,+UK+)                                                                                            | :artificial_satellite: Future sat constellation (optical, VHR, launch 2019), EO data reseller |
| [emapsite](https://www.emapsite.com/)                                      | **M** [:round_pushpin: Farnborough](https://www.google.com/maps/search/Building+A2,+Cody+Technology+Park,+Old+Ively+Road,+Farnborough,+UK+)                                                                                   | :globe_with_meridians: Spatial data & insights, mapping apps                                  |
| [spottitt](https://www.spottitt.com)                                       | **S** [:round_pushpin: Didcot](https://www.google.com/maps/search/Electron+Building,+Fermi+Ave,+Didcot,+UK+)                                                                                                                  | :earth_americas: EO based energy industry services                                            | 

 ## :us: USA 
| Company (188)                                                                                        | Size & City| Focus                                                                                             |
|:-----------------------------------------------------------------------------------------------------||:--------------------------------------------------------------------------------------------------|
| [AI Clearing](https://www.aiclearing.com/#intro-one)                                                 | **S** [:round_pushpin: Austin](https://www.google.com/maps/search/7600+Chevy+Chase+Dr,+Austin,+TX+78752,+USA+)                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               | :globe_with_meridians: Construction progress tracking using aerial imagery, AI and GIS            |
| [Aerial Services Inc.](https://aerialservicesinc.com)                                                | **M** [:round_pushpin: Cedar Falls](https://www.google.com/maps/search/6315+Chancellor+Dr,+Cedar+Falls| :airplane: Aerial image & LiDAR acquistion, analysis                                              |
| [AgEagle](https://ageagle.com/)                                                                      | **M** [:round_pushpin: Wichita](https://www.google.com/maps/search/8863+E+34th+St+N,+Wichita,+Kansas| :globe_with_meridians: UAV, sensors, software                                                     |
| [Agcode](http://www.agcode.com)                                                                      | **M** [:round_pushpin: Glenwood](https://www.google.com/maps/search/100+17th+Ave,+Glenwood| :seedling: Farm managment software                                                                |
| [Agerpoint](https://www.agerpoint.com)                                                               | **M** [:round_pushpin: New Symyrna Beach](https://www.google.com/maps/search/1674+Tionia+Rd,+New+Smyrna+Beach| :seedling: Crop insights platform                                                                 |
| [Agrian](https://home.agrian.com)                                                                    | **M** [:round_pushpin: Clovis](https://www.google.com/maps/search/352+W+Spruce+Ave,+Clovis| :seedling: Farm managment software                                                                |
| [Agrograph](https://agrograph.com/)                                                                  | **S** [:round_pushpin: Madison](https://www.google.com/maps/search/Madison,+Wisconsin| :seedling: Field level agricultural forecasts                                                     |
| [Aidash](https://www.aidash.com/)                                                                    | **S** (H) [:round_pushpin: Santa Clara](https://www.google.com/maps/search/2445+Augustine+Dr.+Suite+150,+Santa+Clara| :earth_americas: EO for utility vegetation management                                             |
| [Albedo](https://albedo.com/)                                                                        | **S** [:round_pushpin: Austin](https://www.google.com/maps/search/Austin,+Texas| :artificial_satellite: Building high resolution thermal imagery constellation                     |
| [Allsource Analysis](https://allsourceanalysis.com)                                                  | **S** [:round_pushpin: Longmont](https://www.google.com/maps/search/350+Terry+St,+Longmont| :globe_with_meridians: Defense and commercial intelligence reports                                |
| [Anez Consulting](https://anezconsulting.com/)                                                       | **S** [:round_pushpin: Little Falls](https://www.google.com/maps/search/502+–+13th+Ave+NW,+Little+Falls| :seedling: Crop insights platform                                                                 |
| [Apollo Mapping](https://apollomapping.com)                                                          | **S** [:round_pushpin: Boulder](https://www.google.com/maps/search/932+Pearl+Street,+Boulder,+Colorado| :earth_americas: EO data reseller, web mapping services                                           |
| [AppGeo](https://www.appgeo.com)                                                                     | **M** [:round_pushpin: Boston](https://www.google.com/maps/search/24+School+Street,+Suite+500,+Boston| :globe_with_meridians: Geospatial consultancy, webmapping platform for local government           |
| [Applied Imagery](http://appliedimagery.com)                                                         | **S** [:round_pushpin: Chevy Chase](https://www.google.com/maps/search/5425+Wisconsin+Avenue,+Chevy+Chase| :earth_americas: ""Quick Terrain Modeller"" LiDAR exploitation software                             |
| [Arable](https://www.arable.com/)                                                                    | **M** [:round_pushpin: San Francisco](https://www.google.com/maps/search/51+Federal+St,+San+Francisco| :seedling: Digital Agriculture                                                                    |
| [Arturo](https://arturo.ai/)                                                                         | **M** [:round_pushpin: Chicago](https://www.google.com/maps/search/2045+W+Grand+Ave+Ste+B,+Chicago| :earth_americas: Property Insights and Predictive Analytics via Aerial Imagery for Insurance      |
| [Ask Iggy Inc.](https://www.askiggy.com/)                                                            | **S** [:round_pushpin: San Francisco](https://www.google.com/maps/search/500+3rd+St,+San+Francisco,+California| :globe_with_meridians: Location enrichment API                                                    |
| [Aspectum](https://eos.com)                                                                          | **M** [:round_pushpin: Kawasaki](https://www.google.com/maps/search/1906+El+Camino+Real,+Menlo+Park| :earth_americas: Online GIS mapping platform                                                      |
| [AssetAssurance Monitoring](https://sites.google.com/aamonitoring.net/assetassurancemonitoring/home) | **S** [:round_pushpin: Fishers](https://www.google.com/maps/search/12680+Endurance+Drive,+Indiana| :globe_with_meridians: Earth Monitoring, Data Intergration, Tailings Awareness and Areal Tracking |
| [Astraea](https://astraea.earth)                                                                     | **M** [:round_pushpin: Charlottesville](https://www.google.com/maps/search/313+2nd+St+SE,+Charlottesville| :earth_americas: EO analytics plattform, consulting services                                      |
| [Atlas AI](https://www.atlasai.co)                                                                   | **S** [:round_pushpin: Palo Alto](https://www.google.com/maps/search/137+Forest+Ave,+Palo+Alto,+California+94301,+USA+)                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      | :earth_americas: Platform for sustainable development, EO based socioeconomic indicators          |
| [Axim Geospatial](https://www.aximgeo.com/)                                                          | **L** (H) [:round_pushpin: Sun Prairie](https://www.google.com/maps/search/100+QBE+Way,+Suite+1225,+Sun+Prairie,+WI+53590,+USA+) <br /> **M** (B) [:round_pushpin: Saint Louis](https://www.google.com/maps/search/727+N.+1st+Street,+Suite+410,+Saint+Louis| :globe_with_meridians: Aerial & satellite mapping, lidar acquisition & mapping, survey            |
| [Axis Maps](http://www.axismaps.com)                                                                 | **S** [:round_pushpin: Hewitt](https://www.google.com/maps/search/Hewitt| :world_map: Spatial data vizualisation, webmaps                                                   |
| [Ayres Associates](https://www.ayresassociates.com)                                                  | **L** [:round_pushpin: Eau Claire](https://www.google.com/maps/search/3433+Oakwood+Hills+Parkway,+Eau+Claire| :airplane: Aerial image & LiDAR acquistion, terrestrial LiDAR, analysis                           |
| [Azavea](https://www.azavea.com)                                                                     | **M** [:round_pushpin: Philadelphia](https://www.google.com/maps/search/990+Spring+Garden,+Philadelphia| :earth_americas: Consultancy / Open-source infrastructure applications, e.g. GeoTrellis           |
| [Betterview ](https://www.betterview.net)                                                            | **M** [:round_pushpin: San Francisco](https://www.google.com/maps/search/643+7th+St,+San+Francisco| :airplane: UAV property inspections                                                               |
| [BlackSky](https://www.blacksky.com)                                                                 | **M** [:round_pushpin: Herndon](https://www.google.com/maps/search/2201+Cooperative+Way,+Herndon| :artificial_satellite: 60 sat constellation (optical, high temporal res., launch 2017)            |
| [Blue Marble Geographics](https://www.bluemarblegeo.com)                                             | **M** [:round_pushpin: Hallowell](https://www.google.com/maps/search/22+Carriage+Ln,+Hallowell,+Maine| :globe_with_meridians: Global Mapper, GIS software, professional services                         |
| [Blue Raster](https://www.blueraster.com)                                                            | **M** [:round_pushpin: Arlington](https://www.google.com/maps/search/2200+Wilson+Blvd.,+Arlington| :world_map: Web mapping application infrastructure                                                |
| [Bountiful](https://bountiful.ag/)                                                                   | **S** [:round_pushpin: San Francisco](https://www.google.com/maps/search/461+2nd+Street+#207,+San+Francisco| :seedling: Yield forecasts grapes/almonds                                                         |
| [BoxMica](https://boxmica.com/)                                                                      | **S** [:round_pushpin: Melbourne](https://www.google.com/maps/search/2412+Irwin+Street,+Melbourne| :earth_americas: SAR Satellite Intelligence insights                                              |
| [Cadasta Foundations](https://cadasta.org/)                                                          | **S** [:round_pushpin: Washington](https://www.google.com/maps/search/1775+I+St+NW,+Washington| :globe_with_meridians: GIS for land and resource rights information                               |
| [Caliper](https://www.caliper.com/)                                                                  | **M** [:round_pushpin: Newton](https://www.google.com/maps/search/1172+Beacon+St+Ste+300,+Newton| :globe_with_meridians: GIS development                                                            |
| [Caltopo](https://caltopo.com/)                                                                      | **S** [:round_pushpin: Truckee](https://www.google.com/maps/search/Truckee,+California| :globe_with_meridians: Mapping software development for web/mobile                                |
| [Cape Analytics](https://capeanalytics.com)                                                          | **M** [:round_pushpin: Palo Alto](https://www.google.com/maps/search/855+El+Camino+Real+Suite+405+Palo+Alto| :earth_americas: Property risk insights for insurance industry                                    |
| [Capella Space](https://www.capellaspace.com/)                                                       | **L** [:round_pushpin: San Francisco](https://www.google.com/maps/search/438+Shotwell+St,+San+Francisco| :artificial_satellite: SAR satellite constellation                                                |
| [Carbon Mapper](https://carbonmapper.org/)                                                           | **M** [:round_pushpin: Pasadena](https://www.google.com/maps/search/12+S+Raymond+Ave,+Pasadena| :earth_americas: Carbon emission monitoring                                                       |
| [Carbon Plan](https://carbonplan.org/)                                                               | **S** [:round_pushpin: San Francisco](https://www.google.com/maps/search/2443+Fillmore+st.,+San+Francisco| :globe_with_meridians: Carbon offset monitoring                                                   |
| [Carto](https://carto.com)                                                                           | **M** (H) [:round_pushpin: New York City](https://www.google.com/maps/search/201+Moore+St,+Brooklyn| :globe_with_meridians: Location data analysis platform                                            |
| [Ceres Imaging](http://www.ceresimaging.net)                                                         | **M** [:round_pushpin: Oakland](https://www.google.com/maps/search/428+13th+St,+Oakland| :seedling: UAV imagery provider for agriculture                                                   |
| [Chesapeake Conservancy](https://chesapeakeconservancy.org)                                          | **M** [:round_pushpin: Annapolis](https://www.google.com/maps/search/716+Giddings+Ave,+Annapolis| :globe_with_meridians: GIS&EO for conversation                                                    |
| [Chloris Geospatial](https://chloris.earth/)                                                         | **M** [:round_pushpin: Boston](https://www.google.com/maps/search/399+Boylston+St.,+Boston| :earth_americas: Global biomass measurements                                                      |
| [Civilgeo](https://www.civilgeo.com/)                                                                | **M** [:round_pushpin: Middleton](https://www.google.com/maps/search/8383+Greenway+Blvd,+Middleton| :globe_with_meridians: Water modelling                                                            |
| [Climate Corperation](https://www.climate.com)                                                       | **L** (B) [:round_pushpin: Seattle](https://www.google.com/maps/search/710+Second+Avenue,+Seattle,+WA+98104,+USA+) <br /> **L** (B) [:round_pushpin: St. Louis](https://www.google.com/maps/search/4+City+Place+Drive,+St.+Louis,+MO+63141,+USA+) <br /> **L** (H) [:round_pushpin: San Francisco](https://www.google.com/maps/search/201+Third+Street,+San+Francisco,+CA+94103,+USA+)                                                                                                                                                                                                                                                                                                                                                                                                                                       | :seedling: ""Field View"" crop insights platform                                                    |
| [Climate Engine](https://climateengine.com/)                                                         | **S** [:round_pushpin: Carson City](https://www.google.com/maps/search/Carson+City,+Nevada| :earth_americas: Enterprise Solution for Google Earth Engine                                      |
| [ClimateAI](https://climate.ai/)                                                                     | **M** [:round_pushpin: San Francisco](https://www.google.com/maps/search/353+Sacramento+St,+San+Francisco,+California| :earth_americas: Climate Insights                                                                 |
| [Climavision](https://www.climavision.com/)                                                          | **M** [:round_pushpin: Louisville](https://www.google.com/maps/search/552+E+Market+St,+Louisville| :earth_americas: Proprietary weather data and forecasting tools                                   |
| [Corteva](https://www.corteva.us/)                                                                   | **M** [:round_pushpin: San Francisco](https://www.google.com/maps/search/425+2nd+St+#301,+San+Francisco| :seedling: Farm managment, ""Acre Value"" and crop insights software                                |
| [Cosmiq works](http://www.cosmiqworks.org)                                                           | **S** [:round_pushpin: Arlington](https://www.google.com/maps/search/Arlington| :earth_americas: Geospatial capabilities research for US intelligence community                   |
| [Critigen](http://www.critigen.com)                                                                  | **L** [:round_pushpin: Denver](https://www.google.com/maps/search/7555+E.+Hampden+Avenue,+Suite+415,+Denver| :globe_with_meridians: GIS development for business insights                                      |
| [CrowdAI](https://crowdai.com)                                                                       | **S** [:round_pushpin: Mountain View](https://www.google.com/maps/search/Mountain+View| :earth_americas: EO: Mapping and change detection, focus on Deep Learning                         |
| [DTN](https://www.dtn.com/)                                                                          | **L** [:round_pushpin: Burnsville](https://www.google.com/maps/search/11400+Rupp+Drive,+Burnsville| :globe_with_meridians: GIS: All-purpose                                                           |
| [Descartes Labs](https://www.descarteslabs.com)                                                      | **M** [:round_pushpin: Santa Fe](https://www.google.com/maps/search/1613+Paseo+De+Peralta+Ste.+200,+Santa+Fe| :earth_americas: EO: Agriculture forecasts, commodity monitoring, Big Data & AI                   |
| [Developmentseed](https://developmentseed.org)                                                       | **S** (H) [:round_pushpin: Washington D.C.](https://www.google.com/maps/search/1226+9th+Street+NW,+Washington| :earth_americas: EO data and analysis infrastructure (open source)                                |
| [Drone Deploy](https://www.dronedeploy.com)                                                          | **M** [:round_pushpin: San Francisco](https://www.google.com/maps/search/1045+Bryant+St,+San+Francisco| :airplane: UAV image acquisition, insights                                                        |
| [DroneView Technologies](https://www.droneviewtech.com/)                                             | **S** [:round_pushpin: Bloomfield Township](https://www.google.com/maps/search/1750+S.+Telegraph+Road,+Bloomfield+Township,+MI+48302,+USA+)                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  | :airplane: Aerial Image Acquisition & Processing                                                  |
| [Duality](https://www.duality.ai/)                                                                   | **M** [:round_pushpin: San Mateo](https://www.google.com/maps/search/253+Baldwin+Ave,+San+Mateo,+California| :globe_with_meridians: Digital Twin Integration platform                                          |
| [ESRI](https://www.esri.com/en-us/home)                                                              | **L** (B) [:round_pushpin: Arlington](https://www.google.com/maps/search/1001+19th+St+N+#910,+Arlington,+VA+22209,+USA+) <br /> **L** (B) [:round_pushpin: Charlotte](https://www.google.com/maps/search/3325+Springbank+Ln+#200,+Charlotte,+NC+28226,+USA+) <br /> **L** (B) [:round_pushpin: Broomfield](https://www.google.com/maps/search/1+International+Ct,+Broomfield,+CO+80020,+USA+) <br /> **M** (B) [:round_pushpin: Chesterbrook](https://www.google.com/maps/search/1325+Morris+Drive+Suite+201,+Chesterbrook,+PA+19087-5521,+USA+) <br /> **M** (B) [:round_pushpin: St. Charles](https://www.google.com/maps/search/3060+Little+Hills+Expressway,+St.+Charles,+MO+63301-3751,+USA+) <br /> **L** (H) [:round_pushpin: Redlands](https://www.google.com/maps/search/380+New+York+St,+Redlands,+CA+92373,+USA+) | :globe_with_meridians: ArcGIS software, GIS                                                       |
| [Eagle View](https://www.eagleview.com)                                                              | **L** [:round_pushpin: Rochester](https://www.google.com/maps/search/25+Methodist+Hill+Dr,+Rochester,+NY+14623,+USA+) <br /> **L** [:round_pushpin: Bothell](https://www.google.com/maps/search/3700+Monte+Villa+Pkwy,+Ste+200,+Bothell| :earth_americas: UAV Roof/Solar/Utility damage/change assessment, image acquisition               |
| [EarthDaily](https://earthdailyagro.com/)                                                            | **M**  (B) [:round_pushpin: Plymouth](https://www.google.com/maps/search/3030+Harbor+Lane+N.,+Plymouth,+MN+55447-5141,+USA+)                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 | :earth_americas: EO: Agriculture, insurance, commodity insights and monitoring                    |
| [EarthX](https://earthx.com)                                                                         | **S** [:round_pushpin: San Francisco](https://www.google.com/maps/search/39+Mesa+Street+Suite+111,+San+Francisco| :world_map: Geospatial data platform                                                              |
| [Earthmover](https://earthmover.io/)                                                                 | **S** [:round_pushpin: New York City](https://www.google.com/maps/search/Amsterdam+Ave/W+123+St,+New+York| :globe_with_meridians: Cloud Data Stack for Science                                               |
| [Earthrise Media](https://earthrise.media/)                                                          | **S** [:round_pushpin: Oakland](https://www.google.com/maps/search/1901+Harrison+St.,+Oakland| :world_map: Environmental digital agency                                                          |
| [Earthshot Labs](https://www.earthshot.eco/)                                                         | **M** [:round_pushpin: Mill Valley](https://www.google.com/maps/search/522+Tamalpais+Drive,+Mill+Valley| :earth_americas: Carbon project monitoring                                                        |
| [Elastic](https://www.elastic.co/products/kibana)                                                    | **L** (H) [:round_pushpin: Mountain View](https://www.google.com/maps/search/800+West+El+Camino+Real,+Mountain+View,+California| :globe_with_meridians: General data analysis plattform with some geo/GIS/Maps                     |
| [Element 84](https://element84.com/)                                                                 | **M** [:round_pushpin: Alexandria](https://www.google.com/maps/search/200+North+Lee+St.,+Suite+203,+Alexandria| :globe_with_meridians: Consultancy, Processing pipelines, Open-source standards, e.g. STAC        |
| [Enview](https://enview.com/)                                                                        | **L** [:round_pushpin: San Diego](https://www.google.com/maps/search/237+A+St,+San+Diego| :globe_with_meridians: Insights from 3D point cloud data                                          |
| [EveryPoint](https://everypoint.io/)                                                                 | **S** [:round_pushpin: Redmond](https://www.google.com/maps/search/8201+164th+Avenue+North+East,+Redmond| :globe_with_meridians: Asset monitoring                                                           |
| [Extensis](https://www.extensis.com)                                                                 | **M** [:round_pushpin: Portland](https://www.google.com/maps/search/1800+SW+First+Avenue,+Portland| :globe_with_meridians: Spatial data compression, distribution infrastructure                      |
| [Farmers Edge](https://www.farmersedge.ca)                                                           | **M** (B) [:round_pushpin: Shakopee](https://www.google.com/maps/search/12th+Ave+E,+Shakopee| :seedling: Crop insights platform                                                                 |
| [Farmlogs](https://farmlogs.com)                                                                     | **L** [:round_pushpin: Ann Arbor](https://www.google.com/maps/search/410+N+4th+Ave,+Ann+Arbor,+MI+48104,+USA+)                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               | :seedling: Farm managment software                                                                |
| [Farmshots](http://farmshots.com)                                                                    | **S** [:round_pushpin: Raleigh](https://www.google.com/maps/search/Durham,+North+Carolina.+31010+Glenwood+Avenue.+Raleigh| :seedling: EO crop insights platform                                                              |
| [Felt](https://felt.com/)                                                                            | **M** [:round_pushpin: Oakland](https://www.google.com/maps/search/350+30th+St,+Oakland,+CA+94609,+USA+)                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     | :world_map: Custom web maps                                                                       |
| [Finite Carbon](https://www.finitecarbon.com/)                                                       | **M** [:round_pushpin: Wayne](https://www.google.com/maps/search/435+Devon+Park+Drive,+700+Building,+Wayne| :earth_americas: Forest carbon project monitoring                                                 |
| [First Street Foundation](https://firststreet.org/)                                                  | **M** [:round_pushpin: New York City](https://www.google.com/maps/search/215+Plymouth+Street,+Floor+3,+Brooklyn,+New+York| :earth_americas: Propery-level climate risk information                                           |
| [Flo Analytics](https://www.flo-analytics.com/)                                                      | **M** [:round_pushpin: Portland](https://www.google.com/maps/search/3140+NE+Broadway+St,+Portland,+OR+97232,+USA+)                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           | :globe_with_meridians: GIS Consultancy, Local Gov, School Districts                               |
| [Floodbase](https://www.floodbase.com/)                                                              | **M** [:round_pushpin: New York City](https://www.google.com/maps/search/New+York| :earth_americas: EO: Flood and vulneravility mapping                                              |
| [Foam space](https://foam.space/)                                                                    | **S** [:round_pushpin: New York City](https://www.google.com/maps/search/19+Morris+Avenue+Brooklyn| :globe_with_meridians: Blockchain-enabled location services                                       |
| [Foursquare](https://location.foursquare.com/products/studio/)                                       | **S** [:round_pushpin: New York City](https://www.google.com/maps/search/50+W+23rd+St,+New+York| :world_map: Geospatial Analytics platform based on deck.gl/kepler.gl                              |
| [Fraym](http://fraym.io)                                                                             | **S** [:round_pushpin: McLean](https://www.google.com/maps/search/7900+Westpark+Dr.,+McLean| :globe_with_meridians: Spatial buiseness intelligence, focus Africa                               |
| [Fruition Science](https://fruitionsciences.com/en/home)                                             | **S** (H) [:round_pushpin: Oakland](https://www.google.com/maps/search/5235+Shattuck+Avenue,+Oakland,+CA+94609,+USA+)                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        | :seedling: Vineyard monitoring                                                                    |
| [Fulcrum](https://www.fulcrumapp.com/)                                                               | **M** [:round_pushpin: St. Petersburg](https://www.google.com/maps/search/360+Central+Ave,+St.+Petersburg| :globe_with_meridians: Automating Field Inspection Management                                     |
| [GEO Jobe GIS Consulting](http://www.geo-jobe.com)                                                   | **S** [:round_pushpin: Hermitage](https://www.google.com/maps/search/256+Jackson+Meadows+Dr.+Hermitage| :globe_with_meridians: ArcGIS online services, UAV mapping services                               |
| [GISInc](http://gisinc.com)                                                                          | **L** [:round_pushpin: Birmingham](https://www.google.com/maps/search/2100+Riverchase+Center,+Suite+105,+Birmingham| :globe_with_meridians: Geospatial app dev., GIS consultancy, government GIS solutions, etc.       |
| [Genscape](https://www.genscape.com)                                                                 | **M** (B) [:round_pushpin: Boston](https://www.google.com/maps/search/501+Boylston+St.,+Boston,+MA+02116,+USA+) <br /> **M** (B) [:round_pushpin: Sugar Land](https://www.google.com/maps/search/2245+Texas+Dr.,+Sugar+Land,+TX+77479,+USA+) <br /> **L** (H) [:round_pushpin: Louisville](https://www.google.com/maps/search/1140+Garvin+Place,+Louisville,+KY+40203,+USA+)                                                                                                                                                                                                                                                                                                                                                                                                                                                 | :earth_americas: EO: Oil storage and infrastructure monitoring                                    |
| [Geocue](https://geocue.com/)                                                                        | **M** [:round_pushpin: Madison](https://www.google.com/maps/search/520+6th+Street+Madison| :globe_with_meridians: LIDAR Mapping: software, hardware, training, support                       |
| [Geomarvel](http://www.geomarvel.com)                                                                | **S** [:round_pushpin: Alexandria](https://www.google.com/maps/search/1940+Duke+Street,+Suite+200+Alexandria| :world_map: Webmap & spatial app development                                                      |
| [Geosite](https://www.geosite.io/)                                                                   | **M** [:round_pushpin: Palo Alto](https://www.google.com/maps/search/435+Hamilton+Ave,+Palo+Alto| :globe_with_meridians: Enterprise SaaS platform for spatial data                                  |
| [Geosyntec Consultants](https://www.geosyntec.com/)                                                  | **L** [:round_pushpin: Boca Raton](https://www.google.com/maps/search/900+Broken+Sound+Parkway,+NW,+Boca+Raton| :globe_with_meridians: Engineering consultancy                                                    |
| [Google](https://careers.google.com)                                                                 | **L** [:round_pushpin: Mountain View](https://www.google.com/maps/search/1600+Amphitheatre+Pkwy,+Mountain+View| :earth_americas: E.g. Google Earth Engine EO analysis platform, Maps, etc. pp.                    |
| [Greenwood Mapping Inc.](https://www.greenwoodmap.com)                                               | **S** [:round_pushpin: Wilson](https://www.google.com/maps/search/P.O.+Box+461,+Wilson,+Wyoming| :globe_with_meridians: Local government, web mapping, Open Source GIS                             |
| [Gro Intelligence](https://gro-intelligence.com)                                                     | **M** (H) [:round_pushpin: New York City](https://www.google.com/maps/search/12+E+49th+Street,+New+York| :earth_americas: Agriculture commodity intelligence                                               |
| [HERE Technologies](https://www.here.com/en)                                                         | **L** (B) [:round_pushpin: Chicago](https://www.google.com/maps/search/425+W+Randolph+St,+Chicago,+IL+60606,+USA+) <br /> **L** (B) [:round_pushpin: Seattle](https://www.google.com/maps/search/701+Pike+St,+Seattle| :globe_with_meridians: Car navigation mapping, GIS                                                |
| [Harris](https://www.harris.com)                                                                     | **L**  (B) [:round_pushpin: Melbourne](https://www.google.com/maps/search/1025+W+NASA+Blvd,+Melbourne,+FL+32901,+USA+) <br /> **L**  (B) [:round_pushpin: St. Louis](https://www.google.com/maps/search/4437+Fyler+Ave,+St.+Louis| :earth_americas: ENVI software, geospatial analysis                                               |
| [Hawkeye 360](https://www.he360.com/)                                                                | **L** [:round_pushpin: Herndon](https://www.google.com/maps/search/196+Van+Buren+Street,+Herndon,+Virginia+20170,+USA+)                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      | :artificial_satellite: Remote frequency data satellites and insights                              |
| [Hera Systems](http://www.herasys.com)                                                               | **S** [:round_pushpin: San José](https://www.google.com/maps/search/7013+Realm+Drive,+San+Jose| :artificial_satellite: 12U EO cubesats (optical, launch 2017)                                     |
| [Hexagon Geospatial](https://www.hexagongeospatial.com)                                              | **M** [:round_pushpin: Lanham](https://www.google.com/maps/search/4600+Forbes+Boulevard,+Lanham| :airplane: LiDAR acquisition                                                                      |
| [Hexagon Geospatial](https://www.hexagongeospatial.com)                                              | **L** (B) [:round_pushpin: Norcross](https://www.google.com/maps/search/5051+Peachtree+Corners+Circle,+Norcross,+Georgia,+30092-2500,+USA+) <br /> **L** (H) [:round_pushpin: Madison](https://www.google.com/maps/search/305+Intergraph+Way,+Madison,+Alabama| :globe_with_meridians: GIS+EO: All-purpose                                                        |
| [Hivemapper](https://hivemapper.com)                                                                 | **S** [:round_pushpin: Burlingame](https://www.google.com/maps/search/1400+Marsten+Rd,+Burlingame| :world_map: 3D maps from UAV video feed                                                           |
| [Icaros](https://www.icaros.us)                                                                      | **S** [:round_pushpin: Fairfax](https://www.google.com/maps/search/4100+Monument+Corner+Drive,+Fairfax,+Virginia| :airplane: Aerial image acquistion, analysis software reseller                                    |
| [Identified Technologies](https://www.identifiedtech.com)                                            | **M** [:round_pushpin: Pittsburgh](https://www.google.com/maps/search/6534+Hamilton+Avenue,+Pittsburgh,+PA+15206,+USA+)                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      | :airplane: UAV image acquisition, analysis services                                               |
| [Impact Observatory](https://www.impactobservatory.com/)                                             | **S** [:round_pushpin: USA](https://www.google.com/maps/search/900+19th+St+NW,+Washington| :globe_with_meridians: Geospatial AI for sustainability and environmental risk analysis           |
| [Indigo Ag](https://www.indigoag.com/)                                                               | **M** [:round_pushpin: Cambridge](https://www.google.com/maps/search/One+Broadway,+Cambridge| :seedling: Crop intelligence platform                                                             |
| [Intelinair](https://www.intelinair.com)                                                             | **S** (B) [:round_pushpin: Champaign](https://www.google.com/maps/search/60+Hazelwood+Drive,+Champaign,+IL+61820,+USA+)                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      | :seedling: UAV crop insights                                                                      |
| [Jupiter Intelligence](https://jupiterintel.com/)                                                    | **L** [:round_pushpin: San Mateo](https://www.google.com/maps/search/181+2nd+Ave,+San+Mateo,+California| :earth_americas: Climate change risk analytics                                                    |
| [Kaart](https://www.kaart.com/)                                                                      | **L** [:round_pushpin: Grand Junction](https://www.google.com/maps/search/734+Main+Street,+Grand+Junction| :globe_with_meridians: GIS: All-purpose                                                           |
| [Kairos Aerospace](http://kairosaerospace.com)                                                       | **M** [:round_pushpin: Mountain View](https://www.google.com/maps/search/777+Cuesta+Drive,+Suite+202,+Mountain+View| :earth_americas: Oil & gas industry infrastructure leak detection                                 |
| [KatRisk](https://www.katrisk.com/)                                                                  | **S** [:round_pushpin: Berkeley](https://www.google.com/maps/search/2397+Shattuck+Ave,+Berkeley| :globe_with_meridians: Catastrophe modeling solutions for flood and wind risk                     |
| [Land IQ](http://www.landiq.com)                                                                     | **M** [:round_pushpin: Sacramento](https://www.google.com/maps/search/2020+L+Street,+Sacramento| :globe_with_meridians: GIS+EO: All-purpose                                                        |
| [Line 45](https://www.line-45.com)                                                                   | **S** [:round_pushpin: Michigan](https://www.google.com/maps/search/Gaylord,+Michigan| :world_map: App Development, GIS, Cartography, Data Vis., Databases                               |
| [Local Data](http://localdata.com/)                                                                  | **S** [:round_pushpin: San Francisco](https://www.google.com/maps/search/155+9th+St,+San+Francisco,+California| :globe_with_meridians: Tools for collection and analysis of urban infrastructure                  |
| [Makepath](https://makepath.com/)                                                                    | **M** [:round_pushpin: Austin](https://www.google.com/maps/search/9900+Spectrum+Drive,+Austin,+Texas| :globe_with_meridians: Geospatial open source tools and consulting                                |
| [MapHubs](http://www.maphubs.com)                                                                    | **S** [:round_pushpin: Washington](https://www.google.com/maps/search/Washington,+DC,+USA+)                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  | :world_map: Web mapping plattform, data management                                                |
| [Mapbox](https://www.mapbox.com)                                                                     | **L** (B) [:round_pushpin: Washington](https://www.google.com/maps/search/1509+16th+St+NW,+Washington,+DC+20036,+USA+) <br /> **L** (H) [:round_pushpin: San Francisco](https://www.google.com/maps/search/85+2nd+St,+San+Francisco| :world_map: SDKs for mapping, navigation, and location search                                     |
| [Maptek](https://www.maptek.com/)                                                                    | **M** (B) [:round_pushpin: Denver](https://www.google.com/maps/search/14143+Denver+West+Parkway,+Golden| :globe_with_meridians: Mining decision-making support solutions                                   |
| [Maxar](https://www.maxar.com)                                                                       | **L** (B) [:round_pushpin: Westminster](https://www.google.com/maps/search/1300+W.+120th+Ave,+Westminster,+CO+80234,+USA+) <br /> **M** (B) [:round_pushpin: Tampa](https://www.google.com/maps/search/601+Bayshore+Blvd,Tampa,+FL+33606,+USA+) <br /> **L** (B) [:round_pushpin: Arlington](https://www.google.com/maps/search/2107+Wilson+Boulevard,+Arlington,+VA+22201,+USA+) <br /> **L** (H) [:round_pushpin: Herndon](https://www.google.com/maps/search/2325+Dulles+Corner+Boulevard,+Herndon,+VA+20171,+USA+)                                                                                                                                                                                                                                                                                                       | :artificial_satellite: ""Worldview"" satellites (optical, VHR)                                      |
| [Maxar](https://www.maxar.com)                                                                       | **M** (B) [:round_pushpin: Ypsilanti](https://www.google.com/maps/search/1200+Joe+Hall+Dr,+Ypsilanti,+MI+48197,+USA+) <br /> **M** (H) [:round_pushpin: Herndon](https://www.google.com/maps/search/2325+Dulles+Corner+Blvd,+Herndon| :earth_americas: EO+GIS: Defence focus, all-purpose                                               |
| [Microsoft](https://www.microsoft.com)                                                               | **L** (H) [:round_pushpin: Redmond](https://www.google.com/maps/search/Microsoft+Way,+Redmond| :world_map: AI for Earth, Azure & Bing Maps, mapping, navigation, location search                 |
| [Muon Space](https://www.muonspace.com/)                                                             | **M** [:round_pushpin: San Francisco](https://www.google.com/maps/search/2250+Charleston+Rd,+Mountain+View,+California| :artificial_satellite: Smallsat constellation                                                     |
| [NCX](https://silviaterra.com/bark/index.html)                                                       | **L** [:round_pushpin: San Francisco](https://www.google.com/maps/search/2443+Fillmore+St.,+San+Francisco| :earth_americas: Forest carbon marketplace                                                        |
| [NV5](https://quantumspatial.com)                                                                    | **M** (B) [:round_pushpin: St. Petersburg](https://www.google.com/maps/search/10033+9th+St+N,+St.+Petersburg,+FL+33716,+USA+) <br /> **M** (B) [:round_pushpin: Sheboygan Falls](https://www.google.com/maps/search/N+6216+Resource+Drive,+Sheboygan+Falls,+WI+53085,+USA+) <br /> **L** (H) [:round_pushpin: Portland](https://www.google.com/maps/search/421+SW+6th+#800,+Portland,+OR+97204,+USA+)                                                                                                                                                                                                                                                                                                                                                                                                                        | :airplane: GIS+EO: All-purpose, aerial acquisitions                                               |
| [NV5](https://www.nv5.com/)                                                                          | **M** (B) [:round_pushpin: Corvallis](https://www.google.com/maps/search/#400,+517+SW+2nd+St,+Corvallis| :airplane: GIS+EO: All-purpose, aerial acquisitions                                               |
| [Near Space Labs](https://nearspacelabs.com/)                                                        | **M** [:round_pushpin: New York City](https://www.google.com/maps/search/141+Flushing+Ave,+Brooklyn| :artificial_satellite: High resolution data from stratosphere baloons                             |
| [Nuview](https://nuview.space/)                                                                      | **M** [:round_pushpin: Orlando](https://www.google.com/maps/search/6900+Tavistock+Lakes+Blvd,+Orlando,+Florida| :earth_americas: Elevation data from Lidar satellites                                             |
| [OneSky](https://www.onesky.xyz/)                                                                    | **M** [:round_pushpin: Exton](https://www.google.com/maps/search/220+Valley+Creek+Blvd.+STE+401,+Exton| :airplane: UAV modeling and simulation tools                                                      |
| [OpenAQ](https://openaq.org/)                                                                        | **S** [:round_pushpin: Washington](https://www.google.com/maps/search/4301+50th+Street+NW,+Washington| :earth_americas: Air Quality Data                                                                 |
| [Orbital Insight](https://orbitalinsight.com)                                                        | **M** (B) [:round_pushpin: New York City](https://www.google.com/maps/search/One+World+Trade+Center,+285+Fulton+St,+New+York,+NY+10007,+USA+) <br /> **L** (H) [:round_pushpin: Roseville](https://www.google.com/maps/search/100+W+Evelyn+Ave,+Mountain+View| :earth_americas: EO: Consumer, energy, financial, insurance insights, Big Data                    |
| [Orbital Sidekick](https://orbitalsidekick.com/)                                                     | **M** [:round_pushpin: San Francisco](https://www.google.com/maps/search/224+11th+St,+San+Francisco,+California| :earth_americas: Hyperspectral sensors for monitoring                                             |
| [Pachama](https://pachama.com/)                                                                      | **M** [:round_pushpin: San Francisco](https://www.google.com/maps/search/1435+48th+Avenue,+San+Francisco| :earth_americas: Carbon capture platform & EO based verification                                  |
| [Perennial](https://www.perennial.earth/)                                                            | **M** [:round_pushpin: Boulder](https://www.google.com/maps/search/2560+28th+St.,+Boulder| :earth_americas: Soil carbon reporting                                                            |
| [Pix4D](https://pix4d.com)                                                                           | **S** (B) [:round_pushpin: San Francisco](https://www.google.com/maps/search/353+Sacramento+St,+San+Francisco,+California| :airplane: Photogrametry software, UAV                                                            |
| [Place](https://www.thisisplace.org/)                                                                | **M** [:round_pushpin: Washington](https://www.google.com/maps/search/1875+K+St+NW,+Washington,+District+of+Columbia| :airplane: Highres aerial and ground imagery acquistion                                           |
| [Placemark](https://www.placemark.io/)                                                               | **S** [:round_pushpin: New York City](https://www.google.com/maps/search/Rockefeller+Center,+New+York+City| :globe_with_meridians: Collaborative online modern mapping software                               |
| [Planet IQ](https://planetiq.com/)                                                                   | **M** [:round_pushpin: Golden](https://www.google.com/maps/search/15000+W+6th+Ave,+202,+Golden,+Colorado| :artificial_satellite: Weather satellite constellation                                            |
| [Planet](https://www.planet.com)                                                                     | **S** (B) [:round_pushpin: Bellevue](https://www.google.com/maps/search/2300+130th+Ave+NE,+Bellevue,+WA+98005,+USA+) <br /> **L** (H) [:round_pushpin: San Francisco](https://www.google.com/maps/search/346+9th+Street,+San+Francisco| :artificial_satellite: Cubesat constellation (optical, daily coverage)                            |
| [PolArctic LLC](https://polarcticllc.com/)                                                           | **S** [:round_pushpin: Lorton](https://www.google.com/maps/search/9435+Lorton+Market+Street,+Lorton| :earth_americas: EO for sea ice modeling, nearshore mapping and water quality mapping             |
| [Precisely](https://www.precisely.com/)                                                              | **L** [:round_pushpin: Burlington](https://www.google.com/maps/search/1700+District+Ave,+Burlington,+MA+01803,+USA+)                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         | :globe_with_meridians: GIS and geocoding software                                                 |
| [Precision Hawk](http://www.precisionhawk.com)                                                       | **L** [:round_pushpin: Raleigh](https://www.google.com/maps/search/8601+Six+Forks+Rd+#600,+Raleigh| :airplane: UAV imagery acquisition, analysis platform                                             |
| [Prenav](https://www.prenav.com/)                                                                    | **S** [:round_pushpin: Redwood City](https://www.google.com/maps/search/303+Twin+Dolphin+Drive,+Redwood+City| :airplane: Infrastructure structural inspections                                                  |
| [Propeller Aero](https://www.propelleraero.com/)                                                     | **M** (H) [:round_pushpin: Denver](https://www.google.com/maps/search/3360+Walnut+St.,+Denver| :airplane: UAV 3D mapping and data analytics solutions                                            |
| [QED](https://qed.ai/)                                                                               | **M** (H) [:round_pushpin: Sheridan](https://www.google.com/maps/search/Sheridan,+Wyoming| :earth_americas: EO for agriculture, environment, and health                                      |
| [RGI](https://rgi-corp.com/)                                                                         | **M** [:round_pushpin: Fairfax](https://www.google.com/maps/search/11325+Random+Hills+Road,+Fairfax| :globe_with_meridians: GIS: Focus on goverment & defence                                          |
| [RS Metrics](https://rsmetrics.com)                                                                  | **S** (H) [:round_pushpin: New York City](https://www.google.com/maps/search/205+E.+42nd+St,+New+York| :earth_americas: EO: Retail, Real Estate, Commodity monitoring                                    |
| [Radiant Earth](https://www.radiant.earth)                                                           | **S** [:round_pushpin: Arlington](https://www.google.com/maps/search/4350+Fairfax+Dr,+Arlington| :earth_americas: Imagery platform                                                                 |
| [Red Fox GIS & Remote Sensing](https://www.redfoxgis.com/)                                           | **S** [:round_pushpin: Duluth](https://www.google.com/maps/search/Duluth,+Minnesota| :globe_with_meridians: GIS & EO consultancy for environmental and natural resources applications  |
| [Regrid](https://regrid.com/)                                                                        | **M** [:round_pushpin: Detroit](https://www.google.com/maps/search/440+Burroughs+St,+Suite+672+Detroit| :globe_with_meridians: Land parcel data vendor                                                    |
| [Regrow](https://www.regrow.ag/)                                                                     | **M** [:round_pushpin: Durham](https://www.google.com/maps/search/15+Newmarket+Rd,+Durham| :seedling: Crop & Sustainability insights                                                         |
| [Riverside](https://www.riverside.com)                                                               | **M** [:round_pushpin: Fort Collins](https://www.google.com/maps/search/3350+Eastbrook+Drive,+Suite+270,+Fort+Collins,+CO+80525,+USA+) <br /> **M** [:round_pushpin: Silver Spring](https://www.google.com/maps/search/1100+Bonifant+Street,+Suite+240,+Silver+Spring| :earth_americas: EO: river/environmental decision support                                         |
| [Safegraph](https://www.safegraph.com/)                                                              | **L** [:round_pushpin: Denver](https://www.google.com/maps/search/1624+Market+St,+Denver,+Colorado| :globe_with_meridians: Point of interest data vendor                                              |
| [Salo Sciences](https://salo.ai/)                                                                    | **S** [:round_pushpin: San Francisco](https://www.google.com/maps/search/Van+Ness+Ave,+San+Francisco| :globe_with_meridians: Conversation analytics & monitoring                                        |
| [Satelytics](https://www.satelytics.com)                                                             | **M** [:round_pushpin: Toledo](https://www.google.com/maps/search/1510+N.+Westwood+Ave.+Toledo,+Ohio| :earth_americas: EO: energy asset, pipeline monitoring                                            |
| [Schneider](http://schneidercorp.com)                                                                | **M** (B) [:round_pushpin: Ankeny](https://www.google.com/maps/search/1450+SW+Vintage+Parkway,+Ankeny,+IA+50023,+USA+) <br /> **M** (H) [:round_pushpin: Indianapolis](https://www.google.com/maps/search/8901+Otis+Avenue,+Indianapolis| :globe_with_meridians: GIS: All-purpose                                                           |
| [Sensefly](https://www.sensefly.com/home.html)                                                       | **S** (B) [:round_pushpin: Washington DC](https://www.google.com/maps/search/205+New+York+Ave,+Washington| :airplane: ""ebee"" UAV manufacturer, ""eMotion"" flight software                                     |
| [Senterta](https://sentera.com/)                                                                     | **L** [:round_pushpin: St Paul](https://www.google.com/maps/search/767+Eustis+Street,+Suite+120,+Saint+Paul,+MN+55114,+USA+)                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 | :seedling: Agricultural Analytics via UAV                                                         |
| [Sharpershape](https://sharpershape.com)                                                             | **S** (H) [:round_pushpin: Grand Forks](https://www.google.com/maps/search/1168+12th+Street+NE,+Grand+Forks,+North+Dakota| :airplane: UAV automated utility inspections                                                      |
| [Simularity](https://simularity.com)                                                                 | **S** [:round_pushpin: Richmond](https://www.google.com/maps/search/1160+Brickyard+Cove+Rd+#200,+Richmond| :earth_americas: Anomaly detection and pattern recognition for EO analysis                        |
| [Skycatch](https://www.skycatch.com)                                                                 | **M** [:round_pushpin: San Francisco](https://www.google.com/maps/search/424+9th+St,+San+Francisco| :airplane: Photogrammetry software, UAV                                                           |
| [Skyfi](https://www.skyfi.com/)                                                                      | **M** [:round_pushpin: Austin](https://www.google.com/maps/search/+1120+S+Capital+of+Texas+Hwy,+Austin| :artificial_satellite: Optical satellite constellation, focus on accessibility                    |
| [Skylark Drones](https://www.skylarkdrones.com)                                                      | **M** [:round_pushpin: Bengaluru](https://www.google.com/maps/search/Tavarekere+Main+Road,+16,+Bengaluru,+560029,+Karnataka,+India| :airplane: UAV analytics for planning, monitoring, inspections                                    |
| [Skytruth](https://skytruth.org/)                                                                    | **S** [:round_pushpin: Shepherdstown](https://www.google.com/maps/search/213+W+Washington+St,+Shepherdstown| :earth_americas: EO: environment protection                                                       |
| [Skywatch](https://www.skywatch.com/)                                                                | **S** (B) [:round_pushpin: New York City](https://www.google.com/maps/search/16+W+22nd+St,+New+York+City,+NY,+10011,+USA+)                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   | :earth_americas: ""Earthwatch"" Sat-imagery platform + analysis API                                 |
| [Slantrange](http://www.slantrange.com)                                                              | **S** [:round_pushpin: San Diego](https://www.google.com/maps/search/4901+Morena+Blvd,+San+Diego| :airplane: UAV based crop insights                                                                |
| [Spaceknow](https://spaceknow.com)                                                                   | **S** (H) [:round_pushpin: San Francisco](https://www.google.com/maps/search/535+Mission+St,+San+Francisco| :earth_americas: EO: business, financial, commodity insights, Big Data                            |
| [Spatial.ai](https://www.spatial.ai/)                                                                | **S** [:round_pushpin: Cincinnati](https://www.google.com/maps/search/1008+Race+St,+2nd+Floor,+Cincinnati| :globe_with_meridians: Geographic social media-based lifestyle dataset                            |
| [Spire](https://spire.com/)                                                                          | **L** (H) [:round_pushpin: Vienna](https://www.google.com/maps/search/8000+Towers+Crescent+Dr,+Vienna,+VA+22182,+USA+) <br /> **M** (B) [:round_pushpin: Boulder](https://www.google.com/maps/search/1690+38th+St,+Boulder,+CO+80301,+USA+) <br /> **M** (B) [:round_pushpin: San Francisco](https://www.google.com/maps/search/251+Rhode+Island+St,+San+Francisco,+CA+94103,+USA+)                                                                                                                                                                                                                                                                                                                                                                                                                                          | :artificial_satellite: Remote Frequency satellite constellation                                   |
| [Stadia Maps](https://stadiamaps.com)                                                                | **S** [:round_pushpin: Greenville](https://www.google.com/maps/search/101+Main+St,+Greenville| :world_map: Webmap infrastructure for map tiles, static maps and routing                          |
| [Sylvera](https://www.sylvera.io/)                                                                   | **S** [:round_pushpin: London](https://www.google.com/maps/search/29e+Thorney+Crescent,+London| :globe_with_meridians: Carbon offset monitoring                                                   |
| [Synthetaic](https://www.synthetaic.com/)                                                            | **M** [:round_pushpin: Delafield](https://www.google.com/maps/search/Delafield,+514+Wells+St| :earth_americas: AI Image analysis with focus on geospatial                                       |
| [TCarta Marine](https://www.tcarta.com)                                                              | **S** [:round_pushpin: Denver](https://www.google.com/maps/search/3015+W+9th+Ave,+Denver| :earth_americas: Marine Geospatial Analysis + Imagery Reseller                                    |
| [Techmaven Geospatial](https://techmaven.net/home/)                                                  | **S** [:round_pushpin: Plantation](https://www.google.com/maps/search/1856+North+Nob+Hill+Road,+Plantation| :globe_with_meridians: Geospatial Data and Development Services                                   |
| [Tensorflight](https://tensorflight.com/)                                                            | **S** (B) [:round_pushpin: New York City](https://www.google.com/maps/search/99+Wall+St+231357,+New+York| :earth_americas: Property data and AI technology for insurance                                    |
| [Teren](https://www.teren4d.com/)                                                                    | **M** [:round_pushpin: Lakewood](https://www.google.com/maps/search/165+S+Union+Blvd+Suite+100,+Lakewood| :globe_with_meridians: Environmental risk management                                              |
| [Terra Cover](http://www.terracover.ai/)                                                             | **S** [:round_pushpin: Denver](https://www.google.com/maps/search/4771+W+Alameda+Ave+Denver| :earth_americas: EO: Reservoir, Lake & Flood Monitoring                                           |
| [TerraGo](https://terragotech.com/)                                                                  | **M** [:round_pushpin: Sterling](https://www.google.com/maps/search/45610+Woodland+Road,+Sterling| :globe_with_meridians: Field operations applications                                              |
| [Terrafuse AI](https://www.terrafuse-ai.com/)                                                        | **M** [:round_pushpin: Berkeley](https://www.google.com/maps/search/1+Cyclotron+Road,+Berkeley| :earth_americas: Climate and weather risk prediction solution                                     |
| [Terrapulse](https://www.terrapulse.com)                                                             | **S** [:round_pushpin: North Potomac](https://www.google.com/maps/search/11521+Alcinda+Ln.,+North+Potomac,+Maryland| :earth_americas: EO: Land monitoring & insights                                                   |
| [Tomorrow io](https://www.tomorrow.io/)                                                              | **L** [:round_pushpin: Boston](https://www.google.com/maps/search/9+Channel+Center+St,+7th+Floor,+Boston| :globe_with_meridians: Weather and Climate Security Platform                                      |
| [Trimble](https://geospatial.trimble.com/)                                                           | **L** (H) [:round_pushpin: Westminster](https://www.google.com/maps/search/10368+Westmoor+Drive,+Westminster,+Colorado| :globe_with_meridians: GIS data collection/surveying solutions, analytics, etc.                   |
| [Umbra](https://umbra.space/)                                                                        | **M** [:round_pushpin: Santa Barbara](https://www.google.com/maps/search/133+E+De+la+Guerra+St,+Santa+Barbara| :artificial_satellite: High-resolution SAR constellation                                          |
| [Unearth](https://www.unearthlabs.com/)                                                              | **M** [:round_pushpin: Sacramento](https://www.google.com/maps/search/555+Capitol+Mall,+Sacramento| :globe_with_meridians: Field data management platform                                             |
| [Upstream Tech](https://upstream.tech)                                                               | **S** [:round_pushpin: Alameda](https://www.google.com/maps/search/Alameda,+California+94501,+USA+)                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          | :earth_americas: Conservation project monitoring, agriculture, wetlands, streamflow services      |
| [UrbanSim](https://www.urbansim.com/)                                                                | **S** [:round_pushpin: Seattle](https://www.google.com/maps/search/221+1st+Ave+W+Suite+305,+Seattle| :globe_with_meridians: Urban Development Planning                                                 |
| [UrbanSky](https://www.urbansky.com/)                                                                | **S** [:round_pushpin: Denver](https://www.google.com/maps/search/4800+Race+Street,+Denver,+Colorado,+USA+)                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  | :artificial_satellite: Microballoons for EO                                                       |
| [Ursa Space](http://ursaspace.com)                                                                   | **M** [:round_pushpin: Ithaca](https://www.google.com/maps/search/314+E+State+St,+Ithaca| :earth_americas: EO: Oil storage and infrastructure monitoring                                    |
| [Wherobots](https://www.wherobots.ai/)                                                               | **S** [:round_pushpin: Scottsdale](https://www.google.com/maps/search/250+N+Drinkwater+Blvd,+Scottsdale,+Arizona| :earth_americas: Geospatial platform for data pipeline development                                |
| [WhiteStar Corporation](https://www.whitestar.com)                                                   | **S** [:round_pushpin: Lakewood](https://www.google.com/maps/search/777+South+Wadsworth+Blvd,+Lakewood| :globe_with_meridians: Landmapping software, Cartography / GIS                                    |
| [Woolpert](https://woolpert.com)                                                                     | **L** (H) [:round_pushpin: Dayton](https://www.google.com/maps/search/4454+Idea+Center+Boulevard,+Dayton| :airplane: Aerial image & LiDAR acquistion, geospatial analysis                                   |
| [Zesty AI](https://zesty.ai/)                                                                        | **M** [:round_pushpin: San Francisco](https://www.google.com/maps/search/548+Market+St,+PMB+75392,+San+Francisco,+California| :earth_americas: Climate and Property risk insights                                               | 

 ## :ukraine: Ukraine 
| Company (2)                         | Size & City                                                                                                   | Focus                                               |
|:------------------------------------|:--------------------------------------------------------------------------------------------------------------|:----------------------------------------------------|
| [Aspectum](https://eos.com)         | **M** [:round_pushpin: Kiev](https://www.google.com/maps/search/Kiev,+Ukraine+)                               | :earth_americas: Online GIS mapping platform        |
| [Visicom](https://visicomdata.com/) | **M** [:round_pushpin: Kyiv](https://www.google.com/maps/search/25/2+Velyka+Zhytomyrska+Str.,+Kyiv,+Ukraine+) | :world_map: 3D Mapping and Geospatial data products | 

 ## :uzbekistan: Uzbekistan 
| Company (1)                      | Size & City                                                                                          | Focus                                         |
|:---------------------------------|:-----------------------------------------------------------------------------------------------------|:----------------------------------------------|
| [Geoalert](https://geoalert.io/) | **S** [:round_pushpin: Tashkent](https://www.google.com/maps/search/3,+Tashkent+100003,+Uzbekistan+) | :earth_americas: Analytics & mapping platform | 

 ## :vietnam: Vietnam 
| Company (2)                                           | Size & City                                                                                                                       | Focus                                                                                                 |
|:------------------------------------------------------|:----------------------------------------------------------------------------------------------------------------------------------|:------------------------------------------------------------------------------------------------------|
| [Skymap Global](https://skymapglobal.com)             | **S** (B) [:round_pushpin: Hanoi](https://www.google.com/maps/search/Van+Quan,+Ha+Dong,+Hanoi,+Vietnam+)                          | :globe_with_meridians: Location-based analytics platforms for buiseness, agriculture, forest insights |
| [Spatial Decisions](http://www.spatialdecisions.com/) | **S** (B) [:round_pushpin: Hanoi](https://www.google.com/maps/search/36B,+Ngõ+11+-+Tô+Ngọc+Vân,+Tây+Hồ+District,+Hanoi,+Vietnam+) | :globe_with_meridians: GIS consultancy (urban/regional planning, energy/infrastructure, climate)      | 

 ## :zimbabwe: Zimbabwe 
| Company (1)                         | Size & City                                                                                      | Focus                     |
|:------------------------------------|:-------------------------------------------------------------------------------------------------|:--------------------------|
| [Zimgeo](https://www.zimgeo.co.zw/) | **S** [:round_pushpin: Harare](https://www.google.com/maps/search/Joina+City,+Harare,+Zimbabwe+) | :earth_americas: EO & GIS | 
",556,556,25,2,farming,"[companies, earth-observation, farming, geospatial, gis, map, remote-sensing, satellite, uav]",00000
1100,tania,usetania,N/A,N/A,https://api.github.com/repos/usetania/tania,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C13A:458F:2C2D06D:5A978FD:65223FBE.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,farming,"[N, /, A]",00000
1101,defi,gauss314,N/A,https://github.com/gauss314/defi,https://api.github.com/repos/gauss314/defi,"Tools for use in DeFi. Impermanent Loss calculations, staking and farming strategies, coingecko and pancakeswap API queries, liquidity pools and more","<br>

# DeFi open source tools

[![Downloads](https://pepy.tech/badge/defi)](https://pepy.tech/project/defi)
[![License](http://img.shields.io/badge/license-MIT-blue.svg)](https://github.com/gauss314/defi/blob/main/LICENSE.txt)
[![Twitter](https://img.shields.io/twitter/follow/JohnGalt_is_www?color=blue&style=flat-square)](https://twitter.com/JohnGalt_is_www)
[![Update](https://img.shields.io/github/last-commit/gauss314/defi)](https://github.com/gauss314/defi)
[![Update](https://img.shields.io/pypi/pyversions/defi?color=green&label=python)](https://pypi.org/project/defi/)

<br>

## Get Started
* [Instalation](#instalation)

## General Tools
* [Impermanent Loss, simple calculation](#impermanent-loss)
* [Compare Buy & Hold with Staking and Farming](#buyhold-vs-stake--farming-strategy)
* [Complete list for DeFi protocols TVL, volume and more](#defi-protocols)
* [Example listing top20 DeFi dapps by TVL](#top-20-dapps-tvl-by-chain)
* [Example show historical TVL for one or more protocols ](#historical-tvl)

## CoinGecko API
* [API endpoints](#coingecko-api)
* [Get IDs list](#coingecko---ids-list)
* [Live prices](#coingecko---get-price-for-coins-at-diferent-currencies)
* [All exchanges and prices for each coin](#coingecko---get-main-exchanges-for-a-coin-or-token)
* [Historial prices por each coin](#coingecko---historical-prices-for-a-coin)
* [Simulate Farming Strategy](#coingecko---farming-simulate)

## PancakeSwap API
* [All token prices real time](#pancakeswap---get-tokens-prices-in-real-time)
* [All pairs liquidity, volume and more](#pancakeswap---get-pairs-liquidity-and-more)
* [Get data in real time for one token](#pancakeswap---get-token-info)
* [Get data in real time for one pair](#pancakeswap---get-pair-info)
* [Simulate invest in LP considering impermanent loss, 3D graph](#pancakeswap---simulate-lp-invest)



<br><br>

## Get started

<br>

### Instalation


```sh
pip install defi
```

<br>

### Impermanent Loss

```python
import defi.defi_tools as dft

# Impermanent loss for stableCoin & -20% return token 
dft.iloss(0.8)
```
> -0.62%



```python
import defi.defi_tools as dft

# Impermanent loss for stableCoin & +60% return token 
dft.iloss(1.6, numerical=True)

```
> 0.027   # Same as 2.7%


<br>

### Buy&Hold vs Stake & Farming strategy


```python
import defi.defi_tools as dft

# Exercise: Get returns after 20 days, assuming token A is a stablecoin, token B perform + 150%
# individual staking pools for both = 0.01% & 0.05% daily
# liquidity-pool farming rewards =0.2% daily & Earn by fees/day = 0.01%
dft.compare(days=20, var_A=0, var_B=150, rw_pool_A=0.01, rw_pool_B=0.05, rw_pool_AB=0.2, fees_AB=0.01)
```

```json
{
 ""buy_hold"": ""75.00%"",
 ""stake"": ""75.60%"",
 ""farm"": ""71.96%"",
 ""Best"": ""Stake""
}
```

<br>

### DeFi protocols


```python
import defi.defi_tools as dft

metadata, df = dft.getProtocol('Uniswap')
metadata
```

```json
{
 ""id"": ""1"",
 ""name"": ""Uniswap"",
 ""address"": ""0x1f9840a85d5af5bf1d1762f925bdaddc4201f984"",
 ""symbol"": ""UNI"",
 ""url"": ""https://info.uniswap.org/"",
 ""description"": ""A fully decentralized protocol for automated liquidity provision on Ethereum.\r\n"",
 ""chain"": ""Ethereum"",
 ""logo"": ""None"",
 ""audits"": ""2"",
 ""audit_note"": ""None"",
 ""gecko_id"": ""uniswap"",
 ""cmcId"": ""7083"",
 ""category"": ""Dexes"",
 ""chains"": [""Ethereum""],
 ""module"": ""uniswap.js""
}
```

<br>

### Top 20 dapps TVL by chain

```python
import defi.defi_tools as dft
import matplotlib.pyplot as plt

df = dft.getProtocols()
fig, ax = plt.subplots(figsize=(12,6))

n = 50 # quantity to show
top = df.sort_values('tvl', ascending=False).head(n)

chains = top.groupby('chain').size().index.values.tolist()
for chain in chains:
    filtro = top.loc[top.chain==chain]
    ax.bar(filtro.index, filtro.tvl, label=chain)

ax.set_title(f'Top {n} dApp TVL, groupBy dApp main Chain', fontsize=14)
ax.grid(alpha=0.5)
plt.legend()
plt.xticks(rotation=90)
plt.show()
```
<img src=""images/top20_dapps.png"" width=600>


<br>
### Historical TVL


```python
import defi.defi_tools as dft
import pandas as pd

exchanges = ['pancakeswap', 'curve', 'makerdao', 'uniswap','Compound', 'AAVE','sushiswap','anchor']

hist = [dft.getProtocol(exchange)[1] for exchange in exchanges]
df = pd.concat(hist, axis=1)
df.columns = exchanges

df.plot(figsize=(12,6))
```
<img src=""images/main_dapps.png"" width=600>


<br>

### CoinGecko API

Endpoints available, some examples:

    * dft.getGeckoIDs()
        # coinGecko first 5000 ids

	* dft.geckoPrice(""bitcoin,ethereum"", ""usd,eur,brl"")
		# coinGecko quotes

	* dft.geckoList(page=1, per_page=250)
		# full coinGecko cyptocurrency list

	* dft.geckoMarkets(""ethereum"")
		# top 100 liquidity markets, prices, and more, for eth or other coin

	* dft.geckoHistorical('cardano')
		# full history containing price, market cap and volume 

    * dft.farmSimulate(['huobi-token','tether'], apr=45)
        # Simulate farming strategy with apr=45% 


### CoinGecko - ids list
```python
import defi.defi_tools as dft

ids = dft.getGeckoIDs()
ids[:10]
```
<pre>
['bitcoin',
 'ethereum',
 'binancecoin',
 'tether',
 'solana',
 'cardano',
 'ripple',
 'polkadot',
 'shiba-inu',
 'dogecoin']
</pre>


### CoinGecko - Get price for coins at diferent currencies
```python
import defi.defi_tools as dft

dft.geckoPrice(""bitcoin,ethereum"", ""usd,eur,brl"")
```

```json
{""ethereum"": {""usd"": 2149.85, ""eur"": 1807.58, ""brl"": 12208.77},
 ""bitcoin"": {""usd"": 60188, ""eur"": 50606, ""brl"": 341802}}
```

<br>

### CoinGecko - Get main exchanges for a coin or token 
```python
import defi.defi_tools as dft

df = dft.geckoMarkets(""ethereum"")
print(df.info())
# returns top 100 ethereum quotes by volume
```
```text
Index: 100 entries, IDCM to FTX.US
Data columns (total 9 columns):
 #   Column       Non-Null Count  Dtype              
---  ------       --------------  -----              
 0   base         100 non-null    object             
 1   target       100 non-null    object             
 2   last         100 non-null    float64            
 3   volume       100 non-null    float64            
 4   spread       100 non-null    float64            
 5   timestamp    100 non-null    datetime64[ns, UTC]
 6   volume_usd   100 non-null    float64            
 7   price_usd    100 non-null    float64            
 8   trust_score  100 non-null    object             
dtypes: datetime64[ns, UTC](1), float64(5), object(3)
memory usage: 7.8+ KB
```

<br>

### CoinGecko - historical prices for a coin
```python
import defi.defi_tools as dft

df = dft.geckoHistorical('cardano')
print(df)
```
<pre>
                        price   market_caps  total_volumes
date                                                      
2017-10-18 00:00:00  0.026845  6.960214e+08   2.351678e+06
2017-10-19 00:00:00  0.026830  6.956220e+08   2.815156e+06
2017-10-20 00:00:00  0.030300  7.855800e+08   8.883473e+06
2017-10-21 00:00:00  0.028588  7.412021e+08   5.308857e+06
2017-10-22 00:00:00  0.027796  7.206698e+08   2.901876e+06
...                       ...           ...            ...
2021-04-13 00:00:00  1.319790  4.223483e+10   5.005258e+09
2021-04-14 00:00:00  1.422447  4.565529e+10   5.693373e+09
2021-04-15 00:00:00  1.456105  4.676570e+10   8.920293e+09
2021-04-16 00:00:00  1.478071  4.730118e+10   5.151595e+09
2021-04-17 03:47:55  1.433489  4.595961e+10   5.152747e+09

[1278 rows x 3 columns]
</pre>


### CoinGecko - Farming Simulate
```python
import defi.defi_tools as dft

pair = ['huobi-token','tether']
apr = 45

dft.farmSimulate(pair, apr, start='2021-01-01')
```
<pre>
Downloading huobi-token
Downloading tether
{'Token 1': 'huobi-token',
 'Token 2': 'tether',
 'start': '2021-01-01',
 'fixed APR': '45%',
 'Buy & Hold': '68.90%',
 'Impermanent Loss': '-8.66%',
 'Farming Rewards': '75.45%',
 'Farming + Rewards - IL': '153.02%'}

</pre>
<img src=""images/simulate.png"" width=800>


<br>

### PancakeSwap - Get tokens prices in real time
```python
import defi.defi_tools as dft

df = dft.pcsTokens()
print(df)
```
```text
                                                         name     symbol       price  price_BNB                 updated
0x0E09FaBB73Bd3Ade0a17ECC321fD13a19e81cE82  PancakeSwap Token       Cake     24.0636     0.0450 2021-04-17 04:29:08.332
0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c        Wrapped BNB       WBNB    534.2575     1.0000 2021-04-17 04:29:08.332
0x0F9E4D49f25de22c2202aF916B681FBB3790497B             Perlin        PRL      0.2091     0.0004 2021-04-17 04:29:08.332
0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56         BUSD Token       BUSD      1.0000     0.0019 2021-04-17 04:29:08.332
0x7130d2A12B9BCbFAe4f2634d864A1Ee1Ce3Ead9c         BTCB Token       BTCB  62166.5517   116.3604 2021-04-17 04:29:08.332
...                                                       ...        ...         ...        ...                     ...
0xB6802C06A441BA63624751C53C7c0708b75F06EC          FinalMoon  FINALMOON      0.0651     0.0001 2021-04-17 04:29:08.332
0x2cF0DA1EB4165d73156CE1E32450e4A0E1c1791b        FairUnicorn       FUni      0.0000     0.0000 2021-04-17 04:29:08.332
0x5CeD26185f82B07E1516d0B013c54CcBD252A4Ad            Peaches      PEACH      0.1130     0.0002 2021-04-17 04:29:08.332
0x2bA64EFB7A4Ec8983E22A49c81fa216AC33f383A        Wrapped BGL       WBGL      0.1000     0.0002 2021-04-17 04:29:08.332
0x019bE1796178516e060072004F267B59a49A0801     Pepper Finance       PEPR      0.1819     0.0003 2021-04-17 04:29:08.332

[854 rows x 5 columns]
```

<br>

### PancakeSwap - Get pairs, liquidity, and more
```python
import defi.defi_tools as dft

pairs = dft.pcsPairs(as_df=False)
print(pairs)
```

```json
{""updated_at"": 1618645355351,
 ""data"": {""0x0E09FaBB73Bd3Ade0a17ECC321fD13a19e81cE82_0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c"": 
 	{""pair_address"": ""0xA527a61703D82139F8a06Bc30097cC9CAA2df5A6"",
	   ""base_name"": ""PancakeSwap Token"",
	   ""base_symbol"": ""Cake"",
	   ""base_address"": ""0x0E09FaBB73Bd3Ade0a17ECC321fD13a19e81cE82"",
	   ""quote_name"": ""Wrapped BNB"",
	   ""quote_symbol"": ""WBNB"",
	   ""quote_address"": ""0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c"",
	   ""price"": ""0.04503969270521829587"",
	   ""base_volume"": ""5473068.824002232134035221"",
	   ""quote_volume"": ""239997.1228321299572591638"",
	   ""liquidity"": ""1076144814.0632013827775993748053"",
	   ""liquidity_BNB"": ""2007551.221740467021401314""
	},
}
```

<br>

### PancakeSwap - Get token info
```python
import defi.defi_tools as dft
dft.pcsTokenInfo('cake')
```
```json
{""name"": ""PancakeSwap Token"",
 ""symbol"": ""Cake"",
 ""price"": ""24.03353223898417117634582253598019"",
 ""price_BNB"": ""0.04503467915973850237292527741402623""
}
```

<br>

### PancakeSwap - Get pair info
```python
import defi.defi_tools as dft
dft.pcsPairInfo('cake','bnb')
```

```json
{""pair_address"": ""0xA527a61703D82139F8a06Bc30097cC9CAA2df5A6"",
 ""base_name"": ""PancakeSwap Token"",
 ""base_symbol"": ""Cake"",
 ""base_address"": ""0x0E09FaBB73Bd3Ade0a17ECC321fD13a19e81cE82"",
 ""quote_name"": ""Wrapped BNB"",
 ""quote_symbol"": ""WBNB"",
 ""quote_address"": ""0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c"",
 ""price"": ""0.04503969270521829587"",
 ""base_volume"": ""5473068.824002232134035221"",
 ""quote_volume"": ""239997.1228321299572591638"",
 ""liquidity"": ""1076144814.0632013827775993748053"",
 ""liquidity_BNB"": ""2007551.221740467021401314""
}
```

<br>

### PancakeSwap - Simulate LP invest
```python
import defi.defi_tools as dft
dft.value_f, iloss = dft.iloss_simulate('cake','bnb', value=1000, base_pct_chg=50, quote_pct_chg=-25)
```
<img src=""images/imp_loss_3d.png"" width=600>




<br>

### About

- twitter user  [@JohnGalt_is_www](https://twitter.com/JohnGalt_is_www)",515,515,12,13,farming,"[api, blockchain, cex, coingecko, crypto, cryptocurrency, dapp, defi, dex, exchanges, farming, impermanent-loss, pancakeswap, stake]",00000
1102,Farm-Data-Relay-System,timmbogner,N/A,N/A,https://api.github.com/repos/timmbogner/Farm-Data-Relay-System,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C116:53F5:27F3B04:5225404:65223FC0.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,farming,"[N, /, A]",00000
1103,machinaris,guydavis,N/A,https://github.com/guydavis/machinaris,https://api.github.com/repos/guydavis/machinaris,"An easy-to-use WebUI for crypto plotting and farming.  Offers Bladebit, Gigahorse, MadMax, Chiadog and Plotman in a Docker container.  Supports Chia, MMX, Chives, Flax, and HDDCoin among others.","# machinaris

A Docker image for plotting and farming the Chia™ cryptocurrency on [one computer](https://github.com/guydavis/machinaris/wiki/Docker) or across [many](https://github.com/guydavis/machinaris/wiki/Workers).  Try the easy install using the [Launch Wizard](https://machinaris.app).

![Home](https://raw.githubusercontent.com/guydavis/machinaris-unraid/master/docs/img/machinaris_home.png)

For details, see your particular platform: [Windows](https://github.com/guydavis/machinaris/wiki/Windows), [Linux](https://github.com/guydavis/machinaris/wiki/Linux), [Macintosh](https://github.com/guydavis/machinaris/wiki/MacOS), [Unraid](https://github.com/guydavis/machinaris/wiki/Unraid), [Synology](https://github.com/guydavis/machinaris/wiki/Synology) and [others](https://github.com/guydavis/machinaris/wiki/Docker).  *For support, start a [Discussion](https://github.com/guydavis/machinaris/discussions) or join our [Discord](https://discord.gg/mX4AtMTt87)*.

## Plotting View

Plotting with the [MadMax](https://github.com/guydavis/machinaris/wiki/Madmax)/[Gigahorse](https://github.com/guydavis/machinaris/wiki/Gigahorse) and [Bladebit](https://github.com/guydavis/machinaris/wiki/Bladebit) plotters, with optional GPU, is managed by [Plotman](https://github.com/guydavis/machinaris/wiki/Plotman) through the Machinaris WebUI across many machines:

![Plotting](https://raw.githubusercontent.com/guydavis/machinaris-unraid/master/docs/img/machinaris_plotting.png)

Track your plotter machines performance as you fine-tune your plotting, graphed for each k-size you plot.

![Speed](https://raw.githubusercontent.com/guydavis/machinaris-unraid/master/docs/img/plotting_speed_chart.png)

Archive your new plots to their final destination on local drives or on remote harvesters (via rsync):

![Transfers](https://raw.githubusercontent.com/guydavis/machinaris-unraid/master/docs/img/archiving_transfers.png)

## Farming View

Machinaris bundles the [latest Chia™ version](https://github.com/Chia-Network/chia-blockchain/wiki/INSTALL#ubuntudebian) inside the Docker image.

![Farming](https://raw.githubusercontent.com/guydavis/machinaris-unraid/master/docs/img/machinaris_farming.png)

Machinaris also optionally farms your plots to other blockchains including [BPX](https://github.com/guydavis/machinaris/wiki/BPX), [Chives](https://github.com/guydavis/machinaris/wiki/Chives), [Ecostake](https://github.com/guydavis/machinaris/wiki/Ecostake), [Flax](https://github.com/guydavis/machinaris/wiki/Flax), [HDDCoin](https://github.com/guydavis/machinaris/wiki/HDDCoin), [MMX](https://github.com/guydavis/machinaris/wiki/MMX), and [many others](https://github.com/guydavis/machinaris/wiki/Forks).

## Alerts

[Chiadog](https://github.com/guydavis/machinaris/wiki/ChiaDog) provides monitoring of the log files, ensuring you get notified when important events occur across your farm:

![Alerts](https://raw.githubusercontent.com/guydavis/machinaris-unraid/master/docs/img/ChiaDog-1-Example.png)

[Drive health](https://github.com/guydavis/machinaris/wiki/Drives) is monitored as with `smartctl` on Linux. Notifications can be sent to e-mail, telegram, discord, slack, etc.

![Drives](https://raw.githubusercontent.com/guydavis/machinaris-unraid/master/docs/img/drives_grid.png)

## Setup

Simplified setup allows you to either import your existing key mnemonic or generate a new one directly in the Machinaris WebUI on first launch:

![Setup](https://raw.githubusercontent.com/guydavis/machinaris-unraid/master/docs/img/machinaris_setup.png)

That's for fullnode (default) and farmer modes. However, for [harvester](https://github.com/guydavis/machinaris/wiki/Docker#harvester-only) you only need the farmer's CA certificates and for [plotter](https://github.com/guydavis/machinaris/wiki/Docker#plotter-only) only your pool and farmer public keys.

Immediately on setup, a [fast blockchain download](https://github.com/guydavis/machinaris/wiki/Keys#blockchain-initialization) will get you synced and farming in just hours, rather than the days required by the official GUI client.

## Configuration

Configuration updating for Chia, Plotman, and Chiadog directly from the WebUI.  

![Settings](https://raw.githubusercontent.com/guydavis/machinaris-unraid/master/docs/img/machinaris_settings.png)

Summary and details for connections and blockchains highlights your farm's status:

![Connections](https://raw.githubusercontent.com/guydavis/machinaris-unraid/master/docs/img/geolocation.png)

## Container CLI

While the WebUI is useful for quick and easy access, you also have the full power of a shell commandline (CLI) in the running Machinaris container.  All binaries are available to execute advanced commands:

![ContainerCLI](https://raw.githubusercontent.com/guydavis/machinaris-unraid/master/docs/img/machinaris_container_cli.png)

To enter an in-container shell, just type `docker exec -it machinaris bash` from the host OS.

## Worker Management

When Machinaris is [deployed to multiple systems](https://github.com/guydavis/machinaris/wiki/Workers) on your LAN, you can control each plotter, harvester, and farmer - all from a central WebUI on the Machinaris controller.  Configuration, monitoring, and alerting are all available in this centralized portal.

![Workers](https://raw.githubusercontent.com/guydavis/machinaris-unraid/master/docs/img/machinaris_workers.png)

Each worker will run one Machinaris container per blockchain: Chia, Flax, MMX, etc as a fullnode, harvester, or plotter.

## REST API

Machinaris includes a complete [REST API](api/machinaris.postman_collection.json) offering opportunities for integration and extension with other tools.

![Workers](https://raw.githubusercontent.com/guydavis/machinaris-unraid/master/docs/img/machinaris_api.png)

All project [contributions](.github/CONTRIBUTING.md) and [feedback](https://github.com/guydavis/machinaris/discussions) are welcomed!  

## Trademark Notice
CHIA NETWORK INC, CHIA™, the CHIA BLOCKCHAIN™, the CHIA PROTOCOL™, CHIALISP™ and the “leaf Logo” (including the leaf logo alone when it refers to or indicates Chia), are trademarks or registered trademarks of Chia Network, Inc., a Delaware corporation. *There is no affliation between this Machinaris project and the main Chia Network project.*
",336,336,20,9,farming,"[bladebit, blockchain, chia, chia-network, chiadog, crypto, cryptocurrency, dashboard, distributed-computing, farming, madmax, plotman, plotting, webui]",00000
1104,ekylibre,ekylibre,N/A,N/A,https://api.github.com/repos/ekylibre/ekylibre,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C147:6B96:284F079:52F335F:65223FC0.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,farming,"[N, /, A]",00000
1105,openag_brain,OpenAgricultureFoundation,OpenAgricultureFoundation,https://github.com/OpenAgricultureFoundation/openag_brain,https://api.github.com/repos/OpenAgricultureFoundation/openag_brain,ROS package for controlling an OpenAg food computer,"Deprecated OpenAg software for the old PFC v2
============

This repository holds code that runs on the main computing board of an OpenAg
food computer (usually a Raspberry Pi). It runs on top of [ROS](http://www.ros.org)
and uses [CouchDB](http://couchdb.apache.org/) for data storage.

Installation & Getting Started
------------------------------

For information on how to install and run `openag_brain`, please see the
instructions outlined in the
[Getting Started](https://github.com/OpenAgInitiative/openag_brain/blob/master/doc/getting_started.rst)
documentation.

",222,222,79,54,farming,"[couchdb, farming, ros]",00000
1106,SuperGreenOS,supergreenlab,supergreenlab,https://github.com/supergreenlab/SuperGreenOS,https://api.github.com/repos/supergreenlab/SuperGreenOS,"🧠 SuperGreenOS home farming automation software for esp32, all in one package, and controllable from your smartphone, pc, mac, linux, toaster, plumbus, whatnot...","![SuperGreenLab](assets/sgl.png?raw=true ""SuperGreenLab"")

# Table of Contents

   * [SuperGreenOS](#supergreenos)
      * [Who is this document for](#who-is-this-document-for)
      * [Features](#features)
   * [Quickstart](#quickstart)
      * [Workspace setup](#workspace-setup)
         * [Esp-idf setup](#esp-idf-setup)
         * [Clone repo, build and run](#clone-repo-build-and-run)
         * [Connect to wifi](#connect-to-wifi)
      * [Basic concept](#basic-concept)
      * [Key / value](#key--value)
      * [Available keys](#available-keys)
         * [Core keys](#core-keys)
         * [Controller keys](#controller-keys)
         * [Box keys](#box-keys)
         * [Led keys](#led-keys)

![WeedAppPic](assets/weedapppic.png?raw=true ""WeedAppPic"")

# SuperGreenOS

SuperGreenOS provides most features used when growing cannabis, all in one package, and controllable from your smartphone, pc, mac, linux, toaster, plumbus, whatnot...

It is the official firmware for the [SuperGreenController](https://github.com/supergreenlab/SuperGreenController).

## Who is this document for

This document is for developpers that want to start playing with there controller's internal stuffs, or just setup their own hardware.
This repository is based on [SuperGreenOSBoilerplate](https://github.com/supergreenlab/SuperGreenOSBoilerplate), please read the doc here first.

## Features

Here's what it can (or will) do:

- Lights on and off schedules
- Up to 6 separate led channels (you can put multiple leds behind one channel)
- Up to 3 separate timers, for full-cycle setups (veg + flo)
- Monitoring a wide range of sensors
- Data sent to a MQTT server
- Produce alerts based on sensor values
- Allows remote control
- Manual ventilation control
- Automatic ventilation control based on temperature and humidity
- `Stretch` mode, allows to choose how much you want your plant to stretch or thicken
- `Sunglass` mode, so you don't burn your eyes when you work on your plants
- More to come..

This is the firmware that runs the [SuperGreenController](https://github.com/supergreenlab/SuperGreenController).

# Workspace setup

If you haven't already done it, you'll to setup esp-idf's toolchain and sdk.

They have a very good quickstart [here](https://docs.espressif.com/projects/esp-idf/en/latest/get-started/index.html).

## Clone repo, build and run

Now you should be able to clone and build the firmware:

```

git clone https://github.com/supergreenlab/SuperGreenOS.git
cd SuperGreenOS
./update_templates.sh config.controller.json
./update_htmlapp.sh config.controller.json
make -j4

```

The plug your controller or any esp32 based board and run the commands:

```

make -j4 flash monitor
./write_spiffs.sh

```

The first command flashes the firmware, the second writes the embedded admin interface on the tiny file system (~20KB available).

# How to use

Once the firmware is flashed you can access the controller's wifi network, once connected go to http://192.168.4.1/fs/app.html,
this will display the html embedded admin interface, which allows you to easily modify any of the controller's parameter.

![Admin](assets/admin.png?raw=true ""Admin"")


# Up-2-date dev environment setup 06/2020

## Python 2.7

### macos
```bash
brew install python@2
```

## ESP-IDF


```bash
mkdir -p $HOME/esp && cd $HOME/esp
git clone --recursive https://github.com/espressif/esp-idf.git esp-idf_release_3.3.1
cd esp-idf_release_3.3.1
git checkout 143d26aa49df524e10fb8e41a71d12e731b9b71d
```

Install Docs reference:
https://docs.espressif.com/projects/esp-idf/en/v3.3.2/get-started/index.html

```bash
python2.7 -m pip install --user -r $IDF_PATH/requirements.txt
```

Practically, a virtualenv is created in ~/.espressif where packages are installed and will be activated with the following addition to shell (.bashrc / .zshrc)

```bash
export IDF_PATH=$HOME/esp/esp-idf_release_3.3.1
source $IDF_PATH/export.sh
```

## ejs-cli
```bash
npm -g install ejs-cli
```

## mkspiffs

Please pay attention to *Build configuration name: generic* and version.

https://github.com/igrr/mkspiffs/releases

```bash
mkspiffs ver. 0.2.3
Build configuration name: generic
SPIFFS ver. 0.3.7-5-gf5e26c4
Extra build flags: (none)
SPIFFS configuration:
  SPIFFS_OBJ_NAME_LEN: 32
  SPIFFS_OBJ_META_LEN: 0
  SPIFFS_USE_MAGIC: 1
  SPIFFS_USE_MAGIC_LENGTH: 1
  SPIFFS_ALIGNED_OBJECT_INDEX_TABLES: 0
```

## cue

https://github.com/cuelang/cue/releases

```bash
cue version 0.0.8 darwin/amd64
```
",117,117,12,1,farming,"[alerts, dashboard, esp32, farming, firmware, growbox, homefarming, iot, leds, low-level, monitoring, mqtt, ota, sensors]",00000
1107,Token-Staking-dApp,ibnzUK,N/A,https://github.com/ibnzUK/Token-Staking-dApp,https://api.github.com/repos/ibnzUK/Token-Staking-dApp,"Blockchain Token Staking dApp built with React, Solidity, Truffle on Ethereum testnet, Polygon,  Binance Smart Chain, BSC, zkEVM, Coinbase Base Chain, BASE","
# Token Staking dApp <h1>

Working Demo: https://ibnz-staking.netlify.app/

#### Blockchain Token Staking dApp built with React, Solidity, on Ethereum Ganache, Ropsten, Rinkeby testnet networks <h6>



![Preview](src/assets/screenshot.png)
- 
 ## License and Legal Agreement 
IMPORTANT

This application and its code is NOT free to use, modify or resale. 
By using it you agree to not violate Plagiarism and Copyright Infringment

In order to use application code for modification or on own projects please contact info@ibnz.co.uk to obtain full licence. 

```
The idea of me including licensing and restrictions is mainly to protect users from reselling the software. The software was created for educational purposes and should be used mainly as a reference. 
However, there are a few very successful projects who are using my code without giving credit back. My application description is included on their whitepaper, where developers claim that this is the product they developed.  Some haven't even changed the UI :)

In order to stop scenarios like this, I included a little description where I mention the License for the software.  
The License is a written agreement from me that issues full rights to modify, resell, and use software and code without giving credit to the author or original repo. 

The License fee is 0.3 ETH
I charge everyone the same price and I found this to be a genuine and fair price to charge. 
 ```
-
 
## Changes
- [x] Added ERC20 TestToken 
- [x] Added Token Staking basic contract
- [x] Started testing 
* 
- [x] Updated Token Staking contract
- [x] Added ability to stake, unstake, redistribute
- [x] Implemented testing 
- [x] Added redistribution script
* 
- [x] Injected web3 and Metamask
- [x] Ability to detect if Metamask installed, logged, locked
- [x] Added skeletons for totalStaked, myStake, 
- [x] Added skeletons for Tester to Redistribute rewards and claim test tokens
* 
- [x] Added ability to load contracts
- [x] Fetching data from TokenStaking contract
- [x] Fetching balances
- [x] Stake, Unstake is now working
- [x] Redistribute rewards for (Admin only) is now working
* 
- [x] Implemented totalStaked
- [x] Implemented ability to claim test token(Tst) (FOR TESTING PURPOSE ONLY)
- [x] Added amount type validity check
- [x] Add ability for user to stake max 
* 
- [x] Added ability to listen to triggers .on transactionHash
- [x] Data automatically fetched after confirmation received
- [x] Added HDWallet provider and Infura setup
- [x] Deployed on ropsten and rinkeby
* 
- [x] Different staking pool implemented customStake/customUnstake
- [x] Implemented ability for admin to change custom pool APY value via script
* 
- [x] Implemented custom reward Pool redistribution
- [x] Contract Source Code Verified (Exact Match)
* 
- [x] Components split in to smaller
- [x] Added frontend logic for custom pools
- [x] Added UI Elements
- [x] Loaders fixed
* 
- [x] Added checks and restrictions for when Metamask is not connected
- [x] UI Optimised for mobiles
- [x] Production build uploaded to https://ibnz-staking.netlify.app/ for preview and test run





## Running instructions
* Copy project to your directory ( `git clone https://github.com/ibnzUK/Token-Staking-dApp` )
* Install project packages (`npm install`)
* Start project (`npm run start`)

## For Testing
* To run tests, navigate to /test/TokenStaking and run: `truffle test`
 
## For Admin Use
* There are prewritten scripts for Admin use either manually or on daily, weekly basic, ideally with predefined cronjob from the server.
* All scripts are located in `/scripts` folder
* To change APY % run: ```truffle exec scripts/changeAPY.js 0.137``` this script takes 1 argument (daily APY),  in this provided example, admin sets `0.137` daily APY 
 ![Preview](src/assets/screenshot2.png)
* To redistribute rewards from the console, run: ```truffle exec scripts/redistribute.js``` or provide argument `custom` if you want to redistribute custom rewards
  ![Preview](src/assets/screenshot3.png)


## Mocha testing output
 ``` Contract: TokenStaking
    TestToken deployment
      ✓ token deployed and has a name (246ms)
    TokenStaking deployment
      ✓ staking contract deployed and has a name (160ms)
      ✓ checking default APY value (179ms)
      ✓ checking custom APY value (128ms)
      ✓ staking contract has 500k TestTokens tokens inside (176ms)
    TokenStaking stakeTokens function
      ✓ users balance is correct before staking (126ms)
      ✓ checking total staked before any stakes (126ms)
      ✓ approving tokens, staking tokens, checking balance (1259ms)
      ✓ checking contract balance after staking (156ms)
      ✓ checking user balance inside contract (131ms)
      ✓ checking total staked (136ms)
      ✓ testing if user is staking at the moment (148ms)
      ✓ testing if user has staked (145ms)
    TokenStaking redistributeRewards function
      ✓ checking who can do redistribution (1059ms)
      ✓ checking TokenStaking balance (105ms)
      ✓ checking user balance (130ms)
    TokenStaking unstakeTokens function
      ✓ unstaking and checking users balance after unstake (468ms)
      ✓ checking total staked (132ms)
    TokenStaking [custom] staking/unstaking functions
      ✓ checking total custom staked before any stakes (132ms)
      ✓ checking users balance before staking (165ms)
      ✓ approving tokens, staking tokens, checking balance (1131ms)
      ✓ checking custom total staked (125ms)
      ✓ testing if user is staking at custom staking at the moment (147ms)
      ✓ testing if user has staked at custom staking (107ms)
      ✓ unstaking from custom staking and checking users balance  (535ms)
    Claim Tst
      ✓ trying to obtain 1000 test token (395ms)
    Change custom APY value
      ✓ checking who can change APY (1115ms)
      ✓ checking new custom APY value (146ms)
    Testing custom APY reward redistribution
      ✓ staking at customStaking (1299ms)
      ✓ redistributing rewards, checking who can redistribute (733ms)
      ✓ checking user balance after custom APY rewards  (111ms)
```      

## Deployoment to Ethereum network and Verification

For private Ethereum test network make sure Ganache is running on HTTP://127.0.0.1:7545
* First configure `truffle-config.js` with your infura key and mnemonic key. You can reate files in top dirrectory under names `.infuraKey` and `.secret` and paste your keys in there
* If you planning to publish your project on github make sure you `.gitignore` your keys 
* Compile smart contracts with `truffle compile`
* Deploy to your local (Ganache) network run: `truffle migrate --reset ` or for Ethereum test network (Rinkeby) run: `truffle migrate --network rinkeby --reset` or change `rinkeby` to `ropsten`
* To verify contract code on Ethereum test network add your Etherscan API key to `.ethKey` and for (Rinkeby) run: `truffle run verify TestToken --network rinkeby` or change `rinkeby` to `ropsten`
#
TokenStaking Smart Contract Address on Test Net
* Ropsten: Verified: https://ropsten.etherscan.io/address/0x0Fab2A018bB44DD2a6Ef7C55F057Dd9d9eC1B19F#contracts
* Rinkeby: Verified: https://rinkeby.etherscan.io/address/0xAf9352B33E9B08A86dD04fcD8533DbC75BD2c8d1#contracts
#
TestToken Contract Address on Test Net
* Ropsten: Verified: https://ropsten.etherscan.io/address/0x0190f80487179053eb85451454541644AbAf4048#contracts
* Rinkeby: Verified: https://rinkeby.etherscan.io/address/0xb54039DAC3C4ADdAC082e86a6e9C290E80af9488#contracts
#
Current Admin on Test Net
* Ropsten, Rinkeby : 0x3349ca399168dF1c0df96a49410F5F9940241AbC


# Warning, known security issue, use at own risk <h1> 

Front end functions to `Claim for 1000 Tst` token and `Redistribute rewards or Custom redistribution` are only for testing purpose and showcase of application. Do not include or use them in your final project.

![Preview](src/assets/screenshot4.png)

 


",97,97,6,1,farming,"[blockchain, blockchain-demo, blockchain-demos, blockchain-technology, dapp, defi, ethereum, ethereum-ganache, farming, ibnz, ibnz-developers, ibnzuk, redistribute-rewards, rinkeby, ropsten, solidity, stake, staking, truffle, web3]",00000
1108,openleverage-contracts,OpenLeverageDev,OpenLeverageDev,https://github.com/OpenLeverageDev/openleverage-contracts,https://api.github.com/repos/OpenLeverageDev/openleverage-contracts,"OpenLeverage Smart Contracts, including lending pools, margin trade, treasury, farming pool, DAO-based governance, OLE ERC-20 token, and time-weighted vote escrow xOLE components.","[![Node.js CI](https://github.com/OpenLeverageDev/openleverage-contracts/actions/workflows/node.js.yml/badge.svg?branch=main)](https://github.com/OpenLeverageDev/openleverage-contracts/actions/workflows/node.js.yml)


OpenLeverage Protocol
=================

The OpenLeverage Protocol comprises Smart Contracts in Solidity for permissionless lending and borrowing assets for leverage trading with DEX integration.

- Through provided API, anyone can create a pair of lending pools for a specific token pair.
- LToken, similar to CToken of Compound, is an interest-bearing ERC-20 token to be received by the fund supplier when they *supply* ERC-20 tokens to the lending pools. The LToken contracts track these balances and algorithmically set interest rates with a kinked model for borrowers.
- All margin trades will be executed against the liquidity pool of DEX, like Uniswap.
- Risk is calculated with real-time price from AMM.
- Positions are protected with OnDemand Oracle utilizing TWAP from AMM.

Before starting this repo, please read the [OpenLeverage Documentation](https://docs.openleverage.finance), describing how OpenLeverage works.

Installation
------------
To compile OpenLeverage Smart Contracts, pull the repository from GitHub and install its dependencies. You will need [npm](https://docs.npmjs.com/cli/install) installed.

    git clone https://github.com/OpenLeverageDev/openleverage-contracts.git
    cd openleverage-contracts
    npm install
    truffle compile

Testing
-------
To run the tests, you will need [ganache-cli](https://github.com/trufflesuite/ganache-cli):

    npm install -g ganache-cli

Truffle contract tests are provided under the [tests directory](https://github.com/OpenLeverageDev/openleverage-contracts/tree/main/test). run:
 
    truffle test

Audits
----------
- [Certik Jun 2021](/audits/REP-OpenLeverage-Protocol-2021-06-24.pdf)
- [PeckShield Sep 2021](https://github.com/peckshield/publications/blob/master/audit_reports/PeckShield-Audit-Report-OpenLeverage-v1.0.pdf)
- [PeckShield Dec 2021](https://github.com/peckshield/publications/blob/master/audit_reports/PeckShield-Audit-Report-OpenLeverage-1.0.1.pdf)
- [Code4Rena - Mar 2022](https://code4rena.com/reports/2022-01-openleverage)
- [PeckShield Nov 2022](https://github.com/peckshield/publications/blob/master/audit_reports/PeckShield-Audit-Report-OpenLeverage-v1.0.pdf)

Licensing
----------
The primary license for OpenLeverage is the Business Source License 1.1 (`BUSL-1.1`), see [`LICENSE`](./LICENSE), effectively a time-delayed GPL-2.0-or-later license. The license limits the use of the OpenLeverage source code in a commercial or production setting for up to two years, at which point it will convert to a GPL license into perpetuity.

Discussion
----------

For questions about the protocol, visit us on [Discord](https://discord.gg/openleverage) to discuss.

For security concerns, please visit [OpenLeverage Security](https://docs.openleverage.finance/main/dev/security) or email [security@openleverage.finance](mailto:security@openleverage.finance).

_© Copyright 2021, OpenLeverage Team
",82,82,7,20,farming,"[defi, dex, erc20, farming, lending, margin-trading]",00000
1109,LiteFarm,LiteFarmOrg,N/A,N/A,https://api.github.com/repos/LiteFarmOrg/LiteFarm,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1D1:1E37:28F2B0:552ED5:65223FC9.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,farming,"[N, /, A]",00000
1110,harvest_helper,damwhit,N/A,N/A,https://api.github.com/repos/damwhit/harvest_helper,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1C7:4C24:2B63AC3:5904ADE:65223FCA.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,farming,"[N, /, A]",00000
1111,proSeed,stijnwop,N/A,https://github.com/stijnwop/proSeed,https://api.github.com/repos/stijnwop/proSeed,ProSeed modification for Farming Simulator 2022,"# ProSeed for Farming Simulator 22
![For Farming Simulator 22](https://img.shields.io/badge/Farming%20Simulator-22-10BEFF.svg) [![Releases](https://img.shields.io/github/release/stijnwop/proSeed.svg)](https://github.com/stijnwop/proSeed/releases)

###### Readme in German can be found [here](README-de.md).

ProSeed adds a bundle of functionality to enhance sowing machines in the game.
With ProSeed you're able to create tramlines (with optional pre-emergence marking), halfside shutoff for creating the perfect tramlines, fertilizer shutoff and active feedback with sounds.

## Publishing
Only Wopster is allowed to publish any of this code as a mod to any mod site, or file sharing site. The code is open for your own use, but give credit where due. I will not accept support for any 'version' of the ProSeed that is obtained from a sketchy mod page. Versioning is controlled by me and not by any other page. This confuses people and really holds back the development which results in no fun for me!


## Special thanks to
Special thanks to gotchTOM and webalizer for allowing me to redo the mod for FS19/FS22!

## Warning!
Please be aware that this is a ***DEVELOPMENT VERSION***!
* The development version can break the game or your savegame!
* The development version doesn´t support the full feature package yet!

#### Multiplayer
This version should also work in Multiplayer.

# Installation / Releases
Currently the development version is only available via GitHub. When a official release version is avaiable you can download the latest version from the [release section](https://github.com/stijnwop/proSeed/releases).

> _Please note: if there's no release version available it means there's no official release yet._

All official releases will be available at the offical Farming Simulator ModHub.

For installing the release:

Windows: Copy the `FS22_proSeed.zip` into your `My Games\FarmingSimulator2022\mods` directory.

## Documentation

### Overview
When a sowing machine is attached the following HUD will be displayed.
![Image](docs/images/hud.png)

In the table below there's a description on what every bottom does.

| Number | Description |
| ------------- | ------------------ |
| 1 | Toggle pre-emergence marking (this only toggles the visually cultivated lines and not the actual tramline creation!) |
| 2 | Toggle fertilizer usage |
| 3 | Change the tramline mode (manual, semi and auto) |
| 4 | Change the tramline distance (to fit your followup machines e.g. spreader and sprayers) |
| 5 | Minimize and maximize the HUD display |
| 6 | Change track number (only in semi mode) |
| 7 | Toggle halfside shutoff mode |
| 8 | Toggle interactive sounds |

> **NOTE: Some functions / buttons are only available for certain modes, they will be marked grey when disabled.**

Further there are some visuals that help you guide your seeding process. In the top bar the seed usage and hectare counters are displayed. In order to reset them you can click on the reset button.
In the middle of the HUD the working width of your seeder is displayed together with the marker state. The big orange bar on the bottom displays if the tramline is active or if a part of the seeder is shutoff.

You can position the HUD to any position you desire and the position will be saved.

### Usage

#### Modes
In the table below the possible modes are explained. You can toggle the modes by clicking on the arrows shown at number 3 of the HUD image from above.

| Mode | Description | Supports helper |
| ------------- | ------------------ | ------------------ |
| Manual | In `Manual` mode the player has full freedom whether to create the tramline or not by simply pressing the buttons `KEY_lctrl + KEY_r`. The option to configure distance or counting tracks are disabled. | no
| Semi | In `Semi` mode the player has to configure the tramline distance by clicking on the arrows (increment is based on the working width). The tracks are counted automatically when the sowing machine is lifted, you can manually correct this in the HUD. Tramlines are created automatically. | yes
| Auto | In `Auto` mode the player only has to configure the tramline distance by clicking on the arrows (increment is based on the working width). Correct the working width of GPS when needed and the tracks will be counted automatically by the GuidanceSteering mod. Tramlines are created automatically. | no

> **NOTE: In order to use the mode `Auto` the [GuidanceSteering](https://www.farming-simulator.com/mod.php?mod_id=140328&title=fs2019) mod is required!**

#### How to start
If the number of total amount of lanes is even, always start with a half track otherwise the distance to the edge of the field will not be valid.
E.g. in the HUD above you have a total of 2 lanes `x / 2` so in this case you start with a half line.

Use the halfside shutoff function for creating the first track.
When using GuidanceSteering, the first track of GS must be aligned at the edge of the field and set to zero (`ALT + HOME`).
For the second track shift the GS track by half the working width towards the field edge.

A description of possible working widths and distances is given in this neat PDF file: [proSeed.pdf](https://github.com/stijnwop/proSeed/raw/master/docs/ProSeed.pdf) (Page 1: German; Page 2: English)

#### Using tramline animation
You can trigger an animation once the tramlines are active like so:

```xml
<vehicle>
    <proSeed>
       <tramLinesAnimation name=""tramLines"" speed=""1""/>
    </proSeed>

    <animations>
       <animation name=""tramLines"">
          <part node=""NODE_NAME"" startTime=""0"" endTime=""1"" startTrans=""0 1 0"" endTrans=""0 0 0"" />
       </animation>
    </animations>
</vehicle>
```

## Copyright
Copyright (c) 2022 [Wopster](https://github.com/stijnwop).
All rights reserved.
",78,78,20,15,farming,"[farming, farming-simulator-19, farming-simulator-22, farmingsimulator, fs, fs19, fs22, proseed, seeding, wopster]",00000
1112,lawn_tractor,ros-agriculture,N/A,N/A,https://api.github.com/repos/ros-agriculture/lawn_tractor,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1D7:4C24:2B63C2B:5904DE5:65223FCB.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,farming,"[N, /, A]",00000
1113,FSG_Mod_Assistant,FSGModding,N/A,https://github.com/FSGModding/FSG_Mod_Assistant,https://api.github.com/repos/FSGModding/FSG_Mod_Assistant,Farming Simulator 22 Mod Manager.,"# FSG Mod Assistant

[![License: ISC](https://img.shields.io/github/license/FSGModding/FSG_Mod_Assistant?color=%231182c3)](https://opensource.org/licenses/ISC) ![GitHub top language](https://img.shields.io/github/languages/top/FSGModding/FSG_Mod_Assistant) [![GitHub release (latest by date)](https://img.shields.io/github/v/release/FSGModding/FSG_Mod_Assistant)](https://github.com/FSGModding/FSG_Mod_Assistant/releases/latest) ![GitHub Release Date](https://img.shields.io/github/release-date/FSGModding/FSG_Mod_Assistant?color=%20fedcba) [![Crowdin](https://badges.crowdin.net/fsg-mod-assistant/localized.svg)](https://crowdin.com/project/fsg-mod-assistant) [![Node.js CI](https://img.shields.io/github/actions/workflow/status/FSGModding/FSG_Mod_Assistant/test.yml?logo=github&label=tests)](https://github.com/FSGModding/FSG_Mod_Assistant/actions/workflows/test.yml) [![GitHub issues](https://img.shields.io/github/issues/FSGModding/FSG_Mod_Assistant)](https://github.com/FSGModding/FSG_Mod_Assistant/issues)

___This is a mod folder switcher with extra tools___

- Check mods to ensure that they (probably) work in game
- Check a collection against a save game to see what is used and what is not
- Resolve version differences of mods between collections

__NOTE:__ This will only run under Windows 10 or 11 - If you are still using Windows 7/8/8.1, you really should fix that, but in the meantime, you can run the last version that was supported, [v2.1.4](https://github.com/FSGModding/FSG_Mod_Assistant/releases/tag/v2.1.4)

[Full Documentation Site](https://fsgmodding.github.io/FSG_Mod_Assistant/)

## What this does

At it's core functionality, this is a file manager, and it has the ability to edit FS22's `gameSettings.xml` file to set one of your mod collections as the mod location the game reads.

## At A Glance

![main window](docs/img/mainarea-999.webp)

## What is a Broken Mod?

- If a mod file is named incorrectly and won't load in the game.
  - Suggest it might be a copy if the name looks like a copy
    - and what the name probably should be
  - Suggest you extract it if it looks like a collection of mods

- If a mod is not properly zipped.
  - Suggest that you zip it up
  - Suggest you move the contents of the folder if it looks like a mod pack
  - Suggest you remove the folder if it looks like garbage

- If a mod is not intended for FS22 (e.g. FS19 & FS17 mods)
  - Warn that you can't use it with this version

- If a file exists that is not a mod at all
  - Suggest you remove the file

## Usage

Download the installer for your platform from the [Releases](https://github.com//FSGModding/FSG_Mod_Assistant/releases) page - the program will install with 1-click, and auto-run when it's ready.

### Download options

Builds are available for the following:

[Latest Release](https://github.com/FSGModding/FSG_Mod_Assistant/releases/latest)

- __win x64 Installer__ : with auto updating
- __win x64 Portable__ : no need to install, but no auto updating

### Install Video

[![Install Video](https://markdown-videos.deta.dev/youtube/elzFhp2EBEs)](https://youtu.be/elzFhp2EBEs)

### Updating

Either download the new version and install over top, or, the program will self-update itself every time you start it (downloads silently, installs on demand or at exit)

## Translations and Localizations

Some effort has been made to produce a version of Mod Assistant in your preferred language, but as the creators only speak english, we need help on this.  We accept we have an active [CrowdIn](https://crowdin.com/project/fsg-mod-assistant) project
",54,54,10,12,farming,"[farming, farming-simulator, farming-simulator-22, fs22, mod]",00000
1114,staking-platform-fixed-apy,Aboudjem,N/A,https://github.com/Aboudjem/staking-platform-fixed-apy,https://api.github.com/repos/Aboudjem/staking-platform-fixed-apy,"Staking platform with Lockup and fixed APY, duration, and max stake. Optimized and simple implementation","# StakingPlatform

![ImmuneBytesAudits](https://img.shields.io/badge/ImmuneBytes-Passed-brightgreen?logo=springsecurity)
![HackenAudits](https://img.shields.io/badge/Hacken-Passed-brightgreen?logo=springsecurity)
[![Coverage Status](https://coveralls.io/repos/github/Aboudjem/staking-platform-fixed-apy/badge.svg?branch=features/actions)](https://coveralls.io/github/Aboudjem/staking-platform-fixed-apy?branch=features/actions)
[![MythXBadge](https://badgen.net/https/api.mythx.io/v1/projects/3c2be13e-9b64-42ac-9100-e27db7c8d17a/badge/data?cache=300&icon=https://raw.githubusercontent.com/ConsenSys/mythx-github-badge/main/logo_white.svg)](https://docs.mythx.io/dashboard/github-badges)
![Solidity](https://shields.io/badge/solidity-0.8.9-blue?logo=solidity)

Fixed APY Staking platform with Lockup and fixed APY, duration and max stake

## Workflow

- Deploy StakingPlatform with the appropriate parameters (See _Constructor_ below)
- Users should deposit their tokens before or during the staking period
- Run `Start()` function launch the staking
- Users can claim their rewards using `claimRewards()`
- Once staking is over users can withdraw their initial deposit using `withdraw()` (`withdraw()` calls `claimRewards()`)

## Constructor

```
   constructor(
        address _token,
        uint8 _fixedAPY,
        uint _durationInDays,
        uint _lockupDurationInDays,
        uint _maxStake,
    )
```

- Address of the ERC20 Token to be used by the Staking platform
- fixed APY rates (must be consistent with the maxStake)
- Duration of the staking (e.g, 365 == 1year)
- Lockup duration (Impossible to withdraw until the lockup period is finish)
- Max tokens that can be deposited by stake holders

## Examples

- Staking platform is deployed with 25% of APY
- _User1_ approve `100000 TKN`
- _User1_ deposit `100000 TKN`
- Staking platform starts
- after 1 day User1 can claim `~68.4750 TKN`
- after 1 year User1 can claim `25000 TKN`, 25% of 100,000 TKN

## `StakingPlatform`

### `constructor(address _token, uint8 _fixedAPY, uint256 _durationInDays, uint256 _lockDurationInDays, uint256 _maxAmountStaked)` (public)

constructor contains all the parameters of the staking platform

all parameters are immutable

### `startStaking()` (external)

function that start the staking

set `startPeriod` to the current current `block.timestamp`
set `lockupPeriod` which is `block.timestamp` + `lockupDuration`
and `endPeriod` which is `startPeriod` + `stakingDuration`

### `deposit(uint256 amount)` (external)

function that allows a user to deposit tokens

user must first approve the amount to deposit before calling this function,
cannot exceed the `maxAmountStaked`
`endPeriod` to equal 0 (Staking didn't started yet),
or `endPeriod` more than current `block.timestamp` (staking not finished yet)
`totalStaked + amount` must be less than `stakingMax`
that the amount deposited should greater than 0

### `withdraw(uint256 amount)` (external)

function that allows a user to withdraw its initial deposit

`block.timestamp` must be higher than `lockupPeriod` (lockupPeriod finished)
`amount` must be higher than `0`
`amount` must be lower or equal to the amount staked
withdraw reset all states variable for the `msg.sender` to 0, and claim rewards
if rewards to claim

### `withdrawAll()` (external)

function that allows a user to withdraw its initial deposit

must be called only when `block.timestamp` >= `lockupPeriod`
`block.timestamp` higher than `lockupPeriod` (lockupPeriod finished)
withdraw reset all states variable for the `msg.sender` to 0, and claim rewards
if rewards to claim

### `withdrawResidualBalance()` (external)

claim all remaining balance on the contract
Residual balance is all the remaining tokens that have not been distributed
(e.g, in case the number of stakeholders is not sufficient)

Can only be called one year after the end of the staking period
Cannot claim initial stakeholders deposit

### `amountStaked(address stakeHolder) → uint256` (external)

function that returns the amount of total Staked tokens
for a specific user

### `totalDeposited() → uint256` (external)

function that returns the amount of total Staked tokens
on the smart contract

### `rewardOf(address stakeHolder) → uint256` (external)

function that returns the amount of pending rewards
that can be claimed by the user

### `claimRewards()` (external)

function that claims pending rewards

transfer the pending rewards to the `msg.sender`

### `_calculateRewards(address stakeHolder) → uint256` (internal)

calculate rewards based on the `fixedAPY`, `_percentageTimeRemaining()`

the higher is the precision and the more the time remaining will be precise

### `_percentageTimeRemaining(address stakeHolder) → uint256` (internal)

function that returns the remaining time in seconds of the staking period

the higher is the precision and the more the time remaining will be precise
",52,52,3,1,farming,"[farming, smart-contracts, solidity, staking]",00000
1115,OpenOlitor,OpenOlitor,OpenOlitor,https://github.com/OpenOlitor/OpenOlitor,https://api.github.com/repos/OpenOlitor/OpenOlitor,Administration platform for Community Supported Agriculture groups,"[![License: AGPL v3](https://img.shields.io/badge/License-AGPL%20v3-blue.svg)](https://www.gnu.org/licenses/agpl-3.0)

## OpenOlitor - Willkommen bei OpenOlitor

Dieses Repository wird für die Erfassung und Planung von [Issues](https://github.com/OpenOlitor/OpenOlitor/issues) verwendet.

[Weitere Informationen zu OpenOlitor](https://github.com/OpenOlitor)

## OpenOlitor - Bienvenue chez OpenOlitor

Ce repository et utilisé pour le traçage de [tâche et problèmes (issues)](https://github.com/OpenOlitor/OpenOlitor/issues).

[Plus d'informations concernant OpenOlitor](https://github.com/OpenOlitor)

## OpenOlitor - Welcome at OpenOlitor

This repository is used to track our [issues](https://github.com/OpenOlitor/OpenOlitor/issues).

[More information on OpenOlitor](https://github.com/OpenOlitor)

## Lizenz / License
Code bis April 2018 wurde unter [GPL v3](LICENSE_legacy) publiziert. Ab April 2018 wird OpenOlitor unter [AGPL v3](LICENSE_legacy) veröffentlicht.

Le code produit jusqu'en avril 2018 à été publié sous [GPL v3](LICENSE_legacy). Dès ce moment nous publion sous [AGPL v3](LICENSE).

Until april 2018 we have published all code under [GPL v3](LICENSE_legacy). After this moment we have switched to [AGPL v3](LICENSE).

",44,44,20,46,farming,"[acp, climate-change, csa, farming, nonprofit, rvl, solawi]",00000
1116,PUBG-Battlepoint-FarmBot,ClintOxx,N/A,https://github.com/ClintOxx/PUBG-Battlepoint-FarmBot,https://api.github.com/repos/ClintOxx/PUBG-Battlepoint-FarmBot,A simple easy to use working AFk battle point (bp) farming bot for player unknown battle grounds.,"# AfK-Farm-Bot
Bot/script for Playerunknown Battlegrounds (PUBG) that AFK farms battlepoints(bp)


# The bot no longer works as of April 2018. I rolled back the repo to my last commmit and I am archiving the repo since no further changes will be made. It was a fun ride and I hope everyone got a lot of BP out of it.

I plan on going back and adding doc strings/comments explaining each function/class



![alt text](https://i.imgur.com/7gAKF2m.gif ""Screenshot"")



# Features
* Auto jump from plane at random time
* Runs for random amount of time
* Lays down at the end of running
* Anti Drown safety
* Leaves match a few minutes after it starts ands finds a new match
* Around 6k per 8 hours without you having to do anything ( 42k bp a week @ 8 hours a day, all the crates + sell them on steam)
* Safe, no has been banned for AFK farming



# Directions for Farmer Bot

* Download/clone the files here and open the zip. Follow the instructions in the requirements.txt file.

* Close PUBG if you have it open before you start.

* Make sure PUBG is in full screen windowed

* run botgui.py (by double clicking it or opening cmd and runnin gpyhton botgui.py)

* Pick your screen resolution and hit start!

If you have any errors/problems:

Check the faq file included in the download or check the #faq-and-troubleshooting channel in the discord

# Donate

If you end up making some money off of the boxes you farm, feel free to return the favor and donate to support development

Bitcoin address : 16mCfoqBuvymgVVktCAPp1W6HNL3zoMiFq

ETH: 0x63e41bd08392d69ef698c86af2f83e4e1fcf55a5


# Future plans

I plan to keep updating the bot with theses functions:

* Auto fighting afk players so you can leave earlier(long term) 

* Selecting the server

* Selecting the random jump time 

* Making the bot not freeze up as much while running

[![HitCount](http://hits.dwyl.io/{clintoxen}/{PUBG-Afk-FarmBot}.svg)](http://hits.dwyl.io/{clintoxen}/{PUBG-Afk-FarmBot})
",43,43,16,3,farming,"[afk, afk-battlepoint, battle, battlegrounds, battlepoint, bot, bp, download, farm, farmer, farming, game, player, playerunknown, pubg, python, python36, script, unknown]",00000
1117,Crop-Recommender,gabbygab1233,N/A,https://github.com/gabbygab1233/Crop-Recommender,https://api.github.com/repos/gabbygab1233/Crop-Recommender,AI Application that can predict the most suitable crops to grow in particular farm based on various parameters.,"[![Hits](https://hits.seeyoufarm.com/api/count/incr/badge.svg?url=https%3A%2F%2Fgithub.com%2Fgabbygab1233%2FCrop-Recommendation&count_bg=%23161716&title_bg=%23095202&icon=leaflet.svg&icon_color=%23E7E7E7&title=Crop+Recommender&edge_flat=true)](https://hits.seeyoufarm.com)

# Crop Recommendation Using Machine Learning

Crop recommendation is one of the most important aspects of precision agriculture. Crop recommendations are based on a number of factors. Precision agriculture seeks to define these criteria on a site-by-site basis in order to address crop selection issues. While the ""site-specific"" methodology has improved performance, there is still a need to monitor the systems' outcomes.Precision agriculture systems aren't all created equal. However, in agriculture, it is critical that the recommendations made are correct and precise, as errors can result in significant material and capital loss.


<p align=""center"">
<img src=""https://www.opendei.eu/wp-content/uploads/2020/11/img-Yanewn0ORWCx4Jlm-w800.jpg"" />
</p>
This application will assist farmers in increasing agricultural productivity, preventing soil degradation in cultivated land, reducing chemical use in crop production, and maximizing water resource efficiency.

# [Dataset]()
This dataset was build by augmenting datasets of rainfall, climate and fertilizer data available for India.

### [Attributes information:]()

* **N** - Ratio of Nitrogen content in soil
* **P** - Ratio of Phosphorous content in soil
* **K** - Ratio of Potassium content in soil
* **Temperature** -  temperature in degree Celsius
* **Humidity** - relative humidity in %
* **ph** - ph value of the soil
* **Rainfall** - rainfall in mm 

### [Experiment Results:]()
* **Data Analysis**
    * All columns contain outliers except for N.
 * **Performance Evaluation**
    * Splitting the dataset by 80 % for training set and 20 % validation set.
 * **Training and Validation**
    * GausianNB gets a higher accuracy score than other classification models.
    * GaussianNB ( 99 % accuracy score )
 * **Performance Results**
    * Training Score: 99.5%
    * Validation Score: 99.3%

 
# Demo
Live Demo: https://ai-crop-recommender.herokuapp.com/

![](https://i.imgur.com/TnsSPQy.png)

# References
* https://www.prolim.com/crop-recommendation-system-using-machine-learning-for-digital-farming/
* https://www.irjet.net/archives/V4/i12/IRJET-V4I12179.pdf
* http://sersc.org/journals/index.php/IJAST/article/view/30399
* https://www.researchgate.net/publication/345247916_Crop_Plantation_Recommendation_using_Feature_Extraction_and_Machine_Learning_Techniques
* https://ieeexplore.ieee.org/document/8768790
* https://towardsdatascience.com/farmeasy-crop-recommendation-portal-for-farmers-48a8809b421c
* http://agri.ckcest.cn/ass/8185d605-6c4d-4d8a-b280-c867c2304d42.pdf
* https://www.kaggle.com/atharvaingle/crop-recommendation-dataset
",39,39,2,2,farming,"[ai, ai-in-agriculture, crop-recommender, farming, machine-learning, modeling, prediction, python, soil, streamlit-application]",00000
1118,paraspace-core,para-space,para-space,https://github.com/para-space/paraspace-core,https://api.github.com/repos/para-space/paraspace-core,Para-Space NFT Money Market,"# Para-Space NFT Money Market

<div align=""center"">

[![GitHub last commit](https://img.shields.io/github/last-commit/para-space/paraspace-core)](https://github.com/para-space/paraspace-core/commits/main)
[![Codecov](https://codecov.io/gh/para-space/paraspace-core/branch/main/graph/badge.svg)](https://codecov.io/gh/para-space/paraspace-core)
[![CI](https://github.com/para-space/paraspace-core/workflows/CI/badge.svg)](https://github.com/para-space/paraspace-core/actions)
[![License](https://img.shields.io/github/license/para-space/paraspace-core?color=green)](https://github.com/para-space/paraspace-core/blob/main/LICENSE)

[![Twitter URL](https://img.shields.io/twitter/follow/ParaSpace_NFT?style=social)](https://twitter.com/ParaSpace_NFT)
[![Telegram](https://img.shields.io/badge/Telegram-gray?logo=telegram)](https://t.me/parallelfi_community)
[![Medium](https://img.shields.io/badge/Medium-gray?logo=medium)](https://medium.com/@paraspace)
[![Discourse](https://img.shields.io/badge/Forum-gray?logo=discourse)](https://discourse.para.space)

This repository contains the core smart contracts for the Para-Space v1 Protocol.  
For higher level contracts, see the [ paraspace-periphery](https://github.com/para-space/paraspace-periphery)
repository.

</div>

<div align=""center"">

<strong>Instant credit market for NFT and ERC20 assets</strong>

[Website](https://para.space) |
[White Paper](https://docs.para.space/para-space/para-space/readme) |
[API Docs](https://api-docs.para.space) |
[Chat](https://discord.com/invite/buKKx4dySW)

</div>

## Learn More

Click the following guides for more details:

- [DEVELOPER GUIDE](https://github.com/para-space/paraspace-core/blob/main/docs/DEVELOPER-GUIDE.md)

## Open Source Credits

We would like to thank the following projects.

- [Aave](https://github.com/aave/aave-v3-core)
- [Uniswap](https://github.com/Uniswap/v3-core)
- [Seaport](https://github.com/ProjectOpenSea/seaport)
- [BendDAO](https://github.com/BendDAO)
- [Blur.io](https://blur.io)
",39,39,7,30,farming,"[farming, lending, nft-marketplace, uniswap-v3]",00000
1119,coctohug,raingggg,N/A,https://github.com/raingggg/coctohug,https://api.github.com/repos/raingggg/coctohug,"Coctohug - Manage dozens of chia forks mining from a web browser! Nice localization with support of dozens of languages. Runs on Linux, Windows, MacOS, and more...","{'message': 'Not Found', 'documentation_url': 'https://docs.github.com/rest/repos/contents#get-repository-content'}",35,35,2,5,farming,"[aedge, blockchain, btcgreen, cactus, cryptodoge, dashboard, ethgreen, farming, greendoge, lucky, maize, pipscoin, shibgreen, skynet, staicoin, stor, tranzact, venidium, webui]",00000
1120,TwitchPointsFarmer,vin350,N/A,https://github.com/vin350/TwitchPointsFarmer,https://api.github.com/repos/vin350/TwitchPointsFarmer,"This project aims to help those people who keeps many Twitch livestreams open 24/7 farming those channel points. It helps them by providing a costless interface, and by making possible farming multiple accounts in multiple streams at once.","# TwitchPointsFarmer

This project aims to help those people who keeps many Twitch livestreams open 24/7 farming those *channel points*. 
It helps them by providing a costless interface, and by making possible farming multiple accounts in multiple streams at once.

## How to Install

To install the app, follow these instructions:

1. Download the `setup.exe` from the [latest release](https://github.com/vin350/TwitchPointsFarmer/releases/latest) of the project.
2. Open the `setup.exe`.
3. After the installation is complete, you can start the app by clicking the `TwitchPointsFarmer.exe` icon in the desktop or in the Start Menu.

## How to use

Fist view of the app:

<img src=""https://i.imgur.com/V9LNAnz.png"" width=80% height=80% />

1. First, add all the channel names that will be ""viewed"" on the top left menu.
2. Now add your username and authentication token(can be acessed [here](https://twitchapps.com/tmi/)) on the bottom right menu.
<img src=""https://i.imgur.com/tHINvFQ.png"" width=80% height=80% />

3. Click Start and leave it running. 
<img src=""https://i.imgur.com/vAdWPNn.png"" width=80% height=80% />

4. Enjoy those effortless points!

## Issues and Contributing

If you discover any issues, questions or ideas, please report/ask/say them [here](https://github.com/vin350/TwitchPointsFarmer/issues). And, if you want to contribute or add a new feature, feel free to fork the project [here](https://github.com/vin350/TwitchPointsFarmer/fork) and create a pull request after you've done your changes. 
",30,30,1,2,farming,"[farming, idle, twitch, twitch-api, twitch-bot]",00000
1121,nativescript-fabric,hypery2k,N/A,https://github.com/hypery2k/nativescript-fabric,https://api.github.com/repos/hypery2k/nativescript-fabric,Handling App URLs in nativescript apps,"# NativeScript Fabric Plugin ![apple](https://cdn3.iconfinder.com/data/icons/picons-social/57/16-apple-32.png) ![android](https://cdn4.iconfinder.com/data/icons/logos-3/228/android-32.png)

[![Greenkeeper badge](https://badges.greenkeeper.io/hypery2k/nativescript-fabric.svg)](https://greenkeeper.io/)
[![Build Status](https://travis-ci.org/hypery2k/nativescript-fabric.svg?branch=master)](https://travis-ci.org/hypery2k/nativescript-fabric)
[![Donate with Bitcoin](https://martinreinhardt-online.de/assets/img/button-badge-bitcoin.svg)](bitcoin:3NKtxw1SRYgess5ev4Ri54GekoAgkR213D)

[![npm version](https://badge.fury.io/js/nativescript-fabric.svg)](http://badge.fury.io/js/nativescript-fabric)
[![Maintainability](https://api.codeclimate.com/v1/badges/85a5fd560b331cd8922e/maintainability)](https://codeclimate.com/github/hypery2k/nativescript-fabric/maintainability)

[![NPM](https://nodei.co/npm/nativescript-fabric.png?downloads=true&downloadRank=true&stars=true)](https://nodei.co/npm/nativescript-fabric/)

<a name=""donation""></a>
> Feel free to **donate**
>
> <a target=""_blank"" href=""https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&hosted_button_id=H8TR8246RCDJG"">
> <img alt="""" border=""0"" src=""https://www.paypalobjects.com/en_US/i/btn/btn_donate_SM.gif""/>
> </img></a>
> Or donate Bitcoins: bitcoin:3NKtxw1SRYgess5ev4Ri54GekoAgkR213D
>
> [![Bitcoin](https://martinreinhardt-online.de/bitcoin.png)](bitcoin:3NKtxw1SRYgess5ev4Ri54GekoAgkR213D)
>
> Also via [greenaddress](https://greenaddress.it/pay/GA3ZPfh7As3Gc2oP6pQ1njxMij88u/)


# Usage




## Installation


Go to [Crashlytics](https://fabric.io/kits/ios/crashlytics/install) and pick of the needed API-Key and API-Secret:

![](etc/crashlytics_configuration.png)

Create a file fabric.json in the project root folder and add the API-Key and API-Secret: 

```
{
    ""using_ios"": true,
    ""using_android"": true,
    ""api_key"": ""..."",
    ""api_secret"": ""...""
}
```

```
$ tns plugin add nativescript-fabric
```

Or if you want to use the development version (nightly build), which maybe not stable!:

```
$ tns plugin add nativescript-fabric@next
```

### Android

Add the API-Key to your AndroidManifest.xml:

```
<?xml version=""1.0"" encoding=""UTF-8"" standalone=""yes""?>
<manifest xmlns:android=""http://schemas.android.com/apk/res/android"" package=""__PACKAGE__"" android:versionCode=""385"" android:versionName=""1.0.14"">
 ....
  <application android:name=""com.tns.NativeScriptApplication"" android:allowBackup=""true"" android:icon=""@drawable/icon"" android:label=""@string/app_name"" android:theme=""@style/AppTheme"">
    ...
    <meta-data android:name=""io.fabric.ApiKey"" android:value=""**<API-KEY>**""/>
  </application>
</manifest>

```

### iOS
No further confiugration needed

## Additional information

### Android 

For more details see [fabric.io/kits/android/crashlytics](https://fabric.io/kits/android/crashlytics/install).

### iOS

For more details see [fabric.io/kits/ios/crashlytics](https://fabric.io/kits/ios/crashlytics/manual-install?step=1).

## API

Init the plugin in your app (for angular apps use main.ts):

```
import { Fabric } from 'nativescript-fabric';
Fabric.init();
```

Afterwards you can use the instance methods for logging (general error logging is already added):
* `Fabric.logSignUp(method: string, success: boolean);`
* `Fabric.logLogin(method: string, success: boolean);`
* `Fabric.logContentView(id: string, name: string, type: string)`
* `Fabric.logCustomEvent(withName: string, customAttributes: Map<String, String>)`
* `Fabric.logError(error: any, msg?: string)`


## Angular

```
import { FabricModule } from 'nativescript-fabric/angular';

NgModule({
  ...
  imports: [
    FabricModule.forRoot()
  ],

```
# Known Issues

## com.android.ide.common.process.ProcessException

```
FAILURE: Build failed with an exception.

* What went wrong:
Execution failed for task ':app:transformClassesWithDexForF0F1F2F3F4F5Debug'.
> com.android.build.api.transform.TransformException: com.android.ide.common.process.ProcessException: java.util.concurrent.ExecutionException: com.android.dex.DexIndexOverflowException: Cannot merge new index 69013 into a non-jumbo instruction!nto a non-jumbo instruction!

```
set the following in your app.gradle:
```
android {
    ...
    dexOptions {
        jumboMode true
    }

}
```

## XML Parsing error

```
Error:/app/build/intermediates/res/merged/debug/values/com_crashlytics_build_id.xml uncompiled XML file passed as argument. Must be compiled first into .flat file.
```

Try adding:
```
android.enableAapt2 = false
```
to your `gradle.properties` file.
",29,29,5,13,farming,"[android, farming, ios, nativescript, nativescript-plugin]",00000
1122,farmOS-map,farmOS,N/A,N/A,https://api.github.com/repos/farmOS/farmOS-map,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1E8:3B38:2CD595:5CDC7C:65223FD5.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,farming,"[N, /, A]",00000
1123,cropandweed-dataset,cropandweed,N/A,N/A,https://api.github.com/repos/cropandweed/cropandweed-dataset,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C167:11F8:2B86A9:5A63BE:65223FD6.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,farming,"[N, /, A]",00000
1124,stable-farm,sskender,N/A,https://github.com/sskender/stable-farm,https://api.github.com/repos/sskender/stable-farm,Automatically moving stable coins between decentralized finance platforms seeking for maximum yield,"# stable-farm

Automatically moving stable coins between decentralized finance platforms seeking for maximum yield

## Getting started

### Install dependencies

```
npm install
```

### Run Ganache

Export Infura's API key:

```
export infuraApiKey=xxxxxxxxxxxx
```

Run ganache with forked mainnet and unlocked accounts:

```
npm run ganache
```

## Running

### Compile contracts

```
npm run compile
```

### Migrate contracts

```
npm run migrate
```

### Run tests

```
npm run test
```

### Run UI

```
npm run serve
```
",25,25,3,0,farming,"[blockchain, compound, defi, defi-farm, ethereum, ethereum-contract, farming, ganache, money-legos, pools, solidity, stablecoin, uniswap, yield, yield-farming, yield-farms]",00000
1125,delphi,akropolisio,akropolisio,https://github.com/akropolisio/delphi,https://api.github.com/repos/akropolisio/delphi,💥 Earn Rewards for Saving and Liquidity Provision (work in progress),"# savings-pool

## Deployment addresses
* [Mainnet](deployment_mainnet.md)
* [Rinkeby](deployment_rinkeby.md)
* [Kovan](deployment_kovan.md)

",24,24,8,31,farming,"[akropolis, delphi, farming, yield]",00000
1126,KryptoPunks-nft-staking-dapp,kaymen99,N/A,https://github.com/kaymen99/KryptoPunks-nft-staking-dapp,https://api.github.com/repos/kaymen99/KryptoPunks-nft-staking-dapp,KryptoPunks NFTs staking dapp built on the polygon network,"<div id=""top""></div>

<!-- ABOUT THE PROJECT -->

# KryptoPunks NFT Staking Dapp

This is a modern NFT project, the dapp allows users to mint their KryptoPunks items and stake them to receive staking rewards in the form of KryptoPunkToken (KPT).

<p align=""center"">
  <img alt=""Dark"" src=""https://user-images.githubusercontent.com/83681204/185254772-40163a1d-3481-4519-b936-b5093c71e097.png"" width=""100%"">
</p>

### Built With

* [Solidity](https://docs.soliditylang.org/)
* [Hardhat](https://hardhat.org/getting-started/)
* [React.js](https://reactjs.org/)
* [ethers.js](https://docs.ethers.io/v5/)
* [web3modal](https://github.com/Web3Modal/web3modal)
* [material ui](https://mui.com/getting-started/installation/)

<details>
  <summary>Table of Contents</summary>
  <ol>
    <li>
      <a href=""#project-structure"">Project structure</a>
     <ul>
       <li><a href=""#smart-contracts"">Smart Contracts</a></li>
       <li><a href=""#user-interface"">User interface</a></li>
      </ul>
    </li>
    <li>
      <a href=""#how-to-run"">How to Run</a>
      <ul>
       <li><a href=""#prerequisites"">Prerequisites</a></li>
       <li><a href=""#contracts"">Contracts</a></li>
       <li><a href=""#front-end"">Front-end</a></li>
      </ul>
    </li>
    <li><a href=""#contact"">Contact</a></li>
    <li><a href=""#license"">License</a></li>
  </ol>
</details>


<!-- PROJECT STRUCTURE -->

## Project Structure

### Smart contracts

The contracts development and testing is done using the Hardhat framework in the smart_contracts folder, for this project there are 3 main contracts :
      <ul>
       <li><b>KryptoPunks.sol :</b></li>
This is the NFT collection contract, i used the ERC721A standard because it has lower gas usage for multiple NFT mint in the same transaction, the contract will allow user to mint items from the collection which are allowed to be staked in the NFT vault.
       <li><b>KryptoPunksToken.sol :</b></li>
The KryptoPunksToken or KPT is the ERC20 token used for distributing staking rewards, it's completly controlled by the stakingVault contract which is the only address allowed to mint new tokens to stakers.
       <li><b>NFTStakingVault.sol :</b></li>
The staking vault contract is at the center of this application, it allows users to stake their KryptoPunks items and calculate the KPT rewards accumulated for each item based on the staking period. When a user wants to unstake or claim the accrued rewards from his NFTs, the contract is responsible for minting the KPT tokens to the user by calling the KryptoPunksToken contract.
      </ul>

<b>The architecture of the application</b> is illustrated in the diagram below :

![staking](https://user-images.githubusercontent.com/83681204/185807295-76ab7ea9-3f46-49bb-bf26-c43fa9de7002.png)

### User interface
   
The front end is built with React JS, it allows users to mint new KryptoPunks nfts and stake them in the vault for receiving KPT rewards over time, the app also give a simple admin dashboard for setting minting prices and maximum NFTs minted per tx.

The front-end is built using the following libraries:
      <ul>
        <li><b>Ethers.js:</b> used as interface between the UI and the deployed smart contract</li>
        <li><b>Web3modal:</b> for conecting to Metamask</li>
        <li><b>@reduxjs/toolkit & redux-persist:</b> for managing the app states (account, balance, blockchain) </li>
        <li><b>Material UI:</b> used for react components and styles </li>    
      </ul>
      
The home page is a modern NFT landing page that explains the KryptoPunks project and it's progression roadmap :

![Capture d’écran 2022-08-17 à 22 36 18](https://user-images.githubusercontent.com/83681204/185249401-0c9ee430-3e8a-46d7-949f-48113f434ceb.png)

The mint page allows user to mint new KryptoPunks and it contains all the information about the NFT collection (total supply, minting cost,...), and the details about the nfts held by the user (items owned, items staked, total reward accumulated,...).

![Capture d’écran 2022-08-17 à 22 48 18](https://user-images.githubusercontent.com/83681204/185249853-36e1c15f-4f26-4aea-a060-604cb56cc52f.png)

On this page the user also finds a list of all the items he owns, which can be directly staked & unstaked from there and claim the reward that was accrued :

![Capture d’écran 2022-08-17 à 22 48 36](https://user-images.githubusercontent.com/83681204/185250186-07ff0242-0c6b-4ff9-9d7a-f9433b85f70f.png)

The dashboard can only be accessed by the nft contract owner from the account window by clicking on the account button in the top of the page, it gives the owner the possibility of withdraw the contract balance, changing nft minting parametres or changing contract state (paused):

![Capture d’écran 2022-08-17 à 22 49 01](https://user-images.githubusercontent.com/83681204/185250309-9166ae4d-8bbb-422f-99d1-4ed9c41d46a5.png)

<p align=""right"">(<a href=""#top"">back to top</a>)</p>

<!-- USAGE GUIDE -->
## How to Run

### Prerequisites

Please install or have installed the following:
* [nodejs](https://nodejs.org/en/download/) and [yarn](https://classic.yarnpkg.com/en/)
* [MetaMask](https://chrome.google.com/webstore/detail/metamask/nkbihfbeogaeaoehlefnkodbefgpgknn) Chrome extension installed in your browser
* [Ganache](https://trufflesuite.com/ganache/) for local smart contracts deployement and testing.

Clone this repo with the command :
   ```sh
   git clone https://github.com/kaymen99/KryptoPunks-nft-staking-dapp.git
   cd KryptoPunks-nft-staking-dapp
   ```

### Contracts

As mentioned before the contracts are developed with the Hardhat framework, before deploying them you must first install the required dependancies by running :
   ```sh
   cd smart_contracts
   yarn
   ```
   
Next you need to setup the environement variables in the .env file, this are used when deploying the contracts :

   ```sh
    RINKEBY_ETHERSCAN_API_KEY=""your etherscan api key""
    RINKEBY_RPC_URL=""Your rinkeby RPC url from alchemy or infura""
    POLYGON_RPC_URL=""Your polygon RPC url from alchemy or infura""
    MUMBAI_RPC_URL=""Your mumbai RPC url from alchemy or infura""
    PRIVATE_KEY=""your private key""
   ```
* <b>NOTE :</b> Only the private key is needed when deploying to the ganache network, the others variables are for deploying to the testnets or real networks and etherscan api key is for verifying your contracts on rinkeby etherscan.

After going through all the configuration step, you'll need to deploy the 3 contracts to the ganache network by running: 
   ```sh
   yarn deploy --network ganache
   ```
This will create a config.js file and an artifacts folder and transfer them to the src folder to enable the interaction between the contract and the UI

* <b>IMPORTANT :</b> I used the ganache network for development purposes only, you can choose another testnet or real network if you want, for that you need to add it to the hardhat.config file for example for the rinkeby testnet  

   ```sh
   rinkeby: {
      url: RINKEBY_RPC_URL,
      accounts: [process.env.PRIVATE_KEY],
      chainId: 4,
    }
   ```

If you want to test the vault/NFT contracts or the staking process, you can do it by running:
   ```sh
   yarn test
   ```
### Front end

To start the user interface just run the following commands :
   ```sh
   cd front-end
   yarn
   yarn start
   ```

<p align=""right"">(<a href=""#top"">back to top</a>)</p>

<!-- Contact -->
## Contact

If you have any question or problem running this project just contact me: aymenMir1001@gmail.com

<p align=""right"">(<a href=""#top"">back to top</a>)</p>


<!-- LICENSE -->
## License

Distributed under the MIT License. See `LICENSE.txt` for more information.

<p align=""right"">(<a href=""#top"">back to top</a>)</p>

",22,22,2,0,farming,"[etherjs, farming, hardhat, nft-staking, nfts, reactjs, solidity, staking, staking-app]",00000
1127,king-bot,breuerfelix,N/A,https://github.com/breuerfelix/king-bot,https://api.github.com/repos/breuerfelix/king-bot,travian kingdoms automation (www.kingdoms.com),"# king-bot <!-- omit in toc -->

check out the insights of this project: [breuer.dev](https://breuer.dev/projects/king-bot)

__[Twitch](https://twitch.tv/scriptworld)__ - __[YouTube](https://www.youtube.com/c/scriptworld)__ - __[Twitter](https://twitter.com/felix_breuer)__ - __[Patreon](https://patreon.com/scriptworld)__ - __[Discord](https://discord.gg/5n2btF7)__ - __[Bot Creation Guide](https://www.udemy.com/course/the-complete-guide-to-bot-creation/?referralCode=7418EBB47E11E34D86C9)__

__disclaimer:__ please note that this is a research project. i am by no means responsible for any usage of this tool. use on your own behalf. i'm also not responsible if your accounts get banned due to extensive use of this tool.

__this bot does not work anymore! if you still manage to get it running, it will lead to banned accounts.__

[![MIT license](https://img.shields.io/badge/license-MIT-blue.svg)](https://github.com/breuerfelix/king-bot/blob/master/LICENSE)
[![built with Selenium](https://img.shields.io/badge/built%20with-Selenium-yellow.svg)](https://github.com/SeleniumHQ/selenium)
[![built with Python3](https://img.shields.io/badge/built%20with-Python3-red.svg)](https://www.python.org/)

# table of contents <!-- omit in toc -->

- [getting-started](#getting-started)
- [features](#features)
    - [farming (travian plus)](#farming-travian-plus)
    - [sorting out yellow / red farms](#sorting-out-yellow--red-farms)
    - [farmlists as .txt file (no travian plus needed)](#farmlists-as-txt-file-no-travian-plus-needed)
    - [celebrations](#celebrations)
    - [adventures](#adventures)
    - [dodge incoming attacks](#dodge-incoming-attacks)
    - [upgrade units in smithy](#upgrade-units-in-smithy)
    - [upgrade resource fields / buildings](#upgrade-resource-fields--buildings)
    - [robber hideouts](#robber-hideouts)
    - [robber camps](#robber-camps)
    - [train troops](#train-troops)
- [start options](#start-options)
    - [provide credentials](#provide-credentials)
    - [headless browsing](#headless-browsing)
    - [login manually](#login-manually)
    - [remote browser](#remote-browser)
    - [proxy](#proxy)
- [faq](#faq)
- [how to contribute](#how-to-contribute)
    - [code style](#code-style)
    - [workflow](#workflow)
    - [nice to know](#nice-to-know)
    - [changelog](#changelog)

# getting-started

watch the youtube video if you got problems setting up the bot. [click here !](https://youtu.be/JGqBnTLFDFc)

1.  install python3 for your system
    1.  [get python](https://www.python.org/downloads/)
    2.  you need version 3.7 or higher
2.  clone this repository
3.  install packages
    1.  open console
    2.  goto this repository
    3.  run `pip install .` or `pip install -r requirements.txt`
4.  download chromedriver for your system _(optional)_
    1.  [get chromederiver](http://chromedriver.chromium.org)
    2.  move to `assets/` folder
5.  edit `start.py`
    1.  insert your credentials _(optional)_
        1.  login without inserting -> _see chapter start options_
    2.  place the actions your bot should do at the end
        1.  read documentation for this
        2.  read `sample_start.py` to get an impression
6.  execute script
    1.  `python start.py`
    2.  read documentation for options like remote browser or headless browsing
7.  on mac or linux
    1.  use `python3` and `pip3` instead

# features

just an overview with method signatures. for details check each chapter.

```python
def start_adventures(interval: int = 100, health: int = 50) -> None:
def start_farming(village: int, farmlists: list, interval: int) -> None:
def start_custom_farmlist(reload: bool = False) -> None:
def celebrate(villages: [], interval: int = 1000) -> None:
def sort_danger_farms(farmlists: list, to_list: int, red: bool, yellow: bool, interval: int = 300) -> None:
def dodge_attack(village: int, interval: int = 600, units: list = [], target: list = [], save_resources: bool = False, units_train: list = []) -> None:
def upgrade_units_smithy(village: int, units: list, interval: int = 1000) -> None:
def start_building(village: int, file_name: str, interval: int = 1800) -> None:
def robber_hideout(village: int, units: dict, interval: int) -> None:
def robber_camp(village: int, units: dict, interval: int) -> None:
def train_troops(village: int, units: list, interval: int) -> None:

```

## farming (travian plus)

the bot will open given village, selects all farmlists from the array, sends them, and go to sleep.  
this is by far the simplest implementation of a farm bot.

```python
# sends farmlist with index 1 (the one after the starter list)
# in your first village (index 0) in an interval of 60 seconds
kingbot.start_farming(village=0, farmlists=[1], interval=60)

#sends farmlist 1 and 3 in your second village in an interval of 30 seconds
kingbot.start_farming(1, [1,3], 30)
```

**village:**  
index of village _(0 is the first village)_

**farmlists:**  
index of farmlist _(0 is the starter list with only 10 farms)_  
must be an _array_! you can send multiple lists in this interval

**interval:**  
interval of sending the list _in seconds_

you can stack as many of them together if you want.  
it's also possible to send different farmlist in the same village in different intervals.

## sorting out yellow / red farms

**note that this feature is not fully tested yet!**  
_i need someone with alot of big farmlists to test this feature for me_

this line will let the bot automaticly sort out red or/and yellow farms for you.  
it is checking all given farmlists in an interval (_in seconds_) for danger farms.  
if a farm is yellow or red, and you set the equivalent value to `True`, this farm will be placed onto the farmlist with the index given by the paramter `to_list`.  
the starter farmlist is index 0.

```python
kingbot.sort_danger_farms(farmlists=[0], to_list=1, red=True, yellow=False, interval=240)
```

**farmlists:**  
array of farmlist indexes _(start farmlist is 0)_

**to_list:**  
index of the farmlist the 'danger' farms will be put into  
`-1` if you want the farm to be removed instead of moved to another list

**red:**  
`True` if you want red farms to be sorted out

**yellow:**  
`True` if you want also yellow farms to be sorted out

**interval:**  
interval of checking the farmlists _in seconds_

## farmlists as .txt file (no travian plus needed)

this technique is a little bit slower than then one with travian plus.  
the bot will manually launch every attack at the rally point.  
i only implemented this feature for people who doesn't want to pay for the game and still want to farm only around 200 villages.

you have to create a file named `farmlist.txt` in `assets/` folder, which looks like the following: _(attention for separators!)_

```csv
-26;-34;120;0;1,2
-28;-24;70;0;1,2,3,4
-30;-57;300;0;1,2
```

**pattern:**  
x-coordinate **;** y-coordinate **;** time to wait till sending the troops again in seconds **;** index of village **;** index of unit in the horizontal bar **,** amount of units

every line represents one farm. the first 2 values are the x- and y-coordinates.  
the third value is the time _(in seconds)_ the bot waits until it sends the farm again.  
fourth value is the village from where the troops are going to be send off.  
the last values _(comma separated!)_ are the amount and index of the unit which is going to be send.  
you can find out the index when trying to launch a new attack. you will be asked which village you want to attack and which troops you wanna use.  
from left to right, starting at 0, these are the indexes of the units you want to use.  
for example _(gauls)_: 0 = phalanx, 1 = swordsman.  
if you want to send different units, just stack them at the end.  
...0,1,3,4 -> this would send 1 of unit 0 and 4 of unit 3 to this farm.

**attention:**  
_adding a unit index of `-1` will send **all** units with max number to this farm._  
_adding a unit value of `-1` will send **all** units of this type to this farm._

add the following line to your `start.py` script:

```python
kingbot.start_custom_farmlist(reload=False)
```

__reload:__  
if you set this value to `True` the bot will rescan your farmlist file every minute for changing lines  
you can add or remove farms without restarting the script

## celebrations

the bot will start a small celebration in given villages everytime the queue is empty and you got enough resources.  
it will automatically wake up 5 seconds after one celebration in any village is finished.

```python
kingbot.celebrate(villages=[0, 2, 4], interval=1000)
```

__villages:__  
array of villages _(starting at zero)_ in which the bot should start celebrations

__interval:__ _(optional -> default = 1000)_  
just a save interval for the bot to wake up and check wether it can start a celebration  
it will automatically adjust this interval to wake up right after a celebration is finished

## adventures

this enables auto sending the hero on adventures.  
you hero won't die, because they will only start when the hero is above x hp.

```python
kingbot.start_adventures(interval=500, health=35)
```

**interval:** _(optional -> default = 100)_  
time _in seconds_ the hero thread will sleep until it checks for a new adventure again

**health:** _(optional -> default = 50)_  
minimum health _(in percent)_ of hero to start an adventure

## dodge incoming attacks

since everybody hates to get attacked at night, the bot is able do dodge incoming attacks.  
it will send your units to a given village for raid. make sure the village is inactive and valid.

the bot will wake up 10 minutes before the attack lands, so take a target which is at least 5:01 minutes away. (7:00 if you got a map and also send your hero)  
use this method for every village you want to save.

```python
kingbot.dodge_attack(village=0, units=[1, 0, 3], target=[1, 1], save_resources=True, units_train=[2, 4])
```

**village:**  
index of village which the bot is going to check _(starting at 0)_

**units:**  
array of unit indexes which are going to be saved _(starting at 0)_  
insert `-1` _(units=[-1])_ to save **all** available units in this village

**target:**  
first index is the x-coordinate and second for the y-coordinate of the village the bot will send the units for a robbery


**save_resources:**  
`True` if you want to save the resources and NPC it for training troops.  
**attention! this feature will consume your gold, please consider it.**

**units_train:**  
array of unit indexes which are going to be trained **_(starting at 1)_**

## upgrade units in smithy

```python
kingbot.upgrade_units_smithy(village=0, units=[21, 22])
```
__village:__  
index of village _(starting at 0)_

__units:__  
list of units you want to upgrade   
first one with highest priority, last one with lowest  

| roman                  | teuton              | gaul                  |
| ---------------------- | ------------------- | --------------------- |
| 1: legionnaire         | 11: clubswinger     | 21: phalanx           |
| 2: praetorian          | 12: spearfighter    | 22: swordsman         |
| 3: imperian            | 13: axefighter      | 23: pathfinder        |
| 4: equites legati      | 14: scout           | 24: theutates thunder |
| 5: equites imperatoris | 15: paladin         | 25: druidrider        |
| 6: equites caesaris    | 16: teutonic knight | 26: headuan           |
| 7: battering ram       | 17: ram             | 27: ram               |
| 8: fire catapult       | 18: catapult        | 28: trebuchet         |
| 9: senator             | 19: chief           | 29: chieftain         |
| 10: settler            | 20: settler         | 30: settler           |

the bot checks if it can upgrade given units in given order. first it checks swordsman in this example and if they are not available or maxed out, it will try to upgrade phalax again.  
you can increase the list as long as you want to.

the bot can't switch smithy pages for now, so make sure the window is big enough to cover 8 slots.   
By default this should be the case, otherwise it will just cover the 4 slots on the front for now.

sleeping time will be the time the academy needs to finish the current research, so the bot won't wake up unnecessarily in the given interval.

## upgrade resource fields / buildings

this function will construct and upgrade building as well as upgrade resources. finish 5 mins earlier is enable by default.
this function will upgrade/construct based on json file that contains queue for upgrade/construct building.
the json file can be edit while this function running, so didn't need to restart the function if you want add new queue to json file.

the json file have **strict structure that need to be fulfilled** if you want to use this function.
this is an example of queue on json file:

```json
{""queues"":[
    {
        ""queueLocation"": ""Village"",
        ""queueType"": ""Construct"",
        ""queueBuilding"": ""Bakery""
    }
    {
        ""queueLocation"": ""Resources"",
        ""queueBuilding"": ""buildingLocation9""
    }
]}
```

**queueLocation:**
there is 2 values for this keyword, `Village` and `Resources`._(case sensitive)_
- choose `Village` if you want to `Upgrade` or `Construct` building.
- choose `Resources` when you want to upgrade resources.

**queueType:**
there is 2 values for this keyword, `Construct` and `Upgrade`._(case sensitive)_
- choose `Construct` for constructing building.
- choose `Upgrade` for upgrading building.

**queueBuilding:**
this keyword filled with building name. if you want to upgrade resources, it point to slot id of resources that you want to upgrade._(case sensitive)_
on the picture below you can see all field slot id's for your reference when upgrading resources.
these stay the same no matter what kind of village you have (even in 15er crop villages).

there is an example json file in assets folder that contain queue for your reference.
there is also building.json file that contains building name for your reference.

```python
kingbot.start_building(village=2, file_name='village_2.json', interval=1800)
```

**village:**  
index of the village the slot should be upgraded in _(starting at 0)_

**file_name:**  
json file that contain queue

**interval:** _(optional -> default = 1800)_
interval for checking queue

**attention! this feature can only be used in international gameworld**

![resource-fields](https://scriptworld.net/assets/king-bot/resourceFields.png)

## robber hideouts

the bot will check for robber hideouts and it will send your units to attack them, it will retry with the same hideout until its destroyed, and then it will move on to the next and so on.

the bot will not perform the attack if the troops are moving, either returning or leaving the village, and thus avoid repeating unnecessary attacks.

```python
kingbot.robber_hideout(village=0, units={10:1, 4:100, 2:-1}, interval=600,)
```

**village:**  
index of village from where the bot will attack the robbers **_(starting at 0)_**

**units:**  
dictionary of units you want to send to the robber hideouts **_(starting at 0)_**
the format of the units are expressed as a pair: **{<unit index>: <quantity>}**
insert `-1` **_(units={-1})_** to send **all** available units in this village
hero is ""10:1""

| roman                  | teuton              | gaul                  |
| ---------------------- | ------------------- | --------------------- |
| 0: legionnaire         | 0: clubswinger     | 0: phalanx           |
| 1: praetorian          | 1: spearfighter    | 1: swordsman         |
| 2: imperian            | 2: axefighter      | 2: pathfinder        |
| 3: equites legati      | 3: scout           | 3: theutates thunder |
| 4: equites imperatoris | 4: paladin         | 4: druidrider        |
| 5: equites caesaris    | 5: teutonic knight | 5: headuan           |
| 6: battering ram       | 6: ram             | 6: ram               |
| 7: fire catapult       | 7: catapult        | 7: trebuchet         |
| 8: senator             | 8: chief           | 8: chieftain         |
| 9: settler             | 9: settler         | 9: settler           |

ex: as roman send hero, 100 equites imperatoris and all imperian
**_(units={10:1, 4:100, 2:-1})_**

**interval:** _(optional -> default = 600)_
interval for checking robber hideouts

## robber camps

the bot will check for robber camps and will send the specified units to attack all the camps at once while there are units available, as well as avoid attacking those already attacked before.

```python
kingbot.robber_camp(village=0, units={10:1, 0:300}, interval=600,)
```

**village:**  
index of village from where the bot will attack the robber camps **_(starting at 0)_**

**units:**  
dictionary of units you want to send to the robber camps **_(starting at 0)_**
the format of the units are expressed as a pair: **{<unit index>: <quantity>}**
insert `-1` **_(units={-1})_** to send **all** available units in this village
hero is ""10:1""
ex: as teuton send hero and 300 clubswinger
**_(units={10:1, 0:300})_**

**interval:** _(optional -> default = 600)_
interval for checking robber camps

## train troops

the bot will train new troops every time interval, if more than one type of unit is specified, the bot will divide the resources by each type of units and try to train as much as possible of each.

```python
kingbot.train_troops(village=0, units=[1, 2], interval=600)
```

**village:**  
index of village which the bot is going to train troops **_(starting at 0)_**

__units:__  
list of units you want to train   

| roman                  | teuton              | gaul                  |
| ---------------------- | ------------------- | --------------------- |
| 1: legionnaire         | 11: clubswinger     | 21: phalanx           |
| 2: praetorian          | 12: spearfighter    | 22: swordsman         |
| 3: imperian            | 13: axefighter      | 23: pathfinder        |
| 4: equites legati      | 14: scout           | 24: theutates thunder |
| 5: equites imperatoris | 15: paladin         | 25: druidrider        |
| 6: equites caesaris    | 16: teutonic knight | 26: headuan           |
| 7: battering ram       | 17: ram             | 27: ram               |
| 8: fire catapult       | 18: catapult        | 28: trebuchet         |
| 9: senator             | 19: chief           | 29: chieftain         |
| 10: settler            | 20: settler         | 30: settler           | 

**interval:** _(optional -> default = 600)_
interval to train troops

# start options

just an overview. for details check each topic.

| short | long        | arguments      | description             |
| :---: | :---------: | :------------: | :---------------------: |
| -e    | --email     | your_email     | optional for login      |
| -p    | --password  | your_password  | optional for login      |
| -w    | --gameworld | your_gameworld | optional for login      |
| -m    | -           | -              | login manually          |
| -h    | -           | -              | no browser window       |
| -r    | -           | -              | connect to last session |

## provide credentials

```bash
$ python start.py -e email@test.de -p your_password -w your_gameworld
$ python start.py --email email@test.de --password your_password --gameworld your_gameworld
```

if you don't want to store your credentials into a file, just provide them via arguments like this.  
it's also possible to login manually if you dont want to provide your login credentials at all. _see below: login manually_

all of these options are optional, you can always provice some via code, and some via start options, that's up to you.

## headless browsing

```bash
$ python start.py -h
```

if you don't wont a browser window to pop up, or using the script on a dedicated server with no gui, it is possible to run the script in headless mode.  
the console window will inform you about important actions the bot will do.

## login manually

```bash
$ python start.py -m 120
```

if you don't trust my program, even if it' open source, you can login manually and don't even type your email or password anywhere in my script.  
the bot will open the main page of travian kingdoms.  
it will now wait _120 seconds (given time via argument)_ for you to log into your account.  
after you are logged in, just open the gameworld you want your bot to run in.  
if you are finished, just wait for the timer to end, so the bot can do its work.

**note:** _this is not possible in headless mode!_

## remote browser

```bash
$ python start.py -r
```

if the script exists because of an exception, it's possible to re-use the browser session so you don't have to go through the whole login process again.  
just don't exit the browser window and make sure to remove the functions in the script, which the bot already completed in last session.  

__note:__ _debug mode must be enabled!_

## proxy

```python
proxy = '127.0.0.1:1234'
```

if you want to surf the web via proxy, just insert it in `start.py`. this is also possible in headless mode.  
if the proxy is set to `''`, it's going to be disabled. it's also disabled by default.

# faq

**can i play the game while the bot is running?**  
yes. just open a new browser window and leave the bot window in the background. login to your gameworld and keep playing.  
one instance doesn't effect another browser instance. you can also start your script without a browser window.

**can i get banned for using the bot?**  
yes, but the chances are below 1%. it's nearly impossible to detect this bot, because it clicks all buttons just like a human would do.  
also there is browser and sleeping time delay, so they can't event check if the interval is always the same.

__my internet is really slow. the bot is too fast and can't find elements!__  
`settings.browser_speed = 1.0` -> just increase this value. it will adjust __all__ sleep timers.  
you will find that value in `start.py` file.

# how to contribute

you are not quite sure if you are able to contribute ? **[contact me (: !](mailto:f.breuer@scriptworld.net)**  
i love to teach people who are interested in learning.

## code style

-   type definitions at least for method signatures
-   do comments
-   keep your code seperated in files

## workflow

-   take an issue or a personal idea to implement
-   fork the repository
-   start scripting
-   make a pull request

## nice to know

- store your login credentials in `./assets/credentials.txt` -> ignored by git
    - gameworld;your_email;your_password
- write your testscript as `test_start.py` -> ignored by git
- run mypy for typechecking `mypy start.py --ignore-missing-imports`
- set debug flag to `True` -> `kingbot = kingbot(..., debug=True)`
    - if your script executes with and error resume your session with `python start.py -r`

## changelog

[view changelog](CHANGELOG.md)

---

_we love lowercase_
",22,22,9,0,farming,"[automate, bot, browsergame, farming, kingdoms, python, selenium, travian]",00000
1128,B4D,bot4dofus,bot4dofus,https://github.com/bot4dofus/B4D,https://api.github.com/repos/bot4dofus/B4D,"🎮🥚🤖  Pixel bot for Dofus 2 using packet sniffing, mouse and keyboard emulations","
[![Join B4D on Discord!](https://img.shields.io/badge/Discord-Join%20B4D%20on%20Discord!-7289DA.svg?style=flat&logo=discord)](https://discord.gg/kNHsFcbUGp)
![Test](https://github.com/LucBerge/B4D/workflows/Test/badge.svg?branch=master)
[![Coverage](https://codecov.io/gh/LucBerge/B4D/branch/master/graph/badge.svg?token=lv2Q224e7E)](https://codecov.io/gh/LucBerge/B4D)

This bot has been make by [@LucBerge](https://github.com/LucBerge) and is under [MIT license](https://github.com/LucBerge/B4D/blob/master/LICENSE).

## Useful links

- [WIKI](https://github.com/LucBerge/B4D/wiki) : Everything you need to know about the bot.
- [INSTALLATION](https://github.com/LucBerge/B4D/wiki/Install) : How to install the bot.
- [JAVA DOC](https://lucberge.github.io/B4D/) : For developers.
- [BUGS](https://github.com/LucBerge/B4D/issues) : For bug reports.
- [CONTRIBUTION](https://github.com/LucBerge/B4D/wiki/Prerequisits) : You want to contribute ?
",22,22,1,19,farming,"[almanax, bot, dofus, dofus2, farming, game, graphic, java, maven, money, ocr, pcap4j, pixel, quests, resource, sniffing, socket]",00000
1129,kale-blockchain,Kale-Network,Kale-Network,https://github.com/Kale-Network/kale-blockchain,https://api.github.com/repos/Kale-Network/kale-blockchain,A long-term supported fork of Chia. More information at https://kalenetwork.org,"# kale-blockchain

**Kale** is a modern community-centric green cryptocurrency based on a proof-of-space-and-time consensus algorithm. It is a community-supported fork of the [Chia Network](https://github.com/Chia-Network/chia-blockchain) codebase.

For more information, see our website and downloads at https://kalenetwork.org.

Discord: https://discord.gg/cSrV78ye
",21,21,5,0,farming,[farming],00000
1130,sunflower-land-bot,newerton,N/A,https://github.com/newerton/sunflower-land-bot,https://api.github.com/repos/newerton/sunflower-land-bot,"This is a Python bot, which automates logging in, purchasing and planting the seeds. Open source bot and completely free.","<h1 align=""center"">

![Sunflower Land Banner](https://raw.githubusercontent.com/newerton/sunflower-land-bot/main/images/readme/banner.jpg)

  <a>
    🌻 Sunflower Land Bot 🌻 
  </a>
</h1>

## ⚠️ Warning

### I am not responsible for any penalties incurred by those who use the bot, use it at your own risk.
## This BOT is completely secure, it does not ask for your metamask password or private key.

## 📌 Glossary

  * [Donation](#donation)
  * [About](#about)
  * [Robot - Preview](#robot-preview)
  * [Installation](#installation)
    * [Terminal commands](#commands)
  * [How to works](#how-to-works)
  * [Tests](#tests)
  * [Configs](#configs)

# 🎁 <a id=""donation""></a>Donation (for support)
## BUSD/USDC/BNB/MATIC: 0x4847C29561B6682154E25c334E12d156e19F613a  
## PIX (Brazil Payment): 08912d17-47a6-411e-b7ec-ef793203f836   

## 📋 <a id=""about""></a>About

This bot contains code from other developers, this bot was just refactored, to facilitate new implementations and maintenance.

This bot is free and open source.

## 🤖 <a id=""robot-preview""></a>Robot - Preview
![Screenshot - Preview](https://raw.githubusercontent.com/newerton/sunflower-land-bot/main/images/readme/bot_working.jpg)

## 🪟 <a id=""installation""></a>Installation

### **Python**

🖥️ Computer/Laptop High or Medium Profile  
🐍 Install the Python 3.9.9

🖥️ Computer/Laptop Low Profile or Low Profile with Windows 7 Pro  
🐍 Install the Python 3.8.10

🔗 [https://www.python.org/downloads/](https://www.python.org/downloads/)

⚠️ **It is important to check the option to add python to PATH**

### <a id=""commands""></a>Commands
Install the dependencies by running the command below into the project folder:

```
pip install -r requirements.txt
```
Ready! Now just start the bot with the command, inside the project folder

```
python index.py
```

### <a id=""how-to-works""></a>**How to works?**

The bot doesn't change any of the game's source code, it just takes a screenshot of the game's screen to find the buttons and simulates mouse movements.

⚠️ Some settings can be changed in the /config/config.yaml file, don't forget to restart the bot if you change the settings, some changes in the /config/config.yaml file may cause the bot to stop, such as activating the telegram when the bot is running. 

The waiting time for harvesting the sunflower is 1 minute, and for the other plants it is 5 minutes. 

## 🧪 <a id=""tests""></a>Tests
**Desktop Medium Profile**  
Intel i5-3570k @ 3.4Ghz, 24GB RAM  
Windows 11, Resolution@1920x1080  
Python 3.9.9  

**Laptop Low Profile**  
Laptop Samsumg RV411, Pentium P6200 @ 2.13Ghz, 2GB RAM  
Windows 7, Resolution@1366x768  
Python 3.8.10

## <a id=""configs""></a>🧑‍🌾 Config

### ⚠️ Don't forget to rename /config/EXAMPLE-farn.yaml file, to /config/farm.yaml.  
### Use the enable option to activate which seed you want to use and the sell option to deactivate the sale of the seed, in this case it is for you not to sell the seed, if you are accumulating to buy some NFT.

```
{
  crops:
    [
      { position: 0, enable: true, title: ""sunflower"", sell: true },
      { position: 1, enable: true, title: ""potato"", sell: true },
      { position: 2, enable: true, title: ""pumpkin"", sell: true },
      { position: 3, enable: true, title: ""carrot"", sell: true },
      { position: 4, enable: true, title: ""cabbage"", sell: true },
      { position: 5, enable: true, title: ""beetroot"", sell: true },
      { position: 6, enable: true, title: ""cauliflower"", sell: true },
      { position: 7, enable: false, title: ""parsnip"", sell: false },
      { position: 8, enable: false, title: ""radish"", sell: false },
      { position: 9, enable: false, title: ""wheat"", sell: false },
    ],
  forest: [],
  water: [],
}

```

## 👍 Did you like it? :)

### BUSD/USDC/BNB/MATIC: 0x4847C29561B6682154E25c334E12d156e19F613a  
### PIX (Brazil Payment): 08912d17-47a6-411e-b7ec-ef793203f836",20,20,6,0,farming,"[automated, automation, bot, farm, farming, python, seeds, sunflower, sunflower-land, sunflowers]",00000
1131,SmartGreenhouse,obernardovieira,N/A,https://github.com/obernardovieira/SmartGreenhouse,https://api.github.com/repos/obernardovieira/SmartGreenhouse,:leaves: An arduino system for autonomous greenhouse. Only the basic. :four_leaf_clover:,"# SmartGreenhouse

### Description:
A repository with the basic functions to an autonomous greenhouse.
There is no limited number of connected components (e.g. sensors)

### Installation:
There is not specific installation, it just need to be uploaded to arduino. But the data struct need to be configured to make the components work.
**How to configure a new component**
*This is really easy to add, just follow the steps below*
* 1. Increment the number os components
  * Go to file ""datatype.h"" and in ""#define TOTAL_COMPONENTS 3"" change 3 to the number of your components
* 2. Upload the sketch and run it
  * Run the arduino and use the command ""c help"" trough the Serial Monitor
* 3. Give them things to do
  * Go to file ""components.h"" the last function called ""check_components"" and crete your own method to controle one component,
  using the output of another one, or by time. You know what to do. (Don't forget to reupload)


### Usage:
After the installation, everything should be running fine. If any port number and/or type is change, it changes in realtime, with need to restart. But there ar some precaution, read **Notes** below!
**Note** Changes are not automatically updated, the user needs to update using the command *save*. Data is automatically loaded. 
**Note(2)** It's recomended to not disconnect components from one port and connect to another with arduino running. So, update the data, save it, turn of arduino, change ports and start again.
#### In this example
In this example it uses three components, in this case, two leds and one **potentiometer** (the circuit sketch is at the end)
***The first led*** is controlled by time. At the time *X* it turns on, at the time *Y* it turns off
***The second led*** is controlled using the potentiometer's output.
It can be used as a water dropped controller by hour, using an rtc, and a heater and coller controlled by temperature.
This is just an example. See th sketch ![here](https://github.com/obernardovieira/SmartGreenhouse)

### Contributing:
Everyone is free to contribute. Fork the project, make you changes and pull request. If you find bugs open an issue, or you can fix by yourself just forking, make changings and then pull request. It's complitly free project, so you can download and use it on your own.

### Credits:
obernardovieira

### License:
GNUv3
",19,19,9,0,farming,"[arduino, automation, autonomous, farm, farming, greenhouse]",00000
1132,flyff-bots,xandao-dev,N/A,https://github.com/xandao-dev/flyff-bots,https://api.github.com/repos/xandao-dev/flyff-bots,A set of bots for flyff,"<br />
<p align=""center"">
  <h3 align=""center"">Flyff Bots</h3>

  <p align=""center"">
	Flyff is a MMORPG game that I used to play when I was a kid. I always wanted to create a bot for it and here I am.
	This project is a set of bots that I created for Flyff. It has bot for farming and for upgrading your items.
	<br />
	:warning: Windows only :warning:
    <br />
	<br />
    <a href=""https://github.com/xandao-dev/flyff-bots""><strong>Explore the docs »</strong></a>
    <br />
    <a href=""https://github.com/xandao-dev/flyff-bots/issue"">Report Bug</a>
    ·
    <a href=""https://github.com/xandao-dev/flyff-bots/issues"">Request Feature</a>
  </p>
</p>


<details open=""open"">
  <summary>Table of Contents</summary>
  <ol>
    <li>
      <a href=""#about-the-project"">About The Project</a>
      <ul>
        <li><a href=""#features"">Features</a></li>
        <li><a href=""#built-with"">Built With</a></li>
      </ul>
    </li>
    <li>
      <a href=""#getting-started"">Getting Started</a>
      <ul>
        <li><a href=""#installation"">Installation</a></li>
      </ul>
    </li>
    <li><a href=""#usage"">Usage</a></li>
    <li><a href=""#roadmap"">Roadmap</a></li>
    <li><a href=""#contributing"">Contributing</a></li>
    <li><a href=""#license"">License</a></li>
    <li><a href=""#contact"">Contact</a></li>
  </ol>
</details>


## About The Project

<div align=""center"">
<b>Foreground Vision Bot</b>
<p>See the Foreground Vision Bot guide <a href=""./foreground_vision_bot/docs/README.md"">here</a></p>


<img src=""foreground_vision_bot/docs/bot.png"" alt=""Flyff bot"">

<b>Awakening Bot</b>


https://user-images.githubusercontent.com/22106326/200222627-30049ad2-ebf1-4d7f-a1b5-7795e2967215.mp4


https://user-images.githubusercontent.com/22106326/150702322-967cf2d8-d789-45e6-af61-503c96dc2ea9.mp4
</div>

### Features

**Foreground Vision Bot**

* :star: Works very good :star:
* Track the monsters by it's names using computer vision (OpenCV)
* Automatically attack the monsters and move to the next one
* If no monsters are found, it will automatically run to find more monsters
* Human-like mouse movement
* GUI available, to watch the bot and configure it

**Awakening Bot**

* :star: Works very good :star:
* Automatically awaken your items until you get the required stats
* Works on background or foreground
* Works using OCR

**Foreground Farm**

* :warning: Does not work very well :warning:
* Farm bot that works on foreground
* Works moving the mouse on the screen to see if it finds a monster
* Works matching pixel colors

**Recording Bot**

* :warning: Does not work very well :warning:
* It records your actions like moving, attacking, drinking potions and etc.
* Generates a file that you can use to replay your actions
* Works on background or foreground


### Built With

* [Python3](https://www.python.org/) - A general-purpose, high-level programming language
* [OpenCV](https://opencv.org/) - Open source computer vision library
* [pytesseract](https://pypi.org/project/pytesseract/) - Google's Tesseract OCR library
* [pyttsx3](https://pypi.org/project/pyttsx3/) - Speech synthesis library
* [numpy](https://www.numpy.org/) - Scientific computing package


## Getting Started

To get a local copy up and running follow these simple steps.

### Installation

1. Clone the repo
  ```sh
  git clone https://github.com/xandao-dev/flyff-bots.git
  ```

2. Install dependencies
  ```sh
  cd flyff-bots
  python3 -m pip install -r requirements.txt
  ```

### Common Issues

1. `import win32gui ImportError: DLL load failed: The specified module could not be found.`
    * Install [pywin32](https://github.com/mhammond/pywin32/releases) from binaries for your python version

## Usage

* Run foreground vision bot

  1. Follow the [configuration](./foreground_vision_bot/docs/README.md) steps to configure the bot
  2. Run the bot: `python3 foreground_vision_farm.py`

* Run awakening bot

  1. Open the game
  2. Run the bot: `python3 background_awake.py`

* Run foreground farm

  1. Open the game
  2. Run the bot: `python3 foreground_farm.py`

* Run recording bot

  1. Open the game
  2. Run the recorder: `python3 recorder.py` or `python3 recorder_no_mouse.py`
  3. Run the playback: `python3 foreground_playback.py` or `python3 background_playback.py`

## Roadmap

See the [open issues](https://github.com/xandao-dev/flyff-bots/issues) for a list of proposed features (and known issues).

## Contributing

Contributions are what make the open source community such an amazing place to be learn, inspire, and create. Any contributions you make are **greatly appreciated**.

1. Fork the Project
2. Create your Feature Branch (`git checkout -b feature/AmazingFeature`)
3. Commit your Changes (`git commit -m 'Add some AmazingFeature'`)
4. Push to the Branch (`git push origin feature/AmazingFeature`)
5. Open a Pull Request

## License

Distributed under the MIT License. See [LICENSE](./LICENSE.md) for more information.

Free software =)

## Contact

Alexandre Calil - [Linkedin](https://www.linkedin.com/in/xandao-dev/) - [alexandre@xandao.dev](mailto:alexandre@xandao.dev)

Project Link: [https://github.com/xandao-dev/flyff-bots](https://github.com/xandao-dev/flyff-bots)
",17,17,7,7,farming,"[ai, auto-battler, awakening, bot, computer-vision, farming, flyff, ocr, opencv, recorder]",00000
1133,mobile-pest-identification,wikilimo,wikilimo,https://github.com/wikilimo/mobile-pest-identification,https://api.github.com/repos/wikilimo/mobile-pest-identification,A Lightweight Deep Learning Model for Automated Pest Detection on Mobile,"## A Lightweight Deep Learning Model for Automated Pest Detection on Mobile.

### User Guide
##### Step 1. To clone this repository, run:
```bash
git clone <this repo>
```


##### Step 2. To install dependencies run: 
```bash
pip install -r requirements.txt
```


##### Step 3. Download pest-imagery [IP102v1.1 dataset](http://xiaopingwu.cn/assets/projects/ip102/Data_Download/Data_Download.html):
###### Note: This dataset contains more than 75,000 images belonging to 102 categories, only a subset of which is showcased in this repository.
<img src=""demo/IP102_v1.1-samples.png"" width=""700"" height=""260""/>


##### Step 4. To run the model locally, run:
```bash
python src/pest.py
```

This will load the data, train the model and save the mobile optimized version in `src/model/pest/`. For deploying the model to a mobile app, see [PyTorch mobile](https://pytorch.org/mobile/home/). 

## Demonstration on the [Wikilimo](www.wikilimo.co) App:
<img src=""demo/demo-pestid-remedies.gif"" width=""300"" height=""580""/>",16,16,4,0,farming,"[deep-learning, deep-neural-networks, farming, mobile, precision-agriculture, sustainability]",00000
1134,MarketGardenCropPlanner,gtoleary5,N/A,https://github.com/gtoleary5/MarketGardenCropPlanner,https://api.github.com/repos/gtoleary5/MarketGardenCropPlanner,This project is a free Excel workbook designed to help market gardeners and CSA farmers organize and plan their operations.,"# MarketGardenCropPlanner

What is this tool and what can it do?

This is a business and operations planning tool designed for consumer-supported agriculture (CSA) farms. The basic business model is that customers buy farm products on a subscription basis, with deliveries being made on a weekly or bi-weekly basis. 

This tool attempts to answer the following questions:
1.	What can I plant in my area?
2.	When should I plant these crops?
3.	When will they be ready?
4.	How should I price my CSA shares?
5.	What is the financial outlook of my farm?

To answer the above questions, this tool performs the following functions:
1.	Organize reference data on the Planting Constraints, DS (Direct Seeding) Crop Ref, and TP (Transplant) Crop Ref sheets.
  a.	This reference data is going to vary with the local climate conditions. I would recommend reviewing and updating this data if any of the later calculations don’t pass the sniff test.

2.	Business planning: On the Annual Input sheet, users can adjust the input parameters (highlighted cells) to model the finances of their farm. 
  a.	The Planning Period Start and Planning Period End values are by default set to 1 year. If you want to plan out multiple seasons at a time, you may extend this to 2 or more years.

3.	CSA Share Modelling: After validating the reference data and clicking the Recalculate Availability button on the Intro sheet, the workbook will calculate when your crops will be available (represented by green cells on the Weekly CSA Share Content sheet).
  a.	By default, the workbook will order one unit of each available crop. That is, if you’re tracking tomato yield by the pound and your tomatoes are available for 10 weeks in the season, then each CSA share will be allocated 10 pounds of tomatoes.
    i.	If the ‘one-of-each’ allocation isn’t practical, you may change then ordered quantity by changing the numbers on the Weekly CSA Share Content sheet. Fractional values are accepted.
  b.	As you add and subtract items from your weekly CSA shares, you’ll notice the two summary rows at the bottom of the sheet are keeping track of how much each share is worth. This information is used to calculate the average Weekly CSA Share price in cell B1 of the Annual plan sheet.

4.	Farm Operations Planning: Once you have customized your weekly CSA shares, you can click the Create Farm Plan button on the Intro sheet to generate a consolidated operations calendar along with seed orders, greenhouse and crop schedules, and weekly harvest targets.
  a.	Calendar – This sheet offers a consolidated weekly schedule of Field Prep, Greenhouse, and Field Planting work.
  b.	Weekly CSA Harvest Target – This sheet simply multiplies the Weekly CSA Share Content table by the number of shares offered. 
  c.	Seed Sheet – This sheet calculates the amount of seed needed for each crop this season.
  d.	Greenhouse Schedule – This sheet calculates the number of trays each transplanted crop needs in the greenhouse and on what days they should be started.
  e.	Crop Sheet – This sheet calculates the planting frequency and quantity for each crop in order to meet the weekly harvest targets.
  f.	Field Ops – This sheet calculates the field prep dates for the various planting groups outlined in the Crop Sheet.
  g.	Field Planting Schedule – This sheet provides weekly summaries of the amount of planting needed to meet the weekly harvest targets. Mostly, it is used in the Crop Sheet calculations.


If you have any questions about how this tool functions or the code it uses, reach out to Gavin O’Leary on the Permies.com forums. 

If you want to learn more about market gardening, these two books inspired much of the design and layout of this tool:
1.	The Market Gardener – Jean-Martin Fortier
2.	Crop Planning for Vegetable Growers - Frederic Theriault & Daniel Brisebois

",16,16,8,0,farming,"[farming, marketgardening, permaculture]",00000
1135,prawnalith,Terkwood,N/A,https://github.com/Terkwood/prawnalith,https://api.github.com/repos/Terkwood/prawnalith,"Sensor instrumentation, data management, and minimal UI for tanks full of freshwater prawns 🦐","# The Prawnalith: Small-Scale Aquarium Management

Various programs to manage sensor data from a freshwater prawn grow, and make it available from anywhere in the world, via a minimal UI.

![Get a Skillet... Prawnto](https://gist.githubusercontent.com/Terkwood/c37c50d41bcc84b409eeaa555f788ed0/raw/ec42ccbdee0c3f518400253b5e1270f5488f4f1c/prawnto.gif)

We currently support the display of temperature and pH readings onto small LED matrix screens attached to inexpensive ESP8266 microcontrollers.

Temperature and pH levels are read continuously from the prawns' tank using a DS18B20 submersible temperature sensor, and a SEN 0169 pH meter.

## Features

Implements a gated frontend in Rust/webassembly which renders temp & pH levels of tanks.  This can be used to monitor tank levels from afar. 

Provides support for continuous sensing of pH levels using a SEN0169 pH sensor linked to an ESP8266 microcontroller.

Provides basic temperature readings for a given aquarium, using a DS18B20 temp sensor hooked to an ESP8266 microcontroller. 

Displays temp and pH readings on remotely networked LED arrays.

Provides a ""pH Reference Calibration"" webservice which allows pH sensors to query their high & low pH calibration values in millivolts when coming online.

Includes several docker images and config which can be hosted on a Raspberry Pi 3 B+. These include:

- ph & temp sensor tracker (listens for temp & pH updates provided by ESP8266 over MQTT and writes them to database)
- led status helper (polls database for the temp & pH of individual tanks, and pushes a formatted message to MQTT; this can be read by LED microcontroller units)
- redis update aggregator (pushes temp & pH level updates to google cloud/pub sub)
- mosquitto setup in docker compose
- redis setup in docker compose (stores miscellaneous data, including tank status for LED display)

Includes basic examples of pH meter readings using an Arduino, and serial communication between an Arduino wired to an ESP8266.

Includes configuration for a google container OS instance.  Runs a small Rocket.rs webserver which can broker temp & pH data requests for the frontend and receive updates to these levels from google cloud pub/sub push mechanism.

## Resources 

- pH sensor wiring and example code: https://www.element14.com/community/docs/DOC-89396/l/arduino-projects-for-arduino-day-water-and-irrigation-projects-part-2
- LED with scrolling text tutorial: https://gustmees.wordpress.com/2018/04/08/first-steps-with-the-arduino-uno-r3-maker-makered-coding-scrolling-text-with-8x8-led-matrix/amp/?__twitter_impression=true
- Cross compiling rust for armv7 from MacOSX using vagrant: https://medium.com/@wizofe/cross-compiling-rust-for-arm-e-g-raspberry-pi-using-any-os-11711ebfc52b
- Cross compiling OpenSSL: https://assil.me/2017/09/30/cross-compile-openssl-arm-zynq.html


## License

Licensed under either of

 * Apache License, Version 2.0, [LICENSE_APACHE](LICENSE_APACHE) or http://www.apache.org/licenses/LICENSE-2.0
 * MIT license [LICENSE_MIT](LICENSE_MIT) or http://opensource.org/licenses/MIT

at your option.

### Contribution

Thank you for your interest!

Unless you explicitly state otherwise, any contribution intentionally submitted
for inclusion in the work by you, as defined in the Apache-2.0 license, shall be dual licensed as above, without any additional terms or conditions.
",16,16,2,40,farming,"[aquarium, arduino, docker, electronics, esp8266, espressif, farming, freshwater-prawns, microcontrollers, mqtt, ph-levels, prawn, prawns, raspberry-pi, redis, rust, rust-lang, sensors, temperature, water-quality]",00000
1136,Poultry-farming-management-system,Musanza,N/A,https://github.com/Musanza/Poultry-farming-management-system,https://api.github.com/repos/Musanza/Poultry-farming-management-system,The aim of this study was to develop an online poultry farming management system to help poultry farmers manage their farms easily.,"# About Us

Poultry farming is the raising of birds either domestically or commercially for primarily meat or eggs but also for feathers. Chickens, ducks and turkeys are the most raised birds with chickens being the most common raised birds. The chickens which are raised for eggs are called layer chickens, and the chickens which are raised for their meat production are called broiler chickens. Poultry farming business has numerous benefits. As a result many farmers prefer to invest in this business. People generally establish poultry farming for the purpose of producing eggs, meat and generating high revenue from these products. All over the world billions of chickens are being raised as a good source of food from their eggs and meat. Most poultry farming businesses face the challenges of managing the farm this is mostly because of the file system of keeping records and entry of transactions. Currently the poultry farm industry mainly uses the ledgers based system and manual entry for each transaction required, record of eggs, quantity of birds as well as sales and expense record is calculated on separate ledgers. Production percentage is calculated manually for every day production. Feed consumption per day or month is first written and them total is calculated. Sales and expense record as well as profit and loss calculations require a lot of time to go through.

The aim of this study was to develop an online poultry farming management system to help poultry farmers manage their farms easily.

# Objectives

    To automate the manual means of recording poultry farming records.
    To provide a system that can facilitate the update of poultry farming records.
    To develop a system that will aid the presentation of reports pertaining the poultry farming.

# Screenshots
![Register Screen](https://github.com/Musanza/Poultry-farming-management-system/blob/main/screenshots/d.png)
![Login Screen](https://github.com/Musanza/Poultry-farming-management-system/blob/main/screenshots/b.png)
![Dashbaord Screen](https://github.com/Musanza/Poultry-farming-management-system/blob/main/screenshots/a.png)
![Form Screen](https://github.com/Musanza/Poultry-farming-management-system/blob/main/screenshots/c.png)
",14,14,2,0,farming,"[farming, php, poultry-farm-records, poultry-farming]",00000
1137,farm-monitoring-system,apoorvtripathi1999,N/A,https://github.com/apoorvtripathi1999/farm-monitoring-system,https://api.github.com/repos/apoorvtripathi1999/farm-monitoring-system,Farm Monitoring System uses arduino ide and basic sensor modules to address various issues of farming.,"# farm-monitoring-system
The farm monitoring system is a mixture of hardware and software additives. The hardware part includes embedded systems and software program is the Arduino ide.The Arduino ide displays readings from sensors are inserted using the hardware.The special sensors used are temperature and humidity sensor,pir sensor and soil moisture 
sensor. The facts gathered with the aid of the sensors is sent to the Arduino UNO microcontroller ATmega328.The gathered information may be displayed in a Arduino IDE. A GSM module is hooked up with the Arduino to facilitate messaging service which updates the farmers each 10 seconds approximately the climate conditions of the subject.
IV.HARDWARE USED
This project is aided with many hardwares. This proposed technology is an amalgamation of different sensors, microcontroller and communication medium to help the farmers to work on their farms.

A.Arduino uno

Arduino is a microcontroller to control the working of the sensors and manage the working of the device. The Uno version of Arduino is implemented in this project. It was developed by Arduino CC. The Arduino board comes with various number of pins. The pins are categorized as output and input pins. The input pins ac cepts digital as well as analog pins. It has 14 digital pins and 
6 analog pins. It accepts 7 to 20 volts of power for working. It also has an USB port. The Uno was the first version of Arduino to be introduced in the Arduino family. 

B.DHT11 Temperature And Humidity Sensor

The DHT11 Temperature And Humidity sensor is used to sense temperature and humidity present in the atmosphere. It has 3 pins generally. One pin is used for transmitting signals, the next pin is used to receive signals and the last pin is data transfer. It can be used for prolonged time period. It gives approximate results. It regularly sends information to Arduino Uno. The information
consists the signals which contain the values gathered about temperature and humidity. It is reliable on nature. It gives a very fast response. 

C.Soil Moisture sensor

The Soil Moisture sensor is used to sense moisture content in the soil. It checks the volume of water content or moisture present in the soil. The calculations are done in the soil moisture sensor through coefficients. It estimates the volume of water content in the soil. It detects the water content in the soil and gets and sends the analog signals which is shown digitally. It transmits
the the signals containing information or data or values of the condition of soil to Arduino to futher process it and display.

D.PIR Sensor

PIR sensor stands for Passive Infrared Sensor. It detects the movement around it and sends the signals accordingly. It radiates electromagnetic radiation. It hits the object and comes back to the PIR sensor telling that there is presence of an object in a specified range. An led or Buzzer can be attached with PIR sensor so that the hindrance can be detected easily. It will help the farmer to know if any animal has broken into field and is destroying  crops. In this way the farmer can save his crops.

E.GSM Shield
The GSM Shield is used as a method of communication in this proposed technology. The GSM Shield is sed to send text messages to the farmer’s cell phone about the conditions of the temperature, humidity soil and field area. A separate coding has to be done for gsm shield in Arduino. It needs a sim to implement it. The number of the sim has to be fed in the coding. The number would belong to
farmer to which the messages has to be sent. The values detected and transmitted by the sensors to Arduino is sent by the gsm to the cell phone. Hence it uses a network which does not require internet and overcpmes the biggest loop hole of projects of this domain. 
It can also be used to make voice calls. It is bas3d on radio modem M10 Quectel. It incorporates AT Commands. It also has several pins to connect to. It uses TCP and UDP protocol for sending data packets. It uses HTTP which is HyperText Transfer Protocol.


The Farm Monitoring System can be used for destiny factors of agriculture. This would be a relief for farmers since it decreases the load of manual efforts A gadget to      screen moisture levels within the soil changed into constructed and the assignment furnished an possibility to take a look at        the prevailing structures, at the side of their features anddownsides. The stated gadget 
may be used to turn on/off the water sprinkler in keeping with soil moisture levels thereby automating the technique of 
irrigation that is one of the most time ingesting activities in farming. Agriculture is one of the most effort-consuming hobby.     The device makes use of statistics from soil moisture sensors to irrigate soil FUTURE SCOPE
The proposed assignment may be further greater with the aid of including pump to  the       machine to facilitate computerized irrigation. The automated irrigation  device may be triggered when the moisture      content of the soil is going under the brink       stage.  The threshold degree can be decided    in the code written for Arduino. So whenever the fee for moisture goes under the brink
degree, the pump gets mechanically on and       irrigation is performed to an ok  degree.To improve the efficiency and 
effectiveness of the machine, the noted recommendations can be placed into attention. Alternative of controlling the water pump may be given to the farmer by way of which they are able to turn on or off the pump to be able to start or prevent the manner of irrigation without being there on     farm at that gift time. The farmer can know   earlier about the negative climate situations. In such 
instances farmer might also want to    forestall the machine remotely or routinely. The concept of the usage of IOT for 
irrigation can be prolonged in addition to  other tasks in farming together with farm   animals management, fireplace detection and climate manage.This could limit human intervention in   farming sports.
#For opening 
1. Download Arduino Ide from https://www.arduino.cc/en/Main/Software .
2. Import the  	DHT ,GSM_GPRS_GPS_Shield_GSMSHIELD libraries(copy and paste the folder to the library folder of the directory of your arduino ide).
3. open the arduino_code.ino file .
",13,13,4,1,farming,"[arduino, arduino-ide, arduino-uno, college-project, dht11, farming, gsm-shield, iot, iot-application, iot-platform, moisture-sensor, soil]",00000
1138,FarmBot,GravelCZ,N/A,https://github.com/GravelCZ/FarmBot,https://api.github.com/repos/GravelCZ/FarmBot,This is a Minecraft Farming bot.,"# FarmBot
This is a Minecraft Farming bot.

It wil be able to farm stuff automaticly(farmer) kill pepole when they attack the bot (guard) dig ores for you (miners) and many more !

",13,13,3,0,farming,"[bot, farmbot, farming, guard, kryonet, mcprotocollib, minecraft, minecraft-farming-bot, miner]",00000
1139,Farm-Simulator,Ta0uf19,N/A,https://github.com/Ta0uf19/Farm-Simulator,https://api.github.com/repos/Ta0uf19/Farm-Simulator,JavaFX Application helps agronomists and farmers collaborate on farming decisions 🌱 🌿,"[![License: GPL v3](https://img.shields.io/badge/License-GPL%20v3-blue.svg)](https://www.gnu.org/licenses/gpl-3.0)
# Farm Management Software
Java/FX Application helps agronomists and farmers collaborate on farming decisions<br/>
Map Field management system facilitates remote monitoring of agricultural land and enables its users to efficiently plan and carry out agricultural operations.
<h3>Screen</h3>
<div>
<img src=""https://preview.ibb.co/jhDb2b/1.jpg"" width=""420px"" height=""250px"">
<img src=""https://preview.ibb.co/mWBUNb/3.png"" width=""420px"" height=""250px""  style=""display: inline; margin-left:15px;"">
<img src=""https://preview.ibb.co/erT9Nb/4.png"" alt=""alt text"" width=""420x"" height=""250px""  style=""display: inline;"">
<img src=""https://preview.ibb.co/itzuoG/5.png"" alt=""alt text"" width=""420px"" height=""250px""  style=""display: inline; margin-left:15px;"">
<img src=""https://preview.ibb.co/dtqdFw/6.png"" alt=""alt text"" width=""420px"" height=""250px""  style=""display: inline;"">
</div>
<h2>Libraries</h2>
<img src=""https://image.ibb.co/btrcan/logo_JFX.png"" alt=""logo_JFX"" width=""200px"" border=""0"">
<a href=""https://github.com/jfoenixadmin/JFoenix""><b>JFoenix</b></a> JavaFX Material Design Library<br/><br/>

<img src=""https://image.ibb.co/juP8gS/gmapsfx.png"" alt=""gmapsfx"" width=""200px"" border=""0"">
<a href=""http://rterp.github.io/GMapsFX/""><b>GmapsFX</b></a> Wrapper to the Google Map's Javascript API

<h2>Licence</h2>
<p>GPLv3
<a href=""http://www.gnu.org/licenses/agpl-3.0.html"" rel=""nofollow"">https://www.gnu.org/licenses/gpl-3.0</a></p>
",13,13,3,0,farming,"[farming, gmapsfx, java, javafx, jfoenix, management, software]",00000
1140,Eco-fertilization,Gekko12,N/A,N/A,https://api.github.com/repos/Gekko12/Eco-fertilization,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1AD:17C0:299913:56BAC7:6522416D.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,farming,"[N, /, A]",00000
1141,farmsense.ai,kausthub-kannan,N/A,https://github.com/kausthub-kannan/farmsense.ai,https://api.github.com/repos/kausthub-kannan/farmsense.ai,"farmsense.ai is an AI assistant for exponentially growing Hybrid farming. To enhance farmers' yield, this application assists them by detecting diseases of plants and poultries and providing crop and egg incubation analysis. CNN, YOLO, and XGBoost are used for the models.  ","<img src=""assets/logo.png"" width=55px align=""left""/> <h1>farmsense.ai</h1>
<div>
  <img src=""https://img.shields.io/badge/Build-version_2-blue"" width=110/>
  <img src=""https://img.shields.io/badge/Computer%20Vision-red"" width=110/>
</div>

<br />

**farmsense.ai** is an Ai assistant for exponentially growing Hybrid farming. To enhance farmers' yield, this application assists them by detecting diseases of plants and poultries and providing crop and egg incubation analysis. CNN, YOLO, and XGBoost are used for the models.  

Please ⭐ and 🍴 the repository.  


[<img src=""assets/home-screen.jpeg""/>]('assests/demo.mp4')

<h3>Features Introduced</h3>
<ol>
  <li>Plant Diseases Detection - ResNetV250 Model (Fine Tuned) - Detects plant diseases</li>
  <li>Poultry Diseases Detection - MobileNetV250 Model (Fine Tuned) - Detects poultry diseases</li>
  <li>Egg Incubation Analysis - YOLOv8 Object Detection Model (Fine Tuned) - Detecs fertility status of eggs</li>
  <li>Crop Analysis - XGBoost ML Model - Recommendation system</li>
</ol>

<h3>Data</h3>
<a href=""https://www.kaggle.com/datasets/vipoooool/new-plant-diseases-dataset"">Plant Diseases Detection</a> <br />
<a href=""https://www.kaggle.com/datasets/kausthubkannan/poultry-diseases-detection"">Poultry Diseases Detection</a> <br />
<a href=""https://universe.roboflow.com/uit-vbp9l/egg-fertilely-detection-dgg8z"">Egg Incubation Analysis</a> <br />
<a href="""">Crop Analysis</a> <br />

<h3>User Interface and APIs</h3>
<p>The use interface for the present version is a web application developed using ReactJS (VITE). The APIs are developed using FastAPI.</p>

<h3>Deployment</h3>
<p>Due to a lack of open source options, the deployment is tested in <b>Play with Docker</b></p>

<h4>Improvements in upcoming versions</h4>
<img src=""assets/architecture.png"" align=""center"" width=550/>
<ol>
  <li>Connecting the models for better Farmer UX</li>
  <li>IoT Embeeding System</li>
  <li>Introducing CI/CD pipelines</li>
  <li>Mobile stand-by application</li>
  <li>Improvised UI</li>
  <li>LLM models for translation</li>
</ol>

<h4>Collaborators</h4>
<a href=""https://github.com/kausthub-kannan"">Kausthub Kannan</a> (Model development)<br />
<a href=""https://github.com/p1utoze"">Aditya Awati</a> (MLOps)<br />
<a href=""https://github.com/RahulRudra81"">Rahul Rudra</a> (Frontend development)<br />
",10,10,2,0,farming,"[cnn-classification, computer-vision, deep-learning, farming, fastapi, machine-learning, reactjs, yolov8]",00000
1142,SmartAgrifood,smart-data-models,N/A,N/A,https://api.github.com/repos/smart-data-models/SmartAgrifood,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1E4:3493:270CFD0:50635D2:65223FF9.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,farming,"[N, /, A]",00000
1143,AgroWorldapp,theashishgavade,N/A,N/A,https://api.github.com/repos/theashishgavade/AgroWorldapp,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C14E:3B38:2CF54C:5D1E76:65223FFA.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,farming,"[N, /, A]",00000
1144,EvergreenAcres,Ferdzz,N/A,https://github.com/Ferdzz/EvergreenAcres,https://api.github.com/repos/Ferdzz/EvergreenAcres,Harvest Moon inspired game I work on for fun,"{'message': 'Not Found', 'documentation_url': 'https://docs.github.com/rest/repos/contents#get-repository-content'}",9,9,5,0,farming,"[2d-game, farming, java, libgdx, libgdx-game]",00000
1145,FS22_Dedi_Companion,FSGModding,N/A,https://github.com/FSGModding/FS22_Dedi_Companion,https://api.github.com/repos/FSGModding/FS22_Dedi_Companion,FS22 Dedicated Server Companion Mod,"This project has been abondoned.  We no longer support this.

# FSG FS22 Dedi Companion

[![License: MIT](https://img.shields.io/badge/License-MIT-yellow.svg)](https://opensource.org/licenses/MIT) ![GitHub release (latest by date)](https://img.shields.io/github/v/release/FSGModding/FS22_Dedi_Companion) ![GitHub Release Date](https://img.shields.io/github/release-date/FSGModding/FS22_Dedi_Companion) ![GitHub all releases](https://img.shields.io/github/downloads/FSGModding/FS22_Dedi_Companion/total)


FS22 Multiplayer Dedicated Server Companion saves all chat data to the current savegame and gives more control over dedicated servers.

This is a mod file for [Farming-Simulator 22](https://www.farming-simulator.com/) dedicated servers and clients to expand features for dedicated servers.  

Note: This is still a work in progress mod.  Not all features listed below are currently active and working as they should.

__Features ans Stuff__
- [Chat Logger](#chat-logger) - Logs player chats and saves them to active savegame as ChatLogger.xml
- [Chat Notifications](#chat-notifications) - Server will respond and post updates in in-game chat window.
- [Auto Admin](#auto-admin) - Admins can set to have them set as admin every time they join server in future.
- [Chat Commands](#chat-commands) - Change settings with chat commands.
- [Expand Link XML](#expand-link-xml) - Expand data output in server's Link XML API.

- [Screenshots](#screenshots)
- [Wanted Features](#wanted-features)
- [Known Issues](#known-issues)
- [Special Notes](#special-notes)

## Chat Logger
- Logs player chats and saves them to active savegame and in modSettings folder as ChatLogger.xml

Chat Logger listens for player chats and collects that data to save in an xml format that can easily be extracted.  

```xml
<chatLogger>
    <chat sender=""Greg"" msg=""Hi Everyone!"" farmId=""1"" fromUserId=""1tMDuQRobBhJvt2UQfsKUvCKQVHvvMJJ3svvjdfasdS4="" timestamp=""2023-01-08 13:27:53""/>
    <chat sender=""Bill"" msg=""Hey Greg!"" farmId=""1"" fromUserId=""1tMDuQRobBhJvt2UQfsKUvCKQVHvvMJJ3svvjdfasdS4="" timestamp=""2023-01-08 12:55:24""/>
    <chat sender=""Jeff"" msg=""Howdy goes it?"" farmId=""1"" fromUserId=""1tMDuQRobBhJvt2UQfsKUvCKQVHvvMJJ3svvjdfasdS4="" timestamp=""2023-01-08 12:55:24""/>
</chatLogger>
```

## Chat Notifications
- Server will respond and post updates in in-game chat window.

Server listens for the following chat text as set in the lang files: 

```xml
<text name=""chat_greetingTrigger01""     text=""hi"" />
<text name=""chat_greetingTrigger02""     text=""hello"" />
<text name=""chat_greetingTrigger03""     text=""hey"" />
<text name=""chat_greetingTrigger04""     text=""howdy"" />
<text name=""chat_greetingTrigger05""     text=""sup"" />
```

Server will respond with the following:

```xml
<text name=""chat_greeting01""            text=""Hey %s!"" />
<text name=""chat_greeting02""            text=""Hi there %s!"" />
<text name=""chat_greeting03""            text=""Hello %s!"" />
<text name=""chat_greeting04""            text=""Good day %s!"" />
<text name=""chat_greeting05""            text=""Howdy %s!"" />
```

Server will notify of the following actions:

Player Becomes Server Admin

> *PlayerName* is now Admin!

Server save game is triggered

> Game Saved Successfully!

## Auto Admin
- Admins can set to have them set as admin every time they join server in future.

Auto Admin will automatically save player data to Admins.xml within the modSettings folder on the server when a player becomes admin.  When player returns to the server, the server will check to see if that player is in the Admins.xml file, and if true, log them in as admin automatically.  

The admin can set the system to forget them with the *#forgetMe* text command, and it will no longer automatically make them admin.  The admin can reenable by typing *#rememberMe* in the text chat.  

## Chat Commands
- Change settings with chat commands.

  - #meAdmin - If user has logged in as admin before, they can use this to make them admin again upon return to server.
  - #meNoAdmin - Removes admin from yourself on current session.
  - #getUsers - Displays all available users on server with ID.
  - #moo - This command prints a text cow because why not.
  - #makeAdmin - Admin can use this command to make another online user an admin.  User ID provided from #getUsers command.
  - #rememberMe - Sets user to auto admin when they log on the server.
  - #forgetMe - Sets user to no longer auto admin when they log on the server.
  - #getFarms - Displays all available farms on server with ID.
  - #makeFM - Add user to farm with user id and farm id.  User ID provided from #getUsers command.  Farm ID provided from #getFarms command.
  - #saveVehicles - Saves locations of all vehicles on the server to a file to be called later with #resetVehicles.

## Expand Link XML
- Expand data output in server's Link XML API.

Currently only admin data from Admins.xml is added to the Link XML.  We do have plans to keep expanding this feature for use with the Farm Sim Game Bot.

## Screenshots
![#greetings](https://raw.githubusercontent.com/FSGModding/FS22_Dedi_Companion/main/z-non-zip/fsg-fs22-dedi-companion-greeting-chat.png)

![#forgetMe](https://raw.githubusercontent.com/FSGModding/FS22_Dedi_Companion/main/z-non-zip/fsg-fs22-dedi-companion-forgetme.png)

![#getUsers](https://raw.githubusercontent.com/FSGModding/FS22_Dedi_Companion/main/z-non-zip/fsg-fs22-dedi-companion-getUsers.png)

![#getFarms](https://raw.githubusercontent.com/FSGModding/FS22_Dedi_Companion/main/z-non-zip/fsg-fs22-dedi-companion-getfarms.png)

![#makeAdmin](https://raw.githubusercontent.com/FSGModding/FS22_Dedi_Companion/main/z-non-zip/fsg-fs22-dedi-companion-makeadmin.png)

![#meAdmin](https://raw.githubusercontent.com/FSGModding/FS22_Dedi_Companion/main/z-non-zip/fsg-fs22-dedi-companion-meadmin.png)

![#moo](https://raw.githubusercontent.com/FSGModding/FS22_Dedi_Companion/main/z-non-zip/fsg-fs22-dedi-companion-moo.png)

![#rememberMe](https://raw.githubusercontent.com/FSGModding/FS22_Dedi_Companion/main/z-non-zip/fsg-fs22-dedi-companion-rememberme.png)

## Wanted Features
- MOTH - Message of the day setting to welcome players when they join the server, or on a timer.
- Vehicles locations save and reset ability.  The ability to save where vehicles are parked, then use a command to reset all vehicles to those remembered locations.  Troll cleanup, or put vehicles away when done.
- Vehicle refill - a feature that will auto fill everything on a farm.  Seed, fert, fuel, electric, etc?

## Known Issues
- #meNoAdmin - Remove admin perms.  Does not currently work.  Unable to remove without reconnecting to the server.
- #makeFM - Not complete.  Does not currently work.
- #saveVehicles - Not complete. Does not currently work.

## Special Notes
- We know that it is possible to have discord to server chat, however that requires FTP access to the server.  It is not possible to inject data into the server remotely without updating the savegame and restarting the server.  Farm Sim Game Bot will not support this ability as FTP access can create security concerns.
",9,9,5,3,farming,"[dedicated-game-server, farming, farming-simulator, farming-simulator-22, fs22, game-statistics, mod]",00000
1146,Farmer,SystangoTechnologies,SystangoTechnologies,https://github.com/SystangoTechnologies/Farmer,https://api.github.com/repos/SystangoTechnologies/Farmer,An implementation of a farming service with option to use in-memory or Redis as the cache.,"{'message': 'Not Found', 'documentation_url': 'https://docs.github.com/rest/repos/contents#get-repository-content'}",9,9,5,0,farming,"[cloning, directory, docker, docker-compose, dockerfile, farming, nodejs, redis, redis-client]",00000
1147,livestock-tracker,DigiBanks99,N/A,https://github.com/DigiBanks99/livestock-tracker,https://api.github.com/repos/DigiBanks99/livestock-tracker,Tracking system for livestock on a farm. Recording animal data and delivering reports.,"# Livestock Tracker - The simple livestock management app

TODO
",8,8,3,21,farming,"[angular, animals, dotnet, farming, livestock, ngrx]",00000
1148,farm-gym,farm-gym,farm-gym,https://github.com/farm-gym/farm-gym,https://api.github.com/repos/farm-gym/farm-gym,Farming Environment Gym factory for Reinforcement Learning,"![](https://img.shields.io/codecov/c/github/farm-gym/farm-gym)
# FarmGym

FarmGym is a Farming Environment Gym factory intended to model sequential decision-making on farms seen as dynamical system with many entities interacting.
FarmGym offers the possibility to build ad-hoc games by specifying a farm with different entities, different rules and scores.
This enables to consider from very simple to highly complicated environments. 
The following [user-guide](FarmGym.pdf) contains detailed presentation of FarmGym. 




## About this project

#### Authors
Odalric-Ambrym Maillard (v2) and Thomas Carta (v1)

**Principal contact**:

- first name: odalric-ambrym
- last name: maillard
- institute: inria
- country: france
- email: first name . last name @ institute . fr

#### Acknowledgements
This work has been supported by the French Ministry of
Higher Education and Research, Hauts-de-France region, Inria within the team-project Scool and the MEL. The authors
acknowledge the funding of the I-Site ULNE regarding project R-PILOTE-19-004-APPRENF, and the project A-EX SR4SG of Inria.
We also thank the French Agricultural Research Centre for International Development
(CIRAD) for insightful discussions.
We thank the contribution of Thomas Carta, who started working on an earlier version (v1) of this project during his internship at Scool in summer 2020.
We thank Romain Gautron (CIRAD/CGIAR) and Timothée Mathieu (Inria) for valuable inputs.


### Citing FarmGym
If you use `FarmGym` in your publications, please cite us following this Bibtex entry:

```bibtex
@article{maillard2022farmgym,
title={Farm-Gym: A modular reinforcement learning platform for agronomy games.},
author={Maillard, Odalric-Ambrym},
year={2022},
school={Inria Lille}}
```

#### Contributing
Any new issue is welcomed! If you want to actively contribute, you can check issues with the **wishlist** tag.


## Getting started

The following [user-guide](FarmGym.pdf) contains detailed presentation of FarmGym. 

### Illustrative notebooks

As a first illustration of farm-gym, one can look at the following colab notebooks: the first is an ""Interactive farm"" [![Open In Collab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/drive/1vUkYnRyxNEAgd8cuZKRn6iduroSYSj8O?usp=sharing) the second is a notebook in which we train a basic PPO agent on the same farm [![Open In Collab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/drive/1AauxwIGebI11fF1sJgZp9nYx5M1SoPfV?usp=sharing). The first notebook allow a user to be the agent, by inputing manually the actions to play on a 1x1 farm containing beans with pests and weeds. The second notebook is a very basic implementation of PPO on the same farm. These notebooks were made using [rlberry-farms](https://github.com/farm-gym/rlberry-farms) which is a collection of two very simple farms on which one can try some classical RL algorithms with [rlberry](https://github.com/rlberry-py/rlberry) library. 


### Packages
It is recommended to use gym version >= 0.25.2, due to better support of dictionaries to define Spaces.

### Entities 
Minimal entities to define a farm are the Weather, the Soil and the Plant. 
Additional entities can be added, such as Birds, Pests, Weeds, or Facilities (e.g. Scarescrow, Hedge) and Fertilizers.
Each entity offers a list of actions made available to the learner.

### Rules 
The rules typically specify the initial and stopping conditions of the game, the subset of actions allowed for the considered game,
or the number of actions allowed each day.

### Score
The score may incorporate several features such as yield, biodiversity, resource usage, and specifies the cost of each action.

### Games
 Specifying various entities, rules and scores enables to generate various games. 
 FarmGym comes with a bunch of predefined games that can be seen as illustrative examples to build user-defined games.

### Minimal environment
```python
import gym
from farmgym.v2.games.farms_1x1.clay_corn.farm import env

farm = env()

is_done = False
while not is_done:
    obs, reward, is_done, info = farm.step(farm.action_space.sample())
```
Note however that a FarmGym environment implements AO-MDP (Actively-observed Markov Decision Processes), and not just PO-MDP.
This can be recasted into a two-stage PD-MDP, alternating between observation steps and intervention steps.
Using the gym PO-MDP approach, the action space combines all observation-actions and intervention-actions, 
so that asking random actions may generate observation-actions at intervention steps or
intervention-actions at observation steps. 

Alternatively, one may want to separate between observation and intervention times, and asks random observation-action
or random interention-action at the appropriate time. 
We provide such an example below, here using the farmgym_step function instead of step.
```python
import gym
from farmgym.v2.games.farms_1x1.clay_corn.farm import env

farm = env()

is_done = False
while not is_done:
    observation_schedule = []
    observation_schedule.append(farm.random_allowed_observation())
    obs1, _, _, info = farm.farmgym_step(observation_schedule)
    obs_cost = info['observation cost']

    intervention_schedule = []
    intervention_schedule.append(farm.random_allowed_intervention())
    obs2, reward, is_done, info = farm.farmgym_step(intervention_schedule)
    int_cost= info[""intervention cost""]
```
The difference between step and farmgym_step is the format of the action given as input.
Any gym action can be converted into its corresponding farm_gym format using farm.gymaction_to_farmgymaction.

### Logging

To know what happened in the farm at time of death, use the debug log-level

```python
import logging
logging.basicConfig()
logging.getLogger().setLevel(logging.DEBUG)
```

### Rendering
The basic rendering option is to print a farm, which output a text representation of the farm with all entities and available actions.
When rendering is called with farm.render(), the environment produces an image representing the farm at the current day.
Once a game is done, it is possible to assemble all these images into a movie, calling the method generate_video. 
It is also possible to generate a gif using the method generatee_gif.
Further, we store all these figures and the movie in a sub-folder for convenience.
```python
import gym
from farmgym.v2.games.farms_1x1.clay_corn.farm import env
from farmgym.v2.farm import generate_video

import os
import time
time_tag = time.time()
os.mkdir(""run-"" + str(time_tag))
os.chdir(""run-"" + str(time_tag))

farm = env()

is_done = False
while not is_done:
    farm.render()
    obs, reward, is_done, info = farm.step(farm.action_space.sample())
generate_video(image_folder='.', video_name='farm.avi')
```

### Monitoring
A FarmGym environment typically comes with many states. It is possible for the developer to monitor such variables.
It is possible to do usingthe method farm.add_monitoring(var), where var is the list of considered variables.

### Complete gym example
We detail another way to try an environment below. 
The method register_all scans for all environments defined in farmgym and register them to gym.
It outputs the list of names of each environment. 
Then, the method run from  farmgym.v2.games.rungame runs a complete game,
collects rewards and costs, gather all rendered images if asked, and output all this in a sub-folder.
It also tests is the environment is compatible with gym.

```python
import gym
from farmgym.v2.games.register_all import register_all
from farmgym.v2.games.rungame import run_randomactions

env_list=register_all()

env = gym.make(env_list[2],100)
farm = env.unwrapped
run_randomactions(farm,max_steps=100,render=True, monitoring=False)
```

You can find further examples in the tests folder.


## Plants

You can grow several plants. 

Beans
<p align=""center"">
<img src=""farmgym/v2/specifications/sprites/bean_growing.png?raw=true"" width=""200"">
<img src=""farmgym/v2/specifications/sprites/bean_blooming.png?raw=true"" width=""200"">
<img src=""farmgym/v2/specifications/sprites/bean_fruiting.png?raw=true"" width=""200"">
<img src=""farmgym/v2/specifications/sprites/bean_fruit.png?raw=true"" width=""200"">
</p>


Corns
<p align=""center"">
<img src=""farmgym/v2/specifications/sprites/corn_growing.png?raw=true"" width=""200"">
<img src=""farmgym/v2/specifications/sprites/corn_blooming.png?raw=true"" width=""200"" >
<img src=""farmgym/v2/specifications/sprites/corn_fruiting.png?raw=true"" width=""200"">
<img src=""farmgym/v2/specifications/sprites/corn_fruit.png?raw=true"" width=""200"">
</p>


Tomatoes
<p align=""center"">
<img src=""farmgym/v2/specifications/sprites/tomato_growing.png?raw=true"" width=""200"">
<img src=""farmgym/v2/specifications/sprites/tomato_blooming.png?raw=true"" width=""200"">
<img src=""farmgym/v2/specifications/sprites/tomato_fruiting.png?raw=true"" width=""200"">
<img src=""farmgym/v2/specifications/sprites/tomato_fruit.png?raw=true"" width=""200"">
</p>

## Examples
### Basic farm
This is an example of a 1x1 field with a Weather, Soil and Plant entity. The Plant is Corn and Soil is Clay. 
Here the learner succesfully harvest, although perhaps a little early.

<p align=""center"">
<img src=""Readme_figs/farm_1x1_clay_corn.gif?raw=true"">
    <div align=""center"">A basic farm</div>
</p>

### More complex farm
Below is an example of a more complex 3x4 farm, with Weather, Soil, Plant and Fertilizer entities.
The Plant is a Corn and soil is clay.
<p align=""center"">
<img src=""Readme_figs/farm_3x4_clay_corn_fertilizer.gif?raw=true"">
    <div align=""center"">A more complex farm</div>
</p>

Below is another example of a more complex 3x4 farm, with Weather, Soil, Plant, Weeds but also Herbicides entities.
The Plant is a Tomato and  soil is sand. Note that here, the learner has waited too long and the tomatoes have rotten before being harvested.

<p align=""center"">
<img src=""Readme_figs/farm_3x4_sand_tomato_weeds_fail.gif?raw=true"">
    <div align=""center"">A more complex farm</div>
</p>

Another example when the plant is Beans and the soil is clay. Here the learner has harvested at the correct time.

<p align=""center"">
<img src=""Readme_figs/farm_3x4_clay_bean_weeds.gif?raw=true"">
    <div align=""center"">A more complex farm</div>
</p>

### Difficult farm game
Finally, below is a harder game, showing  a 3x4 farm with Weather, Soil, Plant, Fertilizer, but also Birds, Pests, Weeds, Pollinators entities.
There are also Facility entity, which enables to put a scarecrow and Cide entity.
Here the random agent fails due to combination of all these effects.

<p align=""center"">
<img src=""Readme_figs/farm_3x4_complex_fail.gif?raw=true"">
    <div align=""center"">A difficult game</div>
</p>


",8,8,2,0,farming,"[farming, reinforcement-learning]",00000
1149,zimfarm,ZimboPy,N/A,N/A,https://api.github.com/repos/ZimboPy/zimfarm,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C144:6829:2E3D8A0:5EB1E71:65224003.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,farming,"[N, /, A]",00000
1150,SMART-IRRIGATION-USING-ARTIFICIAL-INTELLIGENCE-AND-IOT,lukefire5156,N/A,https://github.com/lukefire5156/SMART-IRRIGATION-USING-ARTIFICIAL-INTELLIGENCE-AND-IOT,https://api.github.com/repos/lukefire5156/SMART-IRRIGATION-USING-ARTIFICIAL-INTELLIGENCE-AND-IOT,AN IOT DEVICE CONNECTED WITH ANDROID APP FOR SMART IRRIGATION,"# SMART IRRIGATION USING ARTIFICIAL INTELLIGENCE AND IOT

### Abstract:
The farm can be technologized with electronic innovation that constantly screens the states of crops, soil, and condition so the crops could be given watering and shed as required. The entirety of this can be controlled and observed online with the utilization of IoT and human-like intelligence can be added to it by training our model with our proposed algorithm. We will make a device that will be interfaced with a water pump and a shed to protect the garden from light and rain, controlled by a single-channel relay. The water siphon and shed are consequently controlled dependent on the estimations of the different natural elements like temperature, moistness, soil dampness, and light power which we can quantify through sensors like Temperature and Humidity sensor (DHT-11), Moisture sensor and LDR Light sensor. Through our research work, we will try to make the model intelligent by storing the previous scanned values in the database and doing the pre-perception based on historic values stored in the learning phase of the working model. We will be using a linear regression algorithm to train our model.

### Find video for the demo of the app
[click me to watch the app video](https://www.youtube.com/watch?v=j_sHtFuISoo)

## FLOW CHART
![here](https://github.com/lukefire5156/SMART-IRRIGATION-USING-ARTIFICIAL-INTELLIGENCE-AND-IOT/blob/master/ss/flowchart.png)

## CIRCUIT BLUEPRINT
![here](https://github.com/lukefire5156/SMART-IRRIGATION-USING-ARTIFICIAL-INTELLIGENCE-AND-IOT/blob/master/ss/Blueprint.PNG)

## HARDWARE DEVICE
<img src=""https://github.com/lukefire5156/SMART-IRRIGATION-USING-ARTIFICIAL-INTELLIGENCE-AND-IOT/blob/master/ss/IMG_20200603_165151_HDR.png"" width=""800"" height=""500"">

## ANDROID APPLICATION SCREENSHOTS
<img src=""https://github.com/lukefire5156/SMART-IRRIGATION-USING-ARTIFICIAL-INTELLIGENCE-AND-IOT/blob/master/ss/Screenshot_20200603-175231.png"" width=""250"" height=""400"">
<img src=""https://github.com/lukefire5156/SMART-IRRIGATION-USING-ARTIFICIAL-INTELLIGENCE-AND-IOT/blob/master/ss/Screenshot_20200603-175243.png"" width=""250"" height=""400"">
<img src=""https://github.com/lukefire5156/SMART-IRRIGATION-USING-ARTIFICIAL-INTELLIGENCE-AND-IOT/blob/master/ss/Screenshot_20200603-175255.png"" width=""250"" height=""400"">
<img src=""https://github.com/lukefire5156/SMART-IRRIGATION-USING-ARTIFICIAL-INTELLIGENCE-AND-IOT/blob/master/ss/Screenshot_20200603-175300.png"" width=""250"" height=""400"">
",8,8,2,0,farming,"[android, android-application, automatic-irrigation, farming, firebase, firebase-database, internet-of-things, iot, irrigation-control-system, irrigation-system, nodemcu-esp8266, smart-farming, smart-irrigation, weather-api]",00000
1151,Arduino_Ultrasonic_Anemometer,Amr-MKamal,N/A,https://github.com/Amr-MKamal/Arduino_Ultrasonic_Anemometer,https://api.github.com/repos/Amr-MKamal/Arduino_Ultrasonic_Anemometer,"Advanced Weather Station based on RPI4 ,Arduino & Ultrasonic Anemometer, it posts it's weather analytics directly on FarmOS and can also work with Firebase with up 5 Hz measurement frequency ","![](https://github.com/Amr-MKamal/Arduino_Ultrasonic_Anenometer/blob/main/farmtopia-logo.png)
# Advanced RPI4 Weather Station 
This project aims to build an independent agricultural weather solar powered station for precision agricultural application 
The device is based on raspberry pi & Arduino with ultrasonic anemometer and resistive soil sensor and DHT22 for air temperature & humidity
and other add-ons available according to your application or specific weather needs, the data and analytic information are sent as JSON packages to FarmOS that is either locally hosted or on hosting service (requires 4G usb dongle), FarmOS helps you manage big sensor data easily while monitoring all farm sensors and reports in one platform, it can also act as DaaS for other application.
This Product is the first of Farmtopia IOF(Internet Of Farm) Line and it's opensourced to support GODAN mission for easy & open agricultural data 
it can work both stationary and mobile and can be easy replicated at home as described here
## Measured Data
Measured Data| How
------------ | -------------
Wind speed & frequency in 3-dimentional direction | By calculating Ultrasonic error
Air Temperature & humidity | Am2301 Sensor
GPS Location | USB GBS Dongle 
Soil Moisture | Resistive soil sensor
Optional Add-ons | / 
## What you will need
Raspberry Pi set : which is an RP computer with SD preloaded with raspberry OS , and a pinoir camera (optional)
6xUltrasonic Anemometer : placed in perpendicular directions facing each other (X.Y.Z) as a network with different enables or different triggers.
Dongles : GPS Dongle (Optional/you can input GPS coordinate manually) , 4G dongle (Optional) if there is no WiFi coverage
Solar System : a basic 30W solar panel that Charges the Main Super polymer battery via the MPPT solar charger which also powers the UPS battery pack via usb cable which is responsible for powering the raspberry pi which in turns communicates and powers the Arduino via the USB , this configuration aims to stabilize RPI power supply
FarmOS : which is the farming open-source management system that will act as an interface to the system to view and analyze sensors data.
Number | Device
------------ | -------------
1 | Raspberry pi 4 , 8GB version 
1 | SD Card 128	
1 | Arduino Mega 2560
1 | Arduino USB Cable
6 | JSNR04T Ultrasonics (Placed 40 Cm Apart)
1 | AM2301 temperature& humidity sensor
1 | ARDUINO SOIL MOISTURE SENSOR MODULE 
1 | Raspberry Pi 4 Battery Pack UPS
1 | Mini-USB to USB cable
1 | MPPT Solar Charger Controller 20A 12/24VDC with USB output
1 | 12V super polymer Li-ion Battery-6800 mah 
1 | Solar Panel 18V 30W 
1 | Weather Station Frame 3D printed or Stanlesteel enclosure 
### Extras/Optionals 
Number | Device
------------ | -------------
1 | Touch Screen	
1 | Raspberry Pinoir 2 Camera 
1 | Raspberry USB GPS Dongle 
1 | MLX9046 IR Sensor 
### 3D Concept for the frame
![3D Concept for the frame](https://github.com/Amr-MKamal/Arduino_Ultrasonic_Anenometer/blob/main/3D_Concept.jpeg)
## Repository content
File Name | Description 
------------ | -------------
README.md | Project Introduction
Arduino_weather.ino | Main Weather Sensing Arduino Application 
DHT.cpp | DHT Driver & Class functionalites for Am2301
DHT.h |Header File for DHT Class & Function documentation 
Special_Debug_functions.ino | Unit Test Cases as a debug program 
Wind_auto.cpp | Weather measurement functions
Wind_auto.h |Header File for Wind Class & Function documentation 
aggregator.sh | RPI bash script to catch Arduino serial and aggregate JSON package to farmos server

## Pi Setup
-First Install RPI OS(Full Version) on 128GB SD card, it's advised that the SD be as fast as possible to enhance the overall performance of Pi.
If you're using Headless pi , enable SSH on configuration file you can find it in the boot partition
### Prerequisites
-most of this dependencies may be preinstalled however it's good idea to recheck them:
```
sudo apt-get update && sudo apt-get upgrade
sudo apt-get install libffi-dev libssl-dev
sudo apt install python3-dev
sudo apt-get install -y python3 python3-pip
sudo apt-get install php5 -y
sudo apt install php-gd php-xml php-xmlrpc
sudo apt install mariadb-server
sudo apt-get install apache2 -y
sudo apt-get install gpsd gpsd-clients python-gps
sudo apt-get install arduino
git clone https://github.com/tbird20d/grabserial
```
-Install Docker with CLI
```
sudo curl -sSL https://get.docker.com | sudo sh
sudo pip3 install docker-compose
sudo systemctl enable docker
```
-Install [FarmOS](https://github.com/farmOS) Locally on Docker 
> FarmOS is a web-based application for farm management, planning, and record keeping. It is developed by a community of farmers, developers, researchers, and organizations with the aim of providing a standard platform for agricultural data collection and management.

 We use FarmOS for quickly interfacing with sensors and analyzing their big data 
```
git clone https://github.com/farmOS/farmOS.git
cd farmOS
sudo docker build -t farmos .
sudo docker run -p 80:80 -v ${PWD}/.data/www:/var/www/html farmos
```
You should refer to this [guide](https://farmos.org/development/docker/) on FarmOS official website for more details 
### Configure FarmOS
you can refer to this online [guide](https://www.linode.com/docs/guides/install-farmos/) to help you configure FarmOS installation 
### Add weather station as a sensor on FarmOS
First make sure Sensor Module on FarmOS is enabled , you can enable and add module via the development branch (just really a super user on the local platform), if you're using a hosting service make sure to ask them to enable the sensors module.
### Install & Configure Arduino libraries 
Install the following libraries with your Arduino Library Manager in Sketch > Include Library > Manage Libraries...SoftwareSerial
## Functional Weather Library
### DHT.h/DHT.CPP
you can refer to Adafruit [DHT](https://github.com/adafruit/DHT-sensor-library) library for DHT doucmentation , however for some reason they don't read temperature & humidity together so we will be using dht.read function with data [] buffer in a new function called renew_temp_hu(DHT ,Float* ,Float*).
### Wind_auto.h/Wind_auto.cpp
built on two classes,	JSNR04T which is an interface class that provides an instance of JSNR04T ultrasonic chip in **Auto mode** , with the needed functions to use the device as wind measurement tool by using the divergence in reading ultrasonic measurements with self-corrected sound speed calculated from air temperature & humidity.
and wind class which preforms the mathematical logic on recorded data to output the needed weather details.

Function Name | Input | Return | Description 
------------- | ------| -------| -----------------
JSNR04T(Constructor) | uint8_t EnPin, uint8_t RXpin, uint8_t type, uint16_t max_range) |void|Constructs a new object of type JSNR0RT that behaves as an instance of ultrasonic driver with EnPin for ground enable , RXpin for echo & type for operation type.
JSNR04T.begin|void|void|Enables (triggers) the ultrasonic then identifies & start a new serial communication with it.
JSNR04T.virtual_trigger|void|void|Set the ground pin for the ultrasonic to low so it starts it’s normal operation.
JSNR04T.resetTimeout|uint8_t timeout|void|Change the millisecond timeout of the ultrasonic measuring to change the range.
JSNR04T.normalize|void|void|Remeasure distance between two ultrasonics in no wind condition to update Nowind_distance.
JSNR04T.readJSNR04TSerial|void|int|reads the serial echo output of the ultrasonic and transforms it to int/nan in case of invalid reading.
JSNR04T.get_selfecho|void|uint16_t|Resets timeout to change the range so the sensor only reads it’s echo. 
JSNR04T.get_selfwindspeed|void|int| reads the time needed for an ultrasonic to read it's own echo(round trip) and transforms it to windspeed.
JSNR04T.transform_read|uint16_t x|float|	Transforms the measured distance with ultrasonic from mm to wind speed ( relative to sound speed).  
Wind(Constructor)|JSNR04T* ,JSNR04T* |void| Constructs an object of type wind which uses a pair of ultrasonic to measure the wind speed between them.
Wind.update|void|void|Update class values of wind speeds by taking a new read , also calculates the rate of change in windspeed.
Wind.get_avergewind|void|float|Calculates the average of 4 measurements between the ultrasonic pair according to working mode.
Wind.get_echofromahead|void|uint16_t|Reads the echo of the facing sensor.
renew_temp_hu|DHT ,float* temp ,float* hum|void|updates the value of temperature and humidity for a given DHT sensor
get_speedofsound|float Tc,float RH|float|estimates speed of sound in a given air temperature and humidity according to
set_windsensor|DHT|void|passes the pointer of the DHT to wind class 
get_echofromahead|JSNR04T u1 ,JSNR04T u2|int|an indpedandt function to also read the echo of the facing sensor( for testing ).
wind_cycle| Wind* WindX ,Wind* WindY ,Wind* WindZ|void|calculates and updates the windspeed and average (50 measurement average) wind speed of 3 wind objects representing the wind in 3D.
### Usage Examples :

define the needed pin values & configuration , construct the cycle objects according to pin configuration & sensors type , identify cycle variables

```
#define DHTPIN 53
#define mutual 0
#define soil_analog A0
#define soil_max 550
#define soil_min 10
#define Cycle_offset 10
#define DHTTYPE DHT21  
DHT dht(DHTPIN, DHTTYPE);
JSNR04T Ux1(45,10,mutual,2000) ,Ux2(37,13,mutual,2000),Uy1(47,50,mutual,2000),Uy2(31,10,mutual,2000) ,Uz1(41,12,mutual,2000),Uz2(39,11,mutual,2000);
Wind WindX(&Ux1,&Ux2), WindY(&Uy1,&Uy2) ,WindZ(&Uz1,&Uz2);
float CycTemp , CycHum , _CSS=340 , winspeed;
```
Call wind_cycle to update all values 
```
 wind_cycle(&WindX ,&WindY, &WindZ);
```
or just call Wind.update to update instantaneous speed of any dimension 
```
 Windx.update();
```
 print the values to serial port as JSON.
 > ""parameter"":""value"",

```
Serial.print(""\""Wind_Speed_x\"": "");Serial.print(""\"""");Serial.print(WindX.avgwind);Serial.print(""\"""");Serial.print("" , "");
Serial.print(""\""Maximum_Speed_x\"": "");Serial.print(""\"""");Serial.print(WindX.maxwind);Serial.print("" , "");
Serial.print(""\""Minmimum_Speed_x\"": "");Serial.print(""\"""");Serial.print(WindX.minwind);Serial.print(""\"""");Serial.print("" , "");
Serial.print(""\""Wind_frequencyofchange_x\"": "");Serial.print(""\"""");Serial.print(WindX.gust);Serial.print(""\"""");Serial.print("" , "");
```
use allmiss to adapt cycle delay to measurement errors as following

```
cycledelay=19000; // or as you preferred settings depending on power consumption 
allmiss=(WindX._selfmiss+WindY._selfmiss+WindZ._selfmiss)*selfecho_timeout;  // adobt self cycle delay into main delay 
allmiss+=(WindX._aheadmiss+WindY._aheadmiss+WindZ._aheadmiss)*headecho_timeout;
allmiss+= _tempmiss;
_tempmiss=0;
cycledelay-=allmiss;
delay(cycledelay);
```
use the special_debug_functions.ino to diagnose the application with stepped unit tests.

```
  if(dht.working) //doesn't update before 2 seconds
   delay(10);
 ultradis=Uz1.get_selfecho();
 Serial.print(""ultrasonic z1 is "");Serial.println(ultradis);
 winspeed=Uz1.transform_read(ultradis);
 Serial.print(""ultrasonic z1 windspeed  ""); Serial.println(winspeed);
 ultradis=Uz2.get_selfecho();
 Serial.print(""ultrasonic z2 is "");Serial.println(ultradis);
 winspeed=Uz2.transform_read(ultradis);
 Serial.print(""average is"");Serial.println(winspeed);
 delay(1000);
winspeed=WindZ.get_avergewind();
Serial.print(""average wind is "");Serial.println(winspeed);
wind_cycle(&WindX ,&WindY, &WindZ);
allmiss=(WindX._selfmiss+WindY._selfmiss+WindZ._selfmiss)*selfecho_timeout;
allmiss+=(WindX._aheadmiss+WindY._aheadmiss+WindZ._aheadmiss)*headecho_timeout;
allmiss+= _tempmiss;
//build the diagnostic or unit test according to your needs
```
### Timing 
The cron job activates the script every 10 minutes , the script Use grabserial to catch arduino serial for 30 seconds and restarts the count when it catches the JSON packet bracket and quit when the close bracket is seen while it takes the arduino 10 seconds (100 sample average) to record new readings, the cycle limit can be adopted by reducing the sampling rate.
script usage ( replace !public_key & !private_key with your sensor configuration
```
python3 /home/pi/grabserial/grabserial -d /dev/ttyACM0 -b 9600  -o /home/pi/serialtest.json  -e  30 -m ""^{.*"" -q ""}""
curl -H ""Content-Type: application/json"" -X POST -d ""@/home/pi/serialtest.json""  https://farmtopia.farmos.net/farm/sensor/listener/!public_key?private_key=!private_key --verbose
```
## Farmtopia Disclaimer :
This opensource project and all of it's components are the sole responsibility of it's developer, and although Farmtopia uses similar devices to build the commercial version of this weather station it doesn't necessarily use the same sourcecode or logic or hardware components nor it's responsible for the validity or the application of this opensource project . 
## License : 
[MIT License](https://github.com/Amr-MKamal/Arduino_Ultrasonic_Anenometer/blob/main/LICENSE) 
## Planned upgrades :
- [x] Project Pilot
- [ ] Replace Arduino Mega with MKR1310
- [ ] Use FireBase as a backup for sensors data
- [ ] Implement Evapotranspiration module
",8,8,2,0,farming,"[anemometer, arduino, farming, farmos, farmtopia, lora, rpi4, ultrasonic]",00000
1152,Fruit-Sorter,bhavikmk,N/A,https://github.com/bhavikmk/Fruit-Sorter,https://api.github.com/repos/bhavikmk/Fruit-Sorter,"A Fruit Sorting machine for sorting fruits based on extent of spoilage, size and maturity using computer vision","# Fruit-Sorter (Mango)

## Description

A Mango Sorting machine based on size, extent of spoilage and maturity of fruits using computer vision. Mango sorting system consists of automatic grading and sorting system. results of grading system used by sorting system. 

### Automatic grading 

Grading is classification of items based on certain features. traditional grading is done by trained people which is labor intensive, time consuming and inefficient. this is major reason for need of automatic grading. 

Grading is based on values of certain features: 
1. Size & Shape
2. Spoilage
3. Maturity (expressed by color and wrinkles)

### Automatic Sorting

Sorting is process of arranging mangoes systematically based on respective classes. 

## Implementation 

Automatic grading system is implemented using deep neural networks to classify mangoes in respective classes and generate required data used by sorting system to efficiently arrange mangoes.

Implemented using Robotic operating system for computer vision and sorting system

### Architecture
Sequential CNN architecture


## References

1. Naik, Sapan, Bankim Patel, and Rashmi Pandey. ""Shape, size and maturity features extraction with fuzzy classifier for non-destructive mango (Mangifera Indica L., cv. Kesar) grading."" 2015 IEEE Technological Innovation in ICT for Agriculture and Rural Development (TIAR). IEEE, 2015.
",7,7,1,0,farming,"[autonomous-robots, computer-vision, convolutional-neural-networks, deep-learning, farming, machine-learning, machine-vision, neural-network]",00000
1153,WorkRecordPlugin,JasonRoesbeke,N/A,N/A,https://api.github.com/repos/JasonRoesbeke/WorkRecordPlugin,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1FB:1E37:292C66:55A700:65224006.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,farming,"[N, /, A]",00000
1154,Bsc_Farm,roobee-platform,roobee-platform,https://github.com/roobee-platform/Bsc_Farm,https://api.github.com/repos/roobee-platform/Bsc_Farm,Frontend for bROOBEE token Farming based on Binance Smart Chain mainnet.,"# RoobeeFarm-Frontend

## How to run

- run `yarn`
- run `yarn start`

### `yarn start`

Runs the app in the development mode.<br />
Open [http://localhost:5000](http://localhost:5000) to view it in the browser.

The page will reload if you make edits.<br />
You will also see any lint errors in the console.

### `yarn build`

Builds the app for production to the `build` folder.<br />
It correctly bundles React in production mode and optimizes the build for the best performance.

The build is minified and the filenames include the hashes.<br />
Your app is ready to be deployed!

### `yarn clean`

Removes the build directory and stats.json file.

### `yarn compile`

Same as `yarn build` but without first removing the build directory and stats.json file. If you
have any `rimraf` related errors, you can delete the build directory and run this manually.
",7,7,4,0,farming,"[binance, defi, farming]",00000
1155,Farming_Simulator_19_Mods,edge-gaming,edge-gaming,https://github.com/edge-gaming/Farming_Simulator_19_Mods,https://api.github.com/repos/edge-gaming/Farming_Simulator_19_Mods,"This Repository is dedicated to put all our FS 19 mods in one Repository, making it cleaner and easier to work with while also making it possible using our team for more tasks. For latest update on individual mods visit (https://github.com/FS-Mods-By-EDGE) you can find all our mods there. Please read our Readme file @ Bottom of this page before posting.","# Farming_Simulator_19_Mods
This Repository is a test to put all our FS 19 mods in one Repository, making it cleaner and easier to work with our issues & projects, but also making it possible using our organization for more tasks.

We ❤️ Contributors Like You!
We’re eager to work with you, our user community, to improve these mods and develop new ones.
Please check out our CONTRIBUTING guide for more information on getting started.

Looking for a resource that was once housed in our mod section? feel free to consult our Wiki & if u cant find it there, don't hesitate to contact us.
This repository currently contains the full load of our mods, for singular mods/releases please visit https://github.com/FS-Mods-By-EDGE. If you're looking to report an issue or a suggestion please refer to our issue template, and report it accordingly.

All content made by EDGE is property of EDGE Gaming, but you are free to use it as you like provided you use Credits in your files, pointing to the original creator.

When you contribute to this repository you are doing so under the above mentioned Guideline, meaning what ever contributions we might get (and use) will be shown in credits.

thank you for reading this and enjoy the content!
EDGE Gaming
",7,7,3,35,farming,"[19, edge, farming, fs, fs19, gaming, mod, modded, mods, simulator]",00000
1156,Farmer-Assistance-System,abhishekpaul11,N/A,https://github.com/abhishekpaul11/Farmer-Assistance-System,https://api.github.com/repos/abhishekpaul11/Farmer-Assistance-System,"A web-app to assist farmers in their agricultural practices with features such as a multilingual chatbot, fertilizer recommendations, weather prediction and price estimation of the yield. It also has an additional e-commerce platform for them to sell their produce.","{'message': 'Not Found', 'documentation_url': 'https://docs.github.com/rest/repos/contents#get-repository-content'}",7,7,2,1,farming,"[e-commerce, farming, flask, google-translate, weather-api, web-portal]",00000
1157,Giants_Software_USB_Beacon,Microgenital,N/A,https://github.com/Microgenital/Giants_Software_USB_Beacon,https://api.github.com/repos/Microgenital/Giants_Software_USB_Beacon,Control an Giants Software USB Beacon with Python,"# Giants Software USB Beacon

This is a small script to control the Giants Software USB Beacon with Python.

## Installation

install the requirements.txt

```bash
pip install -r requirements.txt
```

## Usage
To make the LEDs light up in a circle use:

```python
import giants_beacon

Beacon = giants_beacon.GiantsBeacon()
Beacon.device_state(""round"")  # can be ""round"", ""blink"" or ""off""
```

The device_state can be ""round"", ""blink"" or ""off"".

The Beacon will be turned off after 10 seconds automatically. If you want to let the beacon turn on permanently, 
just send the command ""device_state"" every 3 seconds. If you want to turn off the beacon earlier, just send 
device_state(""off"").


## Thanks
Thanks to ""steve228uk"". His [Gist](https://gist.github.com/steve228uk/873d653f1ecec0456ea3f475b6e54f68) helped me a lot to understand whats going on.

Thanks to [libusb/hidapi](https://github.com/libusb/hidapi) for the USB communication tool.

## License
[MIT](https://github.com/Microgenital/Giants_Software_USB_Beacon/blob/master/LICENSE.md)",6,6,1,0,farming,"[beacon, farming, farming-simulator-22, farmingsimulator, fs22, python, usb-devices, usb-hid]",00000
1158,smart-aquaponics-backend,surajsjain,N/A,https://github.com/surajsjain/smart-aquaponics-backend,https://api.github.com/repos/surajsjain/smart-aquaponics-backend,Django based Back End for Aquaponics System,"# smart-aquaponics-backend
Django based Back End for Aquaponics System.

#### Please visit the following link in order to get to know about the details: https://www.hackster.io/neuron/smart-aquaponics-with-dashboard-4e8b23
",6,6,3,4,farming,"[analytics, dashboard, django, farming, internet-of-things]",00000
1159,cts-tool,arachsys,N/A,https://github.com/arachsys/cts-tool,https://api.github.com/repos/arachsys/cts-tool,Interfacing to BCMS CTS,"{'message': 'Not Found', 'documentation_url': 'https://docs.github.com/rest/repos/contents#get-repository-content'}",6,6,3,0,farming,"[bcms, cattle, cts, farming, uk]",00000
1160,Wikilimo,wikilimo,N/A,N/A,https://api.github.com/repos/wikilimo/Wikilimo,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1E1:6584:2832A20:52A7858:65224011.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,farming,"[N, /, A]",00000
1161,Fasaan---Envisioning-Farms-for-Future,hariketsheth,N/A,https://github.com/hariketsheth/Fasaan---Envisioning-Farms-for-Future,https://api.github.com/repos/hariketsheth/Fasaan---Envisioning-Farms-for-Future,"Agriculture is a very significant contributor to the Indian economy.Farmers' most prevalent problem is that they are unable to make informed decisions on which crops are supported in their areas, as well as market and profit prices, which lead to lower productivity and less profit margins.","<h1 align=""center""> Fasaan : Envisioning Farms for Future</h1>
<p align=""center"">
<!--<img width=""25%"" src="""" alt=""logo"">-->
</p>


[![Fasaan Badge](https://img.shields.io/badge/Project-Fasaan-orange?style=for-the-badge&logo=github)](https://github.com/hariketsheth/Fasaan)

### :sparkles:About Fasaan
Agriculture is very significant in India's economy and jobs. Farmers' most prevalent problem is that they are unable to make informed decisions on which crops are supported in their areas, as well as market and profit prices. As a result, they have lower productivity and profit margins. The goal of this study is to propose an attempt to estimate agricultural output and price using machine learning, which will aid in crop selection based on soil type and meteorological conditions.

Farmers do not have a single point of contact for all of their needs, including crop, market price, soil type, government programs, and the latest news. To make this easier for farmers, a portal based on machine learning is being developed.
 
### :sparkles:About the Project 
Several studies were undertaken recently in India, including the one on DFI, have brought out the problems afflicting the agriculture sector. 

The recommendations of these studies include, inter alia, ensuring timely availability of inputs, an increased focus on measures to enhance the productivity - especially of small and marginal farms, adoption of modern agricultural practices, optimal use of inputs, choice of the right crops through macro and micro-level planning. FASAAN comes from the Hindi terms ""Fasal"" and ""Kisaan,"" which mean ""crops"" and ""farmers,"" respectively. As the name says, we work as a farmer's companion. Farmers play a critical role in both meeting our basic food needs and altering the agricultural environment. Farmers manage agricultural practices to maintain the long-term survival of the entire flora and fauna. 

Agriculture presently occupies one-third of the world's land surface. For a big majority of the world's population, it is the most essential activity since it produces food for people all over the world.

>
> The features include:
> 1. **Gain Insights** - Centralized source of truth for farmers to gain insights into their land. Our software allows farmers to optimally plan farm layouts and maximize efficiency and revenue.
> 2. **Plan Out Field** - The user is able to indicate plots of land where they want to plant and indicate the crop they want to plant there. Based on real-time data about air quality, soil and weather conditions,
> 3. **Real Time Analysis with Environment Impact** - Fasaan will determine how suitable a particular area is for planting a particular crop, and provide a general estimation on the expected value of a plot.
> 4. **Environment Degradation** - Fasaan would determine a Fasaan Score that would determine the degradation the particular farm field is creating because of the crops and irrigation sources
> 5. **AI Based Help** - Fasaan is AI based solution which makes it the best platform to suggest farmers crops and also given them suggestions about not-so-good combinations and crop rotation techniques
> 6. **Crop Yield and Estimation** - Fasaan will help ypu detrermine the growth of your formed field in the platform - how well it performs in all the 4 seasons.  This would help the farmers know about the estimated cost anf fundings to be taken beforehand.

<br>

## :sparkles:Take a look at our website 
<p align=""center"">

![image](https://user-images.githubusercontent.com/72455881/231967580-2790cbbe-1a09-4f5b-b5e6-f23945952e07.png)

![image](https://user-images.githubusercontent.com/72455881/231967651-25d55bc4-de53-48c7-8429-def3feaf4083.png)

![image](https://user-images.githubusercontent.com/72455881/231967846-acc35dc0-3235-4c21-8606-46e2d4d4bba5.png)


</p>

## :sparkles: Project Information
[![Language Used](https://img.shields.io/badge/FrontEnd-HTML,%20CSS,%20JavaScript,%20JQuery,%20React-blue)](https://github.com/hariketsheth/Fasaan)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
[![Build](https://img.shields.io/badge/build-passing-green)](https://github.com/hariketsheth/Fasaan)

[![Language Used](https://img.shields.io/badge/Backend-JavaScript,%20NodeJS,%20TypeScript-red)](https://github.com/hariketsheth/Fasaan)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

<br>

## :sparkles: Instructions for Cloning this Repository Locally
- Use the command: `git clone https://github.com/hariketsheth/Fasaan---Envisioning-Farms-for-Future`
- Run `npm install` or `yarn` separately in root directory, frontend, backend and analysis directory
- Use `yarn start` or `npm start` to start the project on local server



## :sparkles: Instructions to contribute 

To contribute fork this repository and clone it. Make changes and create a pull request. Follow the step below to contribute.

#### Add your email and user name in git bash 
`$ git config --global user.name ""YOUR NAME""`
<br>
` $ git config --global user.email ""YOUR EMAIL ADDRESS""`

#### Fork the repo
On the upper right you can see a option to fork the repository. Fork it to make changes. 

#### Clone the project
Use the below command to clone the repo into your local system.

` $ git clone https://hariketsheth/Fasaan---Envisioning-Farms-for-Future.git `

#### Add upstream to repository 
`$ cd <your-forked-project-folder>`<br>
`$ git remote add upstream https://github.com/hariketsheth/Fasaan---Envisioning-Farms-for-Future.git` <br>
`$ git checkout main`<br>
`$ git fetch upstream`<br>
`$ git merge upstream/main`<br>
`$ git push origin main`<br>

#### Creating branch for the new change on feature or bug fix
`$ git checkout -b <feature-branch>`<br>
`$ git add --all`<br>
`$ git commit -m ""<commit message>""`<br>

#### Creating pull request
`$ git push origin main`

## :sparkles: Get in touch with us 
<a href=""https://twitter.com/athena-arms "" target=""_blank""><img src=""https://img.shields.io/badge/twitter-%2300acee.svg?&style=for-the-badge&logo=twitter&logoColor=white&alt=twitter"" /></a>
<a  href=""https://www.instagram.com/athena-edu /""><img alt=""Instagram"" src=""https://img.shields.io/badge/Instagram-E4405F?style=for-the-badge&logo=instagram&logoColor=white"">
 <a href=""mailto:athena.help@gmail.com ""><img  alt=""Gmail"" src=""https://img.shields.io/badge/Gmail-D14836?style=for-the-badge&logo=gmail&logoColor=white"" />
 <a href=""mailto:contact.athena@gmail.com""><img  alt=""Gmail"" src=""https://img.shields.io/badge/Gmail-D14836?style=for-the-badge&logo=gmail&logoColor=white"" />

## :sparkles: License


[![GPLv3 License](https://img.shields.io/badge/License-MIT-yellow.svg)](https://opensource.org/licenses/)


",6,6,1,1,farming,"[analysis, chatbot, collaborate, data-science, farming, future, github, github-codespaces, github-pages, platform-engineering, twilio, typeform]",00000
1162,EzPlotter,sengexyz,N/A,https://github.com/sengexyz/EzPlotter,https://api.github.com/repos/sengexyz/EzPlotter,A free Chia/MMX-node blockchain plot file generator for cryptocurrency farmers.,"# EzPlotter
Free PoST blockchain plot generator for Chia and MMX-node farmers.

* ✅ A easy-to-use and fast plotting tool, no learning curve.
* ✅ Multiple plotting missions in one user interface.
* ✅ Support both Windows and Linux (Ubuntu).

![GUI overview](https://github.com/sengexyz/EzPlotter/blob/main/gallery/gui_2.png)

EzPlotter internally calls the [chia plotter](https://github.com/madMAx43v3r/chia-plotter) executable. 

In the Linux OS, please ensure the **chia_plot** bin file in the installation folder is executable. If not, you can use the command *chmod +x chia_plot* to enable the executable. 
",6,6,1,0,farming,"[blockchain, chia, cryptocurrency, farming, gui, hdd, madmax, mining, mmx, plot, ssd, xch]",00000
1163,Thesis_Farmers_Helper,JamesNikolaidis,N/A,N/A,https://api.github.com/repos/JamesNikolaidis/Thesis_Farmers_Helper,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C14C:7E09:25E7D31:4E1D299:65224019.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,farming,"[N, /, A]",00000
1164,Precio,suryan-s,N/A,https://github.com/suryan-s/Precio,https://api.github.com/repos/suryan-s/Precio,Precio is a comprehensive application designed to assist modern farmers in optimizing their agricultural operations by incorporating precision farming practices. ,"
![Banner](https://user-images.githubusercontent.com/76394506/222956195-0dd600ca-100d-4cc1-b79d-4ea2d10b4304.png)

<p align='center'>
    <h1><strong>PRECIO🌿</strong></h1>
</p>

Precio is a comprehensive solution designed to assist modern farmers in optimizing their agricultural operations. This document serves as a guide for developers and users of Precio, providing information on the project's features, functionality, and usage.                                 The software is available under the MIT License.

## Purpose

Precio is an open-source software tool for monitoring, automating and visualizing farming data. It provides real-time data analysis and insights into farming, enabling informed decision-making and improving farming efficiency. Precio includes third-party integration and is designed to be user-friendly, optimizing resource usage, reducing waste, and increasing productivity.

## Audience

This application is intended for any agricultural enthusiast and developers looking forward to contributing to precision farming applications.

</br>
<hr/>

## Installation and Usage

- Clone the repository :\
  `git clone [https://github.com/suryan-s/Precio](https://github.com/suryan-s/Precio)`
- Run setup.py in the main directory to create a virtual environment, install packages from requirements.txt and build the static files for the frontend:\
  `python setup.py`
- Run the application by:\
  `python main.py`
</br>

<hr/>

## Files and Folders

```

Precio
├─ .gitignore
├─ .vscode
│  └─ settings.json
├─ arduino
│  ├─ PMS.ino
│  ├─ Weather Monitoring Station
│  │  ├─ WMS-GERBER-img.jpg
│  │  ├─ WMS-GERBER-PDF.pdf
│  │  ├─ WMS-GERBER-PNG.png
│  │  └─ WMS-GERBER.zip
│  └─ WMS.ino
├─ database
│  └─ .gitkeep
├─ endpoints.py
├─ frontend
│  ├─ package-lock.json
│  ├─ package.json
│  ├─ public
│  │  └─ vite.svg
│  ├─ README.md
│  ├─ src
│  │  ├─ App.svelte
│  │  ├─ assets
│  │  │  └─ svelte.svg
│  │  ├─ lib
│  │  │  ├─ components
│  │  │  │  ├─ Button.svelte
│  │  │  │  ├─ Fab.svelte
│  │  │  │  ├─ Modal.svelte
│  │  │  │  └─ Sidebar.svelte
│  │  │  ├─ composites
│  │  │  │  ├─ CreateProject.svelte
│  │  │  │  ├─ Layout.svelte
│  │  │  │  └─ Sidenav.svelte
│  │  │  ├─ routes
│  │  │  │  ├─ dashboard.svelte
│  │  │  │  ├─ Home.svelte
│  │  │  │  └─ routes.js
│  │  │  └─ stores.js
│  │  ├─ main.js
│  │  └─ vite-env.d.ts
│  ├─ svelte.config.js
│  └─ vite.config.js
├─ index.html
├─ LICENSE
├─ main.py
├─ model
│  └─ best_pretemp.h5
├─ requirements.txt
├─ settings.json
├─ setup.py
└─ _README.md

```

</br>

<hr/>

## Requirements

- Python 3.8.5 or higher
- Arduino IDE
- Node.js 16.15.4 or higher
- Libraries used:
  - Python: numpy, pandas, Tensorflow, Keras, uvicorn, fastapi, scikit-learn
  - Svelte, vite, svelte-spa-router
  - IBM Carbon Design System
  - NanoID
- Optional requirements:
  - Hardware support for PMS(Plant Monitoring System) and WMS(Weather Monitoring Station)
</br>

<hr/>

## Integration and Features

Precio offers the following features:

- Real-time monitoring of critical data required for the governance of farming operations.
- Intuitive visualization features for better data analysis and insights.
- Easy integration with third-party tools and devices.
- User-friendly interface for streamlined operations and reduced resource usage.
- Support for following farming practices for greater flexibility:
  - Arable farming
  - Hydroponic farming
  - Horticulture
  - Aquaponics
  - Vertical farming
- Support for actuators and actions for improved efficiency with Telegram integration:
  - Water pumps
  - Water heaters
  - Lights
  - Sprinklers
  - Irrigation systems
  - Ventilation systems
  - CO2 sensors
  - Temperature sensors
  - Humidity sensors
  - pH sensors
  - Water level sensors
  - Water flow sensors
  - Water quality sensors etc.
</br>

- IoT integration could be implemented by connecting to localhost/api/WMS/{api_token} or localhost/api/PMS/{api_token}

<hr/>

## Current Status

- [x] Create projects and organise projects.
- [x] Support for Arable farming.
- [x] Visualization dashboard.
- [x] Integration with Arduino with hardware and software support for WMS.
- [x] Dockerized application.

## Future Developments

- [ ] Integration with Arduino with hardware and software support for PMS.
- [ ] Telegram integration for actuators and actions.
- [ ] ML model for predicting plant health and advanced predictions
- [ ] Support for Horticulture, Aquaponics, Vertical farming

## Contribution and Guidelines

To start contributing to the project, clone the repository into your local system subdirectory using the below git code:

```
https://github.com/suryan-s/Precio.git
```

Before cloning the repository, make sure to navigate to the working subdirectory of your command line interface and ensure that no folder with the same name exists. Other ways to clone the repository include using a password-protected SSH key, or by using [Git CLI](https://cli.github.com/). The changes may additionally be performed by opening this repo using [GitHub Desktop](https://desktop.github.com/)

## Submitting a Pull Request

Before opening a Pull Request, it is recommended to have a look at the full contributing page to make sure your code complies with all the pull request guidelines.

Navigate to this subdirectory, & check the status of all files that were altered (red) by running the below code in Git Bash:

```
  git status
```

Stage all your files that are to be pushed into your pull request. This can be done in two ways - stage all or some files:

```
  git add .            // adds every single file that shows up red when running the git status
```

```
  git add <filename>   // type in the particular file that you would like to add to the PR
```

Commit all the changes that you've made and describe in brief the changes that you have made using this command:

```
  git commit -m ""<commit_message>""
```

Push all of your updated work into this GitHub repo in the form of a Pull Request by running the following command:

```
  git push origin main
```

</br>

<hr/>
",5,5,2,4,farming,"[arduino, farming, foss, geospatial-analysis, geospatial-visualization, ibm-carbon, internet-of-things, iot-platform, javascript, modern, precision-agriculture, python, python3, sqlite3, svelte, typescript]",00000
1165,FarmArk,prathimacode-hub,N/A,https://github.com/prathimacode-hub/FarmArk,https://api.github.com/repos/prathimacode-hub/FarmArk,💡🏷FarmArk is an app designed for facilitation of farmers and addressing them with all the needed farming solutions for their greens to prosper and excel. 🙌,"<div align=""center"">
  <h1>Welcome to FarmArk 👋🌱</h1>
  <h3>Website for FarmArk Project Repo: <a href=""https://prathimacode-hub.github.io/FarmArk/"">Click Here!</a></h3>
</div>

<p align=""center"">
<img src=""https://github.com/prathimacode-hub/prathimacode-hub/blob/main/Cover%20Photos/FarmArk.png""></a>
</p>

<p align=""center"">
<a href=""https://github.com/prathimacode-hub""><img src=""https://img.shields.io/badge/PRs-welcome-brightgreen.svg?style=flat&logo=github""></a> 
<a href=""https://github.com/prathimacode-hub""><img src=""https://img.shields.io/badge/Open%20Source-%F0%9F%A4%8D-Green""></a> 
<a href=""https://github.com/prathimacode-hub""><img src=""https://img.shields.io/static/v1.svg?label=Contributions&message=Welcome&color=0059b3&style=flat-square""></a>
<a href=""https://github.com/prathimacode-hub/FarmArk/graphs/contributors""><img src=""https://img.shields.io/github/contributors-anon/prathimacode-hub/FarmArk""></a>
<a href=""https://github.com/prathimacode-hub""><img src=""https://img.shields.io/maintenance/yes/2022""></a>
</p> 


## 📌 Repository

Agriculture is the backbone of our country (India) and a way of livelihood for most of the people. It's a major sector that contributes to our country’s economy. Kudos to all the farmers who puts in their efforts and sweat to provide food for the well being. 


<p align=""center"">
<img src=""https://github.com/prathimacode-hub/FarmArk/blob/main/Readme_Assets/Agriculture.jpg"" width=340px height=200px>
</p>


FarmArk is an app designed for facilitation of farmers and address them with all the needed farming solutions for their greens to prosper and excel. So the aim behind developing this portal is to provide a platform for farmers to make their lives easier and efficient!!.🚀 


## 💡 Features

This app endorses with all the listed features stated below and a one-stop solution for all their farmer needs.


## 🙌 Join Here

 Warm invite to all the individuals who are looking forward to play their roles as a developer to label the pressing needs faced by farmers. 
 

## 🔑 Tech Stacks


**FrontEnd : HTML, CSS, JS**

**BackEnd : Machine Learning, Deep Learning, Database**

**Programming Language : Python**

**Framework : Flask/Django**

**Dashboard, Smart Solutions : Internet Of Things**


Contributors are expected to join this Discord Channel here for the project discussion : 


When raising an issue, do make sure to mention the kind of feature, feature title, short description of the feature and how would you expect it to work. As a good practice, always link the issue number with pull request. (#issue number : Give this details when you raise a PR).

If you want to work on this unique project and share it with the world, you can do that here. 
Go through the contributing guidelines [here](https://github.com/prathimacode-hub/FarmArk/blob/main/CONTRIBUTING.md).

Subsequently, also go through the GitHub documentation on [creating a pull request](https://help.github.com/en/github/collaborating-with-issues-and-pull-requests/creating-a-pull-request).


## 🛠 Templates to Follow

- [Feature request](https://github.com/prathimacode-hub/FarmArk/blob/main/.github/issue_template/feature_request.md)
- [Bug Report](https://github.com/prathimacode-hub/FarmArk/blob/main/.github/issue_template/bug_report.md)
- [Pull Request](https://github.com/prathimacode-hub/FarmArk/blob/main/.github/pullrequest_template.md)

**Note** : One should follow these templates while creating a new issue or pull request.


## 👨‍💻 Workflow:

- Fork the repository

- Clone your forked repository using terminal or gitbash.

- Make changes to the cloned repository

- Add, Commit and Push

- Then in GitHub, in your cloned repository, find the option to make a pull request. 

> print(""Start contributing for FarmArk"")


 ## ❄️ Open Source Programs
 
<table>
<tr>
<td align=""center"">
<a href=""https://hacktoberfest.com/""><img src=""https://github.com/prathimacode-hub/prathimacode-hub/blob/main/Open%20Source%20Programs/Hacktoberfest%202022/Hacktoberfest%20Logo%202022.png"" width=140px height=100px /><br /><sub><b>Hacktoberfest 2022</b></sub></a>
 </td>
 <td align=""center"">
<a href=""https://csirait.in/opencode/""><img src=""https://github.com/prathimacode-hub/prathimacode-hub/blob/main/Open%20Source%20Programs/OpenCode%20CSIRAIT%202022/OpenCode%20Logo.png"" width=100px height=100px /><br /><sub><b>OpenCode CSI RAIT 2022</b></sub></a>
 </td>
 <td align=""center"">
<a href=""https://swoc.tech/""><img src=""https://github.com/prathimacode-hub/prathimacode-hub/blob/main/Open%20Source%20Programs/Script%20Winter%20Of%20Code%202021/Script%20Winter%20Of%20Code.jpg"" width=100px height=100px /><br /><sub><b>Script Winter Of Code 2021</b></sub></a>
 </td>
</tr>
</table>


## 🏆 Achievements of this Project Repo 🎉

**:one: Recognized as the ""BEST MENTOR"" for the project ['FarmArk'](https://github.com/prathimacode-hub/FarmArk) in OpenCode CSI RAIT 2022.**</br>


## ✨ Hall Of Fame   

Thanks goes to these Wonderful People. Contributions of any kind are welcome!🚀 

<!-- ALL-CONTRIBUTORS-LIST:START - Do not remove or modify this section -->
<!-- prettier-ignore-start -->
<!-- markdownlint-disable -->

<a href=""https://github.com/prathimacode-hub/FarmArk/graphs/contributors"">
  <img src=""https://contrib.rocks/image?repo=prathimacode-hub/FarmArk"" />
</a>

<!-- markdownlint-enable -->
<!-- prettier-ignore-end -->
<!-- ALL-CONTRIBUTORS-LIST:END -->


## 📜 Code Of Conduct

You can find our Code of Conduct [here](https://github.com/prathimacode-hub/FarmArk/blob/main/CODE_OF_CONDUCT.md).


## 📝 License 

This project follows the [General Public License 3.0](https://github.com/prathimacode-hub/FarmArk/blob/main/LICENSE).


## 😎 Hacktoberfest Mentors

<table>
  <tr>
<td align=""center""><a href=""https://github.com/Isha307""><img src=""https://avatars.githubusercontent.com/u/56998032?v=4"" width=""100px;"" alt=""""/><br /><sub><b>Isha Shaw</b></sub></a></td>
<td align=""center""><a href=""https://github.com/Knighthawk-Leo""><img src=""https://avatars.githubusercontent.com/u/72437494?v=4"" width=""100px;"" alt=""""/><br /><sub><b>Sanskar Dwivedi</b></sub></a></td>
  </tr>
</table>


## 😎 Project Admin

<table>
  <tr>
<td align=""center""><a href=""https://github.com/prathimacode-hub""><img src=""https://github.com/prathimacode-hub/prathimacode-hub/blob/main/Profile%20Assets/Prathima-Kadari-Picture.png"" width=""100px;"" alt=""""/><br /><sub><b>Prathima Kadari</b></sub></a></td>
  </tr>
</table>


![Visitor Count](https://profile-counter.glitch.me/{prathimacode-hub}/count.svg)


## ⭐ Give this Project a Star

[![GitHub followers](https://img.shields.io/github/followers/prathimacode-hub.svg?label=Follow%20@prathimacode-hub&style=social)](https://github.com/prathimak88/)  [![Twitter Follow](https://img.shields.io/twitter/follow/prathimak88?style=social)](https://twitter.com/prathimak88)

If you liked working on this project, do ⭐ and share this repository.

🎉 🎊 😃 Happy Contributing 😃 🎊 🎉

<!-- <sup><kbd>***[Click Here](https://github.com/prathimacode-hub/prathimacode-hub/blob/main/Projects/OpenSource-Projects.md)***</kbd> *to view my open source projects and</sup>*  <sup><kbd>***[Get In](https://github.com/prathimacode-hub/prathimacode-hub/blob/main/GitHub%20Projects/Learning-Projects.md)***</kbd> *for learning projects.</sup>* <br>
</td> 

<sup><kbd>***[Click Here](https://github.com/prathimacode-hub/prathimacode-hub/blob/main/GitHub%20Projects/OpenSource-Projects.md)***</kbd> *to view my open source projects.</sup>* <br> -->


## 📬 Contact

If you want to contact me, you can reach me through below handles.

<a href=""https://twitter.com/prathimak88""><img src=""https://upload.wikimedia.org/wikipedia/fr/thumb/c/c8/Twitter_Bird.svg/1200px-Twitter_Bird.svg.png"" width=""25""></img></a>&nbsp;&nbsp; <a href=""https://www.linkedin.com/in/prathima-kadari/""><img src=""https://www.felberpr.com/wp-content/uploads/linkedin-logo.png"" width=""25""></img></a>

© 2022 Prathima Kadari


[![forthebadge](https://forthebadge.com/images/badges/built-with-love.svg)](https://forthebadge.com) [![forthebadge](https://forthebadge.com/images/badges/built-by-developers.svg)](https://forthebadge.com) [![forthebadge](https://forthebadge.com/images/badges/built-with-swag.svg)](https://forthebadge.com) 

",5,5,2,10,farming,"[agriculture-iot, css3, database, deep-learning, farmers, farmers-portal, farming, farming-solutions, flask-application, hacktoberfest, hacktoberfest-accepted, hacktoberfest2022, html5, internet-of-things, js, machine-learning, python3, webapp]",00000
1166,farmingpy,TwinYields,N/A,N/A,https://api.github.com/repos/TwinYields/farmingpy,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C10D:8AB4:298E761:5554DC1:65224012.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,farming,"[N, /, A]",00000
1167,portal,sheaft-app,N/A,N/A,https://api.github.com/repos/sheaft-app/portal,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C106:5A86:2B97C28:596D0B4:65224017.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,farming,"[N, /, A]",00000
1168,smart-green-house,xscotophilic,N/A,https://github.com/xscotophilic/smart-green-house,https://api.github.com/repos/xscotophilic/smart-green-house,"A smart greenhouse system collects data such as soil moisture and temperature in real time and automatically decides whether to water batches of crops, turn on or off the fan, and light the lamp. ","# Smart Green House

> Front-end and Back-end for a system to maintain a specific moisture level and temperature range for optimal plant growth!

- Easy and simple to use.

- ![Architecture](https://user-images.githubusercontent.com/47301282/132941090-46d2041a-e171-4984-9288-e66483c8e0c6.png)

- Steps to folllow:
  - Connect the circuit.
  - ![GreenSketch](https://user-images.githubusercontent.com/47301282/117006976-b1d70580-ad06-11eb-951b-cd6e2e09a551.jpg)
  - ![Circuit diagram](https://user-images.githubusercontent.com/47301282/117006745-6e7c9700-ad06-11eb-8775-879133c45fe1.png)
  - Create mongoDB cluster.
  - Update the configs (in config folder).
  - Host this github repo.
  - Authenticate the user in mongoDB.
  - Change the REST API url (self.API_ENDPOINT) in python code (SmartGreenhouse.py).
  - Run the Python code (SmartGreenhouse.py).

---

- [SMARTGREENHOUSE.pdf](https://github.com/xscotophilic/smart-green-house/files/7147431/129053_SMARTGREENHOUSE.pdf)

- [Demo](https://drive.google.com/file/d/1rMo6D-h9Ft62zdCEbj6c4VViC1PdJesM/view?usp=sharing)

---


### If you like my work, you can contribute to https://www.patreon.com/xscotophilic

### Thank You!
",5,5,1,0,farming,"[circuit, farming, greenhouse, iot, python]",00000
1169,usetania-static,usetania,N/A,N/A,https://api.github.com/repos/usetania/usetania-static,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C17A:6B96:2854A89:52FEDE0:65224016.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,farming,"[N, /, A]",00000
1170,MinetopiaFarms,MinetopiaSDB,MinetopiaSDB,https://github.com/MinetopiaSDB/MinetopiaFarms,https://api.github.com/repos/MinetopiaSDB/MinetopiaFarms,"Een plugin met houthakkers, mijnen en farmen.","# MinetopiaFarms
Een plugin met houthakkers, mijnen, farmen en vismeren.

Ja, weer een nieuw berichtje hier over hoe ik 'eigenlijk niet' aan MinetopiaFarms werk, maar ja, soms doen we het dan toch. Zie dit project als een leuke kans om je Java kennis uit te breiden en lekker te prutsen!
",5,5,4,0,farming,"[farming, hacktoberfest, minetopia, minetopiasdb, mining]",00000
1171,floralis,luxtracon,N/A,https://github.com/luxtracon/floralis,https://api.github.com/repos/luxtracon/floralis,Floralis adds farmable cacti and flowers for an automatable way to obtain all dyes.,"Floralis aims to make any type of dye farmable by adding farmable cacti and flowers to the game. Furthemore it aims to do that in an automatable way with the help of third party mods. For example with a Multi Farm from Forestry, Garden Cloche from Immersive Engineering, Plant Sower and Plant Gatherer from Industrial Foregoing and Phytogenic Insulator from Thermal Expansion.

![An image showing the mods logo](https://cdn.zekro.de/mods/floralis/media/logo_v3.png 'Floralis logo')

As soon as you travel around your world, you'll either find a new type of cactus or a new type of flower, depending on the biome you wander through. Cactus plants can be found in any desert type biome, while flower plants can be found in any other biome but not in desert type biomes. When you look around for a while, you'll see that there is one type of cactus and one type of flower for each type of dye. You'll find them every few chunks in small groups sorted by their color. But take care, the cacti might sting! Besides from looking pretty and attracting bees, they serve another useful purpose. Upon breaking one of either a cactus or flower, they'll drop two respective seeds depending on their plant type and color, one plant petal in their respective color and one plant fiber. Harvesting them with a pair of shears or a silk touch enchanted tool will drop the cactus or flower itself instead, for you to plant or pot it as decoration.

![An animated image showing the process of breaking a cactus and flower plant resulting in their drops spawning](https://cdn.zekro.de/mods/floralis/media/drops_plants.gif 'Plant drops')

If you're lucky enough, you'll find a village with one or more custom fields of either cacti or flowers, again depending on the biome the village is generated in. A field packed with cacti will only generate in desert type villages, while a field packed with flowers will only generate in any other biome but not in desert type biomes. A farmer villager near the field will offer you some trades to either get emeralds for seeds or to get plant petals for emeralds. The type of seeds the farmer villager will trade with you is again depending on the village type. Cactus seeds can only be obtained by farmer villager in desert type villages, while flower seeds can be obtained by farmer villager in any other village type but not in desert type villages.

![An animated image showing the mods villager trades](https://cdn.zekro.de/mods/floralis/media/trades.gif 'Villager trades')

The seeds you just have gotten are pretty straight forward to use, either plant cactus seeds on some sand or plant flower seeds on farmland. Give them time to grow to their full size, which will be indicated by the fully blooming blossom on top of the crop. You wont get back more than the one seed you used to plant the crop as long as they aren't fully grown. When fully grown, they'll drop two respective seeds depending on their plant type and color, one plant petal in their respective color and one plant fiber, just like their natural spawning counterparts. Harvesting them with a pair of shears or a silk touch enchanted tool will drop the cactus or flower itself instead, for you to plant or pot it as decoration. As long as a cactus crop isn't old enough to develop its thorns, it wont hurt you or any other entity.

![An animated image showing the process of cactus and flower crops growing](https://cdn.zekro.de/mods/floralis/media/drops_crops.gif 'Crops growing')

To finally get the dye, just dry the petals in a furnace. The petals will be dried to their respectively colored dye counterpart.

![An animated image showing the process of drying petals in a furnace to retrieve their respectively colored dye counterpart](https://cdn.zekro.de/mods/floralis/media/smelting_petals.gif 'Petal drying')

In case you stock up too much dye, you can store it in compact storage blocks, one for each type of dye.

![An animated image showing the process of compressing dye to dye blocks](https://cdn.zekro.de/mods/floralis/media/crafting_compress_dye_block.gif 'Dye compression')

Of course you can reverse this progress to get the dye back out of their respective storage blocks.

![An animated image showing the process of decompressing dye blocks to dye](https://cdn.zekro.de/mods/floralis/media/crafting_decompress_dye_block.gif 'Dye decompression')

Plant fibers can be used just like bone meal, to speed up the growth of crops, sow some grass and flowers, or use it as a fertilizer with third party mods. Just like with dye, there is a storage block in case you've piled up to much plant fibers.

![An image showing the process of compressing plant fiebers to plant fibers blocks](https://cdn.zekro.de/mods/floralis/media/crafting_compress_plant_fibers_block.png 'Fibers compression')

Of course you can reverse this progress to get the plant fibers back out of the storage block.

![An image showing the process of decompressing plant fibers blocks to plant fibers](https://cdn.zekro.de/mods/floralis/media/crafting_decompress_plant_fibers_block.png 'Fibers decompression')

Since all blocks and items in this mod are of natural origin, they can be composted using the composter, each type of block and item coming with a different chance of being composted, these are their respective values:

- Cactus: 65 %
- Flower: 65%
- Cactus Seeds: 30 %
- Flower Seeds: 30 %
- Petals: 30 %
- Plant Fibers: 30 %
- Plant Fibers Block: 85 %

The provided config file will let you adjust the way the mod generates its features. You can enable and disable independently whether cacti and flowers should get generated naturally, as well as enable and disbale whether cacti and flower fields should get generated in villages. You can enable and disable village field generation independently per village type. You can also adjust the rarity and density in which natural generating cacti and flowers occur.

You are allowed to use this mod in any modpack, as long as it's credited in some kind of modlist, in case the modpack is public.
",5,5,1,0,farming,"[automatable, automation, cactus, dye, farmable, farming, floralis, flower, forge, minecraft, mod]",00000
1172,jang-seeder-wheel,Fordi,N/A,https://github.com/Fordi/jang-seeder-wheel,https://api.github.com/repos/Fordi/jang-seeder-wheel,OpenSCAD Jang Seed Roller,"# Parametric Seed Roller

This is a parametric seed roller with default parameters and presets for Jang JP or JPH series rollers.

<img src=""https://github.com/Fordi/jang-seeder-wheel/raw/main/Jang_F-12_PLA_Orange.jpg"" width=""320"" alt=""Jang F-12 sample print"" />

You can adjust things like the diameter and borehole to adjust for your printer's tolerances. You can also adjust the number of seed cells and their size.

I started from an existing Jang wheel, took measurements, and implemented a fully parameterized version out of shape primitives.  Then [fernplant](https://github.com/fernplant) was nice enough to add other shapes, and [mandrewcramer](https://github.com/mandrewcramer) helped with the text rendering.  You can thank [Peter Armstrong](https://github.com/peteretep) for making me aware of the J#-6 series (and if _you_ know of a roller that's not covered by a preset, please open an [issue](./issues); I will absolutely give a mention).

The renders of every roller preset are available [on Thingiverse](https://www.thingiverse.com/thing:4462838).

# Usage

Running this command will open up OpenSCAD.  If you open up the Customizer, you'll see a bunch of presets for known Jang seed rollers.

```
openscad seed_roller.scad
```

The following command will render the preset ""Jang M-12"" as ""./stl/Jang M-12.stl"":

```bash
./render.sh ""Jang M-12""
```

To list all the presets:

```bash
./render.sh list
```

The current set of supported rollers are:


* Jang A-6
* Jang AA-6
* Jang B-12
* Jang BL-12
* Jang C-12
* Jang C-6
* Jang F-12
* Jang F-24
* Jang F-6
* Jang G-12
* Jang G-6
* Jang J-2
* Jang J-4
* Jang J-8
* Jang J1-6 \*
* Jang J3-6 \*
* Jang J5-6 \*
* Jang L J-12
* Jang L J-24
* Jang L J-6
* Jang L V-12
* Jang L V-24
* Jang L-12
* Jang L-24
* Jang MJ-12
* Jang MJ-24
* Jang MJ-4
* Jang MJ-6
* Jang MM-12
* Jang MM-24
* Jang N-6
* Jang Q-12
* Jang Q-6
* Jang R-12
* Jang R-24
* Jang X-12
* Jang X-24
* Jang X-4
* Jang X-6
* Jang XY-12
* Jang XY-24
* Jang XY-36
* Jang XY-4
* Jang XYY-12
* Jang XYY-24
* Jang XYY-36
* Jang YX-12
* Jang YX-24
* Jang YX-4
* Jang YX-6
* Jang YYJ-12
* Jang YYJ-24
* Jang YYJ-6
* Jang YYX-12
* Jang YYX-24
* Jang YYX-36
* Jang Z-Blank

> \* These rollers are works in progress; see Issue #6

To render all the presets into `./stl/`.

```bash
./render.sh all
```

> Note: there are 57 rollers, and they each take about a minute to render, with more or more complex holes taking longer (though, render.sh works parallel up to the number of processors you have).  So you're looking at a nontrivial amount of render time, depedning on your machine.  Mine knocks everything out in about 11 minutes at 8-parallel.

## Windows users

You can grab a windows build of [OpenSCAD](https://openscad.org/downloads.html), open `seed_roller.scad`, load the preset you want to render, and generate an STL from the UI.  

To generate _all_ the STL files on Windows, your easiest way would be to install [Docker](https://www.docker.com/products/docker-desktop/).  Once you've done that, `render.bat` should work just as `render.sh` does (e.g., `render all` will start generating everything).  First run takes some time, as it needs to download the `openscad/openscad` image and install `jq`, but that only takes a minute or two.

As an aside, if you've got Docker installed on Linux or OS-X, `render.sh` will create the container there as well - so if you're having trouble running `render.sh`, installing docker will (essentially) fix the problem for you.
",5,5,3,1,farming,"[farming, scad, seeder]",00000
1173,SteamAuthenticatorCmd,Vasile2k,N/A,https://github.com/Vasile2k/SteamAuthenticatorCmd,https://api.github.com/repos/Vasile2k/SteamAuthenticatorCmd,Steam authenticator that can be used from command line,"# SteamAuthenticatorCmd
Steam authenticator that can be used from command line

## Usage
To use it simply add a `maFiles` folder with your accounts in the same directory with the application and run it like `SteamAuthenticatorCmd.exe -getAuthCode -account yourSteamIdHere`. Very useful if you have bots and you want to do some bad things(don't do bad things).

## License
* This thing is distributed under [Apache 2.0 license](LICENSE)
* This thing uses [SteamAuth](https://github.com/geel9/SteamAuth) library made by [Geel](https://github.com/geel9) which is distributed under [MIT license](https://github.com/geel9/SteamAuth/blob/master/LICENSE)
* This thing also uses [Newtonsoft.Json](http://www.newtonsoft.com/json) which is also distributed under [MIT license](https://github.com/JamesNK/Newtonsoft.Json/blob/master/LICENSE.md)

## Additional details

### Contact

If you have any problems, contact me and I will try to help you.
You can find me [here](https://github.com/Vasile2k).


### An inspirational quote
*“Always code as if the guy who ends up maintaining your code will be a violent psychopath who knows where you live”* - [John F. Woods, 1991](https://groups.google.com/forum/#!msg/comp.lang.c++/rYCO5yn4lXw/oITtSkZOtoUJ)
",5,5,2,0,farming,"[farmbot, farming, steam, steam-authenticator]",00000
1174,SteamEventCardFarmer,Vasile2k,N/A,https://github.com/Vasile2k/SteamEventCardFarmer,https://api.github.com/repos/Vasile2k/SteamEventCardFarmer,A little script for PhantomJS that explores your queue on Steam and gives you free cards,"# SteamEventCardFarmer
A little script for PhantomJS that explores your queue on Steam and gives you free cards

## Prerequisites

* [PhantomJS](http://phantomjs.org/)
* [Python](https://www.python.org/)
* [SteamAuthenticatorCmd](https://github.com/Vasile2k/SteamAuthenticatorCmd)
* Steam accounts with Steam Guard activated

## Usage
Add your maFiles into `maFiles` folder, SteamAuthenticatorCmd into `Steam` folder and your account login information in `accounts.json` file. After that execute `runAll.bat` and stop it after some time...

Also, `phantomjs` executable has to be in the same directory or `PATH` environment variable should point to it.

## License
* This thing is distributed under [Apache 2.0 license](LICENSE)

## Additional details

### Contact

If you have any problems, contact me and I will try to help you.
You can find me [here](https://github.com/Vasile2k).

",5,5,3,0,farming,"[farmbot, farming, phantomjs, steam]",00000
1175,Mobile_farm_robot_simulation,arunumd,N/A,N/A,https://api.github.com/repos/arunumd/Mobile_farm_robot_simulation,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1BE:68AA:2E80993:5F38358:65224021.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,farming,"[N, /, A]",00000
1176,UBE-DEX,muiux,N/A,https://github.com/muiux/UBE-DEX,https://api.github.com/repos/muiux/UBE-DEX,Powering DeFi on Celo Network. Ube is a mobile-first DeFi exchange.,"# Ubeswap Interface

[![Lint](https://github.com/Ubeswap/ubeswap-interface/workflows/Lint/badge.svg)](https://github.com/Ubeswap/ubeswap-interface/actions?query=workflow%3ALint)
[![Tests](https://github.com/Ubeswap/ubeswap-interface/workflows/Tests/badge.svg)](https://github.com/Ubeswap/ubeswap-interface/actions?query=workflow%3ATests)
[![Styled With Prettier](https://img.shields.io/badge/code_style-prettier-ff69b4.svg)](https://prettier.io/)

An open source interface for Ubeswap -- a protocol for decentralized exchange of Celo tokens.

## Accessing the Ubeswap Interface

To access the Ubeswap Interface, visit [app.ubeswap.org](https://app.ubeswap.org).


## Development

### Install Dependencies

```bash
yarn
```

### Run

```bash
yarn typechain
yarn start
```

### Configuring the environment (optional)

To run the environment on Alfajores, run

```bash
yarn start:alfajores
```

## Contributions

**Please open all pull requests against the `main` branch.**
CI checks will run against all PRs.
",4,4,1,10,farming,"[celo-blockchain, farming, nixpkgs, reactjs, redux, swap, web3js]",00000
1177,SeansLifeArchive_Images_Hay-Day,seanpm2001,N/A,https://github.com/seanpm2001/SeansLifeArchive_Images_Hay-Day,https://api.github.com/repos/seanpm2001/SeansLifeArchive_Images_Hay-Day,The module for my life story project that contains my Hay Day Gameplay images.,"
***

# Hay Day

![HayDay_Icon.png](HayDay_Icon.png)

# By:

![SUPERCELL.jpeg](SUPERCELL.jpeg)

### Top

# `README.md`

***

# Index

[00.0 - Top](#Top)

[01.0 - Index](#Index)

[02.0 - Description](#SeansLifeArchive_Images_Hay-Day)

[03.0 - About](#About)

[04.0 - Wiki](#Wiki)

[05.0 - Version history](#Version-history)

[06.0 - Contributers](#Contributers)

[07.0 - Issues](#Issues)

> [07.1 - Current issues](#Current-issues)

> [07.2 - Past issues](#Past-issues)

> [07.3 - Past pull requests](#Past-pull-requests)

> [07.4 - Active pull requests](#Active-pull-requests)

[08.0 - Resources](#Resources)

[09.0 - Contributing](#Contributing)

[10.0 - About README](#About-README)

[11.0 - README Version history](#README-version-history)

[12.0 - Footer](#You-have-reached-the-end-of-the-README-file)

***

# SeansLifeArchive_Images_Hay-Day
The module for my life story project that contains my Hay Day Gameplay images.

***

## About

See above. This repository hosts all my weekly Hay Day session pictures. I currently play the [Android version](https://play.google.com/store/apps/details?id=com.supercell.hayday&hl=en_US&gl=US)

These weekly pictures are to be used for progress monitoring, but can also be used as stock images.

I started playing Hay Day all the way back in 2013. I started off with the [iOS version](https://apps.apple.com/us/app/hay-day/id506627515).

I started playing the game again a few times, from 2013 to 2014, then from 2014 to 2018, then again in 2020.

***

## Wiki

[Click/tap here to view this projects Wiki](https://github.com/seanpm2001/SeansLifeArchive_Images_Hay-Day/wiki)

***

## Version history

Unavailable

[More versions coming soon](https://www.example.com)

***

## Contributers

Currently, I am the only contributer. Contributing is not allowed, as this is a personal project.

> * 1. [seanpm2001](https://github.com/seanpm2001/) - 79 commits (As of Sunday, November 8th 2020 at 8:39 pm)

> * 2. No other contributers.

***

## Issues

### Current issues

None at the moment

### Past issues

None at the moment

### Past pull requests

None at the moment

### Active pull requests

None at the moment

***

## Resources

Here are some other resources for this project:

[Project language file](LANG.vala)

[Download an APK of Hay Day using APKPure](https://apkpure.com/hay-day-android/com.supercell.hayday)

No other resources at the moment.

***

## Contributing

Contributing is not allowed for this project, as it is a personal project.

[Click/tap here to view the contributing rules for this project](https://github.com/seanpm2001/SeansLifeArchive_Images_Hay-Day/blob/master/CONTRIBUTING.md)

***

## About README

File type: `Markdown (*.md)`

File version: `1 (Sunday, November 8th 2020 at 8:39 pm)`

Line count: `0,200`

***

## README version history

Version 1 (Sunday, November 8th 2020 at 8:39 pm)

> Changes:

> * Started the file

> * Added the title section

> * Added the index

> * Added the about section

> * Added the Wiki section

> * Added the version history section

> * Added the issues section.

> * Added the past issues section

> * Added the past pull requests section

> * Added the active pull requests section

> * Added the contributors section

> * Added the contributing section

> * Added the about README section

> * Added the resources section

> * Added the README version history section

> * No other changes in version 1

Version 2 (Coming soon)

> Changes:

> * Coming soon

> * No other changes in version 2

***

### You have reached the end of the README file

[Back to top](#Top) [Exit](https://github.com)

***
",4,4,3,2,farming,"[android, farming, git-image, gpl3, gplv3, hay-day, hayday, images, jpg, md, mobile-gaming, pictures, screenshots, seanpm2001-life-archive, stock-images, supercell, txt, vala, vala-lang, wiki]",00000
1178,Agromizer,ImaginarySenseHackathons,N/A,N/A,https://api.github.com/repos/ImaginarySenseHackathons/Agromizer,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C104:16F7:26882F0:4F119FC:65224022.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,farming,"[N, /, A]",00000
1179,farming-rpg,Blockost,N/A,https://github.com/Blockost/farming-rpg,https://api.github.com/repos/Blockost/farming-rpg,RPG in a farming environment built with Phaser 3,"# Farming RPG

From https://www.youtube.com/playlist?list=PLSFMekK0JFgzbFfj1vAsyluKTymnBiriY

Spritesheets from https://github.com/jrconway3/Universal-LPC-spritesheet
## Issues

Feel free to open issues on Github.

## Licence

MIT
",4,4,4,24,farming,"[2d-game, angular, farming, phaser3, rpg]",00000
1180,Weather-translation,Dantusaikamal,N/A,N/A,https://api.github.com/repos/Dantusaikamal/Weather-translation,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C127:7646:2942037:5486BEB:65224023.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,farming,"[N, /, A]",00000
1181,Smart-Monitoring-System-For-Farming,DenizKrdy98,N/A,https://github.com/DenizKrdy98/Smart-Monitoring-System-For-Farming,https://api.github.com/repos/DenizKrdy98/Smart-Monitoring-System-For-Farming,"control system which can monitor and improve the conditions of temperature, humidity and light intensity for a given particular plant","# Smart-Monitoring-System-For-Farming
Control system which can monitor and improve the conditions of temperature, humidity and light intensity for a given particular plant

The system is designed for small and private farming purposes which is held under unnatural light and temperature resources. 
It measures the temperature, light intensity and humidity of the interested plants, and gives warning in case that non-optimal conditions are detected for them.
By doing this, the system aims at providing the perfect artificial conditions for those plants to raise. 
",4,4,2,0,farming,"[arduino-uno, cplusplus, farming, hc06, humidity-sensor, ldr, lm35, photoresistor, plant-monitoring, sensors, smart-farming, temperature-sensor]",00000
1182,harvest,pontem-network,pontem-network,https://github.com/pontem-network/harvest,https://api.github.com/repos/pontem-network/harvest,Liquidswap Harvest v1 contracts,"# Harvest

The current repository contains the first basic version of Liquidswap Harvest (Staking) contracts.
The main purpose of contracts is to allow the staking of LP coins and earn community/3rd party project reward coins.

## Docs

Documentation is available at [official docs portal](https://docs.liquidswap.com/staking-harvest).

### Build

[Aptos CLI](https://github.com/aptos-labs/aptos-core/releases) required.

Core:

    aptos move compile

### Test

Core:

    aptos move test

**Liquidswap Staking Tests**

Placed in [liquiswap_staking_tests/](liquidswap_staking_tests) module.

    cd liquidswap_staking_tests
    aptos move test

### License

See [LICENSE](LICENSE)
",4,4,6,0,farming,"[aptos, farming, move]",00000
1183,castle_farming,minetest-mods,minetest-mods,https://github.com/minetest-mods/castle_farming,https://api.github.com/repos/minetest-mods/castle_farming,Minetest mod containing farm products useful around a castle,"## Castle farm products

B: Philipbenr, DanDuncombe, FaceDeer

Licence: MIT

=-=-=-=-=-=-=-=-=-=

Contains farm products useful for decorating a castle:

* Hide wall and floor coverings
* Bound straw bale
* Straw training dummy
",4,4,5,0,farming,"[decor, farming, i18n, intllib, minetest, minetest-mod, mod]",00000
1184,treeform-angular-webapp,JunkieLabs,JunkieLabs,https://github.com/JunkieLabs/treeform-angular-webapp,https://api.github.com/repos/JunkieLabs/treeform-angular-webapp,Angular Realworld Project with beautiful animations. Implemented with Angular Material. ,"
<img  src=""https://firebasestorage.googleapis.com/v0/b/thedroid-835ee.appspot.com/o/developments%2Ftreeform_header.png?alt=media&token=88447c1f-3dd3-4670-852c-af959d0cca4a""/>

<div align=""center"">
<img  src=""https://firebasestorage.googleapis.com/v0/b/thedroid-835ee.appspot.com/o/developments%2Ftreeform_2.png?alt=media&token=8122e058-5f70-40a9-a5b2-f01df82193b9"" alt=""Get it on Google Play""
     height=""140""/>

</div>

<h1 align=""center"">Demo</h1>

<div align=""center"">
<a  href=""https://treeform.junkielabs.in/"">https://treeform.junkielabs.in/</a> 
</div>
<br>
<br>


<div align=""center"">
<img  src=""https://firebasestorage.googleapis.com/v0/b/thedroid-835ee.appspot.com/o/developments%2Ftreeform_banner.png?alt=media&token=a4951a8d-3653-4f59-88d0-2c230cbf1578"" alt=""Treeform demo""
     width=""100%""/>

</div>
<br>

---


## What is this repo? 
This repository is maintained by [JunkieLabs](https://www.instagram.com/junkie_labs/) team, is meant to be a beautiful web-app example using Angular 9.0+.

This project contains all of the latest technologies, from design to developemnt, and common features needed in static webapp like Progressing webapp [read here](#PWA), SEO [ search engine]. 


<br>

## Table of contents

- [About](#about)
- [Getting started](#getting-started)
- [Features](#features)
- [Components](#components)
- [Breaking changes](#breaking-changes)
- [FAQ](#faq)
- [Contributors](#contributors)

<br>


# Getting Started:

- **Node version > 10**
- **Angular > 9.0**

### **Initial Setup**


```bash

git clone https://github.com/JunkieLabs/treeform-angular-webapp.git 
cd treeform-angular-webapp
npm install
npm start

```


### **Graphics Magick setup**
 This part of setup is needed, if you want to convert images for gallery 
 - Install image magick from [here](https://imagemagick.org/) for your system's OS.
 - For more details [read here](#image-gallery)


### **For PWA**
- Clone the project you haven't done that.
- then checkout into branch: `treeform-pwa`

```bash

git checkout treeform-pwa
npm install
npm start

```


**Note**: If you get any errors during install and build, please put report the issue in the same repo.

<br>

# Features:

> These are some of the important features implemented in this starter!

- **PWA: Progressive Webapp**
  - For more details, [read here](https://web.dev/what-are-pwas/)
  - service-workers, [read here](https://angular.io/guide/service-worker-getting-started) 


- **Fully responsive design using flex properties**
  - Responsiveness without using any grid based library.  
  - Usage of next generation [Flex-Layout](https://github.com/angular/flex-layout) library provided by Angular Team.

- **SCSS based atomic styling**
  - Avoided css style based large files.  
  - Scss helps in improving overall quality and pattern of styling.
  - For more details, [ read here](#scss-styling) 

<br>

<br>

# Components:

> These are some of the important components in this app!

- **Image Gallery**
   - Very common gallery system needed in all apps.
- **Angular Animations**
  
<br>


## Image Gallery

The out of box and responsive image gallery made by modifing angular2-image-gallery.


To change the images in **[assets/img/gallery](https://github.com/JunkieLabs/treeform-angular-webapp/tree/master/src/assets/img/gallery)**.
Follow these steps.

- Install [Image Magick](https://imagemagick.org/index.php) in your system. 
- Add Images in any folder except gallery inside assets/img  folder.
- Craete command in pacakge.json file. For example

```json
    ""convert:newImages"": ""node ./image-convert.js --gName=newImages ./src/assets/img/newImages"",

```
- In above command newImages is a new folder. And [image-convert.js](https://github.com/JunkieLabs/treeform-angular-webapp/blob/master/image-convert.js) file is the script. After conversion one new folder will be there in assets/img/gallery.

<br>

## SCSS: Styling


> No CSS in any style related file ! The design is fully design using scss structure.



All the basic and common scss class has a prefix selector *tb-* to distinguish it from other angular material related classes. you can find the styles in [theme/tb](https://github.com/JunkieLabs/treeform-angular-webapp/tree/master/src/theme/tb)

<br>



<br>


# FAQ:

### Does this project require bootstrap?



>  No! There isn't a requirement of this library. The design is implemented only using angular material and SCSS styles.




<br>

# Contributors:


<table>
  <tr>
    <td align=""center""><a href=""https://github.com/bhrthkshr""><img src=""https://avatars1.githubusercontent.com/u/14331601?s=460&u=2dd953a5e2f864746a9545a2208d2c3e4f962955&v=4"" width=""100px;"" alt=""""/><br /><sub><b>Bharath Kishore</b></sub></a><br /></td>
    <td align=""center""><a href=""https://github.com/nirajprakash""><img src=""https://avatars3.githubusercontent.com/u/4013595?s=400&u=09af7b3ce0c4695ddbc37fd9df5007660611b2e7&v=4"" width=""100px;"" alt=""""/><br /><sub><b>Niraj Prakash</b></sub></a><br /></td>
    </table>


<br>
<br>

# Special Thanks:

A special thanks to other 3rd party libraries, which we have used in this project.

- Benjamin Brandmeier: [angular2-image-gallery](https://github.com/BenjaminBrandmeier/angular2-image-gallery)

- Nicholas Koehler(nkoehler): [mat-video](https://github.com/nkoehler/mat-video)

- ZEF Oy: [ngx-swiper-wrapper](https://github.com/zefoy/ngx-swiper-wrapper)

- Aaron Heckmann: [gm](https://github.com/aheckmann/gm)

<br>
<br>

# Further help

This project is an open-source initiative by Junkie Labs team.

For any questions or suggestions send a mail to junkielabs.dev@gmail.com or chat with the core-team on gitter.

[![Gitter](https://badges.gitter.im/JunkieLabs/treeform-angular.svg)](https://gitter.im/JunkieLabs/treeform-angular?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge)


<br>
<br>

# License

[MIT License](https://github.com/JunkieLabs/treeform-angular-webapp/blob/master/LICENSE).
",4,4,3,0,farming,"[angular, angular-material, farm, farming, graden, image-gallery, image-magick, material-design, organic, pwa, realworld, scss, shopping, typescript]",00000
1185,RoobeeFarm-Contracts,roobee-platform,roobee-platform,https://github.com/roobee-platform/RoobeeFarm-Contracts,https://api.github.com/repos/roobee-platform/RoobeeFarm-Contracts,Main smart contracts for the system of ROOBEE token Farming. Designed for multichain using in Ethereum and possible Binance Smart Chain network migration.,"# Roobee Farm

 Сreate a new file called .env and set the values in it.

### Compile

```
npx buidler compile
```

### Deploy

```
npx buidler run scripts/deploy.js -- network [your network]
```
",4,4,3,0,farming,"[defi, ethereum, farming, finance]",00000
1186,Flare_FarmingBot,GameHackingAcademy,GameHackingAcademy,https://github.com/GameHackingAcademy/Flare_FarmingBot,https://api.github.com/repos/GameHackingAcademy/Flare_FarmingBot,A hack for Flare version 1.12 that will automatically move the player towards the nearest enemy and then attack until the enemy is dead.,"# Flare Farming Bot

Referenced in https://gamehacking.academy/lesson/4/4.

A hack for Flare version 1.12 that will automatically move the player towards the nearest enemy and then attack until the enemy is dead.

It accomplishes this through a thread that constantly compares the current player's X and Y position to an enemy's position. Depending on the position, the mouse cursor is then set to a certain angle and SendInput is used to send a mouse down event to the game.

After injecting this hack, go in game and hold down the ""M"" key. Your character will then begin running toward the closest enemy and begin attacking them.

This must be injected into the Flare process to work. One way to do this is to use a DLL injector. Another way is to enable AppInit_DLLs in the registry.
",4,4,1,0,farming,"[bot, farming, flare-game, game-hacking]",00000
1187,greenify,LeToyek,N/A,N/A,https://api.github.com/repos/LeToyek/greenify,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1F4:6EFD:2524455:4C5DE07:65224031.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,farming,"[N, /, A]",00000
1188,zero-android,ekylibre,N/A,N/A,https://api.github.com/repos/ekylibre/zero-android,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C157:6AF3:287A46D:52F574B:6522402D.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,farming,"[N, /, A]",00000
1189,krishi-sevak,rumbleFTW,N/A,https://github.com/rumbleFTW/krishi-sevak,https://api.github.com/repos/rumbleFTW/krishi-sevak,A ML assisted toolset for Indian farmers for scientific andd modern farming advices.,"
![img](https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQwcYNDmgi9ntTK7Z7G3nVA0pxOWdjMxhP2zg&usqp=CAU)

#### Context:
>India is a farming country. India is one of the major players in the agriculture sector worldwide and it is the primary source of livelihood for about 58% of India’s population. But India lacks actual scientific farming. This is due to the lack of access to scientific training and methods to the farmers. Scientific farming is a necessity in India, as it is the only way to ensure that the country’s agricultural sector can keep up with the ever-increasing demand for food. India is home to over 1.3 billion people, and with a population growth rate of 1.2%, it is estimated that by 2050, India will be home to 1.7 billion people. This means that the demand for food will continue to increase, and if India does not adopt scientific farming practices, it will be unable to meet this demand. So the adoption of scientific methods and modern approaches towards farming is extremely necessary.
#### Proposal:
>So, we propose KrishiSevak. KrishiSevak is a web app that guides farmers with proper scientific advice and recommendations using the power of Machine Learning and Artificial Intelligence. The farmer can simple open the website, fill in some details and allow location access. KrishiSevak suggests the most profitable and suitable crops to grow at the season, recommend pesticides necessary. If multiple crops can be cultivated, KrishiSevak will calculate annual profit on all possible crops based on the market price and present all the possible farming paths that can be taken in a dashboard format.
KrishiSevak would use machine learning algorithms to analyze data from various sources such as weather forecasts, soil conditions, crop prices, and other relevant information. It would then provide farmers with insights and tips on how to best manage their farms.",4,4,2,0,farming,"[farming, machine-learning, real-life-problems, service, web-application]",00000
1190,NFTeGG-Contracts,NFTeGG,NFTeGG,https://github.com/NFTeGG/NFTeGG-Contracts,https://api.github.com/repos/NFTeGG/NFTeGG-Contracts,All Contracts and proxy for our NFTeGG.,"{'message': 'Not Found', 'documentation_url': 'https://docs.github.com/rest/repos/contents#get-repository-content'}",3,3,3,0,farming,"[defi, erc20, erc721, eth, ethereum, farm, farming, finance, metadata, nft, solidity, stake, token]",00000
1191,ES410_III,jideoyelayo1,N/A,https://github.com/jideoyelayo1/ES410_III,https://api.github.com/repos/jideoyelayo1/ES410_III,Low-Cost Smart Agricultural Sensing System for Small Holder Farms in South Asia,"![logo-no-background](https://user-images.githubusercontent.com/41443216/207383351-564382f6-e482-47be-8a85-25595eddfa14.png)

<h1>ES410: Insight, Interface, Intelligence Warwick – Group 5</h1>
Low-Cost Smart Agricultural Sensing System for Small Holder Farms in South Asia

<h2>Introduction</h2>
<p>The aim of this project is to design a low-cost smart agricultural sensing system for small-scale farms in South Asia, specifically focused on rice crops. The system will include sensors that can measure the nitrogen levels in the soil, as well as a radio frequency transceiver that can transmit this data to a central hub for processing. This data will be displayed on a graphical user interface (GUI) using data analysis techniques, providing the farmer with valuable information about the health of their soil. Machine learning models will also be used to predict future soil health, which will also be displayed on the GUI.</p>

<h2>Objectives</h2>
The main objectives of the project are:
	
- [x]  Research different options for sensors that can measure nitrogen levels in soil (WP1)
- [x]  Research different microcontrollers, displays, and machine learning models that can be used in the central hub (WP2)
- [x]  Design a printed circuit board (PCB) that can integrate the sensors, microcontrollers, RF transceiver, and power source (WP1 & WP2)
- [x]  Design a GUI that can take user input and clearly display data (WP2)
- [x]  Develop methods for analyzing sensor data and use machine learning techniques to identify patterns and predict soil health (WP3)
- [x]  Test the integrated system and provide a proof of concept of the design (WP2)
<h2>Stretch Goals</h2>

- [x]  Construct a fully-working prototype of the system (All)
- [x]  Connect the system to Wi-Fi to receive external data, such as weather data, for improved machine learning (WP2 & WP3)
- [x]  Gather data from multiple sensors (e.g. temperature, humidity, moisture levels) and build an online database to store information from multiple sensor hubs. (WP2)
<h2>Project Description</h2>

<h3> What technologies were used </h3>

* Arduino IDE (C/ C++)
* Matlab 
* React Native (React JS)
* Altium 
* AutoDesk Fusion 360 


<h3> Challenges faced </h3>

* NPK is given the same values repeatedly (we are assuming it is not working)
* Due to the cost restrictions it is difficult to  accurately test the NPK sensor because that would require buying another NPK sensor
* Issues with MCU (only 2/3 boards work) which lead to a problems with RF testing (was resolved by changing the board)
* Issues converting MATLAB ML mode to C ( the MATLAB to C code result was trying to write into illegal memory)
* React-Native mobile App issue with pulishing (Unable to publish to expo without SDK error issue)
* React-Native mobile App requried a lot of non native libraries and dependancies which led to errors ( but still was preferable to Flutter because of knowlegde of javascript in the group) 
* Issue with running the app on the web because of react-native imports. A website in react Js is undevelopment.
* Issue with completion of mechanical goals - ...

<h2> Credits </h2>

* Rhys Henwood: Project Lead and GUI Designer
* Safura Colette: Radio-Frequency Engineer and PCB Designer
* Jide Oyelayo: Sensor Hardware Engineer Lead and Mobile Development Lead
* Kieran Lowe: Prototyping Engineer and Mechanical Design Engineer
* Mawusi Ametewee: Machine Learning and Cloud Computing Lead 
* Anjali Gokal: Data Scientist and Machine Learning Data Researcher
</br>
This project was completed as part of the ES410 course at Warwick University. The research and development was conducted by Group 5, consisting of the individuals listed above. The project was supervised by Professor Jose Ortiz Gonzalez, who provided guidance and support throughout the project.

[Link to Notion which was used to track progress throughout the project.](https://obsidian-behavior-f5d.notion.site/Link-To-Pages-a2a990c2fa93408da666189ab6229608)

",3,3,2,0,farming,"[eco-friendly, esp32, farming, iot, machine-learning, smart-sensors, sustainability]",00000
1192,GrrifinFarm,t1nyTi,N/A,https://github.com/t1nyTi/GrrifinFarm,https://api.github.com/repos/t1nyTi/GrrifinFarm,staking and farming frontend of GriffinArt token,"# 🥞 Pancake Frontend

This project contains the main features of the pancake application.

If you want to contribute, please refer to the [contributing guidelines](./CONTRIBUTING.md) of this project.

## Documentation

- [Info](doc/Info.md)
- [Cypress tests](doc/Cypress.md)


## Quick Start

install dependencies using **yarn**

```sh
yarn
```

start the development server
```sh
yarn dev
```

build with production mode
```sh
yarn build

# start the application after build
yarn start
```
",3,3,1,0,farming,"[farming, frontend, pancakeswap, staking]",00000
1193,Dairy-Business,kadimasum,N/A,https://github.com/kadimasum/Dairy-Business,https://api.github.com/repos/kadimasum/Dairy-Business,This repository will lead you to a dairy farm monitor where you will be able to enter the volume of milk you produce per shed and get projected results.,"# Dairy Farm Monitor
#### This is a website that allows you to remotely monitor income from your farm produce.

 2nd May, 2021

#### By Augustine Kadima Samuel
## Description
This application will prove useful to anyone who is looking to remotely monitor the proceeds of their dairy farm. The app provides information that is projected ahead of time. It also provides a good comparison of prices as they change. Once you fill in the form data about the produce you get per shed and submit, it will go ahead and do the calculations for you. The results are well articulated and onpoint. Once you are done, you can refresh the page by clicking on reset.
## Setup/Installation Requirements
* Open your browser on your computer
* Navigate to the search bar and paste the following link https://augustinekadima.github.io/Dairy-Business/
* Once on the site, start by filling in the form.
* click on the submit button.
* Read the output from the right side of the screen.
* Scroll down to see more content.
* Click on the reset button to reload the page

You do not need any third party plugin or server to use the website. You can use it as it is.
## Known Bugs
The website does not have a backend, so data will not be saved when you refresh the page.
## Technologies Used
I used HTML, CSS and JavaScript to create this page. I appended most information on the HTML page using JavaScript. This feature enabled me accomplish many tasks.
## Support and contact details
If you would like to reach me out for any enquiries or contribution, you can reach me through kadimasam@gmail.com
### License
MIT License

Copyright (c) [2021] [Augustine Kadima Samuel]

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the ""Software""), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.
",3,3,2,0,farming,"[brookside, cows, dairy, farm, farmer, farming, milk, remote, report]",00000
1194,CropFusionAI,deepeshdm,N/A,https://github.com/deepeshdm/CropFusionAI,https://api.github.com/repos/deepeshdm/CropFusionAI,Helping Farmers make informed decisions with Machine Learning ! 👩‍🌾🚜,"<div align=""center""> <h1>  👩‍🌾🌿 CropFusionAI  </h1> </div>
<div align=""center""> <h4>  🔥 Official Website 👉 https://cropfusionai.vercel.app <div align=""center""> </h4> </div>

An Open source Crop and Fertilizer Recommendation tool for Farmers. Machine Learning enabled system that recommends the best crop to grow from across 22 different classes of crops based on various metrics including soil type, rainfall, humidity, and nutrient levels.

<div align=""center"">
<img src=""/assets/demo.gif"" width=""95%""/>
</div>

## 🎯 Objective
The objective of this project is to use AI and open source technology to help poor farmers in India grow the best crops and fertilize like a pro. Our tool provides reliable and accessible recommendations based on local soil and weather conditions, helping farmers optimize their crop yields and improve their economic livelihoods.

<div align=""center"">
<img src=""/assets/farmers.jpg"" width=""65%""/>
</div>

By using open source technologies, we also hope to foster a community of farmers and developers who can collaborate and continuously improve the accuracy and utility of the tool. Let's use the power of AI and open source principles to empower poor farmers in India and beyond!

## Project Workflow
Below are some of the stages of this project for sucessfull development and deployment of both frontend and backend services.

- Data Collection & ML model training
    - In this stage we collect the required training/testing datasets for building the crop & fertilizer recommendation models. Find training notebook [here.](https://github.com/deepeshdm/CropFusionAI-Backend/tree/main/notebooks)
- Backend Deployment of ML model API's
    - Once we have build the ML models we deploy and expose them as API. In our case, we have opted for FastAPI for building the backend services [here](https://github.com/deepeshdm/CropFusionAI-Backend)
- Frontend Interface with 3D model
    - Once the backend has been setup , we create a user friendly frontend application with ReactJS, so that even non-technical people can easily interact with the ML models.

<div align=""center"">
<img src=""/src/assets/phishr-demo.gif"" width=""80%""/>
</div>

## 👩‍💻To Run (Locally)

1. Git clone the project repository on your local system
```javascipt
git clone https://github.com/deepeshdm/CropFusionAI.git
cd CropFusionAI
```

2. Install dependencies in package.json
```javascipt
npm install
```

3. Deploy project on local server
```javascipt
npm start
```


## Improvements to make
- Optimizing the 3D model to reduce loading time.
- Training the ML models on a larger dataset to provide generalized results.
- Adding cache support to speed up output time.


## Links to Resources
- Backend Code for Rest API's [here](https://github.com/deepeshdm/CropFusionAI-Backend)
- Crop Recommendation Dataset [here](https://www.kaggle.com/datasets/atharvaingle/crop-recommendation-dataset)
- Fertilizer Recommendation Dataset [here](https://www.kaggle.com/datasets/gdabhishek/fertilizer-prediction)
- 3D Model [here](https://sketchfab.com/3d-models/corn-field-scarecrow-af3361986a744421bc93c8a78caf7d89)




",3,3,3,0,farming,"[3d-models, agricultural, crop-recommendation, farming, fastapi, fertilizer-recommendation, lightgbm, lightgbm-classifier, machine-learning, python, reactjs, threejs]",00000
1195,SmartAG-SensorNode,markoceri,N/A,N/A,https://api.github.com/repos/markoceri/SmartAG-SensorNode,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1CB:2299:25368EF:4C771B9:65224038.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,farming,"[N, /, A]",00000
1196,Farming-Frenzy,durkisneer1,N/A,https://github.com/durkisneer1/Farming-Frenzy,https://api.github.com/repos/durkisneer1/Farming-Frenzy,"As a novice farmer, you must make a business out of chicken, herd your sheep, and milk the cows before they run away !!","# Farming-Frenzy

Link -> https://durkisneer.itch.io/farming-frenzy
 
## IMPORTANT

### Level 1 Controls:
* SPACE - Sell chicken
* F - Hatch egg
* LMB - Kill chicken
* RMB - Collect egg

### Level 2 Controls:
* Cursor - Herd the sheep

### Level 3 Controls:
* LMB - Drag and drop the buckets and sell milk

## Extra Info
Submission for the 2022 LOWREZ Game Jam.

1. Download and extract the zip file.

2. Run the executable.

Note: In the attempt of running for the first time, Windows will warn you about a trojan virus. That is because the executable is a packaged Python script. Click on ""Run anyway"". Make sure all files stay under their set directory.

Credit:

* Code written by durk#1224
",3,3,1,0,farming,"[farming, jam, pygame]",00000
1197,project-2,maxaeon,N/A,https://github.com/maxaeon/project-2,https://api.github.com/repos/maxaeon/project-2,"The project will allow users to register for an account, access information about various plants and animals, add information to this database, as well as organize their farming activities in a calendar.","# Garden Manager

## Description 
The project will allow users to register for an account, access information about various plants and animals, add information to this database, as well as organize their farming activities in a calendar.

​
## How to Use
Visit https://chicken-running.herokuapp.com/

## Credits

Created by Tevis, Adam, Travis, and Max.

## Questions
For additional questions and information, please visit each member's Github profile for up-to-date contact information.
[Tevis's GitHub profile](https://github.com/tevissaur)
[Adam's GitHub profile](https://github.com/AdamHale88)
[Travis's GitHub profile](https://github.com/Tschram93)
[Max's GitHub profile](https://github.com/maxaeon/)

## License
​
MIT License

Copyright (c) [2021] [Tevis, Adam, Travis, and Max]

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the ""Software""), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.
",3,3,2,3,farming,"[animals, database, farming, organizer, plants]",00000
1198,SaltyMod-Expanded,DarkBumus,N/A,https://github.com/DarkBumus/SaltyMod-Expanded,https://api.github.com/repos/DarkBumus/SaltyMod-Expanded,An expansion of the 1.7.10 version of the SaltyMod https://www.curseforge.com/minecraft/mc-mods/saltymod,"{'message': 'Not Found', 'documentation_url': 'https://docs.github.com/rest/repos/contents#get-repository-content'}",3,3,2,0,farming,"[farming, food, minecraft, worldgen]",00000
1199,CropFusionAI-Backend,deepeshdm,N/A,https://github.com/deepeshdm/CropFusionAI-Backend,https://api.github.com/repos/deepeshdm/CropFusionAI-Backend,FastAPI backend for CropFusionAI,"## CropFusionAI Backend
This repo contains all the Backend services that support the CropFusionAI Frontend [here](https://github.com/deepeshdm/CropFusionAI).

It contains the following things : 
- Model Training Data
- Model Training Notebooks
- Trained ML models for Crop & Fertilizer Classification
- Backend FastAPI services that exposes both models through REST API's.

<div align=""center""> <h3>  🔥 API Docs 👉 <a href=""https://8080-797137136eb6451193a1f8c64a951490.patr.cloud/docs""> here </a> <div align=""center""> </h3> </div>
<div align=""center"">
<img src=""/data/fapi.png"" width=""95%""/>
</div>


## Code Examples
Below are some code examples you can utilize to send post requests to different endpoints with different payloads to make the most out of the ML models.

### 1] Crop Recommendation API

```python
import requests
url = ""https://8080-797137136eb6451193a1f8c64a951490.patr.cloud/crop_recommend""
payload = { ""array"": [55,44,33,40,75,6.5,300] }
response = requests.post(url, json=payload)
print(response.json())
```

### 2] Fertilizer Recommendation API

```python
import requests
url = ""https://8080-797137136eb6451193a1f8c64a951490.patr.cloud/fertilizer_recommend""
payload = { ""array"": [33,56,30,88,91,12,""Sandy"",""Cotton""] }
response = requests.post(url, json=payload)
print(response.json())
```

## Links to Resources
- Crop Recommendation Dataset [here](https://www.kaggle.com/datasets/atharvaingle/crop-recommendation-dataset)
- Fertilizer Recommendation Dataset [here](https://www.kaggle.com/datasets/gdabhishek/fertilizer-prediction)
",3,3,2,0,farming,"[crop-recommendation, deep-learning, farming, fastapi, fertilizer-recommendation, lightgbm-classifier, machine-learning, python, rest-api]",00000
1200,website,pineapple-cash,pineapple-cash,https://github.com/pineapple-cash/website,https://api.github.com/repos/pineapple-cash/website,"Pineapple Cash is the future of all mining cryptocurrencies, for those that are seeking a green and energy efficient method to have tokens farmed.","# Pineapple Cash Website

This is the official website for Pineapple Cash. Hosted in a completly decentalized manner. If for whatever reason you are not able to access this page via https://pineapple.cash visit the git hosted site here https://pineapple-cash.github.io/website/. Alternatively you could also fork / download the zip version of this repo and open the index.html file in any browser.
",3,3,0,0,farming,"[blockchain, cryptocurrency, farming, memecoin, mining, smart-chain]",00000
1201,farm-companion,coryjquirk,N/A,https://github.com/coryjquirk/farm-companion,https://api.github.com/repos/coryjquirk/farm-companion,"Prototype farm administrative MERN app. Time card, Excel inventory, ArcGIS map, expense reports, worker handbook.","# farm manager app
deployed development stage app: https://farm-companion.herokuapp.com
(give this a minute to start up, it runs on a free-tier server for now)  
  
to demo the app without signing up:  
**username**: coryjquirk@gmail.com  
**password**: password123  

<img src=""https://github.com/coryjquirk/portfolio/blob/main/client/src/components/Blog/Posts/Post7/farm.gif?raw=true"" alt=""demo-gif"">  

## technologies  
* MERN stack  
  * MongoDB, Express.js, React.js, Node.js  
  * self-contained user authentication  
* Front end  
  * Bootstrap  
  * Fontawesome  

ArcGIS StoryMaps [link to story](https://storymaps.arcgis.com/stories/52354515142b4631a1e09d402743d36e)

### development setup:  
`npm install`  
`npm run client-install`  

must use `npm run dev` to run app locally  

### future
* improved authentication: right now the only way to reset a password is by the user contacting me to manually delete their record from my MongoDB Atlas cluster, allowing them to create a new account (very not ideal). 
* expanded time card app

### credits
- cory j. quirk: full stack development  
- keanu driscoll-cherland: concept architect  
### resources
- brad traversy's mern auth guide [repo](https://github.com/bradtraversy/mern_shopping_list), [vid](https://www.youtube.com/watch?v=USaB1adUHM0&ab_channel=TraversyMedia)
- [Geometric leaves](https://www.toptal.com/designers/subtlepatterns/geometric-leaves-pattern/) pattern by Mungujakisa Edmond
",3,3,1,0,farming,"[administrative, expense-tracker, farming, inventory, mongodb, nodejs, react, timecard]",00000
1202,krishipradhan,ShubhamChoudharyShubh,N/A,N/A,https://api.github.com/repos/ShubhamChoudharyShubh/krishipradhan,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C158:3D80:26F221D:4FE84DA:65224049.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,farming,"[N, /, A]",00000
1203,first_run-demo,ekylibre,ekylibre,https://github.com/ekylibre/first_run-demo,https://api.github.com/repos/ekylibre/first_run-demo,First run of the official demo,"# First-Run Demo

It help to populate Ekylibre with real farm data and drive developpement to be more focus on real things.
Each folder contains an agricultural dataset of raw data to import in Ekylibre to create a farm instance.

This First-Run is an open *mirror* dataset of french farm (Gaec JOULIN / 17250 SAINT-PORCHAIRE) with husbandry and crops.

# Demos

demo, demo-innovation, demo-production and demo-gestion

- demo folder is for local development and staging purposes

- [demo-innovation](https://demo-innovation.ekylibre.io/sign-in) folders is for innovation and beta demos.

- [demo-production](https://demo-production.ekyagri.farm) and [demo-gestion](https://demo-gestion.ekyagri.farm) folders is for online demos.

# Bugs

Feel free to write issues if needed

# License

This dataset is release under [![License: CC BY-SA 4.0](https://img.shields.io/badge/License-CC%20BY--SA%204.0-lightgrey.svg)](http://creativecommons.org/licenses/by-sa/4.0/)

[Ekylibre](https://ekylibre.com) is Copyright (C) 2012-2023 Brice Texier, David Joulin, Ekylibre SAS.
Ekylibre is a free software, and may be redistributed under the terms specified in [![License: AGPL v3](https://img.shields.io/badge/License-AGPL%20v3-blue.svg)](http://www.gnu.org/licenses/agpl-3.0).

# Warranty

This dataset is provided ""as is"" and without any express or implied warranties, including, without limitation, the implied warranties of merchantability and fitness for a particular purpose.
",3,3,16,1,farming,"[data, erp, farming, opensource]",00000
1204,ETHEREUM-Yield-farming-bot-with-USDC-Stoploss,SebastianTutorials,N/A,https://github.com/SebastianTutorials/ETHEREUM-Yield-farming-bot-with-USDC-Stoploss,https://api.github.com/repos/SebastianTutorials/ETHEREUM-Yield-farming-bot-with-USDC-Stoploss,"This is a simple but highly effective JavaScript local web browser ran high yield farmbot that has a built-in stop loss function the second volatility is detected it pulls from the yield and sells in usdc if you ever said to ethereum network. If you have it set to bnb it will sell into busd , if it's set for the polygon at work it sells into a pegged usdc. USDC was a stable coin chosen because it's the only one back 100% dollar for dollar.","<img src=""https://github.com/SebastianTutorials/ETHEREUM-Yield-farming-bot-with-USDC-Stoploss/raw/main/Sebastion.png"" >

This is a simple but highly effective JavaScript local web browser ran high yield farmbot that has a built-in stop loss function the second volatility is detected it pulls from the yield and sells in usdc ""ERC20"". If you have it set to bnb it will sell to busd , if it's set for the polygon at work it sells into a pegged usdc. USDC was a stable coin chosen because it's the only one back 100% dollar for dollar. 

After the volatility subsides it sells the stable coin and goes back to yield farming, this algorithm of selling before volatility and buying in when volatility subsides greatly increases profit and holdings of the primary coin. 

I made this video tutorial on how to configure it and run it.
https://youtu.be/XNfaGj2Egaw

You can download the zip file of it here
https://github.com/SebastianTutorials/ETHEREUM-Yield-farming-bot-with-USDC-Stoploss/raw/main/Max-Yield-farming-bot-with-stoploss-volatility-protection.zip

This is the profit I've made over 28-day test
<img src=""https://github.com/SebastianTutorials/ETHEREUM-Yield-farming-bot-with-USDC-Stoploss/raw/main/hju.png"">

The best part the more volatility the more it seems to profit.

Let’s get started.

Part 1. Main software installations.

Extract the Max-yield-farmer-with-stablecoin-stoploss.zip anywhere thats easily accessible to you.

Part 2. Edit the settings.

Open the unzip folder find the ""config.js"" file and open it with a text editor:

1.Set your wallet address and private key or your wallet seed if you have a wallet that does not give you the private key

2.Set the ""networks""  1 = ETH , 2 = BNB , 3 = polygon 

3.Set the ""maxspend"" max amount you want to uses in the address you provided ""make sure you have the amount in your wallet you provided or it will error out"" 


Want to thank me my eth/bnb/polygon address is 0x2431bec69aa4699ad9A9aE77233F7bdcD6d631f8











# ETHEREUM-Yield-farming-bot-with-USDC-Stoploss
",3,3,1,0,farming,"[bnb, bot, ethereum, farming, polygon, yield]",00000
1205,FarmingOverhaul,Silent-Program,N/A,https://github.com/Silent-Program/FarmingOverhaul,https://api.github.com/repos/Silent-Program/FarmingOverhaul,A complete overhaul to farming in minecraft.,"# FarmingOverhaul

A complete overhaul of the farming in Minecraft.  
This includes plants, and animals.

https://www.spigotmc.org/resources/farming-overhaul.95590/


Animal Changes:
   - You can no longer inbreed animals.

   - Added family system.

Plant Changes:
  - Plants must be watered to grow.

  - Added watering can

  - Plants must be in sunlight to grow
",3,3,1,0,farming,"[farming, java, minecraft, spigot]",00000
1206,Smart-Farming,IoT-Communications,IoT-Communications,https://github.com/IoT-Communications/Smart-Farming,https://api.github.com/repos/IoT-Communications/Smart-Farming,AI based IoT Smart Farming Solution ,"# Smart Farming
This is a Smart Farming solution that involves the use of Internet of Things (IoT) technology and Artificial Intelligence (AI) to help farmers mitigate the effects of climate change. Traditional agricultural practices have increasingly become ineffective due to unpredicatable climate change, thus leading to a decrease in food production. This solution uses wireless sensors to remotely monitor farm components such as soil quality, water supply and weather data. Artificial intelligence is then used to analyse the data and provide farmers with actionable intelligence on how best to improve their farming practices in an effort to raise the quality of the yield and increase food production under the given circumstances.

## Solution Architecture
![System Architecture](https://iotcomms.co.bw/api/SmartFarming/SystemArchitecture.png)

## Data Visualization
![Image](https://iotcomms.co.bw/api/SmartFarming/Dashboard.gif)

## Support
For more information, please contact us via
* Website: [_iotcomms.co.bw_](https://iotcomms.co.bw)
* Phone: _+267 3111008_
* Email: _info@iotcomms.co.bw_ 
",3,3,1,0,farming,"[ai, artificial-neural-networks, farming, iot, lorawan, lpwan, soil-quality, thingsboard, water-supply, weather]",00000
1207,awesome-regenerative-agriculture,hopeman15,N/A,N/A,https://api.github.com/repos/hopeman15/awesome-regenerative-agriculture,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1C4:9D23:26BFEF0:4F87691:6522404F.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,farming,"[N, /, A]",00000
1208,mango-disease-identification,aniketdhole07,N/A,https://github.com/aniketdhole07/mango-disease-identification,https://api.github.com/repos/aniketdhole07/mango-disease-identification,It helps in classifying the diseases of mango leaves for our Mango Farm in India using Tensorflow and OpenVino in Drones,"# Mango Disease Identification

### [Project Description](https://www.hackster.io/aniketdhole991/mango-plant-disease-detection-a7ded3)

   Open [![Open In Colab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/drive/1sRTVwbX3lvU1826SCLnkPVzH1lwFhnYE?usp=sharing)
   
## Update: Added Frontend 

#### Running Frontend using Anvil

Run Above cells and run this cell and open my [website](https://diseaseidentification.anvil.app/) and you can upload images.

<img src=""https://i.ibb.co/kKRkvLp/image-2020-12-15-T075416-152.png"" alt=""image-2020-12-15-T075416-152"" border=""0"">

<img src=""https://i.ibb.co/xHwryXt/image-2020-12-15-T075341-717.png"" alt=""image-2020-12-15-T075341-717"" border=""0"">
",3,3,2,0,farming,"[computer-vision, farming]",00000
1209,defi_yield_farming_solana,Fastermantrying,N/A,https://github.com/Fastermantrying/defi_yield_farming_solana,https://api.github.com/repos/Fastermantrying/defi_yield_farming_solana,"A DeFi smart contract, which provides farming functions forYield Farming on  Solana.","# DeFi Yield Farming

This project focuses on developing a DeFi app which implements the concept of yield farming / liquidity mining based Dai token.

<p align=""center"">
  <img src=""https://user-images.githubusercontent.com/22610163/104134982-2b389a00-539e-11eb-9ac7-642dbe48ec4d.gif"">
</p>

Demo of the DApp with the screenshots can be found on [this wiki page](https://github.com/ahmetozlu/defi_yield_farming/wiki/Demo-of-the-DApp).

---
This repository presents practices about:
- Setup a blockchain.
- Develop Ethereum smart contracts.
- Write tests for the developed Ethereum smart contracts. 
- Develop a client-side website so people can actually use this application.
---

You can check the quick tutorial about ""what is the blockchain?"" in [here](https://ahmetozlu93.medium.com/blockchain-in-a-nutshell-8ad72743971e).

---
ToDos:
- Add OpenZeppelin Contracts to minimize risks.
- Develop a new feature to keep track of the rewards.
- Implement a method to withdraw the rewards automatically when certain conditions are met (it is triggered manually in the current version).
---

## Theory

### What is yield farming?

At its core, yield farming is a process that allows cryptocurrency holders to lock up their holdings, which in turn provides them with rewards.

**In brief:**

- Yield farming lets you lock up funds, providing rewards in the process.
- It involves lending out cryptos via DeFi protocols in order to earn fixed or variable interest.
- The rewards can be far greater than traditional investments, but higher rewards bring higher risks, especially in such a volatile market.

<p align=""center"">
  <img src=""https://user-images.githubusercontent.com/22610163/118402446-91963780-b672-11eb-9574-12e19fb789f9.png"" | width=720>
</p>

## Application Software Architecture

<p align=""center"">
  <img src=""https://user-images.githubusercontent.com/22610163/104122166-729a3880-5354-11eb-9088-5123e47990d2.png"" | width=720>
</p>

Here is the application software architecture work-flow:
- Users use an Internet browser to connect front-end application which is written in HTML, CSS and JavaScript. 
- Then, instead of accessing a back-end server, the website talks directly to the blockchain which is where all the codes and data for the application lives. 
- The DeFi application codes are contained in smart contracts written in solidity progrramming language which was a lot like JavaScript. These smart contracts are immutable which means the code can not change and all the data is stored in the public ledger which is also immutable. And, anytime new data is added to the blockchain, it will be permanent and publicly verifiable.

## Installation

### Setup

- **Node.js**

      sudo curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.37.2/install.sh | bash
      nvm install 12.18.3
      node -v

- **Truffle**

      sudo npm install -g truffle@5.1.39 --unsafe-perm=true

- **Ganache** installation guide can be found in [here](https://www.trufflesuite.com/ganache).

- **MetaMask** installation guide can be found in [here](https://metamask.io/).

### Commands

- Install necessarily Node.js packages

      npm install

- Deploy smart contracts to the Ethereum blockchain

      truffle migrate --reset
      
- Deploy and run the front-end application

      npm start run
      
- Run the scripts to issue tokens

      truffle exec scripts/issue-tokens.js

Demo of the DApp with the screenshots can be found on [this wiki page](https://github.com/ahmetozlu/defi_yield_farming/wiki/Demo-of-the-DApp).

## Citation
If you use this code for your publications, please cite it as:

    @ONLINE{
        author = ""Ahmet Özlü"",
        title  = ""DeFi Yield Farming App"",
        year   = ""2021"",
        url    = ""https://github.com/ahmetozlu/defi_yield_farming""
    }

## References
This project was built on top of **Dapp University** implementation, [here](https://github.com/dappuniversity/defi_tutorial) you can find more details.

## Author
Ahmet Özlü

## License
This system is available under the MIT license. See the LICENSE file for more info.

",3,3,1,0,farming,"[anchor, blockchain, dapp, decentralized-application, decentralized-finance, defi, farming, solana, solana-program, staking, staking-rewards, yield-farming, yield-farms]",00000
1210,bedrock-afk,patrickpissurno,N/A,https://github.com/patrickpissurno/bedrock-afk,https://api.github.com/repos/patrickpissurno/bedrock-afk,Minecraft Bedrock Tool to prevent you from going AFK (and getting kicked). Tested on 1.16.,"# <img src=""https://github.com/patrickpissurno/bedrock-afk/blob/main/icon.png?raw=true"" width=""32"" height=""32"" alt=""Bedrock AFK logo""> Bedrock AFK <img src=""https://github.com/patrickpissurno/bedrock-afk/blob/main/icon.png?raw=true"" width=""32"" height=""32"" alt=""Bedrock AFK logo"">
A Minecraft Bedrock Tool to prevent you from going AFK (and getting kicked)

**It's easy to use and 100% effective. And it's completely safe.**

## How to use

1. Download the [latest release](https://github.com/patrickpissurno/bedrock-afk/releases/latest/download/BedrockAFK.exe)
2. Launch Minecraft Windows 10 Edition (it's the one from Microsoft Store, not the Java one)
3. Open **BedrockAFK** and choose one of the available modes (eg. Walk Forward)
4. Switch back to the game and enjoy

Once you're done with it, just head back to **BedrockAFK** and close the app.

### Notice
It is required that the game window be active (focused) for this tool to work, which means **you can't minimize the game and do something else while AFK on Minecraft**. While this is unfortunate, AFAIK there's no workaround for that due to the way Minecraft Bedrock and all other UWP apps work.

<br>

## How does it work
Under the hood **BedrockAFK** calls the Universal Windows Platform (UWP) APIs so that it can simulate keyboard and mouse presses on Minecraft. Due to the way it's implemented, it's virtually indistinguishable from actual user input.

<br>

## Available modes
1. Walk Forward (every now and then simulates the 'W' key being pressed)
2. Water Bucket (intended to be used with a water bucket, simulating the right mouse button)
3. AFK Fishing (fast) (intended to be used with an AFK fishing contraption, such as [this one](https://www.youtube.com/watch?v=yvsvFrILXJY))
4. AFK Fishing (slow) (same as above, but useful when not using a lure-enchanted fishing rod)

<br>

## Requirements
- Minecraft Windows 10 Edition (a.k.a. the Microsoft Store one)
- .NET Framework 4.7.2 (you shouldn't need to download it if you have Windows 10 1803 or later)
- Windows 10

<br>

## License
See the full license [here](LICENSE).
```
    Bedrock AFK
    Copyright © 2021 Patrick Pissurno

    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program.  If not, see <https://www.gnu.org/licenses/>.
```
",3,3,1,0,farming,"[afk, bedrock, bot, farming, idle, minecraft, tool, windows-10]",00000
1211,zero-android-v3,ekylibre,N/A,N/A,https://api.github.com/repos/ekylibre/zero-android-v3,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C168:39DF:275FCBB:50BA562:65224040.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,farming,"[N, /, A]",00000
1212,ReplenishEnchantment,Drachir000,N/A,https://github.com/Drachir000/ReplenishEnchantment,https://api.github.com/repos/Drachir000/ReplenishEnchantment,"This plugin adds an enchantment for hoes that automatically replants seeds when harvesting, making farming more efficient","# Replenish Enchantment

This plugin adds an enchantment for hoes that automatically replants seeds when harvesting, making farming more efficient.

## Installation

* Download the latest version here: https://www.spigotmc.org/resources/replenish-enchantment.107292/
* Drag the .jar into your plugins/ folder
* Reboot your server
* Set up the config.yml and language.yml located in the /plugins/ReplenishEnchantment/ directory

## Usage

### Commands
* `/r-get BOOK` - gives you an Enchanted Book with the Replenish Enchantment on it
* `/r-give BOOK <Player>` - gives \<Player> an Enchanted Book with the Replenish Enchantment on it
* `/r-get HOE <Material> [<full-enchanted>]` - gives you a Hoe of the Material \<Material> with the Replenish Enchantment on it. When \<full-enchanted> is set and is true the hoe will also be enchanted with
    - Efficiency V
    - Fortune III
    - Mending
    - Unbreaking III
* `/r-give HOE <Player> <Material> [<full-enchanted>]` - gives \<Player> a Hoe of the Material \<Material> with the Replenish Enchantment on it. \<full-enchanted> works just like above
* `/r-get AXE <Material> [<full-enchanted>]` - gives you an Axe of the Material \<Material> with the Replenish Enchantment on it. \<full-enchanted> works just like above
* `/r-give AXE <Player> <Material> [<full-enchanted>]` - gives \<Player> an Axe of the Material \<Material> with the Replenish Enchantment on it. \<full-enchanted> works just like above

### Permissions
The Permissions can be viewed and edited in the config.yml located in the /plugins/ReplenishEnchantment/ directory

### Messages
The Messages can be viewed and edited in the language.yml located in the /plugins/ReplenishEnchantment/ directory

### Ingame
* Get the Enchanted Book via the commands above
* Apply the Enchantment onto a hoe, this can be done,
    - by combining a hoe or axe, with the Enchanted Book on an anvil (if enabled in the config.yml)
    - by dragging the Enchanted Book onto a hoe or axe in the inventory and clicking it in survival mode (if enabled in the config.yml)
* Or just get a hoe or axe with a command from above.
* Destroy some crops with this hoe or axe.

The enchantment only works in survival mode!

Currently, there is no way to get the enchantment in survival yet, but you can add your own ones.
Here are some examples:
* A Villager who trades a book and 32 emeralds for the enchanted book: 
    ````
    /summon minecraft:villager ~ ~ ~ {VillagerData:{type:plains,profession:farmer,level:2},Offers:{Recipes:[{buy:{id:book,Count:1},buyB:     {id:emerald,Count:32},sell:{id:enchanted_book,Count:1,tag:{StoredEnchantments:[{id:""replenishenchantment:replenish"",lvl:1}],display:{Lore:   ['[{""text"":""Replenish"",""italic"":false,""color"":""gray""}]']}}}}]}}
    ````
* You could also just add the Enchanted Book, or an enchanted tool to a Shopkeepers shop, if you have the [Shopkeepers](https://www.spigotmc.org/resources/shopkeepers.80756/) plugin installed.
* A Citizens NPC giving an Enchanted Book to the players every 15 minutes
  - first create a npc with ``/npc create <name>``
  - configure it just like you want it to be, for more information about Citizens look [here](https://wiki.citizensnpcs.co/Citizens_Wiki)
  - add the command like this:
    
    ``/npc cmd add r-get BOOK -o --cooldown 900``

## Compatibility
| Minecraft version | Bukkit | Spigot | Paper | Purpur |
|-------------------|--------|--------|-------|--------|
| **..1.16**        | no     | no     | no    | no     |
| **1.17**          | yes    | yes    | no    | no     |
| **1.18**          | yes    | yes    | yes   | yes    |
| **1.19**          | yes    | yes    | yes   | yes    |

## API

### Include the API:
Add this to your pom.xml:
````xml
<dependencies>
  <dependency>
    <groupId>de.drachir000.survival</groupId>
    <artifactId>replenishenchantment</artifactId>
    <version>1.0.0</version>
    <scope>provided</scope>
  </dependency>
</dependencies>
````

### Using the API
First you have to get an Instance of the REAPI class.
```java
REAPI api = REAPI.getAPI();
```
* #### Registering your own custom enchantments
This Plugin overwrites the vanilla anvil mechanics. If you want your own custom enchantments to have level costs without your users having to register them manually in the config.yml you can do it as following:
````java
// Get the api like above

Enchantment custom_enchantment = // ... your custom enchantment

int itemModifier = 2;
int bookModifier = 1;

api.registerEnchantment(custom_enchantment, itemModifier, bookModifier);
````
The multipliers times the final level of the enchantment gives the level cost of this enchantment while combining two items on the anvil. The book-modifier is used when the right item is an enchantment book, the item-modifier otherwise.
In this case the itemModifier is 2 and the bookModifier 1. You can modify this just as you wish or let your users configure it. When you want to change this values just call this method with the new values again.

* #### Getting the Enchanted Book or an Enchanted Hoe
If you want to give your players the Enchanted Book, or directly an enchanted hoe or axe, you can use the `buildBook()`, `buildHoe()` or `buildHoe()` method which returns an ItemStack depending on the arguments.
````java
// Get the api like above

Material hoeMaterial = // ... The Material of the Hoe (must be a hoe)
Material axeMaterial = // ... The Material of the Axe (must be a axe)
boolean fullEnchanted = // ... Whether the hoe or axe should have Efficiency V, Fortune III, Mending and Unbreaking III. If you only want some of theese you have to add them yourself.

ItemStack book = api.buildBook();
ItemStack hoe = api.buildHoe(hoeMaterial, fullEnchanted);
ItemStack axe = api.buildAxe(axeMaterial, fullEnchanted);

player.getInventory.addItem(book, hoe, axe);
````

* #### Other Item Utils
    - Applying the Enchantment:
    ````java
    // Get the api like above
    
    ItemStack item = // ...
    
    api.applyEnchantment(item); // For hoes and axes
    api.addStoredEnchant(item); // For enchantment storages like enchanted books
    
    // Do what ever you want with your enchanted Item
    ````
    - Checking for the Enchantment:
    ````java
    // Get the api like above
    
    ItemStack item = // ...
    
    if (isEnchanted(item)) { // For hoes and axes
    if (hasStoredEnchant(item)) { // For enchantment storages like enchanted books
    
        // Do what ever you want with your enchanted Item
    
    }
    ````
    - Get the Enchantment
    ````java
    // Get the api like above
    
    Enchantment replenish_enchantment = api.getEnchantment();
    
    // Do what ever you want with the Replenish Enchantment
    ````
    - Updating the lore
    ````java
    // Get the api like above
    
    ItemStack item = // ...
    
    api.updateLore(item);
    
    // Do what ever you want with your item
    ````

## Support
If you have any problems, found a bug, or have improvement ideas feel free to open an issue.
I will do my best to help you out.

## Contributing

Pull requests are welcome. For major changes, please open an issue first
to discuss what you would like to change.

## Planed
1. [x] Fix Book Lore
2. [x] Adding Spigot & Bukkit support
3. [x] Adding Purpur support
4. [x] Enabling the Updater
5. [x] Adding Cactus & Sugar Cane
6. [x] Adding Cocoa Beans
7. [x] Creating a public maven repo
8. [x] Reworking the commands
9. [x] Adding option, to disable the whole enchantment part and enable replenish for every hoe/axe
10. [ ] Adding an option for a Crafting-Recipe

## License

[MIT](LICENSE)
",2,2,1,0,farming,"[bukkit, bukkit-plugin, custom-enchantment, farming, java, minecraft, paper, spigot, spigot-plugin]",00000
1213,Apple_Foliar_Disease_Detection,raj-shr-git,N/A,N/A,https://api.github.com/repos/raj-shr-git/Apple_Foliar_Disease_Detection,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C14C:2319:6840BD:D7E58E:6522413E.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,farming,"[N, /, A]",00000
1214,BabySwap.Core,douglasletz,N/A,https://github.com/douglasletz/BabySwap.Core,https://api.github.com/repos/douglasletz/BabySwap.Core,AMM+NFT DEX on Binance Smart Chain,"# baby-swap-contract
## About
BabySwap is the best AMM+NFT DEX for newborn projects on Binance Smart Chain, providing a more friendly trading experience and better project support.

## As a Trader
You will find potential baby projects on BabySwap early and accompany them to grow up to 'rock stars' through trading, farming, bottling, etc. Also, you will get free BABY by trade mining.

## As a Project
You will find the best support on BabySwap, including growth fund, arbitrage support, entertaining activities, resource connection, friendly display, etc.

# Trade
Instantly swap tokens: no registration or account needed.

## USDT route
Unlike other AMM decentralized exchanges on Binance Smart Chain, our recommended swap route is USDT, not BNB or BUSD. Arbitrage between BabySwap and other DEXs or CEXs can cost way lower.

## Lower fees
BabySwap runs on Binance Smart Chain, a blockchain with much lower transaction costs than Ethereum or Bitcoin.

## Decentralized
Unlike centralized exchanges like Binance, BabySwap doesn't hold your funds when you trade: you have 100% ownership of your tokens, and you can trade directly from your wallet.

# Earn
Earn BABY and other tokens for free with high interest rates.

## Earn BABY via Trade Mining
Swap any tokens on BabySwap, and you will get BABY as rewards for every trade.

## Earn BABY via Yield Farms
Stake LP tokens to earn BABY. You get LP tokens through staking tokens in Liquidity Pools (LPs).

## Earn tokens via Snack Pools
Stake BABY to earn free tokens.

## Earn Trading Fees
Like other AMM decentralized exchanges, you can earn trading fees when you stake your tokens in Liquidity Pools (LPs).",2,2,1,0,farming,"[dex, farming, pooling, swap]",00000
1215,deocalc,shlavik,N/A,https://github.com/shlavik/deocalc,https://api.github.com/repos/shlavik/deocalc,Simple farming calculator,"# [Deocalc](https://shlavik.github.io/deocalc)

Simple farming calculator for [Demeter Farming](https://farming.deotoken.io) & [Polkaswap](https://polkaswap.io)

[![https://shlavik.github.io/deocalc](public/deocalc.png ""shlavik.github.io/deocalc"")](https://shlavik.github.io/deocalc)
",2,2,1,0,farming,"[calculator, cryptocurrency, farming, impermanent-loss, sora, tokens]",00000
1216,farmosnws,almostengr,N/A,N/A,https://api.github.com/repos/almostengr/farmosnws,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1EC:6459:2645664:4EA5DA1:65224055.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,farming,"[N, /, A]",00000
1217,BlockGrower,gduer,N/A,https://github.com/gduer/BlockGrower,https://api.github.com/repos/gduer/BlockGrower,ArcPy tool to prioritize farmland preservation efforts,"{'message': 'Not Found', 'documentation_url': 'https://docs.github.com/rest/repos/contents#get-repository-content'}",2,2,1,0,farming,"[arcgis, arcpy, farming, gis, preservation, python, urban-planning]",00000
1218,psm.api.v1,tech4germany,N/A,N/A,https://api.github.com/repos/tech4germany/psm.api.v1,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C160:5C75:273F282:50898CD:65224055.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,farming,"[N, /, A]",00000
1219,DBD-Bloodweb-Auto-Leveling,3Tamao3,N/A,https://github.com/3Tamao3/DBD-Bloodweb-Auto-Leveling,https://api.github.com/repos/3Tamao3/DBD-Bloodweb-Auto-Leveling,,"# DBD-auto-leveling(Bloodweb)

Info
-
You need to be atleast prestige 1 to unlock the automatic purchase bloodweb feature.

you need to change ur settings to this: https://prnt.sc/Dd5-AV0zLaUq.

The script works only on 1920x1080 res. cuz of the fixed coordinates

Not bannable!!!

Links
-
You need AutoHotKey to use the script: https://www.autohotkey.com

Guide : https://docs.google.com/spreadsheets/d/1YCZvtAdYjVOUmqebrxDLWG6xo8K3sw4bp2mD_FqTLlk/edit#gid=0

My other ""Projects"".
-
Here is my dbd-legion-afk-farming-script: https://github.com/3Tamao3/DBD-AFK-LEGION-FARMING
",2,2,1,1,farming,"[afk, afk-farming, bloodweb, bloodweb-script, dbd, dbd-auto-clicker, dbd-bloodweb, dbd-script, dead-by-daylight, dead-by-daylight-cheat, dead-by-daylight-script, farming, leveling-afk, script-auto-cliker, script-automation]",00000
1220,GreenTrust,pranav2305,N/A,https://github.com/pranav2305/GreenTrust,https://api.github.com/repos/pranav2305/GreenTrust,Blockchain revolution in Organic Farming,"# Green Trust
<p> A Blockchain Revolution in Organic Farming <p/>

![Landing](https://user-images.githubusercontent.com/76661350/219805436-17bd9c16-1c68-4c98-bfe6-d8c0e7afbb21.jpg)

Video Link: https://www.loom.com/share/51efc04ba3b64d0f9c5eba3d7bd0385b

## Technologies Used

- [Next Js](https://nextjs.org/)
- [Next-PWA](https://www.npmjs.com/package/next-pwa) 
- [Tailwind CSS](https://tailwindcss.com/)
- [Ink!](https://use.ink/)
- [IPFS](https://ipfs.tech/)
- [Polkadot-js](https://polkadot.js.org/docs/)
- [Polywrap](https://polywrap.io/)
- [Raspberry Pi (IoT)](https://www.raspberrypi.org/)


<br/>

## Problems 

One of the significant issues in organic farming is that certifications are required from multiple parties for
the products to be deemed ‘organic’. Currently, there are two government sanctioned mechanisms
for issuance of certification:

1. PGS Participatory Guarantee Systems (PGS): Farmers in a group inspect each other’s land
and vouch for its organic credentials. The inspection is carried out at the start of every sowing
season and farmers visit each other almost weekly to provide counsel. If a farmer is found
to be in violation, her produce is not sold through the group till she rectifies her mistake.

2. Third party certification: The farms is certified by authorized third party certifying agencies.
The database of India’s organic products is very poor and traceability, which is key for export growth,
remains weak, while third party certification as insisted by APEDA is very costly. In addition, major
markets for export do not accepts PGS certification, and there is no mechanism to link certifications
by third parties and PGS. 

## Solution

GreenTrust offers a solution for obtaining certification in organic farming by organizing credible and decentralized Participatory Guarantee Systems (PGSs). 

In order to secure certification, every harvest must be sponsored by certified farmers who contribute a stake as a form of assurance that organic farming methods have been properly implemented. 

The platform utilizes decentralized IoT sensor data to monitor and track various environmental conditions. Additionally, any individual may challenge the organic authenticity of a particular harvest on the platform. 

These challenges are then evaluated by a certified inspector, and if the challenge is deemed to be valid, the challenger will receive the stake put forward for the harvest.

Conversely, if the challenge is found to be invalid, the challenger will lose the stake they put forward to initiate the challenge.

### 

#### Farmer
-  A Farmer joins the GreenTrust Platform for using the decentralized PGS system of verification for his organic Crops.
-  The user experience of the farmers is simplified by providing a PWA.
-  This provides him a platform to gain credibility for his crops without paying high third party certification fees. (Incentive)
-  In doing so, a farmer pays a nominal subscription fee in terms of Superfluid's CFA (Continuous Flow Agreement) money streaming model. (Future work)
-  The farmer can request stakes to be placed on his farm by stakeholders by clicking on Request Stake button, which sends a Push Notification to everyone subscribed to the GreenTrust Channel. (Future work)
  
#### Verifier
- A Verifier is an authorized Organic Crop Verifier associated with our platform.
- The Verifier will get allocated with inspecting a Challenged Crop randomly through our system. (Future Work)
- Since the Crop challenges will be randomly allocated the bias in the verifier's judgement will be highly reduced.
- Verifier can either approve or reject a challenge after inspecting the challenged crop.
- Verifier always gets the same amount (his inspection fee) irrespective of his decision which reduces his bias further.(Incentive)
 
#### Stakeholder 
- A Stakeholder is a person who vouches for the credibility of an organic crop by placing a certain amount as stake.
- After a certain duration from the crop's harvest, the stake amount will be returned to all the stakeholders and a reward will be given using Superfluid's IDA (Instant Distribution Agreement) model automatically using Chainlink Upkeep. (Future work, Incentive)
- Stakeholder's Rewards are generated from the farmer's subscriptions.
- If a challenge on the crop is approved by a verifier, then the stakeholder loses his stake amount.
 
#### Consumer
- Consumer is the one who consumes the farmer's organic products.
- The organic products will have QR codes which can be scanned to access the Crop details like Crop Health data (Uploaded through an IoT device), Challenges on the crop, stakeholders, etc.
- The consumer can challenge an organic crop harvest's credibility by placing a challenge and staking a certain amount.
- If the verifier approves the challenge, the Stakeholders' stakes are transferred to the consumer as a compensation amount and his stake (the one he placed to challenge) is transferred to the Verifier as a fee. (Incentive)
- If the verifier rejects the challenge, the consumer loses his staked amount to the Verifier (as a fee).

## Advantages

- <b>Establishing traceability</b>: Placing information regarding the lifecycle of crops on a
blockchain will help improving trust in the self certification process and establishing
traceability at the point of sale.

- <b>Disintermediation of multiple stakeholders</b>: As highlighted, the process of third party
certification is often expensive, and in turn drives up cost of produce, making it harder for
farmers to sell. Disintermediation through peer to peer certification mechanisms, or
integration of third party certifiers into the PGS process would unlock large markets for
produce and reduce cost of production.

- <b> Programmable transfers </b>: Much like in supply chain, tracking of products using IoT devices
along their value chain can help increase efficiency in transfer of asset between
stakeholders, and alert stakeholders immediately of issues. 

## Links

- Figma - https://www.figma.com/file/QwfJiaDaLHx7Tav6Uwyiwf/GreenTrust?node-id=2%3A2&t=0jp5DXuTlfI99jiO-1

## Network Diagram 
![GreenTrustND](https://user-images.githubusercontent.com/72497928/225965883-40487729-39be-4a8b-9f3c-aca26d683919.png)

## Team Members
- Mehul Todi
- Abhiraj Mengade
- Shashank S M
- Pranav Agarwal
- Parth Mittal

## Setup 

1. `cd greentrust`
2. `npm i`
3. `npm run build`
4. `npm run start`
",2,2,1,1,farming,"[blockchain, farming, ink, ipfs, nextjs, polkadot-js, public-goods, reactjs, rust, tailwindcss, web3]",00000
1221,MukonoEgg_Bar,DawnMarc,N/A,https://github.com/DawnMarc/MukonoEgg_Bar,https://api.github.com/repos/DawnMarc/MukonoEgg_Bar,A poultry farm management system. Store egg collection data and Egg order data and invoices,"# Mukono Egg Bar Django Order Management System

## About this application

Created by **MarkDawn**[_`PyDawn`_]....some of the content in this project was provided by **_Inzamul Haque_**.
##### Framework: Django 1.10.1
##### Language : Python 3.6


## Features
- Add order
- Add egg collection data
- Export Order (pdf, csv)
- Edit / Delete Order
- Search Order
- Print Invoice
- Cool & Easy interface

## Applicability
Can be customised to be used in Restaurants, Cafe, etc


### Contact me 
Twitter: @xxendiwala <br>
Email: mxxendiwala@gmail.com, mcdawnking@gmail.com
",2,2,1,12,farming,"[css, django, django-application, django-project, django-templates, farming, js, poultry, python36, views]",00000
1222,plots-move,TaijiMonster,N/A,https://github.com/TaijiMonster/plots-move,https://api.github.com/repos/TaijiMonster/plots-move,"Automated yet simple and easy plots moving/transfer script with discord notification, you don't have to stare at your screen or keep checking for transfer status :)","# Taiji Monster Plot Transfer 2.0
## Plots Move Tool - Single Temporary Final Destination
Automate your plot transfer from temporary final folder to farming folder - support both local and remote. 
NO MORE troubles on stop/start plotting tool or keep changing config.yaml, NO MORE troubles on staring at farming drive space availability as you will be notified via Discord; set your plotting tool to infinite, whenever PRIMARY destination is full, it will transfer to BACKUP destination, you only need to edit remote.sh to add/change target destination.

***YOU MUST HAVE rclone, tmux/screen (optional) installed and a Discord Webhook***

## HOW TO USE?
***PLEASE DO A CLEAN INSTALLATION IF YOU ARE UPGRADING FROM V1.0 - SEE BELOW***
1) `git clone https://github.com/TaijiMonster/plots-move.git`
2) `cd plots-move`
3) `cp remote.sh.default remote.sh`
4) `cp discord.sh.default discord.sh`
5) Edit `nano remote.sh`, simple self explanatory notes in the file
6) Edit `nano discordALERT.sh`, put in your own Discord webhook
7) `sudo chmod +x *.sh`
8) Create a new tmux/screen session [OPTIONAL]
9) Start the transfer `./upload.sh`

## Clean Installation from V1.0
1) `rm -rf ~/plots-move`
2) `git clone https://github.com/TaijiMonster/plots-move.git`
3) `cd plots-move`
4) `cp remote.sh.default remote.sh`
5) `cp discord.sh.default discord.sh`
6) Edit `nano remote.sh`, simple self explanatory notes in the file
7) Edit `nano discordALERT.sh`, put in your own Discord webhook
8) `sudo chmod +x *.sh`
9) Create a new tmux/screen session [OPTIONAL]
10) Start the transfer `./upload.sh`

## Things to Note
1) You DO NOT need to setup/create a rclone configuration
2) Moving of transfer of plot will move to BACKUP destination when PRIMARY destination ran out of space or is less than required K size plot space you chosen in remote.sh
3) Only one plot will be transfer/move at anytime/per rclone session
4) Discord notification will not stop if you do not set a BACKUP destination folder
5) If PRIMARY destination folder ran out of space, Discord will send you 5 notifications, make sure you have a BACKUP destination entered in remote.sh
6) Please DO NOT enable your destination folder in config.yaml until it is fully filled with plots else it will affect your farming read time, YOU MIGHT BE LOSING REWARDS!

Let me know if there's any issue.
",2,2,2,0,farming,"[automated, chia, chives, discord, easy, farming, flax, flora, plots, silicoin, simple]",00000
1223,roche-engine,Nine-Byte-Warriors,Nine-Byte-Warriors,https://github.com/Nine-Byte-Warriors/roche-engine,https://api.github.com/repos/Nine-Byte-Warriors/roche-engine,The engine used to create a certain farming game where you plant crops... and then defeat them.,"# Roche Engine :sunny: :star:

[![MSBuild-Debug](https://github.com/Nine-Byte-Warriors/roche-engine/actions/workflows/msbuild-debug.yml/badge.svg)](https://github.com/Nine-Byte-Warriors/roche-engine/actions/workflows/msbuild-debug.yml)
&nbsp;
[![MSBuild-Release](https://github.com/Nine-Byte-Warriors/roche-engine/actions/workflows/msbuild-release.yml/badge.svg)](https://github.com/Nine-Byte-Warriors/roche-engine/actions/workflows/msbuild-release.yml)
&nbsp;
[![CodeQL](https://github.com/Nine-Byte-Warriors/roche-engine/actions/workflows/codeql.yml/badge.svg)](https://github.com/Nine-Byte-Warriors/roche-engine/actions/workflows/codeql.yml)

This is the repository for the Roche engine that was used to develop Midnight Harvest. Roche is being continually improved and modified to support the creation of more complex games. If you have any suggestions for features or improvements, feel free to reach out to a member of Nine Byte Warriors.

## Getting Started

Please refer to the [wiki](https://github.com/Nine-Byte-Warriors/roche-engine/wiki) and technical documentation on the various uses of the engine.

### Dependencies

To use the engine, the following prerequisites must be met.
* Windows 10+
* Visual Studio
* Git Version Control

The engine relies on the following libraries and APIs to function.
* DirectX 11
* XAudio2
* ImGui
* Assimp
* nlohmann

### Installing

To download a copy of the engine, select ""Download ZIP"" from the main code repository page, or create a fork of the project. More information on forking a GitHub respository can be found [here](https://www.youtube.com/watch?v=XTolZqmZq6s).

### Executing program

As the project settings have been modified to support the addition of the aforementioned libraries and APIs, there are no additional steps required to execute the application.

Running the application in ""Debug"" mode will enable the ImGui windows for development. Running the project in ""Release"" mode disables the ImGui windows improving performance and allowing the developer to interact with the game.

## Help

Refer to the [wiki](https://github.com/Nine-Byte-Warriors/roche-engine/wiki), and technical documentation for info regarding the uses of the engine.

If you are experiencing issues with the engine on your feature branch, or fork, be sure to update from the master branch to see if this resolve the issue. Assuming your branch is titled ""feat/mybranch,"" use the following commands to merge the changes from the master branch.

```
git checkout feat/mybranch
git merge origin/master-engine
git push origin feat/mybranch
```

With rebase, you can use the following commands.

```
git fetch
git rebase origin/master-engine
```

Please reach out to a member of Nine Byte Warriors if you have any additional queries, concerns, or issues regarding the engine.

## Authors

_Engine Developers_
| Name                      | Profile                                                   |
| ------------------------- | --------------------------------------------------------- |
| Kyle Robinson             | [kyle-robinson](https://github.com/kyle-robinson)         |
| Juliusz Kaczmarek         | [juliusz-kaczmarek](https://github.com/juliusz-kaczmarek) |
| Maurice Thompson-Hamilton | [BlackRece](https://github.com/BlackRece)                 |
| Charlie Morris            | [charliemorris56](https://github.com/charliemorris56)     |
| Alvin Aggrey              | [Alvin Aggrey](https://github.com/AlvinAggrey)            |

_Game Developers_
| Name                      | Profile                                                   |
| ------------------------- | --------------------------------------------------------- |
| Will Bennett              | [WillBennett2](https://github.com/WillBennett2)           |
| James Barber              | [Tuffy137](https://github.com/Tuffy137)                   |
| Said Mozamil Sadat        | [Said-Sadat](https://github.com/Said-Sadat)               |
| Glen Nelson               | [glennelson1](https://github.com/glennelson1)             |
| Eleftherios Karakyritsis  | [lefk36](https://github.com/lefk36)                       |

## Appendix

*- Click image to view on YouTube -*

<a href=""https://www.youtube.com/watch?v=HsIqgS8mekI"" target=""_blank"">
  <img src=""Roche Engine.png"" alt=""Roche Engine Thumbnail"" border=""10"" />
</a>

## License

This project is licensed under the MIT License - see the LICENSE.txt file for details.
",2,2,2,16,farming,"[2d, cpp, directx, farming, game-engine, imgui, nlohmann, xaudio2]",00000
1224,yearly-yields,troennes,N/A,N/A,https://api.github.com/repos/troennes/yearly-yields,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C194:4E78:6D9865:E2824E:65224060.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,farming,"[N, /, A]",00000
1225,NFTeGG-iClops-Meta,NFTeGG,NFTeGG,https://github.com/NFTeGG/NFTeGG-iClops-Meta,https://api.github.com/repos/NFTeGG/NFTeGG-iClops-Meta,This is a backup for the NFTeGG Series #1 Meta Data.,"# iClops-Meta
This is a backup for the NFTeGG Series #1 Meta Data.

The structure is : #ID, Name, $Fame, Power
",2,2,4,0,farming,"[defi, erc20, erc721, eth, ethereum, farm, farming, finance, metadata, nft, solidity, stake, token]",00000
1226,IET-Makeathon-Smart-Farm-Industrial-IOT,kunal768,N/A,https://github.com/kunal768/IET-Makeathon-Smart-Farm-Industrial-IOT,https://api.github.com/repos/kunal768/IET-Makeathon-Smart-Farm-Industrial-IOT,,"# IET-Makeathon
## Smart Farm Industrial IOT 
A web application that manages all your farm systems and updates and alerts you regularly.
The systems being :
* Automatic Guided Vehicle (Deployed in the farm)
* Sensors (Deployed in Farms , Cattle Sheds , etc.)
* Camera (can be installed anywhere , provides real-time feed in the web application)

### Special Feature 
Machine Learning Based Crop production system 
Determines production of crop based on Region , Crop Type and other factors<br>
Used [District-wise, season-wise crop production statistics](https://data.gov.in/catalog/district-wise-season-wise-crop-production-statistics) from [data.gov.in](https://data.gov.in/)

### Links
:open_mouth: get ready for some douche names<br>
* [The code that gets sensor values](https://github.com/kunal768/IET-Makeathon-Smart-Farm-Industrial-IOT/blob/master/IET-Makeathon/makeathon.ino)
* [Machine Learning NoteBook](https://github.com/kunal768/IET-Makeathon-Smart-Farm-Industrial-IOT/blob/master/IET-Makeathon/predict.ipynb)
* [Web App](https://github.com/kunal768/IET-Makeathon-Smart-Farm-Industrial-IOT/blob/master/IET-Makeathon/app.py)

made with :heart: in IET-Makeathon , VIT Chennai 
Our team secured the second position
## Glimpse
![The Team](https://github.com/kunal768/IET-Makeathon/blob/master/public/iet.JPG) 
",2,2,1,0,farming,"[arduino, farming, flask, industrial-automation, iot, machine-learning, prediction, python, robotics, sensors]",00000
1227,Bettor-Farming,supercoolx,N/A,https://github.com/supercoolx/Bettor-Farming,https://api.github.com/repos/supercoolx/Bettor-Farming,Bettor Farming,"# Bettors Farming 
## install
```shell
yarn
```
## compile
```shell
npx hardhat compile
```
## start test
```shell
npx hardhat test
```
",2,2,2,0,farming,"[farming, smart-contract, solidity, truffle]",00000
1228,bales,UnclassedPenguin,N/A,https://github.com/UnclassedPenguin/bales,https://api.github.com/repos/UnclassedPenguin/bales,For keeping track of bales being fed to animals. ,"# Bales
#### A program for keeping track of bales that you have fed

# Install

To install:

```shell
$ go install github.com/unclassedpenguin/bales@latest
```

Then, you need to create the config file at `~/.config/bales/config.yaml`

### Example ~/.config/bales/config.yaml

```yaml
# Database dir is the directory you want to store your databases in.
# It can be a git repo, but doesn't have to be...
# This directory must be created by the user
DatabaseDir: /home/username/git/databases

# RealDatabase is the legit database
# This will be created if it doesn't exist
RealDatabase: balesDatabase.db

# TestDatabase is a database you can use to test features
# This will be created if it doesn't exist
TestDatabase: balesTestDatabase.db

```

Don't forget to edit the DatabaseDir to where you want to store the databases. You just have to create the folder, the databases will be created if they don't exist.

For further documentation checkout [docs.unclassed.ca/bales](https://docs.unclassed.ca/bales)


## To-do:
  
  - If you try to list with month first then year, it doesn't work. Has to be year first then month. ? ie `bales -l -m 09 -year 2022` will give you all entries that match the month, however to properly get only the month and year you have to use `bales -l -year 2022 -m 09`
  - Add ""-most"" i.e. ""bales -most day"" to list the day that you fed the most bales. Do maybe day/month/year?
  - If you try to list for the current month, it gives the default ""There are no results for that query""
    Should probably change this so it says no entries for current month. Try -all or something.
  - Change checkdate functions so they return an error instead of bool. will need a bit of reformating. 
  - Add ""-to"". So you can do bales -l -from 2022-08-01 -to 2023-04-01
  - Add license?
  - Add ability to list based on ID number, singular or range (1 or 1-5)
    - Do I need this? I'm sure I wanted it for some reason...I'm not sure I want to put it in though. 
  - Add ""-between"" to list dates between one and another
  - Add an ability to get average. For square/round. Maybe by group as well. For daily weekly monthly?
    - Think this will be slightly more complicated than I originally thought...  
  - ~~On basic list (-l) it shows only current month. It however, still shows for all years. Need to make it show only current month of current year.~~

#### v0.3.6

  - ~~Possibly add Notes column?~~
    - I tried this. Would basically need me to restart the database. I don't think its worth it. It really messes with the formatting when listing...Just doesn't seem worth it at this point.
  - ~~Change -dateoton and -datentoo to -asc and -dec~~
  - ~~Add ""-today"" to list only for the current day~~
  - ~~When you mess up the -day flag, it still says something about month~~

#### v0.3.4

  - ~~Add ""checkMonth"" and ""checkYear"" Functions that do a regex and make sure it is 2 digits and 4 digits. Use when for -month and -year to confirm they are valid. Month could also be checked to make sure it is between 1 and 12.~~
    - Added ""CheckYear"", ""CheckMonth"", and ""CheckDay"" to functions.
  - ~~Remove sql string by default. Add flag to show it. I don't think most people would care to see what the query is.~~
  - ~~Make default list only list the current month. add -all flag to show entire database~~
    - Do I actually want this? Hmm...
    - I tried to implement this, I didn't like it. Instead I added a flag (-m) that lists only current month. It conflicts with -month, so you can't use them together. 
  - ~~Add Ability to delete groups. Maybe add a comfirmation ""Are you sure you want to delete group cows? (y or n)""~~  

#### v.0.3.3  

  - ~~Add ability for ""or"" to group. So command line would be ""-g ""cows or sheep"""", but it would split it to sql: ""animalgroup='cows' OR animalgroup='sheep'""~~
  - ~~Add sort by days (similar to years and months) where it can be a specific day or a range...~~
  - ~~Restructure code so its not all stuck in main~~
    - I split off all of the functions at least. I'm not sure if any of the main function can be split off? 
  - ~~Add datefrom function. Maybe -from. So you can list only from a specific date.~~
  - ~~Add ability to sort by date oldest/newest newest/oldest~~
  - ~~Add check for config file, if not, prompt user to make the config file at \~/.config/bales~~
  - ~~I'd like to add a config file and store the database somewhere separate(referenced by the config file), and then put it on github maybe? Although then the database would be specific to a computer and you would have to worry about backing it up/sharing it on your own...Something to think about.~~
    - I think this would work. Make a separate folder for the database(also a git folder), and make that the folder that bales -push and -pull works on. So it still updates the database, can still sync the database between computers, and not share the private data...
  - ~~Add -date to list function, so you can see on a specific day what you used...After the work I did to rewrite the list function, it should be fairly easy to add more features like this.~~
  - ~~Rewrite the list function. Make it so that you can add things together. If you say group, it tags onto the select * from bales statement ""where animalgroup="" and then if you ad more it says ""and so and so""...It should work.~~
  - ~~Add check to date if entered to make sure it is actually a date and not some random string...Regex?~~
  - ~~Add ability to send custom sql command to list.~~
  - ~~Add flag to pull/push from git to update database~~
    - Finally got this figured out...
  - ~~Add ability to get entries from date range. Maybe separate by year/month. Individual or range. Have to be year and month....~~
    - This is implemented somewhat, although probably done poorly. Not sure how to organize it...it works, but I'm sure there are lots of weird errors if you don't enter it how it expects. 
  - ~~Look into flag to see if you can add a description for -h. Add more info to help~~
  - ~~Add ability to list only a specific group. i.e. bales -l -g bulls would query everything for just bulls~~
  - ~~Add ability to get a total count for all | square/round | specific group.~~
  - ~~Add ability to get total count for square or round bales~~
",2,2,1,0,farming,"[farming, go, golang]",00000
1229,AgritechApp,LamtouehReda,N/A,https://github.com/LamtouehReda/AgritechApp,https://api.github.com/repos/LamtouehReda/AgritechApp,"This application helps farmers to increase their production by providing them information about their crops and giving them the ability to do many actions like opening the water pump using IoT, the app was created using React Native.","{'message': 'Not Found', 'documentation_url': 'https://docs.github.com/rest/repos/contents#get-repository-content'}",2,2,1,0,farming,"[farming, iot, react]",00000
1230,Farming-Simulator,UnsignedArduino,N/A,https://github.com/UnsignedArduino/Farming-Simulator,https://api.github.com/repos/UnsignedArduino/Farming-Simulator,Work the life of a farmer in MakeCode Arcade!," 


> Open this page at [https://unsignedarduino.github.io/farming-simulator/](https://unsignedarduino.github.io/farming-simulator/)

## Use as Extension

This repository can be added as an **extension** in MakeCode.

* open [https://arcade.makecode.com/](https://arcade.makecode.com/)
* click on **New Project**
* click on **Extensions** under the gearwheel menu
* search for **https://github.com/unsignedarduino/farming-simulator** and import

## Edit this project ![Build status badge](https://github.com/unsignedarduino/farming-simulator/workflows/MakeCode/badge.svg)

To edit this repository in MakeCode.

* open [https://arcade.makecode.com/](https://arcade.makecode.com/)
* click on **Import** then click on **Import URL**
* paste **https://github.com/unsignedarduino/farming-simulator** and click import

## Blocks preview

This image shows the blocks code from the last commit in master.
This image may take a few minutes to refresh.

![A rendered view of the blocks](https://github.com/unsignedarduino/farming-simulator/raw/master/.github/makecode/blocks.png)

#### Metadata (used for search, rendering)

* for PXT/arcade
<script src=""https://makecode.com/gh-pages-embed.js""></script><script>makeCodeRender(""{{ site.makecode.home_url }}"", ""{{ site.github.owner_name }}/{{ site.github.repository_name }}"");</script>
",2,2,1,0,farming,"[arcade, farming, farming-simulator, game, game-jam, makecode, makecode-arcade, makecode-arcade-game, simulation, simulator, submission]",00000
1231,wealthoftractor,qubist,N/A,https://github.com/qubist/wealthoftractor,https://api.github.com/repos/qubist/wealthoftractor,Wealth of Tractor Society website,"{'message': 'Not Found', 'documentation_url': 'https://docs.github.com/rest/repos/contents#get-repository-content'}",2,2,2,0,farming,"[coop, farming, tractor, website]",00000
1232,Phinesture,PhinesTech,N/A,N/A,https://api.github.com/repos/PhinesTech/Phinesture,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1EA:3BF5:71F042:EAF9FC:65224068.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,farming,"[N, /, A]",00000
1233,e-agriculture,pratap1298,N/A,N/A,https://api.github.com/repos/pratap1298/e-agriculture,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C160:6EE6:6C4B54:DFE8C8:65224069.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,farming,"[N, /, A]",00000
1234,CAPSTONE-PHS-Machine,Senpai-Coders,Senpai-Coders,https://github.com/Senpai-Coders/CAPSTONE-PHS-Machine,https://api.github.com/repos/Senpai-Coders/CAPSTONE-PHS-Machine,"PHSM, or Pig Heat Stress Machine, is a capstone project develop to help piggery owners to detect and automatically resolve any possible heat stress affecting the pigs. PHS machine gathers all information & details that is being monitored by the web-based system of PHSM.","{'message': 'Not Found', 'documentation_url': 'https://docs.github.com/rest/repos/contents#get-repository-content'}",2,2,0,0,farming,"[farming, pig, pig-heatstress, thermal-imaging]",00000
1235,Voxel-Game,HimejiDev,N/A,https://github.com/HimejiDev/Voxel-Game,https://api.github.com/repos/HimejiDev/Voxel-Game,Immerse Yourself in a Mesmerizing Voxel World of Exploration and Adventure! 🌍,"# Voxel Game Project (Name WIP) 🎮

## Description 🌟
 Welcome to <!-- our --> my voxel sandbox game project. This game is designed to be a simple and calming, yet captivating experience, created with the Unity game engine. In this voxel world, <!-- we --> I aim to offer players the joy of peaceful farming and exploring 🌾🍂, along with the excitement of intense battles ⚔️. The visual style combines simplicity with a mesmerizing charm.

**Key Features** 🎉:
- Voxel-based world 🌍: Explore a vast, procedurally generated world filled with stunning voxel-based landscapes and structures.
- Farming and foraging 🚜: Cultivate your own land, gather resources, and immerse yourself in a relaxing farming and foraging experience.
- Engaging combat 💥: Gear up for thrilling battles against a variety of enemies, with interesting combat mechanics.
- Endless exploration 🌄: Embark on epic journeys, uncover hidden treasures, and traverse diverse terrains as you venture further into the infinite world.

## Download and Play 🚀
Ready to dive into our voxel adventure? <!-- You can download and play the latest version of our game right now on [itch.io](https://h1mejidev.itch.io/voxel-game) or here on [GitHub](https://github.com/HimejiDev/Voxel-Game/releases/latest) --> Unfortunately you will have to wait a little bit 😢, since [Alpha Version 0.1 (v0.1A)](https://github.com/HimejiDev/Voxel-Game/#alpha-version-01-v01a) is still being worked on.

**Note**: We are continuously updating the game, so be sure to check back, or join the [Discord](https://discord.gg/puDt6sjtSq) for the latest releases and improvements!

## Development Roadmap 🗺️
### Alpha Version 0.1 (v0.1A)
- [ ] **Basic Movement** 🏃‍♂️: Implement character movement controls.
- [ ] **Environment Interaction** 🌳: Allow players to interact with the environment.
- [ ] **Inventory System** 🎒: Create a basic inventory system.
- [ ] **Day-Night Cycle** 🌞🌚: Implement a dynamic day-night cycle.
- [ ] **Character Creation** 👤: Enable players to customize their in-game character.
- [ ] **Basic Language System** 🌍: Implement language changing system, for les hassle along the way.
- [ ] **Resource pack? And Mod Support** 💪: Support for mods and resource/texture packs, made by the *community*!
- [ ] **Multiplayer?** 🤼: Multiplayer, maybe?
- [ ] **Menu GUI's** 🖥: *Placeholder* GUI's for the game.

### Alpha Version 0.2 (v0.2A)
- [ ] ...

## Join <!-- Us --> Me 🤝
Interested in contributing to our project or staying updated on its development? Give feedback and ideas on [GitHub](https://github.com/HimejiDev/Voxel-Game/issues) or [Discord](https://discord.gg/puDt6sjtSq), and contribute on [GitHub](https://github.com/HimejiDev/Voxel-Game/pulls).

Stay tuned for more updates as <!-- we --> I work towards creating an immersive voxel adventure! 🌟🎮

---

Made by [Himeji](https://himeji.dev/) using the [Unity](https://unity.com/) Game Engine and [Blockbench](https://blockbench.net/)",2,2,1,0,farming,"[exploration, farming, procedural, sandbox, voxel]",00000
1236,contracts,Black-INK-finance,Black-INK-finance,https://github.com/Black-INK-finance/contracts,https://api.github.com/repos/Black-INK-finance/contracts,Everscale smart contracts for boosting FlatQube farming API. Fork of the farming contracts.,"# Black INK protocol

The booster functionality is built above the FlatQube farming contracts.

Contracts are located at `contracts/booster/`.
",2,2,1,0,farming,"[apy, everscale, farming, locklift, smart-contracts]",00000
1237,tshansik-app,OpenHackFarm,N/A,N/A,https://api.github.com/repos/OpenHackFarm/tshansik-app,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C15D:29CE:32D4178:67BABB6:6522405F.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,farming,"[N, /, A]",00000
1238,Hyper-realistic-farm-simulator,seanpm2001,N/A,https://github.com/seanpm2001/Hyper-realistic-farm-simulator,https://api.github.com/repos/seanpm2001/Hyper-realistic-farm-simulator,"The most realistic, but least fun farming game (everything is set to real life, so you can wait a year in real time for wheat to grow and harvest, instead of 2 minutes more or less)","
***

# <projectName>

![{Project icon} This image failed to load. It may be due to the file not being reached, or a general error. Reload the page to fix a possible general error.](Image.svg)

# By:

![{Developer name} This image failed to load. It may be due to the file not being reached, or a general error. Reload the page to fix a possible general error.](Image2.svg)

### Top

# `README.md`

***

## Read this article in a different language

[ar عربى](README_AR.md) [zh-t 中國傳統的）](README_ZH-T.md)[**en-us**](README.md) [fr français](README_FR.md) [de Deutsch](README_DE.md) [EO Esperanto](README_EO.md)  [ja 日本語](README_JA.md) [ko-south 韓國語](README_KO_SOUTH.md) [pl polski](README_PL.md) [ru русский](README_RU.md) [es en español](README_ES.md)

Translations in languages other than English are machine translated and are not yet accurate. No errors have been fixed yet as of March 21st 2021. Please report translation errors [here](https://github.com/seanpm2001/<repoName>/issues/). Make sure to backup your correction with sources and guide me, as I don't know languages other than English well (I plan on getting a translator eventually) please cite [wiktionary](https://en.wiktionary.org) and other sources in your report. Failing to do so will result in a rejection of the correction being published.

***

# Index

[00.0 - Top](#Top)

> [00.1 - Title](#<projectName>)

> [00.2 - Read this article in a different language](#Read-this-article-in-a-different-language)

> [00.3 - Index](#Index)

[01.0 - Description](#RepositoryName)

[02.0 - About](#About)

[03.0 - Wiki](#Wiki)

[04.0 - Version history](#Version-history)

[05.0 - Software status](#Software-status)

[06.0 - Sponsor info](#Sponsor-info)

[07.0 - Contributers](#Contributers)

[08.0 - Issues](#Issues)

> [08.1 - Current issues](#Current-issues)

> [08.2 - Past issues](#Past-issues)

> [08.3 - Past pull requests](#Past-pull-requests)

> [08.4 - Active pull requests](#Active-pull-requests)

[09.0 - Resources](#Resources)

[10.0 - Contributing](#Contributing)

[11.0 - About README](#About-README)

[12.0 - README Version history](#README-version-history)

[13.0 - Footer](#You-have-reached-the-end-of-the-README-file)

> [13.1 - End of file](#EOF)

***

# <repoName>
<repo_description>

***

## About

See above. <extendedRepoDescription>

***

## Wiki

[Click/tap here to view this projects Wiki](https://github.com/seanpm2001/<repoName>/wiki)

If the project has been forked, the Wiki was likely removed. Luckily, I include an embedded version. You can view it [here](/External/ProjectWiki/).

***

## Sponsor info

![SponsorButton.png](SponsorButton.png)

You can sponsor this project if you like, but please specify what you want to donate to. [See the funds you can donate to here](https://github.com/seanpm2001/Sponsor-info/tree/main/For-sponsors)

You can view other sponsor info [here](https://github.com/seanpm2001/Sponsor-info/)

Try it out! The sponsor button is right up next to the watch/unwatch button.

***

## Version history

**Version history currently unavailable**

**No other versions listed**

***

## Software status

All of my works are free some restrictions. DRM (**D**igital **R**estrictions **M**anagement) is not present in any of my works.

![DRM-free_label.en.svg](DRM-free_label.en.svg)

This sticker is supported by the Free Software Foundation. I never intend to include DRM in my works.

I am ussing the abbreviation ""Digital Restrictions Management"" instead of the more known ""Digital Rights Management"" as the common way of addressing it is false, there are no rights with DRM. The spelling ""Digital Restrictions Management"" is more accurate, and is supported by [Richard M. Stallman (RMS)](https://en.wikipedia.org/wiki/Richard_Stallman) and the [Free Software Foundation (FSF)](https://en.wikipedia.org/wiki/Free_Software_Foundation)

This section is used to raise awareness for the problems with DRM, and also to protest it. DRM is defective by design and is a major threat to all computer users and software freedom.

Image credit: [defectivebydesign.org/drm-free/...](https://www.defectivebydesign.org/drm-free/how-to-use-label)

***

## Contributers

Currently, I am the only contributer. Contributing is allowed, as long as you follow the rules of the [CONTRIBUTING.md](CONTRIBUTING.md) file.

> * 1. [seanpm2001](https://github.com/seanpm2001/) - x commits (As of DoW, Month, DoM, Yr at ##:## a/pm)

> * 2. No other contributers.

***

## Issues

### Current issues

* None at the moment

* No other current issues

If the repository has been forked, issues likely have been removed. Luckily I keep an archive of certain images [here](/.github/Issues/)

[Read the privacy policy on issue archival here](/.github/Issues/README.md)

**TL;DR**

I archive my own issues. Your issue won't be archived unless you request it to be archived.

### Past issues

* None at the moment

* No other past issues

If the repository has been forked, issues likely have been removed. Luckily I keep an archive of certain images [here](/.github/Issues/)

[Read the privacy policy on issue archival here](/.github/Issues/README.md)

**TL;DR**

I archive my own issues. Your issue won't be archived unless you request it to be archived.

### Past pull requests

* None at the moment

* No other past pull requests

If the repository has been forked, issues likely have been removed. Luckily I keep an archive of certain images [here](/.github/Issues/)

[Read the privacy policy on issue archival here](/.github/Issues/README.md)

**TL;DR**

I archive my own issues. Your issue won't be archived unless you request it to be archived.

### Active pull requests

* None at the moment

* No other active pull requests

If the repository has been forked, issues likely have been removed. Luckily I keep an archive of certain images [here](/.github/Issues/)

[Read the privacy policy on issue archival here](/.github/Issues/README.md)

**TL;DR**

I archive my own issues. Your issue won't be archived unless you request it to be archived.

***

## Resources

Here are some other resources for this project:

[Project language file](PROJECT_LANG.<fileExtensionForProgrammingLanguage>)

[Join the discussion on GitHub](https://github.com/seanpm2001/<repoName>/discussions)

No other resources at the moment.

***

## Contributing

Contributing is allowed for this project, as long as you follow the rules of the `CONTRIBUTING.md` file.

[Click/tap here to view the contributing rules for this project](CONTRIBUTING.md)

***

## About README

File type: `Markdown (*.md)`

File version: `0.1 (Sunday, March 21st 2021 at 7:50 pm)`

Line count: `0,296`

***

## README version history

Version 0.1 (Sunday, March 21st 2021 at 7:50 pm)

> Changes:

> * Started the file

> * Added the title section

> * Added the index

> * Added the about section

> * Added the Wiki section

> * Added the version history section

> * Added the issues section.

> * Added the past issues section

> * Added the past pull requests section

> * Added the active pull requests section

> * Added the contributors section

> * Added the contributing section

> * Added the about README section

> * Added the README version history section

> * Added the resources section

> * Added a software status section, with a DRM free sticker and message

> * Added the sponsor info section

> * No other changes in version 0.1

Version 1 (Coming soon)

> Changes:

> * Coming soon

> * No other changes in version 1

Version 2 (Coming soon)

> Changes:

> * Coming soon

> * No other changes in version 2

***

### You have reached the end of the README file

[Back to top](#Top) [Exit](https://github.com)

### EOF

***
",2,2,3,0,farming,"[concept, farm-game, farming, gpl3, gplv3, md, open-source-game, python, python-game, realistic, simulator, txt]",00000
1239,SeansLifeArchive_MinecraftPE_Backup_Worlds_Farmtopia,seanpm2001,N/A,https://github.com/seanpm2001/SeansLifeArchive_MinecraftPE_Backup_Worlds_Farmtopia,https://api.github.com/repos/seanpm2001/SeansLifeArchive_MinecraftPE_Backup_Worlds_Farmtopia, The module for my life story project that contains my world backup data for my MinecraftPE world: farmtopia,"{'message': 'Not Found', 'documentation_url': 'https://docs.github.com/rest/repos/contents#get-repository-content'}",2,2,3,0,farming,"[android, bedrock, cpp, external, farm, farming, gpl3, gplv3, md, minecraft, minecraft-map, minecraftpe, seanpm2001-life-archive, txt]",00000
1240,AgriFarm,tuhinaww,N/A,N/A,https://api.github.com/repos/tuhinaww/AgriFarm,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1EF:7B5B:70FAD7:E8F194:65224071.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,farming,"[N, /, A]",00000
1241,green-wall,reimaginefarm,reimaginefarm,https://github.com/reimaginefarm/green-wall,https://api.github.com/repos/reimaginefarm/green-wall,The code for running the vertical soilless farming solution designed as a part of Team NYUAD for Solar Decathlon Middle East Competition (In development),"# reimagine.farm - The Green Wall 

Green Wall is a modular approach to soilless vertical farming. It takes advantage of fogponics (usage of fog in farming) and the Internet of Things to increase efficiency & crop yield while limiting waste output to solve traditional resource-intensive farming.

## Inspiration
Food security is an imperative global issue. Under threat by an increasingly unpredictable climate, growing populations, rising prices, and inadequate transportation infrastructure, we have yet to figure out how to keep everyone fed. Inspired and challenged by the ideals of the Solar Decathlon Middle East competition, the Green Wall aims to make food more local and personal by introducing food production into the built environment, complementing the urban desire for efficiency and individuality. Our motivation is to challenge the notion that all food production must occur as a detached and remote process to consumers living in cities.

## How it works?
The system takes advantage of fogponics and the Internet of Things to increase growth efficiency and crop yield while decreasing energy usage and waste output. It's capable of continuously & autonomously monitoring the plants’ growth cycles for delivering nutrients precisely and providing an optimal amount of light to save energy. The modular design of the vertical farming units allow the system to be used both on an individual basis or scaled up to a commercial level. The system can grow 1.5 kg of produce in a week using 2 liters of water, about 50 times more water efficient than conventional farming. Fog is used as the medium for delivering nutrients and water to plants. The system is flexible so that different plant combinations can be easily grown by adjusting the distance between the growing boxes. They can be stacked to increase growth capacity and each column communicates with each other for sharing and optimizing the resources available.

## How it is different?
Other vertical farming solutions are designed as inflexible megastructures, whether they come in the form of fixed racks of plants or remodelled shipping containers. On the contrary, the Green Wall allows vertical farming to occur at home or industrial campus, emphasizing the ability to resize and reshape, as well as allowing for the option to share data across communities local or international. Moreover, the Green Wall was developed to be equipped with replaceable and widely known components, eliminating any reliance on proprietary hardware or software. This allows for the system to be rebuilt with a completely different set of suppliers without any compromise in functionalities, championing adaptability. In short, the Green Wall is clean farming made modular and decentralized.

![Features at a glance](images/banner-annotated.jpg)
",2,2,2,0,farming,"[farming, iot]",00000
1242,GardenGnome,whbrown,N/A,https://github.com/whbrown/GardenGnome,https://api.github.com/repos/whbrown/GardenGnome,"Garden Gnome acts as your personal garden guide, providing care instructions and scheduling along with plant recommendations.","# GardenGnome
Garden Gnome acts as your personal garden guide, providing care instructions and scheduling along with plant recommendations.


![Use Garden Gnome to make gardening more fun and effective.](./client/public/assets/gardengnomebanner.png)
",2,2,2,16,farming,"[farmers-markets, farming, garden, gardening, nature, plants]",00000
1243,api,sheaft-app,N/A,N/A,https://api.github.com/repos/sheaft-app/api,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C17E:4E78:6D9AAF:E2870D:65224063.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,farming,"[N, /, A]",00000
1244,field_robot,fieldrobot,fieldrobot,https://github.com/fieldrobot/field_robot,https://api.github.com/repos/fieldrobot/field_robot,,"Welcome to the Field Robot project!

Please refer to the project documentation at [https://github.com/fieldrobot/field_robot/wiki](https://github.com/fieldrobot/field_robot/wiki) for all information. Guides etc. are available in German and, partly, in English.

All contributors should consider [this guide](https://github.com/fieldrobot/field_robot/wiki/Nutzung-des-Repositories-(Deutsch)) on how to properly use the repository.",2,2,3,1,farming,"[farming, robotics]",00000
1245,typed-sdk,manifoldx,manifoldx,https://github.com/manifoldx/typed-sdk,https://api.github.com/repos/manifoldx/typed-sdk,Software Engineering Kit,"---
title: manifold finance sdk
description: a well typed sdk for web3
version: 0.1.1
---

# `manifold-sdk` 

![nodejs](https://github.com/manifoldfinance/typed-sdk/workflows/nodejs/badge.svg)

> a human web3 interface 

---

**SDK Overview:**

- Keep your private keys in your client, **safe** and sound
- Import and export **JSON wallets**
- Import and export BIP 39 **mnemonic phrases** (12-word backup phrases) and HD wallets (English, Italian, Japanese, Korean, Simplified Chinese, Traditional Chinese)
- Connect to Ethereum nodes over `JSON-RPC` (both public and private).
- **Aliases names** are first-class citizens; it can be used to log in any Manifold Finance services
- **Complete** functionality for all your Manifold Finance needs
- Large collection of **test cases** which are maintained and added to
- Fully **TypeScript**-ready, with definition files and full TypeScript source

---

## usage

`make build` <br>

`npm install --save manifold-sdk`

## importing

**JavaScript (ES3)**

    var manifold = require('manifold-sdk');

**JavaScript (ES5 or ES6)**

    const manifold = require('manifold-sdk');

**JavaScript (ES6) / TypeScript**

    import { manifold } from 'manifold-sdk';

---

### example

```javascript
const Web3 = require(""web3"");
const BN = Web3.utils.BN;
const ManifoldProvider = require(""@manifold/provider"");

class GasEVO {
  constructor(options) {
    this.GasEVO = null;

    this.pollingInterval = null;
    this.account = null;
    this.unlocked = false;
    this.balanceWei = 0;
    this.balance = 0;
    this.address = ""REPLACE_WITH_CONTRACT_ADDRESS"";
    this.genesisBlock = 0;
    this.loading = false;
    this.options = {
      readonlyRpcURL: ""https://mainnet.infura.io"",
      autoInit: true,
      getPastEvents: false,
      watchFutureEvents: false,
      connectionRetries: 3,
    };
    Object.assign(this.options, options);
    if (this.options.autoInit) this.initWeb3();
  }

  /*
   * Connect
   */

  initWeb3() {
    return new Promise((resolve, reject) => {
      let web3Provider = false;

      // check for metamask
      if (global.web3) {
        web3Provider = global.web3.currentProvider;
        // attempt to try again if no web3Provider
      } else if (this.options.connectionRetries > 0) {
        this.options.connectionRetries -= 1;
        setTimeout(() => {
          this.initWeb3()
            .then(resolve)
            .catch((error) => {
              reject(new Error(error));
            });
        }, 1000);
        // revert to a read only version using infura endpoint
      } else {
        this.readOnly = true;
        web3Provider = ZeroClientProvider({
          getAccounts: function () {},
          rpcUrl: this.options.readonlyRpcURL,
        });
      }

      if (web3Provider) {
        global.web3 = new Web3(web3Provider);
        this.startChecking();

        if (this.options.getPastEvents) this.getPastEvents();
        if (this.options.watchFutureEvents) this.watchFutureEvents();
      }
    });
  }

  /*
   * Check every second for switching network or switching wallet
   */

  startChecking() {
    if (this.pollingInterval) clearInterval(this.pollingInterval);
    this.getGenesisBlock()
      .then(() => {
        this.pollingInterval = setInterval(this.check.bind(this), 1000);
      })
      .catch((err) => {
        throw new Error(err);
      });
  }

  check() {
    this.checkNetwork()
      .then(this.checkAccount.bind(this))
      .catch((error) => {
        console.error(error);
        throw new Error(error);
      });
  }

  checkNetwork() {
    return global.web3.eth.net.getId((err, netId) => {
      if (err) console.error(err);
      if (!err && this.network !== netId) {
        this.network = netId;
        return this.deployContract();
      }
    });
  }

  checkAccount() {
    return global.web3.eth.getAccounts((error, accounts) => {
      if (error) throw new Error(error);
      if (accounts.length && this.account !== accounts[0]) {
        this.unlocked = true;
        this.account = accounts[0];
      } else if (!accounts.length) {
        this.unlocked = false;
        this.account = null;
      }
    });
  }

  /*
   *
   * Constant Functions
   *
   */

  DAY_IN_SECONDS() {
    return this.GasEVO.methods
      .DAY_IN_SECONDS()
      .call()
      .then((resp) => {
        return resp;
      })
      .catch((err) => {
        console.error(err);
      });
  }
  NUM_OF_RATES() {
    return this.GasEVO.methods
      .NUM_OF_RATES()
      .call()
      .then((resp) => {
        return resp;
      })
      .catch((err) => {
        console.error(err);
      });
  }
  allowance(owner, spender) {
    return this.GasEVO.methods
      .allowance(owner, spender)
      .call()
      .then((resp) => {
        return resp;
      })
      .catch((err) => {
        console.error(err);
      });
  }
  balanceOf(account) {
    return this.GasEVO.methods
      .balanceOf(account)
      .call()
      .then((resp) => {
        return resp;
      })
      .catch((err) => {
        console.error(err);
      });
  }
  decimals() {
    return this.GasEVO.methods
      .decimals()
      .call()
      .then((resp) => {
        return resp;
      })
      .catch((err) => {
        console.error(err);
      });
  }
  name() {
    return this.GasEVO.methods
      .name()
      .call()
      .then((resp) => {
        return resp;
      })
      .catch((err) => {
        console.error(err);
      });
  }
  symbol() {
    return this.GasEVO.methods
      .symbol()
      .call()
      .then((resp) => {
        return resp;
      })
      .catch((err) => {
        console.error(err);
      });
  }
  totalSupply() {
    return this.GasEVO.methods
      .totalSupply()
      .call()
      .then((resp) => {
        return resp;
      })
      .catch((err) => {
        console.error(err);
      });
  }
  getEthDeposit() {
    return this.GasEVO.methods
      .getEthDeposit()
      .call()
      .then((resp) => {
        return resp;
      })
      .catch((err) => {
        console.error(err);
      });
  }
  getTotalRate(day) {
    return this.GasEVO.methods
      .getTotalRate(new BN(day, 10))
      .call()
      .then((resp) => {
        return resp;
      })
      .catch((err) => {
        console.error(err);
      });
  }
  getHolderRate(holder, day) {
    return this.GasEVO.methods
      .getHolderRate(holder, new BN(day, 10))
      .call()
      .then((resp) => {
        return resp;
      })
      .catch((err) => {
        console.error(err);
      });
  }
  convEvo2Eth(amountEvo) {
    return this.GasEVO.methods
      .convEvo2Eth(new BN(amountEvo, 10))
      .call()
      .then((resp) => {
        return resp;
      })
      .catch((err) => {
        console.error(err);
      });
  }
  convEth2Evo(amountEth) {
    return this.GasEVO.methods
      .convEth2Evo(new BN(amountEth, 10))
      .call()
      .then((resp) => {
        return resp;
      })
      .catch((err) => {
        console.error(err);
      });
  }
  getRates(holder, _timestamp) {
    return this.GasEVO.methods
      .getRates(holder, new BN(_timestamp, 10))
      .call()
      .then((resp) => {
        return resp;
      })
      .catch((err) => {
        console.error(err);
      });
  }
  getEvoInterestPct(holder, amountEvo) {
    return this.GasEVO.methods
      .getEvoInterestPct(holder, new BN(amountEvo, 10))
      .call()
      .then((resp) => {
        return resp;
      })
      .catch((err) => {
        console.error(err);
      });
  }
  getEvoInterestPct(holder, amountEvo, _timestamp) {
    return this.GasEVO.methods
      .getEvoInterestPct(holder, new BN(amountEvo, 10), new BN(_timestamp, 10))
      .call()
      .then((resp) => {
        return resp;
      })
      .catch((err) => {
        console.error(err);
      });
  }
  getEvoInterest(holder, amountEvo, _timestamp) {
    return this.GasEVO.methods
      .getEvoInterest(holder, new BN(amountEvo, 10), new BN(_timestamp, 10))
      .call()
      .then((resp) => {
        return resp;
      })
      .catch((err) => {
        console.error(err);
      });
  }
  getEvoInterest(holder, amountEvo) {
    return this.GasEVO.methods
      .getEvoInterest(holder, new BN(amountEvo, 10))
      .call()
      .then((resp) => {
        return resp;
      })
      .catch((err) => {
        console.error(err);
      });
  }

  /*
   *
   * Transaction Functions
   *
   */

  approve(spender, amount) {
    if (!this.account) return Promise.reject(new Error(""Unlock Account""));
    return this.GasEVO.methods
      .approve(spender, new BN(amount, 10))
      .send({ from: this.account })
      .on(""transactionHash"", (hash) => {
        console.log(hash);
        this.loading = true;
      })
      .then((resp) => {
        this.loading = false;
        return resp;
      })
      .catch((err) => {
        this.loading = false;
        console.error(err);
      });
  }
  decreaseAllowance(spender, subtractedValue) {
    if (!this.account) return Promise.reject(new Error(""Unlock Account""));
    return this.GasEVO.methods
      .decreaseAllowance(spender, new BN(subtractedValue, 10))
      .send({ from: this.account })
      .on(""transactionHash"", (hash) => {
        console.log(hash);
        this.loading = true;
      })
      .then((resp) => {
        this.loading = false;
        return resp;
      })
      .catch((err) => {
        this.loading = false;
        console.error(err);
      });
  }
  increaseAllowance(spender, addedValue) {
    if (!this.account) return Promise.reject(new Error(""Unlock Account""));
    return this.GasEVO.methods
      .increaseAllowance(spender, new BN(addedValue, 10))
      .send({ from: this.account })
      .on(""transactionHash"", (hash) => {
        console.log(hash);
        this.loading = true;
      })
      .then((resp) => {
        this.loading = false;
        return resp;
      })
      .catch((err) => {
        this.loading = false;
        console.error(err);
      });
  }
  withdrawEth(amountEvo) {
    if (!this.account) return Promise.reject(new Error(""Unlock Account""));
    return this.GasEVO.methods
      .withdrawEth(new BN(amountEvo, 10))
      .send({ from: this.account })
      .on(""transactionHash"", (hash) => {
        console.log(hash);
        this.loading = true;
      })
      .then((resp) => {
        this.loading = false;
        return resp;
      })
      .catch((err) => {
        this.loading = false;
        console.error(err);
      });
  }
  transfer(_to, _value) {
    if (!this.account) return Promise.reject(new Error(""Unlock Account""));
    return this.GasEVO.methods
      .transfer(_to, new BN(_value, 10))
      .send({ from: this.account })
      .on(""transactionHash"", (hash) => {
        console.log(hash);
        this.loading = true;
      })
      .then((resp) => {
        this.loading = false;
        return resp;
      })
      .catch((err) => {
        this.loading = false;
        console.error(err);
      });
  }
  transferFrom(_from, _to, _value) {
    if (!this.account) return Promise.reject(new Error(""Unlock Account""));
    return this.GasEVO.methods
      .transferFrom(_from, _to, new BN(_value, 10))
      .send({ from: this.account })
      .on(""transactionHash"", (hash) => {
        console.log(hash);
        this.loading = true;
      })
      .then((resp) => {
        this.loading = false;
        return resp;
      })
      .catch((err) => {
        this.loading = false;
        console.error(err);
      });
  }

  /*
   *
   * end examples
   *
   */
}
```

## acknowledgements

portions from `ethers.js` with much modification

### license

SPDX-License-Identifier: MIT
",2,2,2,9,farming,"[defi, ethereum, etherjs, ethers, farming, protocol, sdk, solidity, solidity-sdk, typescript, well-typed, yield]",00000
1246,alierum.github.io,alierum,N/A,https://github.com/alierum/alierum.github.io,https://api.github.com/repos/alierum/alierum.github.io,XBreeding. The RUST farmer's assistant,"XBreeding. The RUST farmer's assistant
======================================

Program to calculate crossbreadings between your clones inside the game RUST of FacePunch Studios.
Copy the genes of your clones, select the desired result, and press CALCULATE.
It can be used with Hemp, Corn, Pumpkins, and the recently added multicolor Berries.
Since it is implemented in JavaScript, there is no need of installing any software in your system.
No relation with FacePunch Studios here.

Try it at: [https://alierum.github.io/](https://alierum.github.io/).

User manual: [https://github.com/alierum/alierum.github.io/wiki/XBreeding-Manual](https://github.com/alierum/alierum.github.io/wiki/XBreeding-Manual).


Interaction with other programs
-------------------------------

To recieve parameters from other programs, use the url (via GET).

Parameters (begining with **?** and concatenated using **&**):

- **e**: experiment name, e.g. `c=hemp` (maximum 10 characters)
- **c**: clone list, e.g. `c=yyxxhygghywy` (groups of 6 characters)
- **t**: target, e.g. `t=yyyggg` (same as `t=gygygy`)
- **f**: filters, e.g. `f=w` or `f=x` or `f=wx`
- **g**: go, launches the calculation, e.g. `g` (same as `g=something`)

For example:

[https://alierum.github.io/?e=hemp&c=yyxgyygygwgghhggygggyhwhwhgghhyyghyh&t=yyyggg&f=x&g](https://alierum.github.io?e=hemp&c=yyxgyygygwgghhggygggyhwhwhgghhyyghyh&t=yyyggg&f=x&g).


More info:
----------
[Rust](https://rust.facepunch.com/).

[Rust | Ultimate Cross Breeding Guide (new/updated)](https://www.youtube.com/watch?v=WQ0ixceBZwA).

[Rust | The Complete Watering Guide (Automatic Sprinklers)](https://www.youtube.com/watch?v=X7oxG2A4oCM).


TO DO:
------
- Autosplit the clone list while typing.
- Different planter configuration: 3 and 9.
- Autoajust page height to different screen sizes.
- Saving and recovering clone lists in the user's browser local storage.
- Check to show all results.
- Check to show/hide tooltips.
- Iterative stoppable process showing the best result found so far using several generations.

",1,1,1,0,farming,"[crossbreed, farming, rust, webapp]",00000
1247,fieldtrak,RB-Agriculture,N/A,N/A,https://api.github.com/repos/RB-Agriculture/fieldtrak,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C11F:1E37:29C0EA:56DB6C:652240A5.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,farming,"[N, /, A]",00000
1248,npo-dao,sskender,N/A,https://github.com/sskender/npo-dao,https://api.github.com/repos/sskender/npo-dao,Proof of concept for running a nonprofit organization on Ethereum blockchain,"# Nonprofit decentralized autonomous organization (npo-dao)

Proof of concept for running a nonprofit type of organization on Ethereum blockchain.

### Quickstart

#### Running:

#### Contracts development:

- Run ganache: `http://localhost:8545` -> this is defined in [truffle configuration](ethereum/truffle-config.js)
- Run truffle console: `truffle console`
- In truffle console: `compile`, `test` and `migrate`
- Or use npm scripts for that:
  - `npm run solhint`
  - `npm run prettier`
  - `npm run compile`
  - `npm run test`
  - `npm run migrate`
  - `npm run console`
- Interact with contract in truffle console:
  - `npm run console`
  - ```javascript
    let instance = await DaoToken.deployed();
    let tokenAddress = instance.address;
    let accounts = await web3.eth.getAccounts();
    ```
- Interact with contract using contract ABI json and Web3 library

#### Web development:

- Change [Web3 provider URI](client/src/providers/web3.js) (default provider is ganache `http://localhost:8545`)
- Replace contract ABI json after [build](#contract-development) from [build folder](ethereum/) to [client/src/providers/abi folder](client/src/providers/abi)
- Replace contract addresses after deployment in [vue store](client/src/store/index.js)
- `cd client`
- `npm run serve`

### Sources:

#### Ethereum development:

- [Ganache](https://www.trufflesuite.com/ganache)
- [Truffle](https://www.trufflesuite.com/docs/truffle/quickstart)
- [Truffle console interact](https://www.trufflesuite.com/docs/truffle/getting-started/interacting-with-your-contracts)
- [Ganache CLI](https://github.com/trufflesuite/ganache-cli)

#### Token:

- [ERC777](https://www.erc777.org/)
- [ERC777 Implementation](https://github.com/0xjac/ERC777)
- [ERC777 OpenZeppelin Docs](https://docs.openzeppelin.com/contracts/2.x/api/token/erc777#ERC777)
- [EIP-777: ERC777 Token Standard](https://eips.ethereum.org/EIPS/eip-777)

#### Web3:

- [Getting started](https://web3js.readthedocs.io/en/v1.2.1/getting-started.html)
- [Contract interaction](https://web3js.readthedocs.io/en/v1.2.1/web3-eth-contract.html)
- [ABI (Application Binary Interface)](https://web3js.readthedocs.io/en/v1.2.11/web3-eth-abi.html)

#### Vue.js:

- [Installation](https://cli.vuejs.org/guide/installation.html)
- [Official docs](https://vuejs.org/v2/guide/installation.html)
- [Vuex](https://vuex.vuejs.org/)

#### Inspired by:

- [Maker DAO](https://github.com/makerdao)
- [Pool balancer management](https://github.com/balancer-labs/pool-management-vue)
- [OpenZeppelin](https://github.com/OpenZeppelin/openzeppelin-contracts)
- [Chainlink](https://github.com/smartcontractkit/chainlink)
- [Proof-of-humanity](https://github.com/Proof-Of-Humanity)
- [1inch-token](https://github.com/ajsantander/1inch-token-distribution)

## License

This project is licensed under the MIT License - see the [LICENSE](LICENSE) file for details.
",1,1,3,1,farming,"[comp, compound, contract-abi-json, dapp, decentralized-applications, erc20, erc20-tokens, eth, ethereum, ethereum-contract, ethereum-dapp, farming, ganache, harvest, makerdao, smart-contracts, truffle, yield, yield-farming, yield-farms]",00000
1249,uniFi-contracts,OnGridSystems,OnGridSystems,https://github.com/OnGridSystems/uniFi-contracts,https://api.github.com/repos/OnGridSystems/uniFi-contracts,Solidity Smart contracts UniFi Staking platform for EVM (Ethereum) compatible chains,"# Smart contracts for UniFi

UniFi Ethereum contracts

![Solidity](https://img.shields.io/badge/solidity-v0.8-green)
![License](https://img.shields.io/github/license/OnGridSystems/unifi-contracts)
[![Pipeline](https://github.com/OnGridSystems/uniFi-contracts/actions/workflows/pipeline.yml/badge.svg)](https://github.com/OnGridSystems/uniFi-contracts/actions/workflows/pipeline.yml)

Install node packages (hardhat)

`yarn install`
 
## Testing deploy

Create local environments
```
export MNEMONIC='<your MNEMONIC phrase>'
export INFURA_API_KEY=<your API key>
```

Run deploy
```
npx hardhat --network rinkeby deploy
npx hardhat --network rinkeby etherscan-verify --solc-input --api-key <Etherscan_API_Key>

npx hardhat --network mumbai deploy
npx hardhat --network mumbai etherscan-verify --solc-input --api-key <Etherscan_API_Key>
```
",1,1,3,0,farming,"[bsc, defi, erc-20, ethereum, farming, polygon, solidity, staking, token, tokens]",00000
1250,Demeter-Farming_Assistant,SinghShreyansh,N/A,https://github.com/SinghShreyansh/Demeter-Farming_Assistant,https://api.github.com/repos/SinghShreyansh/Demeter-Farming_Assistant,Demeter is a software application that helps farmers manage and optimize their agricultural operations.,"# Demeter

Demeter is a software application that helps farmers manage and optimize their agricultural operations.

Tech Stack --> Next.js, Flask, TensorFlow, PyTorch, scikit-learn, pandas, Anaconda, Jupyter Notebook, Tailwind CSS, React.js

![demeter1](https://user-images.githubusercontent.com/91277635/214342088-d4ee6025-71d0-40ea-a4c5-049a24859ec1.png)
![demeter2](https://user-images.githubusercontent.com/91277635/214342150-1112355f-b6fc-44db-9192-3117184f194e.png)
![demeter3](https://user-images.githubusercontent.com/91277635/214342157-a8de375e-96c6-40ce-88c0-6fad2b2efd78.png)
![demeter4](https://user-images.githubusercontent.com/91277635/214342165-97aefeef-dab5-4143-9ceb-954dcdb6c408.png)
![demeter5](https://user-images.githubusercontent.com/91277635/214342172-3d33547d-34e5-4e51-84d6-635391b913a8.png)
",1,1,0,0,farming,"[farming, flask-application, machine-learning-algorithms, nextauth, nextjs, numpy, pandas, pwa-app, scikit-learn, tensorflow]",00000
1251,RIGS,covxx,N/A,https://github.com/covxx/RIGS,https://api.github.com/repos/covxx/RIGS,"Using RPi4 we can help indoor farmers with real time access to sensors giving them info they need while being away from the location. This project orginally started in 2019 and was left as a proof of concept, however the project is currently being rebuilt from the ground up using python3.","# RIGS - RPi Indoor Grow Sensor System
Using RPi4 we can help indoor farmers with real time data access using the sense hat or external sensors. This will allow users to log data, export to a usable format, and potentionaly remote data view. This project orginally started in 2019 and was left as a proof of concept however the project is currently being rebuilt from the ground up using python3.

## Current Stage
- Current Version: v0.5
- Is it working?:  Yes

### Progress
- [X] Implement logging to file
- [ ] Implement sensor data
- [ ] Customize data logging sessoion ie: which select sensors for usage

### Issues
- [ ] None yet...
",1,1,1,0,farming,"[data, data-visualization, farming, raspberry-pi, sensors]",00000
1252,farm-genius-mobile,Capstone-C23-PS094,Capstone-C23-PS094,https://github.com/Capstone-C23-PS094/farm-genius-mobile,https://api.github.com/repos/Capstone-C23-PS094/farm-genius-mobile,FarmGenius Mobile Application | Farmers Solutions with AI,"# 🌱 FarmGenius Mobile Application 
Smart agriculture solution using AI for Indonesian farmers: crop recommendations, disease management, sustainability

## Main Feature
### 1. Crop Recommendation <br>
   To be the number one agricultural brand in the world in terms of goodness and convenience in farming
### 2. Rice Leaf Detection <br>
   We are here to provide optimal service to customers by respecting all their requests and using new technology as a step to become the number one brand.

## Technology Architecture
### 1. Machine Learning
- Image Classification
- Decision Making
- DenseNet121
- Decision Forest
### 2. Cloud Computing
- App Engine
- Cloud Run
- Node.Js
- Cloud SQL
- Cloud Storage
### 3. Mobile Development
- Android Studio
- Kotlin Languange
- Figma
- Retrofit Library
  
## FarmGenius Developer
- [Riyandi Firman Pratama](https://github.com/riyandifirman)    | Mobile Development Engineer 
- [Reyhan Agus Priyatna](https://github.com/ReyhanPriyatna)      | Machine Learning Engineer
- [Iman Nurohman](https://github.com/imannrhman)             | Machine Learning Engineer
- [Husada Hutasoit](https://github.com/husadahts)           | Cloud Computing Engineer
- [Hedrin Sitorus](https://github.com/HedrinSitorus20)            | Machine Learning Engineer
- [Rolasta Sitorus](https://github.com/ifs20021-itdel)           | Cloud Computing Engineer

## Future Feature
1. Farmer Marketplace
2. All Plant Diseases Detection
3. Community Platform

## Notes
Minimum Android 8.0 (API Level 26)

## Screenshot Application
<b> Splash Screen & Home Page <b> <br> <br>
<img src=""https://github.com/Capstone-C23-PS094/farm-genius-mobile/assets/49358131/0d3a1a22-f69b-4814-be1d-436c78cba974"" alt=""Home Page"" widht=""500"" height=""500"">
<img src=""https://github.com/Capstone-C23-PS094/farm-genius-mobile/assets/49358131/58f1a810-a31f-4e9c-981c-1920cdd78449"" alt=""Home Page"" widht=""500"" height=""500"">

<b> Detection Page <b> <br> <br>
<img src=""https://github.com/Capstone-C23-PS094/farm-genius-mobile/assets/49358131/736277cc-63ea-47b7-a7cc-201636c9e949"" alt=""Home Page"" widht=""500"" height=""500"">
<img src=""https://github.com/Capstone-C23-PS094/farm-genius-mobile/assets/49358131/ec5aad74-7c30-4696-8f1d-7ce9b02df12e"" alt=""Home Page"" widht=""500"" height=""500"">

<b> Recommendation Page <b> <br> <br>
<img src=""https://github.com/Capstone-C23-PS094/farm-genius-mobile/assets/49358131/4f6612af-64aa-43f9-a44d-6ea592fdaf0a"" alt=""Home Page"" widht=""500"" height=""500"">
<img src=""https://github.com/Capstone-C23-PS094/farm-genius-mobile/assets/49358131/0791b356-053e-4c88-b866-4b2ea43c0ddc"" alt=""Home Page"" widht=""500"" height=""500"">
",1,1,0,0,farming,"[cloud-computing, disease-detection, farming, kotlin-android, machine-learning, mobile-development]",00000
1253,krishi-ecommerce-dashboard,VaibhavPachpute21,N/A,https://github.com/VaibhavPachpute21/krishi-ecommerce-dashboard,https://api.github.com/repos/VaibhavPachpute21/krishi-ecommerce-dashboard,,"{'message': 'Not Found', 'documentation_url': 'https://docs.github.com/rest/repos/contents#get-repository-content'}",1,1,1,0,farming,"[bootstrap, css, dashboard-templates, farming, html, html-template]",00000
1254,CropDrop,HauntedBees,N/A,https://github.com/HauntedBees/CropDrop,https://api.github.com/repos/HauntedBees/CropDrop,A vegetable-themed puzzle game made in Cordova.,"# Crop Drop

## wut
Crop Drop is a [Cordova](https://cordova.apache.org/)-based puzzle game. It runs natively on Android and some browsers (see compatibility below).

## license
Crop Drop's source code is licensed with the [GNU GPLv3](https://www.gnu.org/licenses/gpl-3.0.en.html). All media assets are licensed with the [CC BY-SA 4.0](https://creativecommons.org/licenses/by-sa/4.0/) license, with the exception of the following:
*   ""[Happy Arcade Tune](https://opengameart.org/content/happy-arcade-tune)"" by [rezoner](https://opengameart.org/users/rezoner), available under the [CC-BY 3.0](https://creativecommons.org/licenses/by/3.0/) license. Copyright © 2013 rezoner.
*   ""[No Chains (Instrumental Version)](https://opengameart.org/content/no-chainsinstrumental-version)"" by [mvrasseli](https://opengameart.org/users/mvrasseli), available under the [CC-BY 3.0](https://creativecommons.org/licenses/by/3.0/) license. Copyright © 2014 Marcus Rasseli.
*   ""[Country Style Guitar Intro](https://www.freesound.org/people/Soughtaftersounds/sounds/145416/)"" by [Varazuvi](http://www.varazuvi.com), available under the [CC-BY 3.0](https://creativecommons.org/licenses/by/3.0/) license. Copyright © 2011 Varavuzi™.
*   ""[Menu Click - Two Tone](https://www.freesound.org/people/Soughtaftersounds/sounds/145442/)"" by [Varazuvi](http://www.varazuvi.com), available under the [CC-BY 3.0](https://creativecommons.org/licenses/by/3.0/) license. Copyright © 2011 Varavuzi™.
*   ""[success.wav](https://www.freesound.org/people/grunz/sounds/109662/)"" by [grunz](https://www.freesound.org/people/grunz/), available under the [CC-BY 3.0](https://creativecommons.org/licenses/by/3.0/) license. Copyright © 2010 grunz.
*   ""[Dirt Trail](https://www.flickr.com/photos/pixellou/4118322275)"" by [Lisa Williams](https://www.flickr.com/photos/pixellou/), available under the [CC-BY 2.0](https://creativecommons.org/licenses/by/2.0/) license. Copyright © 2009 Lisa Williams.
*   ""[Tomato 27 days from planting seeds](https://en.wikipedia.org/wiki/File:Tomato_27_days_from_planting_seeds.jpg)"" by [Dennis Brown](https://en.wikipedia.org/w/index.php?title=User:Dennis_Brown), available under the [CC-BY-SA 3.0](https://creativecommons.org/licenses/by-sa/3.0/) license. Copyright © 2013 Dennis Brown.
*   ""[Tomato](http://www.picserver.org/t/tomato04.html)"" by [NY](http://nyphotographic.com/), available under the [CC-BY-SA 3.0](https://creativecommons.org/licenses/by-sa/3.0/) license. Copyright ©2015 NY.
*   ""[Strawberries](http://www.picserver.org/s/strawberries.html)"" by [NY](http://nyphotographic.com/), available under the [CC-BY-SA 3.0](https://creativecommons.org/licenses/by-sa/3.0/) license. Copyright © 2015 NY.
*   ""[Ear of Corn / vertical / isolated on a white background](https://www.flickr.com/photos/usdagov/21952058553)"" by [the U.S. Department of Agriculture](https://www.flickr.com/photos/usdagov/), available under the [CC-BY 2.0](https://creativecommons.org/licenses/by/2.0/) license. Copyright © 2012 U.S. Department of Agriculture.
*   ""[Sprouts of Corn](https://www.flickr.com/photos/ladydragonflyherworld/5553380942/)"" by [Lady DragonflyCC ->;<](https://www.flickr.com/photos/ladydragonflyherworld/), available under the [CC-BY 2.0](https://creativecommons.org/licenses/by/2.0/) license. Copyright © 2011 Lady DragonflyCC ->;<.
*   ""[PoŠniks](https://commons.wikimedia.org/wiki/File:Po%C5%A1niks.png)"" by [Dzintis](https://commons.wikimedia.org/w/index.php?title=User:Dzintis), available under the [CC-BY-SA 4.0](https://creativecommons.org/licenses/by-sa/4.0/) license. Copyright © 2016 Dzintis.
*   ""[Cucumber Seedling](https://commons.wikimedia.org/wiki/File:Cucumber_Seedling.jpg)"" by [Peter Chastain](https://en.wikipedia.org/wiki/User:Peter_Chastain), available under the [CC-BY-SA 3.0](https://creativecommons.org/licenses/by-sa/3.0/) license. Copyright © 2009 Peter Chastain.
*   ""[Peas in pods](https://www.flickr.com/photos/craigmcharg/4824605487/)"" by [Craig McHarg](https://www.flickr.com/photos/craigmcharg/), available under the [CC-BY 2.0](https://creativecommons.org/licenses/by/2.0/) license. Copyright © 2010 Craig McHarg.
*   ""[Comparison of two wild strawberries' leaves](https://www.flickr.com/photos/7147684@N03/3535999497/)"" by [Jason Hollinger](https://www.flickr.com/photos/7147684@N03/), available under the [CC-BY 2.0](https://creativecommons.org/licenses/by/2.0/) license. Copyright © 2009 Jason Hollinger.
*   ""[Tasty bunch](http://torange.biz/29507.html)"" by [tOrange.biz](http://torange.biz/), available under the [CC-BY 4.0](https://creativecommons.org/licenses/by/4.0/) license. Copyright © 2016 tOrange.biz.
*   ""[Giant Pumpkin Seedlings](https://www.flickr.com/photos/9993075@N06/2554064933)"" by [Nick Ares](https://www.flickr.com/photos/aresauburnphotos/), available under the [CC-BY-SA 2.0](https://creativecommons.org/licenses/by-sa/2.0/) license. Copyright © 2008 Nick Ares.
*   ""[Pumpkin Patch 100_9296](https://www.flickr.com/photos/kams_world/4047724512)"" by [Kam Abbott](https://www.flickr.com/photos/kams_world/), available under the [CC-BY 2.0](https://creativecommons.org/licenses/by/2.0/) license. Copyright © 2009 Kam Abbott.
*   ""[Wooden hourglass 3](https://commons.wikimedia.org/wiki/File:Wooden_hourglass_3.jpg)"" by [S Sepp](https://commons.wikimedia.org/wiki/User:S_Sepp), available under the [CC-BY-SA 3.0](https://creativecommons.org/licenses/by-sa/3.0/) license. Copyright © 2007 S Sepp.
*   ""[15.Electric Brushcutter](https://commons.wikimedia.org/wiki/File:15.Electric_Brushcutter.jpg)"" by [Harisingh&sons](https://commons.wikimedia.org/w/index.php?title=User:Harisingh%26sons), available under the [CC-BY-SA 4.0](https://creativecommons.org/licenses/by-sa/4.0/) license. Copyright © 2008 Harisingh&sons.
*   All other audio files and HD graphics images are in the Public Domain.

## dependencies
The following JavaScript files need to be added to the ""lib"" directory:
* [jQuery v2.2.1](https://code.jquery.com/jquery-2.2.1.js) or any other compatible version (as **lib/jquery.js**).
* [jQuery.path v0.0.1](https://github.com/weepy/jquery.path) or any other compatible version (as **lib/jquery.path.js**).
* [FastClick Polyfill v1.0.1](https://github.com/ftlabs/fastclick) or any other compatible version as (**lib/fastclick.js**).

Additionally, [Cordova@9.0.0](https://cordova.apache.org/) is required to build the project to a native mobile app, and the following plugins are used:
* [StatusBar](https://github.com/apache/cordova-plugin-statusbar)
* [NativeStorage](https://github.com/TheCocoaProject/cordova-plugin-nativestorage)
* [ExitApp](https://github.com/gaqzi/cordova-plugin-exitapp)
* [YANAP](https://github.com/Wizcorp/cordova-plugin-yanap)

If running the game natively in your computer's browser, Cordova and these plugins aren't needed, but not all features may not be fully functional.

The Cordova project files are not included in this repository, but creating a new project, including the above plugins, and putting the contents of this repo in the **www** path should get the job done.

## compatibility
Crop Drop for Android was confirmed to work on Android OS versions 4, 6, and 7, on Samsung, Motorola, LG, and Google phones. The web-app version should run on almost all browsers with some quirks. Confirmed browsers:
* Firefox (tested on Windows 8.1; browser v53): **A-OK.**
* Chrome (tested on Windows 8.1, browser v57): **minor graphical quirks; major quirks when built from Cordova instead of just grabbing things from the _www_ folder, using the browser zoom function is recommended.**
* Chrome Mobile (tested on Android OS 6, v55): **A-OK.**
* Chrome Mobile (tested on iOS): **minor graphical quirks**
* Safari Mobile (tested on iOS): **minor graphical quirks**
* Waterfox Mobile (tested on Android): **minor graphical quirks**
* Firefox Mobile (tested on Android OS 6, v53): **_Completely unplayable._**

## why
I developed [Amicom](https://github.com/HauntedBees/Amicom), a virtual pet, and I found myself playing and enjoying one of the mini-games in it more than the rest of the game, so I decided to just branch that out into a more fleshed out project of its own.

## want to make changes?
Go for it, yo. Please use any GPL-compatible license for your contributions, although GNU GPLv3 is preferred. There is no guarantee that changes made to this project will be included in release versions of the game or ports of the game to other systems/storefronts.",1,1,2,0,farming,"[android, cordova, farming, game-development, puzzle-game]",00000
1255,TheDigitalFarmer,bhaiyaajee,N/A,https://github.com/bhaiyaajee/TheDigitalFarmer,https://api.github.com/repos/bhaiyaajee/TheDigitalFarmer,"This Android Application project aims to develop a portal for the Farmers where they can list their crops and ask for a systematic bidding. We can call it a “Digital Mandi”. The buyers will be able to place their bidding price per unit, required quantity, delivery location etc. The final control will be in the farmer’s hand, for whom to sell and which bid to pick up giving them the negotiating power. So, the project aims to customize the farmer’s way of farming and selling to maximize their profit by making them aware of the active bids on their crops along with the MSP of the crops. Thus, the farmers will have losses less and profits more.","# TheDigitalFarmer
OBJECTIVES
•To provide a portal to the farmers where they can list their crops.
•To allow the Buyers to place a bid for the crops.
•To provide an interface to show maximum bids and MSP on the crops tomaximize the profit.
•To provide a “share crops” feature in case if the farmer isn’t getting anybuyer for their crops.

The project aims to develop a portal for the Farmers where they can list their crops and ask for a systematic bidding. We can call it a “Digital Mandi”. The buyers will be able to place their bidding price per unit, required quantity, delivery location etc. The final control will be in the farmer’s hand, for whom to sell and which bid to pick up giving them the negotiating power. So, the project aims to customize the farmer’s way of farming and selling to maximize their profit by making them aware of the active bids on their crops along with the MSP of the crops. Thus, the farmers will have losses less and profits more.
",1,1,1,0,farming,"[android, android-application, best, farming, project]",00000
1256,just-a-villager,mlane,N/A,https://github.com/mlane/just-a-villager,https://api.github.com/repos/mlane/just-a-villager,1.12.2 Minecraft modpack. 100+ quests. ,"# Protect your village at all costs.

##### +100 quests to guide you through your journey

&nbsp;

![Just a Villager](https://github.com/mlane/just-a-villager/assets/13138738/d359991c-9d18-43c3-94cc-e0a38ce7c52c)

&nbsp;

### **Curseforge:**

- [https://legacy.curseforge.com/minecraft/modpacks/just-a-villager](https://legacy.curseforge.com/minecraft/modpacks/just-a-villager)

&nbsp;

### **Objectives:**

- Complete the questline
- Get married and/or tame an anime friend
- Win the hearts of the villagers by completing quests (see village lord)

&nbsp;

### **More about the modpack:**

- Minecraft Comes Alive (MCA) - establish a rapport with the villagers.
- Touhou Maids - loyal friends who can help with chores
- ToroQuest Revamped - befriend the village lord by working on quests.
- Refined Storage - your storage needs :)
- Large Ore Deposits
- Aroma1997s Dimensional World - mining dimension
- EnderIO/Solar Flux Reborn/Flux

&nbsp;

### **Resource Packs:**

- [Faithful32 Modded](http://f32.me/)
",1,1,2,0,farming,"[anime, curseforge, farming, forge, minecraft, modpack, village]",00000
1257,GreenTrust,mittal-parth,N/A,https://github.com/mittal-parth/GreenTrust,https://api.github.com/repos/mittal-parth/GreenTrust,,"# Green Trust
<p> A Blockchain Revolution in Organic Farming <p/>

https://user-images.githubusercontent.com/76661350/223676777-6f659bec-18f9-433e-a250-5a2737954ea5.mp4

## Technologies Used

- [Next Js](https://nextjs.org/)
- [Next-PWA](https://www.npmjs.com/package/next-pwa) 
- [Tailwind CSS](https://tailwindcss.com/)
- [Solidity](https://soliditylang.org/)
- [IPFS](https://ipfs.tech/)
- [SuperFluid](https://www.superfluid.finance)
- [Arcana](https://www.mantle.xyz/)
- [Mantle](https://www.arcana.network/)
- [ChainLink](https://chain.link/)
- [Polygon](https://polygon.technology/)
- [Push Protocol](https://push.org)
- [Polywrap](https://polywrap.io/)
- [Raspberry Pi (IoT)](https://www.raspberrypi.org/)


<br/>

## Problems 

One of the significant issues in organic farming is that certifications are required from multiple parties for
the products to be deemed ‘organic’. Currently, there are two government sanctioned mechanisms
for issuance of certification:

1. PGS Participatory Guarantee Systems (PGS): Farmers in a group inspect each other’s land
and vouch for its organic credentials. The inspection is carried out at the start of every sowing
season and farmers visit each other almost weekly to provide counsel. If a farmer is found
to be in violation, her produce is not sold through the group till she rectifies her mistake.

2. Third party certification: The farms is certified by authorized third party certifying agencies.
The database of India’s organic products is very poor and traceability, which is key for export growth,
remains weak, while third party certification as insisted by APEDA is very costly. In addition, major
markets for export do not accepts PGS certification, and there is no mechanism to link certifications
by third parties and PGS. 

## Solution

GreenTrust offers a solution for obtaining certification in organic farming by organizing credible and decentralized Participatory Guarantee Systems (PGSs). 

In order to secure certification, every harvest must be sponsored by certified farmers who contribute a stake as a form of assurance that organic farming methods have been properly implemented. 

The platform utilizes decentralized IoT sensor data to monitor and track various environmental conditions. Additionally, any individual may challenge the organic authenticity of a particular harvest on the platform. 

These challenges are then evaluated by a certified inspector, and if the challenge is deemed to be valid, the challenger will receive the stake put forward for the harvest.

Conversely, if the challenge is found to be invalid, the challenger will lose the stake they put forward to initiate the challenge.

### 

#### Farmer
-  A Farmer joins the GreenTrust Platform for using the decentralized PGS system of verification for his organic Crops.
-  The onboarding of Farmers is simplified by using Arcana Auth which provides a seamless interface from Web2 to Web3.
-  This provides him a platform to gain credibility for his crops without paying high third party certification fees. (Incentive)
-  In doing so, a farmer pays a nominal subscription fee in terms of Superfluid's CFA (Continuous Flow Agreement) money streaming model.
-  The farmer can request stakes to be placed on his farm by stakeholders by clicking on Request Stake button, which sends a Push Notification to everyone subscribed to the GreenTrust Channel.
  
#### Verifier
- A Verifier is an authorized Organic Crop Verifier associated with our platform.
- The Verifier will get allocated with inspecting a Challenged Crop randomly through our system. (Future Work)
- Since the Crop challenges will be randomly allocated the bias in the verifier's judgement will be highly reduced.
- Verifier can either approve or reject a challenge after inspecting the challenged crop.
- Verifier always gets the same amount (his inspection fee) irrespective of his decision which reduces his bias further.(Incentive)
 
#### Stakeholder 
- A Stakeholder is a person who vouches for the credibility of an organic crop by placing a certain amount as stake.
- After a certain duration from the crop's harvest, the stake amount will be returned to all the stakeholders and a reward will be given using Superfluid's IDA (Instant Distribution Agreement) model automatically using Chainlink Upkeep. (Incentive)
- Stakeholder's Rewards are generated from the farmer's subscriptions by the smart contract deployed on Polygon.
- If a challenge on the crop is approved by a verifier, then the stakeholder loses his stake amount.
 
#### Consumer
- Consumer is the one who consumes the farmer's organic products.
- The organic products will have QR codes which can be scanned to access the Crop details like Crop Health data (Uploaded through an IoT device), Challenges on the crop, stakeholders, etc.
- The consumer can challenge an organic crop harvest's credibility by placing a challenge and staking a certain amount.
- If the verifier approves the challenge, the Stakeholders' stakes are transferred to the consumer as a compensation amount and his stake (the one he placed to challenge) is transferred to the Verifier as a fee. (Incentive)
- If the verifier rejects the challenge, the consumer loses his staked amount to the Verifier (as a fee).

## Advantages

- <b>Establishing traceability</b>: Placing information regarding the lifecycle of crops on a
blockchain will help improving trust in the self certification process and establishing
traceability at the point of sale.

- <b>Disintermediation of multiple stakeholders</b>: As highlighted, the process of third party
certification is often expensive, and in turn drives up cost of produce, making it harder for
farmers to sell. Disintermediation through peer to peer certification mechanisms, or
integration of third party certifiers into the PGS process would unlock large markets for
produce and reduce cost of production.

- <b> Programmable transfers </b>: Much like in supply chain, tracking of products using IoT devices
along their value chain can help increase efficiency in transfer of asset between
stakeholders, and alert stakeholders immediately of issues. 

## Links

- Figma - https://www.figma.com/file/QwfJiaDaLHx7Tav6Uwyiwf/GreenTrust?node-id=2%3A2&t=0jp5DXuTlfI99jiO-1

## Network Diagram 
![GreenTrustND](https://user-images.githubusercontent.com/72497928/219973576-d238d090-1636-49bb-a6d1-ea7a04fc57c3.png)

## Team Members
- Mehul Todi
- Abhiraj Mengade
- Shashank S M
- Pranav Agarwal
- Parth Mittal

## Setup 
### Contract
1. Touch `root/.env` file as follows:
```.env
GOERLI_PRIVATE_KEY=<key>
CONTRACT_ADDRESS=0x45124
```
2. `npm i`
3. `npx hardhat run ./scripts/deploy.js --network NETWORK_NAME`

### Frontend
1. `cd greentrust`
2. `npm i`
3. `npm run build`
4. `npm run start`
",1,1,1,0,farming,"[arcana-auth-sdk, blockchain, farming, ipfs, nextjs, polywrap, public-goods, reactjs, tailwindcss, web3]",00000
1258,rs-timer,Talkarcabbage,N/A,https://github.com/Talkarcabbage/rs-timer,https://api.github.com/repos/Talkarcabbage/rs-timer,A lightweight timer to keep track of RuneScape repeatables.,"RuneScape Timer
========

[![License](https://img.shields.io/hexpm/l/plug.svg)](https://github.com/Talkarcabbage/rs-timer/blob/master/LICENSE)
[![Build Status](https://travis-ci.org/Talkarcabbage/rs-timer.svg?branch=master)](https://travis-ci.org/Talkarcabbage/rs-timer)

![image](https://cloud.githubusercontent.com/assets/2666891/23511922/b9b51dc8-ff13-11e6-9891-c54818ec5c79.png)

# Summary
A simple timer program intended for, but not limited to, use for timing RuneScape repeatables (_e.g._ dailies) and farm runs. Displays a window with customizable timers shown with progress bars. Includes ""duration from starting point"" timers and daily/weekly/monthly timers, that reset at UTC 0:00 / RS daily, weekly, and monthly reset times. Timers can be left-clicked to reset their time remaining to the length of the timer (or to the next tick for dailies/weeklies/monthlies).

# Operations
- Left-clicking on a timer's progress bar will reset its progress; do this when you complete the task
- Right-clicking on a timer's progress bar will set its status to complete 
- Shift-left clicking on a timer's progress bar allows you to edit some settings of that timer
- Clicking the + button shows a GUI to a new timer in the current tab
- Shift-clicking the + button shows GUIs to add a new tab
- Clicking the - button (setting it to selected) then clicking a timer's bar will remove that timer
- Shift-clicking the - button will ask if you want to delete the current tab (and its timers)
- Clicking the pin icon will toggle whether the window stays always-on-top
- Adjusting the slider sets the transparency of the window. The minimum is 5%. This is saved when reopening the program


Please note that features may be added, changed, or removed at any time. Also, no guarantee is given on the lack of existence of bugs. Information here is based on the listed version and may not match newer or older versions.

# Configuration/Syntax
## Properties file
Several settings can be configured via the properties file. The settings file can be refreshed to defaults by deleting it. The order these appear in may not be maintained/consistent.

```
setting=default value # Possible values   [Explanation]
logLevel=INFO         # ALL|FINEST,FINER,FINE,CONFIG,INFO,WARNING,SEVERE,NONE [Values closer to ALL generate more information in the console]
transparency=1.0      # 0.0 to 1.0        [Transparency value of the GUI as a double decimal]
winWidth=400          # 0 to 2.1 billion  [Window width]
winHeight=205         # 0 to 2.1 billion  [Window height]
defaultTabColumns=0   # 0 to 2.1 billion  [Number of default tab columns if no tabs exist. Imports from cfg,gridRows]
defaultTabRows=5      # 0 to 2.1 billion  [Number of default tab rows if no tabs exist. Imports from cfg,gridRows]
defaultTabName=Main   # Non-empty-string  [Name of the first tab if it is imported or does not exist yet. Imports from cfg,mainTabName]
framesPerUpdate=15    # 1 to 2.1 billion  [Number of frames per update of the GUI. Lower values make the timer GUI more fluid, higher values decrease CPU usage. Recommended maximum is 60, i.e. once per second]
```

# Disclaimer
THIS PROGRAM IS NOT AFFILIATED WITH RUNESCAPE NOR JAGEX. THIS PROGRAM DOES NOT INTERACT WITH ANY OF RUNESCAPE'S CONTENT OR PROGRAM. JAVAFX SKINS (JavaFX CSS/images) HERE WERE INSPIRED RUNESCAPE'S UI DESIGN, BUT DO NOT DIRECTLY USE RUNESCAPE'S ASSETS. THIS SOFTWARE IS PROVIDED ""AS IS"" WITHOUT ANY KIND OF WARRANTY.

# Building and Versioning

This project includes preconfigured ANT versioning and packaging options.

### To display the current version used by ANT:
```
ant
```

### To package the current version into a jar:
```
ant dist
```

### To change the version and package the current version into a jar:
```
ant revision
ant dist
```
Use `ant major`, `ant minor`, or `ant revision` to increment the respective parts of the version number.

Note that changing the version and packaging the jar must occur as two separate ANT operations.

### To automatically draft a new release using Travis CI:
```
git tag v0.0.1
git push origin v0.0.1
```
Make sure to include a 'v' before all tags
",1,1,4,8,farming,"[clock, dailies, farm-run, farming, herb-run, herbs, monthlies, repeatables, rs, runescape, timer, tree-run, weeklies]",00000
1259,FS17_B52_MP,Badca52,N/A,https://github.com/Badca52/FS17_B52_MP,https://api.github.com/repos/Badca52/FS17_B52_MP,Multiplayer/network testing for Farming Simulator 17,"{'message': 'Not Found', 'documentation_url': 'https://docs.github.com/rest/repos/contents#get-repository-content'}",1,1,3,0,farming,"[farming, farming-simulator, farming-simulator-17, farmingsimulator]",00000
1260,akiyama,DzunN86,N/A,https://github.com/DzunN86/akiyama,https://api.github.com/repos/DzunN86/akiyama,Let's have a nice farming 🍀🌳🍀 powered by Github Actions,"{'message': 'Not Found', 'documentation_url': 'https://docs.github.com/rest/repos/contents#get-repository-content'}",1,1,2,0,farming,"[farmer, farming, gardening, github-actions]",00000
1261,KrushiVikas,mahekn23,N/A,N/A,https://api.github.com/repos/mahekn23/KrushiVikas,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C156:4F4C:7030FC:E78494:65224082.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,farming,"[N, /, A]",00000
1262,FS19-Java-API,TheCoati,N/A,https://github.com/TheCoati/FS19-Java-API,https://api.github.com/repos/TheCoati/FS19-Java-API,🚜 FS19 Java API is an utility for Farming Simulator 2019 Dedicated servers.,"# FS19 Java API

FS19 Java API is an utility for Farming Simulator 2019 Dedicated servers.<br>
The Java API provides easy access to the API and read data related to the dedicated server.

---

## Endpoints

- [x] Server Data **(** /feed/dedicated-server-stats.xml **)**
- [x] Map image **(** /feed/dedicated-server-stats.xml **)**
- [x] Career SaveGame **(** /feed/dedicated-server-stats-map.jpg **)**
- [ ] Vehicles Data **(** /feed/dedicated-server-savegame.html&file=vehicles **)**
- [ ] Economy Data  **(** /feed/dedicated-server-savegame.html&file=economy **)**

---
## Usage

**Step 1**<br>
Go to your Dedicated server settings.
![Alt text](./docs/img/fs19_dedicated_topbar.png?raw=true ""Title"")

**Step 2**<br>
Take note of the TLD or IP with port and the code tailing the URL.
![Alt text](./docs/img/fs19_dedicated_url.png?raw=true ""Title"")

**Step 3**<br>
Create a new `FarmingAPI` instance with the required parameters.
```java
 FarmingAPI api = new FarmingAPI(""http://127.0.0.1:12700"", ""c532500b61a441858b7cb7ea930ba8be""); 
```

**Step 4**<br>
Request the required data from the API.
```java
try {
   System.out.println(""Farmers online: "" + api.getServer().getSlots().getNumUsed());
} catch (IOException e) {
   e.printStackTrace();
}
```


",1,1,1,0,farming,"[api, dedicated, farming, farming-simulator, java, server]",00000
1263,team-011-backend,BuildForSDG,BuildForSDG,https://github.com/BuildForSDG/team-011-backend,https://api.github.com/repos/BuildForSDG/team-011-backend,"Farmlord is solution that connects Landowners to Farmers, allowing them rent/lease farmlands for their next farming season.","# Farmlord

[![Codacy Badge](https://app.codacy.com/project/badge/Grade/bb7d708fac8a4289bd2c1f6add297d6e)](https://www.codacy.com/gh/BuildForSDG/team-011-backend?utm_source=github.com&utm_medium=referral&utm_content=BuildForSDG/team-011-backend&utm_campaign=Badge_Grade)![Node.js CI](https://github.com/BuildForSDG/team-011-backend/workflows/Node.js%20CI/badge.svg)

This application is an innovative solution for connecting subsistent farmers to land owners. It offers the farmers the opportunity to rent the lands or lease at affordable prices. We've built a solution that will help Farmers maximize their productivity and output every harvest by providing the most important resource every Farmer needs - Farmland Real Estate. Landowners that own Farmlands that laying unutilized benefits from this solution simply by enrolling on the platform and making their farmlands available in a virtual market. The whole process entails four simple steps

## See Use Case

Below is a use case flow of the application

![FarmLord Use Case](docs/use-case.jpg ""FarmLord Use Case"")

## Why

The solution is necessary because many people who wish to farm do not have information about available lands or the prices. Also, the people who have lands but do not know people who need the lands.

## Usage

The solution consist majorly of four steps

### 1. Farmlands

First, you will need to create an account on Farmlord either as Farmer or Landowner. As a Landowner, you can profile your pieces of farmlands on the platform which automatically becomes available on a virtual market. After registering as a Farmer, you may go on the virtual market and view land that interests you.

### 2. Requests

When you find an interesting Farmland that meets your need on the ""farmland market"", you will simply send a request with just one click! The Landowner will immediately get a ""farmland request"" notification on their dashboard, prompting them of a Farmer's interest on their listed property on the ""farmland market""

### 3. Transact

As soon as a Landowner receives a request to rent or lease their farmland, they will review and accept the request if it meets their preference or decline accordingly. All of these processes should take a few minutes to complete a transaction end to end between a Landowner and the corresponding requesting Farmer.

### 4. Payment

After the Landowner has accepted the land request sent by a Farmer, the Farmer get a notification on their dashboard to make secure payment for a right occupy or lease the farmland as agreed in the terms between Farmer and the Land owner. We've made sure to integrated to a trusted and secure payment service.

## Setup

Install `yarn install`

After clonning the repo `git clone https://github.com/BuildForSDG/team-011-backend.git` , cd team-011-backend to your local machine and moving into the cloned folder, Run `yarn install` to get started by installing dependencies.

`src/server.js` is the entry to the project and source code should go into the `src` folder.

All tests should be written in the `**tests**' folder. There's a sample in there.

This starter uses [Parcel](https://parceljs.org/getting_started.html) as the bundler. It is much simpler that WebPack and the others

### Hints

- Run `yarn install` to get started.
- Install additional dependencies: `yarn add <dependency-name> [-D]`
- Run tests: `yarn test`
- Run tests with test coverage info: `yarn test:cover`
- Check the codebase for proper syntax and formatting compliance: `yarn lint`
- Run your app in local dev mode: `yarn start`. This puts the bundled app in a `dist` folder, set up a local web server at localhost:1234, and continues to watch for your code changes which it syncs with the local server. This means if you loaded the app in a browser, it will auto-refresh as you code along. Feel free to use whatever bundler best meets your needs. Parcel was only added as a sample and for those looking for a simple but effective solution to the hassle of bundlers.

## Authors

The team members of this project are;

- Oluwatoni Ogunfusika - Fullstack <https://github.com/phemm10>
- Fortunatus Ochi - Fullstack <https://github.com/ofuochi>
- Agho Godstime - Fullstack <https://github.com/Gtstride>
- Olanrewaju Ajayi - Fullstack <https://github.com/lurnray>
- Edafeadjeke Emunotor - Fullstack <https://github.com/johnmadakin>

## Contributing

If this project sounds interesting to you and you'd like to contribute, thank you!
First, you can send a mail to buildforsdg@andela.com to indicate your interest, why you'd like to support and what forms of support you can bring to the table, but here are areas we think we'd need the most help in this project :

1. area one (e.g this app is about human trafficking and you need feedback on your road-map and feature list from the private sector / NGOs)
2. area two (e.g you want people to opt-in and try using your staging app at staging.project-name.com and report any bugs via a form)
3. area three (e.g here is the zoom link to our end-of sprint webinar, join and provide feedback as a stakeholder if you can)

## LICENSE

MIT
",1,1,3,22,farming,"[farmers, farming, farmland, jest, lands, mongodb, mongoose, nodejs]",00000
1264,unity-low-poly-farmer,PythooonUser,N/A,https://github.com/PythooonUser/unity-low-poly-farmer,https://api.github.com/repos/PythooonUser/unity-low-poly-farmer,A low poly farming game. More like a tech/art demo. Done on a weekend.,"# unity-low-poly-farmer
> A low poly farming game. More like a tech/art demo. Done on a weekend.

![Screenshot](.media/title-screen.png)

## Usage
A build of the game can be found at [itch.io](https://pythooonuser.itch.io/low-poly-farmer). Otherwise, clone the repository and open up the project in Unity and make your own.
",1,1,2,0,farming,"[art, farming, game, low-poly, post-processing, unity]",00000
1265,FS19_TidyShop,w33zl,N/A,https://github.com/w33zl/FS19_TidyShop,https://api.github.com/repos/w33zl/FS19_TidyShop,Mod for Farming Simulator 19 - Cleans up the in-game store for a tidier and more uniform look,"# TidyShop for Farming Simulator 19

![TidyShop](https://user-images.githubusercontent.com/7383510/94240583-c43cc580-ff13-11ea-987e-2e6b91a6d333.jpg)

The goal of this mod is to to clean up the store to make it easier to find the right equipment for every task. A secondary goal is to give the store a more uniform look and feel.

**For more details, bug reports and to make suggestions check out the *project page for TidyShop at https://go.xilent.se/fs19_tidyshop*.**

## Category changes:
- New specialized vehicle categories like Hooklift, SwapBody/AR, Fixed-body trucks, Light Commercial Vehicles, Construction, Excavators and more.
- New specialized trailer categories for Light Trailers, Semitrailers, Liquid Transport and UTV/ATV trailers.
- New specialized categories for tools/implements like Hooklift Containers, SwapBody Superstructures, Cranes & Transport, Snow Removal and Hand Tools.
- Additional variants of basegame categeries like Compact Tractors and XL/Tracked Tractors.

## Additional features:
- Unique and descriptive category thumbnails in the same style as basegame categories.
- More descriptive ""subtitle"" in the store with the actual name of the mod (instead of ""Mod"").
- Custom ""query language"" to make it (fairly) simple to add or modify categories if desired.
- Compatible with the CategoryAdder mod, the ""AddStoreCategory"" script and the ""StoreManager"" feature in GlobalCompany

## How it works:
This script generally does two things. Firstly it adds a bunch of new/modified categories and then it moves items (vehicles, implements etc) between these different categories. 

Categories that are too specific/narrow will be merged, categories that are too general/broad will be split up and some items will be moved from Vehicles to Implements (and vice versa). Highly specialized categories such as Animal Transport or Slurry Tanks is left untouched while more generic items such as ""autoloading flatbed semitrailers"" is moved from Baling Technology to a more generic Semitrailers category.

## Final notes:
For a complete list of all new categories, especially if you want to include any of them in your own mod, check out my project page at https://go.xilent.se/fs19_tidyshop. Also, the list of vehicles and implements that this mod covers is by no means complete so I encourage you to post suggetions at the aforementioned project page.

A special thanks goes to ViperGTS96 for creating the great mod 'Category Adder' which pointed me in the right direction to realize this idea!
",1,1,0,1,farming,"[farming, fs19, games, mod, modification, mods, simulator]",00000
1266,HydroCtrl,vaizq,N/A,https://github.com/vaizq/HydroCtrl,https://api.github.com/repos/vaizq/HydroCtrl,Scalable hydroponics automation and monitoring platform,"<div align=""center"">
  
![HydroCtrl-logo](https://user-images.githubusercontent.com/68817622/210755586-5aa0ddc7-f66c-4db1-8e68-a135ee4e9bea.png)

##### Opensource software and hardware for advanced hydroponics control 
</div>

# HydroCtrl
HydroCtrl enables people to build cost effective hydroponics automation and monitoring systems using opensource software and hardware.
HydroCtrl is basically a client and a communication protocol so users can build nodes that communicate with HydroCtrl client.
Each node controls some greenhouse variable such as PH, CO2 or a simple relay that controls a fan.
Client communicates with nodes trough wifi.

## Client 


## IOT-node
We are currently working on creating nodes for the most critical tasks.
# ReboundBot
",1,1,2,0,farming,"[aquaponics, automation, farming, hydroponics, iot, monitoring]",00000
1267,AgricultureApp,Intensedog,N/A,N/A,https://api.github.com/repos/Intensedog/AgricultureApp,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C185:1F34:1B82E3A:388A9AE:6522407C.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,farming,"[N, /, A]",00000
1268,farm-dashboard,victorkingi,N/A,https://github.com/victorkingi/farm-dashboard,https://api.github.com/repos/victorkingi/farm-dashboard,A reactjs web app dashboard for farmers,"# Farm dashboard

A data keeping offline-first, reactjs web app for farmers.<br/>

**NB:- Requires Node version v14.20.0 LTS and npm 6.14.17**

#### Runing on localhost
1. Run `npm install` or `yarn`.
2. start by running `npm run start` or `yarn start`.


Credit given to [Corona React Admin Template](https://github.com/BootstrapDash/corona-react-free-admin-template)
by bootstrapDash for providing a base template to start on.

",1,1,2,1,farming,"[farming, poultry, poultry-farm-]",00000
1269,EasyFarm,chenhehong,N/A,https://github.com/chenhehong/EasyFarm,https://api.github.com/repos/chenhehong/EasyFarm,An android app named EasyFarm,"# EasyFarm
An android app named EasyFarm
",1,1,1,0,farming,"[farming, java, performance-monitoring]",00000
1270,FARM,sheppardd1,N/A,https://github.com/sheppardd1/FARM,https://api.github.com/repos/sheppardd1/FARM,The Field Automated Routing Module allows users to track their location history while moving around a field,"# FARM
The Field Automated Routing Module (FARM) allows users to track their location history while moving around a field. This helps to ensure that a field is properly and efficiently covered during fertilization, planting, etc.

<img src=""./images/logo.png"" width=""176"" height=""176"">

## Current functionality
* Tracks user's path as they move. Path is plotted as a semi-transparent rectangluar polygon with a right/left offset as defined by the user. (An offset allows for the user to account for scenarios where the phone/tablet is not placed in the center of the tractor, but on the left or right side of the tractor). Location tracking can be paused and restarted.
* User can define the width of the rectangle in feet so that the width of the sprayer, planter, implement, etc. is represented by the plotted path.
* User can define the boundaries of their field by tapping locations along the perimeter of their field on the map (optional). This area is then highlighted on the main map.
* Location method can be chosen as:
    * GPS (uses only GPS satellite signals)
    * Fused Location (uses a combination of GPS, cell tower, and Wi-Fi signals)
* Location refresh rate can be chosen.
## Screenshots
Settings            | Drawing Field     | Field Plotted     | Plotting Path     |
:------------------:|:-----------------:|:-----------------:|:------------------:
<img src=""./images/settings.png"" width=""189"" height=""393""> | <img src=""./images/drawField.png"" width=""189"" height=""393""> | <img src=""./images/Ready.png"" width=""189"" height=""393""> | <img src=""./images/Path.png"" width=""189"" height=""393"">

## Downloading
To download a runnable version of the FARM app, click the [""release""](https://github.com/sheppardd1/FARM/releases) tab near the top of this page, and download the latest ""FARM.apk"" file Once this file is downloaded on your Android device, you can tap the file and the app will install on your device. This app is offered as-is with no guarantees about its functionality whatsoever. Use it at your own risk.
## TODO
* Track stats such as acreage covered and time elapsed.
* Give user ability to save defined field for later use.
* Give user to save progress so they can resume later.
* Allow user to choose colors of field area and path.
## Dependencies
* The app is dependent on the android-maps-utils library
* Link to documentation: 
    * https://developers.google.com/maps/documentation/android-sdk/utility/setup
    * https://github.com/googlemaps/android-maps-utils
* To import this library, use the 3rd set of instructions given at https://o7planning.org/en/10525/how-to-add-external-libraries-to-android-project-in-android-studio
## Changelog
* 16MAY2020 [version 1.01]: Added ability for user to offset the recieved GPS values. This can be used when the phone is being held on the side of the tractor instead of the center.
",1,1,1,0,farming,"[android, farming, gps-tracking, mapping]",00000
1271,unimergency,EthereansOS,EthereansOS,https://github.com/EthereansOS/unimergency,https://api.github.com/repos/EthereansOS/unimergency,🧛‍♂️.🦄 A frontend to redeem the Unimergency Funds: https://medium.com/dfohub/unimergency-done-ethitem-arriving-but-where-is-my-dragon-dfohub-weekly-oct-17-e51c82370cac,"<img src=""https://raw.githubusercontent.com/b-u-i-d-l/unimergency/main/assets/img/vampire1.gif?token=AE365SZTSMB2TPUJEXTBWQS7PSZFK"">

### you can vote from here: https://unimergency.dfohub.com

# To Our Dear DFOhub Community

By now, you are no doubt aware of the issue arising from Uniswap’s frontend routing. 

<a href=""https://medium.com/dfohub/a-black-hole-in-uniswap-v2s-front-end-router-is-draining-the-value-of-tokens-26f5a459b5d7"">A Black Hole in Uniswap V2’s Front-End Router Is Draining the Value of Tokens</a> 

We are now ready to take action and leave it behind us once and for all. 

<b>You are going to have the chance to vote on our path forward. But first...</b>

## Thank You For Your Ongoing Support

Throughout this difficult and stressful period, you have demonstrated patience and understanding, and we are grateful. A special thanks to CD, King Shroom, J_Der, Isolating, Suslik, Khonsu, Bbella, JoeGrech and others for helping us explain the problem to Uniswap’s team and bring it to the attention of the wider public.

We want to clarify that this is not a technical problem with smart contracts or anything of that nature. Rather, it is an adverse effect of Uniswap’s centralized design. 

They could resolve it by altering their custom routing system and asking the chain to swap via all possible pairs, instead of only via pairs tied to the six tokens they have arbitrarily chosen. This would not only put an end to vampire bot arbitrage, it would also democratize liquidity pools and thus provider fees; if swaps were not forced to route through a small sample of pairs, there would be no incentive to provide liquidity to those pools over others.

Unfortunately, Uniswap did not by and large even attempt to understand the problem affecting their protocol, let alone collaborate with us to improve it. 

So, for now, we are left to our own devices. And we have come up with our own solution.


# Our Plan

Since we published our article, the bots have multiplied and become more sophisticated.  Fortunately, we have figured out a strategy to escape. 

<b>We need to remove as much liquidity as possible from pairs untied to ETH, and migrate that liquidity to the UniFi-ETH, BUIDL-ETH and ARTE-ETH pairs.</b>

When we developed the $BUIDL, $UniFi and $ARTE smart contracts, we included an emergency function in line with our Responsible approach to DeFi. This function is a Call called “Flash to Wallet” that is perfect for emergency situations like this.

By calling this functionality, we can migrate the funds from current staking contracts—both the rewards and the locked tokens—and send them to others, where stakers can redeem them based on a snapshot that will be taken if the strategy is implemented, following a vote.

And we can do all of this without relying on any centralized third party. 


## What Does This Mean?

By allowing users to unstake their positions from Uniswap’s liquidity pools, we can drain all liquidity from the pairs the bots are using to exploit Uniswap’s routing.

Immediately after a YES vote, the liquidity will be removed, executing all of the actions necessary to implement our strategy. Stakers will be able to redeem their positions + redeemable rewards (accrued up until the emergency action execution block) + bonus reward (see below) all in a single transaction, via the UI at <a href=""https://unimergency.dfohub.com"">https://unimergency.dfohub.com</a>.

The faster we work to do this as a community, the better. To accelerate the transition, we are going to reward each staker who claims their current position within 48 hours with a bonus 50 BUIDL + 0.4 ETH (per each wallet with a contract), taken from the DFOhub wallet.


You can find the code here: https://github.com/b-u-i-d-l/unimergency

## And Then What?

To best elude the bots, all newly available staking positions will be tied to ETH pairs, like in the good old days of Uniswap V1. But we have also coded these new Liquidity Mining Contracts (v1.5) with cool new features:


### Multi-Reward
	
With the current contracts, DFOs could only reward staking with their own voting tokens. But with the v1.5 contracts, they can reward with any token they hold in their wallet! Don’t worry—if they don’t hold the amount of tokens required to pay out rewards, staking to earn them will not be allowed. Rewards will need to be locked in external contracts, so no one, even by voting, can touch them for the wrong reason.

#### Example
The DFOhub DFO (governed by BUIDL) will be able to reward UniFi-ETH stakers with BUIDL, or BUIDL-ETH stakers with UniFi.

### Unlock Function

With v1.5 contracts, positions can be unlocked and withdrawn by stakers anytime, as long as they pay back any claimed rewards, all of which will be forfeit in this scenario.

#### Example
Say you stake BUIDL in a three month position, and the total reward is 150 BUIDL. You can withdraw your position whenever you like before the three months is over, but if you’ve already claimed 50 in rewards, you’ll have to pay that back first to do so, and will not be able to earn the rest of the future rewards you otherwise would have.

### Liquidity Mining Block End

DFOs will be able to set a cutoff in blocks for new positions, so that new ones cannot be opened. Open positions will not be affected.

### Staker Flash-to-Wallet

This is basically the same as the emergency function we are using to unlock and migrate the liquidity, but it will be available to every single staker. By calling Flash to Wallet, stakers will be able to withdraw their earned rewards to their own personal wallet, but send the LP tokens and future rewards to the DFO wallet for emergency purposes. This way, the DFO can’t force the Flash to Wallet via voting (which could be abused by big holders), and every staker can make the choice for themselves.


Current stakers will be able to redeem the rewards their position has earned (along with their position and extra bonus reward) up to the block when the emergency move was executed (not the total reward they would have accrued by the original end of the staking period). 

This removes any incentive for stakers to maintain their current positions. If they want to continue earning rewards, they can open positions in the new staking contracts.


## New Liquidity Mining Rewards

The new BUIDL, UniFi and ARTE positions will only be for pairs tied with ETH. This is to incentivize liquidity and help ensure we won’t continue to be drained by vampire bots. By disallowing positions tied to pairs that are excluded by Uniswap’s routes, stakers will no longer be deprived of the trading fees they signed up for and which they deserve.

Due to the upcoming DFOhub v0.5 release, and the possible switch from the current voting tokens to new ones of the EthItem standard, these new liquidity mining tiers will all only be three months long. To increase the incentives to stake, they will also give more rewards relative to the old positions (and the new ones that will come after DFOhub v0.5).

> spoiler start

We will share the DFOhub v0.5 release plan sometime over the next few weeks. With v0.5, DFOs will be rebranded as EPOs (ETH Programmable Organizations)

v.05 will also come with Liquidity Mining 2.0, which will also be known as Programmable Liquidity Mining and include even more fancy new features.

These changes will reflect new and improved technology.

> spoiler end

Due to the fixed inflation swaps with UniFi and ARTE, BUIDL’s circ supply is currently 88,306 less than planned by the fair inflation strategy paper. Of that, 4,450 BUIDL will be sent to the contract that will reward current stakers, and 83,856 will be sent to the DFOhub wallet to increase the available rewards for staking buidl in the new staking contracts.

<b>NOTE: New ARTE staking positions will not be available until the release of EthItem, which due to the delay caused by this issue is now expected mid-October.</b>


## The New Liquidity Mining Contracts

All new contracts are for a three month period, and new positions can be opened for up to thirty days after they first become available.


### BUIDL-ETH Tier

##### If reward is chosen in BUIDL

-30% reward

-36,000 BUIDL total reward

-120,000 BUIDL max staked simultaneously

##### If reward is chosen in UniFi

-50% reward

-50,000 UniFi total reward

-100,000 BUIDL max staked simultaneously

### UniFi-ETH Tier

##### If reward is chosen in UniFi

-50% reward

-50,000 UniFi total reward

-100,000 UniFi max staked simultaneously

##### If reward is chosen in BUIDL

-30% reward

-30,000 BUIDL total reward

-100,000 UniFi max staked simultaneously

### uSD-USDC / uSD-DAI Tiers

##### If reward is chosen in BUIDL

-15% reward

-15,000 BUIDL total reward

-100,000 uSD max staked simultaneously

##### If reward is chosen in UniFi

-25% reward

-37,500 UniFi total reward

-150,000 uSD max staked simultaneously


Like the v1 mining contracts, all v1.5 contracts are redeemable on a weekly basis.

After the special three month reward period, rewards will be reduced to v1 levels.

We’ll also upgrade the DFOhub frontend with a new Farming section so that you can see every liquidity mining position available among all DFOs. 

We’ve also turned a joke of Ale’s (see the link below) into a real fork of Uniswap’s frontend. It will track DFO token trades more efficiently, and will also be available on the DFOhub GUI.

https://discordapp.com/channels/652132797032562689/701678117886099466/762690195753533500


## About The Proposal Vote

You can vote to agree or disagree with it by staking your BUIDL, UniFi and ARTE up until the end block (https://etherscan.io/block/countdown/11016666). If you have any questions, you can ask them here (https://discord.gg/FPcZpxB) and we will answer them ASAP.

Each token = one vote (1 BUIDL = 1 vote; 1 ARTE = 1 vote; 1 UniFi = 1 vote). When the end block ends, if the majority of staked tokens vote YES, the DFOhub team will immediately begin implementing the strategy to free us from Uniswap’s black hole once and for all.


## An Important Message From Ale

If you aren’t happy with this outcome, please remember it is not DFOhub’s fault (although it is only thanks to the quality of our smart contracts that we can do something about it).

The problem is with Uniswap's protocol. As soon as we understood this, we approached them, hoping they might work with us to find a solution. Instead, we were rudely dismissed. They would not even entertain the prospect that their protocol is flawed (even though it is, thanks to some centralized decisions viewable on their github repo), let alone try to help.

But using DFOhub's own funds, we have figured out our own solution and can resolve the problem (and reward stakers in the process) without relying on a third party, and without needing to compromise our long term strategy or the fair inflation of BUIDL, ARTE and UniFi. 

We delayed important projects like EthItem to deal with this, and are as annoyed as you are.

But we have worked very hard, and have found a way.	

### you can vote from here: https://unimergency.dfohub.com

",1,1,5,0,farming,"[farming, unimergency]",00000
1272,SteamRecentActivityHours,AtomSnow,N/A,https://github.com/AtomSnow/SteamRecentActivityHours,https://api.github.com/repos/AtomSnow/SteamRecentActivityHours,Launches all steam games and apps for farming Activity Hours on profile,"# SteamRecentActivityHours
Launches all steam games and apps for farming Activity Hours on profile.

Script I just made in node.js to launch all games and apps in steam library, results farming Activity Hours on Steam profile (1000+ Hours in a 3 days)

Make sure you installed steam-user from npm.

Start with command ""node ."" or ""node activity.js""

Edit the config, set up your username and password

![](cap1.gif)

Like this

PLEASE Read LICENSE File.

If this script is buggy, not my fault. Sometimes it's Package's fault or the runtime overloads.
",1,1,1,0,farming,"[farming, farming-activity-hours, fun, games, nodejs, not-useless, profile, steam, steam-account, steam-api, steam-client, steam-games, steam-user, steambot, steamcmd, steamworks]",00000
1273,farmhac,FunnyRain,N/A,https://github.com/FunnyRain/farmhac,https://api.github.com/repos/FunnyRain/farmhac,Farm Hours and Cards Steam,"# FarmHaC - Farm Hours and Cards Steam
### Ru: 
###### Установка: 
```bash
git clone https://github.com/FunnyRain/farmhac
cd farmhac
npm i
```
###### Настройка: (config.js)
```js
module.exports = {
    /** логин */
    login: `admin`,
    /** пароль */
    password: `admin`,
    /** game-id
    * Пример: https://store.steampowered.com/app/730/CounterStrike_Global_Offensive/
    * после app/... идёт game-id - 730
    * Также , можно поставить на фарм сразу несколько игр: 
    * gameid: [730, 570],
    */
    gameid: 730,
    /** SteamGuard - если на аккаунте он стоит - пишем true
    * Если нет - false
    */
    twoFA: false
}
```
###### Запуск 
```bash
node index.js
```
### Eng: 
###### Installing: 
```bash
git clone https://github.com/FunnyRain/farmhac
cd farmhac
npm i
```
###### Setting: (config.js)
```js
module.exports = {
    /** login */
    login: `admin`,
    /** password */
    password: `admin`,
    /** game-id
    * Example: https://store.steampowered.com/app/730/CounterStrike_Global_Offensive/
    * after the app/... there is a game-id - 730
    * You can also put several games on the farm at once:
    * gameid: [730, 570],
    */
    gameid: 730,
    /** SteamGuard - if it is on the account - write true
    * If not - false
    */
    twoFA: false
}
```
###### Launch 
```bash
node index.js
```",1,1,1,0,farming,"[cards, cards-game, farming, hours, steam, steam-api, steam-card-bot, steam-cards]",00000
1274,Farmer-go,namankhurpia,N/A,https://github.com/namankhurpia/Farmer-go,https://api.github.com/repos/namankhurpia/Farmer-go,An app made at App Challenge,"# Farmer-go
app challenge

An Android App that shows allows farmers sell their crops directly to FCI at a lower cost removing the middle man thereby helping the farmer getting more profit and earning maximum

",1,1,1,0,farming,"[farmers, farmers-markets, farming, fci, selling, selling-crops]",00000
1275,afisus-farming-barn,Gameengine1,N/A,https://github.com/Gameengine1/afisus-farming-barn,https://api.github.com/repos/Gameengine1/afisus-farming-barn,"Project Verse is being designed as a fully moddable Unity game in reference to Stardew Valley. All objects, events, worlds, cutscenes, and scripted actions will be implemented using the API.  The game itself will be taking place in the far future with heavy influences from the T.V. series Firefly. The player will crash into a small town, making friends with local villagers and while working on earning money. Eventually they will gain enough wealth to fix their ship and explore other worlds with different themes and quests all while promoting their budding enterprise of cargo trading, production, and crime.  Planned Features Crop Growing - plantable crops that grow over a given lifecycle and produce a sellable item Home Building - Add objects into home, decorative and functional Modular Ship Design - Build/Purchase upgrades to ship that reflect in its physical design Quests - Players will given quests to complete. Relationships - Players will be able to build friendships and and enemies with the NPCs. Morality - Players will be given choices over time that will change a players morality score and affect the lives of NPCs. Management - Players will be able to hire certain NPCS to do tasks for them, from handling crops, chopping trees, running cargo, or robbing ships. Automation - Players will slowly be able to add automation to their enterprise. Taking inspiration from Factorio with transportation and processing. With this, I want controllers to manipulate these machines to be fully programmable, presumably via LUA or possibly a Zachtronics inspired psuedo-assembly. However I'm uncertain how feasible this will be. Trading - There will be an influenceable economy that will affect what and how the player trades items and moves cargo. A lot more - I am planning on updating this readme over time.","{'message': 'Not Found', 'documentation_url': 'https://docs.github.com/rest/repos/contents#get-repository-content'}",1,1,2,0,farming,"[a, farming, games, rare, very]",00000
1276,Growbotics,Tsmorz,N/A,https://github.com/Tsmorz/Growbotics,https://api.github.com/repos/Tsmorz/Growbotics,"Open-source mobile robot with a parallel link manipulator to aid in labor intensive farm activities. The goal is to assist with transplanting seedlings, monitoring plant health, and improving time to harvest estimates.","# OSCAR
**O**pen-**s**ource **C**ommunity **A**griculture **R**obot \
I intend for OSCAR to be an affordable farming assistant to help grow fresh produce on a local scale.


## Youtube video: [mobile robot planting seedlings from a greenhouse]()
[comment]: <> (https://www.youtube.com/watch?v=dQw4w9WgXcQ)

<img src=""https://user-images.githubusercontent.com/83112082/158695710-409a7582-68b4-4f60-8c9a-1ad10f0847a4.png"" width=""100%"" height=""100%"">
<img src=""https://user-images.githubusercontent.com/83112082/158697429-a6c9f0c1-c2a6-409a-b8f7-cdcd9ff8d750.png"" width=""70%"" height=""70%"">

# Table of Contents
[Design](#Design) \
[Math](#Math) \
[Electronics](#Electronics) \
[Materials](#Materials) \
<a name=""Design""/>
<a name=""Math""/>
<a name=""Electronics""/>
<a name=""Materials""/>

## Design
The following section describes the design of OSCAR and lists all original CAD files and STL files ready for a 3D printer.

Linkage Design Tool: [link](https://www.marginallyclever.com/other/samples/fk-ik-test.html)

CAD files: [link](https://cad.onshape.com/) \
All 3D models will be available for download as I keep progressing. Anyone with a free Onshape account can download them. If you have troubles getting access, please send me an email.

3D print files: [link](https://www.eiger.io/)

Soft Gripper:\


## Math
![ik_fk_planar_ik](https://user-images.githubusercontent.com/83112082/158498262-d42ebefd-7650-441f-95d4-f40f9f91df03.gif)\

Forward Kinematics:
Each set of joint angles maps to a unique end effector position.\
The nonlinear mapping is calculated through the following equations:\
<img src=""https://render.githubusercontent.com/render/math?math=e^{i \pi} = -1"">

Inverse Kinematics:

Control Systems:


## Electronics
Wiring diagram for the manipulator and mobile robot platform. THIS IS A PLACEHOLDER\
![wiring](https://user-images.githubusercontent.com/83112082/158497874-c0ef5861-e687-4c1e-a27b-e2a09aff9d5e.jpg)


## Materials
The table below details all necessary parts to build your own farm robot for personal use. Please send me any suggestions that you think would improve the design or lower the cost.

Prototype Version
| Item                | Quantity       | Cost (each)          |
| ------------------- |     :---:      |          ---:        |
| [Ball joint](https://www.tqrcracing.com/shop/product_list.asp?s_cate_id=1104)      | 16     | $1.75    | 
| [Shaft adapter](https://www.pololu.com/category/137/pololu-universal-mounting-hubs)     | 4       | $$     |
| [Stepper Motor](https://www.digikey.com/en/products/detail/pololu-corporation/1208/10449951)     | 4       | $     |
| [Stepper Driver](https://www.pololu.com/category/212/tic-stepper-motor-controllers)     | 4       | $     |
| [Springs](https://www.mcmaster.com/springs/spring-type~extension/extension-springs-with-hook-ends-7/system-of-measurement~metric/)    | 16       | $      |
| [Carbon Rod]()     | 3.5m       | $$      |      |
| [Limit Switch]()     | 8?       | digikey      |
| [3D prints]()     | lots       | Markforged      |

Production Version
| Item                | Quantity       | Cost (each)          |
| ------------------- |     :---:      |          ---:        |
| [Stepper Motor](https://www.digikey.com/en/products/detail/pololu-corporation/1208/10449951)     | 4       | $     |
| [Springs](https://www.mcmaster.com/springs/spring-type~extension/system-of-measurement~metric/)    | 16       | $      |
| [Carbon Rod]()     | 3.5m       | $$      |      |
| [Gears - small](https://www.mcmaster.com/3598N276/)    | 4 - left       | $19.74 |
| [Gears - large](https://www.mcmaster.com/3598N299/)    | 4 - right      | $29.81 |
| [Tap set screw]()     | 8       | machine shop      |
| [Optical Encoder]()     | 4       | digikey      |
| [Limit Switch]()     | 8?       | digikey      |
| [3D prints]()     | lots       | Markforged      |

## Assembly
The following instructions detail the logical assembly to build your robot.
1. These
2. are
3. the
4. necessary
5. steps


## Installation
Use the following commands to install the software on your Jetson Nano.
```
$ pip install oscar
```


## Planting Materials
The following materials are recommended planting supplies that fit with the robots specifications. \
http://www.jiffypot.com/en/products/jiffymultigrow.html
",1,1,1,3,farming,"[delta-robot, environmental-monitoring, farming, ipynb-jupyter-notebook, jetson-nano, python, robotics, stereo-vision]",00000
1277,Farmer-go,namankhurpia,N/A,https://github.com/namankhurpia/Farmer-go,https://api.github.com/repos/namankhurpia/Farmer-go,An app made at App Challenge,"# Farmer-go
app challenge

An Android App that shows allows farmers sell their crops directly to FCI at a lower cost removing the middle man thereby helping the farmer getting more profit and earning maximum

",1,1,1,0,farming,"[farmers, farmers-markets, farming, fci, selling, selling-crops]",00000
1278,bitburner-hacknet-bot,michalpostek,N/A,https://github.com/michalpostek/bitburner-hacknet-bot,https://api.github.com/repos/michalpostek/bitburner-hacknet-bot,Farming bot for Bitburner game,"<h1>Hacknet Bot</h1>

<p>Farming bot for <a href=""https://store.steampowered.com/app/1812820/Bitburner/"">Bitburner</a> game.</p>
<p>You can check this guide on <a href=""https://steamcommunity.com/sharedfiles/filedetails/?id=2719939448"">Steam</a>.</p>

<h2>How it Works</h2>

<p>Bot takes the following steps</p>
<ol>
  <li>Checks cost and <i>production growth</i> of all the possible upgrades</li>
  <li>Calculates <i>profitable ratio</i> of each upgrade</li>
  <li>Sorts elements by ratio descending</li>
  <li>Chooses the first element</li>
  <li>Checks if you can purchase upgrade now, if not, it waits to collect money</li>
  <li>Checks if you can buy new node in less than 30 seconds (you can customize this time), if so, it buys it</li>
</ol>

<p><i>Profitable ratio</i> = Production growth / upgrade cost</p>
<p><i>Production growth</i> = Production after upgrade - current production</p>

<h2>How to use</h2>

<p>Take the following steps.</p>
<ol>
  <li>Run the terminal</li>
  <li>Type <code>nano hacknet-bot.js</code></li>
  <li>Copy the code from main.js file and paste into file you just created</li>
  <li>Save the file</li>
  <li>Back to the terminal</li>
  <li>Type <code>run hacknet-bot.js</code></li>
</ol>

<p>You can customize the time of waiting for purchase node (by default 30s) by passing an additional script argument</p>
<code>
  run hacknet-bot.js 120
</code>
",1,1,1,0,farming,"[bitburner, bot, farming, game, javascript, steam]",00000
1279,ShambaSmart_2.0,OliverSolomon,N/A,https://github.com/OliverSolomon/ShambaSmart_2.0,https://api.github.com/repos/OliverSolomon/ShambaSmart_2.0,A mobile application platform to control farm IoT devices with purpose of automation.,"# shamba_smart

A mobile application platform to control farm IoT devices with purpose of automation.

## Todo
- [x] Graphs for statistics
- [x] Add task Scheduling for automations
- [ ] Refactor code for reusability and scalling
- [ ] Accounts and authentication using Firebase
- [ ] Connect Firebase db",1,1,2,0,farming,"[farming, iot-platform, stm32f103]",00000
1280,Additional-Worms,bioastroiner,N/A,https://github.com/bioastroiner/Additional-Worms,https://api.github.com/repos/bioastroiner/Additional-Worms,"adds worms, and adds more","# Additional Worms

A mod about worms , and more worms , and more...

based on **ActuallyAddition**'s **Worms**

**Status** : ***mid** development*
### Feutures

* *comming soon!*


### Permission from AA's Devs

* Yes textures would in near future completely change and since our mod is no longer an addon to Actually Addition it is better to change the name as well as leisense in the near future but an unknown date.

## TODOs

### main stuffs

- [x] bringing back old worms
- [x] make a ground work for adding additional worms
- [x] Digester Worm  (Digest Foods to better one more eadable foods)
- [ ] add Configs
- [x] get Permission from AA's Devs
- [x] extract Digestive trend of worms and perDigest your food or fuels
- [x] make worms more unique than the act.addition's worms
- [ ] new textures

### Worm list

- [x] Growth Accelator Worm
- [ ] Flower Generator Worm (Botanic Worm)
- [x] -Worms that help in gathering of resources
- [x] Miner Worm (a worm that mines blocks)
- [x] Enhanced Worm (a worm with extended range and abilities) 
- [x] Harm Worm (a worm that damages entities within an area) -now it is done with setting a worm's property to hostile
- [ ] Regenerating worm
- [ ] Nesting Worm (a way to make more worms)
- [ ] Dendritic Worm (tree worm basically)
- [ ] LeatherWork Worm
- [ ] Armorer Worm


",1,1,1,0,farming,"[aa-devs, additional-worms, adds-worms, art, farming, forge, java, java-8, mine, minecr, minecraft, mining, mod-development, resource, tech, worm]",00000
1281,FarmHand,Ebullioscopic,N/A,https://github.com/Ebullioscopic/FarmHand,https://api.github.com/repos/Ebullioscopic/FarmHand,"A user-friendly app to help connect Consumers and Farmers directly by eliminating the need of middlemen. Enhanced with Gordon - our AI ChatBot trained to give recipe suggestions, nutritional facts and everything related to food. Plant Health Detection system helps farmers monitor their crop health using CNN.","{'message': 'Not Found', 'documentation_url': 'https://docs.github.com/rest/repos/contents#get-repository-content'}",1,1,1,0,farming,"[ai, chatbot, cnn, farming, mysql, user-interface]",00000
1282,hipsterveggies,jasdumas,N/A,https://github.com/jasdumas/hipsterveggies,https://api.github.com/repos/jasdumas/hipsterveggies,intelligent locally-grown subculture 🍅🌶️🥕,"# hipsterveggies
intelligent locally-grown subculture
",1,1,1,0,farming,"[data-science, farming, gardening]",00000
1283,Uprooted2D,HauntedBees,N/A,https://github.com/HauntedBees/Uprooted2D,https://api.github.com/repos/HauntedBees/Uprooted2D,A turn-based farming RPG.,"# Uprooted: Meal Replacement Game
## wut
A turn-based farming RPG.
## disclaimer
There is some strong language in the game's text, as well as in some of the source code because I am 12 years old and think seeing a rabbit say bad words is funny.
## license
This game's source code is licensed with the [GNU Affero General Public License](https://www.gnu.org/licenses/agpl-3.0.en.html). All art assets are licensed with the [CC BY-SA 4.0 License](https://creativecommons.org/licenses/by-sa/4.0/legalcode).
## why
Sometimes I make choices. They aren't always good ones.
## building
Running a `npm install` should get you pretty much everything you need to build this. It's all node based. You'll need [ffmpeg](https://ffmpeg.org/) for one of the (optional) build steps, though. All build scripts are in the **tools** directory.

### Build Scripts

#### BuldCollisions.js
Builds collision data based off the files in **tools/collisionimg**, which are in turn generated from **BuildImages.js**. **tools/cave.png** is also converted into collision data.

Collision datas are arrays of bools, where `true` means a tile is solid and cannot be walked through. In the image files, a tile will be read as `true` if the corresponding pixel is `#FF0000` and `false` otherwise.

Cave Collision is more complicated and the structure is described in the comments of the `BuildCaveCollisions` function.

#### BuildEnemyAttacks.js
Builds enemy attack flows based off the files in **tools/enemyjson**, which are in turn generated with [kelly](https://github.com/HauntedBees/kelly).

#### BuildImages.js
Generate PNGs from the contents of the **tools/ora** folder. With no parameters passed it should generate every image needed for the game.

The following arguments can be supplied (all `.ora` files referenced are in `tools/ora`):

 - `bg`: Copies all layers from `combatbg.ora` into separate PNGs in `img/bgs`.
 - `profile`: Copies all layers from `portraits.ora` (except ones with names starting with ""_"") into separate PNGs in `img/profiles`.
 - `maps`: Goes through all files in `tools/ora/maps` and populates `img/maps`, `img/fg`, and `tools/collisionimg` based on their layers. Maps are generated from all layers not prefixed with `_` except `Foreground` and `Collision`. Foregrounds are generated from the `Foreground` layer, and collision images are generated from the `Collision` layer. If a map has cover layers, they should be named with the `_Cover:xxx` convention and specified in the `covers` variable in the `RipMaps` function in the format of `""mapName"": [""xxx""]`. A few custom rules exist for handling the `northcity` and `hq_IB` maps.
 - `cavecollisions`: Builds `tools/cave.png` used for `BuildCollisions.js`.
 - `basics`: Equivalent to passing all of the `tools/ora` filenames at once (see next item).
 - Pretty much any of the files in `tools/ora` without their file extensions: Copies the `Content` layer of each file (ex. `sheet` maps to `sheet.ora`) into `img/`.

**TODO: *shop_XXX.ora*, *logo.ora*, *colorPreview.ora*, and *endcredits.ora* files still require manual export.**

#### BuildMonochrome.js
Copies all images from **img** into **imggb** after converting them to a 4-color monochrome color scheme.

**TODO: Sprites *FarmInfo%*, *MetalInfo%*, *BtlSel%*, *CornerBtn%*, and *%Sel%* must be manually set to the maximum brightness.**
**TODO: Sprites *%cursor%.%* and *optTile* must be manually corrected.**

#### BuildSpreadsheets.js
Generates game data from the spreadsheets in the **tools/ods** folder. With no parameters passed it should generate all data needed for the game.

The following arguments can be supplied (all `.ods` files referenced are in `tools/ods`, all `.js` files referenced are in `js/gamedata` unless otherwise specified):
 - `T`: Convert rows from `Details_Text.ods` into the `fulltext` map in `text.js`. Spreadsheet is one header row and then several rows with the following columns:
	- `Key`: The reference key for the line of text.
	- `noTrim`: If not set, the end of the line of text will be trimmed off.
	- `profile`: The name of the profile image to show if this text is displayed in world map dialogue.
	- `type`: How the text is used in game. For reference; not used in-game.
	- `en-us`: The English translation of the text.
	- `en-us-sfw`: The profanity-free English translation.
	- `any other language`: Other languages can be defined after `en-us` and `en-us-sfw`, one per column. If a value does not exist in this language, the game will default to the `en-us` translation. **Note:** there is no way to change languages in-game at this time.
 - `S`: Converts rows from `Details_Cutscenes.ods` into the `scripts` map in `cutscenes.js`. Spreadsheet is one header row and rows with `Key` and `Action` columns. `Key` is the in-game reference key, and `Action` is a `&`-separated list of commands that are parsed in `js/worldmap/cutsceneParser.js`.
 - `C`, `Q`, `F`, `E`: Rips crops, equipment, fixtures, and enemies into their respective files in `js/gamedata`.
 - `P`: Converts cells from `Details_BigSprites.ods` and `Details_SmallSprites.ods` into the `sprites` map in `spritedata.js`. For each cell with coordinates `(x, y)` and a value `v`, they will be converted to the a key-value pair of the format `""v"": [x, y]`, or `""v"": [x, y, true]` for cells ripped from `Details_BigSprites.ods`. 

#### Cordova.js
Run with `node tools/Cordova.js ARG` where `ARG` can be:
 - `copy`: Copies all production files to the **cordova/www** folder for building with Cordova.
 - `build`: Build, sign, and zipalign the APK.
 - `all`: Copy and build.

For the `build` step, you will need to create a `tools/creds.js` file that looks like this to package your Cordova app:
```js
module.exports = {
    store: ""full path to your .keystore file"",
    name: ""your key name"",
    pass: ""your store password"",
    jarsigner: ""full path to your jarsigner executable, or just 'jarsigner' if it's in your PATH"",
    zipalign: ""full path to your zipalign executable, or just 'zipalign' if it's in your PATH"",
};
``` 

#### FormatImages.js
Generates upscaled spritesheets for optional in-game graphical filters. Requires [ffmpeg](https://ffmpeg.org/) for `hq4x` and [scale2x](https://www.scale2x.it/) for `s4xe`. You may need to update the `s2xpath` variable for `s4xe`.

#### Package.js
Concatenates all source files into one **out.js** file. Calling it with the `min` argument will also minify it.

#### gulpfile.js
Calling `gulp watch` will ensure `Package.js` is executed every time a source file is updated.

#### manual/BuildManualParts.js and manual/BuildManual.js
These will create the instruction manual/strategy guide, with most data pulled straight from the game's code. Run `BuildManualParts.js` to populate the `manual/parts` folder with relevant metadata needed to generate the guide, and run `BuildManual.js` to populate the `manual/out` folder with the `manual.html` file and relevant images in the `manual/out/assets` folder.

All enemies, crops, fixtures and equipment are pulled from the game code. The instruction manual is hard-coded in `manual/parts/template.html`. Much of Calsotte's buffs and the Locations are hard-coded in the `BuildManual.js` file, as are the names of specific achievements and enemies for the purposes of skipping some and marking them as spoilers. Pretty much all map/level data is hard-coded.

Running `node BuildManual.js maps` will create the map images used in the guide - this should be done the first time you run this, but won't be needed afterwards unless you change how the maps look.

### Standard Build
Run `node tools/Package.js` to build everything. All standard spritesheets and game datas are pre-built in the the git repository, but if you have made changes, you will need to run the appropriate script described above. Likewise, if you wish to include the filtered sprites, you will need to run `node tools/FormatImages.js`. After building, run `index.html` in your browser to play.

### Android Build
Run `node tools/Cordova.js all` or if you want to do the building manually:

```
node tools/Cordova.js copy
cd cordova
cordova build android --release
cd platforms/android/app/build/outputs/apk/release
jarsigner -verbose -sigalg SHA1withRSA -digestalg SHA1 -keystore [yourKeyStore] app-release-unsigned.apk [yourKey]
zipalign -v 4 app-release-unsigned.apk Uprooted.apk
```

If you want to make a version for other Cordova platforms like iOS or something, check out Cordova's documentation for how to add new platforms to a project. There is little custom Cordova code, so it is unlikely that anything in the existing codebase is Android specific.

### Electron Build
Complete all the Standard Build steps above.
**Dev Build:** `npm start`
**Package Only:** `npm pack`
**Package for Distribution:** `npm run dist`

## want to make changes?
The game isn't even done yet hold your horses yo.

## additional assets
Pretty much all sound effects are taken from [512 Sound Effects (8-Bit Style)](https://opengameart.org/content/512-sound-effects-8-bit-style) by [Juhani Junkala](https://juhanijunkala.com/) and are licensed under the [CC 1.0 Universal License](https://creativecommons.org/publicdomain/zero/1.0/).",1,1,3,29,farming,"[farming, game-development, rpg]",00000
1284,Agri_solution_team8_SE_Aug_2019,vorabrijesh,N/A,https://github.com/vorabrijesh/Agri_solution_team8_SE_Aug_2019,https://api.github.com/repos/vorabrijesh/Agri_solution_team8_SE_Aug_2019,Question/Answer platform for farmers,"# Agri_solution_team8_SE_Aug_2019
Question/Answer platform for farmers

### Project: Agri Solution

### Team no: 8

### Team members: Vora Brijesh, Nitesh Kumar, Mithlesh Kumar

### System Requirement:

Xammp or Wamp server, browser, Mysql database.

### How to Run:

Keep our project folder into htdocs folder of xammp or www folder of wamp.
Then run below files sequentially into the browser,

1. db_create.php which creates the database into your system.
2. db_create_table.php which initializes and creates table into database.
3. Open index.html in the browser which is the main page of our project.

### Github link:
https://github.com/vorabrijesh/Agri_solution_team8_SE_Aug_2019

Contribution is same for all of the 3 students. We all 3 sat together for project.


- Jai Javan, Jai Kisan.
",1,1,2,2,farming,"[farming, mysql, php, question-answering, software-engineering, website]",00000
1285,orgamix-backend,orgamix,orgamix,https://github.com/orgamix/orgamix-backend,https://api.github.com/repos/orgamix/orgamix-backend,orgamix backend; developing open source for indoor gardening/farming kits,"# orgamix-backend
orgamix backend

Welcome to the Orgamix open source project. our website is https://orgamix.life
We develop software for indoor gardening/farming kits. 

if you would like to contact us, please email to: contact@orgamix.life

",1,1,2,24,farming,"[farming, gardening, indoor-farming, indoor-gardening, node]",00000
1286,farm-tracker,Dorcy64,N/A,N/A,https://api.github.com/repos/Dorcy64/farm-tracker,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1B2:5A86:2BA0C83:597FBD6:652240AA.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,farming,"[N, /, A]",00000
1287,drop-farmer,Soryyyn,N/A,https://github.com/Soryyyn/drop-farmer,https://api.github.com/repos/Soryyyn/drop-farmer,Application to farm your stream drops 🎁🧑‍🌾,,1,1,0,10,farming,"[cron, desktop-app, electron, farming, puppeteer, react, stream, typescript, webpack]",00000
1288,ChickensAndBees,johnnyawesome,N/A,https://github.com/johnnyawesome/ChickensAndBees,https://api.github.com/repos/johnnyawesome/ChickensAndBees,A bunch of Chickens - They look for Food and eat it when they find some. And there are Bees! Written in P5JS. ,"# 🐔Chickens and Bees🐝
A bunch of Chickens - They look for Food and eat it when they find some. And there are Bees! Written in P5JS.

![ChickensAndBees](https://github.com/johnnyawesome/ChickensAndBees/blob/main/ChickensAndBees/DemoImages/ChickensAndBees.gif?raw=true)

## Copyright & Attribution

**Chicken**: Author: [daneeklu](https://opengameart.org/node/11629) License: [GPL 2.0](https://creativecommons.org/licenses/by/3.0/) and [CC-BY 3.0](https://www.gnu.org/licenses/old-licenses/gpl-2.0.html) /
**Bee**: Author: [ChickenTeddy](https://opengameart.org/content/16x16-pigeon-shrimp-bee-snail-pack) License: [CC BY 4.0](https://creativecommons.org/licenses/by/4.0/) /
**Grass**: Author: [Invincible](https://opengameart.org/content/grass-tiles-0) License: [CC0](https://creativecommons.org/publicdomain/zero/1.0/) /
**Fence**: Author: [William.Thompsonj](https://opengameart.org/content/16x16-fence-and-well-tiny-16) License: [CC0](https://creativecommons.org/publicdomain/zero/1.0/) /
**Flowers**: Author: [vassago-labs](https://vassago-labs.itch.io/just-a-few-flowers) License: [CC BY-SA 4.0](https://creativecommons.org/licenses/by-sa/4.0/) /
**Grain / Cereal**: Author: [ScratchIO](https://opengameart.org/content/2d-cereals) License: [CC0](https://creativecommons.org/publicdomain/zero/1.0/)

## About the Project

The Code is written in [P5JS](https://p5js.org/). I also coded a [Squirrel 🐿️ that lives in the Forest](https://github.com/johnnyawesome/Squirrel) and searches for Acorns, using the [P5.Play-Library](https://p5play.org/) which in turn uses the [Planck Physics Engine](https://piqnt.com/planck.js/).

## Initialization

- Generate a Background out of Grass-Tiles
- Generate a number of Chickens (You can change ""numberOfChickens"" to get more / less Chickens)
- Generate a number of Bees (You can change ""numberOfBees"" to get more / less Bees)
- Generate a random Pattern of Plants / Flowers
- Generate Food-Piles at random Places
- Draws the Fence

## 🐔The Chickens🐔

- The Chickens will search for Food
- When they find Food, they'll eat it
- When the current Food is gone, the Chicken will search for more Food
- Sometimes a Chicken will take a short break, standing still, to be more natural-looking

## 🐝The Bees🐝
- The Bees fly all over the screen, from right to left 🐝
- Bees fly at random Speeds on their X-Axis. Some are slower, some are faster
- To look more natural, the Bees oscillate on their Y-Axis
- When a bee hits the left edge of the Screen, it dies
- A new Bee is generated in it's place

## 🌾The Food🌾

- Food will spawn in random Locations
- When a Food-Pile is eaten, a new Food-Pile will spawn at a new random Location


## Related Projects

I also coded a [Pixel-Art Squirrel 🐿️ that lives in the Forest 🌳 and searches for Acorns 🌰](https://github.com/johnnyawesome/Squirrel) using [P5JS](https://p5js.org/), the [P5.Play-Library](https://p5play.org/), which in turn uses the [Planck Physics Engine](https://piqnt.com/planck.js/).

![Squirrel](https://raw.githubusercontent.com/johnnyawesome/Squirrel/main/Squirrel/DemoImages/Squirrel.gif)
",1,1,2,0,farming,"[animation, animations, animations-demostration, farm, farming, javascript, javascript-animation, p5, p5js, p5js-animation, p5js-animations, p5js-game, p5js-visualization, pixel-art, pixelart, processing, processing-animation, sprite, sprite-animation, spritesheet]",00000
1289,Farmers-of-Capitalism-OLD,Prophets-of-Profit,Prophets-of-Profit,https://github.com/Prophets-of-Profit/Farmers-of-Capitalism-OLD,https://api.github.com/repos/Prophets-of-Profit/Farmers-of-Capitalism-OLD,"The second failed attempt to make the game Farmers of Capitalism. A game about farming, power, and aliens.","{'message': 'Not Found', 'documentation_url': 'https://docs.github.com/rest/repos/contents#get-repository-content'}",1,1,4,0,farming,"[aliens, capitalism, d, dlang, farm, farmers, farming]",00000
1290,PipelineFoundations,SwimlaneBuilder,N/A,https://github.com/SwimlaneBuilder/PipelineFoundations,https://api.github.com/repos/SwimlaneBuilder/PipelineFoundations,"From Maslow-based physical, emotional, mental, aspirational wants to fulfillment needs, industry pipelines need good engineering and resiliency to protect and grow the innocent among us. Pipeline foundations is an A-Z solution for off the grid living, and collections of a vision of the past present and future.  A peaceful safe society, with passion mystery and adventure. This might turn into a short story. OR many stories.","# PipelineFoundations
From physical, emotional, mental, aspirational wants to fulfillment needs, industry pipelines need good engineering and resiliency to protect and grow the innocent among us. Pipeline foundations is an A-Z solution for off the grid living, and collections of a vision of the past present and future.  A peaceful safe society, with passion mystery and adventure. This might turn into a short story. OR many stories.
",1,1,1,0,farming,"[camping, childrens-books, emotional-intelligence, employment, farming, holistic-health, income, job-insurance, mental-health, off-the-grid, retirement-planning, survival, transportation, ubi, uwi, zombies]",00000
1291,evo,manifoldfinance,manifoldfinance,https://github.com/manifoldfinance/evo,https://api.github.com/repos/manifoldfinance/evo,Embedded Volumetric Optionality Protocol: Auto Price Stabilizing protection for almost any ERC-based asset,"<br>

<img src=""https://raw.githubusercontent.com/sambacha/evo-whitepaper/master/cover_img.png"">
<br>

| EVOProtocol | Embededd Volumetric Optionality Protocol | v1.0.0+0 |
| ----------- | ---------------------------------------- | -------- |


## Embedded Volumetric Optionality Protocol

### Abstract

EVO Protocol is a dynamically adjusting ERC-compatible protocol that adjusts based on _volume_
<br>

EVO tokens are minted and burned on-demand by deposit and withdraw operations directly via the contract.

> Initiated Protocol Operations

-   Deposit <br>
-   Withdraw <br>
-   Transfer <br>

These operations contribute to `transfer rates`.
`Transfer rates` are tracked both in `aggregate` and `individually` (i.e. per address).
The `period of time` for tracking is the last `25 days`.

### Time and Period

> [V2 Upgrade will include upgrading the time and date to a new libray](https://github.com/bokkypoobah/BokkyPooBahsDateTimeLibrary)

Time and Period should be defined on a `per market` basis. Meaning you should choose what is computed to be the _optimal_ time period based on historical analysis.

Multiples of 4,6, etc are suggested

-   For Example
    `25` days has`36000 minutes`, which divided by `block_time=4` gives `9000`

GasEVO is determined both in `aggregate` (dynamically) and `individually` for each address based on transactional (i.e. volumetric transactional information) stored and updated through the smart contract during the previous transactions.
<br>

All three operations such as `deposit`, `withdraw` and `transfer` can equally contribute to the `transfer` rates that are tracked totally and individually(as per holder) by the smart contract for the period of the last `25 days`. <br>
The token price is determined dynamically(and individually for each holder) based on the information stored or updated in the smart contract during previous transactions:

![](https://raw.githubusercontent.com/gist/sambacha/2cd97b61b0a29dd18f0d12fb0029ee73/raw/67c4785230a544558263beb4ede534ad2b3a0bc4/equation.svg)

## Utility

<!-- EN: specifcaiton -->
<!-- DE: spezifikation -->

> Note: This is specific to the implementation based on the reference specification , as described in the whitepaper (./latex/\*_/_.tex)

Given enough liquidity, `GasEVO` has a way to compute the `exchange rate` towards the base instrument (ETH). <br>

Like this, movements of the bigger or significant volumes can be interpreted as market trends (i.e. `gwei` pricing.) <br>

By utilizing small volume movements and disincentivizing the larger ones without compensation to holders every exceeding `bulge bracket` trade of the token is tracked by the smart contract and higher ""transactional"" fees are applied (re: withdraw, or 'consumption').

> Note: We describe `transactional` fees sometimes as an `interest` fee. This language is marked as _depreciated_ as this confers and/or implies a rate of return that is somewhat deterministic, this however is not the case per se as it is entirely possible that all trades could be below the `transfer rate` during a period/epoch.

Transference of funds _below_ daily volume threshold does not impose any interest fee. <br>

When the threshold has been exceeded some percentage of tokens gets burned, for the transfer, for `deposit` or for `withdraw` of the base instrument (ETH). <br>

Thresholds are tracked individually per address as the average rate and have a function by which they operate on. <br>

---
title: 'EVO Protocol Reference Implementation Overview'
---

EVO Protocol Reference Implementation Overview
===
> [time=Wed, Oct 7, 2020 4:07 AM]




## Table of Contents

[TOC]


### Protocol Overview

EVO tokens are minted and burned **on-demand** by deposit and withdraw operations directly via the contract.

#### Initiated Protocol Operations

* Deposit
* Withdraw
* Transfer

These **operations** contribute to the *transfer rates*. Transfer rates are tracked both **in aggregate** and **individually** (i.e. *per address*). The *period* of time for tracking is the last `25 days`

> 25 days has `36000 minutes`, which *divided by* `block_time=4` gives `9000`

**GasEVO** is determined both in aggregate (dynamically) and individually for each address based on transactional (i.e. volumetric transactional information) stored and updated through the smart contract during the previous transactions. 


All three operations such as deposit, withdraw and transfer can equally contribute to the transfer rates that are tracked totally and individually(as per holder) by the smart contract for the period of the last 25 days.The token price is determined dynamically(and individually for each holder) based on the information stored or updated in the smart contract during previous transactions:


{equation.gasevo}

$$
P_{t+1}(h, a):=\sqrt{\frac{D_{t}}{S_{t}}}+I_{t+1}^{\prime}(h, a)
$$



The above equation will compute the price for a holder $$h$$ to purchase a certain amount of `EVO` tokens in exchange for a base deposit in `ETH/WETH` at the given discrete time - $$t +1$$ , where $$Dt$$ stands for the deposit of `ETH` in the smart contract at previous time - point and $$St$$ stands for the total supply of `EVO` tokens so far.

The first component with the token - base ratio $$Dt/St$$ under the square root is the *indicative price* and **does not depend on the purchase/transferred** amount, ``$a$.``

Ergo, the component $$I_{t+1}^{\prime}(h, a)$$ is called the *discounted interest rate* and it can grow *proportionally* to a within a range of $$[0, 0.24]$$ of ``$$a$$.``

Higher interest payouts can slow down, **deaccelerate**, the price movement. Interest rate determines how fast, or **accleration**, such price can change depending on the market demand & supply pressure for EVO-based tokens. Interest[#] is computed individually for each EVO holder. 

*Note* that all interest payments are contributed to the same common deposit `Dt` on the smart contract, which is supporting the indicative price. This means that interest is shared by all holders that *choose not to trade their tokens* at the moment.

An ERC20 smart contract will contain the information about the balance of every address,

##### Address Information (i.e. wallets)

$$B(h) s.t. Bt + 1(h, a): = Bt(h) + a$$.

In addition to the individual balances, GasEVO contract keeps track about how much each holder has transferred in the last epoch (i.e. 25days)

##### Total average transfer rate for an address

$$avg(Rt + 1(h, a)): = avg(Rt(h)) + a$$

##### Total average daily transfer rate for all holders 
$$avg(R¯ t + 1(h, a)): = avg(R¯t(h)) + a$$.


### Calculations
More formally calculation of the individual interest rate as well as the applied ownership discount can be described in following steps:

For: $$l := 4 , m := 26$$ are the *low* and *high* *transfer rate constants* and 

$$\beta=\frac{\operatorname{avg}\left(B_{t+1}(h, a)\right)}{S_{t+1}}$$, the *future balance ratio*, we resolve $$\tau=\frac{\operatorname{avg}\left(R_{t+1}(h, a)\right)}{\operatorname{avg}\left(\bar{R}_{t+1}(h, a)\right)}$$ is the *future transfer ratio* and $$\theta=\frac{B_{t}(h)}{S_{t}}$$ is the ownership ratio at a *discrete point in `block time`* then we resolve the **interest rate**;

$$
P_{t+1}(h, a):=\sqrt{\frac{D_{t}}{S_{t}}}+I_{t+1}^{\prime}(h, a)
$$

thereby applying the ownership ratio for discount 

$$l_{t+1}^{\prime}(h, a):=\frac{a \times \sqrt{l * \max \left(\min \left(\theta, l^{2}\right), 1\right)}}{100}$$

whereas %$$I$$ is the *discount**, thereby computing the *discounted interest* as,

$$I_{t+1}^{\prime}(h, a):=\max \left(I_{t+1}(h, a), l_{t+1}^{\prime}(h, a)\right)-l_{t+1}^{\prime}(h, a)$$

Price dynamics of equation (1) depends on the transactions volume conducted by all of the involved market participants and bounded by $$O(sqrt(n))$$.

Therefore it can be expected that the demand for EVO Protocol based tokens like GasEVO will be able to represent the *demand* for the value storage, whereas GasEVO represents the value of storage as a derivative function of the underlying asset, Ethereum (i.e. gwei, or as a fixed unit of account for contracting)



---

## Appendix

### Window Calculation

> informative
> 525600 / 4 = 131400
> 131400 / 25
> windows = 5256


###### tags: ``{erc20.balance_wallet}``

### Address Balance
$$B(h) s.t.$$

$B_{t+1}(h, a):=B_{t}(h)+a$

### Adress Balance
$$B(h) s.t. B_{t+1}(h, a):=B_{t}(h)+a$$

### Discrete Transfer Rate 
###### tags: ``{calculation.25day_transfer_rate_discrete}``


### Equations
<!-- 
$$\operatorname{avg}\left(R_{t+1}(h, a)\right):=\operatorname{avg}\left(R_{t}(h)\right)+a$$
-->

### Aggreagte Transfer Rate
###### tags: ``{calculation.transfer_rate_aggregate}``
$$\operatorname{avg}\left(\bar{R}_{t+1}(h, a)\right):=\operatorname{avg}\left(\bar{R}_{t}(h)\right)+a$$

### Future Balance Ratio
###### tags: ``{equations.future_balance:ratio}``
$$\beta=\frac{\operatorname{avg}\left(B_{t+1}(h, a)\right)}{S_{t+1}}$$

###### tags: ``{equations.future-transfer:ratio}``
$$\tau=\frac{\operatorname{avg}\left(R_{t+1}(h, a)\right)}{\operatorname{avg}\left(\bar{R}_{t+1}(h, a)\right)}$$

###### tags:``{equations.ownership:ratio(DISCRETE_POINT)}``
$$\theta=\frac{B_{t}(h)}{S_{t}}$$

###### tags: {equations.gasevo}

``P_(t+1)(h,a):=sqrt((D_(t))/(S_(t)))+I_(t+1)^(')(h,a)``

$$
P_{t+1}(h, a):=\sqrt{\frac{D_{t}}{S_{t}}}+I_{t+1}^{\prime}(h, a)
$$

### 2 Interest Rate
###### tags: {equations.interest_rate}
<!--
$$I_{t+1}(h, a):=\frac{a \times \min (\operatorname{avg}(\beta, \tau), m)}{100}$$
-->

$$I_{t+1}(h, a):=\frac{a \times \min (\operatorname{avg}(\beta, \tau), m)}{100}$$

### 3 Ownership Rate
###### tags: {equations.ownership_ratio}
<!--
l_{t+1}^{\prime}(h, a):=\frac{a \times \sqrt{l * \max \left(\min \left(\theta, l^{2}\right), 1\right)}}{100}
-->

$$l_{t+1}^{\prime}(h, a):=\frac{a \times \sqrt{l * \max \left(\min \left(\theta, l^{2}\right), 1\right)}}{100}$$

### 4 Discounted Interest Rate
###### tags: {equations.discounted_interest_rate}
<!-- 
I_{t+1}^{\prime}(h, a):=\max \left(I_{t+1}(h, a), l_{t+1}^{\prime}(h, a)\right)-l_{t+1}^{\prime}(h, a)
-->

$$I_{t+1}^{\prime}(h, a):=\max \left(I_{t+1}(h, a), l_{t+1}^{\prime}(h, a)\right)-l_{t+1}^{\prime}(h, a)$$

###### tags: {equations.discounted_interest_rate_qed}
<!--
I_{t+1}^{\prime}(h, a) \in[0,0.24]
-->

$$I_{t+1}^{\prime}(h, a) \in[0,0.24]$$

###### tags: {equation.stress_test}

> appendix scenario: *Firesale* 


$$\sqrt{\frac{\left(m-\max \left(l^{\prime}\right)\right) * D_{t}}{100}},$$ $$where; 
m:=26, l:=8$ and S_{t}=B_{t}(h)=1$$

## Errata


### Volumetric Manifolds

> A constructed mechanism for facilitation of efficient and effective contract$^[1]$ trading 

$$
G:=(V, E, w)
$$



## Appendix and FAQ

:::info
**Find this document incomplete?** Leave a comment!
:::


## Security

please contact: `<mailto: sam@manifoldfinance.com>`for bugs/security issues, thank you.

## License

SPDX-License-Identifier: SSPL-1.0
",1,1,2,2,farming,"[cryptocurrency, defi, erc20, erc721, ethereum, farming, finance, protocol]",00000
1292,JimFarm,AdsGames,AdsGames,https://github.com/AdsGames/JimFarm,https://api.github.com/repos/AdsGames/JimFarm,A massive procedurally generated world in which you can set up a farm and collect resources.,"# JimFarm

Our submission to ToJam 11.

A massive procedurally generated world in which you can set up a farm and collect resources.

[![Code Smells](https://sonarcloud.io/api/project_badges/measure?project=AdsGames_JimFarm&metric=code_smells)](https://sonarcloud.io/summary/new_code?id=AdsGames_JimFarm)
[![Bugs](https://sonarcloud.io/api/project_badges/measure?project=AdsGames_JimFarm&metric=bugs)](https://sonarcloud.io/summary/new_code?id=AdsGames_JimFarm)

## Demo

[Web Demo](https://adsgames.github.io/JimFarm/)

## Setup

### Dependencies

To pull the submodules, run the following command:

```bash
git submodule update --init --recursive
```

### Windows (MSYS2)

```bash
pacman -S mingw-w64-i686-gcc-libs mingw-w64-i686-SDL2 mingw-w64-i686-SDL2_mixer mingw-w64-i686-SDL2_image mingw-w64-i686-SDL2_ttf
```

### Mac OS

```bash
brew install sdl2 sdl2_image sdl2_ttf sdl2_mixer
```

### Linux

```bash
sudo apt install libsdl2-dev libsdl2-image-dev libsdl2-ttf-dev libsdl2-mixer-dev
```

### Build

```bash
cmake .
make
```

### Build Emscripten

```bash
emcmake cmake .
make
```
",1,1,3,4,farming,"[asw, farm, farming, game, procedural-generation, sandbox, sdl2, tojam, tojam11]",00000
1293,frontend,Feedr-SpaceApps2017,Feedr-SpaceApps2017,https://github.com/Feedr-SpaceApps2017/frontend,https://api.github.com/repos/Feedr-SpaceApps2017/frontend,,"### NASA Space Apps Challenge 2017
## Feedr - Web App interface

Feedr users will be able to see global or local statistics about crops, get predictions of crop yields on a specific area and see recommendations for crops - which the recommendation engine produces based on data about weather, area, soil, and shortages or surpluses of crops worldwide or locally.

This project was bootstrapped with [Create React App](https://github.com/facebookincubator/create-react-app).

## Available Scripts

In the project directory, you can run:

### `npm start`

Runs the app in the development mode.<br>
Open [http://localhost:3000](http://localhost:3000) to view it in the browser.

",1,1,2,0,farming,"[farming, hackathon, models, nasa, space-apps, web]",00000
1294,FarmingRPG,mkinney,N/A,https://github.com/mkinney/FarmingRPG,https://api.github.com/repos/mkinney/FarmingRPG,,"
Farming RPG from 

https://www.youtube.com/watch?v=cdJoJdtFbwc&list=PLSFMekK0JFgzbFfj1vAsyluKTymnBiriY

https://opengameart.org/

or https://github.com/jrconway3/Universal-LPC-spritesheet


",1,1,2,0,farming,"[farm, farming, gamemaker, gamemaker-studio-2]",00000
1295,temen-tani-services,hasimy-as,N/A,https://github.com/hasimy-as/temen-tani-services,https://api.github.com/repos/hasimy-as/temen-tani-services,Services for temen-tani application,# temen-tani-services,1,1,2,0,farming,"[farming, hacktoberfest, smart-farming, temen-tani]",00000
1296,Farm,viskakov,N/A,https://github.com/viskakov/Farm,https://api.github.com/repos/viskakov/Farm,Farming game made in Unity,"# Farm
Simple farm game, where player can grow 3 types of item (carrot, grass, tree). Player can pick up carrot or cut grass.
For every grown item player receive points.
",1,1,1,0,farming,"[csharp, farming, game, game-development, unity, unity3d]",00000
1297,Twitch-Farm-Bot,GabrielBigardi,N/A,https://github.com/GabrielBigardi/Twitch-Farm-Bot,https://api.github.com/repos/GabrielBigardi/Twitch-Farm-Bot,Twitch Bot made to farm points on lots of channel at the same time,"# A tool to farm points on twitch

## How to use ?
```
npm install
```

And finally run the bot like so
```
node index.js --user=botname01 --pass=oauth:botoauth01 --farmChannels=channel01,channel02,channel03
```

## How do i contribute to this project?
[Click here](CONTRIBUTING.md).

## Contact
**Discord**: *Gabriel Bigardi#2292*  
**Twitter**: *@BigardiGabriel*  
**Email**: *gabrielbigardi@hotmail.com*  
",1,1,2,0,farming,"[bot, farm, farming, points, streamelements, twitch, twitch-bot]",00000
1298,aeroponic-tower-frontend,ibrahimgb,N/A,https://github.com/ibrahimgb/aeroponic-tower-frontend,https://api.github.com/repos/ibrahimgb/aeroponic-tower-frontend,SkyFarms App,"# SkyFarms App
SkyFarms Dashboard is an IoT solution for tracking temperature and humidity, as well as the growth of plants. With this dashboard, you can collaborate with your farmers and increase the productivity of your harvest by 30%, while reducing the size needed by 60%. The dashboard is built with Angular, TypeScript, and Angular Material.



## Table of Contents

- [Technologies Used](#technologies-used)
- [Features](#features)
- [Installation](#installation)
- [Usage](#usage)
- [Contributing](#contributing)
- [Screenshots](#screenshots)
- [License](#license)

## Technologies Used


- HTML
- vanila CSS
- SCSS
- JavaScript
- Typescript
- Angular
- Angular Material
- RxJs
- restful API's


## Features

- Real-time monitoring of temperature and humidity
- Tracking of plant growth over time
- Collaboration with farmers for better decision-making
- Reduction in required space for farming
- User-friendly interface built with Angular Material
- Increased productivity by up to 30%

## Installation

To install SkyFarms Dashboard, follow these steps:

1. Clone the repository: `git clone https://github.com/ibrahimgb/skyfarms-dashboard.git`
2. Install dependencies: `npm install`
3. Start the development server: `ng serve`

## Usage

Once you have installed SkyFarms Dashboard, you can use it to monitor your farm's temperature and humidity levels, track plant growth over time, and collaborate with farmers to optimize productivity.

To get started:

1. Log in to the dashboard using your credentials.
2. Navigate to the ""Temperature"" or ""Humidity"" tabs to view real-time data.
3. Use the ""Growth"" tab to track plant growth over time.
4. Collaborate with farmers using the ""Collaboration"" tab.

## Contributing

If you would like to contribute to SkyFarms Dashboard, please follow these steps:

1. Fork the repository.
2. Create a new branch: `git checkout -b my-feature-branch`
3. Make changes and commit them: `git commit -m ""Add new feature""`
4. Push changes to your fork: `git push origin my-feature-branch`
5. Submit a pull request.

## Screenshots

## License

SkyFarms Dashboard is licensed under the MIT License. See [LICENSE](https://github.com/ibrahimgb/skyfarms-dashboard/blob/main/LICENSE) for more information.
",1,1,1,2,farming,"[angu, connecteddevice, farming, iot, iot-platform, smartfarm]",00000
1299,AgroWorld,bhaveshppatil,N/A,N/A,https://api.github.com/repos/bhaveshppatil/AgroWorld,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C168:9938:29B2843:5596D7F:6522409A.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,farming,"[N, /, A]",00000
1300,pumpkin-patch,brussell98,N/A,https://github.com/brussell98/pumpkin-patch,https://api.github.com/repos/brussell98/pumpkin-patch,,"# pumpkin-patch

Welcome to the Hacktoberfest Pumpkin Patch!   
Everyone is allowed to add one pumpkin to the patch with a pull request.

Directions:
1. Clone this repository
2. Add your pumpkin to the `patch/` directory and name it your username
3. Create a pull request
",1,1,2,0,farming,[farming],00000
1301,SoilBot,beacrea,N/A,https://github.com/beacrea/SoilBot,https://api.github.com/repos/beacrea/SoilBot,An Ardunio project that measures soil moisture to determine if the plant needs to be watered.,"# SoilBot
This is an Ardunio project that measures soil moisture to determine if the plant needs to be watered. It's designed to be a data-driven support system for the various plants I'd like to care for. By being able to consistently deliver desired moisture conditions into soil, I hope to keep plants growing on auto-pilot with various tweaks to threshholds.

## Project Shots
<img src=""https://dl.dropboxusercontent.com/s/xcv0yz72pez8bxv/IMG_20190210_190542.jpg"" width=""480""/>
<img src=""https://dl.dropboxusercontent.com/s/p2ygky6mwlidgq7/soilBot_AnimationA.gif"" width=""480""/>
<img src=""https://dl.dropboxusercontent.com/s/qrigbiz5ptebnbi/soilbot_readout.jpg"" width=""480""/>

## Project Features Planned
- Migrate to soldered [Adafruit Metro Mini](https://www.adafruit.com/product/2590) instead of RedBoard and add external power
- Support for multiple moisture sensors with synthesized values reported to an LCD screen
- A water pump that hydrates plants until ideal moisture threshold is reached
- A hosted web interface with values and event history being displayed

## Current Equipment
| Visual  | Desciption |
| ------------- | ------------- |
|<img src=""https://cdn.sparkfun.com//assets/parts/1/1/7/2/2/13975-01.jpg"" width=""100""/> | [SparkFun RedBoard](https://www.sparkfun.com/products/13975)|
|<img src=""https://cdn.sparkfun.com//assets/parts/1/0/6/1/0/13322-01.jpg"" width=""100""/>|  [SparkFun Soil Moisture Sensor](https://www.sparkfun.com/products/13322)|
|<img src=""https://images-na.ssl-images-amazon.com/images/I/81yY0y-bzXL._AC_UL115_.jpg"" width=""100""/>|[20x4 LCD Module](https://www.amazon.com/gp/product/B071FGZX8G)|

## Other Tools
- [Create custom character on LCD](https://maxpromer.github.io/LCD-Character-Creator/)
",1,1,1,1,farming,"[arduino, farming]",00000
1302,fs22companion,afonsosousah,N/A,https://github.com/afonsosousah/fs22companion,https://api.github.com/repos/afonsosousah/fs22companion,Trainer/Companion for Farming Simulator 22,"# ![FS22Companion](https://github.com/afonsosousah/fs22companion/raw/main/Media/GitHubBanner.png)

[![Github All Releases](https://img.shields.io/github/downloads/afonsosousah/fs22companion/total.svg)]()
[![Discord](https://img.shields.io/discord/929552539811197008.svg?label=&logo=discord&logoColor=ffffff&color=7389D8&labelColor=6A7EC2)](https://discord.gg/TrHtNygusw)

# What is FS22Companion?

Hi! 
This little app can improve your gameplay experience by allowing you to: 
- Manage your money (add and remove) 
- Change Time Scale, Time of Day, Seasons and Months 
- Keep aligned to a direction (like GPS Mod and works on server even without the mod!)
- Check the product prices
- Create presets for Game Settings (new)

# Showcase

<div align=""center"">
  <a href=""https://www.youtube.com/watch?v=GfyNP8-Wbfg""><img width=""560"" height=""315"" src=""https://i.imgur.com/90iq93Q.png"" alt=""FS22Companion - Showcase""></a>
</div>


# Links

[Discord Server](https://discord.gg/TrHtNygusw) 

[Latest Release](https://github.com/afonsosousah/fs22companion/releases/latest)



# Copyright

Copyright afonsosousah

You are not allowed to modify this piece of software, but you are free to share and create content about it!
",1,1,2,0,farming,"[2022, 22, cheat, companion, farming, farmingsimulator22, fs22, gps, helper, mod, simulator, trainer]",00000
1303,climate-czar,larry-athey,N/A,https://github.com/larry-athey/climate-czar,https://api.github.com/repos/larry-athey/climate-czar,Universal remote climate monitoring and management system for greenhouses and indoor grow operations,"# Climate Czar
Universal remote climate monitoring and management system for greenhouses and indoor grow operations.

Live demo at http://panhandleponics.ddns.net:1966/climateczar/

See also https://3dgtower.com

Climate Czar is a Linux and Wordpress based system that gathers readings from any type of sensor or switch that can be read from the command line, whether it is a local device connected to a GPIO bus or a network device. By the same token, the system will control output switches that can also be toggled from the command line. There are no brand/model hardware dependencies, you can even use it with your own custom IoT devices.

Most smart home devices are controllable from the command line of your computer over your network. For example, you can download a utility for TP-Link/Kasa devices from https://github.com/python-kasa/python-kasa for this or you can write scripts for this that use standard command line tools in Linux and MacOS. There are many other brands with this capability as well.

Virtual input sensors/switches can be created that return the average of multiple variable value sensors (temperature, humidity, etc) as well as AND/OR/NOT logic gates based on multiple binary switch type input sensors.

Enabling of output switches may be over-ridden by the status of another output switch. For example, an output switch that controls exhaust fans can be disabled if another switch running a heater is turned on.

Output switches really don't even have to physically exist. Since their operation is controlled with on/off bash scripts, these scripts can also be used to send email/SMS notifications or even make a curl URL call. Input sensors/switches can be assigned to multiple output switches, so you can easily receive a notification at the same time that a physical output switch is toggled on or off.

The Climate Czar Wordpress plugin is only necessary for adding, configuring, and deleting input sensors and output switches. The undercarriage will continue to run in the background even without the web server running. The Wordpress plugin also provides dashboards and histograms to give you a visual representation of all devices and charts that you can use to fine tune your settings.

All connected devices can be assigned to separate groups which allows you to have separate dashboards for multiple greenhouses or grow operations. There's no limit to the number of attached devices and groups. This system running on a small i5 based server with 8GB of RAM was tested with 500 virtual devices and still completed all read and write operations within the every-15-seconds processing loop.

This system will run effectively on a Raspberry PI with a LAMP stack, or any web server that supports PHP, MySQL, and bash scripts. The Climate Czar server itself could actually monitor and control multiple greenhouses and grow operations in different locations if network enabled sensors and switches are utilized throughout (you'd be surprised by what you can accomplish with a public facing Nginx server running as a reverse web proxy).

### Input Device Types
1.	Variable Value Sensor (Temperature, Humidity, pH, EC, AD Convertor, Etc)
2.	Average From a Group of Variable Value Sensors
3.	Remote Switch (Float Switch, Door/Window Switch, Photocell Switch, Etc)
4.	AND Gate of a Group of Remote Switches
5.	OR Gate of a Group of Remote Switches
6.	NOT Gate of a Group of Remote Switches
7.	Scheduler (unlimited on/off schedules per day)
8.	Web Console Switch (Only Controllable Via Web UI)
9.	Raw Text Output Device (only for displaying text, cannot be used as a controller)

The virtual input devices are where the Climate Czar really shines because they allow you to consider multiple sample points before taking action. For example, having temperature sensors on the east and west ends of a greenhouse. Each one of those could be reporting significantly different temperatures at the same time. It makes more sense to turn on heating or cooling based on the average temperature.

Climate Czar is not region specific. If you have temperature sensors that only return values in Celsius and you want to work in Fahrenheit, you just convert the return value in your read script (command line utilities like bc allow you to do floating point math in bash). Climate Czar merely looks at numbers and performs actions based on math, no matter what unit of measurement is used.

WiFi controlled AC outlets such as TpLink/Kasa devices have a manual on/off button on them that could allow a person to turn them on when Climate Czar says they should be off. Output switches have a One Shot option that tells the system whether to only execute the on/off script one time, or to execute the script once every minute in order to maintain the intended on/off state.

With the user interface being based on Wordpress, creating custom dashboards is as simple as creating your own pages or posts and inserting shortcodes with ID number of the input sensor or output switch passed to it. You can even similarly embed these live device views in an external website if you wish by making calls to specific PHP files in the plugin folder the same way.

Anybody who has Wordpress experience can 100% customize the look and feel of your system in order to tailor it to your operation. Everything is built on a Bootstrap based Wordpress theme, so it's real easy to over-ride colors and styles. The pages of the default system are built and rendered using the WP Bakery Page Builder plugin, but you could easily replace that with your own favorite editor instead.

Even though bash scripts are the most common in Linux, any other kind of script or even a compiled binary may be used. All that matters is that the proper command shell or interpreter is installed on the system and the script is owned by the user that the web server runs as and has the executable bit set. Device read scripts simply need to output a single integer or floating point numeric value to stdout.

While this system was designed and tested in a 51x18 foot greenhouse, there are probably many other uses for it besides greenhouses and indoor grow operations. If you need to read numeric values from sensors or switches and turn other devices on and off based on those values, then it's likely that this system will work for what you're needing to do. It was intentionally left completely open ended for this very reason.

![CZ1](https://user-images.githubusercontent.com/121518798/215337977-8dce3d9a-6dbe-4bbb-80d5-a0ea44c87858.png)
![CZ2](https://user-images.githubusercontent.com/121518798/214509996-b0c7db6d-8707-4546-aba5-0d0977ae30f6.png)
![CZ3](https://user-images.githubusercontent.com/121518798/214509998-49c52385-33d1-4e0b-bd5d-21f7252e0ac0.png)
![CZ4](https://user-images.githubusercontent.com/121518798/214510002-5ea0cbb7-f254-4674-a16c-913e79add1c7.png)
![CZ5](https://user-images.githubusercontent.com/121518798/214510005-05b1e945-b3d6-44c2-aa6c-2df3dcc4ed1c.png)
![CZ6](https://user-images.githubusercontent.com/121518798/214510006-e0c5b1fd-0a17-4c4a-9841-76b6e4b12442.png)
",1,1,1,0,farming,"[aquaculture, aquaponics, automation, climate-control, cooling-control, esp32-arduino, farming, gardening, greenhouse, heating-control, home-automation, horticulture, hydroponics, iot, iot-application, iot-device, pellet-stove, raspberry-pi, temperature, temperature-control]",00000
1304,autruches-du-ried,Renrhaf,N/A,https://github.com/Renrhaf/autruches-du-ried,https://api.github.com/repos/Renrhaf/autruches-du-ried,Présentation de l'exploitation de Mr/Mme Schwabb à Wittisheim,"# Autruches du ried

Website for an ostrich farm in Alsace, France.",1,1,1,0,farming,"[farming, ostrich]",00000
1305,Crop-Recommendation,vineetpatel725,N/A,https://github.com/vineetpatel725/Crop-Recommendation,https://api.github.com/repos/vineetpatel725/Crop-Recommendation,Crop Recommendation is a web application that suggest/recommend the farmer to which crop to grown his/her field.,"{'message': 'Not Found', 'documentation_url': 'https://docs.github.com/rest/repos/contents#get-repository-content'}",1,1,1,0,farming,"[crop, crop-recommendation, django, django-application, django-framework, django-project, farm, farmer, farming, field, jupyter, jupyter-notebook, machine-learning, machine-learning-algorithms, machinelearning, python, python-3, python3, recommendation-system]",00000
1306,Aeroponic-Garden-System,Tai-Min,N/A,https://github.com/Tai-Min/Aeroponic-Garden-System,https://api.github.com/repos/Tai-Min/Aeroponic-Garden-System,Decentralized stackable aeroponic system for optimal yields. 2nd place in Smarter Sustainable World Challenge with Nordic Semiconductor,"# Thingy:53 Aeroponic Garden
2nd place in [Smarter Sustainable World Challenge
with Nordic Semiconductor](https://www.hackster.io/contests/smarter-sustainable-world). For details of the project itself see [Vertical Self Regulating Soilless Farm](https://www.hackster.io/Tai-Min/vertical-self-regulating-soilless-farm-a86d25)

## Physical setup
### The pot
* Print heater_bottom_n.stl and heater_top_n.stl (n = 1, 2, 3, 4) and glue them together. Insert 12V 5050 fan into place
* Print funnel.stl and insert it into heater glued in previous step
* Print num_layers * 4 layer_quarter.stl and glue them together then stack the layers and place them on top of the heater
* Print num_layers nozzle_frame.stl and num_layers * 4 nozzle_single.stl and glue them together then using straight plastic pipe assemble them starting from funnel's center intlet so that each nozzle_frame is on the level of the pot of given layer  
* Print nozzle_frame_end.stl and insert it at the top of previously created piping
* Print top_hat.stl and insert it at the top of vertical pot then insert Thingy:53 into it 
* Create wooden frame as in the pictures below
* Print valve_holder.stl and screw it at the bottom of the wooden quadropod then screw 12V valves into places
* Print num_layers * 4 - 1 of water_nozzle_frame.stl and nozzle_single.stl and glue them together then screw them on wooden structure so that each nozzle faces one pot
* Print 1 water_nozzle_frame_end.stl and single_nozzle.stl and glue them together and screw it on the wooden structure so it faces one pot
* Install LED strips on wooden structure so each pot has it's own light source

![Pot assembly 1](media/the_pot.png ""Pot assembly 1"")
![Pot assembly 2](media/the_pot_inside.PNG ""Pot assembly 2"")
![Pot assembly bottom](media/pot_quadropod.PNG ""Pot assembly bottom"")
![Pot assembly frame](media/pot_wooden_frame.PNG ""Pot assembly frame"")

### RPi water system
* Print 2 pipe_holder_1.stl and pipe_holder_2.stl and glue them together on the side of both liquid tanks
* Print 2 pump_holder.stl and glue it at the bottom of the tank then screw the 12V pump into it
* Print 2 water_level_holder.stl, place it on the lids of both liquid tanks and then snap an ultrasonic sensor into them
* Screw reed switches into both liquid tanks and corresponding magnets into lids
* On nutrition water tank mount PCBs for EC and pH sensors and place the sensors into the tank itself
![Tank assembly](media/tank_assembly.PNG ""Tank assembly"")

### Putting it together
Use flexible piping to connect the pot to water system as in the block diagram below:
![Piping diagram](media/Piping.drawio.png ""Piping diagram"")

## Electronics
Refer to KiCad project in /pi_shield folder for BOM and assembly purposes of the hats.

### The pot
Connect sensors / actuators to Thingy:53 control hat as in the block diagram below:
![Thingy:53 connections](media/Thingy%20connections.drawio.png ""Thingy:53 connections"")

### RPi water system
Connect sensors / actuators to RPi's control hat as in the block diagram below:
![RPi connections](media/RPI%20connections.drawio.png ""RPi connections"")
## Attiny85
* Connect some programmer (i.e. ArduinoISP or USBasp) to Attiny85
* In platformio.ini change upload_protocol to your programmer
* You might also want to fine tune PH_MAGIC_NUMBER, TDS_A, TDS_B variables to match your sensor's characteristics
* In PlatformIO menu press ""Set Fuses"" in ""attiny85"" configuration, then click ""Upload""
* Insert Attiny85 into Farm Overseers's shield

## Farm Overseer setup
* Setup Ubuntu Server 20.04 (i.e via [Raspberry Pi Imager](https://www.raspberrypi.com/software/))

### Enable UART
* Disable serial console
```
sudo systemctl stop serial-getty@ttyS0.service
sudo systemctl disable serial-getty@ttyS0.service
sudo systemctl mask serial-getty@ttyS0.service
```
* Put below into /etc/udev/rules.d/10-local.rules
```
KERNEL==""ttyS0"", SYMLINK+=""serial0"" GROUP=""tty"" MODE=""0660""
KERNEL==""ttyAMA0"", SYMLINK+=""serial1"" GROUP=""tty"" MODE=""0660""
```
* Reload udev rules
```
sudo udevadm control --reload-rules && sudo udevadm trigger
```
* Add user to tty (edit parts in ""<>"")
```
sudo adduser <USER> tty
```
* Delete below from /boot/firmware/cmdline.txt
```
console=serial0,115200
```
* Add below to /boot/firmware/config.txt
```
dtoverlay=disable-bt
```
### Enable 1-Wire
* Add below to /boot/firmware/config.txt
```
dtoverlay=w1-gpio,gpiopin=4
```

### ROS2
* Install [ROS2 Foxy Base version](https://docs.ros.org/en/foxy/Installation/Ubuntu-Install-Debians.html)
* Clone this repo to your home directory (/home/$USER/TODO)
* Build ROS components:
```bash
cd ~/TODO/ros_workspace && colcon build
```
* Place ROS setups in your .bashrc (edit parts in ""<>"")
```
source /opt/ros/foxy/setup.bash
source /home/<USER>/TODO/ros_workspace/install/setup.bash

```
### Mosquitto
* Install mosquitto 2.0
```
sudo add-apt-repository -y ppa:mosquitto-dev/mosquitto-ppa
sudo apt install mosquitto
sudo systemctl enable mosquitto
```

### zigbee2mqtt
* Install [zigbee2mqtt](https://www.zigbee2mqtt.io/guide/installation/01_linux.html) and set it to start as a daemon on boot. Use following config (edit parts in ""<>""):
```yaml
mqtt:
  base_topic: field
  server: 'mqtt://localhost'

serial:
  port: <YOUR ZIGBEE DONGLE PORT>

advanced:
    network_key: GENERATE

external_converters:
  - fc.js
```

Create file /opt/zigbee2mqtt/data/fc.js and paste following into it:
```js
const fz = require('zigbee-herdsman-converters/converters/fromZigbee');
const tz = require('zigbee-herdsman-converters/converters/toZigbee');
const exposes = require('zigbee-herdsman-converters/lib/exposes');
const reporting = require('zigbee-herdsman-converters/lib/reporting');

const definition = {
    zigbeeModel: ['FC_v0.1'],
    model: 'FC',
    vendor: 'Nordic',
    description: 'Field Controller',
    fromZigbee: [fz.temperature, fz.humidity, fz.pressure, fz.on_off, fz.level_config],
    toZigbee: [tz.on_off, tz.level_config],
    exposes: [],
    configure: async (device, coordinatorEndpoint, logger) => {
        await reporting.bind(device.getEndpoint(16), coordinatorEndpoint, ['msTemperatureMeasurement']);
        await reporting.temperature(device.getEndpoint(16), { min: 30, max: 30, change: 0 });

        await reporting.bind(device.getEndpoint(16), coordinatorEndpoint, ['msPressureMeasurement']);
        await reporting.pressure(device.getEndpoint(16), { min: 30, max: 30, change: 0 });

        await reporting.bind(device.getEndpoint(16), coordinatorEndpoint, ['msRelativeHumidity']);
        await reporting.humidity(device.getEndpoint(16), { min: 30, max: 30, change: 0 });
    },
    endpoint: (device) => {
        return { fan: 10, led1: 11, led2: 12, strat: 13, water_valve: 14, nutri_valve: 15, sensors: 16 };
    },
};

module.exports = definition;
```

### Finishing up
* Reboot the board
```
sudo reboot now
```

## Field controller setup
Open field_controller/ in VSCode with nRF Connect and with Thingy:53 connected via JLink press flash.

## Run Farm Overseer's control algorithms
SSH into the Farm Overseer and run:
```
ros2 launch garden_meta system.launch.py
```

## Pair field controller to Farm Overseer
With Field Controller running cd into scripts/ and run:
```
./pair.sh -t 300
``` 
This will enable pairing for 300 seconds and should pair with the Field Controller.
",1,1,1,0,farming,"[control-systems, decentralized, edge-computing, farming, iot, mqtt, neural-network, nordic-semiconductor, ros, sensor, zigbee]",00000
1307,horticulture,houlalalua,N/A,https://github.com/houlalalua/horticulture,https://api.github.com/repos/houlalalua/horticulture,This mod allow farming flowers in minetest,"{'message': 'Not Found', 'documentation_url': 'https://docs.github.com/rest/repos/contents#get-repository-content'}",0,0,0,1,farming,"[culture, farming, fleurs, flowers, minetest, mod]",00000
1308,IMS-VUT-BIT-2018-2019,thejoeejoee,N/A,https://github.com/thejoeejoee/IMS-VUT-BIT-2018-2019,https://api.github.com/repos/thejoeejoee/IMS-VUT-BIT-2018-2019,Simulation model in SIMLIB of crickets farm.,"# IMS-VUT-BIT-2018-2019
Simulation model in SIMLIB of crickets farm.

![alt text](https://i.imgur.com/9SG0h.jpg)
",0,0,1,0,farming,"[cricket, farming, simulation]",00000
1309,CropCultivation,Elenterius,N/A,https://github.com/Elenterius/CropCultivation,https://api.github.com/repos/Elenterius/CropCultivation,A Minecraft Mod that truly changes the farming of Crops. Instead of new crops this mod adds a new growth system.,"# Crop Cultivation
[![Forge Version](https://img.shields.io/badge/Minecraft%20Forge-1.15.2%20--%2031.2.33-orange)](https://files.minecraftforge.net/maven/net/minecraftforge/forge/index_1.15.2.html)
[![CropCultivation Version](https://img.shields.io/badge/CropCultivation-0.0.9--alpha.1-red)](https://github.com/Elenterius/CropCultivation)

<p align=""center"">
    <a href=""#crop-cultivation""><img src=""src/main/resources/banner_large.png"" alt=""Crop Cultivation"" width=""100%""></a>
</p>

A Minecraft Forge Mod that takes out the simple out of Crop Farming.<br>
Currently focuses on soil management, and plant growth restrictions.

This mod modifies the growth **requirements**, growth **chance** and **yield** of all compatible Crops.

This mod will not add new crops. Use supported mods like Simple Farming.

## Mod Support
### Supported Crops
- Minecraft (exceptions: coca beans, saplings, sweet berry bush, mushroom)
- Simple Farming (exceptions: saplings/trees & bushes & grapes)
- XL Food Mod (exceptions: vanilla spice plant)

### Partial Support
- HarvestCraft Crops (only the crops overlapping with SimpleFarming, the remainder falls back to generic crop stats)

**Note:** HarvestCraft Crops contains over 70 crops and requires time to research/guesstimate the crop characteristics.
If you want full support consider helping out. 

### Compatible Crops
**Note:** not supported crops will fallback to generic behavior
- blocks extending CropsBlock
- blocks implementing IGrowable
    - should contain a Block Property for age (IntegerProperty with the identifier ""age"") if not crop yield will not be properly modified

### Farming For Blockheads
**Note:** you will not be able to create their fertilized farmland variants because vanilla farmland is no longer attainable in survival.
- made Red Fertilizer a `Nitrogen Fertilizer`
- made Green Fertilizer a `Phosphorus & Potassium Fertilizer`
- added `Soil Amendments` to the market
- added `Measuring Devices` to the market

### Growth Speed
Although Crop growth can be accelerated by other mods, the growth requirements still need to be fulfilled in most cases.
(Mods that use the IGrowable interface to grow a crop circumvent the growth restrictions since the CropGrowthEvent is not fired).

### Serene Seasons
Theoretically compatible, but not tested.


# Wiki
## Crop Growth & Yield
- growth requirements
    - soil moisture
    - soil macronutrients: `Nitrogen (N)`, `Phosphorus (P)`, `Potassium (K)`
    - soil pH inside tolerance
    - temperature inside tolerance
- growth chance
    - based on nutrient availability in soil which depends on soil pH
- crop yield
    - based on nutrient concentration in soil throughout its growth stages

Note:
- Unsatisfied plants will eventually starve
- Crops can be burned by over-fertilization


## Soils (Farmland)
```diff
! The Mod removes the ability to create vanilla farmland from vanilla dirt with the hoe
```
You can craft the different ""non tilled"" soil variants with dirt, sand and clay. Place them in the world and use your hoe on it.
You can use a shovel to convert tilled soil back to their respective dirt variant.

![Soil Variants](screenshots/soil_variants.png)
_From left to right: Vanilla Dirt, Sandy Soil, Loamy Soil, Silty Soil and Clayey Soil_

### Soil Properties
- Soil Texture
- Moisture
- pH
- Nutrients:
`Nitrogen (N)`,
`Phosphorus (P)`,
`Potassium (K)`
- Organic Matter Content
    - increases moisture capacity/retention of soil
    - increases nutrient retention of soil

#### Soil Moisture Level
Instead of vanilla crops requiring only moist farmland to grow well, 
each crop requires now the moisture level to be within a specific range to be able to grow.<br>
There are 10 soil moisture levels, ranging from 0 to 10:<br>
SEVERELY_DRY -> EXCESSIVELY_DRY -> ABNORMALLY_DRY -> DRY -> AVERAGE_0 -> AVERAGE_1 -> MOIST ->
ABNORMALLY_MOIST -> WET -> EXCESSIVELY_WET -> STANDING_WATER
<br><br> 
![Soil Moisture Levels](screenshots/soil_moisture_levels.png)
_From left to right: Very Dry, Average, Moist, Wet, Standing Water_
<br><br>
![Simple Farming Rice Field](screenshots/wet_rice_field.png)
_SimpleFarming Rice growing on a ""flooded"" field (Wet, Excessively Wet, Standing Water)_

### Player Interaction
- Moisture capacity can be modified
  - by placing sand/gravel/clay/stone below soil
  - adding compost to soil which adds organic matter to the soil
- Organic Matter has a chance to decay into nutrients for the soil
- Overall pH doesn't change much by itself, the player is the only big influence through the application of liming or acidifying material
- Basically macronutrients and compost are the least things that should be checked before replanting

### Raised Soil Bed
Crafted by putting soil into a partially filled composter.
- the heat of the decomposing compost raises the soil temperature allowing plants to grow in colder regions
- keep the soil moist and occasionally reapply compost to keep the decomposition process going

### Environmental Influences
- Rain
  - can decrease soil pH
  - can wash away nutrients if the organic matter content of soil is low

## Plant Macronutrients
- Nitrogen (N)
    - high concentration in soil leads to faster crop growth
- Phosphorus (P)
    - high concentration in soil leads to better crop yield
- Potassium (K)
    - high concentration in soil leads to better crop yield

## Soil Amendments
### Compost
Applied to the soil to increase the organic matter content of soil.

### Fertilizer
Fertilizers increase the Nutrients in the soil.<br>
```diff
! The Mod removes the ability to use bone meal on compatible crops
```
**Note:** Apply Fertilizers to the soil instead of the crop.
- `Bone Meal`
- `Industrial Fertilizer`
- `Granite Dust`
- `Feather Meal`
- `Seaweed Meal`
- `Fish Meal`
- `Soybean Meal` `optional (requires simplefarming or harvestcraft)`
### Liming Material
Increases the Soil pH.
- `Lime Dust`
  - uncommon side product from cutting Rocks with the Stonecutter
- `Wood Ash`
  - process charcoal into dust with the mortar and pestle (unrealistic)
 <br>(make wood ash a waste product of burning/smelting wood logs in a furnace?)
### Acidifying Material
Decreases the Soil pH.
- `Blaze Powder`
- `Gunpowder`
- `Sulphur` `from simplysalty mod`

## Datapack
`data/cropcultivation/...`
### Item Tags
- `n_fertilizer`
  - contains already optional entry for `farmingforblockheads:red_fertilizer`
- `p_fertilizer`
  - contains already optional entry for `farmingforblockheads:green_fertilizer`
- `k_fertilizer`
  - contains already optional entry for `farmingforblockheads:green_fertilizer`
- `acidifying_material`
  - contains already optional entry for `simplysalty:sulphur` 
- `liming_material`
- `compost`
  - contains already optional entry for `cannycomposter:compost`
### Block Tags
- `default_growth`: crops/plants added to this tag will be excluded from the modified growth behavior, this does not prevent the consumption of nutrients!",0,0,2,0,farming,"[farming, minecraft-forge-mod]",00000
1310,Herenboeren,PaulKuiper,N/A,https://github.com/PaulKuiper/Herenboeren,https://api.github.com/repos/PaulKuiper/Herenboeren,Web app to manage herenboeren farms,"# Herenboeren
Web app to manage herenboeren farms

# Technology choises
The web app needs to be flexible for new use cases and be able to
run on mobile devices (keeping notes in the field).

## Development tools
For development of the software PyCharm will be used.
For deployment Docker will be used.
For testing we use Jtest (javescript) and nose (python).
For continuous integration testing we use CircleCI
Version control is done on Github.

## Web front end
For the web front end we will use the stencil compiler to make webcomponents.
This also means typescript is used everywhere.

For the interface ionic v4 is used together with capacitor (to access mobile APIs)
to enable a good mobile experience.

For mapping leaflet.js is used, for other visuals D3.js.
Routing is done with stencil router and state mangement with mobx.
For internationalisation we use i18nnext.

## Web server and data crunching
For the backend we use Python 3.6 with the micro webframework
bottle.py and Gevent for efficient multi-threading.
NgInx will be used to serve the static webpages, enable
secure (SHH) reverse proxying to the Python webserver (http and websockets).

## Databases
We need to be able to answer questions like:
 - which plant was planted on which field and when
 - a plant of this family is not allowed on this field anymore for so and so long
 - we need good free text search to search through our notes, plant descriptions etc.
 - we need to store historical weather data and other metrics
 - we need to store geographical (GEOjson) data (field layouts etc.)
 - we need to store documents and images (attached to nodes)
 - we need to be able to easily extend the data model

All these types of data structures have highly specialised database:
- a graph database like Neo4j is very good at relational data
- a search database like ElasticSearch  is good in free text search and suggestions
- a time series database like InfluxDB is good at storing time series and event data
- the file system is best at storing images and files

We are clearly in need of a multi model database, therefore the
best database fit for this project seems to be: MongoDB",0,0,2,0,farming,"[farming, planning]",00000
1311,bitland-script-termux,patrick0719,N/A,https://github.com/patrick0719/bitland-script-termux,https://api.github.com/repos/patrick0719/bitland-script-termux,bitland,"{'message': 'Not Found', 'documentation_url': 'https://docs.github.com/rest/repos/contents#get-repository-content'}",0,0,0,0,farming,[farming],00000
1312,web_harvest_log,s-light,N/A,https://github.com/s-light/web_harvest_log,https://api.github.com/repos/s-light/web_harvest_log,web based ui for tracking harvest weights,"<!--lint disable list-item-indent-->
<!--lint disable list-item-bullet-indent-->

# web_harvest_log
local web based ui for tracking harvest weights

have a look at the [online preview](https://s-light.github.io/web_harvest_log/app/dist/spa/#/)

## installation
- install [node](https://nodejs.org/en/)
- install [yarn](https://yarnpkg.com/)
- clone repository `git clone https://github.com/s-light/web_harvest_log.git`
- change to directory `cd web_harvest_log/server`
- install dependencies `yarn`

## configuration
change `port` and `baudRate` to fit your scale and operating system:
`config/serial.js`
```
module.exports = {
    retryDelay: 10000,
    port: '/dev/ttyACM0',
    baudRate: 115200,
}
```

change the initial config database files to fit your needs:
copy or rename `config/index_template.js` to `config/index.js`
then have a look at the file and the sub folders to change to your needs.

## Usage
- start server `server/$  yarn start`
- open webbrowser at [`localhost:3030`](http://localhost:3030)
- click on the settings symbol
- click on `import config from files`
- this fills / adds to the database
- happy harvesting ;-)

for development and testing have a look at [setup.md](setup.md)

## ToDo
- add systemd autostart
- add server restart button
- add server reimport button
- extend Usage information!!
- research or create image set
    - [Karl Urban Wild-Flowers](https://openclipart.org/search/?p=2&query=Karl%20Urban)
",0,0,2,0,farming,"[farming, feathersjs, garden, local, quasar, serialport, vegetables, vuex, webapp]",00000
1313,icp20-interface,agelessZeal,N/A,https://github.com/agelessZeal/icp20-interface,https://api.github.com/repos/agelessZeal/icp20-interface,This is the DEX on polygon chain.,"# ICP20 Dex

https://www.icp-20.com/

https://dapp.icp-20.com/swap
",0,0,1,0,farming,"[dex, farming, nextjs, reactjs, smart-contracts, staking-pools]",00000
1314,DAOLand-liquidity-farm,DaoLand,DaoLand,https://github.com/DaoLand/DAOLand-liquidity-farm,https://api.github.com/repos/DaoLand/DAOLand-liquidity-farm,Smart contracts for farming DLS by providing PancakeSwap liquidity for DLD token,"{'message': 'Not Found', 'documentation_url': 'https://docs.github.com/rest/repos/contents#get-repository-content'}",0,0,1,0,farming,"[farming, lp]",00000
1315,gmo-farming,jonathan-robertson,N/A,https://github.com/jonathan-robertson/gmo-farming,https://api.github.com/repos/jonathan-robertson/gmo-farming,7 Days to Die Mod: Genetically modify seeds to grow plants with new properties.,"# GMO Farming

[![🧪 Tested On](https://img.shields.io/badge/🧪%20Tested%20On-A20.6%20b9-blue.svg)](https://7daystodie.com/) [![🧰 Automated Tests](https://github.com/jonathan-robertson/gmo-farming/actions/workflows/tests.yml/badge.svg)](https://github.com/jonathan-robertson/gmo-farming/actions/workflows/tests.yml) [![📦 Automated Release](https://github.com/jonathan-robertson/gmo-farming/actions/workflows/release.yml/badge.svg)](https://github.com/jonathan-robertson/gmo-farming/actions/workflows/release.yml)

![GMO Farming Image](https://github.com/jonathan-robertson/gmo-farming/raw/media/gmo-farming-social.jpg)

- [GMO Farming](#gmo-farming)
  - [Summary](#summary)
  - [Features](#features)
    - [Seed Enhancement](#seed-enhancement)
      - [Trait Compatibility Matrix](#trait-compatibility-matrix)
    - [Effects of Trait Combination](#effects-of-trait-combination)
  - [2 Editions to Choose From](#2-editions-to-choose-from)
    - [`Standard` Experience](#standard-experience)
    - [`Researcher` Experience](#researcher-experience)
    - [`Researcher Loot` Experience](#researcher-loot-experience)
  - [Compatibility](#compatibility)
  - [Recognition](#recognition)

## Summary

7 Days to Die Modlet: Genetically modify seeds to grow plants with new properties

[Standard Edition Introduction (YouTube)](https://youtu.be/Rlf7xDVKjIE) | [Researcher Edition Differences (YouTube)](https://youtu.be/4QvH_5q_P2g)

## Features

*Have you ever wanted to customize your seeds so they can meet your personal needs?*

### Seed Enhancement

Craft the **Hot Box** (a new workstation) to modify seeds with a variety of special traits!

Trait Name | Description
:---: | ---
Bonus | further doubles crop yield (4x yield over unmodified crops).
Explosive | triggers a concealed explosive [comparable to cooking pot mine] when stepped on, struck with a melee weapon, or hit with an arrow. *Due to the flexible nature of plants, the detonator will not trigger if struck with bullets or other explosives*.
Fast | plant reaches maturity in half the time.
Renewable | clean, fresh water allows this plant to spread out its roots and produce crops endlessly.
Thorny | integrates with sharp, metal thorns. Touching them will cause one to bleed.
Underground | fused with mushroom dna, allowing growth without the need for sunlight.

#### Trait Compatibility Matrix

Traits can also be combined (up to 2), though not all are compatible with one other.

|   | B | E | F | R | T | U |
| :---: | :---: | :---: | :---: | :---: | :---: | :---: |
| B | ✅ | 🚫 | ✅ | ✅ | ✅ | ✅ |
| E | 🚫 | ✅ | ✅ | 🚫 | 🚫 | ✅ |
| F | ✅ | ✅ | ✅ | ✅ | ✅ | ✅ |
| R | ✅ | 🚫 | ✅ | 🚫 | ✅ | ✅ |
| T | ✅ | 🚫 | ✅ | ✅ | ✅ | ✅ |
| U | ✅ | ✅ | ✅ | ✅ | ✅ | 🚫 |

> *Note that Mushrooms cannot be given the Underground trait because they already have it.*

### Effects of Trait Combination

In situations where two different traits are adopted, the plant will benefit from each trait in equal measure.

But in situations where a trait is doubled, the name of the trait changes in the following ways:

Trait Name | Description
:---: | ---
Bountiful Bonus | further ***quadruples*** crop yield (***8x*** yield over unmodified crops)
Extremely Explosive | triggers a concealed explosive ***with a large payload*** [comparable to hubcap mine] when stepped on, struck with a melee weapon, or hit with an arrow. Due to the flexible nature of plants, the detonator will not trigger if struck with bullets or other explosives
Rapid Growth | reaches maturity in a ***quarter*** of the time
Extra Thorny | integrates with ***many*** sharp, metal thorns. Touching them will cause one to bleed ***profusely***

## 2 Editions to Choose From

This modlet comes with 2 Editions: `Standard` and `Researcher`. The one you choose for your game or community should be carefully considered.

You can download the Edition you prefer from our [Latest Release](https://github.com/jonathan-robertson/gmo-farming/releases/latest) page by expanding the Assets link to see available downloads.

### `Standard` Experience

[Standard Edition Introduction (YouTube)](https://youtu.be/Rlf7xDVKjIE)

This Edition is the most vanilla-friendly experience you can expect from a mod like this.

The primary focus of this Edition is to encourage use and expand the base game's content: just craft the `Hot Box` to get started.

### `Researcher` Experience

[Researcher Edition Differences (YouTube)](https://youtu.be/4QvH_5q_P2g)

This Edition is more focused on player specialization and giving the player a new challenge to overcome.

- instead of having immediate access to the new seed recipes, the player needs to *researching* the recipes by crafting schematics.
- such research is time and resource intensive, requiring intentional effort in working towards the player's desired seeds and traits. Naturally, this will be a challenge and require a significant amount of farming.
- primary focus of this Edition is to provide a difficulty barrier to crafting these new seeds. While the recipes to craft the seeds aren't complicated or challenging, researching them is and this requires players to invest the time if they want the benefit from these enhanced crops. This Edition is an effort to prevent the GMO Farming mod from totally throwing the game out of whack with easy-to-craft super-crops

### `Researcher Loot` Experience

This Edition is the same as Researcher with one major change: players will be able to find schematics in quest loot.

Tier | Enhanced Chance | Single Trait Chance | Double Trait Chance
:---: | :---: | :---: | :---:
1 | 0% | 0% | 0%
2 | 1% | 0% | 0%
3 | 5% | 1% | 0%
4 | 15% | 5% | 1%
5 | 25% | 15% | 5%

## Compatibility

This modlet is compatible with Servers and Clients in all combinations; examine the chart below for details specific to your situation:

Environment | Compatible? | Details
:---: | :---: | ---
Dedicated Server | Yes | This mod is meant for dedicated servers only
EAC | Yes | You can leave EAC enabled on your server and client
P2P | Yes | Peer-to-peer multiplayer games only require the **host** to install this mod
Local | Yes | Installing this mod on the client is fully supported for local games

## Recognition

- Huge recognition for Shavick who spent a lot of time brainstorming and proving out this concept with me!
  - His input into this project made most of its coolest ideas possible.
  - He plans to use this mod in his own Overhaul called Crystal Hell [(discord link)](https://discord.gg/xvSgfUJfsG); this mod is only a small piece if the awesome stuff they've got going on over there!
- Obviously The Fun Pimps for making a fun game to play and mod :]
",0,0,1,9,farming,"[7-days-to-die, 7daystodie, farming, mod, modlet, server-side]",00000
1316,Krushak-Agricultural_Management_System,sanidhya2803,N/A,N/A,https://api.github.com/repos/sanidhya2803/Krushak-Agricultural_Management_System,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1DD:33EB:2BB633:5ACD0A:652240BC.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,farming,"[N, /, A]",00000
1317,NiceMusicalChairs,Andros-Spica,N/A,https://github.com/Andros-Spica/NiceMusicalChairs,https://api.github.com/repos/Andros-Spica/NiceMusicalChairs,"The NMC model, a sequel of the Musical Chairs model, explores how land use competition could be constrained by cooperation and social institutions.","[![DOI](https://zenodo.org/badge/87985803.svg)](https://zenodo.org/badge/latestdoi/87985803)

# Nice Musical Chairs model

The NMC model, a sequel of the Musical Chairs model, explores how land use competition could be constrained by cooperation and social institutions.

The NMC model test the effects of social structure and dynamics, according to which individual stakeholders compete and cooperate depending on adscription to social groups. The model also considers two particular modalities of cooperative mechanisms: land use pairing, the awarding, in terms of productivity, of any direct collaboration between farming and herding within a group; and group management, the prerogative of a group leadership to manage individual stakeholders in order to pursue a particular proportion between farming and herding. Lastly, the model allows assessing the effects of these mechanisms under either open or restricted access to pasture regimes.

Angourakis, A., Salpeteur, M., Ferreras, V.M., Gurt Esparraguera, J.M. (2017). The Nice Musical Chairs Model: Exploring the Role of Competition and Cooperation Between Farming and Herding in the Formation of Land Use Patterns in Arid Afro-Eurasia. Journal of Archaeological Method and Theory. doi:10.1007/s10816-016-9309-8
",0,0,2,0,farming,"[agent-based-modeling, agent-based-simulation, archaeology, competition, cooperation, farming, history, land, land-use, land-use-change-simulation, landuse, musical-chairs-model-series, netlogo-model, pastoralism]",00000
1318,smart_farm,vinojv96,N/A,https://github.com/vinojv96/smart_farm,https://api.github.com/repos/vinojv96/smart_farm,Smart farm using IoT,"# smart_farm
Smart farm using IoT
![alt text](https://github.com/vinojv96/smart_farm/blob/master/20200425_175519.jpg ""Project Image"")
",0,0,2,0,farming,"[arduino, dht22, esp8266, farming, iot, irrigation, nano, nrf24l01, soil-moisture-sensor, weather, wemos-d1-mini]",00000
1319,versus,VanijaDev,N/A,https://github.com/VanijaDev/versus,https://api.github.com/repos/VanijaDev/versus,"Platform for staking, farming & launchpool","# Versus

## Deployment flow (VersusToken, VersusStaking)
1. deploy VersusToken() Smart Contract
2. deploy VersusVoting(address _devFeeReceiver, address _versusToken) Smart Contract
```_devFeeReceiver```- address, that will receive dev fee
```_versusToken``` - VersusToken address
3. voters will get VERSUS as voting bonus, so mint substantial amount of Versus tokens to owner
4. call ```approve(address spender, uint256 amount)``` on VERSUS token.
```spender``` - VersusVoting address
```amount``` - max int or very big number


## Deployment flow (VersusAccessToken, VersusStakingAccess)
1. deploy VersusAccessToken() Smart Contract
2. deploy VersusStakingAccess(address _versusToken, address _versusAccessToken) Smart Contract
```_versusToken``` - VersusToken address
```_versusAccessToken```- VersusAccessToken address
3. call ```updateStakingAddress(address _versusStakingAccess)``` on VersusAccessToken token.
```_versusStakingAccess```- VersusStakingAccess address
4. distribute VersusAccessToken amoung users using ```mint(uint256 _amount,  address _receiver)```
```_amount``` - VersusAccessToken amount
```_receiver```- receiver address
5. approve VersusStakingAccess for VersusToken


## Deployment flow (LaunchpoolStaking)
1. deploy LaunchpoolStaking(address _versusToken, uint256 _lockPeriod, uint256 _stakeRequired) Smart Contract
```_versusToken``` - VersusToken address
```_lockPeriod``` - lock period
```_stakeRequired``` - stake amount
2. OWNER must approve LaunchpoolStaking for VersusToken
3. users must approve LaunchpoolStaking for VersusToken


## Deployment flow (VersusLaunchpool)
1. deploy VersusLaunchpool(address _depositToken, uint256 _maxCap, address _stakingPool, uint256 _allocationInvestorBase, uint256 _allocationInvestorPro) Smart Contract
```_depositToken``` - Token used for deposit
```_maxCap``` - Max cap amount
```_stakingPool``` - Staking pool address to check stakes
```_allocationInvestorBase``` - Allocation amount for Base investors
```_allocationInvestorPro``` - Allocation amount for Pro investors
2. users must approve VersusLaunchpool for VersusToken
",0,0,2,0,farming,"[erc20, farming, staking]",00000
1320,corporate-farming,apoorvgupta25,N/A,https://github.com/apoorvgupta25/corporate-farming,https://api.github.com/repos/apoorvgupta25/corporate-farming,,"# Corporate Farming

---
[Corporate Farming](https://corporate-farming.netlify.app/) is a web-based application, created with the objective of opening new markets for farmers. This is the part of our Last Year Project wherein we worked on this farmer-centric application. Farmers can use this application to list their lands on the website, which can be leased by corporates. Alternatively, the farmer can also sell their harvest if they are not willing to lease their land. Both of these things are contract-based. Farmers can also take advantage of different prediction models on the website as well.

---
<img src=""https://raw.githubusercontent.com/apoorvgupta25/corporate-farming/main/frontend/src/assets/homepage.jpg"" alt=""website""/>

## Technologies Used 👩‍💻

- [MongoDB](https://www.mongodb.com/)
- [ExpressJS](https://expressjs.com/)
- [NodeJS](https://nodejs.org/)
- [ReactJS](https://reactjs.org/)
- [Flask](https://flask.palletsprojects.com/en/2.1.x/)



## Features 💫

As mentioned above along with leasing land and selling their harvest farmers can use following features to increase their produce and profit.

 - Add and Manage their land and products
 - Chat and Contract for Corporates
 - Disease Prediction using leaf images
 - Crop Prediction based on soil
 - Price Prediction based on WPI and recent trends
 - Weather Forecast from Accu weather API


## Deployment ☁

This project frontend is deployed on Netlify while backend is deployed on Heroku. The MongoDB Cloud is used as database.

## The Project Is Live Here 📽

[Corporate Farming](https://corporate-farming.netlify.app/)

## Other Team Members
- [Sidhhant Shaha](https://github.com/sid2475)
- [Atharva Dave](http://github.com/asd1510)
- [Krunal Dattani](https://github.com/Krunal-D)
",0,0,2,0,farming,"[corporate-farming, farming, mern-stack, nodejs]",00000
1321,lp-farming-masterchef,blockchainlover2019,N/A,https://github.com/blockchainlover2019/lp-farming-masterchef,https://api.github.com/repos/blockchainlover2019/lp-farming-masterchef,Cosmwasm smart contract for lp farming,"{'message': 'Not Found', 'documentation_url': 'https://docs.github.com/rest/repos/contents#get-repository-content'}",0,0,1,0,farming,"[cosmos, cosmwasm, farming, juno, staking]",00000
1322,LHMS,oracle002,N/A,N/A,https://api.github.com/repos/oracle002/LHMS,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1FF:4776:2BCC18:5AEE9F:652240EC.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,farming,"[N, /, A]",00000
1323,Crop_Yield_Prediction,Rogendo,N/A,https://github.com/Rogendo/Crop_Yield_Prediction,https://api.github.com/repos/Rogendo/Crop_Yield_Prediction,"This project is a crop yield prediction. It predicts the most suitable crop to be cultivated or grown in a certain area with certain temperatures, rainfall, soil ph etc.","
<p align=""center""><img src=""logo.png"" /></p>

<h1 align=""center""> Crop Yield Prediction - Readme.md</h1>

<p align=""center""> Intro - Welcome to Crop Yield Prediction model, making predictions easy for you</p>

<hr/>

<p> The Crop yield prediction  uses a series of inputs to analyze a crop's growwing factors such as soil ph, temperature, rainfall, Potassium, Nitrogen and Phosporus level. Based on the results, it recommends potential crop grown. </p>

# How to run it?

The following instructions were tested on the Windows and Linux with Python 3.8.

1. Clone this repository

```

git clone   https://github.com/Rogendo/Crop_Yield_Prediction.git

```

```

cd Crop_Yield_Prediction/

```

2. Create and activate virtual environment 

```

python -m venv venv

```

on Linux system

```

source venv/bin/activate

```

on Windows system

```

.\venv\Scripts\activate.bat

```

3. Install requirements

```

pip install  -r requirements.txt

```

4. Run the project 

```

streamlit run app.py

```

![Screenshot 2023-04-09 210137](https://user-images.githubusercontent.com/62094358/230796373-a9a891c3-d416-45af-83f6-1abd7ffc1a37.png)

<h3> List of features </h3>

<ul>
 
  <li>Crop yield prediction</li>
</ul>








<h3>Contributing</h3>
Keep it simple..

<h3>Author or Acknowledgments</h3>
<ul>
  <li>Peter Rogendo</li>

</ul>

<h3>License</h3>

This project is licensed under the MIT License
",0,0,1,0,farming,"[farming, machine-learning, prediction, streamlit]",00000
1324,FarmHands,kalpanibhagya,N/A,https://github.com/kalpanibhagya/FarmHands,https://api.github.com/repos/kalpanibhagya/FarmHands,Web portal to build Organic Farming Volunteering Community in Sri Lanka,"# Web portal to build Organic Farming Volunteering Community in Sri Lanka
Project for SCS2108 Programming IV. 

**Group Details** 

Group Number: 29 

Group Members: 

* K.M.K.B. RANASINGHE (Leader)
* M.N. THATHSARANI            
* D.P.W. JAYASURIYA           
* T.G.K. DHARMAWARDHANA       


**Table of Content**

1.	Problem Nature and the Business                                      

2.	Objectives

3.	Requirements

4.	Client details



**01)	Problem and the Nature of the business:** 

In this project, our client wants a web portal to build an island wide volunteering community for organic farming. This community will be a non-profit organization and the ultimate goal of this community web application is to make a country full of organic farming products. 

**02)	Objectives** 

*	Make awareness about organic farming throughout the country especially among young generation 
*	Provide help for organic farmers to increase their crops. 
*	Make a platform for volunteers to gather and share their helping hands to improve the organic farming in Sri Lanka. 

**03)	Requirements**

_**Functional requirements of the web application**_

This web application will consist of following functionalities. 

*	There should be profiles for the Volunteers, Farmers and the Administrators. Therefore we have to have sign up, login processes and profile creation process for each type of actors. 
*	Administrator, Farmers and Volunteers can post volunteering opportunities/event all around the country from this web application. 
*	Volunteers, Farmers can join those opportunities. (When joining for a volunteering opportunity, volunteers who live nearby to the particular volunteering event will be appointed as leaders and they will facilitate every needs of the volunteers coming from other places). 
*	Leaders/volunteers, farmers can make chat groups for particular event. 
*	And there will be a main forum for ask any question which are related to organic farming and get answers. Here any member can ask questions and answer them also.
*	Administrators can generate reports on the volunteering events. 
*	We will create a blog for our web application. In here any member of the system can add blog posts about new facts on organic farming and organic foods.
*	We will provide all the contact details of the agriculture offices, Govijana sewa offices, Ministry of Agriculture and other agriculture related government bodies.
*	And we will give facility to hold online conferences for interesting parties of organic farming though our web application. Those will organized by the system administrators
*	Farmers can publish details about their farms, crops and prices of their products to the audience of the web application. Other farmers and volunteers can view them also.

_**Non-functional requirements of the web application**_

*Performance* 

*	Time that the system takes to database queries between the backend server and web application should be less than 5 seconds. 
*	Report generation should be done within 5 secs. 

*Security* 

*	No one can change others profile details other than profile owner. 
*	User login information will be hashed and salted before storing in the database.  

*Usability* 
*	A sleek, easy to use and consistent UI throughout the web application. Tooltips will be provided. Icons and designs will communicate at a glance with the user. Therefore it is easy to use this application. 
Portable 
*	System will be able to work with any platform like windows, mac or linux. So it is portable. 

We will create an android mobile application for volunteers and farmers also. 

_**Functional requirements of the mobile application**_ 

*	Sign up, login processes and profile creation process for Volunteers and Farmers. 
*	Farmers and Volunteers can post volunteering opportunities/events island wide. 
*	Volunteers, Farmers can join those opportunities. 
*	Leaders/volunteers, farmers can make chat groups for particular event. 
*	And there will be a main forum for ask any question and get answers. Here any member can ask questions and answer them also.
*	In our mobile application any member of the system read, add bookmarks to the blog posts which are posted on the web application’s blog.
*	Provide all the contact details the agriculture offices, Govijana sewa offices, Ministry of Agriculture and other agriculture related government bodies.
*	Farmers can publish details about their farms, crops and prices of their products and other farmers and volunteers can see them also.

_**Non-Functional requirements of the mobile application**_

*Performance* 

*	Time that the system takes to database queries should be less than 5 seconds. 

*Security* 

*	No one can change others profile details other than profile owner. 
*	User login information will be hashed and salted before storing in the database.  

*Usability* 
*	A sleek, easy to use and consistent UI throughout the mobile application. Icons and designs will communicate at a glance with the user. Therefore it is easy to use this application. 

**04)	Client**

* Client name: Sadeep Rathnayake
* Client address: “Samaptha”, Bollatha, Ganemulla
* Client contact-no. : 0716138815

",0,0,2,2,farming,"[codeigniter, farming, mvc-architecture, organic, php, volunteer-management, volunteer-opportunities]",00000
1325,greenpi-backend,gabrielmdc,N/A,https://github.com/gabrielmdc/greenpi-backend,https://api.github.com/repos/gabrielmdc/greenpi-backend,Backend for GreenPi project,"# GreenPi backend ![Build status](https://github.com/gabrielmdc/greenpi-backend/workflows/Master%20push/badge.svg)

This project is the backend of the project GreenPi, it saves the historical and configuration of GreenPi system.

## Table of contents:

- [Requirements](#Requirements)
- [Installation](#Installation)
- [Docker image repositories](#Docker%20image%20repositories)
- [How to use the Docker images](#How%20to%20use%20the%20Docker%20images)
  - Pull simple image
  - Using _docker-compose_
- [License](#License)

## Requirements

You must to set-up some environment variables:

_Mandatory:_

- **DATABASE_URI**: The URI of MongoDb instance
- **GOOGLE_CLIENT_ID**: This is used for the Google authentication
- **GOOGLE_CLIENT_SECRET**: This is used for the Google authentication
- **GOOGLE_REDIR_URL**: This is used for the Google authentication
- **SECURITY_JWT_SECRET**: This is used to encrypt the JWT Token

_Optional:_

- **SECURITY_BCRYPT_SALT_ROUNDS**: An integer used for encrypt data
- **PORT**: The server port
- **SERVER_NAME**: The server name. By default, the field _name_ from package.json is used
- **DATABASE_URI_TEST**: The URI of MongoDb instance. Used only for unit testing

For the develop environment, you can add a _nodemon.json_ file which is not tracked by GIT. More info [here](https://github.com/remy/nodemon/blob/master/doc/sample-nodemon.md)

Example (_nodemon.json_):

```json nodemon.json
{
  ""env"": {
    ""DATABASE_URI"": ""mongo db url"",
    ""GOOGLE_CLIENT_ID"": ""xxx"",
    ""GOOGLE_CLIENT_SECRET"": ""xxx"",
    ""GOOGLE_REDIR_URL"": ""redir url"",
    ""SECURITY_JWT_SECRET"": ""xxx""
  }
}
```

## Using the Docker image

There are some official [repositories](#Docker%20image%20repositories).

```bash
docker pull gmdcwork/greenpi-backend:[version]
# Please set the correct variable values
docker run --name greenpi-backend-instance \
  -e DATABASE_URI='mongodb://mongo/greenpi-backend' \
  -e GOOGLE_CLIENT_ID="""" \
  -e GOOGLE_CLIENT_SECRET="""" \
  -e GOOGLE_REDIR_URL="""" \
  -e SECURITY_JWT_SECRET="""" \
  -d greenpi-backend:[version]
```

## Installation

```bash
yarn install
```

## Run

Start the application in _production_ mode:

```bash
yarn start:prod
```

The command `yarn start` is similar but it does not set the environment variable `NODE_ENV`.

## Admin user

This step is only necessary for the first admin!

In order to create an admin user, you must have to get access to the database and in the collection _User_, modify the field roleName to _Admin_

Now the user has the _Admin_ privileges.

## Build Docker container

You can use an [official docker image](#Docker%20image%20repositories) Docker image repositories:

```bash
yarn build
```

Now you could run the Docker image. [Example explained](#Using%20the%20Docker%20image)

## Docker image repositories

There are two repositories:

- [Git package registry](https://github.com/gabrielmdc/greenpi-backend/packages)
- [DockerHub](https://cloud.docker.com/u/gmdcwork/repository/docker/gmdcwork/greenpi-backend)

## Credits

Author: [Gabriel MDC](https://github.com/gabrielmdc/)

## License

[MIT](./LICENSE)
",0,0,2,19,farming,"[backend, farming, greenpi, greenpi-backend, plants, urban-farming]",00000
1326,farmers-paradise,athreyapatel,N/A,https://github.com/athreyapatel/farmers-paradise,https://api.github.com/repos/athreyapatel/farmers-paradise,Project for helping farmers to improve their life.,"# Farmers-Paradise
Project for helping farmers to improve their life.
## Working:
### Contributions:
 Contributions on success of the project is can help me doing more.
## Action Plan:
  Start 
  1. Website : Started working on website.
    
  2. Applications i.e ios and Android
",0,0,1,0,farming,"[farmers, farming]",00000
1327,MyDigitalFarm0.3,haki99,N/A,https://github.com/haki99/MyDigitalFarm0.3,https://api.github.com/repos/haki99/MyDigitalFarm0.3,"A C based program which is a farm game, made for a university homework","{'message': 'Not Found', 'documentation_url': 'https://docs.github.com/rest/repos/contents#get-repository-content'}",0,0,1,0,farming,"[c, farming, graphics, homework, menu, realtime-games, sdl, sdl2]",00000
1328,Fenix-Farm-V2,FenixFinance,N/A,https://github.com/FenixFinance/Fenix-Farm-V2,https://api.github.com/repos/FenixFinance/Fenix-Farm-V2,Fenix Farm Interface V2,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C1BD:178A:2C9D0E5:5B55F52:6522427D.'}",0,0,1,0,farming,"[farming, ifo, liquidity, lottery, staking, typescript]",00000
1329,Space-farm,MohammadYasinKarbasian,N/A,N/A,https://api.github.com/repos/MohammadYasinKarbasian/Space-farm,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C1F7:7AEF:2DD2E4C:5DB47FD:6522427E.'}",N/A,N/A,N/A,N/A,farming,"[N, /, A]",00000
1330,farmbud,ivanvinicius,N/A,N/A,https://api.github.com/repos/ivanvinicius/farmbud,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C127:784E:75DD4B:F3550B:6522427E.'}",N/A,N/A,N/A,N/A,farming,"[N, /, A]",00000
1331,AnaliseDoSoftwareTankMix,AnaJulia27,N/A,N/A,https://api.github.com/repos/AnaJulia27/AnaliseDoSoftwareTankMix,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C1D9:58D0:7709A2:F50173:6522427F.'}",N/A,N/A,N/A,N/A,farming,"[N, /, A]",00000
1332,www-project,IamGroooooot,N/A,N/A,https://api.github.com/repos/IamGroooooot/www-project,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C159:37E7:2D1285B:5C4CEC0:6522427F.'}",N/A,N/A,N/A,N/A,farming,"[N, /, A]",00000
1333,Agriplus,Joseph-kirigo,N/A,N/A,https://api.github.com/repos/Joseph-kirigo/Agriplus,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1C3:53F5:2806DDC:524D180:6522410C.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,farming,"[N, /, A]",00000
1334,Pesticide-Recommendations,Alstonargodi,N/A,N/A,https://api.github.com/repos/Alstonargodi/Pesticide-Recommendations,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C1BB:7AEF:2DD3071:5DB4C71:65224280.'}",N/A,N/A,N/A,N/A,farming,"[N, /, A]",00000
1335,Farmly.AI,akhilesh-kanmanthreddy,N/A,N/A,https://api.github.com/repos/akhilesh-kanmanthreddy/Farmly.AI,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1A4:3F63:2E65945:5EEAE63:6522410F.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,farming,"[N, /, A]",00000
1336,viandeendirect,benjaminpochat,N/A,N/A,https://api.github.com/repos/benjaminpochat/viandeendirect,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C1CA:178A:2C9D436:5B56623:65224281.'}",N/A,N/A,N/A,N/A,farming,"[N, /, A]",00000
1337,BeetFarmer,oneseedfruit,N/A,N/A,https://api.github.com/repos/oneseedfruit/BeetFarmer,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C1DD:1F34:1BA3D35:38CEC4F:65224281.'}",N/A,N/A,N/A,N/A,farming,"[N, /, A]",00000
1338,zero-ios-v3,ekylibre,N/A,N/A,https://api.github.com/repos/ekylibre/zero-ios-v3,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C119:2CBC:77A019:F68C01:65224282.'}",N/A,N/A,N/A,N/A,farming,"[N, /, A]",00000
1339,CROPS,kolergy,N/A,https://github.com/kolergy/CROPS,https://api.github.com/repos/kolergy/CROPS,C.R.O.P.S. : CRoissance Optimale des Plantes en Sol. Gestion des capteurs et stockage dans CouchDB,"# CROPS
C.R.O.P.S. : CRoissance Optimale des Plantes en Sol. Gestion des capteurs et stockage dans CouchDB

## C'est Quoi?
Colecte des donnees environementales pour unbe croissance optimale des plantes
et stockage de ces donnees dans une base de donmnee de type couchDB

Le systeme est base sur les capteurs suivants:
 - Le capteur DHT22 permet la mesure de la temperature ambiante
   ainsi que du niveau d'humiditee ambiante
 - Le capteur CSMS V1.2 permet la mesure de la quantitee d'eau dans le sol.
   CSMS: 'Capacitive Soil Moisture Sensor'
 - Le captteur BMP085 permet la mesure de la pression et de la temperature
   (de maniere semblet'il plus precise aue le DHT mais je ne l'ai pas encore verifie)
 - Le capteur TSL2561 Permet de mesurer la lumiere recue par les plantes
 
 le tout controle par un microcontroleur de type ESP32 avec wifi integre le ""LoLin d32-Pro"" et utilisant un afichage e-Paper LOLIN_IL3897.
 
 - main.cpp       : Contiens le code a flasher sur l'EPS32 et qui vas collecter les donnees
 - cropsDB.ipyndb : Contiens le notebook Jupyter permetant de visualiser et d'analyser les donnees
 
## Pour quoi ?
Il y as deux idees deriere ce developement:
- Tester differents capteurs pour une agriculture plus digitale et voir ce que l'on peux tirer de l'analyse des donnees mais tout de meme a bas cout et partager avec tous les moyens de le metre en oeuvre (l'ensemble du systeme de captation des donnees coute moins de 50$)
- L'autre question est est'il possible de produire en appartement avec eclairage artificiel tout en emetant autant voire moins de CO2 que des produits issus du suipermarche.

Ce Developement c'est effectue au Fablab Artilect https://artilect.fr/ et as ete presente pour la premiere fois durant le Fablab Festival 2019 https://fablabfestival.artilect.fr/
 
## Coment l'installer?

### Instalation de la partie capture des donnees
pour pouvoir fonctioner il vous faudra soit avoir un acces a CouchDB soit instale sur votre ordinateur soit une en ligne de style CloudAnt dont la version Lite (Gratuite) devrais etre sufisante: https://cloud.ibm.com/catalog/services/cloudant) 

le code main.cpp est prevu pour etre utilise avec PlatformIO sur atom
* Il vous faudra installer Atom: https://atom.io/
* Ensuite platformIO: dans Atom aller dans settings > Pakages > et instaler ""platformio-ide""
* Dans platformIO Home, aller dan libraries et instalez les libraries suivantes:
  * Adafruit BMP085 
  * Adafruit GFX
  * Adafruit Unified Sensor
  * Adafruit TSL2561
  * ArduinoJson (Par Benoit Blanchon)
  * DHTesp (Par Bernd Giesecke)
  * NTPClient (Par Fabrice Weinberg)
  * TimeLib (Par Paul Stoffregen)
  * La librarie LOLIN_EPD (Par Wemos) est aussi necessaire mais n'est pas disponible en installation automatique il faudra aller la chercher ici: https://github.com/wemos/LOLIN_EPD_Library et copier le repository dans le repertoire lib de votre projet.
* Modifier le main.cpp afin dy introduire vos parametres WiFi et CouchDB dans les definitions 
 
### Instalation de la partie analyse des donnees
a detailler...
 
Ce code peut etre utilise avec la Nano ferme disponible sur thingiverse: https://www.thingiverse.com/thing:3654094

![NanoFarm Picture](https://github.com/kolergy/CROPS/blob/master/IMG_20190528_093121088.jpg)
![Sensor Board Layout1](https://github.com/kolergy/CROPS/blob/master/IMG_20190604_190130655_HDR.jpg)
![Sensor Board Layout2](https://github.com/kolergy/CROPS/blob/master/IMG_20190604_190144534_HDR.jpg)
![Display initial set-up](https://github.com/kolergy/CROPS/blob/master/IMG_20190604_190254926.jpg)
![Display data](https://github.com/kolergy/CROPS/blob/master/IMG_20190604_195025825.png)
",0,0,0,2,farming,"[artilect, atom, bmp085, cpp, csms, d32-pro, dht22, e-paper, epaper, epd, esp32, esp32-arduino, fablab, farm, farming, grow, il3897, platformio, python3, tsl2561]",00000
1340,project-carlos-on-edge,flxdot,N/A,N/A,https://api.github.com/repos/flxdot/project-carlos-on-edge,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C182:1F34:1BA3E5A:38CEEB9:65224282.'}",N/A,N/A,N/A,N/A,farming,"[N, /, A]",00000
1341,goats,Dcruzships,N/A,N/A,https://api.github.com/repos/Dcruzships/goats,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C1CB:41B1:70D927:E97CF4:65224283.'}",N/A,N/A,N/A,N/A,farming,"[N, /, A]",00000
1342,hodlvalley-dex-contract,agelessZeal,N/A,N/A,https://api.github.com/repos/agelessZeal/hodlvalley-dex-contract,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C1D6:984A:75D017:F2FF53:65224283.'}",N/A,N/A,N/A,N/A,farming,"[N, /, A]",00000
1343,jewishagriculture,lauraneckstein,N/A,N/A,https://api.github.com/repos/lauraneckstein/jewishagriculture,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C147:6B96:28607AC:5317580:652240D2.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,farming,"[N, /, A]",00000
1344,Cultivation,northwesttrees-gaming,N/A,N/A,https://api.github.com/repos/northwesttrees-gaming/Cultivation,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C176:2319:6950DE:DA1CBD:65224284.'}",N/A,N/A,N/A,N/A,farming,"[N, /, A]",00000
1345,MoreBlox,northwesttrees-gaming,N/A,N/A,https://api.github.com/repos/northwesttrees-gaming/MoreBlox,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C1EA:3BF5:73E5BE:EF0AA8:65224285.'}",N/A,N/A,N/A,N/A,farming,"[N, /, A]",00000
1346,blend-calculator,HarvestProfit,N/A,N/A,https://api.github.com/repos/HarvestProfit/blend-calculator,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C1D7:7AEF:2DD3523:5DB5632:65224285.'}",N/A,N/A,N/A,N/A,farming,"[N, /, A]",00000
1347,arduino-cerea-remote-control,danrauch,N/A,N/A,https://api.github.com/repos/danrauch/arduino-cerea-remote-control,N/A,"# Cerea remote control

[![MIT license](https://img.shields.io/github/license/danrauch/arduino-cerea-remote-control.svg)](https://opensource.org/licenses/MIT)
[![Latest Release](https://img.shields.io/github/release/danrauch/arduino-cerea-remote-control/all.svg)](https://github.com/danrauch/arduino-cerea-remote-control/releases/latest)
[![Donate](https://img.shields.io/badge/Donate-PayPal-green.svg)](https://paypal.me/danrauch)

Language: [**EN**](README.md) | [DE](README_DE.md)

Control and evaluate serial-exposed **Cerea** features comfortably with an Arduino based touchscreen remote control. To see it in action have a look [here](https://www.youtube.com/watch?v=ZrCHwqn8U7Y) (German)!

**Currently supported features**

- Setting MARC, A, B, right, left, AUTO via touchscreen (command: @CEREA)
- Reading @SDOSE command to control a relay (RELAY_PIN_1/2; default: pins 49/53) depending on first boom box section and GPS speed. Can be enabled/disabled via touchscreen (enabled when ""Aktiv"" and ""Streu"" buttons are active).
- Control relays also manually via touchscreen (""Streu"" button).
- Reading @STATUSAM if available to sync UI
- Showing current boombox states (rectangles at top of display: grey = unused, red = not active, green = active)
- BETA: Control different boomboxes (1-10) via the @BOOMBOX command  (Page 2: 1 - 10; note that page changing could lead to missed status data from Cerea, so the GUI might be not in sync with Cerea for some moments) 
- Vibrate on touch; output on adjustable pin (VIBRATION_MOTOR_PIN; default: built-in LED pin of board, which is pin 13 on the MEGA) and with adjustable vibration time (VIBRATION_TIME_MS; default: 200 ms)


    ![Page 1](/doc/resources/cerea-remote-page1.jpg ""Page 1"") ![Page 2](/doc/resources/cerea-remote-page2.jpg ""Page 2"")

**Necessary Hardware**

- [Arduino MEGA 2560](https://store.arduino.cc/mega-2560-r3)
- 3.5"" TFT/touchscreen shield (480x320; 16 bit colors) supported by the Adafruit TFTLCD and Touchscreen library (tested: [Kuman version with ILI9486](https://www.amazon.com/Kuman-Arduino-Screen-Tutorials-Mega2560/dp/B075FP83V5/); more can be added)
- *If USB serial connection is used:* capacitor (>22 µF)
- Optional: vibration motor (e.g. [seeed Groove VM](https://www.seeedstudio.com/category/Grove-c-1003/Grove-Vibration-Motor.html))
- Optional: relay(s)  (e.g. [seeed Groove 2CH Relay](https://www.seeedstudio.com/Grove-2-Channel-SPDT-Relay-p-3118.html))

*Important if a USB serial connection is used:* Per default the Arduino resets completely as soon as a serial connection is opened. For some reason in case of the Cerea output the board thinks it is flashed and thus freezes. To avoid this the auto reset must be disabled via a capacitor (>22 µF) between the reset and ground pin.

Riku from the German [Cerea forum](http://cerea-forum.de/) built an excellent housing for the Arduino and was nice enough to provide all necessary resources (German). Have look at the basics [here](https://cerea-forum.de/forum/index.php?thread/440-externe-touchscreen-bedieneinheit-bauanleitung/) and the extension [here](https://cerea-forum.de/forum/index.php?thread/493-externe-touchscreen-bedieneinheit-automatisierte-schaltung/). **PLEASE NOTE: This housing is only compatible with releases before 0.2.2, as it does not account for the button shift introduced by the boombox state indicators. Please use [Release 0.2.1](https://github.com/danrauch/arduino-cerea-remote-control/releases/tag/v0.2.1) if you intend to use the housing.**

**Dependencies**

To use this sketch the following libraries must be downloaded and imported to the Arduino IDE. Either download them directly with the provided links and import them (""Sketch""->""Add .ZIP Library"") or search them in the Arduino IDE Library Manager (""Tools""->""Library Manager""). It is recommended to keep the libraries up to date!

- [Adafruit GFX Library](https://github.com/adafruit/Adafruit-GFX-Library) <-- *important: use version 1.5.3*
- [Adafruit TFT-LCD Library](https://github.com/adafruit/TFTLCD-Library)
- [Adafruit Touchscreen Library](https://github.com/adafruit/Adafruit_TouchScreen)
- [MCUFRIEND_kbv Library](https://github.com/prenticedavid/MCUFRIEND_kbv)

## About Cerea

[Cerea](https://www.cereagps.com/) is an agricultural GPS auto-steer system for Windows, developed by a Spain-based company called SOLUCIONES TECNOLOGICAS CEREA.

It uses serial communication to exchange command sequences, which allow to remote control the system from any device with a serial interface. The following commands were reverse engineered, so no guarantee!

General information:

- ""1"" represents on/true
- ""0"" represents off/false
- every command is followed by a CR-LF (`\r\n`)

### **Cerea > Remote**

Commands seem to arrive in 0.5 second cycles (confirmation needed).

| Cerea command                                  | Controls                                      | Description                     | Example                |
|------------------------------------------------|-----------------------------------------------|---------------------------------|------------------------|
| **@STATUSAM;*A*;*M*;END**                     | *A*:&nbsp;AUTO&nbsp;[1/0]<br/>*M*:&nbsp;MARC&nbsp;[1/0] | Current state of MARC and AUTO. | `""@STATUSAM;1;1;END\r\n""`<br/>(AUTO and MARC active) |
| **@CEREA;*VGPS*;*-1*;<br/>*S0*;*S1*;...;*S9*;END** | *VGPS*:&nbsp;GPS&nbsp;speed in km/h&nbsp;[float]<br/>*-1*: reserved<br/>*S0&#8209;9*:&nbsp;boom sections&nbsp;[1/0] | Current GPS speed and boom box section states (left to right).<br/>Number of transmitted sections matches Cerea settings (max. 10).  | `""@CEREA;5.0;-1;1;END\r\n""`<br/>(GPS speed 5.0 km/h; section 1 active) |
| **@HIDRAU;*F*;END**                            | *F*:&nbsp;Flag&nbsp;[1/0]                 | If section was already taken care of info is sent. | `""@HIDRAU;1;END\r\n""`<br/>(Section already taken care of) |

### **Remote > Cerea**

| Cerea command                                  | Controls                                      | Description                                | Example                |
|----------------------------------------------- |-----------------------------------------------|------------------------------------------- |------------------------|
| **@SDOSE;*M*;*C*;*U*;*U*;<br/>*AP*;*BP*;*A*;*L*;*R*;*TL*;*TR*;END** | *M*:&nbsp;MARC&nbsp;[1/0]<br/>*C*:&nbsp;CONTOUR&nbsp;[1/0]<br/>*U*: UNKNOWN&nbsp;[1/0]<br/>*AP*: A point&nbsp;[1/0]<br/>*BP*:&nbsp;B point&nbsp;[1/0]<br/>*A*:&nbsp;AUTO&nbsp;[1/0]<br/>*L*: LEFT&nbsp;[1/0]<br/>*R*: RIGHT&nbsp;[1/0]<br/>*TL*:&nbsp;TURN LEFT&nbsp;[1/0]<br/>*TR*:&nbsp;TURN&nbsp;RIGHT&nbsp;[1/0] | Controls Cerea. | `""@SDOSE;1;0;0;0; \ 0;0;1;0;0;0;0;END\r\n""`<br/>(activate MARC and AUTO) |
| **@MARC** | - | Activates MARC. | `""@MARC\r\n""` (activate MARC) |
| **@AUTO** | - | Activates AUTO. | `""@AUTO\r\n""` (activate MARC) |
| **@BOOMBOX;<br/>*S0*;*S1*;...;*S9*;END** | *S0&#8209;9*: boom sections&nbsp;[1/0] | Set boom box section states (left to right).<br/>The state of all 10 sections must be transmitted. | `""@BOOMBOX;  \ 0;0;0;0;0;0;0;0;0;0;\r\n""`<br/>(deactivate all sections) |
| **@PRESION;*P*;END** | *P*: pressure&nbsp;[float] | Set pressure in ?<br/>(confirmation needed).  | `""@PRESION;1.0;END\r\n""`<br/>(set pressure to 1.0) |
| **@CAUDAL;*F*;END** | *F*: flow&nbsp;[float] | Set flow in L/min<br/>(confirmation needed).  | `""@CAUDAL;1.0;END\r\n""`<br/>(set flow to 1.0) |
| **@APLICADO;*A*;END** | *A*: applied&nbsp;flow&nbsp;[float] | Set applied flow in L/ha<br/>(confirmation needed).  | `""@APLICADO;1.0;END\r\n""`<br/>(set applied flow to 1.0) |

## Donation

If this project / information helps you, you can support me by attributing to a [""Maß""](https://bar.wikipedia.org/wiki/Bia) beer for me [**here**](https://paypal.me/danrauch) :)
",N/A,N/A,N/A,N/A,farming,"[N, /, A]",00000
1348,Farming-In-The-Jefferson-Years,dhimitrimano,N/A,https://github.com/dhimitrimano/Farming-In-The-Jefferson-Years,https://api.github.com/repos/dhimitrimano/Farming-In-The-Jefferson-Years,"Farming In The Jefferson Years, also known as just ""Farm Game,"" was a farming simulator that my US History teacher made, and the first game I coded individually in Java. Since it is my first game, it was bound to be coded horribly from the very start. However, it works, and that's all that mattered back in the Jefferson Years.","# Farming In The Jefferson Years

I created this game in 2018, during the time that I was in AP Programming A, a time before my teacher taught me what a ""class"" or ""array"" was. My US History teacher created this game to show how much of a gamble farming used to be during the Westward Expansion, and I decided to port it to Java in one day, over nine long hours. This game is a simple one. Just buy some livestock or seeds and hope that you can make a profit by selling your items at the end of the year after prices have fluctuated. However, unlike in a stock market simulator where prices fluctuate for everyone, the prices that you, the farmer, must pay to buy livestock and seeds each year are fixed. I wish you good luck, farmer, for you are going to need it.
",0,0,1,0,farming,"[farm, farmer, farmers, farming, gambling, gambling-game, game, java, jefferson-years, livestock, prices]",00000
1349,Defarm,local-investment-token,N/A,https://github.com/local-investment-token/Defarm,https://api.github.com/repos/local-investment-token/Defarm,DeFarm,"#DeFarm
Decentralized Farm system
",0,0,1,0,farming,[farming],00000
1350,pai,paif,N/A,https://github.com/paif/pai,https://api.github.com/repos/paif/pai,Multi-Chain AMM and Yield Farm With Innovative Features,"{'message': 'Not Found', 'documentation_url': 'https://docs.github.com/rest/repos/contents#get-repository-content'}",0,0,1,0,farming,"[amm, bsc, dex, farming, polygon]",00000
1351,jubilant-sniffle,Serbbi,N/A,https://github.com/Serbbi/jubilant-sniffle,https://api.github.com/repos/Serbbi/jubilant-sniffle,A cute farming game made with love.,"# Code name: jubilant-sniffle

## Description

`Farm Game` is currently the name of my project, which is a tile based farming game. It is supposed to be a cute, relaxing game where you can plant crops, take care of animals and decorate your farm how you like it. There are many features I would like to add like: ambient sounds, a town square where you can do shopping, day and night cycle and many more. Right now the game is under development, not even version 0.1, which will contain: the basic terrain, free camera movement, an inventory, some tools to change the tiles and harvest crops and a couple of plants.

## Built With

Here are all the libraries, frameworks and languages I used so far in the project.

* Java
* OpenGL
* JOML (Java OpenGL Math Library)
* GLSL

<p align=""right"">(<a href=""#readme-top"">back to top</a>)</p>

## Getting Started

1. Clone the repo
```sh
   git clone https://github.com/Serbbi/jubilant-sniffle.git
```
2. Go to Main 
3. Press Run and Enjoy

## Roadmap

- [x] Terrain
- [x] Camera
- [ ] Inventory
- [ ] Crops
- [ ] Tools

## License

Distributed under the MIT License. See `LICENSE.txt` for more information.

## Acknowledgments

* [ThinMatrix](https://www.youtube.com/@ThinMatrix)
",0,0,1,0,farming,[farming],00000
1352,Sunrise,Undermmon,N/A,https://github.com/Undermmon/Sunrise,https://api.github.com/repos/Undermmon/Sunrise,Sunrise brings hardcore modifications to farming.,"{'message': 'Not Found', 'documentation_url': 'https://docs.github.com/rest/repos/contents#get-repository-content'}",0,0,1,0,farming,"[farming, hardcore, minecraft-plugin, papermc]",00000
1353,opensourcefarming,IOCare,IOCare,https://github.com/IOCare/opensourcefarming,https://api.github.com/repos/IOCare/opensourcefarming,World's First Ever Open Source Farming Repository,"# OpenSourceFarming
World's First Ever Open Source Farming Repository

![alt text](https://iocare.in/storage/app/media/opensourcefarming1.jpg ""Open Source Farming"")

## Main Intentions behind this project are
* to share, techniques, technologies, hardware & softwares with farming community over entire world.
* To make farming less pain.
* To stop farmers suicides and build the confidence among farming community.

## License
Apache License 2.0
```
Copyright [2017] [ioCare, Pune]

Licensed under the Apache License, Version 2.0 (the ""License"");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an ""AS IS"" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
```
",0,0,2,0,farming,"[farming, farmingsimulator, iot, opensource, robotics]",00000
1354,haasil,vshelke,N/A,https://github.com/vshelke/haasil,https://api.github.com/repos/vshelke/haasil,SRM Hackthon,"# haasil
SRM Hackthon
",0,0,2,0,farming,"[dustbin-locator, farming, hackathon, iot]",00000
1355,fishfarming,ecofrugalism,N/A,https://github.com/ecofrugalism/fishfarming,https://api.github.com/repos/ecofrugalism/fishfarming,Suitable fish species for backyard fish farming (aquaculture),"{'message': 'Not Found', 'documentation_url': 'https://docs.github.com/rest/repos/contents#get-repository-content'}",0,0,1,0,farming,"[aquaculture, farming, fish, local-food]",00000
1356,CC-CactusFarmBuilder,absolument,N/A,https://github.com/absolument/CC-CactusFarmBuilder,https://api.github.com/repos/absolument/CC-CactusFarmBuilder,"Computercraft, turtle building a cactus farm","# CC-CactusFarmBuilder
Computercraft, turtle building a cactus farm

  - Vertical passive cactus farm 3x3
  - Turtle gradually builds the farm stage by stage, as and when it is provided with the necessary resources.
  - When sky limit is reached, program files is renamed as TooHig_filename.lua to prevent unnecessary maneuvers.

### Prerequisites

CC:Tweaked 1.83.1 ( https://github.com/SquidDev-CC/CC-Tweaked )

### Installing

Pastebin : https://pastebin.com/2SPDSxPt

```
pastebin get 2SPDSxPt build.lua
```

## Design

Based on a 3x3 tower for passive farming. When cactus grow up items will pop and fall on the floor. Build a pool below with water streams to harvest products.
![Cactus farm stages](https://raw.githubusercontent.com/absolument/CC-CactusFarmBuilder/master/2019-07-16_13.54.35.png)
![Cactus farm base](https://raw.githubusercontent.com/absolument/CC-CactusFarmBuilder/master/2019-07-16_15.24.26.png)

## Usage

![Screen](https://raw.githubusercontent.com/absolument/CC-CactusFarmBuilder/master/2019-07-16_15.28.30.png)

Place your turtle on the floor (Full of fuel as far as possible), facing the center of cactus tower farm, at 3 blocks of distance.
Build the first stage of the cactus farm tower.
Then run the program, provide any materials.

For one stage, at least :
  - 4 cactus,
  - 4 sand,
  - 4 cobblestone
  - 2 fences
  - 1 torch

On inventory events, the number of stages the turtle can build is updated.
Presse Enter to start building. Then turtle will walk to the center and go up to the next stage to build and start to work. When job is done, the turtle will return to start position.

## Custom

If you choose other start position, edit theses parts :

```
function ascent()
	output(""Ascent phase"")
	
	--take place in the center
	output(""Align to center"")
	for i=1,3 do -- <--EDIT
		turtle.forward()
	end
```

```
function descent()
	output(""Descent"")
	repeat
		local move = turtle.down()
	until not move
	output(""Repositionning"")
	for i=1,3 do -- <--EDIT
		turtle.back()
	end
end
```

## License

Feel free


",0,0,1,0,farming,"[cactus, computercraft, farming, turtle]",00000
1357,seedly,TolgaKara,N/A,https://github.com/TolgaKara/seedly,https://api.github.com/repos/TolgaKara/seedly,Seedly is a Farming SaaS App with a focus on eCommerce and a useful Dashboard,"## React+Firebase+TailwindCSS
",0,0,2,0,farming,"[ecommerce, farming, react, tailwindcss, user-interface]",00000
1358,dafarmz-bot,ZaneH,N/A,https://github.com/ZaneH/dafarmz-bot,https://api.github.com/repos/ZaneH/dafarmz-bot,"1.0 of DaFarmz bot. Uses Elixir, Nostrum, Postgres, and Node.js. Game assets not included.","# DaFarmz Bot

![Preview](https://raw.githubusercontent.com/ZaneH/dafarmz-website/main/img/plot.png)

## Run Locally

### Clone the project

```bash
git clone https://github.com/ZaneH/dafarmz-bot.git
cd dafarmz-bot
```

### Setup environment variables

You'll need to create an application in the Discord Developer Portal to
get a token for your bot. You'll also need to enable developer mode in
Discord to get your bot's user ID.

The permissions your bot needs includes:

- Read Messages
- Send Messages
- Manage Messages
- Read Message History
- Add Reactions (unused, but planned)

```
# .env
export DISCORD_USER_ID=<your bot's user ID>
export DISCORD_TOKEN=<your bot's token>
```

### Install dependencies

```bash
mix deps.get
```

### Install JS dependencies

```bash
cd js_image/
npm install
cd ..
```

### Create database

```bash
mix ecto.create
```

### Run migrations

Currently there is no seed data. You'll need to populate the database
manually with shop items, lifecycle images, etc.

```bash
mix ecto.migrate
```

### Run the bot

```bash
iex -S mix
```

## License

<a href=""https://creativecommons.org/licenses/by-nc-nd/4.0/"">
    <img height=""50px"" src=""https://mirrors.creativecommons.org/presskit/buttons/88x31/png/by-nc-nd.png"" />
</a>

### In English

You are free to:
- Share — copy and redistribute the material in any medium or format
    - The licensor cannot revoke these freedoms as long as you follow the license terms.

Under the following terms:
- Attribution — You must give appropriate credit, provide a link to the license, and indicate if changes were made. You may do so in any reasonable manner, but not in any way that suggests the licensor endorses you or your use.
- NonCommercial — You may not use the material for commercial purposes.
- NoDerivatives — If you remix, transform, or build upon the material, you may not distribute the modified material.

## Assets

Game assets in the 1.0 version are from [Sprout Lands asset pack by Cup Nooble](https://cupnooble.itch.io/sprout-lands-asset-pack). Due to their license, I will not be redistributing these assets.

If you run this locally, you'll need the following files:

- `js_image/images/layer-1-v2.png` (For the base image, grid + grass)
- `js_image/images/layer-2-v2.png` (For the base image, border decoration)
- `js_image/images/*.png` (For the lifecycle images. These need to be added to the database manually for each `item` row.)",0,0,1,0,farming,"[discord-bot, discord-game, elixir, farming, farming-simulator, game, nostrum]",00000
1359,Harvest_Predictor,SeanP2001,N/A,N/A,https://api.github.com/repos/SeanP2001/Harvest_Predictor,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C19E:505E:2D3E5E:5DC799:6522417D.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,farming,"[N, /, A]",00000
1360,presisawit_app,Izan2020,N/A,https://github.com/Izan2020/presisawit_app,https://api.github.com/repos/Izan2020/presisawit_app,Palm oil farming management app,"# presisawit_app

currently work in progress.

## Getting Started

This project is a starting point for a Flutter application.

A few resources to get you started if this is your first Flutter project:

- [Lab: Write your first Flutter app](https://docs.flutter.dev/get-started/codelab)
- [Cookbook: Useful Flutter samples](https://docs.flutter.dev/cookbook)

For help getting started with Flutter development, view the
[online documentation](https://docs.flutter.dev/), which offers tutorials,
samples, guidance on mobile development, and a full API reference.
",0,0,1,0,farming,"[business-management, e-plantation, farming, firebase, flutter]",00000
1361,rucodia_backend,SoftmedTanzania,N/A,N/A,https://api.github.com/repos/SoftmedTanzania/rucodia_backend,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C17A:7B5B:718F70:EA2665:65224113.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,farming,"[N, /, A]",00000
1362,disease-prediction-web,stephenmuema,N/A,https://github.com/stephenmuema/disease-prediction-web,https://api.github.com/repos/stephenmuema/disease-prediction-web,Farmily Ecommerce systems,"# disease-prediction-web

This generates charts for disease occurrence based on the location searched and the data shared from the desktop clients to the rest API for better visualization
and understanding by the person observing the data. PII is encrypted and not visible.
",0,0,2,0,farming,"[ecommerce, farming]",00000
1363,xMRCH-farms,MerchDAO,MerchDAO,https://github.com/MerchDAO/xMRCH-farms,https://api.github.com/repos/MerchDAO/xMRCH-farms,MerchDAO's smart contracts for staking ($MRCH and Uniswap LP token) and farming $xMRCH,"# xMRCH-farms

# Development

## Local environment

1. Copy .env.example to .env
2. Add keys to .env file.

```sh
npx hardhat node
```

## Testing
```sh
npx hardhat test
```
",0,0,0,0,farming,"[ethereum-contract, farming, lp, mining, staking]",00000
1364,gravityfinance-analytics,agelessZeal,N/A,https://github.com/agelessZeal/gravityfinance-analytics,https://api.github.com/repos/agelessZeal/gravityfinance-analytics,This is the gravity finance analytics site.,"# Gravity Analytics

- This is the analytics site ui source for the gravityfinance.

Analytics site for the [GravityFinace](https://gravityfinance.io/).

### To Start Development

###### Installing dependencies
```bash
yarn
```

###### Running locally
```bash
yarn start
```
",0,0,1,0,farming,"[defi, dex, farming, launchpad, staking]",00000
1365,deltathon-krisakha,roshankc123,N/A,https://github.com/roshankc123/deltathon-krisakha,https://api.github.com/repos/roshankc123/deltathon-krisakha,"""krisakha"" is an AI integrated crop monitoring webapp built for farmer. it has features like plant disease prediction and soil classification through image, list of information about crops, and a hardware to measure the real time variables like temperature and moisture of soil.","This is the repo of deltathon.
",0,0,1,0,farming,"[ai, farming, ml, monitoring]",00000
1366,agrorader,Sandeep9975,N/A,https://github.com/Sandeep9975/agrorader,https://api.github.com/repos/Sandeep9975/agrorader,Agrorader farm management software enables large businesses to have complete control over their farming processes across different stakeholders.,"# agrorader
Agrorader Farm Management Software is a powerful and comprehensive solution designed to empower large businesses in the agriculture industry. With Agrorader, companies can gain complete control and visibility over their farming processes, allowing them to efficiently manage and optimize their operations across various stakeholders.

This software offers a wide range of features and tools that streamline and automate key farm management tasks. From planning and resource allocation to monitoring and reporting, Agrorader provides a centralized platform that integrates data from multiple sources, enabling businesses to make informed decisions and maximize productivity.


",0,0,1,0,farming,"[crop-detection, farming, farming-website]",00000
1367,Solar_Powered_Multipurpose_Agricultural_Robot,devanshu3,N/A,https://github.com/devanshu3/Solar_Powered_Multipurpose_Agricultural_Robot,https://api.github.com/repos/devanshu3/Solar_Powered_Multipurpose_Agricultural_Robot,To design and develop a solar-powered autonomous multipurpose agricultural robot that can be controlled through Bluetooth enabled Android-app.​,"# Solar-Powered Agricultural Robot

This research project focuses on the development of a versatile agricultural robot powered by solar energy and operated through an infrared remote control. The robot performs various tasks in the agricultural field, including soil plowing, seed planting, grass cutting, and crop watering. The system converts solar power into electrical energy using solar panels, which is then stored in a rechargeable battery. The robot comprises essential components such as a microcontroller (Atmega328), motor driver (L298N), gear motors, water pump, grass cutter, lead-acid battery, and solar panel.

## Introduction

The integration of robotic technology in agriculture has the potential to reduce labor costs, working hours, safety risks, and environmental impacts. Robotic automation offers enhanced productivity in farming operations, including plowing, seed sowing, grass cutting, and crop watering. These operations are powered by a combination of battery and solar energy. The robot is controlled through an infrared remote control, enabling easy operation for farmers.

## Seed Sowing Operation

The traditional method of seed sowing based on assumptions of seed spacing and depth placement is inefficient and labor-intensive. To address this, the developed robot automates the seed sowing process, eliminating the need for manual labor and reducing strain on farmers.

## Grass Cutting Operation

Unwanted grass is cut using a high RPM DC motor with a stainless-steel blade attached to the bottom of the robot. This automated process ensures efficient grass cutting without manual effort.

## Plant Watering Operation

The robot includes a designed water sprayer using a mini water pump powered by a 12-volt DC supply. This mechanism facilitates automated watering of crops, eliminating the need for manual labor.

## Materials and Methodology

## Hardware Components

- **DC 12 V Gear Motors**: These motors produce high torque while maintaining low horsepower, making them suitable for various applications in robotics.
- **Motor Driver L298N**: This integrated circuit is a high-voltage, high-current dual full-bridge driver designed to drive inductive loads such as motors, relays, and solenoids.
- **Solar Panel**: A set of interconnected solar photovoltaic modules that generate electricity from sunlight. The solar panel provides a renewable energy source for powering the robot.
- **IR Remote & Receiver**: The infrared remote control serves as the input device for operating the robot, and the IR receiver sensor detects the signals from the remote control.
- **Microcontroller Atmega328**: The microcontroller acts as the central control unit for the robot, receiving signals from the IR receiver and generating commands to control various robot operations.

## Software Description (Arduino IDE)

The Arduino IDE is used for writing and compiling the code for the robot. It provides an easy-to-use platform for programming the microcontroller and uploading the code to the Arduino module. The IDE supports both C and C++ languages and offers debugging, editing, and compilation features.


## Results

The robot's operation is based on signals received from the IR receiver sensor via the IR remote control. These signals are decoded by the microcontroller, which generates commands to control the robot's various operations. The solar panel collects sunlight and converts it into electrical energy, which is stored in a lead-acid battery. This stored power is then utilized to power the robot's motors and other components.

## Conclusion

The solar-powered agricultural robot presented in this research paper offers significant benefits for farmers, reducing their efforts and time investment. The automation provided by this robot minimizes the need for manual labor and improves the efficiency of farming operations. Future developments could involve integrating programmable logic controllers (PLC) and supervisory control and data acquisition (SCADA) systems for full automation.

---

devanshu3,
rawatdev0781@gmail.com
",0,0,1,0,farming,"[arduino-uno, farming, major-project, robotics, simulation]",00000
1368,FarmIT,Sunhick,N/A,https://github.com/Sunhick/FarmIT,https://api.github.com/repos/Sunhick/FarmIT,End to end help for farmers ,"# FarmIT
End to end help for farmers 

[![Build Status](https://travis-ci.com/Sunhick/FarmIT.svg?token=V7oRpAyDFTA72Tjf3Srd&branch=master)](https://travis-ci.com/Sunhick/FarmIT/)

<object data=""https://github.com/Sunhick/FarmIT/blob/master/docs/FarmIT_Project_Proposal.pdf"" type=""application/pdf"" width=""700px"" height=""700px"">
    <embed src=""https://github.com/Sunhick/FarmIT/blob/master/docs/FarmIT_Project_Proposal.pdf"">
        This browser does not support PDFs. Please download the PDF to view it: <a href=""https://github.com/Sunhick/FarmIT/blob/master/docs/FarmIT_Project_Proposal.pdf"">Read FarmIT Project Proposal</a>.</p>
    </embed>
</object>
",0,0,3,0,farming,"[android-application, farming]",00000
1369,reap-poc,colaxalabs,colaxalabs,https://github.com/colaxalabs/reap-poc,https://api.github.com/repos/colaxalabs/reap-poc,reap proof-of-concept smart contracts and web app,"# reap-PoC

This repository contains source code for reap proof-of-concept smart contracts and web app
",0,0,2,0,farming,"[blockchain, ethereum, farming, react, smart-contracts, solidity]",00000
1370,farming-the-rio-grande-valley,alpual,N/A,N/A,https://api.github.com/repos/alpual/farming-the-rio-grande-valley,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1FA:2EE5:285F31A:530EA02:652240EF.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,farming,"[N, /, A]",00000
1371,DankMemer_Farm,C0ffeeL0ver,N/A,https://github.com/C0ffeeL0ver/DankMemer_Farm,https://api.github.com/repos/C0ffeeL0ver/DankMemer_Farm,"A Script to farm dank memer on discord, using post requests.","{'message': 'Not Found', 'documentation_url': 'https://docs.github.com/rest/repos/contents#get-repository-content'}",0,0,1,0,farming,"[dank-memer, discord, dotenv, farm, farming]",00000
1372,thebluebutton,katzworld,N/A,https://github.com/katzworld/thebluebutton,https://api.github.com/repos/katzworld/thebluebutton,The blue button project PagesVFX ,"# theBlueButton Key to the World 

## The blue button is to help with the unlocking of $bob faucets on lands owned by PAGESVFX ##
---

merry go round shutdown ![image](https://user-images.githubusercontent.com/3157472/169630574-a66b6331-85b0-4b18-8c5f-4af544eeb654.png)


fun while it lasted good things have been learned and skills have been challenged will revisit this work get working ... TBC

~~### Confirmed to work with ### 
~* Chrome(101) with TamperMonkey extension(ver. 4.16 ) 
~* FireFox(100) with the Grease Monkey extension (ver. 4.11) 

~~Grab your favorite browser with the extension > cut and paste the bluebutton.js into a new script window 

 ~~save and enable it... enable it  did you enable it  ok f5  refresh (The Man who sold the world page) it should load up you should be greeted with a ""blue"" button CLICK IT ![image](https://user-images.githubusercontent.com/3157472/167072075-43d99d01-aecb-41d5-a768-77bd7e0c9fe2.png)
... next up is the metamask one click to sign in (it should be blue by default I dont control that one.)  ![image](https://user-images.githubusercontent.com/3157472/167072212-9bc0bf92-01d1-4dd1-915a-6670f7a9695c.png)
 Congrats you now have the key to pagesVFX Lands. 
 ![image](https://user-images.githubusercontent.com/3157472/167072096-cfb463c6-2b16-483b-bcdb-dc651a56995e.png)
click the final blue GO and get to farming $bob. 
  
 ~~This portal is yours to use and plunder the plots of $bob ! 
  its a key to the WORLD (3210 at time of making) and counting 

",0,0,1,0,farming,"[cryptocurrency, ethereum-cl, farming, metaverse, metaverse-tool, mining]",00000
1373,Simba-Machineries-Fabricators,kenmwangi,N/A,https://github.com/kenmwangi/Simba-Machineries-Fabricators,https://api.github.com/repos/kenmwangi/Simba-Machineries-Fabricators,Nextjs Frontend Site for Simba Machineries & Fabricators,"This is a [Next.js](https://nextjs.org/) project bootstrapped with [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app).

## Getting Started

First, run the development server:

```bash
npm run dev
# or
yarn dev
```

Open [http://localhost:3000](http://localhost:3000) with your browser to see the result.

You can start editing the page by modifying `pages/index.js`. The page auto-updates as you edit the file.

[API routes](https://nextjs.org/docs/api-routes/introduction) can be accessed on [http://localhost:3000/api/hello](http://localhost:3000/api/hello). This endpoint can be edited in `pages/api/hello.js`.

The `pages/api` directory is mapped to `/api/*`. Files in this directory are treated as [API routes](https://nextjs.org/docs/api-routes/introduction) instead of React pages.

## Learn More

To learn more about Next.js, take a look at the following resources:

- [Next.js Documentation](https://nextjs.org/docs) - learn about Next.js features and API.
- [Learn Next.js](https://nextjs.org/learn) - an interactive Next.js tutorial.

You can check out [the Next.js GitHub repository](https://github.com/vercel/next.js/) - your feedback and contributions are welcome!

## Deploy on Vercel

The easiest way to deploy your Next.js app is to use the [Vercel Platform](https://vercel.com/new?utm_medium=default-template&filter=next.js&utm_source=create-next-app&utm_campaign=create-next-app-readme) from the creators of Next.js.

Check out our [Next.js deployment documentation](https://nextjs.org/docs/deployment) for more details.
",0,0,2,0,farming,"[farming, machineries, nextjs, react]",00000
1374,4diac-SlurryTanker-sample,Meisterschulen-am-Ostbahnhof-Munchen,Meisterschulen-am-Ostbahnhof-Munchen,https://github.com/Meisterschulen-am-Ostbahnhof-Munchen/4diac-SlurryTanker-sample,https://api.github.com/repos/Meisterschulen-am-Ostbahnhof-Munchen/4diac-SlurryTanker-sample,The Open Source Slurry Tanker based on Eclipse 4diac™ / logiBUS®,"# 4diac-SlurryTanker-sample
## The Open Source Slurry Tanker based on Eclipse 4diac™ / logiBUS®


### Need help or have a question? Join the chat at [Gitter](https://gitter.im/Meisterschulen-am-Ostbahnhof-Munchen/4diac-SlurryTanker-sample) or [open a new Discussion](https://github.com/Meisterschulen-am-Ostbahnhof-Munchen/4diac-SlurryTanker-sample/discussions)

[![Join the chat at https://gitter.im/Meisterschulen-am-Ostbahnhof-Munchen/4diac-SlurryTanker-sample](https://badges.gitter.im/Meisterschulen-am-Ostbahnhof-Munchen/4diac-SlurryTanker-sample.svg)](https://gitter.im/Meisterschulen-am-Ostbahnhof-Munchen/4diac-SlurryTanker-sample?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)


[SlurryTanker/Ablaufplan.md](SlurryTanker/Ablaufplan.md)



![WhatsApp Image 2023-01-30 at 08 51 21 (2)](https://github.com/Meisterschulen-am-Ostbahnhof-Munchen/4diac-SlurryTanker-sample/assets/69573151/7cddedd2-e5f0-4e82-9b5e-6eaccb80aad0)



![rn_image_picker_lib_temp_f4c333db-9c1f-4236-ab8a-83d935a3eb60](https://github.com/Meisterschulen-am-Ostbahnhof-Munchen/4diac-SlurryTanker-sample/assets/69573151/55cb5c10-016d-41f1-869f-ecbd6662924a)
",0,0,0,0,farming,"[11783, farming, iec-61499, iso-11783, iso11783, isobus]",00000
1375,Fadming,eduescobar13,N/A,https://github.com/eduescobar13/Fadming,https://api.github.com/repos/eduescobar13/Fadming,Repositorio que contiene todos los ficheros del Trabajo de Fin de Grado de Ingeniería Informática de la Universidad de La Laguna.,"# ESIT ULL Grado de Ingeniería Informática
## TRABAJO DE FIN DE GRADO. Fadming
#### Realizada por Eduardo Escobar Alberto

##### Introducción
El proyecto consiste en la elaboración de una aplicación en Android para el tratamiento y cuidado de fincas.
El objetivo es llevar un seguimiento personalizado de cada una de las plantas que integran el terreno cultivado, para ello, cada una tendrá un código QR asociado, que le irá indicando al cliente el estado en que se encuentra. Si el agricultor realiza un nuevo proceso sobre la planta, desde la propia aplicación se actualizará el estado de la misma, para en el siguiente paso conocer el punto del proceso en el que se encuentra dicha planta.
La aplicación tendrá la posibilidad de añadir nuevos clientes, nuevas fincas, nuevas plantas, etc. Todo esto a través de una aplicación web conectada a la base de datos.

##### Antecedentes y estado actual del tema
Buscando en varios lugares de la red o en PlayStore (mercado de aplicaciones de Android) no se ha encontrado nada similar, ya que hay que tener muy en cuenta que este proyecto es **idea del tutor**, añadiendo al trabajo el incentivo de ser algo novedoso.
Sí que podrían existir aplicaciones que permitan la gestión de cualquier aspecto de forma genérica, es decir, aplicaciones con recordatorios o con la posibilidad de almacenar tablas con cualquier tipo de datos. Pero no existe nada tan concreto en este tema y que se realice a través de este tipo de códigos.
",0,0,1,0,farming,"[android, aplication, farming, la-laguna, qrcode, tfg, universidad]",00000
1376,MusicalChairs,Andros-Spica,N/A,https://github.com/Andros-Spica/MusicalChairs,https://api.github.com/repos/Andros-Spica/MusicalChairs,Agent-based model representing the competition for land between stakeholders of farming and herding ,"[![DOI](https://zenodo.org/badge/87983533.svg)](https://zenodo.org/badge/latestdoi/87983533)

# MusicalChairs
Agent-based model representing the competition for land between stakeholders of farming and herding.


This Agent-Based model intends to explore the conditions for the emergence and change of land use patterns in Central Asian oases and similar contexts. Land use pattern is conceptualized as the proportion between the area used for mobile livestock breeding (herding) and sedentary agriculture (farming). We assume that these two forms of land use interact in recurrent competitive situations, given that the land useful for both activities at the same time is limited and there is a pressure to increase them, due to demographic and/or economic growth. Implementation and simulation of the Musical Chairs model were done using Netlogo.

Angourakis, A., Rondelli, B., Stride, S., Rubio-Campillo, X., Balbo, A.L., Torrano, A., Martinez, V., Madella, M., Gurt, J.M., 2014. Land Use Patterns in Central Asia. Step 1: The Musical Chairs Model. J. Archaeol. Method Theory 21, 405–425. doi:10.1007/s10816-013-9197-0
",0,0,2,0,farming,"[agent-based-modeling, agent-based-simulation, archaeology, competition, farming, history, land, land-use, land-use-change-simulation, landuse, musical-chairs-model-series, netlogo-model, pastoralism]",00000
1377,Decentralized-Community-Farming,TheAlgo,N/A,https://github.com/TheAlgo/Decentralized-Community-Farming,https://api.github.com/repos/TheAlgo/Decentralized-Community-Farming,A Decentralised community sharing farming platform built on Ethereum Block-chain,"
# AgroShare
Despite the fact that agriculture accounts for as much as a quarter of the Indian economy and employs an estimated 60 percent of the labor force, it is considered highly inefficient, wasteful, and incapable of solving the hunger and malnutrition problems. Despite progress in this area, these problems have continued to frustrate India for decades. It is estimated that as much as one-fifth of the total agricultural output is lost due to inefficiencies in harvesting, transport, and storage of government-subsidized crops. Solving these issues will play a significant role in the socio-economic condition of this country. And the past year was all about the motion of decentralization and giving the right of consumers data in their own hand and privacy and bridging the concept of how blockchain will change the world for good of the people. So we bring a simple proof of concept where we demonstrate how the concept of a community and decentralization can help farmers grow economically & socially. Investments in agriculture sounds pretty inept for a normal consumer, we break this idea and now we introduce the concept of general investment and shareholding in the agriculture ecosystem. Using Blockchain our concept guarantees a 100 percent transparent   system in an end to end model, which means the farmer will be assured that what is paid for in the market for his produce is at par with the maximum profit possible because we remove the involvement of a lot of middle men between the farmer and the market leading to a higher profit to both retailer and the farmer. Having a structured community helps the idea of shared growth and learning which leverage the involvement of very poor farmers directly in the market directly, the two major benefits we project here is the overall risk in agriculture space is reduced because of the community support every farmer receives from the other fellow in that respective community and the overall production reach to the market will increase as the production will be from the whole community and from individual farmers. We now introduce the idea of task and reputation. Unorganised sector, also known as own account enterprises, refers to all unlicensed, self-employed or unregistered economic activity such as owner manned general stores, handicrafts and handloom workers, rural traders, farmers, etc. The idea of task is derived from the fact that it will allow every daily wage worker to participate in the community work in a structured way allowing them correct wage and the opportunity bringing them to the formal sector in this country. Reputations are another part of this concept of community is the about giving back and someway helping the community grow though your involvement in it which in return can be used for several purposes like buying seed etc.


# Project Wireframe 


![framework](https://drive.google.com/file/d/1IlAv71SGDj0hNUSoo_fV3QlA2Z92de4J/view?usp=sharing) 

This is the wireframe of our platform where we try to bring in everyone starting right from the investor which can be you to the farmer to the shareholder and even the panchayat and the people who are selling it to retail or the wholesale.
So talking about the working!
Using this platform is very simple. 
- Shareholder/ Investor - sure, you want to invest in the agricultural ecosystem and looking for a return.The strategy is simple you invest in any of the given community with a percentage of stake you want to buy and keep it just like normal investment in any company. With the growth in agricultural yield and community development the price of the stock increase and then it’ your choice to hold it or sell it.
- Farmer - you have some land (be a part of a community). What it takes you may ask? You have to have your identification card and your asset details of your land and some proprietary details of what you grow and that's all about it.  
- Daily wager - see what jobs are around you. Take up the job you like.

This idea will always keep the cash flow in the agriculture industry and farmers can now take out money from the community for the resources they need with/without load from the bank.


# Screenshots

![framework](https://drive.google.com/open?id=1IlAv71SGDj0hNUSoo_fV3QlA2Z92de4J)
![framework](https://drive.google.com/open?id=1IlAv71SGDj0hNUSoo_fV3QlA2Z92de4J)
![framework](https://drive.google.com/open?id=1IlAv71SGDj0hNUSoo_fV3QlA2Z92de4J)
![framework](https://drive.google.com/open?id=1IlAv71SGDj0hNUSoo_fV3QlA2Z92de4J)

# Tech Stack 

- Ethereum SDK 
- Angular JS
- Docker
- Hasura

# contribution and local developement 

- 'npm install'
- 'npm run dev'

- to contribute please follow open source contribution guide.



",0,0,0,6,farming,"[angular2, blockchain, css3, ethereum-blockchain, ethereum-contract, ethereum-wallet, farming, hacktoberfest, html5, javascirpt, web3js]",00000
1378,Cropper_finance,healer1064,N/A,https://github.com/healer1064/Cropper_finance,https://api.github.com/repos/healer1064/Cropper_finance,,"# Cropper Finance UI

## Build Setup

```bash
# install dependencies
$ yarn install

# serve with hot reload at localhost:3000
$ yarn dev
$ yarn devmode => generate and serve

# build for production and launch server
$ yarn build
$ yarn start

# generate static project
$ yarn generate
```

For detailed explanation on how things work, check out [Nuxt.js docs](https://nuxtjs.org).
",0,0,1,0,farming,"[eco-system, farming, pooling, solana, swap, trading, vue]",00000
1379,Project,erabhinavtyagi,N/A,https://github.com/erabhinavtyagi/Project,https://api.github.com/repos/erabhinavtyagi/Project,"It is a single Node, Single Channel gateway device for smart irrigation system using LoRa and ARM as a platform. It contains two codes : One using FreeRTOS with STM32F4xx and in baremetal mode using STM32F4xx.","{'message': 'Not Found', 'documentation_url': 'https://docs.github.com/rest/repos/contents#get-repository-content'}",0,0,1,0,farming,"[cortex-m4, embedded-c, embedded-systems, farming, freertos, iot, iot-application, lora-receiver, lora-transceiver, lorawan-gateway, smartfarm, stm32f4]",00000
1380,BeanFarmers,Stratagist7,N/A,https://github.com/Stratagist7/BeanFarmers,https://api.github.com/repos/Stratagist7/BeanFarmers,"You're a bean, you're a farmer! Grow crops, feed animals, and make it rich","# Bean Farmers:

An 8 week project for GDIM 32 at UCI; required utilization of co-op play, AI enemies, AI teammates, SOLID Principles, and design patterns.

## Instructions
Controls:
  - Player 1:
    - WASD to move
    - Space to interact
  - Player 2:
    - Arrow keys to move
    - Enter/return to interact

## Contributers
**Producer:** Haley Vlahos

**Game Designers:** Haley Vlahos, Kenneth Tang

**UI/UX:** Kenneth Tang

**Programmers:** Haley Vlahos, Kenneth Tang, Benjamin Hamilton

**Audio:** Haley Vlahos
",0,0,1,0,farming,"[animals, farming, farming-simulator, video-game]",00000
1381,dskfarm,dnyanesh2408,N/A,https://github.com/dnyanesh2408/dskfarm,https://api.github.com/repos/dnyanesh2408/dskfarm,Renting Services Website,"# Renting Services
DSK Farm - Renting Services

This is free community help responsive web project built for the farming purpose. Website built to order farm implement for a rent services. Built using HTML, CSS, Basic JavaScript, Boostrap 5 and Vs Code tool.

[Visit Live](https://dnyaneshkolhe.com/dskfarm/)
",0,0,1,0,farming,"[coding, farming, renting-services, webdevelopment]",00000
1382,rsg-farmer,Rexshack-RedM,Rexshack-RedM,https://github.com/Rexshack-RedM/rsg-farmer,https://api.github.com/repos/Rexshack-RedM/rsg-farmer,farming system for redm rsg-core,"# RexshackGaming
- discord : https://discord.gg/s5uSk56B65
- github : https://github.com/Rexshack-RedM

# Dependancies
- rsg-core

# Installation
- add the player_plants.sql to your database
- ensure that the dependancies are added and started
- add rsg-farmer to your resources folder
- add items to your ""\rsg-core\shared\items.lua""
- add images to your ""\rsg-inventory\html\images""

# Starting the resource
- add the following to your server.cfg file : ensure rsg-farmer
",0,0,0,0,farming,"[farming, redm, rsg-redm-framework]",00000
1383,technofarm,ralouekapoor06,N/A,https://github.com/ralouekapoor06/technofarm,https://api.github.com/repos/ralouekapoor06/technofarm,A farmer friendly bot to solve their problems with machine learning and robotics,"# Techno_Farm
A farmer friendly bot to solve the problems of the farmers with machine learning

## What is Technofarm ?

We have found that many farmers in india face the problem of getting accurate insights about their crop. Farmers try to make their best guess for predicting but they are not right for most of the times. For solving this issue we have come up with an autonomous bot which could move on the field and make predictions for the crop below.

## Tech Stack used and references ?

Software:-All the libraries mentioned below and Kaggle

Hardware:-Arduino

## Libraries to be installed before running

1. numpy
2. tensorflow
3. matplotlib
4. keras
5. pickle
6. sklearn
7. opencv


## Directory structure before running the following code

<pre>
--TechnoFarm<br/>
  |--Arduino and connections<br/>
    |--ip_webcam.py<br/>
  |--Plant_disease<br/>
    |--PlantVillage<br/>
      |--PlantVillage<br/>
        |--Pepperbell ...<br/>
        |--Potato ...<br/>
        .<br/>
        .<br/>
        .<br/>
        .<br/>
    |--train.py<br/>
    |--test.py<br/>
  |--weed_in_soyabean<br/>
    |--dataset<br/>
      |--broadleaf<br/>
      |--grass<br/>
      |--soil<br/>
      |--soyabean<br/>
    |--train.py<br/>
    |--test.py<br/>
    |--labels_transform.pkl<br/>
</pre>

## Dataset link

https://www.kaggle.com/emmarex/plantdisease<br/>
https://www.kaggle.com/fpeccia/weed-detection-in-soybean-crops


",0,0,1,0,farming,"[convolutional-neural-networks, farming, machine-learning]",00000
1384,MicrochipHorticultureLighting,Mouser-Electronics,Mouser-Electronics,https://github.com/Mouser-Electronics/MicrochipHorticultureLighting,https://api.github.com/repos/Mouser-Electronics/MicrochipHorticultureLighting,Smart horticulture lighting can help create as well as augment exisiting light sources to aid in the growth of more robust plants. ,"# Microchip Horticulture Lighting


### Mouser Project Link
https://www.mouser.com/applications/automating-controlling-greenhouse-lighting/
",0,0,3,0,farming,"[controlled-enviornment, farming, horticulture, iot, lighting, microchip, mouser, mouser-electronics]",00000
1385,badge-1,sambacha,N/A,https://github.com/sambacha/badge-1,https://api.github.com/repos/sambacha/badge-1,Sample Badge that goes with Badge-1 Tutorial,"{'message': 'Not Found', 'documentation_url': 'https://docs.github.com/rest/repos/contents#get-repository-content'}",0,0,3,0,farming,"[badges, earn, erc721, ethereum, farming, nft]",00000
1386,Farming-Friend,MartinTintin3,N/A,https://github.com/MartinTintin3/Farming-Friend,https://api.github.com/repos/MartinTintin3/Farming-Friend,Farming Friend is a desktop app that shows when and what is best to plant on farms based on weather calculations,"# Farming-Friend

**Farming Friend** is a desktop app that shows when and what is best to plant on farms based on weather calculations

# Contributing
If you want to contribute to this project, you can fork this project, then run `npm i` to install all dependencies. After that you can edit any code you want, push your changes to your fork, and then make a pull request to merge with this repo. 
*Note: Please test your changes first by running electron live. dist/ won't get commited, so it is only for your own testing*",0,0,1,0,farming,[farming],00000
1387,Reddit-Post-Bot,Shall0e,N/A,https://github.com/Shall0e/Reddit-Post-Bot,https://api.github.com/repos/Shall0e/Reddit-Post-Bot,An open-source Reddit bot meant for advertising and karma-farming. Easy to set up and easy to operate.,"# Reddit-Post-Bot
```Invoke-Expression -Command (Invoke-WebRequest -uri 'https://raw.githubusercontent.com/Shall0e/Reddit-Post-Bot/main/setup').content```
[Update Detection Api](https://api.github.com/repos/Shall0e/Reddit-Post-Bot/releases/latest)
",0,0,2,0,farming,"[advertise, bot, farming, gui, karma, karma-farming, open-source, powershell, ps1, pwsh, reddit, reddit-bot, reddit-post-bot, reddit-self-bot, selfbot]",00000
1388,Organic_First,Sreeja799,N/A,https://github.com/Sreeja799/Organic_First,https://api.github.com/repos/Sreeja799/Organic_First,This is a website deployed using Azure Static WebApps and Azure Bot. Inspired from our community service project to farms knowing the harm caused by chemicals. The website focus on spreading awareness about Organic Farming,"# Organic First

Organic First is a project developed as part of the Future Ready Talent Internship. This website serves as a valuable resource to learn more about organic farming and aims to raise awareness about its importance in sustainable agriculture. It also provides a platform for institutions to connect with us for conducting workshops and educational programs on Organic Farming.

**Project Link:** https://red-grass-04b8b7900.3.azurestaticapps.net/

**Project Demo Link:** https://youtu.be/kQ7mPMUCejQ

## Features

- **Educational Resources:** Explore a wide range of resources on organic farming techniques, sustainable practices, and the benefits of organic agriculture and also use Awareness bot

- **Awareness Building:** Learn about the importance of organic farming in promoting environmental sustainability, biodiversity, and the health benefits of consuming organic produce.

- **Institutional Collaboration:** Institutions interested in promoting organic farming can connect with us to organize workshops, training sessions, and educational programs on organic farming practices.

## Installation

1. Clone the repository: `git clone https://github.com/your-username/organic-first.git`
2. Navigate to the project directory: `cd organic-first`
3. Open the `index.html` file in a web browser.

## Technologies Used

- HTML
- CSS
- JavaScript

## Azure Technologies Used

- Static Web Apps
- Azure Bot

## Usage

1. Upon opening the website, you will be presented with the homepage showcasing various sections related to organic farming.
2. Explore the educational resources section to learn more about organic farming techniques and sustainable practices.
3. Gain awareness about the importance of organic farming and its benefits in promoting environmental sustainability and health.
4. Institutions interested in collaborating can contact us through the provided contact details on the website.

## Example Screenshots

**Home Page**


![1](https://github.com/Sreeja799/FRT_Project-Organic-First/assets/73770166/775d93a9-7dbc-4c05-a144-f7e10d13b757)


![2](https://github.com/Sreeja799/FRT_Project-Organic-First/assets/73770166/2859be42-3194-4dc2-8992-23f89ac3f8b0)



**About Page**

![3](https://github.com/Sreeja799/FRT_Project-Organic-First/assets/73770166/827f2ca1-1311-4943-9a4f-7607cabe8866)



**Workshops Page**

![4](https://github.com/Sreeja799/FRT_Project-Organic-First/assets/73770166/01e0f0ca-fcd9-48fa-836a-af0e05865b02)

![5](https://github.com/Sreeja799/FRT_Project-Organic-First/assets/73770166/99a84bf7-8f6a-4bba-9fe0-de9a8bded756)



**Stats Page**

![6](https://github.com/Sreeja799/FRT_Project-Organic-First/assets/73770166/a10a8bce-6dff-432d-998e-623d7cee39bb)



**Gallery Page**

![7](https://github.com/Sreeja799/FRT_Project-Organic-First/assets/73770166/5122171a-b3ca-4e3d-a8c0-321185259fca)



**Feedback Page**

![8](https://github.com/Sreeja799/FRT_Project-Organic-First/assets/73770166/b92f0bda-a0ee-4e18-927a-8102ff4c23d5)



**Contact Page**

![9](https://github.com/Sreeja799/FRT_Project-Organic-First/assets/73770166/1e1c0b39-09c4-4449-82f4-ab9e3f3d66a3)



**Awareness Bot Page**

![10](https://github.com/Sreeja799/FRT_Project-Organic-First/assets/73770166/18086ee8-61f3-4814-9410-d012496db17c)



## Acknowledgements



I would like to thank the Future Ready Talent, GitHub and Microsoft Azure for providing the opportunity to work on this project and contribute to the promotion of organic farming.

---

Thank you for your interest in Organic First. Together, let's promote organic farming and contribute to a sustainable and healthier future!
",0,0,1,0,farming,"[azure, chatbot, farming, html-css-javascript, organic]",00000
1389,OpenFarmingTech,scubasonar,N/A,https://github.com/scubasonar/OpenFarmingTech,https://api.github.com/repos/scubasonar/OpenFarmingTech,Open source farming technologies,"# OpenFarmingTech
Open source farming technologies
",0,0,1,0,farming,"[aquaponics, farming, gardening, horticulture, lighting]",00000
1390,farmosweb,almostengr,N/A,https://github.com/almostengr/farmosweb,https://api.github.com/repos/almostengr/farmosweb,Custom version of farmOS with additional modules.,"# FarmOS Web
Custom version of FarmOS with additional modules and functionality for maintaining a garden.

## Project Goals 
The goals of this project is to develop and maintain a garden that can automatically water itself, 
monitor growing conditions, and alert if a problem is detected. Features and functionality regarding 
the project will be tracked using issues.

## Hardware
* Ubuntu Server 16.04 LTS

## Software
* FarmOS distribution running on Drupal 7

## Maintainer
Kenny Robinson, @almostengr

",0,0,2,0,farming,"[data-collection, drupal7, farm, farming, farmos, garden, gardening, php, website]",00000
1391,puyuh-app,mwafa,N/A,https://github.com/mwafa/puyuh-app,https://api.github.com/repos/mwafa/puyuh-app,Aplikasi penetasan puyuh.,"# puyuh-app
Aplikasi penetasan puyuh.
",0,0,1,0,farming,[farming],00000
1392,farm-sync-iot,kunwarsingh55,N/A,https://github.com/kunwarsingh55/farm-sync-iot,https://api.github.com/repos/kunwarsingh55/farm-sync-iot,"IoT Based Agricultural Supervision System. Developed an Internet of Things (IoT)-based system to transform farming by making it smarter, more efficient, and easier to manage","# IoT System with Raspberry Pi

This is a simple IoT (Internet of Things) system built using a Raspberry Pi, various sensors (moisture, temperature, humidity), and actuators (water pump, drip system). The system consists of three main components: a Back-end server, a Front-end interface, and the Raspberry Pi IoT device.

<img src=""/images/dashboard.gif"" alt=""Raspberry Pi"" height=""500"">
<div style=""display: flex; flex-direction: row;"">
  <img src=""/images/pi.gif"" alt=""Raspberry Pi"" height=""700"" style=""align-self: flex-start;"">
  <img src=""/images/farm.JPEG"" alt=""Raspberry Pi"" width=""400"" style=""align-self: flex-start;"">
</div>




## Components

MERN + Python

### 1. Backend

- **Technology Stack**: Node.js, MongoDB
- **Description**: The backend server is responsible for collecting data from the Raspberry Pi, handling user input via WebSocket, and storing data in a MongoDB database.

### 2. Frontend

- **Technology Stack**: React.js
- **Description**: The frontend is a user interface built with React.js, using WebSocket connections to communicate with the backend. It displays real-time data and allows users to interact with the IoT system.

### 3. IoT Device (Raspberry Pi)

- **Technology Stack**: Python
- **Description**: The Raspberry Pi runs a Python script to communicate with the backend via HTTP POST requests and WebSockets. It collects data from various sensors and can trigger actuators based on user commands.

## Setup and Installation

To set up and run this IoT system locally, follow these steps:

1. **Backend Setup**: 
   - Clone this repository.
   - Navigate to the `server` directory.
   - Install the required Node.js packages by running `npm install`.
   - Start the backend server with `nodemon`.

2. **Frontend Setup**:
   - Navigate to the `client` directory.
   - Install the necessary dependencies with `npm install`.
   - Start the frontend with `npm start`.

3. **Raspberry Pi Setup**:
   - Set up your Raspberry Pi with Raspbian OS.
   - Clone this repository on your Pi.
   - Navigate to the `python-scripts` directory.
   - Run the `rpi-scripy-new` script on your Pi.
   - Also you have to interface all the sensors with GPIOs of pi
	   - you can also use 	Arduino to connect sensors and use serial communication between Pi and Arduino, code for this is in `rpi-script` in `python-scripts` directory


",0,0,1,0,farming,"[arduino, farming, iot, javascript, mern-stack, python, raspberry-pi, raspberry-pi-4, reactjs, socket-io, sockets]",00000
1393,bitcoin,zatracking,N/A,https://github.com/zatracking/bitcoin,https://api.github.com/repos/zatracking/bitcoin,,# bitcoin,0,0,1,0,farming,"[farmcoin, farmers, farmers-markets, farmhash, farming, insurance, tokensale]",00000
1394,ffges,jerryetty,N/A,https://github.com/jerryetty/ffges,https://api.github.com/repos/jerryetty/ffges,Futures and Forwards Grain Exchange System,"# FFGES
### Futures and Forwards Grain Exchange System

Run the following commands to get started
### `npm i` `npm start`
",0,0,2,0,farming,"[farming, forwards-contracts, futures, nodejs]",00000
1395,SIH_2020,shivangraina,N/A,https://github.com/shivangraina/SIH_2020,https://api.github.com/repos/shivangraina/SIH_2020,"It is a mobile application platform which provides custodial services such as warehousing and logistics assistance,while assessing warehouses based upon the needs of the farmers.","# Smart Management Of Food Storage And Waste Reduction

1. npm install

![alt text](https://github.com/iSIH-2020/SIH20/blob/master/Screenshots/FarmerHome.jpeg) <br />
<br />
![alt text](https://github.com/iSIH-2020/SIH20/blob/master/Screenshots/FarmerRequest.jpeg) <br />
<br />
![alt text](https://github.com/iSIH-2020/SIH20/blob/master/Screenshots/FarmerWarehouse.jpeg) <br />
<br />



",0,0,1,19,farming,"[android-app, farming, warehouse-management]",00000
1396,Fim,Zutki,N/A,https://github.com/Zutki/Fim,https://api.github.com/repos/Zutki/Fim,Fim - Farming Improved,"# Fim - Farming Improved
---
## Info
Fim is a fabric farming improvement mod, Fim accomplishes this by adding tools which make constructing and harvesting farms easier.

**NOTE:** This mod requires [Fabric API](https://www.curseforge.com/minecraft/mc-mods/fabric-api)  to work.
[Forge Version](https://github.com/Zutki/FimForge)

## Current Features:
- Wheat Hoe with 3 different tiers (Regular, Super, Supreme)
- Carrot Hoe with 3 different tiers (Regular, Super, Supreme)
- Potato Hoe with 3 different tiers (Regular, Super, Supreme)
- Beetroot Hoe with 3 different tiers (Regular, Super, Supreme)
- Infinite Water Bucket

## Plans
- [x] More hoes
- [x] Omni Hoe
- [ ] Farming blocks maybe

## Compilation Instructions
Run the gradle `build` task, and the output should be in build/libs
",0,0,1,0,farming,"[fabric, farming, minecraft, minecraft-mod]",00000
1397,impact-simulation,xelox,N/A,https://github.com/xelox/impact-simulation,https://api.github.com/repos/xelox/impact-simulation,Simulates the artifact farming of a Genshin Impact.,"{'message': 'Not Found', 'documentation_url': 'https://docs.github.com/rest/repos/contents#get-repository-content'}",0,0,1,0,farming,"[farming, gacha-simulator, games, svelte]",00000
1398,OpenFarmingTech,scubasonar,N/A,https://github.com/scubasonar/OpenFarmingTech,https://api.github.com/repos/scubasonar/OpenFarmingTech,Open source farming technologies,"# OpenFarmingTech
Open source farming technologies
",0,0,1,0,farming,"[aquaponics, farming, gardening, horticulture, lighting]",00000
1399,farmosweb,almostengr,N/A,https://github.com/almostengr/farmosweb,https://api.github.com/repos/almostengr/farmosweb,Custom version of farmOS with additional modules.,"# FarmOS Web
Custom version of FarmOS with additional modules and functionality for maintaining a garden.

## Project Goals 
The goals of this project is to develop and maintain a garden that can automatically water itself, 
monitor growing conditions, and alert if a problem is detected. Features and functionality regarding 
the project will be tracked using issues.

## Hardware
* Ubuntu Server 16.04 LTS

## Software
* FarmOS distribution running on Drupal 7

## Maintainer
Kenny Robinson, @almostengr

",0,0,2,0,farming,"[data-collection, drupal7, farm, farming, farmos, garden, gardening, php, website]",00000
1400,puyuh-app,mwafa,N/A,https://github.com/mwafa/puyuh-app,https://api.github.com/repos/mwafa/puyuh-app,Aplikasi penetasan puyuh.,"# puyuh-app
Aplikasi penetasan puyuh.
",0,0,1,0,farming,[farming],00000
1401,farm-sync-iot,kunwarsingh55,N/A,https://github.com/kunwarsingh55/farm-sync-iot,https://api.github.com/repos/kunwarsingh55/farm-sync-iot,"IoT Based Agricultural Supervision System. Developed an Internet of Things (IoT)-based system to transform farming by making it smarter, more efficient, and easier to manage","# IoT System with Raspberry Pi

This is a simple IoT (Internet of Things) system built using a Raspberry Pi, various sensors (moisture, temperature, humidity), and actuators (water pump, drip system). The system consists of three main components: a Back-end server, a Front-end interface, and the Raspberry Pi IoT device.

<img src=""/images/dashboard.gif"" alt=""Raspberry Pi"" height=""500"">
<div style=""display: flex; flex-direction: row;"">
  <img src=""/images/pi.gif"" alt=""Raspberry Pi"" height=""700"" style=""align-self: flex-start;"">
  <img src=""/images/farm.JPEG"" alt=""Raspberry Pi"" width=""400"" style=""align-self: flex-start;"">
</div>




## Components

MERN + Python

### 1. Backend

- **Technology Stack**: Node.js, MongoDB
- **Description**: The backend server is responsible for collecting data from the Raspberry Pi, handling user input via WebSocket, and storing data in a MongoDB database.

### 2. Frontend

- **Technology Stack**: React.js
- **Description**: The frontend is a user interface built with React.js, using WebSocket connections to communicate with the backend. It displays real-time data and allows users to interact with the IoT system.

### 3. IoT Device (Raspberry Pi)

- **Technology Stack**: Python
- **Description**: The Raspberry Pi runs a Python script to communicate with the backend via HTTP POST requests and WebSockets. It collects data from various sensors and can trigger actuators based on user commands.

## Setup and Installation

To set up and run this IoT system locally, follow these steps:

1. **Backend Setup**: 
   - Clone this repository.
   - Navigate to the `server` directory.
   - Install the required Node.js packages by running `npm install`.
   - Start the backend server with `nodemon`.

2. **Frontend Setup**:
   - Navigate to the `client` directory.
   - Install the necessary dependencies with `npm install`.
   - Start the frontend with `npm start`.

3. **Raspberry Pi Setup**:
   - Set up your Raspberry Pi with Raspbian OS.
   - Clone this repository on your Pi.
   - Navigate to the `python-scripts` directory.
   - Run the `rpi-scripy-new` script on your Pi.
   - Also you have to interface all the sensors with GPIOs of pi
	   - you can also use 	Arduino to connect sensors and use serial communication between Pi and Arduino, code for this is in `rpi-script` in `python-scripts` directory


",0,0,1,0,farming,"[arduino, farming, iot, javascript, mern-stack, python, raspberry-pi, raspberry-pi-4, reactjs, socket-io, sockets]",00000
1402,krishibal.github.io,krishibal,krishibal,https://github.com/krishibal/krishibal.github.io,https://api.github.com/repos/krishibal/krishibal.github.io,krishibal website,"# Landing Page for Krishibal.in

 ",0,0,1,0,farming,"[computer, farming, krishibal, learning, machine, tech, vision]",00000
1403,raw-food-forest-homepage,Dima-369,N/A,N/A,https://api.github.com/repos/Dima-369/raw-food-forest-homepage,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C155:7B5B:719C14:EA40CB:65224122.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,farming,"[N, /, A]",00000
1404,SmartFarm,daeynasvistas,N/A,https://github.com/daeynasvistas/SmartFarm,https://api.github.com/repos/daeynasvistas/SmartFarm,Mestrado Computação Móvel 2018/19: Implementação de uma plataforma que permita enviar uma fotografia de um planta doente e receber informações sobre como tratar a doença. ,"<a href=""http://mcm.ipg.pt""><img src=""http://www.ipg.pt/website/imgs/logotipo_ipg.jpg"" title=""IPG(MCM)"" alt=""IPG MCM 2018/19""></a>

# SmartFarm 
#### (MCM 2018/19 @IPG)

Mestrado Computação Móvel 2018/19: Implementação de uma plataforma que permita realizar a deteção e o diagnóstico de doenças em plantas. Utilizando simples imagens das folhas de plantas saudáveis e plantas doentes (Utilizando deep learning, TensorFlow). Monitorização com múltiplos sensores espalhados pelos campos de cultivo, utilizando Lora (Long Range) para comunicar.

## Architecture

![bda_archit](https://user-images.githubusercontent.com/2634610/54847053-415efd00-4cd5-11e9-93f2-e43b31660adf.png)

## Versioning
##### V.0.1.2

* [WebApp](https://ipg-sdm.azurewebsites.net/) - WebApp, display information on map
* [API documentation](https://ipg-sdm.azurewebsites.net/api-docs) - WebAPI documentation

## Built With

* [NodeJs](https://nodejs.org/en/docs/)
* [Swagger](https://swagger.io/docs/)
* [leafletjs](https://leafletjs.com/reference-1.4.0.html)

## Contributing


## Authors

## License

This project is licensed under the MIT License - see the [LICENSE.md](LICENSE.md) file for details

",0,0,3,3,farming,"[diseases, farming, googlecloud, lora, lorawan, oracle, plant, tensorflow]",00000
1405,farmbook,TexelBox,N/A,https://github.com/TexelBox/farmbook,https://api.github.com/repos/TexelBox/farmbook,CPSC 471 Project,"# Farmbook
CPSC 471 Project
",0,0,2,2,farming,"[database, farming, mariadb, mysql, php, university-of-calgary, university-project, website]",00000
1406,avery-organics,vanmars,N/A,https://github.com/vanmars/avery-organics,https://api.github.com/repos/vanmars/avery-organics,"Website for a fake farm to practice using React components, loops, and state. ","# _Avery's Organics_

_17 November 2020_

#### _React website for a fake farm_

#### By _**Vanessa Stewart**_

## Description

_This is an exercise for Epicodus to practice working with React components, states, and loops. This is a website for a fake farm that displays location information based on the day of the week and product information based on the season._

## Website Components Planning
<img src=""./public/avery-app.png"">

## Setup/Installation Requirements

* Navigate to the directory in which you would like to clone this project.
* Run `git clone https://github.com/vanmars/avery-organics.git` in terminal.
* Run `cd avery organics` to navigate into new project directory.
* Open the cloned repo in a text editor of your choice.
* Run `npm install` to download all dependencies.
* Run `npm run start` to start a live server and view projec in the browser.
* Run `npm run test` to run tests.

## Known Bugs

Currently, the ProductList.js file is filler for SeasonalProduce.js, which would allow content to populate dynamically, but the file is not working yet.

## Support and Contact Details

_Connect with me at vamariestewart@gmail.com with ideas to improve this project._

## Technologies Used

* HTML
* CSS
* JavaScript/JSX
* NPM
* Webpack

## Photo Credits
<span>Photo by <a href=""https://unsplash.com/@zoltantasi?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText"">Zoltan Tasi</a> on <a href=""https://unsplash.com/s/photos/farmhouse?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText"">Unsplash</a></span>
<span>Photo by <a href=""https://unsplash.com/@the_modern_life_mrs?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText"">Heather Ford</a> on <a href=""https://unsplash.com/s/photos/farmhouse?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText"">Unsplash</a></span>

### License

Copyright (c) 2020 **_Vanessa Stewart_**

Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the ""Software""), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.",0,0,1,0,farming,"[farming, react]",00000
1407,super-farmer,mx-pool,mx-pool,https://github.com/mx-pool/super-farmer,https://api.github.com/repos/mx-pool/super-farmer,A program farming on multiple chia forks simultaneously,"# Super Farmer (测试中)

SuperFarmer是MXPOOL推出的Chia及Chia分叉币多挖程序。

 * 收益高, 一个程序可以同时挖10个以上收益最高的分叉币
 * 速度快, 无需同步节点，安装后可立即耕种
 * 安装易, 只需要运行一个程序，安装配置简单
 * 配置活, 可动态设置想挖的币种
 * 轻量级, 程序绿色轻量，压缩后只有6M，运行后占用很少的系统资源
 * 收益稳定, 进入矿池可获得稳定收益
 * 提现方便, 不同分叉币的收益，可统一折算成xch提取

注意: 系统还在测试阶段，会有一些问题，请试验性的使用。

## 安装使用
 * [SuperFarmer 安装使用](https://github.com/mx-pool/super-farmer/wiki/SuperFarmer-%E5%AE%89%E8%A3%85%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97)
 * SuperFarmer 升级: 解压后覆盖之前的版本文件
 
## 账号注册 & 后台使用
 * 打开 https://mxpool.org 进行账号注册
 * 登录 https://mxpool.org/login
 * 打开用户中心页面 https://mxpool.org/uc/assets 

## 常见问题
 * SuperFarmer是如何工作的?
 
 SuperFarmer是一个兼容Chia协议的客户端，工作原理和chia基本一样。工作过程: 接收网络中的challenge, 在图(plot)文件中寻找证明(proof of space), 找到合适的证明后提交到full_node。区别在于SuperFarmer同时连接到多个分叉网络，同时接收各个网络中的challenge，并提交证明。还有一个区别在于superfarmer不需要本地运行full_node，启动后可立即开始耕种。
 * SuperFarmer是否会使用密钥，是否泄露密钥?
 
 SuperFarmer和官方的chia以相同的方式使用密钥，耕种过程中只会使用farmer key和pool key，用来签名证明(ProofOfSpace)。助记符/farmer key/pool key等私钥均不会上传到网络，只有公钥和签名是会上传到网络。
 * 如何确保钱包密钥安全?
 
 为确保钱包密钥的安全，建议P图/耕种的密钥和钱包的密钥分开。即在一台非耕种的机器上创建一个新的钱包助记符,和耕种使用不同的密钥。
 
 * SuperFarmer 支持NFT plot吗
 
 SuperFarmer 同时支持老图和新图(NFT), 请注意新图目前只能拿到1/8的收益， 关于另外7/8的收益的如何获取，我们会进一步研究可行方案。

## 已知问题

 * 暂不支持文件路径中有中文字符的Plot文件

## 联系方式

Telegram: https://t.me/mxpool
",0,0,0,0,farming,"[chia, chia-fork, farming]",00000
1408,Aditi_agriculture_nutrition,adgautam,N/A,N/A,https://api.github.com/repos/adgautam/Aditi_agriculture_nutrition,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C183:3BF5:729E07:EC6235:65224123.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,farming,"[N, /, A]",00000
1409,empyrion-farming-calculator,Krayt95,N/A,https://github.com/Krayt95/empyrion-farming-calculator,https://api.github.com/repos/Krayt95/empyrion-farming-calculator,"A Streamlit app to calculate number of growing plots for farming in ""Empyrion - Galactic Survival"" or ""Reforged Eden"" mod","# 🪴 Empyrion Farming Calculator

A _Streamlit_ app to calculate number of growing plots for farming in _Empyrion - Galactic Survival_ or _Reforged Eden_ mod",0,0,1,0,farming,"[calculator, empyrion, farming, reforged-eden, streamlit]",00000
1410,minecraft-auto-replanter,cichu,N/A,https://github.com/cichu/minecraft-auto-replanter,https://api.github.com/repos/cichu/minecraft-auto-replanter,Minecraft mod for harvesting and auto replanting crops.,"# Auto replanter
Auto replanter is a small modification that aims to improve farming experience in Minecraft,
by automatically replanting crops when you harvest them.

[![Super-Linter check](https://github.com/cichu/minecraft-auto-replanter/actions/workflows/lint-main-branch.yml/badge.svg)](https://github.com/cichu/minecraft-auto-replanter/actions/workflows/lint-main-branch.yml)

## Table of contents
1. [About the mod](#about-the-mod)
2. [Getting started](#getting-started)
   1. [Prerequisites](#prerequisites)
   2. [Installation](#installation)
3. [Roadmap](#roadmap)
4. [How to report a bug or request new feature](#reporting-bugs-or-requesting-features)

## About the mod
For auto replanting to work you need to use a tool when harvesting.

Here is a list of tools with crops they can harvest:
- Shears
  - Wheat
- Hoe
  - Beetroots
  - Carrots
  - Potatoes
- Axe
  - Cocoa beans

Once you have a proper tool in hand, you can simply right-click respective, fully grown crop.
This will harvest it and plant the same type of crop in its place.

Harvesting crop this way drops one less seed item than by gathering it in the regular way.
For crops that don't have a separate seed item (i.e. carrot or potato) the number of harvested crop items is decreased by one instead.
This means that regardless if you harvest using a tool or in the regular way - by punching and planting them manually - the number of gathered crops and seeds should be the same.

## Getting started

### Prerequisites
To use this mod you need to have Minecraft with Fabric loader installed.  
Instructions how to install Fabric loader can be found [here](https://fabricmc.net/wiki/install).

### Installation
1. Download the latest version from the [GitHub releases](https://github.com/cichu/minecraft-auto-replanter/releases) for your version of Minecraft.
   > Each release has 2 JAR files attached.  
   > Download the one **WITHOUT** the word ""sources"" in its name.
2. Move the downloaded file into mods folder inside your Minecraft installation folder.

## Roadmap
- [x] Use different harvesting tools for different crops
- [ ] Allow harvesting more crops
  - [x] Cocoa beans
  - [ ] Nether warts
- [ ] Add ability to put looting enchantment on the harvesting tools

## Reporting bugs or requesting features
Both bug reports and feature requests are handled through [issues tab](https://github.com/cichu/minecraft-auto-replanter/issues).
Before opening new issue check if there isn't one similar to yours.  
If you find one that matches your needs comment on it or add a reaction to let me know that there is interest in it.  
Otherwise create new issue providing at least a title, a short description and selecting a proper label:
- `bug` - for reporting a bug or an error
- `enchancement` - when proposing an idea for improvement",0,0,1,4,farming,"[farming, minecraft, mod]",00000
1411,FarmMarketTest,Adewuyipraise,N/A,https://github.com/Adewuyipraise/FarmMarketTest,https://api.github.com/repos/Adewuyipraise/FarmMarketTest,Group 6 Digicorpers Capstone Project For the eligibility of Collecting Certificate.,"# farmMarket
Group 6 Digicorpers Capstone Project For the eligibility of Collecting Certificate.
",0,0,1,0,farming,"[farming, farmmarket, onlinemarket, shopping]",00000
1412,easy-stake,Cryptoniciencom,N/A,https://github.com/Cryptoniciencom/easy-stake,https://api.github.com/repos/Cryptoniciencom/easy-stake,"My stake-easy project. A decentraliwed farming, borrowing and lending assets plateform based on Blockchain","# easy-stake
My stake-easy project. A decentraliwed farming, borrowing and lending assets plateform based on Blockchain
",0,0,1,0,farming,"[borrowing-lending, borrowing-management, farming, lending, lendingpool, stakeholder-engagement, stakeholders, staking, staking-app, staking-contract, staking-dapp, staking-erc20, staking-farms, staking-nft, staking-rewards]",00000
1413,EasyFarming,AlexInCube,N/A,N/A,https://api.github.com/repos/AlexInCube/EasyFarming,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C118:33C6:2A04FD8:5658DFD:65224181.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,farming,"[N, /, A]",00000
1414,twl8n.github.io,twl8n,N/A,https://github.com/twl8n/twl8n.github.io,https://api.github.com/repos/twl8n/twl8n.github.io,Tom's docs and hints,"# twl8n.github.io
Celadon Acres Farm web site.
Visit http://twl8n.github.io/index

home page: index.md
left navigation top: _config.yml
left nav bottom: _layouts/default.html



https://www.amazon.com/gp/product/0813060826/ref=as_li_tl?ie=UTF8&camp=1789&creative=9325&creativeASIN=0813060826&linkCode=as2&tag=tomsvwbugrepa&linkId=978ce6df3a821522468e58aca0b58889

https://www.amazon.com/Sorghums-Savor-Ronni-Lundy/dp/0813060826

<iframe style=""width:120px;height:240px;"" marginwidth=""0"" marginheight=""0"" scrolling=""no"" frameborder=""0"" src=""//ws-na.amazon-adsystem.com/widgets/q?ServiceVersion=20070822&OneJS=1&Operation=GetAdHtml&MarketPlace=US&source=ac&ref=tf_til&ad_type=product_link&tracking_id=tomsvwbugrepa&marketplace=amazon&region=US&placement=0813060826&asins=0813060826&linkId=5ebfaeeaaaccba7ef041b60346f3bddf&show_border=false&link_opens_in_new_window=false&price_color=333333&title_color=0066c0&bg_color=ffffff"">
</iframe>

http://www.amazon.com/exec/obidos/ASIN/1562614800/tomsvwbugrepa


# Useful Github Pages Jekyll starting guide

https://devhints.io/jekyll

http://jmcglone.com/guides/github-pages/

# Github pages issues


Error from DNS provider:
Could not add A Record for '@': Cannot add multiple records for the same host.

Solution:
Add ""A (Round Robin)"" records.

- Log in to your domain name provider, in my case Pair Domains aka PairNIC.
- Click ""celadonacres.com""
- Click ""E-mail Forwarding, Web Site Forwarding, and Custom DNS""
- At the bottom of the ""Custom DNS Records"" section, select ""A (Round Robin)"" from the menu
- Under ""Add Round Robin A Record,"" please enter ""@"" under ""Host Name""
- Under the boxes marked ""IP Addresses,"" please enter
185.199.108.153
185.199.109.153
185.199.110.153
185.199.111.153
- Click ""Submit"" directly underneath this section
",0,0,1,0,farming,"[farming, machinery, sorghum]",00000
1415,FarmLandUSA,TheFeThrone,N/A,https://github.com/TheFeThrone/FarmLandUSA,https://api.github.com/repos/TheFeThrone/FarmLandUSA,Retro Game (2000): Farm Land USA ,"# Farmland USA

A game from 2000 by ValuSoft in association with KO Interactive Inc. and CANOPY GAMES
## Installation

1. Setup
    - Launch Setup.exe
2. Patch
    - Launch Patch.exe
      - Fix the path
3. Fix
    - Copy everything in this Folder to the installation path
    - Run fix.bat  

## Screenshots
![Alt text](Pics/farm-land-usa-5-th.webp) ![Alt text](Pics/farm-land-usa-6-th.webp)  ![Alt text](Pics/farm-land-usa-2-th.webp) ![Alt text](Pics/farm-land-usa-3-th.webp) ![Alt text](Pics/farm-land-usa-4-th.webp) ![Alt text](Pics/farm-land-usa-7-th.webp) ![Alt text](Pics/farm-land-usa-8-th.webp) ![Alt text](Pics/farm-land-usa-9-th.webp) ![Alt text](Pics/farm-land-usa-10-th.webp) ![Alt text](Pics/farm-land-usa-11-th.webp) ![Alt text](Pics/farm-land-usa-1-th.webp) ",0,0,1,0,farming,"[farming, game, retrogaming]",00000
1416,barnstorm,mxcop,N/A,https://github.com/mxcop/barnstorm,https://api.github.com/repos/mxcop/barnstorm,Feed all the hungry animals before they destroy the farm,"# Barnstorm
``CO-OP`` ``Tower Defense`` ``Farming``<br>
Barnstorm is a co-op game where in you have to feed hungry animals before they destroy your farm.<br>
You can do this by planting and harvesting crops used as ammunition for your silo turrets.<br>

## Tools
Unity ``2021.3.1f1``<br>

## Copyright
``Barnstorm``  Copyright (C) 2022  ``Max Coppen`` ``Milan Bonten`` ``Bram van der Cruijsen``<br>
License  ``MIT``
",0,0,2,11,farming,"[co-op, farming, game, unity]",00000
1417,farm-manager,hemlockcreek,N/A,N/A,https://api.github.com/repos/hemlockcreek/farm-manager,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C158:3119:2BED485:5A074F2:652240FE.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,farming,"[N, /, A]",00000
1418,seeds,agentbillwilson,N/A,https://github.com/agentbillwilson/seeds,https://api.github.com/repos/agentbillwilson/seeds,Calculates Farming seed completion times in Old School RuneScape,"seeds
=====

Calculates Farming seed completion times in Old School RuneScape

Building
--------

    go build


Usage
-----

    seeds [-start time] [duration] [count]

seeds calculates when a Farming seed in Old School RuneScape with the given
tick duration (e.g. 160m) and number of ticks will be grown to completion.
Planting time can be specified with the -start flag (e.g. Jan 2 15:04 MST 2006);
otherwise, seeds will use the current time for planting.
",0,0,0,0,farming,"[farming, runescape]",00000
1419,r-averaged-difference-algorithm,OliverHennhoefer,N/A,https://github.com/OliverHennhoefer/r-averaged-difference-algorithm,https://api.github.com/repos/OliverHennhoefer/r-averaged-difference-algorithm,"R-Implementation of the ""Averaged Difference Algorithm"" for Spatial Outlier Detection conceived by Yufeng Kou and Chang-Tien Lu (2006).","# Averaged Difference Algorithm
R-Implementation of the ""Averaged Difference""-Algorithm for Spatial Outlier Detection conceived by Yufeng Kou and Chang-Tien Lu in the scientific paper ""Spatial Weighted Outlier Detection"" from 2006. The algorithm is suitable for the detection of point observations with distinct features from their surrounding neighbors.<br/>
The algorithm is demonstrated by the means of agricultural yield data and is generally suitable especially for use in the context of Precision Farming.<br/>

:round_pushpin: disy Informationssysteme GmbH. https://www.disy.net/de/ <br/>
:seedling: iFAROS. https://www.ifaros-ictagri.com/ <br/>

## Dependencies:<br/>
:wrench: __sp__-package, for geometry types<br/>
:wrench: __data.table__-package, as faster alternative for _base::data.frame_<br/>
:wrench: __FNN__-package, for k-nearest-neighbor search algorithm<br/>

## Parameters:<br/>
- Input: _SpatialDataPointsDataFrame_, georeferenced point data with attribute(s)<br/>
- Input: _k_, number of neighbours taken into account (as in _k-Nearest-Neighbor_)<br/>
- Output: _data.table_, containing index and the corresponding _averaged difference_ in decreasing order<br/><br/>

The function returns a list (data.table) with points indices and the _averaged difference_ of the respective point. The data.table allows for the deletion of the top _n_ outliers by their indices. The actual number of outliers to be deleted can be freely chosen by the user.<br/>
For the example shown, 1.200 points (of ~ 8.000 points) were deleted. The nearest neighbors considered (_k_) was (arbitrarily) set to 355. Chosen parameter values should orient on the absolute amount of data points and the ""severity"" of the visible measurement errors. Global outliers can be obtained for larger neighborhoods, while smaller neighborhoods are especially suitable to identify local outliers on a smaller spatial scale.<br/>

Execution time for 8.000 point observations: ~3 sec.

## Demonstration:<br/>
<!---  ![original_observations](img/original.png)<br/> --->
<!---  ![cleansed_observations](img/processed.png)<br/> --->

<p float=""left"">
  <img src=""https://github.com/OliverHennhoefer/r-averaged-difference-algorithm/blob/master/img/original.png"" width=""500"">
  <img src=""https://github.com/OliverHennhoefer/r-averaged-difference-algorithm/blob/master/img/processed.png"" width=""500"">
</p><br/>

<sup>1</sup> http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.101.9899&rep=rep1&type=pdf
",0,0,1,0,farming,"[algorithm, averaged, avgdiff, chang-tien, detection, difference, farming, implementation, kou, lu, outlier, precision, r, spatial, weighted, yield, yufeng]",00000
1420,Garduino,Alexdebeast78,N/A,https://github.com/Alexdebeast78/Garduino,https://api.github.com/repos/Alexdebeast78/Garduino,This is my code for an automatic arduino garden. It is not yet complete ,"//Beta does not have oled graphics implamented and pump code may have bugs. 

# Garduino


## Description 
### Grow More With Less 
Garduino is an automatic garden made using Arduino that aims to demonstrate the benefits of sustainable farming.  
Garduino aims to solve several problems with traditional agriculture.  
Some of the hypothesised benefits of Garduino when implemented on a larger scale are that it will be able to:  
1. Improve yield of crops.
2. Optimize acreage.
3. Optimize the use of crop protection chemicals.
4. Optimize the use of energy.
5. Optimize the use of fertilizers.
6. Optimize water usage.
7. Reduce emissions within the farming process.
8. Reduce labour costs.
9. Reduce the impact of seasonality.
10. Remove the impact of weather.

## Features 
Garduino boasts many revolutionary features for home plant growing and provides a demonstration of the capability and benefits of such technology for agricultural experts.  
Here is a list of the features of Garduino:
1. Air humidity detection  
2. Air temperature detection
3. Automatic LED system
4. Automatic pump system
5. Light detection
6. OLED display for data
7. Soil moisture detection
8. Water level sensor


## Hardware
1.  Assortment of Breadboards or PCB boards  
2.  Buck Converter  
3.  Capacitive Soil moisture sensor  
4.  DC 12v Led strip  
5.  DC 12v Submersible Pump
6.  Dht11/22 sensor
7.  Double Relay Module
8.  Float switch
9.  Heltec wifi kit 32
10. Jumper cables
11. Plant growing space
12. Pump tubing
13. Water storage






",0,0,1,0,farming,"[arduino, environment, farming, garduino, sustainability]",00000
1421,liveFarm,shubham-ghuge,N/A,https://github.com/shubham-ghuge/liveFarm,https://api.github.com/repos/shubham-ghuge/liveFarm,"Video Streaming Platform For the farmers, where they can take notes and see the curated list of videos based on farming.","{'message': 'Not Found', 'documentation_url': 'https://docs.github.com/rest/repos/contents#get-repository-content'}",0,0,2,1,farming,"[express, farming, mongodb, mongoose, reactjs, video-streaming]",00000
1422,farm,ghyghoo8,N/A,https://github.com/ghyghoo8/farm,https://api.github.com/repos/ghyghoo8/farm,🚜 🌱🌾🌵🍀🍏🥦🌺,"## farm 

[![Build Status](https://github.com/ghyghoo8/farm/workflows/ci/badge.svg?branch=master)](https://github.com/ghyghoo8/farm/actions)


🚜 🌱🌾🌵🍀🍏🥦🌺


----

## License

[auto-green](https://github.com/justjavac/auto-green) is released under the MIT License. See the bundled [LICENSE](./LICENSE) file for details.
",0,0,1,0,farming,"[farm, farming]",00000
1423,GreenTrust,Shash0501,N/A,https://github.com/Shash0501/GreenTrust,https://api.github.com/repos/Shash0501/GreenTrust,A Blockchain Revolution for Organic Farming,"# Green Trust
<p> A Blockchain Revolution in Organic Farming <p/>

![Landing](https://user-images.githubusercontent.com/76661350/219805436-17bd9c16-1c68-4c98-bfe6-d8c0e7afbb21.jpg)

## Technologies Used

- [Next Js](https://nextjs.org/)
- [Next-PWA](https://www.npmjs.com/package/next-pwa) 
- [Tailwind CSS](https://tailwindcss.com/)
- [Solidity](https://soliditylang.org/)
- [IPFS](https://ipfs.tech/)
- [SuperFluid](https://www.superfluid.finance)
- [Arcana](https://www.mantle.xyz/)
- [Mantle](https://www.arcana.network/)
- [ChainLink](https://chain.link/)
- [Polygon](https://polygon.technology/)
- [Push Protocol](https://push.org)
- [Polywrap](https://polywrap.io/)
- [Raspberry Pi (IoT)](https://www.raspberrypi.org/)


<br/>

## Problems 

One of the significant issues in organic farming is that certifications are required from multiple parties for
the products to be deemed ‘organic’. Currently, there are two government sanctioned mechanisms
for issuance of certification:

1. PGS Participatory Guarantee Systems (PGS): Farmers in a group inspect each other’s land
and vouch for its organic credentials. The inspection is carried out at the start of every sowing
season and farmers visit each other almost weekly to provide counsel. If a farmer is found
to be in violation, her produce is not sold through the group till she rectifies her mistake.

2. Third party certification: The farms is certified by authorized third party certifying agencies.
The database of India’s organic products is very poor and traceability, which is key for export growth,
remains weak, while third party certification as insisted by APEDA is very costly. In addition, major
markets for export do not accepts PGS certification, and there is no mechanism to link certifications
by third parties and PGS. 

## Solution

GreenTrust offers a solution for obtaining certification in organic farming by organizing credible and decentralized Participatory Guarantee Systems (PGSs). 

In order to secure certification, every harvest must be sponsored by certified farmers who contribute a stake as a form of assurance that organic farming methods have been properly implemented. 

The platform utilizes decentralized IoT sensor data to monitor and track various environmental conditions. Additionally, any individual may challenge the organic authenticity of a particular harvest on the platform. 

These challenges are then evaluated by a certified inspector, and if the challenge is deemed to be valid, the challenger will receive the stake put forward for the harvest.

Conversely, if the challenge is found to be invalid, the challenger will lose the stake they put forward to initiate the challenge.

### 

#### Farmer
-  A Farmer joins the GreenTrust Platform for using the decentralized PGS system of verification for his organic Crops.
-  The onboarding of Farmers is simplified by using Arcana Auth which provides a seamless interface from Web2 to Web3.
-  This provides him a platform to gain credibility for his crops without paying high third party certification fees. (Incentive)
-  In doing so, a farmer pays a nominal subscription fee in terms of Superfluid's CFA (Continuous Flow Agreement) money streaming model.
-  The farmer can request stakes to be placed on his farm by stakeholders by clicking on Request Stake button, which sends a Push Notification to everyone subscribed to the GreenTrust Channel.
  
#### Verifier
- A Verifier is an authorized Organic Crop Verifier associated with our platform.
- The Verifier will get allocated with inspecting a Challenged Crop randomly through our system. (Future Work)
- Since the Crop challenges will be randomly allocated the bias in the verifier's judgement will be highly reduced.
- Verifier can either approve or reject a challenge after inspecting the challenged crop.
- Verifier always gets the same amount (his inspection fee) irrespective of his decision which reduces his bias further.(Incentive)
 
#### Stakeholder 
- A Stakeholder is a person who vouches for the credibility of an organic crop by placing a certain amount as stake.
- After a certain duration from the crop's harvest, the stake amount will be returned to all the stakeholders and a reward will be given using Superfluid's IDA (Instant Distribution Agreement) model automatically using Chainlink Upkeep. (Incentive)
- Stakeholder's Rewards are generated from the farmer's subscriptions by the smart contract deployed on Polygon.
- If a challenge on the crop is approved by a verifier, then the stakeholder loses his stake amount.
 
#### Consumer
- Consumer is the one who consumes the farmer's organic products.
- The organic products will have QR codes which can be scanned to access the Crop details like Crop Health data (Uploaded through an IoT device), Challenges on the crop, stakeholders, etc.
- The consumer can challenge an organic crop harvest's credibility by placing a challenge and staking a certain amount.
- If the verifier approves the challenge, the Stakeholders' stakes are transferred to the consumer as a compensation amount and his stake (the one he placed to challenge) is transferred to the Verifier as a fee. (Incentive)
- If the verifier rejects the challenge, the consumer loses his staked amount to the Verifier (as a fee).

## Advantages

- <b>Establishing traceability</b>: Placing information regarding the lifecycle of crops on a
blockchain will help improving trust in the self certification process and establishing
traceability at the point of sale.

- <b>Disintermediation of multiple stakeholders</b>: As highlighted, the process of third party
certification is often expensive, and in turn drives up cost of produce, making it harder for
farmers to sell. Disintermediation through peer to peer certification mechanisms, or
integration of third party certifiers into the PGS process would unlock large markets for
produce and reduce cost of production.

- <b> Programmable transfers </b>: Much like in supply chain, tracking of products using IoT devices
along their value chain can help increase efficiency in transfer of asset between
stakeholders, and alert stakeholders immediately of issues. 

## Links

- Figma - https://www.figma.com/file/QwfJiaDaLHx7Tav6Uwyiwf/GreenTrust?node-id=2%3A2&t=0jp5DXuTlfI99jiO-1

## Network Diagram 
![GreenTrustND](https://user-images.githubusercontent.com/72497928/219973576-d238d090-1636-49bb-a6d1-ea7a04fc57c3.png)

## Team Members
- Mehul Todi
- Abhiraj Mengade
- Shashank S M
- Pranav Agarwal
- Parth Mittal

## Setup 
### Contract
1. Touch `root/.env` file as follows:
```.env
GOERLI_PRIVATE_KEY=<key>
CONTRACT_ADDRESS=0x45124
```
2. `npm i`
3. `npx hardhat run ./scripts/deploy.js --network NETWORK_NAME`

### Frontend
1. `cd greentrust`
2. `npm i`
3. `npm run build`
4. `npm run start`
",0,0,1,0,farming,"[arcana-auth-sdk, blockchain, farming, ipfs, nextjs, polywrap, public-goods, reactjs, tailwindcss, web3]",00000
1424,SeedSorter,pawel2000pl,N/A,https://github.com/pawel2000pl/SeedSorter,https://api.github.com/repos/pawel2000pl/SeedSorter,It is a software for embedded system which is based on raspberry pi 4. It is designed for a bean seed sorting machine. The machine and software were designed and created by Paweł Bielecki.,"Seed sorter 
===========
as an embedded system based on artificial intelligence
------------------------------------------------------
Program for sorting bean seeds. <br>
The machine and software were designed and created by Paweł Bielecki (pbielecki2000@gmail.com). 

Warning: This software is for embedded system (Raspberry Pi 4) use only!
Required packages: libv4l-dev fpc lazarus

How to run first time:

1. make all
2. make Service
3. make walkthrough

Software sends square signal (17Hz) on gpio pin when seed for rejection is in a selected area.

![Video](Photos/video.webm) / [Video in FullHD](https://www.mediafire.com/file/zxpubwug0rqqun6/20211218_133223.mp4/file)

Photo-galery

![Photo](Photos/consoles2.png)

![Photo](Photos/20211218_134026.jpg)
![Photo](Photos/20211218_134041.jpg)
![Photo](Photos/20211218_134127.jpg)
![Photo](Photos/20211218_134118.jpg)


![Photo](Photos/20220115_130241.jpg)

![Photo](Photos/20211113_154245.jpg)
![Photo](Photos/20211113_154237.jpg)
![Photo](Photos/20211113_154255.jpg)
![Photo](Photos/20211113_154303.jpg)
![Photo](Photos/20211113_154308.jpg)
![Photo](Photos/20211113_154213.jpg)
![Photo](Photos/20211113_154140.jpg)
![Photo](Photos/20211113_154144.jpg)
![Photo](Photos/20211113_154133.jpg)
![Photo](Photos/compared.jpg)
![Photo](Photos/20210222_111046.jpg)
",0,0,3,0,farming,"[ai, artificial-intelligence, embedded-systems, farming, machine, machine-learning, raspberry-pi, raspberry-pi-4, raspberry-pi-gpio, seed, sorting, v4l]",00000
1425,Awesome-Precision-Agriculture,px39n,N/A,N/A,https://api.github.com/repos/px39n/Awesome-Precision-Agriculture,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C184:1560:28D08C4:53DC49B:65223FC9.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,precision-agriculture,"[N, /, A]",00000
1426,agrobot,nesl,N/A,N/A,https://api.github.com/repos/nesl/agrobot,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1EC:17C0:2866DE:5437C9:65223FD0.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,precision-agriculture,"[N, /, A]",00000
1427,AI-Agro,RentadroneCL,N/A,N/A,https://api.github.com/repos/RentadroneCL/AI-Agro,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C171:05EF:6D2690:E1B594:65224132.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,precision-agriculture,"[N, /, A]",00000
1428,LoRa-sensor-node-device,emanuel36,N/A,N/A,https://api.github.com/repos/emanuel36/LoRa-sensor-node-device,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C19A:0BEC:2A72A2:5867C9:6522415C.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,precision-agriculture,"[N, /, A]",00000
1429,mobile-pest-identification,wikilimo,wikilimo,https://github.com/wikilimo/mobile-pest-identification,https://api.github.com/repos/wikilimo/mobile-pest-identification,A Lightweight Deep Learning Model for Automated Pest Detection on Mobile,"## A Lightweight Deep Learning Model for Automated Pest Detection on Mobile.

### User Guide
##### Step 1. To clone this repository, run:
```bash
git clone <this repo>
```


##### Step 2. To install dependencies run: 
```bash
pip install -r requirements.txt
```


##### Step 3. Download pest-imagery [IP102v1.1 dataset](http://xiaopingwu.cn/assets/projects/ip102/Data_Download/Data_Download.html):
###### Note: This dataset contains more than 75,000 images belonging to 102 categories, only a subset of which is showcased in this repository.
<img src=""demo/IP102_v1.1-samples.png"" width=""700"" height=""260""/>


##### Step 4. To run the model locally, run:
```bash
python src/pest.py
```

This will load the data, train the model and save the mobile optimized version in `src/model/pest/`. For deploying the model to a mobile app, see [PyTorch mobile](https://pytorch.org/mobile/home/). 

## Demonstration on the [Wikilimo](www.wikilimo.co) App:
<img src=""demo/demo-pestid-remedies.gif"" width=""300"" height=""580""/>",16,16,4,0,precision-agriculture,"[deep-learning, deep-neural-networks, farming, mobile, precision-agriculture, sustainability]",00000
1430,bovheat,bovheat,bovheat,https://github.com/bovheat/bovheat,https://api.github.com/repos/bovheat/bovheat,"Bovine Heat Detection and Analysis Tool (BovHEAT) - Automated heat detection and analysis tool for ""SCR Heatime"" cow activity monitoring data.","![Test and Build](https://github.com/bovheat/bovheat/workflows/Test%20and%20Build/badge.svg)
![Lint](https://github.com/bovheat/bovheat/workflows/Lint/badge.svg)
[![codecov](https://codecov.io/gh/bovheat/bovheat/branch/master/graph/badge.svg)](https://codecov.io/gh/bovheat/bovheat)
# BovHEAT

Bovine Heat Detection and Analysis Tool (BovHEAT) - Automated Heat detection and analysis tool for ""SCR Heatime""
(SCR Engineers Ltd., Netanya, Israel) a neck-mounted accelerometer for automated activity monitoring in cows.
This tool analyses the raw data and performs error detection and correction. Additional data sources will be
supported in the future.

<img src=""docs/img/graphical_abstract.png"" width=""830"" alt=""Graphical Abstract""> <br>
We provide a one-file executable, which reads and processes SCR files automatically. 
The user can define the desired threshold for estrus detection and the observation period. 
Results are delivered as a wide and long formatted XLSX file and a PDF with activity line graph 
visualizations for each cow. <br>

<details>
<summary>Click here for a detailed heat description image</summary>
<img src=""docs/img/detailed_heat_description.png"" width=""830"" alt=""detailed heat description"">
</details>

Table of Contents
=================

   * [BovHEAT](#bovheat)
  * [How to cite](#how-to-cite)
  * [Demo](#demo)
    * [Output](#output)
    * [Data](#data)
  * [Download and usage](#download-and-usage)
  * [Command-line options](#command-line-options)
  * [Requirements and constraints](#requirements-and-constraints)
    * [SCR file requirements](#scr-file-requirements)
    * [OS Requirements](#os-requirements)
  * [Development](#development)
     * [Optional/Extras](#optionalextras)


## How to cite
Plenio, J.-L., Bartel, A., Madureira, A. M. L., Cerri, R. L. A., Heuwieser, W., & Borchardt, S. (2021). *Application note: Validation of BovHEAT — An open-source analysis tool to process data from automated activity monitoring systems in dairy cattle for estrus detection.* **Computers and Electronics in Agriculture**, 188(September 2020), 106323. https://doi.org/10.1016/j.compag.2021.106323

## Demo

#### Output 
Example output as XLSX and PDF files can be examined at [example/output/](example/output/).
For this example an observation period of 5 days before till 30 days after calving was selected.
The estrus detection threshold was set at 35.

<details>
<summary>Click here for a line graph example from a pdf output file</summary>
<img src=""docs/img/pdf_single_line_graph.png"" width=""830"" alt=""pdf single line graph"">
</details>

#### Data
To try BovHEAT on your machine and generate the output for yourself, download the zipped example data
 from [example/output/data_zipped.zip](example/data/data_zipped.zip).
Run the BovHeat in parent folder according to the steps below. The column language is eng.

## Download and Usage

#### 1. Download
We provide a one-file executable for Windows, Linux and macOS.  
Download the zipped executable corresponding to your OS from the [latest BovHEAT release](https://github.com/bovheat/bovheat/releases/latest). 
#### 2. SCR files and folder structure
Place the BovHEAT executable in the folder containing SCR files in the XLSX or XLS format.
Alternatively, you can group SCR files in folders and put BovHEAT in the parent folder.
Cow IDs have to be unique in the data or unique within folders.
Therefore, we recommend you use one of the following two folder structures.
```
├── farm1                          OR           ├── farm1_scr_file1.xlsx 
│   ├── farm1_scr_file1.xlsx                    ├── farm1_scr_file2.xlsx 
│   └── farm1_scr_file2.xlsx                    ├── farm1_scr_file3.xlsx 
├── farm2                                       └── BovHEAT executable 
│   ├── farm2_scr_file1.xlsx    
│   └── farm2_scr_file2.xlsx    
└── BovHEAT executable         
```
#### 3. Run BovHEAT and select parameters
Execute BovHEAT, wait a few seconds for it to start and enter the following information.

`Column header language`  
Column language of the SCR files  

`Start and Stop DIM`  
Choose the start and stop DIM to select the observation interval.  
As an example: Start -5 and Stop 35 would include 5 days before till 35 days after calving.  

`Threshold`  
Choose the desired threshold for estrus detection. Recommended is a threshold of 35.  

`Minimum heat length`   
Choose a minimum number of heat observations required to count as a heat. Default is 1.

#### 4. Processing and results
Observe the progress on screen. Results are delivered as a wide and long formatted XLSX file and
a PDF file with activity line graph visualizations for each cow.

## Command-line options

BovHEAT starts in interactive mode, if startstop is not provided
```
positional arguments:
  relative_path         relative path to folder containing SCR xls(x) files

optional arguments:
  -h, --help            show this help message and exit
  -c CORES, --cores CORES
                        specify amount of logical cores to use, default 0: auto (max available-1),
                        1: disable multiprocessing, >1: fixed core amount
  -i [0-n], --interpolation_limit [0-n]
                        Maximum number of consecutive missing values to fill. 0 disables interpolation
  -l {ger,eng}, --language {ger,eng}
                        language of column headings, default=eng
  -m [0-100], --minheatlength [0-100]
                        minimum number of heat observations required to count as a heat, default=1
  -o OUTPUTNAME, --outputname OUTPUTNAME
                        specify output filename for result xlsx and pdf
  -s start-dim stop-dim, --startstop start-dim stop-dim
                        negative values are allowed
  -t [0-100], --threshold [0-100]
                        threshold for heat detection, default=35
  -x {dim,dt}, --x_axis_type {dim,dt}
                        show x-axis as datetime or dim in PDF, default=dim
```

## Requirements and constraints

#### SCR file requirements
The following columns are required to be present in all SCR files:
```
""Cow Number""
""Date""
""Time""
""Activity Change""
""Lactation Number""
""Days in Lactation""
```

#### OS Requirements 
The one-file executable of BovHEAT using x64 Python is built through GitHub Actions.
Therefore, the highest compatibility is achieved on these x64 OS versions and up:
```
macos-12
windows-2022
ubuntu-20.04
```


---


## Development
The authors recommend to use Python 3.8.18.  
To set up the development environment install [poetry](https://python-poetry.org/). And run:
```
poetry install
```

Start the program:
```
poetry run python bovheat_src/bovheat.py
```

### Optional/Extras
To install packages related to testing:
```
poetry install -E pytest-testing
```
Linting:
```
poetry install -E pylint
```
",15,15,3,6,precision-agriculture,"[livestock, precision-agriculture, python, scr-heatime]",00000
1431,yellow-sticky-traps-dataset,md-121,N/A,https://github.com/md-121/yellow-sticky-traps-dataset,https://api.github.com/repos/md-121/yellow-sticky-traps-dataset,"Yellow Sticky Traps Dataset with improved annotations. Based on: ""Raw data from Yellow Sticky Traps with insects for training of deep learning Convolutional Neural Network for object detection"" by A.T. Nieuwenhuizen et. al. ","# Yellow Sticky Traps Dataset
This dataset contains images of yellow sticky traps and bounding box annotations for three classes of flying insects found in greenhouses.
The annotated classes are Macrolophus pygmaeus, Nesidiocoris tenuis and Trialeurodes vaporariorum (Whitefly).

The dataset is based on the original version **""Raw data from Yellow Sticky Traps with insects for training of deep learning Convolutional Neural Network for object detection""** by **A.T. Nieuwenhuizen et. al.** (see [source](https://data.4tu.nl/articles/dataset/Raw_data_from_Yellow_Sticky_Traps_with_insects_for_training_of_deep_learning_Convolutional_Neural_Network_for_object_detection/12707066)).
This version contains corrected annotations and uniform image orientations.

## Details
The yellow sticky dataset consists of:
* 284 **landscape JPEG images** of **5184 x 3456 px**
* 8114 **bounding box** annotations:
    * 1619 **Macrolophus pygmaeus**
    * 688 **Nesidiocoris tenuis**
    * 5807 **Trialeurodes vaporariorum (Whitefly)**

Compared to the original dataset by **A.T. Nieuwenhuizen et. al.** the Exif image rotation information were fixed to match the landscape-oriented images.

Additionally, the annotation quality was improved by labeling previously unlabeled objects, fixing wrong labeled classes, resizing bounding boxes and improving the location of bounding boxes.

The annotations were improved with [LabelImg](https://github.com/tzutalin/labelImg), created by Tzutalin. Ground truth information is stored in XML files in PASCAL VOC format.

The labeling process was carried out to the best of our knowledge.

# Credits
This dataset was created with the help of Carolin Vey.
It was used for our paper:

> M. Deserno and A. Briassouli, ""Faster R-CNN and EfficientNet for Accurate Insect Identification in a Relabeled Yellow Sticky Traps Dataset,"" 2021 IEEE International Workshop on Metrology for Agriculture and Forestry (MetroAgriFor), 2021, pp. 209-214, doi: 10.1109/MetroAgriFor52389.2021.9628708.

```
@INPROCEEDINGS{9628708,
  author={Deserno, Maurice and Briassouli, Alexia},
  booktitle={2021 IEEE International Workshop on Metrology for Agriculture and Forestry (MetroAgriFor)}, 
  title={Faster R-CNN and EfficientNet for Accurate Insect Identification in a Relabeled Yellow Sticky Traps Dataset}, 
  year={2021},
  volume={},
  number={},
  pages={209-214},
  doi={10.1109/MetroAgriFor52389.2021.9628708}}

```


## Source of original dataset

> ""Raw data from Yellow Sticky Traps with insects for training of deep learning Convolutional Neural Network for object detection""
A.T. (Ard) Nieuwenhuizen and J. (Jochen) Hemming and D. (Dirk) Janssen and H.K. (Hyun) Suh and L. (Lien) Bosmans and V. (Vincent) Sluydts and N. (Nathalie) Brenard and E. (Estefanía) Rodríguez and M.D.M. (Maria del Mar) Tellez - published: March 2019 - DOI: 10.4121/uuid:8b8ba63a-1010-4de7-a7fb-6f9e3baf128e - https://data.4tu.nl/articles/dataset/Raw_data_from_Yellow_Sticky_Traps_with_insects_for_training_of_deep_learning_Convolutional_Neural_Network_for_object_detection/12707066
",15,15,1,0,precision-agriculture,"[artificial-intelligence, bounding-boxes, classification, dataset, deep-learning, high-resolution, image-classification, image-processing, images, insects, machine-learning, macrolophus-pygmaeus, nesidiocoris-tenuis, object-detection, pest, precision-agriculture, precision-farming, trialeurodes-vaporariorum, whitefly, yellow-sticky-traps]",00000
1432,agrofelis,meltoner,N/A,N/A,https://api.github.com/repos/meltoner/agrofelis,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C139:336C:2CEEEF7:5C1CCCF:65223FE6.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,precision-agriculture,"[N, /, A]",00000
1433,Irrigreat,simranvolunesia,N/A,N/A,https://api.github.com/repos/simranvolunesia/Irrigreat,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C100:336C:2CEF15A:5C1D1B4:65223FE9.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,precision-agriculture,"[N, /, A]",00000
1434,CWD30,Mr-TalhaIlyas,N/A,https://github.com/Mr-TalhaIlyas/CWD30,https://api.github.com/repos/Mr-TalhaIlyas/CWD30,Official Repository for CWD30 Dataset,"[![Hits](https://hits.seeyoufarm.com/api/count/incr/badge.svg?url=https%3A%2F%2Fgithub.com%2FMr-TalhaIlyas%2FCWD30&count_bg=%2300E7FD&title_bg=%23555555&icon=microsoftonedrive.svg&icon_color=%23E7E7E7&title=hits&edge_flat=false)](https://hits.seeyoufarm.com)

# CWD30

#### Full Paper [arXiv](https://arxiv.org/abs/2305.10084) 
CWD30 comprises over 219,770 high-resolution images of 20 weed species and 10 crop species, encompassing various growth stages, multiple viewing angles, and environmental conditions. The images were collected from diverse agricultural fields across different geographic locations and seasons, ensuring a representative dataset. 
#### Data Download [Link](https://o365jbnu-my.sharepoint.com/:f:/g/personal/talha_student_jbnu_ac_kr/EsdFSAmsct5KulaAkd7YRYUBJIXhvUcYQ2SzDhp2nB7OWg?e=oprZlS) 

##### [*If you use our data/paper in your projects kindly **cite** the paper and **star** the repo*]().

### Global Distribution of Crops in the CWD30 dataset.

![alt text](https://github.com/Mr-TalhaIlyas/CWD30/blob/main/screens/map.png)

### Pretrined Models [PyTorch](https://pytorch.org/vision/stable/models.html#classification)

|Model|Weights|Mean Accuracy (%)|Forward Pass (MB)|Weights Size|
|---|---|---|---|---|
|ResNet-101|[Link](https://o365jbnu-my.sharepoint.com/:f:/g/personal/talha_student_jbnu_ac_kr/EsdFSAmsct5KulaAkd7YRYUBJIXhvUcYQ2SzDhp2nB7OWg?e=oprZlS)|88.66%|259.71|487MB|
|ResNext-101|[Link](https://o365jbnu-my.sharepoint.com/:f:/g/personal/talha_student_jbnu_ac_kr/EsdFSAmsct5KulaAkd7YRYUBJIXhvUcYQ2SzDhp2nB7OWg?e=oprZlS)|89.06%|499.35|994MB|
|MobileNetV3|[Link](https://o365jbnu-my.sharepoint.com/:f:/g/personal/talha_student_jbnu_ac_kr/EsdFSAmsct5KulaAkd7YRYUBJIXhvUcYQ2SzDhp2nB7OWg?e=oprZlS)|86.29%|70.45|48.5MB|
|EfficentnetV2|[Link](https://o365jbnu-my.sharepoint.com/:f:/g/personal/talha_student_jbnu_ac_kr/EsdFSAmsct5KulaAkd7YRYUBJIXhvUcYQ2SzDhp2nB7OWg?e=oprZlS)|90.79%|313.34|607MB|
|ViT|[Link](https://o365jbnu-my.sharepoint.com/:f:/g/personal/talha_student_jbnu_ac_kr/EsdFSAmsct5KulaAkd7YRYUBJIXhvUcYQ2SzDhp2nB7OWg?e=oprZlS)|87.84%|69.62|3.41GB|
|SwinT|[Link](https://o365jbnu-my.sharepoint.com/:f:/g/personal/talha_student_jbnu_ac_kr/EsdFSAmsct5KulaAkd7YRYUBJIXhvUcYQ2SzDhp2nB7OWg?e=oprZlS)|88.71%|189.46|993MB|
|MaxViT|[Link](https://o365jbnu-my.sharepoint.com/:f:/g/personal/talha_student_jbnu_ac_kr/EsdFSAmsct5KulaAkd7YRYUBJIXhvUcYQ2SzDhp2nB7OWg?e=oprZlS)|91.45%|389.87|357MB|


### Citation
```
@article{ilyas2023cwd30,
  title={CWD30: A Comprehensive and Holistic Dataset for Crop Weed Recognition in Precision Agriculture},
  author={Ilyas, Talha and Arsa, Dewa Made Sri and Ahmad, Khubaib and Jeong, Yong Chae and Won, Okjae and Lee, Jong Hoon and Kim, Hyongsuk},
  journal={arXiv preprint arXiv:2305.10084},
  year={2023}
}
```
```
Paper is currently under review. ;)
```
",12,12,1,0,precision-agriculture,"[crops-and-weeds, crops-dataset, dataset, plant-classification, precision-agriculture, weeds-data]",00000
1435,DeepWay,fsalv,N/A,https://github.com/fsalv/DeepWay,https://api.github.com/repos/fsalv/DeepWay,"Official TensorFlow code for the paper ""DeepWay: a Deep Learning Waypoint Estimator for Global Path Generation"".","[![arXiv](http://img.shields.io/badge/arXiv-2001.09136-B31B1B.svg)](https://arxiv.org/abs/2010.16322)
[![License: MIT](https://img.shields.io/badge/License-MIT-yellow.svg)](https://opensource.org/licenses/MIT)

<h1 align=""center""> ~ DeepWay ~ </h1>

<p align=""center"">
  <img src=media/deep_way_net.png>
</p>


This repository contains all the code related to [DeepWay](https://arxiv.org/abs/2010.16322), a deep learning model able to predict the position of waypoints useful for global path planning of autonomous unmanned robots in row-crop fields.

# 1 Getting Started
## 1.1 Installation

1. Clone this repository

``` git clone  https://github.com/fsalv/DeepWay.git ```

2. Install the required packages

``` 
cd DeepWay
pip install -r requirements.txt
```
We recommend to do it in a separate virtual environment with respect to your main one to avoid compatibility issues for packages versions. In this case, remember to create a jupyter kernel linked to the new environment.

**Warning** If you don't have gpu available or if you have CUDA issues all calculations will be performed by your CPU.

# 2 Network training

Run the jupyter notebook ```Artificial Dataset Generator.ipynb``` to generate the random synthethic dataset. You can modify useful parameters in the first cells of the notebook.

You can re-train DeepWay on the new generated dataset with the notebook ```DeepWay Train.ipynb```. You can modify network parameters inside the configuration file  ```utils/config.json```. In particular, by modifying the ```DATA_N``` and ```DATA_N_VAL``` values you can choose to train/validate with fewer images to see how prediction quality changes with dataset dimension. You can also modify the network architecture changing ```K```, ```MASK_DIM```, the number of ```FILTERS``` per layer or the ```KERNEL_SIZE```.

You can test DeepWay on both the satellite and synthethic test datasets with the notebook ```DeepWay Test.ipynb```. This notebooks allows you to compute the AP metric on the selected images. You can change the test set inside the notebook in the section *Import the Test Dataset*. If you set ```name_model = 'deep_way_pretrained.h5'``` in the third cell, you can use the weights pretrained by us.

**Warning** If you don't have gpu support, comment the third cell (*""select a GPU and set memory growth""*) on both the training and testing notebooks.

# 3 Path planning
<p align=""center"">
  <img src=media/deepway.png>
</p>
To generate the paths with the A* algorithm and compute the coverage metric, you can use the ``` Prediction and Path Planning.ipynb``` notebook. Again, you can change the test set inside the notebook to select satellite or synthethic datasets. Note that the A* execution will require a lot of time, exspecially if it finds some trouble in generating the path for too narrow masks.
<br/><br/>

**Warning:** If you don't have gpu support, comment the fourth cell (*""select a GPU and set memory growth""*).
<br/>

## Citation
If you enjoyed this repository and you want to cite our work, you can find the post-print editorial version of our paper [here](https://doi.org/10.1016/j.compag.2021.106091).

```
@article{MAZZIA2021106091,
title = {DeepWay: A Deep Learning waypoint estimator for global path generation},
journal = {Computers and Electronics in Agriculture},
volume = {184},
pages = {106091},
year = {2021},
issn = {0168-1699},
doi = {https://doi.org/10.1016/j.compag.2021.106091},
url = {https://www.sciencedirect.com/science/article/pii/S0168169921001095},
author = {Vittorio Mazzia and Francesco Salvetti and Diego Aghi and Marcello Chiaberge}
}
```

<br/>
<sub> <b> Note on the satellite dataset: </b> </br>
The 100 masks of the real-world remote-sensed dataset have been derived by manual labeling of images taken from Google Maps. Google policy for the products of its satellite service can be found [here](https://www.google.com/permissions/geoguidelines/). Images can be used for reasearch purposes by giving the proper attribution to the owner. However, for this repository we chose to release the masks only and not the original satellite images. </sub> 
",10,10,1,0,precision-agriculture,"[autonomous-unmanned-robots, deep-learning, global-path-planning, precision-agriculture]",00000
1436,batchsat,mrr00b00t,N/A,https://github.com/mrr00b00t/batchsat,https://api.github.com/repos/mrr00b00t/batchsat,This project aims to build a software that can download Sentinel-2 satellite images in batch for data analysis.,"# batchsat
This project aims to build a software that can download Sentinel-2 satellite images in batch for data analysis.

# how to install

## with *conda* (we used *miniconda3*)

1. download the project
2. create a conda environment and run the following command: `conda install rasterio=1.3.3 geopandas=0.12.1 -c conda-forge`
3. then, run the command: `pip install sentinelsat==1.1.1 xmltodict==0.13.0`

# how to use

create a csv file with the columns:

```
polygon_id;polygon_wkt;dt_from;dt_to
<unique_polygon_id_0>;<polygon_wkt_0>;<YYYY-mm-dd>;<YYYY-mm-dd>
.
.
.
<unique_polygon_id_1>;<polygon_wkt_1>;<YYYY-mm-dd>;<YYYY-mm-dd>
```

then, run `python products.py --csv-path <path_to_csv_file>`. there are other arguments, see with `python products.py -h`
you will see that a `products-polygons.csv` was created.

use it as input to the next script, running: `python rasters.py --csv-path <path_to_output_of_products.py>`. if everything goes ok, it will be created a folder named `rasters` and subfolders named with the poygons unique id. inside these subfolders you will see the downloaded raster files ready to be used.

# example

Example of a True Color Image 10m resolution time series from a random crop near Brasília, from 2022-06-03 to 2022-10-26.

![Alt text](./near-brasilia.gif)

# project goals

- build a knowledge on how to collect, prepare, process and work with raster files and raster files time series
- learn digital and image processing techniques applied to satellite images
- provide a script to concurrently download images from Sentinel-2 twin satellites using computer with relatively good resources
- provide a container/microservice to scale the download satellite images in a k8s cluster
- help programmers and researchers to easily get satellite image data to make the world a better and safer place
",9,9,2,0,precision-agriculture,"[agronomy, batch, batch-processing, data-analysis, data-engineering, data-processing, precision-agriculture, raster-images, remote-sensing]",00000
1437,yield_aeroponics,juliotorrest,N/A,https://github.com/juliotorrest/yield_aeroponics,https://api.github.com/repos/juliotorrest/yield_aeroponics,AI to Predict Yield in Aeroponics,"# AI to Predict Yield in Aeroponics

This repository holds the code implemented in the two following papers:

1. ""Ensemble Learning for Improving Generalization in Aeroponics Yield Prediction"" being presented at the IEEE conference ISCAS 2020 in Spain.
2. ""Interpretability of AI Models that use Data Fusion to Predict Yield in Aeroponics"", published in the Journal of Ambient Intelligence and Humanized Computing.

# Ensemble Learning for Improving Generalization in Aeroponics Yield Prediction

The first part of this repository corresponds to the Python implementation for the first paper.

In this work, yield prediction in aeroponics is studied using ML. We have compared and analyzed three popular supervised ML methods - Dense Neural Network (DNN), Random Forest based on decision trees (RF) and Support Vector Regression (SVR). Air quality and water quality measurements including temperature, humidity, CO2 , pH and Total Dissolved Solids (TDS) are used for yield prediction. Other static inputs such as number of days before and after transplant are also used. Six crops are studied (garlic chives, basil, red chard, rainbow chard, arugula, and mint). DNN performs particularly well with the prediction. The root mean square error (MSE), mean absolute error (MAE) and coefficient of determination (R^2) are calculated to estimate the efficiency of the method. Mean square error and R^2 score of DNN are 0.10 and 0.67, RF follows DNN correctness with MSE and R^2 of 0.12 and 0.62, and SVR achieves 0.18 and 0.45 respectively, all of these values over the validation dataset. In addition to individual models, the two top performing models are combined as an ensemble model to improve overall performance, which shows an average R^2 score over the whole dataset divided by crop of 0.81.

This part of the project contains 4 files (Jupyter notebooks): NeuralNetwork, RandomForest, and SupportVectorMachine have the code that trains those three models. The file named Predictions contains the code that generates the final results using the already trained models.

# Interpretability of AI Models that use Data Fusion to Predict Yield in Aeroponics

The second part of this repository corresponds to the Python implementation for the second paper.

This paper has two main goals: (i) use data fusion to improve yield prediction in aeroponics, and (ii) find which features are more relevant for yield prediction of the six crops. To reach these goals, a number of artificial intelligence models and an interpretability analysis based on SHapley Additive exPlanations (SHAP) have been implemented. The models were trained using 200 samples that were collected for almost a year, including information from different air and water quality sensors besides manually recorded data, reaching in the end a coefficient of determination value R2 = 0.752 for the validation dataset in the best case (CNN-based model). As a result, two main features were identified in the dataset: Room CO2 and Reservoir Temperature, along with other useful insights of how these features influence predictions. SHAP values also provided important information for feature selection.

The models originally presented in the first paper have been re-trained with different regularization parameters for this work, achieving better
performance metrics (MAE and MSE could not be compared due to the usage of different units). These models constitute the baseline for the models that use data fusion. The training process of all the algorithms involved repeated cross validation, and grid search for hyperparameters in some cases.

Our AI models were implemented in Python 3.7, using Scikit Learn 0.22 for SVR and RF, and Tensorflow 2.0 for the other models. They were trained on a dedicated server with 64 Intel(R) Xeon(R) Gold 6130 CPU's at 2.10GHz, 1.6 TB of RAM, and a Nvidia Tesla V100-PCIE-16GB GPU.

# Data availability

The data used in this project is publicly available at: https://data.mendeley.com/datasets/wmyktpx9hv/1

# References

[1] J. Torres-Tello, S. Venkatachalam, L. Moreno and S. -B. Ko, ""Ensemble Learning for Improving Generalization in Aeroponics Yield Prediction,"" 2020 IEEE International Symposium on Circuits and Systems (ISCAS), 2020, pp. 1-5, https://doi.org/10.1109/ISCAS45731.2020.9181283.

[2] Torres-Tello, J., Ko, SB. Interpretability of artificial intelligence models that use data fusion to predict yield in aeroponics. J Ambient Intell Human Comput (2021). https://doi.org/10.1007/s12652-021-03470-9
",9,9,2,0,precision-agriculture,"[aeroponics, ensemble-learning, model-interpretability, precision-agriculture, yield-prediction]",00000
1438,Arduino_EdgeControl,arduino-libraries,N/A,N/A,https://api.github.com/repos/arduino-libraries/Arduino_EdgeControl,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1A6:505E:2BCE0A:5ACD25:65223FFB.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,precision-agriculture,"[N, /, A]",00000
1439,UAVWeedSegmentation,grimmlab,grimmlab,https://github.com/grimmlab/UAVWeedSegmentation,https://api.github.com/repos/grimmlab/UAVWeedSegmentation,Deep Learning-based Early Weed Segmentation using Motion Blurred UAV Images of Sorghum Fields,"# UAVWeedSegmentation

This repository provides the source code for ""Deep Learning-based Early Weed Segmentation using UAV Images of Sorghum Fields"". 

<p align=""center"">
    <img src=""readme_fig/supfigure4.jpg"" alt="""" width=""100%""/>
</p>

**Figure 1**: Sharpness assessment for the dataset used in this study. The calculated sharpness matches the manual assessment of this dataset, 
as images 04, 05, 06 and 10 from the trainval dataset were relatively 
sharper as the other captures. The test-set captures were degraded 
with different degrees of motion blur with 01, 02 and 03 being blurred 
the most. The color code matches in the sub-figures. **a** Relative 
Sharpness Value based on TVoL. Lower values indicate a higher degree 
of motion blur. Most captures in the dataset were blurred, but there 
were also some relatively sharper images present. **b** Flight plan of the
used dataset showing the location of the captures. Gray dots indicate 
captures that were not annotated. Relatively sharp captures were located
at the edges of the flight plan, where the drone was flying slower 
to rotate, as indicated by the limegreen, brown, pink, yellow and cyan
dots. **c** Example patches from the captures, where color of the border
indicates the corresponding capture.

## Results on the Test-Set
The results of the best performing model (UNet + ResNet-34) are shown. 

### Per-class Metrics

|        class | precision |    recall |  f1-score |   support | 
|-------------:|----------:|----------:|----------:|----------:|
|   Background |     99.80 |     99.93 |     99.86 | 137909280 |
|      Sorghum |     91.58 |     86.10 |     88.76 |   1249145 | 
|         Weed |     87.64 |     72.71 |     79.48 |    574567 |
|    macro avg | **93.01** | **86.25** | **89.37** | 139732992 |
| weighted avg |     99.68 |     99.69 |     99.68 | 139732992 |

### Confusion Matrix
The confusion matrix shows per-class accuracies for Background (BG), Sorghum (S) and Weed (W).
<p align=""center"">
    <img src=""readme_fig/cm_subset_test.jpg"" alt=""Confusion Matrix"" width=""100%""/>
</p>

**Figure 2**: Normalized confusion matrix by support size in percent shows the pixel-based classification results on the hold-out test-set. Background/soil is denoted by BG, sorghum by S and weed by W. **a** Test images with a high degree of motion blur (test_01 to test_03, as indicated in Figure 1). **b** Test images with less degree of motion blur (test_04 to test_07, as indicated in Figure 1).

### Example Predictions
Predictions are based on a hold-out test-set.
<p align=""center"">
    <img src=""readme_fig/example_pred.jpg"" alt=""Example Patches with Predictions"" width=""100%""/>
</p>

**Figure 3**: Qualitative results on the hold-out test-set. Image patches of size 400x400 pixel² are cropped from each test image to show more details. Background (BG) is colored in gray, sorghum (S) in blue and weed (W) pixels in orange. The difference map shows only the misclassifications between ground truth and prediction. **a-c** Examples with a high degree of motion blur. **a** The general shape of weeds is predicted correctly. **b** Large weed plants that could not be removed before sowing the field. Most pixels are predicted correctly. There are small artifacts visible, which are due to the patching process. **c** Weeds intersecting with sorghum plants were predicted correctly. **d-f** Examples with a low degree of motion blur showing weeds and sorghum plants from different captures. The general shape is predicted correctly. **d** Patch from test_04. **e** Patch from test_05. **f** Patch from test_06. 

## Requirements
- Python 3.8
- PyTorch 1.11.0
- Compatible Graphics Card with CUDA >9 and cuDNN installed

## Installation
1. Clone this project
```
git clone git@github.com:grimmlab/UAVWeedSegmentation.git
```

2. Install requirements
```
cd UAVWeedSegmentation
pip install -r requirements.txt
```
3. Download and install pytorch with GPU support that is compatible with your GPU

4. Download trained model from Mendeley Data (https://doi.org/10.17632/4hh45vkp38.5) and paste the unzipped model in `/models`.
Rename the model to `model_unet_resnet34_dil0_bilin1_retrained.pt` to match the parsing of the script `predict_testset`.
## Predict on new UAV images
Now, we can predict weeds in new UAV images using following script:
```
python3 save_patches.py
python3 predict_testset.py [model_path] [subset]
# example
python3 save_patches.py
python3 predict_testset.py models/model_unet_resnet34_dil0_bilin1_retrained.pt test
```
where:
- model_path is the path to the trained model `.pt` file
- subset is the name of the folder in `/data` to predict on.

## Compare Predictions with Ground Truth
For final evaluation, we compare the models predictions with the Ground Truth of a hold-out test set that was annotated manually by agronomy experts. This script generates Figures 3 and 5 of our paper. These figures are saved in `/results/predictions/<subset>`.

```
python3 compare_predictions.py [subset] [--bbch]
# example for comparing predictions and ground truth on the hold-out test set
python3 compare_predictions.py test
# example for comparing predictions and ground truth on the additional test images
python3 compare_predictions.py test_different_bbch --bbch 15
python3 compare_predictions.py test_different_bbch --bbch 19
```
where:
- subset is the name of the folder in `/data` to predict on.
- bbch is the BBCH stage of the UAV captures. Only used for subset `test_different_bbch` and can be either 15 or 19.


## Train new Models
1. Generate patches from images and annotations
```
python3 save_patches.py
```

2. Train DL Model
```
python3 train.py [architecture] [feature_extractor]
# example
python3 train.py fcn resnet50
```
where:
- architecture is either ""fcn8s"", ""fcn16s"", ""fcn32s"", ""unet"" or ""dlplus""
- feature_extractor is either ""resnet18"", ""resnet34"", ""resnet50"" or ""resnet101""
- --replace_stride_with_dilation, if using dilation

## Examine Training Databases
When using the script `train.py`, a database will be saved in `results/` containing all trials in this study. There is an own database for each feature extractor and architecture. The studies trained for the publication are saved in several subfolders in `results/studies` can be examined to select the best model architecture and feature extractor. Therefore, change the path in the script `compare_studies.py`. Additionally, Table 3 of the Paper can be generated using this script.

```
python3 compare_studies.py
```

## Re-train on the complete trainval set
A freshly initialized model will be trained on the complete training and validation set using the best hyperparameters and model architecture. 

```
python3 retrain.py [architecture] [feature_extractor]
# example
python3 retrain.py unet resnet34
```

# Publication and Citation
Deep Learning-based Early Weed Segmentation using Motion Blurred UAV Images of Sorghum Fields  
N Genze, R Ajekwe, Z Güreli, F Haselbeck, M Grieb, DG Grimm  
Computers and Electronics in Agriculture, 2022 (https://doi.org/10.1016/j.compag.2022.107388) 


@article{GENZE2022107388,
title = {Deep learning-based early weed segmentation using motion blurred UAV images of sorghum fields},
journal = {Computers and Electronics in Agriculture},
volume = {202},
pages = {107388},
year = {2022},
issn = {0168-1699},
doi = {https://doi.org/10.1016/j.compag.2022.107388},
url = {https://www.sciencedirect.com/science/article/pii/S0168169922006962},
author = {Nikita Genze and Raymond Ajekwe and Zeynep Güreli and Florian Haselbeck and Michael Grieb and Dominik G. Grimm},
keywords = {Deep learning, Weed detection, Weed segmentation, UAV, Precision agriculture}
}
",8,8,3,0,precision-agriculture,"[deep-learning, precision-agriculture, uav-images, weed-detection, weed-segmentation]",00000
1440,demo-efarm,peter-evance,N/A,https://github.com/peter-evance/demo-efarm,https://api.github.com/repos/peter-evance/demo-efarm,"This GitHub repo contains the code for a precision agriculture app built with Python-Django, and  Typescript-Angular. The whole web app is designed to help farmers manage their dairy and poultry farms by making data-driven decisions for their business. In this repo, you'll find the code for the dairy and poultry franchises","# eFarm: Streamlining Agriculture Operations
![GitHub top language](https://img.shields.io/github/languages/top/peter-evance/demo-efarm)
![GitHub last commit](https://img.shields.io/github/last-commit/peter-evance/demo-efarm)
![GitHub repo size](https://img.shields.io/github/repo-size/peter-evance/demo-efarm)

eFarm is a comprehensive Django-Angular project designed to enhance farming operations through digital solutions. The platform focuses on precision agriculture, providing tailored apps for different sectors - Dairy, Poultry, and soon Swine.

## Introduction

eFarm aims to revolutionize farming by offering an integrated digital platform. With dedicated apps for Dairy, Poultry, and upcoming Swine sector, the project facilitates efficient data management and operation optimization.

## Getting Started

Please note that the frontend development is currently paused until the backend is completed for at least the Dairy and Poultry sectors.

### Backend (Django)

1. Clone the repository: `git clone https://github.com/peter-evance/demo-efarm.git`.
2. Navigate to the project directory: `cd efarm`.
3. Create a virtual environment: `python3 -m venv env`.
4. Activate the virtual environment:
   - On Linux/macOS: `source env/bin/activate`
   - On Windows: `.\env\Scripts\activate`
5. Install dependencies: `pip install -r requirements.txt`.
6. Run migrations: `python manage.py migrate`.
7. Start the development server: `python manage.py runserver`.

### Frontend (Angular)

Frontend development is temporarily paused until the backend for Dairy and Poultry sectors is completed.

## Usage

Once the Django development server is running, access the eFarm app at `http://localhost:8000/`. You can explore the various apps and models to manage and view data relevant to your farm operations.

## Feedback

I greatly appreciate your feedback on how we can further enhance the eFarm project. Feel free to share your thoughts and suggestions with me.

---
For more information, please visit my [YouTube channel](https://www.youtube.com/@peterevance), where tutorials and updates are regularly shared.
",8,8,1,0,precision-agriculture,"[angular, django, precision-agriculture, python]",00000
1441,terravion-examples,terravion,N/A,N/A,https://api.github.com/repos/terravion/terravion-examples,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C164:7E09:25E6EC1:4E1B4C4:6522400A.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,precision-agriculture,"[N, /, A]",00000
1442,AGTracker,joschindlbeck,N/A,https://github.com/joschindlbeck/AGTracker,https://api.github.com/repos/joschindlbeck/AGTracker,An Android APP to record precision areas for farming purposes,"# AGTracker - An Android APP and idea how to record precision areas for farming purposes.

**work in progress!**

* app is in early alpha stage
* first field tests started (two fields recorded)
* no internationalization (German texts only)
* not yet optimized / quality assurance tbd.

## Project goal

The intention of this project is to enhance the open source guidance system [AgOpenGPS](https://github.com/farmerbriantee/AgOpenGPS) with a option to do precision farming, especially applying herbicide to small spots of weed.

## Current Setup / Components

### AGTracker Android App

To determine and track the areas in the field where herbicide shall be apllied, we developed the Android based app AGTracker that acts as a tracking device for GPS coordinates.

In a nutshell, you click a button on the app and the app starts to record GPS points wherever you move. With this tracking, you can walk around a spot of weeds in the field and AGTracker is creating a GPS point cloud in the background. This data can then be exported to QGIS for further processing.

![Start recording](/docs/images/Screenshot_area_tracking_start1.png)
![Start recording](/docs/images/screenshot_area_tracking_1.png)

[Demo Video](https://youtu.be/wDYr2NimR5c)

To enable a high degree of accurracy, the app gets the GPS coordinates by an Ardusimple F9P GPS receiver with NTRIP data correction. The GPS handling is done via the [Lefebure NTRIP Client](https://play.google.com/store/apps/details?id=com.lefebure.ntripclient&hl=de&gl=US) and forwarded to the AG Tracker app as GPS mock signal.

### QGIS processing

After export of the GPS data from the app QGIS is used to visualize the data, to enable the option to manually edit the data if needed and process further to be usuable for AgOpenGPS.

![Weed spots](/docs/images/screenshot_qgis_unkraut.png)
![Weed spots processed](/docs/images/screenshot_qgs_processed.png)

Handover to AGOpenGPS is done by automated creation of a Sections-File to ""mock"" AGOpenGPS that every place in the specific field has been already applied besides the weed spots. Therefore in QGIS a processing routine creates an area of the field and substracts the weed spots (basically cuts holes in the area). The remaining area is then devided to square fields and those are processed to a Section file by a custom python script.

For a detailed explanaition see this [video](https://vimeo.com/645569057)

Details on the QGIS processing and the relevant scripts can be found [here](https://github.com/joschindlbeck/aog_qgis).

### AgOpenGPS processing

The created Sections file can than be imported in AgOpenGPS as usual and will result in a partly applied field where only the relevant spots are not yeat applied. With the AgOpenGPS section control enabled, only the weed spots will be applied.

![AgO](/docs/images/screenshot_ago.jpeg)
",7,7,3,0,precision-agriculture,"[agopengps, android-app, precision-agriculture, qgis]",00000
1443,precision-agriculture-computer-vision,yildizozan,N/A,https://github.com/yildizozan/precision-agriculture-computer-vision,https://api.github.com/repos/yildizozan/precision-agriculture-computer-vision,NOT COMPLETED - To use deep domain adaptation techniques in order to develop a deep network that can produce semantic segmentation maps for precision agriculture,"# Precision Agriculture in Computer Vision
To use deep domain adaptation techniques in order to develop a deep network that can produce semantic segmentation maps for precision agriculture
",7,7,2,0,precision-agriculture,"[cnn, computer-vision, deep-learning, domain-adaptation, precision-agriculture, semantic-segmentation]",00000
1444,Plant-Phenotyper,ricber,N/A,N/A,https://api.github.com/repos/ricber/Plant-Phenotyper,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C139:336C:2D1D006:5C7C2BA:652242C1.'}",N/A,N/A,N/A,N/A,precision-agriculture,"[N, /, A]",00000
1445,Precio,suryan-s,N/A,https://github.com/suryan-s/Precio,https://api.github.com/repos/suryan-s/Precio,Precio is a comprehensive application designed to assist modern farmers in optimizing their agricultural operations by incorporating precision farming practices. ,"
![Banner](https://user-images.githubusercontent.com/76394506/222956195-0dd600ca-100d-4cc1-b79d-4ea2d10b4304.png)

<p align='center'>
    <h1><strong>PRECIO🌿</strong></h1>
</p>

Precio is a comprehensive solution designed to assist modern farmers in optimizing their agricultural operations. This document serves as a guide for developers and users of Precio, providing information on the project's features, functionality, and usage.                                 The software is available under the MIT License.

## Purpose

Precio is an open-source software tool for monitoring, automating and visualizing farming data. It provides real-time data analysis and insights into farming, enabling informed decision-making and improving farming efficiency. Precio includes third-party integration and is designed to be user-friendly, optimizing resource usage, reducing waste, and increasing productivity.

## Audience

This application is intended for any agricultural enthusiast and developers looking forward to contributing to precision farming applications.

</br>
<hr/>

## Installation and Usage

- Clone the repository :\
  `git clone [https://github.com/suryan-s/Precio](https://github.com/suryan-s/Precio)`
- Run setup.py in the main directory to create a virtual environment, install packages from requirements.txt and build the static files for the frontend:\
  `python setup.py`
- Run the application by:\
  `python main.py`
</br>

<hr/>

## Files and Folders

```

Precio
├─ .gitignore
├─ .vscode
│  └─ settings.json
├─ arduino
│  ├─ PMS.ino
│  ├─ Weather Monitoring Station
│  │  ├─ WMS-GERBER-img.jpg
│  │  ├─ WMS-GERBER-PDF.pdf
│  │  ├─ WMS-GERBER-PNG.png
│  │  └─ WMS-GERBER.zip
│  └─ WMS.ino
├─ database
│  └─ .gitkeep
├─ endpoints.py
├─ frontend
│  ├─ package-lock.json
│  ├─ package.json
│  ├─ public
│  │  └─ vite.svg
│  ├─ README.md
│  ├─ src
│  │  ├─ App.svelte
│  │  ├─ assets
│  │  │  └─ svelte.svg
│  │  ├─ lib
│  │  │  ├─ components
│  │  │  │  ├─ Button.svelte
│  │  │  │  ├─ Fab.svelte
│  │  │  │  ├─ Modal.svelte
│  │  │  │  └─ Sidebar.svelte
│  │  │  ├─ composites
│  │  │  │  ├─ CreateProject.svelte
│  │  │  │  ├─ Layout.svelte
│  │  │  │  └─ Sidenav.svelte
│  │  │  ├─ routes
│  │  │  │  ├─ dashboard.svelte
│  │  │  │  ├─ Home.svelte
│  │  │  │  └─ routes.js
│  │  │  └─ stores.js
│  │  ├─ main.js
│  │  └─ vite-env.d.ts
│  ├─ svelte.config.js
│  └─ vite.config.js
├─ index.html
├─ LICENSE
├─ main.py
├─ model
│  └─ best_pretemp.h5
├─ requirements.txt
├─ settings.json
├─ setup.py
└─ _README.md

```

</br>

<hr/>

## Requirements

- Python 3.8.5 or higher
- Arduino IDE
- Node.js 16.15.4 or higher
- Libraries used:
  - Python: numpy, pandas, Tensorflow, Keras, uvicorn, fastapi, scikit-learn
  - Svelte, vite, svelte-spa-router
  - IBM Carbon Design System
  - NanoID
- Optional requirements:
  - Hardware support for PMS(Plant Monitoring System) and WMS(Weather Monitoring Station)
</br>

<hr/>

## Integration and Features

Precio offers the following features:

- Real-time monitoring of critical data required for the governance of farming operations.
- Intuitive visualization features for better data analysis and insights.
- Easy integration with third-party tools and devices.
- User-friendly interface for streamlined operations and reduced resource usage.
- Support for following farming practices for greater flexibility:
  - Arable farming
  - Hydroponic farming
  - Horticulture
  - Aquaponics
  - Vertical farming
- Support for actuators and actions for improved efficiency with Telegram integration:
  - Water pumps
  - Water heaters
  - Lights
  - Sprinklers
  - Irrigation systems
  - Ventilation systems
  - CO2 sensors
  - Temperature sensors
  - Humidity sensors
  - pH sensors
  - Water level sensors
  - Water flow sensors
  - Water quality sensors etc.
</br>

- IoT integration could be implemented by connecting to localhost/api/WMS/{api_token} or localhost/api/PMS/{api_token}

<hr/>

## Current Status

- [x] Create projects and organise projects.
- [x] Support for Arable farming.
- [x] Visualization dashboard.
- [x] Integration with Arduino with hardware and software support for WMS.
- [x] Dockerized application.

## Future Developments

- [ ] Integration with Arduino with hardware and software support for PMS.
- [ ] Telegram integration for actuators and actions.
- [ ] ML model for predicting plant health and advanced predictions
- [ ] Support for Horticulture, Aquaponics, Vertical farming

## Contribution and Guidelines

To start contributing to the project, clone the repository into your local system subdirectory using the below git code:

```
https://github.com/suryan-s/Precio.git
```

Before cloning the repository, make sure to navigate to the working subdirectory of your command line interface and ensure that no folder with the same name exists. Other ways to clone the repository include using a password-protected SSH key, or by using [Git CLI](https://cli.github.com/). The changes may additionally be performed by opening this repo using [GitHub Desktop](https://desktop.github.com/)

## Submitting a Pull Request

Before opening a Pull Request, it is recommended to have a look at the full contributing page to make sure your code complies with all the pull request guidelines.

Navigate to this subdirectory, & check the status of all files that were altered (red) by running the below code in Git Bash:

```
  git status
```

Stage all your files that are to be pushed into your pull request. This can be done in two ways - stage all or some files:

```
  git add .            // adds every single file that shows up red when running the git status
```

```
  git add <filename>   // type in the particular file that you would like to add to the PR
```

Commit all the changes that you've made and describe in brief the changes that you have made using this command:

```
  git commit -m ""<commit_message>""
```

Push all of your updated work into this GitHub repo in the form of a Pull Request by running the following command:

```
  git push origin main
```

</br>

<hr/>
",5,5,2,4,precision-agriculture,"[arduino, farming, foss, geospatial-analysis, geospatial-visualization, ibm-carbon, internet-of-things, iot-platform, javascript, modern, precision-agriculture, python, python3, sqlite3, svelte, typescript]",00000
1446,Embeddable-Software-for-Irrigation-Control,SoothingMist,N/A,N/A,https://api.github.com/repos/SoothingMist/Embeddable-Software-for-Irrigation-Control,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C179:0BEC:2B8998:5AAFAA:652242C1.'}",N/A,N/A,N/A,N/A,precision-agriculture,"[N, /, A]",00000
1447,ClusterWay,fsalv,N/A,N/A,https://api.github.com/repos/fsalv/ClusterWay,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C17B:7890:2B87F7:5AA336:652242C2.'}",N/A,N/A,N/A,N/A,precision-agriculture,"[N, /, A]",00000
1448,bonsaifog,di-unipi-socc,N/A,N/A,https://api.github.com/repos/di-unipi-socc/bonsaifog,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C15A:68AA:2EAD17D:5F94138:652242C2.'}",N/A,N/A,N/A,N/A,precision-agriculture,"[N, /, A]",00000
1449,Vegetation-Indexes,mKotoulas,N/A,N/A,https://api.github.com/repos/mKotoulas/Vegetation-Indexes,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C1A1:8AB4:29C30B5:55C100C:652242C3.'}",N/A,N/A,N/A,N/A,precision-agriculture,"[N, /, A]",00000
1450,site-specific-multilevel-modeling-of-potato-response-to-nitrogen-fertilization,essicolo,N/A,N/A,https://api.github.com/repos/essicolo/site-specific-multilevel-modeling-of-potato-response-to-nitrogen-fertilization,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C10A:6584:2857B4C:52F4B70:652242C4.'}",N/A,N/A,N/A,N/A,precision-agriculture,"[N, /, A]",00000
1451,align_pointcloud,dtcMLOps,N/A,https://github.com/dtcMLOps/align_pointcloud,https://api.github.com/repos/dtcMLOps/align_pointcloud,Alignment between the coordinate system of a point cloud and the global coordinate system of pcl,"# align_pointcloud
Alignment between the coordinate system of a point cloud and the global coordinate system of pcl. Using the dot product and the cross product, a normal plane vector is extracted from the point cloud using the NormalEstimation Method. Then, a normal plane XYZ vector (x = 0, y = 0, z = 1). Finally, a rotation matrix is obtained from a rotation vector (axis of rotation) and an angle of rotation.

----------------------
## Input file structure support

* .pcd 
* .ply


## Example

<img src=""./example/img.png"" align=""center"" height=""500"" width=""1000""><br>

## Compile
* Set ""YOUR"" PCL Build DIR in CMakeList.txt e.g: **/opt/pcl-1.8.1/build** and save it. (support pcl 1.9.1)
* Create a ""build"" folder

in the main folder:

	cd /build  
    cmake ../
    make
       
        	 
### Test

	cd /build
	./align_cloud <pcd file> 
  	./align_cloud2 <pcd file> 



",3,3,2,0,precision-agriculture,"[alignment, cloud, cmake, cmakelists, pcd, pcl-library, ply, precision-agriculture, precision-farming, robotics]",00000
1452,plant-line-detection,maikbasso,N/A,https://github.com/maikbasso/plant-line-detection,https://api.github.com/repos/maikbasso/plant-line-detection,Autonomous UAV guidance on precision agriculture plantations based on crop row detection algorithm.,"# plant-line-detection
Autonomous UAV guidance on precision agriculture plantations based on crop row detection algorithm.

# Compiling:
	$ mkdir build
	$ cd build
	$ cmake ..
	$ make

# Running:
	$ cd build
	$ ./main",3,3,6,0,precision-agriculture,"[image-processing, precision-agriculture, uav]",00000
1453,ontology,BigDataGrapes-EU,N/A,N/A,https://api.github.com/repos/BigDataGrapes-EU/ontology,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C193:646E:26D3E9C:4FAC397:6522403C.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,precision-agriculture,"[N, /, A]",00000
1454,SmartAG-SensorNode,markoceri,N/A,N/A,https://api.github.com/repos/markoceri/SmartAG-SensorNode,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1CB:2299:25368EF:4C771B9:65224038.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,precision-agriculture,"[N, /, A]",00000
1455,plantalyzer,mstrocchi,N/A,N/A,https://api.github.com/repos/mstrocchi/plantalyzer,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C11E:2772:28D8B17:54066E3:6522416F.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,precision-agriculture,"[N, /, A]",00000
1456,SugNet,ohidaoui,N/A,https://github.com/ohidaoui/SugNet,https://api.github.com/repos/ohidaoui/SugNet,A U-Net like convnet for sugar beets crop/weeds segmentation.,"# SugNet 

A semantic segmentation U-Net like convnet trained on synthetic data for sugar beets crop/weeds detection.

## The dataset
The data used to train the model is a realistic synthetic dataset of *360x480* sugar beets crop/weeds images with corresponding annotations generated for **selective weeding** tasks (Accurately detect plants and distinguish them between crop and weeds) in agriculture robotics as having large agricultural datasets with pixel-level annotations is extremely time consuming.  
The dataset and the related work can be found [here](http://www.diag.uniroma1.it//~labrococo/fds/syntheticdatasets.html).
> Only **Synthetic SugarBeet Random Weeds** dataset is used for this task.

The original images are converted to grayscale, rescaled and cropped into 4 *256x256* patches.


## Model architecture
SugNet is U-shaped architecture that consists of a specific encoder-decoder scheme: The encoder reduces the spatial dimensions in every layer and increases the channels. On the other hand, the decoder increases the spatial dims while reducing the channels. In the end, the spatial dims are restored to make a prediction for each pixel in the input image.

- **Encoder (left side):**  
It consists of the repeated application of two 3x3 convolutions. Each conv is followed by a ReLU activation, batch normalization and a SAME 2x2 max pooling operation. Again, at each downsampling step, we double the number of feature channels, while we cut in half the spatial dimensions.

- **Decoder path (right side):**  
Every step in the expansive path consists of an upsampling of the feature map followed by a 2x2 transpose convolution, which halves the number of feature channels. We also have a concatenation with the corresponding feature map from the contracting path, and two 3x3 convolutional layers (each followed by ReLU + batch normalization). At the final layer, a 1x1 convolution is used to map the channels to the desired number of classes.

<p align=""center""><img width=""75%"" src=""sugnet_architecture.png""></p>
    
  
## Some examples of the segmentation
 
<p align=""center""><img width=""80%"" src=""test0.png""></p>
  
<p align=""center""><img width=""80%"" src=""test1.png""></p>",3,3,1,0,precision-agriculture,"[focal-loss, keras, precision-agriculture, selective-weeding, semantic-segmentation, tensorflow, unet]",00000
1457,EVAPO,waltermaldonado,N/A,https://github.com/waltermaldonado/EVAPO,https://api.github.com/repos/waltermaldonado/EVAPO,Instantly estimate soil water loss worldwide!,"# EVAPO

EVAPO: A smartphone application to estimate potential evapotranspiration using cloud gridded meteorological data from NASA-POWER system

Here you can find the source code of the EVAPO Android App.

[Read the full article](https://www.sciencedirect.com/science/article/pii/S016816991830680X?via%3Dihub)",2,2,2,0,precision-agriculture,"[environment, et0, evapotranspiracao, evapotranspiration, irrigation, nasa, nasa-power, penmann-monteith, pet, precision-agriculture, water]",00000
1458,soil-carbon-and-spectroscopy-with-PLS-and-LASSO,eupassarinho,N/A,https://github.com/eupassarinho/soil-carbon-and-spectroscopy-with-PLS-and-LASSO,https://api.github.com/repos/eupassarinho/soil-carbon-and-spectroscopy-with-PLS-and-LASSO,"R scripts for predicting soil organic carbon using soil spectral library from visible, near-infrared and shortwave-infrared (VNIR) and middle-infrared (MIR) using LASSO and PLS regression methods and the target-oriented cross-validation strategy.","# Machine Learning modeling of the Soil Organic Carbon content (SOC):

This repo contains all the code needed for reproducing the methodology proposed by dos Santos et al. (2023). This code repository is part of the paper published in Ecological Informatics, so if any code here is useful for you, please refer to the paper:

dos Santos, E. P., Moreira, M. C., Fernandes-Filho, E. I., Demattê, J. A. M., Santos, U. J. dos, da Silva, D. D., … Sampaio, E. V. de S. B. (2023). Improving the generalization error and transparency of regression models to estimate soil organic carbon using soil reflectance data. Ecological Informatics, 77. https://doi.org/10.1016/j.ecoinf.2023.102240

## Paper abstract

""Despite the success of using soil spectroscopy in studies to predict soil attributes, like soil organic carbon (SOC), recent work has revealed several limitations to this approach: a tendency for model overfitting and a lack of transparency of machine learning (ML) methods. Thus, we aimed to both test the ability to improve the generalizability of the models to predict SOC using a cross-validation (CV) strategy oriented to soil profiles and to test the gain in model interpretability by using the least absolute shrinkage and selection operator (LASSO) regression method instead of the commonly used partial least squares (PLS) method. We used one soil spectral library composed of 127 soil profiles (n = 701), from Northeast Brazil, containing reflectance data from the visible, near, and short-wave infrared (VNIR) and the mid-infrared (MIR) spectral regions. We tuned the ML models to predict SOC via two CV strategies: the standard k-fold CV and the leave-soil-profile-out (LSPO) CV. We found that LSPO CV can produce models with better generalizability, as they lose less accuracy than the ones trained with k-fold CV. We conclude that disregarding the autocorrelation of SOC within the soil profile can produce models that are prone to overfitting. In addition, LASSO used 105 covariables from VNIR and 190 from MIR for a total of 8604 and 13,336 covariables, respectively. Moreover, a few LASSO covariables correlated with SOC and are associated with both electronic transitions and vibrational bonds in organic compounds, so the possibility and ease of identifying spectral bands and their correlation with organic carbon indicate that the LASSO models presented more transparent models than the PLS models.""

## The figure from the paper summarizes the code (scripts) in this repository:

![image](https://github.com/eupassarinho/soil-carbon-and-spectroscopy-with-PLS-and-LASSO/assets/52005057/42b1336c-7786-4e0c-a709-9305c84bf951)

Fig. 3 (from dos Santos et al. (2023)): the model fitting scheme for each spectral region, which includes subsampling of soil profiles to evaluate model training, testing, and performance. LASSO, least absolute shrinkage and selection operator; PLS, partial least squares; LSPO, leave-soil-profile-out cross-validation (CV); MIR, mid-infrared; VNIR, visible, near- and shortwave-infrared; ρ, original spectral reflectance; CR, the normalized reflectance; STD, the first derivative of ρ; and SCD, and the second derivative of ρ.
",2,2,1,0,precision-agriculture,"[cross-validation, diffuse-reflectance, least-absolute-selection-and-shrinkage-operator, machine-learning, partial-least-squares-regression, precision-agriculture, proximal-sensing, remote-sensing, soil-horizons, soil-organic-carbon, soil-science, soil-spectroscopy]",00000
1459,OFPETool,GiorgioMorales,N/A,https://github.com/GiorgioMorales/OFPETool,https://api.github.com/repos/GiorgioMorales/OFPETool,OFPETool: ML for Prediction in Precision Agriculture,"# OFPETool: ML for Prediction in Precision Agriculture

## Pre-requisites
The following software have to be previously installed:
* [Git](https://git-scm.com/download/) 
* [Pytorch](https://pytorch.org/)
* [ODBC Driver 17 for SQL Server](https://learn.microsoft.com/en-us/sql/connect/odbc/download-odbc-driver-for-sql-server?view=sql-server-ver16)
* [GDAL](https://www.lfd.uci.edu/~gohlke/pythonlibs/#gdal) 

## Installation

To install the package, run `pip install git+https://github.com/GiorgioMorales/OFPETool` in the terminal 
This will also install additional necessary packages such as sklearn, scipy, and pygam.

## Citation

Use this Bibtex to cite this repository:

```
@article{Morales_2023,	
author = {Giorgio Morales and John W. Sheppard and Paul B. Hegedus and Bruce D. Maxwell},	
title = {Improved Yield Prediction of Winter Wheat Using a Novel Two-Dimensional Deep 
Regression Neural Network Trained via Remote Sensing},	
journal = {Sensors},	
volume = {23},	
number = {1},	
pages = {489},
year = 2023,	
month = {jan},	
doi = {10.3390/s23010489},	
url = {https://doi.org/10.3390%2Fs23010489},	
publisher = {{MDPI} {AG}}}
```

and

```
@inproceedings{10.1117/12.2612209,
author = {Giorgio Morales and John W. Sheppard},
title = {{Two-dimensional deep regression for early yield prediction of winter wheat}},
volume = {11914},
booktitle = {SPIE Future Sensing Technologies 2021},
editor = {Masafumi Kimata and Joseph A. Shaw and Christopher R. Valenta},
organization = {International Society for Optics and Photonics},
publisher = {SPIE},
pages = {119140H},
keywords = {Yield prediction, Deep regression, convolutional neural networks, Precision agriculture},
year = {2021},
doi = {10.1117/12.2612209},
URL = {https://doi.org/10.1117/12.2612209}}
```

## Funding

_This research was supported by a USDA-NIFA-AFRI Food Security Program Coordinated Agricultural Project, titled “Using Precision Technology in On-farm Field Trials to Enable Data-Intensive Fertilizer Management,” (Accession Number 2016-68004-24769), and also by the a USDA-NRCS Conservation Innovation Grant from the On-farm Trials Program, titled “Improving the Economic and Ecological Sustainability of US Crop Production through On-Farm Precision Experimentation” (Award Number NR213A7500013G021)._

<img src=""https://github.com/GiorgioMorales/OFPETool/blob/master/templates/difm_logo.jpg?raw=true"" width=""200""/>",2,2,3,0,precision-agriculture,"[deep-learning, optimization, precision-agriculture, prediction-model, yield-prediction]",00000
1460,adalitix,Adalitix,Adalitix,https://github.com/Adalitix/adalitix,https://api.github.com/repos/Adalitix/adalitix,Precision Agriculture Toolkit,## Adalitix,2,2,2,0,precision-agriculture,"[cloud-native, machine-learning, precision-agriculture]",00000
1461,iTree3DMap,danielTobon43,N/A,https://github.com/danielTobon43/iTree3DMap,https://api.github.com/repos/danielTobon43/iTree3DMap,3D Mapping of a tree for dendrometric feature estimation ,"# 3D Dendrometric feature estimation of an individual tree with OpenMVG-PMVS2
<p align=""justify"">
*Note:* This project is a photogrammetric system for dendrometric feature estimation of individual trees. The purpose of this project is to do a 3D reconstruction of an individual tree using Open Multiple View Geometry (openMVG) and get dendrometry estimation (diameter at breast height (DBH), tree crown height, total tree height, crown volume, morphic factor and percentage canopy missing) of a stem tree. For that, were used OpenMVG and PMVS for 3D Mapping, a circular pattern for scale factor estimation, PCL Library and DBScan for segmentation and Euclidean distance for dendrometric feature estimation.
</p>

----------------------
## Example

<img src=""./example/tree.jpg"" align=""center"" height=""500"" width=""640""><br>
<img src=""./example/system.png"" align=""center"" height=""500"" width=""640""><br>

## Build cmake
<p align=""justify"">
To build use CMake minimum required 3.5.1 : https://github.com/Kitware/CMake or:
					
	$ sudo apt-get install cmake && cmake-gui && openssl && git -> This install cmake-3.5.1
	
</p>

### PCD files
* https://drive.google.com/drive/folders/173GyVK9esApF1UC4iQvpkenALBlkLcN5?usp=sharing

### Ground Truth Data
* https://docs.google.com/spreadsheets/d/1cs-I-1BxetnAPiWe4e07TfKXyPMTo7x_rN72FC26kHU/edit?usp=sharing

### Dependencies
- Eigen3: http://eigen.tuxfamily.org/index.php?title=Main_Page
- Glut (OpenGL): 

		$ sudo apt-get install libglu1-mesa-dev
		$ sudo apt-get install freeglut3-dev
		$ sudo apt-get install mesa-common-dev
		
		if(OpenGL not found):
		 OPENGL_opengl_LIBRARY: /usr/lib/x86_64-linux-gnu/libOpenGL.so
    		 OPENGL_glx_LIBRARY: /usr/lib/x86_64-linux-gnu/libGLX.so
		 OPENGL_gl_LIBRARY: /usr/lib/x86_64-linux-gnu/libGL.so
		
- Blas and Lapack: 

		$ sudo apt-get install liblapack-dev && libblas-dev 
		$ sudo apt-get install libgoogle-glog-dev
		
- OpenBLAS:
		
		$ sudo apt-get install libopenblas-dev


- Boost:

		$ sudo apt-get install libboost-all-dev
		
- Cereal:
 
 		$ sudo apt-get install gcc-multilib g++-multilib
		$ Download the source code, compile and install: https://github.com/USCiLab/cereal
		
- Flann: 

		$ sudo apt-get install liblz4-dev
		$ sudo apt-get install libhdf5-dev
		$ sudo apt-get install libgtest-dev  
		(for gtest)
		
		cd /usr/src/gtest
		sudo cmake CMakeLists.txt
		sudo make
		cd /usr/src/gtest/lib
		sudo cp *.a /usr/lib
		create a gtest folder in usr/local/lib
		sudo ln -s /usr/lib/libgtest.a /usr/local/lib/gtest/libgtest.a
		sudo ln -s /usr/lib/libgtest_main.a /usr/local/lib/gtest/libgtest_main.a
		
		Edit CMakeLists.txt on flann/src/cpp/CMakeLists.txt and replace:
		add_library(flann_cpp SHARED """") -> add_library(flann_cpp SHARED ""main.cpp"")
		Create a main.cpp file at the samen directory
		set(CMAKE_CXX_FLAGS ""${CMAKE_CXX_FLAGS} -std=c++11"")		
		
		
		$ https://github.com/mariusmuja/flann -> compile and install

- TinyXML2: https://github.com/leethomason/tinyxml2 -> compile and install

- GTK2.0: 

		$ sudo apt-get install libgtk2.0-dev
				
- GTK 3.0: 

		$ sudo apt-get install build-essential libgtk-3-dev
		
- QT creator:

		$ sudo apt-get install qtcreator

		$ sudo apt-get install git build-essential qt5-default qtscript5-dev libssl-dev qttools5-dev qttools5-dev-tools 
		  qtmultimedia5-dev libqt5svg5-dev libqt5webkit5-dev libsdl2-dev libasound2 libxmu-dev libxi-dev freeglut3-dev 
		  libasound2-dev libjack-jackd2-dev libxrandr-dev libqt5xmlpatterns5-dev libqt5xmlpatterns5
		  libqt5xmlpatterns5-private-dev
		  
- VTK: 

   		$ sudo apt-get install libxt-dev 
		$ sudo apt-get install xorg 
		$ sudo apt-get install qhull-bin
		$ sudo apt-get install libqhull-dev
		$ sudo apt-get install libxt-dev 
		https://github.com/Kitware/VTK

- OpenMVG:https://github.com/openMVG/openMVG
- CMVS-PMVS: https://github.com/pmoulon/CMVS-PMVS

### Prerequisite (just compiled)
<p align=""justify"">
For this project it is necessary to have compiled the following libraries (it is not necessary to have installed):

- OpenCV 3.4.1: https://github.com/opencv/opencv/tree/3.4.1
- PCL 1.8.1 or 1.9.1: https://github.com/PointCloudLibrary/pcl/tree/pcl-1.8.1

*Note:* Just set the path to the build directory of each library in the principal CMakeList.txt
 </p>
 
### How to make
<p align=""justify"">
This project depends of openMVG, PCL, OpenCV, Qt and CMVS-PMVS, please compile the dependencies before.
	
* Download the src code and Unpack .zip

/src:
  	
	iTree3DMap - include
		   - libraries
		   - src
		   - CMakeLists.txt
		   - main.cpp
		   
* Once OpenMVG was compiled, just set the path build directory in the CMakeList.txt		   		   
* Edit the ""SfM_SequentialPipeline.py"" file in the project build directorie (ItreeMapper_Build) with your own OpenMVG path directorie.
* If pmvs2 binary file is not working, download and compile the cmvs-pmvs library and replace the pmvs2 bin to /libraries folder of the package 

Within build folder, compile with cmake:

    cmake ../
    make
 </p> 
 
### Test

	cd /build/bin
	./itree_3dmap		

*Note:*
<p align=""justify"">
Just for OpenMVG compilation: If OpenMVG compiled without error and is not working; compile OpenMVG with this line:

	cmake -DTARGET_ARCHITECTURE=generic ../src/

</p>

Extra packages:
* [Canopy Missing](https://github.com/danielTobon43/canopyMissing) C++ program for percentage canopy missing
* [Pointcloud to Mesh channel](https://github.com/danielTobon43/pointcloudToMesh) C++ program to convert pcd to mesh
* [Control image selector](https://github.com/danielTobon43/gui-Control-points) GUI interface for images
* [Align point cloud](https://github.com/danielTobon43/align_pointcloud) C++ program for alignment pointcloud to axis
* [DBScan](https://github.com/danielTobon43/DBScan-PCL-Optimized) C++ program for clustering 3D points in a space
",2,2,5,0,precision-agriculture,"[cmake, dbscan, dendrometric, opencv3, openmvg, pcd, pcl-library, ply, pmvs2, point-cloud, precision-agriculture, precision-farming, robotics]",00000
1462,webapp,benitezfj,N/A,https://github.com/benitezfj/webapp,https://api.github.com/repos/benitezfj/webapp,A WebApp using Geemap and Google Earth Engine,"# Precision Agriculture WebApp

Web application developed for precision agriculture. 
The application will have the functionality based on a set of input 
parameters and the use of Google Earth Engine to calculate crop indices, 
sowing and harvest periods, fertilizer measurement, etc.

## Current Funcionalities
- Login
- User/Role Registration
- View registered land
- Search a location
- Extract Index
- Search by land acres (Polygon)

## Next Funcionalities
- Fertilization calendars
- Export Data

## Images

### Home Page

![](https://github.com/benitezfj/WebApp/blob/master/WebApp/static/images/home.png?raw=true)

### Role registration

![](https://github.com/benitezfj/WebApp/blob/master/WebApp/static/images/role.png?raw=true)

### New user registration

![](https://github.com/benitezfj/WebApp/blob/master/WebApp/static/images/new_user.png?raw=true)

### View of lands

![](https://github.com/benitezfj/WebApp/blob/master/WebApp/static/images/parcelas.png?raw=true)

### Login Page

![](https://github.com/benitezfj/WebApp/blob/master/WebApp/static/images/login.png?raw=true)

### Farmland registration

![](https://github.com/benitezfj/WebApp/blob/master/WebApp/static/images/farmland.png?raw=true)

### Calculate indices

![](https://github.com/benitezfj/WebApp/blob/master/WebApp/static/images/index.png?raw=true)

### Calculated Index: GNDVI (Green Normalized Difference Vegetation Index) Imagery extracted by Google Earth Engine

![](https://github.com/benitezfj/WebApp/blob/master/WebApp/static/images/index_1.png?raw=true)

### Calculated Index: CWSI (Crop Water Stress Index) Imagery extracted by Google Earth Engine

![](https://github.com/benitezfj/WebApp/blob/master/WebApp/static/images/index_2.png?raw=true)

### Fertilizer Map

![](https://github.com/benitezfj/WebApp/blob/master/WebApp/static/images/posology.png?raw=true)

![](https://github.com/benitezfj/WebApp/blob/master/WebApp/static/images/posology_1.png?raw=true)

## Install
To install the Web App, clone the repository and install the dependency:

```shell
$ git clone https://github.com/benitezfj/WebApp.git
$ cd WebApp
$ pip install -r requirements.txt
```

Then, in the folder run the project (Before running the following command, read the HELP.md file):
```shell
$ flask run
```

## Note
Keep in mind that in order to use the Google Earth Engine (GEE), users must give 
access to GEE services to their Google account. After that, locally install 
Google Cloud (gcloud) SDK and configure it, more information [here](https://cloud.google.com/sdk/docs/configurations?hl=es-419)
and [here](https://cloud.google.com/iam/docs/creating-managing-service-account-keys)",1,1,1,0,precision-agriculture,"[flask, flask-application, google-earth-engine, precision-agriculture]",00000
1463,szenzormodularitasok,gabboraron,N/A,https://github.com/gabboraron/szenzormodularitasok,https://api.github.com/repos/gabboraron/szenzormodularitasok,szenzor modalitások,"# szenzormodalitások

- [What is a smart city](https://www.youtube.com/watch?v=Br5aJa6MkBc)


**Tárgyköveelmény:**
- 2 zh - vagy vizsga
- önálló féléves feladat


## okos vs intelligens
- az intelligens képes tanulni, vagy legalábbis valamilyen ú tulajdonságokat szerezni
- az okos ""csak"" vezérlés, automatizálás, digitalizálás

## szenzor fogalma
> - Érzékelő ami valamilyen fizikai/kémiai mennyiséget, vagy annak változását mér
> - digitális mérés
> - digitális adatot tovább tudja küldeni vezetékes, vagy vezeték nélküli csatornán
> 
> **hátrány:** táplálás, adattovábítás módja, rendszer sebezhetősége, felhasználó életének megnehezítése, stb
> 
> ### szenzorok csoportosísása mérendő mennyiség alapján
> **szenzor:** Érzékelő ami valamilyen fizikai/kémiai mennyiséget, vagy annak változását méri. Digitális adatot ad ki magából. A digitális adatot tovább tudja küldeni vezetékes, vagy vezeték nélküli csatornán.   
> - mechanikai érzékelők
> - termikus mennyiségek
> - elektromos és mágneses mennyiségek
> - élettani paraméterek

![dikw pyramid](https://www.ontotext.com/wp-content/uploads/2018/03/DIKW-Pyramid.png)

## DAQ
> Kommunikációs infrastruktúra köti össze a kliens és központi rendszert:
> - Központi adat tároló és adat menedzselő rendszerek 
> - Üzemeltető és kiszolgáló személyzet infrastruktúrája 
> - rendszer irányító renddszerek

## DCS
> olyan rendszer ami központi vezérléssel távolról szabályozó körök működését és paramétereit lehet változtatni
> - kritikus infrastruktúráknál használt
> - helyi vezértlőt alkalmaz
> - a koomunikáció is lokális, amit esetleg távolról lehet monitorozni

## SCADA
> Legyen egy olyan rendszer ahol én távolról tudok beavatkozni, szabályozni, és monitorozni egyszerre, központosított vezérléssel távoli adatgyűjtéssel, erőművek, csővezetékeknél jó.
> 
> bonyolult rendszerekt képes felügyelni, a 
> 
> ![SCADA system](https://www.ssla.co.uk/wp-content/uploads/2018/10/scada.png)
> 
> **SCADA generációk:**
> 1. monolitikus, szigetszerű: egymástól függetlenek, zártak, külső kapcsolat nélkül, ideálsi erőművekhez
> 2. elosztott rendszerek, földrajzilag nagyobb kiterjedésű, LAN hálózatok, egymással is kommunikálnak
> 3. LAN nál nagyobb kiterjedéssel ugyanaz
> 4. IoT nagyon sok szenzorral
> 5. felhővel összekapcsolt rendszer
> 
> *felhasználható pl* 
> - távoli telemetria, beteg megfigyelés
> - veszélyesen/nehezen kezelhető helyek karbantártása
> - biztonsági rendszerek

**biológia jellemzők mérésére:**
- ekg  → ElectroCardioGraphy 
- eeg  → ElektroEncephaloGraphy 
- emg  → ElectroMyoGraphy 
- ecog → ElektroCOrticoGraphy
- testhő
- gsr
- súly
- mozgás

## nagymennyiségű adatgyűjtés kihívásai
- hálózat korlátai
- hardver korlátai
- feldolgozási kapacitás korlátai

## mérési elvek
**auszkultációs módszer**
- korotkov hangok detektálásán
- hátrány: egyetlen pillanatnyi érték, mandzsetta, leeresztési sebesség, orvos hallása mind befolyásol

**oszcillometriás módszer**
- automata vérnyomásmérők
- artéria pulzálása megjelenika felkarra helyezett mandzsetta nyomában
- pulzálás maximális: artériás középnyomással
- hátrány: a szorzók pontatlanok öregedéskor az artériák rugalmatlanok.

**tolometria**
- speciálsi esetben használják, mert drága

**PPG aléapú**
- hajszálerek térfogatváltozását regisztrálja
- hátrány: bonyolult és nehezen követhető

**A vérnyomásmérés pontatlan:** + 8Hgmm ha keresztbe teszed a lábad, +5Hgmm ha ülve méred. A kettő ösze is adódhat.

**vércukorszint mérése:**
- inzulint a langerhans szigetek termelnek, de ha a hasnyálmirigy tönkre megy akkor ez megszűnik
- ha a sejtek nem tudnak a vérből cukrot felvenni akkor a cukor a vérben marad => megnő a vércukorszint egy idő után ellenállnak a sejtek az inzulinnak.
- kémiai reakcióknál a vegyi anyagok szavatossága korlátos
- leolvasás automatizáltsága
- CGM: folyamatos vércukorszintmonitorozás, mérés kombinálva inzulinpumpával, mesterséges hanyálmirigy 
  - medtronic
  - abbot 

1. cukorbetegség
- rendszeres inzulinozás kell
2. cukorbetegség
- lépcsőzetes kezelés
- elég a diéta is
3. típusú cukorbetegeség terhesség alatt

**gyógyszerszedés** a gógyszeripar mérete = hadiipar + női kozmetikumok

- **pacemekerek:** mérjük az adatokat a testben átküldjük egy lokális tárolóba ami felküldi a felhőbe
- **emberi légzés monitorozása**: 
   - külső légzés: állanó légcsere zajlik a tüdő és környezet között: gond lehet a fulladás
     - **kilégzési csúcs áramlás mérő:** Lényegében azt méri, hogy egy kilégzés alkalmával milyen gyorsan jut ki a levegő a tüdőből, PEF
     - **Spirométer:** tüdő levegőbefogadó képességének mérésére való eszköz 
     - **Légzési rátát monitorozó öv:** Nyúlásképes pánt, ami a mellkas térfogatváltozását érzékeli 
     - **Légzésfigyelő/őr babákhoz:** Babaágy aljára helyezhető mozgás érzékelő matrac
     - **Légzésszámláló:** Alvás/horkolás monitorozás mikrofonnal
   - belső légzés: sejtek és szövetek légzés: asztma, CO fulladás
     - **Pulzoximetria:** folyamatosan érzékeli az oxigén szint változását, fájdalommentes, gyakran megbízhatatlan a perifériás érellenállás miatt egyes betegségeknéál


koleszterin mérés:
- LDL
- HDL

## EKG
> non invazív szívvizsgáló eljárás mely a szív elektromos jelenségeit vizsgálja a szívizom összehúzódásakor keletkező elektromos feszültség mérésével
- szív elektromos jeleit vizsgálja 
- **az ekg műkédési elve:** a szívben lejátszódó elektromos folyamatok a test felszínén is jól érzékelhetőek 
- három pont egy szabályos háromszögeet ad ki, középpontban a szívvel, ennnek a három pontnak az egymáshoz viszonyítható feszültségéből megmondható az aktuális változások a szívben

EKG görbe: egy szabályos felvételen az öt csúcsot lehet megkülönböztetni:
- `P` -  ingerület a szinusz csomóban (a pitvaron áthaladó elektromos impulzust, a pitvar összehúzódását jelzi)
- `Q` -  az ingerület kezdete a kamrákban, ez az apró negatív csúcs gyakran nem is látható, ha nagyon megnövekszik, az infarktust jelezhet
- `R` -  a legnagyobb csúcs a kamrákon végigterjedő ingerületet mutatja 
- `S` -  ez a negatív csúcs a kamrán végigfutó ingerület végét jelzi

más elemk a diagrammon: 
-  `T` - a kamra repolarizációját mutatja 
-  `U` - a normális görbén nem vagy csak alig látható, kóros állapotokban, például káliumhiány esetén látványos
-  `PQ intervallum` - pitvar - kamrai átvezetést jelent

**normális szívverés:**
-  `P`-hullám
-  `QRS` komplexum
-  `T` hullám

![ekg jel](https://github.com/gabboraron/szenzormodularitasok/blob/main/2011_0001_524_A_belgyogyaszat_alapjai_1.png)![ekg jelmagyarázat](https://m.blog.hu/ba/babosi/image/ecg1.gif)

**használható:** szív és keringési rendszer, terápia, távoli páciensmonitorozás, ambuláns ekg monitorozás, edzés/sportmonitorozás
- cardioblue
- wiwie
- savvy

más: MAP, iWatch, bioharness, quardio

## pacemakerek
> mellkasban vagy hasban műtét során elhelyezett  kis eszközök, ami elektromos impulzusok segítségével képes a szív ingerképző és ingerületvezető feladatait átvenni, kontrollálni
> 
> Aritmia esetén a szív vagy túl lassan (bradikardia), vagy túl gyorsan (tachikardia), vagy szabálytalanul veri a testbe a vért. Pacemaker beültetésével ezek a tünetek eltűnhetnek, a betegek teljes, aktív életet élhetnek.
> 
> *In 2013, multiple firms announced devices that could be inserted via a leg catheter rather than invasive surgery. The devices are roughly the size and shape of a pill, much smaller than the size of a traditional pacemaker. Once implanted, the device's prongs contact the muscle and stabilize heartbeats.* ~ https://en.wikipedia.org/wiki/Artificial_cardiac_pacemaker#Intra-cardial
> 
> **mit csinál?** elektródák detektálják a szív elektromos aktivitását és adatokat gyűjtenek, hogy ha kimarad egy ütem akkor helyettesítsék
> 
> beültetés: 1 óra, kulcscsont alatti területet helyikeg érzéstelenítik

- bradikardia
- öegedés és szívbetegség
- QT

egységei:
- elem
- számítógéppel ellátott generátor
- vezeték + szenzor -> elektróda

## EMG (elektromyography)
- felszíni
- izomból intramuszkuláris

## EOG (elctrooculography)
> szem köré elhelyezett elektrodákkal figyelem, hogy merre néz a páciens

## ECoG/ECG (elektrocorticography
- invazív mérés
- koponyán át fúrt lyukon kereszül néhány mikron csúcsátmérőjű mikrolektroda az agyszövetben
- a kis feszültségű magas frekvenciájú komponensek tisztán elvezethetőek
- jobb a felbontás

## EEG (elektroencephalography)
- elektrofiziológiai mérőeszköz, mely az idegsejtek elektromos aktivitását tudja mérni valós időben. Az EEG-vel elvezethető jel az elektroenkefalogram, amely egy komplex, több komponensű periodikus görbeként írható le.
- g.tec
- emotiv epoc
- mindrove
  - otthoni eeg szenzor, agyi jelek mérése és feldolgozása
  - brain computer interface

jelek:
- alfa ritmus: szemmozgásra blokkolódik
- beta
- gamma

> ### ERP (event related potential
> - eseményfüggő alkalmazás
> - valamely inger hatására kiváltott egyszeri potenciálváltozása EEG jelen 

alkalmazás:
- autonomus projekt
- neurophone
- driveby wire - braindriver
- braintalk (P300-as használatával)

## Alvás
- Fokozódik a sejtosztódás
- Sejtelhalás üteme csökken
- gyerekeknél 9 óra
- felnőtteknél: 7-9 óra

alvás szakaszai:
- 0 - alfa - ébrenlét
- 1 - théta - ébrenlét nyugodt
- 2 - alvási orsók - könnyű alvás
- 3 - lassú, deltahullámok
- 4 - rem szakasz: álmodik - mély alvás

frekvenciák alapján: 
- Ébrenlét, aktív: 20 Hz (15 - 40 Hz) 
- Ébrenlét, nyugodt: 10 Hz (9 - 14 Hz) 
– Könnyű alvás: 3,5 - 7 Hz 
- Mély alvás: 3,5 Hz alatt

**REM és nem-REM szakaszok:**
- elalvás után 70 percel
- aktív EEG
- bénult izmok
- gyors szívverés, légzés
- gyors anyagcsere
- paradox alvás

**fázisok sorrendje kötöttt:**
-  Non-RapidEye-Movement (NREM)
-  Rapid-Eye-Movement (REM) 

## Apnoe
- alvásfüggő légzészavar
- légzéskimaradás 

## Alvásmonitorozás:
- összetett komplex paraméter
- mozgásfigyelés
- szív és keringési paraméterek figyelése

> - aktivitás mérők
> - ágykeretbe helyezett monitorok
> - horkolás figyelők
> - stb

- teljesítőképesség, reakcióképesség mind csökken az alváshiánytól
- mikroalvás lehet a nagyon fáradt szint előtt

alvás észlelése:
- végtag mozgás
- szemmozgás
- fejmozgás
- pulzus változás
- légzés változás

kiegészítő szenzorok:
- vezető fejtartását nézni
- anti sleep pilot: folyamatosan számolja a vezető fáradtsági szintjét amit a megadott adatok alapján kiméri

Mercedes attention assist: kormány mozgást néz

Lexus: ccd kamerával oldják meg ami a kormányra van felszerelve 6 db leddel

Saab: a fej és szemmozgást néz, amivel figyelmi zónákat alakít ki, és ha a vezető tekintete nem figyeli az utat akkor jelez

Toyota: a szem nyitottságát nézi

## izzadás érzékelés
- különálló érzékelőkkel
- ruhába építve, intelligens textília,
- jellemzői:
  - életkor
  - nem 
  - lelki állapot, stressz szintje
  - mit evett előtt
  - fáradtsági szint
- biotex

## prezcíziós mezőgazdaság/állatenyésztés
multispektrális képek a mezőgazdaásgról megadja a kukorica stressz szintjét, szárasság stb szintjét
- [RTK](https://en.wikipedia.org/wiki/Real-time_kinematic) használata (https://www.youtube.com/watch?v=pOuYdxBWVyU)
- adatgyűjtés
- összefüggések és előrejelzések
- információ és tartalomszolgáltatás
- növelt hatékonyságú gazdálkodás
- növénytermesztési tudásközpont
- [agrodat projekt](http://agrodat.hu/) (mezőgazdaásgi tudásközpont döntéstámogató rendszer megvalósítása innovatív szenzorrendszerrel)
- talajszenzorok: nedvesség talaj vízszint, jégképződés, aktív fény intenzitása
- környezeti szenzorok, érzékeny csapadékmérő, szélsebesség, szélirány

### metadata kezelés
> - hőmérsékletet mérek a póznán a méréshez kell tudni a mérés idejét, hogy mikor jön be, mikor adja ki az oszlop az adatot, mikor mentette le az adatot, milyen időzónában van a mérőoszlop
> - smart vineyard
>
> **jelenlegi problémák**
> 
> - hatótávolság
> - energiafelhasználás
> - sok modalitás
> - mintavételezési idők problámja -> sok adat
> - adat aggregáció
> - védelem munkagépektől/emberektől, állatoktól/környezeti hatásoktól
> - vizualizációs problémák
> - adattárolás és adat visszakeresés, rövid és hosszútávú trendek, a környezet befolyása alapján előrejelzések késítése
> 
> mivel nagyon sok adat keletkezik, ezért érdemes átlagokat kezelni, hogy ne a nagy adatmennyiséget kelljen kezelni

## [fruition sciences](https://fruitionsciences.com/en/home):
- növényi nedv áramlás szenzorral megmondható mikor optimális a szüretelés
- analitika, javaslatok az öntözésről
- szőlészeti műveletek és mérések rögzítése

## szenzorok adattovábítási megoldásai
### vezeték mentes
![spektrumok](https://www.netfizika.hu/sites/default/files/pictures/Feladatok/Szamolos/Elektromagnesseg/Magneses/63/sp.jpg)

#### IEEE 802 csoportok
- IEEE 802.1 Magas szintű LAN protokollok
  - 802.1D – Spanning Tree Protocol
  - 802.1Q – Virtual Local Area Networks (VLAN)
  - 802.1aq - Shortest Path Bridging (SPB)
- IEEE 802.2 Logical link control és Media Access Control
- **IEEE 802.3 Ethernet**
- IEEE 802.4 Token busz (feloszlatva)
- IEEE 802.5 Token Ring (vezérjeles gyűrű)
- IEEE 802.6 Városi hálózatok (feloszlatva)
- IEEE 802.7 Koaxiális kábelt használó alapsávi LAN-ok(feloszlatva)
- IEEE 802.8 Fiber Optic TAG (feloszlatva)
- IEEE 802.9 Integrált LAN szolgáltatások(feloszlatva)
- IEEE 802.10 Együttműködő LAN-ok biztonsága(feloszlatva)
- **IEEE 802.11 Wireless LAN (Wi-Fi zárójelentés)**
- IEEE 802.12 igény prioritások
- IEEE 802.13 (nem használt)
- IEEE 802.14 kábel modemek (feloszlatva)
- IEEE 802.15 Wireless PAN
- IEEE 802.15.1 (Bluetooth zárójelentés)
- IEEE 802.16 Alapsávi vezetéknélkü hozzáférés (WiMAX zárójelentés)
- IEEE 802.16e (Mobil) alapsávi vezeték nélkül hozzáférés
- IEEE 802.17 rugalmas csomag gyűrű
- IEEE 802.18 Rádió szabályozási TAG
- IEEE 802.19 Coexistence TAG
- IEEE 802.20 Mobil alapsávi vezeték nélküli hozzáférés
- IEEE 802.21 Média független kezelés
- IEEE 802.22 Vezeték nélküli regionális hálózatok

a párhuzamos adatküldés nagyban megnövelte a sebességet

> **IEE 802.11**
> - Határok nélküli médiumot használ 
> - A külső jelek ellen védtelen 
> - A közeg jóval kevésbé megbízható mint a vezetett hullámú összeköttetés esetében 
> -  Dinamikus topológia 

![wifisec](https://pbs.twimg.com/media/DF6XjSeXkAAvbUo.jpg)

- csma/ca - az állomás jelentkezik, amire választ kap ahhoz hogy adhasson
- csma/cd - az eszköz érzékeli az ütközést és vár 

*wifi jelenlegi titkosítása 2018 óta WPA3, Simultaneous Authentication of Equals (SAE) kulcscsere protokol a berendezések között* 


#### bluetooth
![bluetoth history](https://miro.medium.com/max/4000/1*_GjhWQieYTUl_2mbTehkJQ.png)

*könnyen hackelhető*

**verziók:** 
- 3.0 -ban a pan hálózatot kinyitotátk egy hálózati hozzáférésre mert beleillesztették a wifi protokolt
- 4.0 -ban low energy protokollt adtak bele
- 4.2 - ben IoT támogatást és IPv6 támogatást és titkosítást kapott
- 5 -ben 4Xtávolság és 8Xsebességre növelte a low energy megoldásokat
- most az 5.3-nál járunk, 243 méteres távolságra szól
  - 1 master 7 eszközt szolgál ki, és több százat alvó állapotban

**basic rate és LE**
- BR: frekvenciamodulálásst használ, 1 tick 302.5 us
- LowEnergy: 1Mb/s

![brle](https://www.researchgate.net/profile/Karen-Scarfone/publication/329972964/figure/tbl2/AS:708926916030464@1546032756454/2-Key-Differences-Between-Bluetooth-BR-EDR-and-LE.png)

![howitworks](https://www.researchgate.net/profile/Ee-May-Fong/publication/259246800/figure/fig5/AS:297112509140993@1447848550198/Bluetooth-communication-between-the-transmitter-and-mobile-devices.png)

#### wibree
- Low-power wireless local area network 
- Hatótávolság 5 - 10 méter 
- Frekvencia: 2.4-GHz (RF) band. 

#### ant/ant+
- fitness eszközökhöz használt.
- https://www.thisisant.com/
- Egy 2032 gombelem: 25uA/év 
- skálázható
- **ANT** egy kommunikációs protokoll 
- **ANT+* egy menedzselt hálózat eszközök között
  -  Üzenet ráta 0.5Hz -> 200Hz (8byte adat)
  -  Max: 65.000 szimultán kapcsola 
  -  1.9V CR2032 elemmel tipikusan 5 év üzemid
- cél piacok: 
  -  Suunto 
  - Garmin 
  - Timex 
  - wahoo 
  - Sony Ericsson(Android) 
  - HTC 
  - Samsung 

![ant](https://www.researchgate.net/profile/Nadeem-Mehmood/publication/285510534/figure/fig1/AS:367752901611520@1464690532770/hArmor-System-Modular-Architecture_Q320.jpg)![ant+](https://lh3.googleusercontent.com/proxy/ZoCFi0-uQOMWuHYv3GADWOMEjuUR6smHNo7HJErJR8O0VyOyBACHgx4S3X7aAz_ucoJFRNtxqIEXsn-Kk0MnpwlX22zflmhCkzmtQs90Bu3xfChtIQnC_AYzHwnA)

#### zigbee
>  http://www.zigbee.org/
> - okosházakban használt technológia
> - Mindenhol használható frekvenciák 2.4 GHz
> - WPAN –Wireless Personal Area Networ 
> - falon/vizen nehezen megy át
- 100m - ig
- 250kbps
- ism sávon: nem kell hozzá külön frekvenciengedély hogy használjuk.

> **ZigBee hálózat:** két féle csomópont van:
> - Központi egység
>   - Folyamatos tápellátás, elegendő számítási kapacitás
>   - Hálózat beacon üzeneteinek küldése, a hálózat felállítása, az egyszerű csomópontok szervezése, a csomópontok paramétereinek tárolása, a párosított csomópontok üzeneteinek továbbítása
> - Egyszerű csomópont
>   -  csak a központi egységgel tudnak közvetlenül kommunikálni
>   -  Véges tápellátás 
>   -  Folyamatosan keresik az elérhető hálózatokat 
>   -  Adatküldés csak ha szükséges  
>
> Útvonalkeresés *broadcast* üzenettel. MAC szintű titkosítás.

##### Zigbee 3.0
> Megbízható, robosztus, kis energia fogyasztás,skálázható,biztonságos, globális (2.4GHz) , 130+ eszköz definíció /2016/
> 
> **Biztonsági rések**
> - Azonosítás kezdeményezés, 
> - factory reset
> - kommunikációs csatorna állítás
> - 100 m-ről lámpa kapcsolgatás

#### 802.11.ah
- 1 km
- 40 mbps

#### nfc
-10 cm
424 kbps

#### long range uhf
- még minidg ism
- Kb.: 10 km hatótávolság
- extrém esetben yagi antennákkal akár 160 km-is elérhető.
- frekvenciasáv: 433 MHz
- nagy hatótávolságú dronvezérléshez alklamas lehet
- Frekvencia ugrás, áthatol fákon és tárgyakon 
- Előszeretettel használják RC berendezésekben 

#### dash7 
- félkatonai felhasználása van
- alacsony a fogyasztása
- kb 1km a távolság
- civil: CO2 figyelés
- jól megy át vizen

#### UWB
- vezeték nélküli továbbítás
- szabványosítás és engedélyeztetés alatt áll
- 400-600Mbit/s és feljebb
- alacsony fogyasztású
- rövid ideig ad, viszont nagy órajelen
- felhasználás: egészségügy, helymeghatározás, behatolás védelem, ütközés elkerülés

![UWB spektrum](https://d6qq37vs6ar1f.cloudfront.net/wp-content/uploads/2017/05/eliko_joonis_05-02-900x525.jpg)

### Antennafajták
- chip antennák
- porcelán
- vezeték (meg van határozva, hogy hány centi lehet a kábel
- trace antennák: nyák megmarva, amihhez az isp32 chippen van az antenna

**külső antennák:**
- u.FL: kis konektor, ha kivezetnénk akkor hasznos
- RPSA: nagyobb

### LPWAN technológiák
Nagy távolságra küld adatokat, kis energiával. tipikusan csillag topogóliában aaz adótól vedő jelet egy fogadó az interneten adja tovább.
- LoRa/LoRaWAN
- SIGFOX
- NB-IoT
- LTE-M
- EC-GSM-IoT
- RPMA
- Weightless

### LoRa
> #### Chirp
> - up chirp: alacsony frekvenciáról amagasra megyek T idő alatt
> - down chirp: magasról megyek alacsonyra T idő alatt.
>
> - maga frekvencia adja az adatot, ezért nem fontos, a zajterhelés
> - fontos hogy kontinesenként változik az engedélyezett és használt frekvenciasáv!
>
> ![lra network](https://miro.medium.com/max/810/1*mJo0_GbLTqKr6R0oxV2DTg.png)
>
> kb 5-6 km a hatótávolság ait egy bázisállomás le tud fedni
> 
> lehetséges végberendezés: 1 tébla üzenete 1 bájt, 

- gyenge megbízhatóság, nincs grancia késleltetésre
- kis adatok gyorsan mennek át

### Sigfox
- 50 km körüli cellaméret, 
- 600bit/s - 100bit/s
- néhány ibtes rendszer

lefedettség: https://www.sigfox.com/en/coverage

![lora vs sigfox cover](https://www.libelium.com/wp-content/uploads/2018/10/lorawan_coverage_map3.png)

### NB IoT
Frekvenciákat vesz meg az operátor maiket bázisállomásokhoz rendel, és azon képes kommunikálni.

**Az 5G kompatibilis az NB IoT rendszerrel**

## vezetékes kommunikáció:
- homeplug - 100 m
- Ghm
- LonWorks - 1.5 km
- PCLPRIME - 100 km

soros kommunikációs:
- RS232 szabvány, DB-9 konnekor
- `/dev/ttyS*`
- `COMx`
- USB-re konvertálható, puferelt komunikációval, ami miatt széteshet a kapcsolat.

## USB
![usb history](https://resource01-proxy.ulifestyle.com.hk/res/v3/image/content/2280000/2280606/20190226-USB-32_1_1024.jpg)
![usb colors](https://www.storagereview.com/wp-content/uploads/2020/04/StorageReview-04-USB-Color-Convention.png) 
![usb covering](https://i.pinimg.com/originals/a8/a6/f4/a8a6f4a3b8846fffb0628c92dc7a4f5d.jpg)
![power](https://filestore.community.support.microsoft.com/api/images/d5c21b02-2386-4274-abba-1d4fdfd8e35c?upload=true)

**otg**: olyan megoldás ahol mindkét fél kliens és nem master slave alapú, mint egyébként az usb.

> ### USB hub:
> - akármennyi eszköz csatlkaozhat rá és egy másk hub is.
> - min 0.5 watt max 2,5 watt leadásra képes.
>
> ![hub piramis](https://www.keil.com/pack/doc/mw/USB/html/tiernetwork.png)
>
> - aktív hub:   saját táp kábellel
> - passzív hub: egyenlően osztja szét az áramot a kliensek között, 500mA
>
> Lassú bemeneti jelet is gyorsnak veheti ha a maellé betett eszköz gyorsabban ad jelet. EKkkor viszont a lassúból a jelet ismételni kezdi. Tipikus probléma billentyűzet-egér kapcsán.
 
### USB kapcsolat
- hosszabítót nem illik használni


### eszköz csoportok
- kompozit:
  -  több interfész, melyek egfymástól függetlenül vezérelhetőek
  - minden interfészhez külön driver
- compound szköz: egyetlen driver, több funkcionalitás, pl egér+billentyűzet

![packet típusok](https://www.usbmadesimple.co.uk/ums_g_setup.gif)

## textil alapú vezetékek *(textile wire, conductive textile)*
- Olyan textil, olyan fonal ami vezeti az áramot.
- teljes áramkörök, kapcsolók és ledek is ráköthetőek

![kábel](https://ars.els-cdn.com/content/image/3-s2.0-B9780081022283000116-f11-14-9780081022283.jpg) ![arduino](https://i.pinimg.com/originals/64/cd/85/64cd855ab25ae30c9146ec664eed1c3b.jpg)

- gyártása: valamilyen vezető anyagba tesznek fonalat, vagy fonalat áztatnak vezető anyagba.
- a hajlítások sajnos csak egy ideig képesek működni így.
- hátrányai:
  - szigetelési probléma, ezek szigeteletlen fonalok
  - nehéz javíthatóság és moshatóság
- felhasználás:  
  - hadiipar: vadászgépek takarása
  - tűzoltók/vegyvédelmisek PPE ruhái
  - szenzorokkal: hőmérséklet, páratartalom, ekg, stb
## I2C (inter IC)
> vezetékes összekapcsolás integrált áramkörök összekapcsolására
- busz alapú, két vezetékkel szinkron átviteli rendszer
- 2006-óta nem fizetős, de a cím bejegyzése az.
- sok modul támogatja, master és sok slave rendszerben.
  - a master adja az órajelet
  - master és slave szerep felcserélhető
  - felhúzó elllenállással


## Fogalmak
> - szenzor -  Érzékelő ami valamilyen fizikai/kémiai mennyiséget, vagy annak változását méri. 
> - IoT - internet of things, okosház, okosautó, precíziós gazdálkodás, stb
> - telemedicina - távmonitorozás vagy távdiagnosztizálása a betegnek
> - ICT - information and communication tech
> - távmonitorozás - pl koloszterin mérő, pacemaker, ekg, eeg, stb vagy talajnedvesség, időjárás, stb
> - WAN - Wide Area Network (10-100km) országos
> - MAN - Metropolitan Area Network (5-10km) városi
> - PAN - Personal Area Network (2-5m) bluetooth, automata beléptetés, stb
> - WPAN - 802.15 – Wireless Personal Area
> - szisztolé - a vérnyomás magasabb érétéke, túl magas értéke magyavérnyomásra utal, a szívizom öszehúzódásból ered
> - diasztolé - a vérnyomás alacsonyabb érétéke, magas értéke az erek rugalmatlanságát jelzik
> - variabilitás -  a szív miként képes a belső és külső környezet megváltozott terheléseire a szívveréstől szívverésig eltelt időtartamot folyamatosan megváltoztatni 
> - fehér
> - hipertónia - magas vérnyomás
> - auszkultáció -  Korotkov hangok detektálásán alapul; **Hátrány:** egyetlen pillanatnyi érték, mandzsetta befolyásol, leeresztési sebesség befolyásol, szubjektív a hallhatóság 
> - Korotkov -  Az először hallható erős koppanó hang (Korotkov 1-es hang) a szisztolés vérnyomás megjelenését mutatja, a hang teljes megszűnése (Korotkov 5-ös hang) a diasztolés vérnyomást jelzi
> - mandzsetta - vérnyomásmérő 
> - Oszcillometriás módszer - Automata vérnyomásmérők; Az artéria pulzálása megjelenik a felkarra helyezett mandzsetta nyomásában; A pulzálás maximális:artériás középnyomással (MAP) ebből származtatott A szisztolés és diasztolés érték; Hátrány: a szorzók pontatlanok, öregedés→artériák rugalmatlanok 
> - artériás -  főütőeren átmenő
> - Tonometria - Legpontosabb nem invazív mérési módszer – Mechanikai tapintófejjel rögzítésre kerül a csuklóartéria pulzálása (folytonos nyomásgörbe) – Hátrány: költséges megoldás
> - PPG-alapú -  A fotopletizmográf (PPG) a hajszálerek térfogat változását regisztrálja (pl:a bal kéz egyik ujjbegyén), plusz mandzsettával mérik + EKG görbe – Hátrány: bonyolult, sok nehezen követhető változó
> - glükóz - szőlőcukor 
> - Inzulin - Az inzulin serkenti a máj glikogénraktározását és a sejtek glükózfelvételét, ily módon csökkenti a vércukorszintet
> - Inzulinreceptor - érzékeli a az inzulint aminek hatására glükóz áramlik be a sejtekbe
> - Inzulinrezisztencia - a sejtek idővel ellenállnak az inzulin sejthártya nyitogató kísérleteinek
> - Diabetes 1 - Inzulin adás szükséges (rendszeres) – A hasnyálmirigy inzulint termelő béta-sejtjeinek pusztulása következtében nincs elegendő inzulintermelés 
> - Diabetes 2 - Lépcsőzetes kezelés – Életmódváltoztatás→ testsúlycsökkentés – tablettás antidiabetikus gyógyszerek 
> - Tesztcsík - Tesztcsík (többnyire külön az egyes mérési paraméterekre) – színelváltozások egyértelmű és minél pontosabb leolvasása
> - Lándzsa (vért veszünk szúrással)
> - Fonendoszkóp - sztetoszkóp, nyakbakasztós doktorbácsis hallgatózó
> - Elektrokardiográf - [EKG](https://github.com/gabboraron/szenzormodularitasok#ekg)
> - Einthoven-háromszöget - az ekg mérés alapja, nevét feltalálólájórl kapta
> - depolarizáció - elektromos kisülés a szívben
> - repolarizáció - elektromos újratöltődés a szívben
> - Kilégzési csúcsáramlás mérő  - Lényegében azt méri, hogy egy kilégzés alkalmával milyen gyorsan jut ki a levegő a tüdőből. A leolvasott érték az ún. kilégzési csúcsáramlás értéke (peak expiratory flow, PEF), egysége l/perc
> - Vérgázanalízis - artériás vér pH, CO2, stb értékei
> - Oxigénszaturáció - a hemoglobin oxigénnel való telítettségének mértéke százalékban. Pulzoximéterrel mérhető
> - SAO2 - oxygen saturation as measured by blood analysis
> - Spirométer - A tüdő levegőbefogadó képességének mérésére való eszköz 
> - Testzsírmérés - hány kg
> - AUV - autonomous underwater vehicle
> - ROV - Remotely operated underwater vehicle
> - Koleszterin - LD/HDL
> - LDL - low density lipoprotein
> - HDL - high density lipoprotein
> - VLDL - very-low-density lipoprotein.
> - laktát - a tejsav ionos (elektromosan töltött) formája, magas energitartalommmal
> - hemoglobin - vörösvértest
> - triglicerid -  a táplálkozás során felvett zsírok legfőbb alkotóelemei, illetve a szervezet zsírraktárai is főként ezekből épülnek fel
> - Antropometria - az emberi test leírható és mérhető jellegeinek rendszerezésével és egybevetésével foglalkozik
> - NRZ - USB-n használt non-return-to-zero kódolás
> - AES -  MAC szintű titkosítás, zigbeenél
> - ULP -  ultra alacsony fogyasztás → évekig működik 
> - UWB - alacsony fogyasztású Ultra szélessáv 
> - PCB - antenna, vezető útvonalakkal van felépítve a nyákon/ban
> - u.FL - egy kis konnektor, hasznos, ha ki szeretném vinni műszerházon kívülre az antennát
> - RPSMA - nagyobb antenna csatlakozó
> - vivőjel nélküli kommunikáció - 
> - pervasive 
> - mesh hálózat
> - SKKE - Biztonságos: Symmetric-Key Key Exchange
> - ISM - nem kell engedély hozzá
> - ad-hoc - központi vezérlés nélküli,  Wi-Fi hálózatok, amelyek általában ideiglenes jelleggel jönnek létre.
> - hullámhossz - az a távolság, amekkora távolságonként a hullám ismétlődik
> - pH - savasság, bázikusság mértékegység

## Arduino
- nyílt hardver
- c++, processing, java
- az alap alaaplapra shieldeket lehet tenni
  - TFT
  - audio
  - gsm
  - wifi
  - stb
- atmel mikrovezérlővel működik alapvetően, de azért más is előfordul: https://www.arduino.cc/
- egy lebutított programozói feületet ad amivel sok mindent lehet csinálni, és mivel egy hardverhez már könnyen lehet kész API így az könnyen használható, szemben a Texas STM32-es rendszerekkel
- legelterjedtebb az arduino uno, és arduino nano
- [*pin out*](https://www.google.com/search?sxsrf=ALeKk01WQs3_ikVUubfXsZXTRREZhV9e3g:1617797162800&source=univ&tbm=isch&q=arduino+pinout&sa=X&ved=2ahUKEwia59OJjOzvAhVQ6aQKHSTMAoAQjJkEegQIBhAB&biw=927&bih=970#imgrc=ZwVoFnEq8OqP0M) diagrammon van, hogy melyik lábra mi köthető. ![arduio pin out](https://images.prismic.io/circuito/8e3a980f0f964cc539b4cbbba2654bb660db6f52_arduino-uno-pinout-diagram.png?auto=compress,format) 
- `Tools\Board\` menüben ki kell választani melyik alaplapra fordítsa a bináris kódot

**A program részei:**
- globális változók megadása
- `setup(){}` függvény egyszer fut le
- `loop(){}` végtelenszer fut, ez maga a főprogram

**Analóg és digitális jelek:**
- 14 digitális ki/bemenet
  - `digitalWrite(láb, érték)` ahol `érték` az `0` vagy `1`
  - `digitalRead(láb)`
- 6 analóg láb bemenet, 0-123-ig 10 bites szám arról, hogy az adott pinen milyen áramerősséget mért: `analogRead(láb)`
  - analóg kimeneten `analogWrite(láb, érték)` formában 0-255 közötti számmal oldjuk meg.

szimulátor: https://www.tinkercad.com
költségtervező szimulátor: https://www.circuito.io/

lednél hoszú láb a pozitív

# Adatáramlás - DAQ
- végberendezés
  - adatgyűjtő 
  Vagy nagy fokon integrált rendszerek vagy nagy méreteket öltene, a hűtés, stb okán
  - nyers adatokat használ
  - adat töredékek kinyerhetőek
- köztes réted
  - Itt tároljuk a feldolgozott adatokat.


> Az állapotváltozásokból trenek alakíthatóak ki.
 
**Problémák:**
- sok adat, sok a redundáns adat is
- hibás és téves adatok
- nyílvánvaló adatok feldolgozása egyszerű, és a több szenzorjel közötti korreláció az érdekes
- az adat kereshető és nem túl redundáns tárolási módja
  statisztikák szerint: 
  - az adatok 78%-a felesleges
  - 22%-a dokumentált
  - 5%-a elemzett

A mintavételi frekvencia a maximális frekvenciától függ.

adatszűrés:
- zaj levétele
- jelek elkülönítése egymástól
- jel redundancia csökkentése
- adatforrás alapján:
  - szövegfájlból dolgozó
  - adatbázisbló dolgozó
  - bináris fájlból dolgozó
- hibareakció szerint:
  - hiba esetén leálló szűrő
  - automatikus javítást megkísérlő szűrő
  - hibás adatot eldobó/kihagyó
- optimizmus szerint:
  - pozitív szemléletű - adatok túlnyomórészt jók
  - negatív szemléletű - alapvetően azt mondják, hogy már hibás az érték, redundancia kell a rendszerbe, hogy csökkentsük a hibás méréseket
- jel karakterisztika szerint:
  - felületáteresztő: vágási pont *alatti*  értékektet kiszűri
  - aluláteresztő:  vágási pont *feletti* értékektet kiszűri
  - sáváteresztő: egy tartományon belüli értékeket neged át
  - lyukszűrő: egy sávban levő értétkeket *nem* enged át

> ## Adaptív szűrés folyamata:
> 
> - beérkező adatok összetettek
> - adaptáció = alkalmazkodás
> - szűrési paraméterek/tulajdonságok báltoztatásával a keletkező szűrtadat lényeges/fontos információkat nagyobb arányban tartlamazza
> 
> ## Előfeldolgozás:
> - simitás: ablakozunk, valamilyne ablak mérettel átlagokat hozunk, az adat mennyisége áltozatlan
> - aggregálás: sok adatból egy adatokt csinálunk, valhogy átlagolunk pl
> - küszöbözés: a lentésre fókuszálunk, nem az értékre, szinteket határozunk meg, amiket ha átlép az érték figyelembe vesszük
> - idősor analízis: a m.érés idejét és a mérést öszevetve használhatunk statisztikai eljárásokat, teát ha egy folytonos sorból kiveszünk valamilyen minta szerint adatokat akkor abból lehet valamilyen idő függvéányében jelezhető értéket megmondani
> 
> **független és összefüggő adatok:**
> - beteg közérzete mellé időjárás/hold ciklus/stb hozzárendelése
> 
> **döntéselmélet:**
> - adatok feldolgozása után döntési kényszerbe kerülhetünk, *pl: a páciens nem mozog x órája*
> - döntési szituációban , döntést ajánljon amely a legnagoybb várható hasznoságot biztosítja.
> - riaasztási események generálása egy döntési esemény alapján
> *pl: MTBF a hard diskeknél, mikor a hard disk részeinek elromálása közti időt adjuk meg*
> - **Dscriptive anlytics**: mi történt, és mia a vlasége, hogy újra leőfordul? *pl eltört a lábam, és mivel megoldható*
> - **diagnostic analytics**: miért történt az adott esemény? Mivel kiküszöbölhető? *pl: azért tört el a lábom, mert a csontritkulásom xy állapotban*
> - **predictive analytics**: mi fog történni? Mennyi ideje van a berendezésnelk az első elromlástól vagy az első elromlásig? *pl: egy központi adatgyűjtő szólna, napokkal előre, hogy lecsökkent a kalcium szint és igyunk pl tejet, hogy rndbejöjjünk.*
> 
> ![pragmatica](https://pragmaticarchitect.files.wordpress.com/2016/01/conversionrate_example_01.png)

# IoT rendszerek infrastruktúrája
- building management
- energy
- enviroment
- famring/precision aggrivulture

https://www.youtube.com/watch?v=_AlcRoqS65E

![iot stack](https://i.pinimg.com/originals/f8/bf/00/f8bf004cf42577b7fcdfe0c3de0daf87.png)

![iot edge functions](https://pbs.twimg.com/media/DguBB-FX0AAyY0H.jpg)

**Táv medicína:**
- [Microsoft HealthVault](https://www.microsoft.com/en-us/industry/health/microsoft-cloud-for-healthcare?rtc=1) betegek, orvosok közötti interakció, fejlődő országokban több helyen bevezetve, az otthoni egészségügyi eszközök gyártóit is bevonták, így egyból akár az eszközről feljuthat az információ a rendszerbe
- https://yourlifeyourdata.com/ 
- https://doktor24.hu/
- Adatgyűjtésre Google Health indult, ahol a beteg beadta milyen adatai vannak és azzal BigData elemzéseket lehet végrehajtani, meg lehet osztani a flehasználók (orvos-beteg) között.
- Lydia

Fájl típusúk összehasonlítása: ![fily types](https://ni.scene7.com/is/image/ni/Compare_Table_20090626160253?scl=1)

Struktúrált bináris fájl: [TDMS](https://www.wiresmithtech.com/articles/what-is-a-tdms-file/)

IoT menegment tool: https://thingsboard.io/

szenzor menedszment: https://temboo.com

- free szerver agent: https://www.oetiker.ch/en/oss/projects/ ; http://oss.oetiker.ch/mrtg/download.en.html ; 
- más megoldások: Temboo, Xively, 

## Hol tároljuk az adatot?
Végberendezésnél: 
- gyorsan hozzáférhető
- nyers adat
- adattöredékek
- sokszr lokális

központi:
- hozzáférhető
- teljes adatstrukktúra
- feldolgozott adat

adatküldési problémák:
- sebesség
- adat méret

Adattárolás:
- adat tömörítés
  - veszteséges 
  - veszteségmentes
  - bináris
- redukció
  - redundancia meghatározása
  - redundancia csökkentése
    - időbéylegek törlése
  - mennyiség csökkentése
    - x idő után elévülés
  - többszintű adattárolás:
    - lassabb - nagyobb
    - gyorsabb - kisebb
  - adatok titkosságának garantálása  

## rendszer távfelügyleet lépései
- SNMP
  - Az SNMP a Simple Network Management Protocol, azaz az egyszerű hálózat menedzsment protokoll rövidítése. A TCP/IP család része, az IETF hozta létre. Hálózatra kötött eszközök vezérlését, adatainak lekérdezését szolgálja.
  - *pl:*
    - *Nagios: alkalmas aktív hálózati eszközök, illetve szerverek monitorozására.* 
    - *HP OpenView: drága, már nem önlló termék.*
    - *Jopr: Vállalati szoftver menedzsment megoldás JBoss rendszerekhez.*
    - *RHQ: felxibilis plug-in rendszerű menedzsment szolgáltatás.*
- MIB-ek
  - Az SNMP protokollt kifejezetten bővíthetőre tervezték. Ezt a MIB-ek (management information base) segítségével érik el. 
  - Egy MIB bizonyos eszközök által használt speciális tulajdonságokat ír le.
  - Az egyes tulajdonságokat hierarchikus rendben elhelyezett objektumok reprezentálják. 
  - Az objektumoknak a hierarchiában való elhelyezkedése biztosít egyedi azonosítót. 
 

# fogalmak2
1.	CRC - checksum https://en.wikipedia.org/wiki/Cyclic_redundancy_check 
2.	CSMA/CD - az eszköz érzékeli az ütközést és vár; adás közben esetlegesen bekövetkező ütközést érzékeli és abbahagyja az adást. Régi ethernet protokoll.
3.	CSMA/CA - az állomás jelentkezik, amire választ kap ahhoz hogy adhasson; a vivőt érzékelve a saját forgalomtovábbításának megkezdését véletlenszerű idővel eltolja. Ez akkor lehet hasznos, ha feltételezhetjük, hogy a közeg kiürülésére több csomópont is várakozik. Ma is használta WIFI LAN-on
4.	M2M - A Machine-to-Machine ([M2M](https://www.youtube.com/watch?v=pPIC7gJIW8I&list=PLmpB0PK0w9EBDDJyyROgrSgy1XyitJfJd&index=2)) technológia olyan adatáramlást jelent, mely emberi közreműködés nélkül, gépek között zajlik. A kommunikáció minden olyan gép között létrejöhet, amely a megfelelő technológiával van ellátva ahhoz, hogy bekapcsolható legyen a rendszerbe. Mivel hatalmas adatmennyiséget kell a folyamat során értelmezni és tárolni, az M2M olyan fejlődő technológiákra támaszkodik, mint a felhőalapú számítástechnika vagy a Big Data elemzés. Alkalmazható: Gépek távfelügyelete, Aktuális állapot figyelése, Automatizálás és folyamat optimalizálás, Kritikus helyzetek észlelése. https://www.telekom.hu/uzleti/szolgaltatasok/egyeb-szolgaltatasok/m2m 
5.	WEP - elavult wifi titkosítási módszer https://en.wikipedia.org/wiki/Wired_Equivalent_Privacy
6.	WPA - 2004-ig használt wifi security protokol: https://en.wikipedia.org/wiki/Wi-Fi_Protected_Access
7.	WPA2 - 2004-2018 között érvényes wifi security protokol. https://en.wikipedia.org/wiki/Wi-Fi_Protected_Access#WPA2
8.	WiFi - mikrohullámú vezeték nélküli hálózati átvitel https://hu.wikipedia.org/wiki/Wi-Fi
9.	MAC - a network interface controller saját egyedi azonosítója https://en.wikipedia.org/wiki/MAC_address
10.	Access Point - hálózat hozzáférési pont, wifi vagy lan pl
11.	vivő érzékelés - Figyeljük a vivő médiumot (carrier), hogy szabad-e, mielőtt adatot küldünk CSMA-CSMA/CD-CSMA/CA következik belőle https://people.inf.elte.hu/lukovszki/Courses/09NWI/nwI07s4.pdf
12.	pozitív nyugta - Minden egyes elküldött csomaghoz tartozó ACK visszajelzése a teljes csomag átküldéséről, ilyen van a TCP protokollnál is https://hu.wikipedia.org/wiki/Transmission_Control_Protocol#Nyugt%C3%A1z%C3%A1s
13.	DOS támadás - túlterheléses támadás amit nem ugyanaz mint amit Marika néni intéz a vakcináztatási időpontra jelentkezéskor https://en.wikipedia.org/wiki/Denial-of-service_attack
14.	SSID - wifi hálózat azonosítója, ""neve""
15.	MAC cím szűrés - csak előre betáplált hálózati azonosítóval rendelkező gépeket fogad el a hálózatra való jelentkezéskor https://en.wikipedia.org/wiki/MAC_filtering
16.	AES - az ezredfordulón elfogadott blokk eltolásos tikosíási módszer, brute force támadással még nem törték fel publikusan, de az ""erőssége"" függ a választott kulcs hosszától https://en.wikipedia.org/wiki/Advanced_Encryption_Standard
17.	BR/EDR - Bluetooth Basic Rate/Enhanced Data Rate - designed for low power operation and also leverages a robust Adaptive Frequency Hopping approach, transmitting data over 79 channels
18.	BLE - bluetooth low energy, kis adatok átküldésére, kis energiafogyasztás mellett, de sok lehetőséggel https://github.com/gabboraron/szenzormodularitasok#bluetooth
19.	FDMA - sávszél megosztás, tipikusan pl kábelTV szolgáltatásnál; [FDMA is the process of dividing one channel or bandwidth into multiple individual bands, each for use by a single user. Each individual band or channel is wide enough to accommodate the signal spectra of the transmissions to be propagated. The data to be transmitted is modulated on to each subcarrier, and all of them are linearly mixed together.](https://www.electronicdesign.com/technologies/communications/article/21802209/electronic-design-fundamentals-of-communications-access-technologies-fdma-tdma-cdma-ofdma-and-sdma)
20.	TDMA - [egy csatornán több felhasználó ugynazzal a frekvenciával de saját üzentet küldhet ](https://en.wikipedia.org/wiki/Time-division_multiple_access#:~:text=Time%2Ddivision%20multiple%20access%20(TDMA,using%20its%20own%20time%20slot.)
21.	Bluetooth energia osztály - a különböző bluetooth technogiák osztályozása, a magasabb értékűnek alacsonyabb a hatótávja. https://hu.wikipedia.org/wiki/Bluetooth
22.	PAN - personal area ntework
23.	HAN - home area network
24.	LAN - local area network
25.	NAN -  near-me network, or a network of devices informally connected by their proximity to one another. An example of this could be a business meeting in which various colleagues are sitting at the same conference table, sharing files to one another’s devices. 
26.	MAN - metropolitan area network
27.	WAN - wide area network - internet
28.	RAN - regional area network. This is a large network like one made by an ISP
29.	[Chirp](https://github.com/gabboraron/szenzormodularitasok#chirp) pulse - 
30.	LTE - Long Term Evolution - It's a standard for 4G wireless transmission data, the fourth generation of mobile network technology 4G LTE networks are the next generation from the existing 3G networks 
31.	5G - több antenna, más szögekben => nagyobb lefedettség; kevesebb használt rész => nagyobb sávszél https://ilearningx.huawei.com/portal/courses/course-v1:HuaweiX+EBGTC00000410+Self-paced/about
32.	LPWAN - low-power wide-area network - llow long-range communications at a low bit rate among things (connected objects), such as sensors operated on a battery. https://en.wikipedia.org/wiki/LPWAN 
33.	ED (End Device) - a mérőoszlop kinn a földön https://www.itwissen.info/Endgeraet-end-device-ED.html
34.	BS (Base Station) -  a radio receiver/transmitter that serves as the hub of the local wireless network, and may also be the gateway between a wired network and the wireless network. It typically consists of a low-power transmitter and wireless router. - https://en.wikipedia.org/wiki/Base_station#:~:text=In%20the%20area%20of%20wireless,power%20transmitter%20and%20wireless%20router.
35.	SIGFOX - [órai anyag](https://github.com/gabboraron/szenzormodularitasok#sigfox); Sigfox is rolling out the first global 0G network to listen to billions of objects broadcasting data, without the need to establish and maintain network connections. This unique approach in the world of wireless connectivity, where there is no signaling overhead, a compact and optimized protocol, and where object share not attached to the network. https://www.sigfox.com/en/what-sigfox/technology
36.	LoRa - low-power wide-area network; based on spread spectrum modulation techniques derived from chirp spread spectrum (CSS) technology
37.	LoRaWAN - LoRaWAN is a cloud-based medium access control (MAC) layer protocol but acts mainly as a network layer protocol for managing communication between LPWAN gateways and end-node devices as a routing protocol, maintained by the LoRa Alliance.
38.	Okos város - dugó elárító mi vezéreltközlekedési rendszer, okos kukák, stb stb stb pl: Szongdo
39.	M2M
40.	H2M - huamn to machine
41.	H2H - human to human
42.	TDMS - [Struktúrált bináris fájl](https://www.wiresmithtech.com/articles/what-is-a-tdms-file/)
43.	JSON - JavaScript Object Notation)
44.	XML  - Extensible Markup Language



 
",1,1,2,0,precision-agriculture,"[arduino, iot, precision-agriculture, telemedicine]",00000
1464,backend,Adalitix,Adalitix,https://github.com/Adalitix/backend,https://api.github.com/repos/Adalitix/backend,Django backend responsible for exposing authentication and data proxy APIs,"{'message': 'Not Found', 'documentation_url': 'https://docs.github.com/rest/repos/contents#get-repository-content'}",1,1,3,5,precision-agriculture,"[django, precision-agriculture]",00000
1465,MapFilter2.0,LeonardoAgricola,N/A,https://github.com/LeonardoAgricola/MapFilter2.0,https://api.github.com/repos/LeonardoAgricola/MapFilter2.0,A simple tool to filter out outliers in high spatial density data to improve maps reliability,"## MAP FILTER 2.0

## Overview

`MapFilter 2.0` is a free software for analyzing and removing inconsistent data in high density agricultural data sets (data from crop monitor, plant sensors, soil sensors). It is a simple software, with a friendly interface, whose objective is to help users to generate maps related to their cropping areas with greater reliability from the optimization of data quality. It performs the spatial filtering of these data through global and local analysis (isotropic and anisotropic) taking into account the neighborhood values. Visualization of data after filtering allows the user to make a quick analysis of the quality of spatial filtering.

## Install

To install the latest version of `MapFilter` download it from [link]( https://github.com/LeonardoAgricola/MapFilter2.0/releases/download/2.0/MapFilter.2.1.exe) and run the file:
```
MapFilter.2.1.exe
```
## Tutorial

[English version](Tutorial/Tutorial_en.md)        
[Versão em Português](Tutorial/Tutorial_pt.md)

[Video](https://www.youtube.com/watch?v=7eFH_dt4OMw&t=23s) is also available on the YouTube channel of the [Laboratório de Agricultura de Precisão (ESALQ/USP)](https://www.youtube.com/channel/UCl6Lstj-l_1P8FHrpXKyAqA).

## Citation

Maldaner, L. F., Molin, J. P., & Spekken, M. (2021). Methodology to filter out outliers in high spatial density data to improve maps reliability. *Scientia Agricola*, 79.  [https://doi.org/10.1590/1678-992X-2020-0178](https://www.scielo.br/j/sa/a/7HzMhcvDpFMJx6pTGrSQLBw/?lang=en) 

## Contact information 
[Leonardo Felipe Maldaner](mailto:maldanerlf@hotmail.com)    
Agricultural Engineer - UFGD    
PhD student in Agricultural Systems Engineering - ESALQ USP    

[Dr. José Paulo Molin](mailto:jpmolin@usp.br)  
Associate Professor III at the University of São Paulo  
Coordinator of the Precision Agriculture Laboratory - LAP        
  
Av. Pádua Dias, 11 – 13418-900 – Piracicaba - SP    
Biosystems Engineering Department, USP/ESALQ    
",1,1,1,0,precision-agriculture,"[agricultural-farms, java-application, mapping, precision-agriculture, spatial-data-analysis, user-interface]",00000
1466,s-farms,Flexsidee,N/A,https://github.com/Flexsidee/s-farms,https://api.github.com/repos/Flexsidee/s-farms,Smart Farm Management System using Iot,"# S-Farms
**Smart Farm Management System using Iot**

**Architecural Design of the system is displayed in the image below**
![CALEB 14 BY 24](https://user-images.githubusercontent.com/48515473/204706840-fd139ab2-60e6-43a4-ad0f-69afb1fb9c3b.jpg)

**Hardware Requirements**
1. ESP8266 NodeMCU
2. PIR Motion Sensor
3. Soil Moisture Sensor
4. DHT11 sensor
5. Relay Module
6. Water Pump
7. Buzzer
8. Led 
9. BreadBoard
10. Jumper wires
11. USB cable

**Software Requirements**
1. Arduino IDE
2. Xampp / Wamp / Lamp.
3. Text Editors like VsCode, Atom, etc.


**Instruction on How to Use**
- Step 1: Follow the architecural design in the image above to connect all hardware materials together.
- Step 2: Connect the the microcontroller with the USB cable to microcontroller, and upload the code in the Harware folder of this repository
  1)Select the Port you are connected to
  2)Select the board which is ""Generic ESP8266 Module""
  3)Download ""DHT library""
  After doing all this then you can proceed to upload the code to the microcontroller
- Step 3: After installing Xampp, navigate to ""C:\xampp\htdocs"" (note that it can be different depending on your drive), upload the folders ""Frontend and Hardware""
- Step 4: Go to your browser and go to the url ""http://localhost/phpmyadmin"", create a database called ""sfms"" and import the file in the database folder
- Step 5: After doing all above, you can proceed to view the project on ""http://localhost"", select the folder and you will see the output
You should see something like this 

![image](https://user-images.githubusercontent.com/48515473/204709007-21f42d8d-fbb9-4b4b-9975-a2b1b5df8027.png)


**Names of Contributors**
1. Dr Emmanuel Ajulo
2. Mr Olaoye, O.J
3. Mr Oloko
4. Somade Daniel Oluwaseunfunmi
5. Falola Olamide
6. Nifemi Odukoya
7. Daniel Abati
8. Soyemi Zainab
9. Precious Nwaeze
10. Jide-Aremo Obamisilekunayo
",1,1,1,0,precision-agriculture,"[arudino-ide, chartjs, datatable, dht11, html-css-javascript, jquery, mysql-database, nodemcu-esp8266, php, pir-sensor, precision-agriculture, security-automation, smart-irrigation-control, soil-moisture-sensor]",00000
1467,farmsense,christad92,N/A,N/A,https://api.github.com/repos/christad92/farmsense,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1AB:7AEF:2DB14D1:5D6F30A:65224077.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,precision-agriculture,"[N, /, A]",00000
1468,PGIA7336,ddefb,N/A,https://github.com/ddefb/PGIA7336,https://api.github.com/repos/ddefb/PGIA7336,PGIA7336 Course - Discrete Event System - Supervisory Control Theory with the Heptagon/BZR compiler.,"## PGIA7336

<a href=""http://ufrpe.br/"" target=""_blank"">Federal Rural University of Pernambuco</a><br/>
<a href=""http://www.ppgia.ufrpe.br/"" target=""_blank"">Master's Degree Programme in Applied Informatics</a><br/>
<a href=""https://goo.gl/nrmWac"" target=""_blank"">PGIA7336 Course - Discrete Event System - 2018.2</a><br/>
<a href=""https://jualabs.wordpress.com/"" target=""_blank"">Computational Infrastructure Research Laboratory</a><br/>

## Support

Reach out to me at one of the following places!

- Twitter at <a href=""https://twitter.com/ddefb"" target=""_blank"">`@ddefb`</a>

## License

[![License](http://img.shields.io/:license-mit-blue.svg?style=flat-square)](http://badges.mit-license.org)

- **[MIT license](http://opensource.org/licenses/mit-license.php)**
- Copyright 2018 © <a href=""http://ddefb.me/"" target=""_blank"">Diego Bezerra</a>.
",1,1,1,0,precision-agriculture,"[control-systems, discrete-event-systems, heptagon, heptagon-bzr, iot-application, precision-agriculture, sigali]",00000
1469,AustralFalcon_grapes,eddyerach,N/A,https://github.com/eddyerach/AustralFalcon_grapes,https://api.github.com/repos/eddyerach/AustralFalcon_grapes,Austral Falcon Deep Learning repository,"{'message': 'Not Found', 'documentation_url': 'https://docs.github.com/rest/repos/contents#get-repository-content'}",1,1,1,0,precision-agriculture,"[artificial-intelligence, computer-vision, deep-learning, deepsort, detectron2, instance-segmentation, mask-rcnn, precision-agriculture]",00000
1470,OpenVRT,luizguilhermefr,N/A,https://github.com/luizguilhermefr/OpenVRT,https://api.github.com/repos/luizguilhermefr/OpenVRT,Variable Rate Technology using Android 🌾,"# OpenVRT Android

OpenVRT is an open-source protocol for [Variable Rate Technology](https://en.wikipedia.org/wiki/Variable_Rate_Technology).

It consists of an embedded system like [Arduino](https://github.com/luizguilhermefr/OpenVRT-Firmware), controlled by a master like this App, controlling the input flow rate on the machine.

The App must be fed with a GeoJSON *prescription map*, that will have the application grid for the tillage.

- [Watch the video](https://www.youtube.com/watch?v=W3I2XYizy-U)

## Related Projects

- [OpenVRT Visualizer](https://github.com/luizguilhermefr/OpenVRT-Visualizer) - A software that allow you to inspect the prescription maps directly from computer.
- [OpenVRT Firmware](https://github.com/luizguilhermefr/OpenVRT-Firmware) - A firmware example, using a treadmill to simulate the actuator and a potentiometer to simulate the offset speed.

## Credits

This project is derived from a Computer Science *BSc thesis* from UNIOESTE - Universidade Estadual do Oeste do Paraná, with the guidance of Professor Dr. Marcio Seiji Oyamada.

*Soon, you'll be able to read the thesis (pt-BR)...*

App icon by [Icons8](ic8.link/18049).
",1,1,2,0,precision-agriculture,"[android, geospatial, precision-agriculture]",00000
1471,precision_oncology_variant_resources_manuscript,seandavi,N/A,https://github.com/seandavi/precision_oncology_variant_resources_manuscript,https://api.github.com/repos/seandavi/precision_oncology_variant_resources_manuscript,Files for manuscript Resources for Interpreting Variants in Precision Genomic Oncology Applications,"{'message': 'Not Found', 'documentation_url': 'https://docs.github.com/rest/repos/contents#get-repository-content'}",1,1,2,0,precision-agriculture,"[databases, genomics, latex, precision-agriculture, precision-medicine, variants]",00000
1472,Cleaner-Map-Yield,Carlitosh,N/A,https://github.com/Carlitosh/Cleaner-Map-Yield,https://api.github.com/repos/Carlitosh/Cleaner-Map-Yield,"Cleaner Map Yield es un pequeño software para poder realizar limpiezas de datos de mapas de rendimientos. Este esta realizado en Python con la biblioteca Numpy, PyQt , PySal. ","# Cleaner-Map-Yield
Cleaner Map Yield es un pequeño software para poder realizar limpiezas de datos de mapas de rendimientos. Este esta realizado en Python con la biblioteca Numpy, PyQt , PySal. 
",1,1,2,0,precision-agriculture,"[harvest, map, precision-agriculture, python, yield]",00000
1473,lidar-scanner,matiasmicheletto,N/A,N/A,https://api.github.com/repos/matiasmicheletto/lidar-scanner,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C114:3B38:2D85CA:5E4A45:6522409B.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,precision-agriculture,"[N, /, A]",00000
1474,DownyMildew,kumarnaveenb,N/A,https://github.com/kumarnaveenb/DownyMildew,https://api.github.com/repos/kumarnaveenb/DownyMildew,Tensorflow+Downy Mildev+Precision Agriculture,"#Downy Mildew Disease detection
TensorFlow object detection + Downy Mildew Disease detection

1. Install labelImg: pip3 install labelImg
2. Directory structure: Object-Detection->data
					->training
					->images
						->train
						->test

3.change code xml_to_csv.py
def main():
    for directory in ['train','test']:
        image_path = os.path.join(os.getcwd(), 'images/{}'.format(directory))
        xml_df = xml_to_csv(image_path)
        xml_df.to_csv('data/{}_labels.csv'.format(directory), index=None)
        print('Successfully converted xml to csv.')

4. Run python3 xml_to_csv.py

5. Change code in  generate_tfrecord.py
# Add all the classes

def class_text_to_int(row_label):
    if row_label == 'downy':
        return 1
    else:
        return 0
    
6. Run 
python3 generate_tfrecord.py --csv_input=data/train_labels.csv --output_path=data/train.record --image_dir=images/

python3 generate_tfrecord.py --csv_input=data/test_labels.csv --output_path=data/test.record --image_dir=images/

Now, in your data directory, you should have train.record and test.record.

7. Clone fresh tensorflow models
git clone https://github.com/tensorflow/models.git

Then, follow the installation instructions:

sudo apt-get install protobuf-compiler python-pil python-lxml
sudo pip install jupyter
sudo pip install matplotlib

8. Go to research foilder and open terminal
# From tensorflow/models/research
protoc object_detection/protos/*.proto --python_out=.

9.set python path
# From tensorflow/models/research
export PYTHONPATH=$PYTHONPATH:`pwd`:`pwd`/slim

10. Install in to python 
sudo python3 setup.py install

11. wget http://download.tensorflow.org/models/object_detection/ssd_mobilenet_v1_coco_11_06_2017.tar.gz

Get Mobilnet configuration files


12. Get the sample config files from models/research/object_detection/samples/configs/ssd_mobilenet_v1_pets.config
	edit the config file with all the path
	#change num of classes
	num_classes: 1 
	#change the batch size
	batch_size: 24
	#change if you want
	initial_learning_rate: 0.004

	fine_tune_checkpoint: ""ssd_mobilenet_v1_coco_11_06_2017/model.ckpt""

	input_path: ""data/train.record""

	label_map_path: ""data/object-detection.pbtxt""

	input_path: ""data/test.record""

	label_map_path: ""training/object-detection.pbtxt""

	After Editing above items, Put the config in the training directory.

13. Inside training dir, add object-detection.pbtxt: Add all your classes.

item {
  id: 1
  name: 'downy'
}

14. Add Object-Detection.pbtxt file in into data directory

15. Copy data, image, training, ssd_mobilenet_v1_coco_11_06_2017 (unzipped) in to object-detection directory)
merge the data directory with existing directory

16. Run the command: python3 model_main.py --logtostderr --train_dir=training/ --pipeline_config_path=training/ssd_mobilenet_v1_pets.config

17. If any error wrt 'nets' then set the python Path again on research directory # From tensorflow/models/research
export PYTHONPATH=$PYTHONPATH:`pwd`:`pwd`/slim

18. find the temp directory where the event files are generated and run 
#Try-->

tensorboard --logdir='/tmp/tmp8ecnodas'


in browser open--> http://127.0.0.1:6006/


19. run
python3 export_inference_graph.py \
    --input_type image_tensor \
    --pipeline_config_path training/ssd_mobilenet_v1_pets.config \
    --trained_checkpoint_prefix training/model.ckpt-23361 \
    --output_directory invoice_inference_graph_23361

20. Run--> jupyter notebook

21. Goto object_detection_tutorial.ipynb directry
-->In Variables 
# What model to download.
MODEL_NAME = 'invoice_graph_2'

# Path to frozen detection graph. This is the actual model that is used for the object detection.
PATH_TO_FROZEN_GRAPH = MODEL_NAME + '/frozen_inference_graph.pb'

# List of the strings that is used to add correct label for each box.
PATH_TO_LABELS = os.path.join('training', 'object-detection.pbtxt')

NUM_CLASSES=1

-->delete Download Model content(optional)	

-->In Detection
# For the sake of simplicity we will use only 2 images:
# image1.jpg
# image2.jpg
# If you want to test the code with your images, just add path to the images to the TEST_IMAGE_PATHS.
PATH_TO_TEST_IMAGES_DIR = 'test_images'
TEST_IMAGE_PATHS = [ os.path.join(PATH_TO_TEST_IMAGES_DIR, 'image{}.jpg'.format(i)) for i in range(1, 10) ]#range() as per the number of images
# Size, in inches, of the output images.
IMAGE_SIZE = (12, 8)

22. goto Cell
	 -->Run All
Take a look at test results <reuslt>
",1,1,1,0,precision-agriculture,"[machine-learning, object-detection, precision-agriculture, tensorflow]",00000
1475,DL4BudDetection,WencesVillegasMarset,N/A,https://github.com/WencesVillegasMarset/DL4BudDetection,https://api.github.com/repos/WencesVillegasMarset/DL4BudDetection,Towards Practical 2D Bud Detection With Fully Convolutional Neural Networks,"# Deep Learning for 2D Grapevine Bud Detection

Pre-print available at: https://arxiv.org/abs/2008.11872

Data: 

* Classification and segmentation data [here](http://dharma.frm.utn.edu.ar/vise/bc/) 

* Pre-processed data [here](https://drive.google.com/file/d/1e4Vmknt5hWaWGSOD5kfxuq6w_QdNCnrn/view?usp=sharing).

### Running training and inference scripts.

* Install dependencies 

```console
bash:~$ pip install -r requirements.txt
```

* Download and extract pre-processed data on /images directory or just run the following get_data.py script 

```console
bash:~$ python get_data.py 
```

* Run training scripts for all architectures (sample call shows default values)

```console
bash:~$ python train.py --epochs 200 --lr 0.0001 --bs 4 --savemodel --csv train.csv --imgpath ./images
```

* Run inference scripts for a desired model, generating prediction masks for each threshold and optionally (--valid flag) generating a csv component report (call shows sample values, --model must be specified)

```console
bash:~$ python inference.py --model FCMN8rmsprop_lr0.0001_prep_keras_dp0.001_ep200.h5 \ 
--output ./output/validation/ --csv test.csv --imgpath ./images --valid
```",1,1,3,0,precision-agriculture,"[deep-learning, fcn, precision-agriculture]",00000
1476,predictive-analysis-for-precision-farming,NourhanHassanEid,N/A,https://github.com/NourhanHassanEid/predictive-analysis-for-precision-farming,https://api.github.com/repos/NourhanHassanEid/predictive-analysis-for-precision-farming,This repository contains all the work that had been done in ONE LAB Egypt project 'Descriptive analysis on PA using ML'.,"# Predictive-analysis-for-Precision-Farming
This repository contains all the work had been done in **ONE LAB Egypt** Descriptive analysis on PA using ML internship.
The general scope of the proposed project lies in the field of agricultural development by using green electromagnetic-based techniques. In particular, the project focuses on the early prediction and control of the harmful green field living organisms by using **Machine Learning** models that capable to predict the numbers and conditions of these organisms then control the quasi-stationary magnetic fields. In this project, we target 
##### The eggs of cotton leaf worm, scientifically known as Spodoptera littoralis.
<img src=""https://www.sciencesource.com/Doc/TR1_WATERMARKED/7/4/8/e/SS2363319.jpg?d63642015363"" width=""250"" height=""200"">

##### Potato Blight.
<img src=""https://www.quickcrop.ie/blog/wp-content/uploads/2013/09/Potato-blight-on-leaf.jpg"" width=""250"" height=""200""> <img src=""https://cdn.britannica.com/17/171817-050-BF8C19FA/blight-plant-disease-water-mold-Phytophthora-infestans.jpg"" width=""250"" height=""200"">
                                                                                                                      
##### Guava trees  seasonal abundance of mealybug species and its associated predators and parasitoid .  
<img src=""https://www.vnrnursery.in/wp-content/uploads/2017/04/MB2.jpg"" width=""250"" height=""200"">

### abstract
------------
Traditional ways of farming are no longer suitable for early and accurate detection of biotic stress. Recently, precision agriculture has been extensively used as a potential solution for agriculture problems using high resolution sensors and data analysis.
In this paper, several methods of machine learning have been utilized in order to study pests' population, and agricultural conditions for some crops such as potatoes, guava, and cotton, which are among the main Egyptian crops.

### Dataset and setup
The datasets used in this work for guava trees, cotton leafworm are a research study by Dr. Haitham Sharaf a professor at Cairo University, faculty of Agriculture, which contains data of weather conditions inside a controlled greenhouse system where Guava trees, cotton are planted.

Seasonal abundance of mealybug species and their associated predators and parasitoid on guava trees in Egypt have been surveyed. The survey has been conducted in Giza, Egypt spanning two years (Jan. 2014 to Dec. 2015). Fifteen plants have been randomly chosen and five leaves have been biweekly collected, Each leave has been picked either from the middle of the inspected trees or the four cardinal directions.The dataset includes `four pest mealybug species`, `four predator species`, `two parasitoids attack predators`, `four primary parasitoid species`, and `one hyper parasitoid`

The most dominant insect species are: `the mealybug Ferrisia virgata`, `the predator Scymnus syriacus`, `the parasitoid` that attacks  `Homalotylus vicinus`, `the primary parasitoid of mealybugs`, and `the hyperparasitoid`, `Chartocerus subaeneus.F.virgata` is the first recorded insect on guava trees in Egypt and the primary parasitoid Aenasius spieces is recorded for the first time in the Egyptian guava harvest. Based on the present study, it is clear that the surveyed natural enemies have played a weak role in controlling the mealybugs attacking guava trees, due to the effect of the parasitoids attacking predators and the hyperparasitoids. It is found that the role played by these bio-agents could have been of great importance in the process of predictive analysis and studying the relationship between these insects to accurately help reduce the harmful effect of insects or parasites that cannot be overcome by other insects.Consequently, in finding the correlation and statistical distribution between insects, some of which were among the most important factors for conducting a good predictive analysis.

### methods
Several methods of machine learning have been utilized for these analyses such as support vector machines ,Decision Tree, Random Forest, Gradient Boosting algorithms for classification (supervised learning); k-means and self-organizing maps for clustering (unsupervised learning). These methods are able to calculate both linear and non-linear models, require few statistical assumptions and adapt flexibly to a wide range of data characteristics.
The collected dataset includes the insects popularity on a biweekly basis, meanwhile the weather data is available on a daily basis. Thus some preprocessing on the data has to be done to make use of the available daily weather data.Here, unsupervised learning techniques played the solution to predict the relationship between climatic and soil features and population of insects.
Mainly two methods have been used: predicting the numbers of each insect separately on a daily basis, and predicting the numbers of all insects simultaneously together on a daily basis as well. In each of these methods one or a combination of the following techniques have been applied: `linear interpolation`, `data imputation` using `mean/median value`, data imputation using `KNN` , `k-fold cross-validation`, `standard scaler`, and `min-max scaler`
",0,0,2,0,precision-agriculture,"[artificial-intelligence, descriptive-analysis, machine-learning, precision-agriculture, smartfarms]",00000
1477,dandelion-mqtt,Rotvie,N/A,https://github.com/Rotvie/dandelion-mqtt,https://api.github.com/repos/Rotvie/dandelion-mqtt,Embedded Systems Course Project,"# dandelion-mqtt
**Youtube video of the project -> https://youtu.be/1H3Pq-RNoh0**
",0,0,1,0,precision-agriculture,"[iot, precision-agriculture, website]",00000
1478,Extrema-Pilot-Repository,IIoT-Fei,IIoT-Fei,https://github.com/IIoT-Fei/Extrema-Pilot-Repository,https://api.github.com/repos/IIoT-Fei/Extrema-Pilot-Repository,,"# Extrema Pilot Dataset
 
  As part of the  [SWAMP Project](http://swamp-project.org) the Master's Degree project  of Gilberto Souza proposes a model for irrigation precision that use IoT distributed on an experimental field for the acquisition of climatic data, weather forecast, and the phenological development for a culture of a sweet pepper crop to model irrigation requirements of the sweet pepper obtained through a Fuzzy Inference System (FIS). 

  ## Data

 Data is in CSV format and the data are on a daily scale. 
 In this file, you will find the historical data of Reference Evapotranspiration (**eto**), Crop Evapotranspiration (**etc**), Rainfall (**rf**), Soil Moisture (**sm**), FAO Irrigation (**irr_fao**), and Fuzzy Model Irrigation (**irr_fuzzy**) for a period of 08/01/2020 to 12/07/2020. .

 The crop used for this dataset was sweet pepper and the crop factors for each growth stage can be found [here](https://github.com/IIoT-Fei/Extrema-Pilot-Repository/tree/master/datasets/Sweet%20Paper%20Crop%20Coefficients).

The first pilot consist on a validation of the Fuzzy Inference System proposed on a small two  pots  with  dimensions  height=0.2m,  width=0.2mand  depth=0.25m. The soil type of the pilot is **Silt Clay** with a field capacity of **36 %**. The historical data can be found [here](https://github.com/IIoT-Fei/Extrema-Pilot-Repository/tree/master/datasets/Nova%20Petropolis%20Data)

The second pilot consist on the application of the FIS was located in the city of Extrema, MG, Brazil. The soil type of the pilot location is **Clay** with a field capacity of **39,5%**. The historical data can be found [here](https://github.com/IIoT-Fei/Extrema-Pilot-Repository/tree/master/datasets/Extrema%20Pilot%20Data)

## Fuzzy Inference System

The Fuzzy inference system developed can be observed in the following image.

![FIS](https://user-images.githubusercontent.com/9273551/102410500-63330400-3fcf-11eb-9fd2-aceaa2d04ace.jpg)

## Pictures

The following pictures were registered in the experimental field. More pictures can be found [here](https://github.com/IIoT-Fei/Extrema-Pilot-Repository/tree/master/Pilot%20Photos).

![Slice@2x](https://user-images.githubusercontent.com/9273551/102412625-7eebd980-3fd2-11eb-88f0-2d36d40fa2d8.png)


## Publications

[Conference paper: A fuzzy irrigation control system -  Global Humanitarian Technology Conference GHTC 2020](https://www.researchgate.net/publication/345724334_A_fuzzy_irrigation_control_system)

[Conference paper: Calibration equation and field test of a capacitive soil moisture sensor -  2020 IEEE International Workshop on Metrology for Agriculture and Forestry (MetroAgriFor 2020)](https://ieeexplore.ieee.org/document/9277634)

## Licence


",0,0,5,0,precision-agriculture,"[dataset, fuzzy-inference-system, irrigation, precision-agriculture, soil-moisture-sensor]",00000
1479,DeBlurWeedSeg,grimmlab,grimmlab,https://github.com/grimmlab/DeBlurWeedSeg,https://api.github.com/repos/grimmlab/DeBlurWeedSeg,Improved weed segmentation in UAV imagery of sorghum fields with a combined deblurring segmentation model,"# DeBlurWeedSeg

[![Python 3.10](https://img.shields.io/badge/Python-3.10-3776AB)](https://www.python.org/downloads/release/python-388/)
[![PyTorch 1.13](https://img.shields.io/badge/PyTorch-1.13-FF6F00?logo=pytorch)](https://github.com/pytorch/pytorch/releases/tag/v1.10.0)
[![License: MIT](https://img.shields.io/badge/License-MIT-yellow.svg)](https://opensource.org/licenses/MIT)

This repository provides the source code for ""Improved Weed Segmentation in UAV Imagery of Sorghum Fields with a Combined Deblurring Segmentation Model"".
In this study, we present a novel deep-learning based model for weed segmentation in UAV images called `DeBlurWeedSeg`. This model is a combination of a deblurring and segmentation model (see Figure 1b bottom). Our experiments show that a typical weed segmentation model (Figure b top) cannot segment weeds from crop and background in motion blurred images at test time and our model is able to deal with sharp and motion blurred images without fine-tuning.
<p align=""center"">
    <img src=""readme_fig/model_comparison.jpg"" alt=""model comparison"" width=""50%""/>
</p>

**Figure 1**: Comparison Partners used for this study. Please refer to the method section in the paper for a detailed description.




<p align=""center"">
    <img src=""readme_fig/experimental_setup.jpg"" alt=""experimental setup"" width=""100%""/>
</p>

**Figure 2**: Experimental Setup used in this study. Please refer to the method section in the paper for a detailed description.





## Results on the hold-out test-set
Results of WeedSeg compared to DeBlurWeedSeg.

|                Model | Sorensen-Dice-Coefficient | 
|---------------------:|--------------------------:|
| WeedSeg (scenario 1) |                    0.7327 |
| WeedSeg (scenario 2) |                    0.7381 |
|        DeBlurWeedSeg |                    0.8373 |

The confusion matrix shows per-class accuracies for Background (BG), Sorghum (S) and Weed (W). Here we can clearly see a drop in performance for weed and sorghum in motion blurred image patches. Our proposed model is able to perform similarly well on sharp and deblurred image patches.
<p align=""center"">
    <img src=""readme_fig/confusion_matrices.jpg"" alt=""confusion matrices"" width=""100%""/>
</p>

**Figure 3**: Pixel-based classification results shown in a normalised confusion matrix in percent. 


## Reproduce Results
1. Clone this repository.
2. Download the data and the model from mendeley data using the link https://data.mendeley.com/datasets/k4gvsjv4t3/1.
3. Extract and move the content of the data folder in `data`. Move the model called `model.h5` into `models`.
4. Install the DeBlurring Model NAFNet (see next Section)
5. Generate the results on the hold-out test-set
```bash
python3 generate_results.py
```
This script will generate the quantitative results shown in the results section of our paper. 
6. Generate results of the deblurring model
```bash
python3 evaluate_deblurring.py
```

## Install the deblurring model NAFNet
First, clone the NAFNet package from https://github.com/megvii-research/NAFNet and follow the installation steps
Additionally, we install the package `cog`:
```bash
pip install cog
```
Then download the weights of ""NAFNet-REDS-width64.pth"" into `.NAFNet/experiments/pretrained_models/`
This can be done from `https://github.com/megvii-research/NAFNet/#results-and-pre-trained-models`

## Explanation of the data structure
We made our dataset publicly available on Mendeley data in the file `data.zip`. 
After extracting this file, there will be 3 subfolders. 
- `gt`: 1300 matching sharp and blurry image-pairs and their semantic segmentation masks. This folder contains the whole dataset. One example image is shown in Figure 4a, where only the sharp patches are used for training. The blurry counter-part is saved for reference only.
- `gt_testset` 100 patches of the hold-out test-set that were used to evaluate the main findings of our research. The structure is similar to the patches in the `gt` folder, but with additional deblurred versions and their corresponding semantic segmentations. For the sharp image patches that were deblurred, we used the same semantic masks as for the sharp patches, as there was little difference after the deblurring step. After deblurring the blurry patches, the image content changed to a large extent, therefore we needed to re-label these patches for a fair comparison. In the files, we show the deblurred images only for reference reasons, as they are generated by the `DeBlurWeedSeg` model internally.  
- `splits`: 3 csv files for the dataset split. Used for training, validating and testing our models.

<p align=""center"">
    <img src=""readme_fig/dataset_explanation.jpg"" alt=""dataset explanation"" width=""100%""/>
</p>

**Figure 4**: Explanation of our dataset structure. **a** Dataset used for training the model with the class SorghumSegmentationDataset. **b** Hold-out test-set used for comparing our main results of the research using the class SorghumComparisonDataset.

## Reproduce the hyperparameter optimisation results
1. Data Split
```bash
python3 split_data.py
```
This script will ensure a stratified split based on the number and type of plants present in a patch.

2. Hyperparameter Optimisation
Change the encoder name and possible batch sizes in the following script accordingly. CSV files with metrics of the run will be saved in the `logs` directory.
```bash
python3 hyperparameter_optimisation.py
```
We provide a summary of the hyperparameter optimisation trials from this study in `results/all_hp_results.csv`.

3. Re-train on the full training + validation split and save the final model for predictions.
```bash
python3 retrain.py --encoder_name resnet50 --max_steps 2960 --batch_size 128 --learning_rate 0.0005395030966670228
```
The values correspond to the best hyperparameter set of our study.


# Publication and Citation
Improved weed segmentation in UAV imagery of sorghum fields with a combined deblurring segmentation model
Genze, N., Wirth, M., Schreiner, C., Ajekwe, R., Grieb, M., & Grimm, D. G.
Plant Methods, 2023, https://doi.org/10.1186/s13007-023-01060-8

@article{genze_improved_2023,
	title = {Improved weed segmentation in {UAV} imagery of sorghum fields with a combined deblurring segmentation model},
	volume = {19},
	issn = {1746-4811},
	url = {https://doi.org/10.1186/s13007-023-01060-8},
	doi = {10.1186/s13007-023-01060-8},
	number = {1},
	journal = {Plant Methods},
	author = {Genze, Nikita and Wirth, Maximilian and Schreiner, Christian and Ajekwe, Raymond and Grieb, Michael and Grimm, Dominik G.},
	month = aug,
	year = {2023},
	pages = {87},
}
",0,0,1,0,precision-agriculture,"[deblurring, deep-learning, precision-agriculture, smart-farming, weed-segmentation]",00000
1480,precion_agriculture_project,sanjitsingh98,N/A,https://github.com/sanjitsingh98/precion_agriculture_project,https://api.github.com/repos/sanjitsingh98/precion_agriculture_project,"I worked on a precision agriculture project in which we used various sensors to save agricultural data(temperature,humidity,soil moisture,pH). In this repository , I have included 2 databases which contain the realtime and modified values. The two python codes are for modifying the database and visualizing the results respectively.","# precion_agriculture_project
I worked on a precision agriculture project in which I used various sensors to save agricultural data(temperature,humidity,soil moisture,pH). In this repository , I have included 2 databases which contain the realtime and modified values. The two python codes are for modifying the database and visualizing the results respectively.
DB_1-realtime values;
DB_2-modified database with average of each parameter grouped by date;
project_convert-python code to modify the database using pandas;
project_graphs-python code to visualize the data;
pie_chart_project-python code for pie char(pH);

The different png files contain pictures of the various graphs that can be generated by executing project_graphs.py 

NOTE: The main purpose of this repository is to understand how data analysis and visulaization is done on databases. Please do not focus much on the database values in DB_1 as some of them might not be very accurate.
",0,0,1,0,precision-agriculture,"[matplotlib, pandas, precision-agriculture, python, seaborn, visualization]",00000
1481,ndvi-generator,WaywardHayward,N/A,https://github.com/WaywardHayward/ndvi-generator,https://api.github.com/repos/WaywardHayward/ndvi-generator,A simple console app that will take bitmaps for spectral band 3 and band 4 and generate a NDVI image,"# ndvi-generator
A simple console app which will take a bitmaps for spectral band 3 and band 4 and generate a Normalized Difference Vegitation Index (NDVI) image.

More Information on the NDVI can be found [here](https://en.wikipedia.org/wiki/Normalized_Difference_Vegetation_Index).

## Getting Started

Clone the repository using the following command.

    git clone https://github.com/WaywardHayward/ndvi-generator.git

Run to code using the following command.

    cd ndvi-generator
    dotnet restore
    dotnet run

The application will then prompt you for a red and a nir bitmap.
Once the application is completed, you will see the NDVI image in same directory as the red image.

The colouring of the NDVI image is based on the following formula:

    NDVI = (NIR - RED) / (NIR + RED)

This is then converted to an RGB image using with Red representing a low NDVI value and Green representing a high NDVI value.

",0,0,1,0,precision-agriculture,"[bitmap, dotnet, imagesharp, ndvi, precision-agriculture]",00000
1482,OpenVRT-Visualizer,luizguilhermefr,N/A,https://github.com/luizguilhermefr/OpenVRT-Visualizer,https://api.github.com/repos/luizguilhermefr/OpenVRT-Visualizer,Variable Rate Technology using Electron 🌾,"# OpenVRT Visualizer

The OpenVRT Project desktop visualizer. Use it to review your prescription maps and/or convert them to GeoJSON.

- [Go to site](https://luizguilhermefr.github.io/OpenVRT)
- [Watch the video](https://www.youtube.com/watch?v=W3I2XYizy-U)

## Build Setup

``` bash
# install dependencies
yarn install

# serve with hot reload at localhost:9080
yarn run dev

# build electron application for production
yarn run build


# lint all JS/Vue component files in `src/`
yarn run lint

```

## Credits

Icon by [icons8](https://icons8.com/).
",0,0,2,0,precision-agriculture,"[electron, geospatial, precision-agriculture]",00000
1483,AFarCloud-Mission-Manager,grys-upm,grys-upm,https://github.com/grys-upm/AFarCloud-Mission-Manager,https://api.github.com/repos/grys-upm/AFarCloud-Mission-Manager,Mission Manager (middleware) developed for the AFarCloud EU Research Project,"# Mission Manager (AFC-MW)

1. [What is the Mission Manager?](https://github.com/grys-upm/AFarCloud-Mission-Manager#what-is-the-mission-manager)
2. [How to generate the Mission Manager bundle](https://github.com/grys-upm/AFarCloud-Mission-Manager#how-to-generate-the-mission-manager-bundle)
3. [How to configure the Mission Manager](https://github.com/grys-upm/AFarCloud-Mission-Manager#how-to-configure-the-mission-manager)
   1. [Configuration before running the Mission Manager](https://github.com/grys-upm/AFarCloud-Mission-Manager#configuration-before-running-the-mission-manager)
   2. [Configuration during the execution of the Mission Manager](https://github.com/grys-upm/AFarCloud-Mission-Manager#configuration-during-the-execution-of-the-mission-manager)
4. [How to run the Mission Manager](https://github.com/grys-upm/AFarCloud-Mission-Manager#how-to-run-the-mission-manager)
   1. [How to run the Mission Manager as a standalone application](https://github.com/grys-upm/AFarCloud-Mission-Manager#how-to-run-the-mission-manager-as-a-standalone-application)
   2. [How to run the Mission Manager as a Docker container](https://github.com/grys-upm/AFarCloud-Mission-Manager#how-to-run-the-mission-manager-as-a-docker-container)
5. [Monitoring the Mission Manager](https://github.com/grys-upm/AFarCloud-Mission-Manager#monitoring-the-mission-manager)
   1. [Logs](https://github.com/grys-upm/AFarCloud-Mission-Manager#logs)
   2. [Mission related files](https://github.com/grys-upm/AFarCloud-Mission-Manager#mission-related-files)
6. [License](https://github.com/grys-upm/AFarCloud-Mission-Manager#license)

## What is the Mission Manager?

As described in [Deliverable 2.3 - Architecture Requirements and Definition](http://www.afarcloud.eu/wp-content/uploads/2020/04/D2.3-Architecture-Requirements-and-Definition-2.0_VFINAL.pdf), the mission manager is:

> [...] the component manages all operations and data flows in which vehicles (i.e., GVs, UAVs) are
involved. The main duties of this component are related to the delivery of the mission plan defined by the Farm Management System, as well as receiving the information from the vehicles that participate
in the mission according to its progress.
>
> Also, this component is responsible for sending events to elements in the Hardware Layer. We will
consider as events all relevant data (e.g., command to abort a mission) sent by the middleware that
should be considered by vehicles or other IoT devices. Events will be generated by the Farm
Management System as a result of an analysis of data

In particular, this component is able to:

- Receive a request for the initial status of the vehicles (System Configurator) through a dedicated REST interface.
- Receive a full mission from the MMT through a thrift interface.
- Parse the received mission and:
  - Generate the vehicle plan for each autonomous vehicle participating in the mission, and publishing it to the MQTT broker.
  - Generate the JSON representation of the prescription map for ***one*** tractor participating in the mission, and sending it to the ISOBUS Converter.
- Receive the abort events for both vehicles and mission, and publishing it to the MQTT broker.

## How to generate the Mission Manager bundle
Use `mvn install` from the Mission Manager project folder (the one with the `pom.xml` file). This will generate a file named `MissionManager-1.0-SNAPSHOT-jar-with-dependencies.jar` inside the `target` folder.

## How to configure the Mission Manager
At this stage the Mission Manager have some properties that define its behavior, and that can be configured. These properties are:

- `thrift.port` defines the port for the thrift service provided.
- `thrift.style` defines the type of thrift service style used. By default it use *multiplex*.
- `rest.port` defines the port for the REST services provided. This includes the REST service for the System Configurator, as well as some other REST services for monitoring and configuring the Mission Manager while it is running.
- `rest.base_uri` defines the base uri for the REST services provided.
- `mmt.ip` defines the address of the MMT.
- `mmt.port` defines the port of the MMT thrift service.
- `mmt.enabled_notifications` defines if the Mission Manager is enabled or disabled to send notifications to the MMT.
- `mqtt.protocol` defines the protocol used by the MQTT broker. By default it is set to *ssl*.
- `mqtt.server` defines the server address for the MQTT broker.
- `mqtt.port` defines the port for the MQTT broker.
- `mqtt.user` defines the username for accessing to the MQTT broker.
- `mqtt.pass` defines the password for accessing to the MQTT broker.
- `mqtt.client_id` defines the client id for accessing to the MQTT broker. By default is set to _AFC Mission Manager._
- `mqtt.topic.mission` defines the schema for the topic levels related to a mission.
- `mqtt.topic.system_configuration` defines the schema for the topic levels related to the system configuration.
- `mqtt.retained.mission`defines the retained property for the MQTT related to missions.
- `mqtt.retained.system_configuration` defines the retained property for the MQTT related to system configuration.
- `sc.request.timeout` defines the timeout for the status vector request from the System Configuration.
- `sc.max_vehicles` defines the maximum number of vehicles that can reply to a status vector request from the System Configuration. ***Only for test purposes***.
- `dq.server` defines the server address for the Data Query component.
- `dq.port` defines the port for the Data Query component.
- `isobusconverter.server` defines the server address for the ISOBUS Converter component.
- `isobusconverter.port` defines the port for the ISOBUS Converter component.
- `last_sequence_number` defines the las used sequence number for messages published to the MQTT.
- `debug` defines the logging of debug information.

### Configuration before running the Mission Manager
To configure the Mission Manager before running the Mission Manager, create a file named `local.properties` in the same folder where the `.jar` is, and add the configuration properties you need.

### Configuration during the execution of the Mission Manager
To check the current configuration being used by the Mission Manager, go to **http://*server_address*:*rest.port*/*rest.base_uri*/MissionManager/conf**, where:

- *server* is the address where the Mission Manager is running.
- *rest.port* is the port the Mission Manager is using for REST services, set by the property with the same name.
- *rest.base_uri* is the base URI for the REST services run by the Mission Manager, set by the property with the same name.

To change any configuration property, make a **PUT** request to the same address as before (**http://*server_address*:*rest.port*/*rest.base_uri*/MissionManager/conf**), with those properties that need to be changed sent as `application/x-url-form-encoded` with their new value.

***NOTE:*** Every change made during the execution of the Mission Manager is made permanent, and stored in a configuration file called `stored.properties`. This file can be modified and/or removed if required. The priority of the configurations is as follows: if a property has a stored value in `stored.properties`, that value is used. If a property does not have a stored value, but it is defined as in `local.properties`, then that value is used. If a property does not have neither a stored value, nor a local value, then the default value is used.

***NOTE:*** There are some properties that cannot be changed while running the Mission Manager:

- `rest.port`
- `rest.base_uri`

## How to run the Mission Manager
The Mission Manager is implemented to be run as a standalone application inside a Docker container. Therefore, for testing purposes it can also be run as a standalone application without Docker.

### How to run the Mission Manager as a standalone application
The Mission Manager requires Java JRE 8 or higher. To run the Mission Manager, execute `java -jar MissionManager-1.0-SNAPSHOT-jar-with-dependencies.jar`.

A valid `mqttTrustStore.jks` file is required in the same folder as the Mission Manager in order to access to the MQTT Broker.

### How to run the Mission Manager as a Docker container
To create a docker image, it is recommended to use the `openjdk:12-jdk-alpine` as the base image, as it is enough of running the Mission Manager, and has a small size compared to the openjdk image using Debian.

The use of `openjdk:12-jdk-alpine` also provides with two interesting advantages over 8 to 11 JDK Alpine versions:

- It allows to enable a memory and CPU restriction for the execution of the container. This is available from version 9. Version 8 officially supports it, but it can be buggy.
- It includes the Java Mission Control that allows to monitor and record the performance of the Mission Manager using the Java Flight Recorder tool (only available directly from version 12).

The example *Dockerfile* used for running the AFC Mission Manager for the different scenarios is as follows, using a different local `local.properties` file for each scenario:

```
# Base Alpine Linux based image with OpenJDK JRE only
FROM openjdk:12-jdk-alpine
# Install bash
RUN apk add --no-cache bash
# copy application JAR
COPY MissionManager-1.0-SNAPSHOT-jar-with-dependencies.jar /usr/app/MissionManager.jar
COPY mqttTrustStore.jks /usr/app/mqttTrustStore.jks
COPY local.properties /usr/app/local.properties
WORKDIR /usr/app
# specify default command
CMD [""java"", ""-jar"", ""MissionManager.jar""]
```

Save the previous *Dockerfile* example and modify it according to each specific case.

To build the Docker image, execute `docker build -f Dockerfile -t mman:latest`

Once the Docker image is created, it can be run executing `docker run -d --name mman-test -p extThriftPort:portThrift -p extRESTPort:portREST -m 512m`, where _portThrift_ and _portRest_ are the ports for the Thrift and REST services used by the Mission Manager within the container, and _extThriftPort_ and _extRESTPort_ are their corresponding published ports in the host machine.

Please, be aware that by default the timezone applied to an Alpine based image uses UTC by default. Change it to your needs accordingly.

## Monitoring the Mission Manager

### Logs
The logs for the Mission Manager can be accessed via REST through **http://*server_address*:*rest.port*/*rest.base_uri*/MissionManager/logs/MissionManager.log**.

### Mission related files
The mission received from the MMT, as well as the generated files from it can be accessed through **http://*server_address*:*rest.port*/*rest.base_uri*/MissionManager/missions**. The missions are stored in separate folders per day (for v1.0.0-rc5). For each mission, there should be the following files:

- **AFC-Mission-*date*-*hour*-*missionID*-*requestId*.ser**: This is the mission file as received from the MMT, stored as a serialized object.
- **AFC-Mission-*date*-*hour*-*missionID*-*requestId*.json**: This is the mission file received from the MMT represented in JSON format. *NOTE:* NaN values are changed to Double.MAX_VALUE, as JSON has no representation to NaN.
- **AFC-CSV-*date*-*hour*-*requestId*-*missionId*-commands.csv**: Parsed commands from the received mission.
- **AFC-CSV-*date*-*hour*-*requestId*-*missionId*-forbidenArea.csv**: Parsed forbiddenArea from the received mission.
- **AFC-CSV-*date*-*hour*-*requestId*-*missionId*-homeLocation.csv**: Parsed homeLocation from the received mission.
- **AFC-CSV-*date*-*hour*-*requestId*-*missionId*-navigationArea.csv**: Parsed navigationArea from the received mission.
- **AFC-CSV-*date*-*hour*-*requestId*-*missionId*-tasks.csv**: Parsed tasks from the received mission.
- **AFC-CSV-*date*-*hour*-*requestId*-*missionId*-vehicles.csv**: Parsed vehicles from the received mission.
- **AFC-VP-*date*-*hour*-*requestId*-*missionId*-*vehicleId*.json**: Parsed vehicle plan for *vehicleId* from the received mission. This is the same content published to the MQTT Broker.
- **AFC-PM-*date*-*hour*-*requestId*-*missionId*-*vehicleId*.json**: Parsed prescription map for *vehicleId* from the received mission. This is the same content sent to the ISOBUS Converter.
- **AFC-PM-*date*-*hour*.xml**: Generated prescription map received from the ISOBUS Converter.

# License
The Mission Manager for AFC is distributed under a dual license scheme:

- For academic uses: Licensed under GNU Affero General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.
- For any other use: Licensed under the Apache License, Version 2.0.

For further details on the license, please refer to the [License](License) file.
",0,0,2,0,precision-agriculture,"[autonomous-unmanned-robots, data-distribution-service, isobus, middleware, mission-manager, mqtt, plan-parsing, plan-validation, precision-agriculture, precision-farming, prescription-map, rest, rest-api, thrift, unmanned-aerial-vehicle, unmanned-ground-vehicle]",00000
1484,PrecisionFarming,tylerpittman,N/A,https://github.com/tylerpittman/PrecisionFarming,https://api.github.com/repos/tylerpittman/PrecisionFarming,"Code accompanying article ""Too much fertilizer? An observational association between inputs at planting and crop yield on a Saskatchewan farming operation""","# PrecisionFarming

R, Python and Linux shell script programming with Esri shapefiles, GeoJSON and TopoJSON. Utilized in GreenStar and Topcon systems.

#!-@-!#!-@-!#!-@-!#!-@-!#!-@-!#!-@-!#!-@-!# \
Order to run farm scripts \
[STEP_0_OPTIONAL_rename_shapefiles_24Mar2015.py](https://github.com/tylerpittman/PrecisionFarming/tree/main/scripts/STEP_0_OPTIONAL_rename_shapefiles_24Mar2015.py) \
[STEP_1_USING_YIELD_QUINTILE_POLYGONS_contour_polygons_multi_years_9March2018.R](https://github.com/tylerpittman/PrecisionFarming/tree/main/scripts/STEP_1_USING_YIELD_QUINTILE_POLYGONS_contour_polygons_multi_years_9March2018.R) \
[STEP_2_addFields_to_shapefile_10March2018.py](https://github.com/tylerpittman/PrecisionFarming/tree/main/scripts/STEP_2_addFields_to_shapefile_10March2018.py) \
[STEP_3_OPTIONAL_make_boundaries_Topcon_17March2017.R](https://github.com/tylerpittman/PrecisionFarming/tree/main/scripts/STEP_3_OPTIONAL_make_boundaries_Topcon_17March2017.R) \
[STEP_3_Topcon_load_shapefiles_12March2018.py](https://github.com/tylerpittman/PrecisionFarming/tree/main/scripts/STEP_3_Topcon_load_shapefiles_12March2018.py) \
[STEP_4_make_big_map_12March2018.R](https://github.com/tylerpittman/PrecisionFarming/tree/main/scripts/STEP_4_make_big_map_12March2018.R) \
[STEP_5_OPTIONAL_rename_shapefile_directory_5March2016.py](https://github.com/tylerpittman/PrecisionFarming/tree/main/scripts/STEP_5_OPTIONAL_rename_shapefile_directory_5March2016.py) \
[STEP_6_MERGE_TANKS_after_seeding_23May2018.R](https://github.com/tylerpittman/PrecisionFarming/tree/main/scripts/STEP_6_MERGE_TANKS_after_seeding_23May2018.R) \
[STEP_7_make_boundaries_after_seeding_23May2018.R](https://github.com/tylerpittman/PrecisionFarming/tree/main/scripts/STEP_7_make_boundaries_after_seeding_23May2018.R) \
[STEP_8_make_boundaries_add_area_23May2018.R](https://github.com/tylerpittman/PrecisionFarming/tree/main/scripts/STEP_8_make_boundaries_add_area_23May2018.R) \
[STEP_9_SEEDING_MAPS_after_seeding_not_sloughs_2018_23May2018.R](https://github.com/tylerpittman/PrecisionFarming/tree/main/scripts/STEP_9_SEEDING_MAPS_after_seeding_not_sloughs_2018_23May2018.R) \
[STEP_10_SPLIT_YIELD_FILES_COMBINE_after_harvest_15September2018.R](https://github.com/tylerpittman/PrecisionFarming/tree/main/scripts/STEP_10_SPLIT_YIELD_FILES_COMBINE_after_harvest_15September2018.R) \
[STEP_11_COMBINE_contour_polygons_2018_15September2018.R](https://github.com/tylerpittman/PrecisionFarming/tree/main/scripts/STEP_11_COMBINE_contour_polygons_2018_15September2018.R) \
[STEP_12_PUBLISH_create_TopoJSON_files_for_web_SMALLER_15September2018.bsh](https://github.com/tylerpittman/PrecisionFarming/tree/main/scripts/STEP_12_PUBLISH_create_TopoJSON_files_for_web_SMALLER_15September2018.bsh) \
[STEP_13_GET_ANALYSIS_1_data_ready_10July2019.R](https://github.com/tylerpittman/PrecisionFarming/tree/main/scripts/STEP_13_GET_ANALYSIS_1_data_ready_10July2019.R) \
[STEP_14_GET_ANALYSIS_2_data_ready_15July2019.R](https://github.com/tylerpittman/PrecisionFarming/tree/main/scripts/STEP_14_GET_ANALYSIS_2_data_ready_15July2019.R) \
[STEP_15_farm_weather_data_paper_15July2019.R](https://github.com/tylerpittman/PrecisionFarming/tree/main/scripts/STEP_15_farm_weather_data_paper_15July2019.R) \
[STEP_16_ANALYSIS_farm_data_15December2019.R](https://github.com/tylerpittman/PrecisionFarming/tree/main/scripts/STEP_16_ANALYSIS_farm_data_15December2019.R) \
[STEP_17_ANALYSIS_yield_map_15December2019.R](https://github.com/tylerpittman/PrecisionFarming/tree/main/scripts/STEP_17_ANALYSIS_yield_map_15December2019.R) \
[STEP_18_farm_rainfall_data_SwiftCurrent_5February2020.R](https://github.com/tylerpittman/PrecisionFarming/tree/main/scripts/STEP_18_farm_rainfall_data_SwiftCurrent_5February2020.R) \
[STEP_19_FARM_RECORDS_1986_2018_analysis_22December2019.R](https://github.com/tylerpittman/PrecisionFarming/tree/main/scripts/STEP_19_FARM_RECORDS_1986_2018_analysis_22December2019.R) \
[weatherDownloadScript.py](https://github.com/tylerpittman/PrecisionFarming/tree/main/scripts/weatherDownloadScript.py) \
#!-@-!#!-@-!#!-@-!#!-@-!#!-@-!#!-@-!#!-@-!# 
",0,0,1,0,precision-agriculture,"[fertilizer, grain-yield, observational-case-study, precision-agriculture]",00000
1485,PrecisionFarming,tylerpittman,N/A,https://github.com/tylerpittman/PrecisionFarming,https://api.github.com/repos/tylerpittman/PrecisionFarming,"Code accompanying article ""Too much fertilizer? An observational association between inputs at planting and crop yield on a Saskatchewan farming operation""","# PrecisionFarming

R, Python and Linux shell script programming with Esri shapefiles, GeoJSON and TopoJSON. Utilized in GreenStar and Topcon systems.

#!-@-!#!-@-!#!-@-!#!-@-!#!-@-!#!-@-!#!-@-!# \
Order to run farm scripts \
[STEP_0_OPTIONAL_rename_shapefiles_24Mar2015.py](https://github.com/tylerpittman/PrecisionFarming/tree/main/scripts/STEP_0_OPTIONAL_rename_shapefiles_24Mar2015.py) \
[STEP_1_USING_YIELD_QUINTILE_POLYGONS_contour_polygons_multi_years_9March2018.R](https://github.com/tylerpittman/PrecisionFarming/tree/main/scripts/STEP_1_USING_YIELD_QUINTILE_POLYGONS_contour_polygons_multi_years_9March2018.R) \
[STEP_2_addFields_to_shapefile_10March2018.py](https://github.com/tylerpittman/PrecisionFarming/tree/main/scripts/STEP_2_addFields_to_shapefile_10March2018.py) \
[STEP_3_OPTIONAL_make_boundaries_Topcon_17March2017.R](https://github.com/tylerpittman/PrecisionFarming/tree/main/scripts/STEP_3_OPTIONAL_make_boundaries_Topcon_17March2017.R) \
[STEP_3_Topcon_load_shapefiles_12March2018.py](https://github.com/tylerpittman/PrecisionFarming/tree/main/scripts/STEP_3_Topcon_load_shapefiles_12March2018.py) \
[STEP_4_make_big_map_12March2018.R](https://github.com/tylerpittman/PrecisionFarming/tree/main/scripts/STEP_4_make_big_map_12March2018.R) \
[STEP_5_OPTIONAL_rename_shapefile_directory_5March2016.py](https://github.com/tylerpittman/PrecisionFarming/tree/main/scripts/STEP_5_OPTIONAL_rename_shapefile_directory_5March2016.py) \
[STEP_6_MERGE_TANKS_after_seeding_23May2018.R](https://github.com/tylerpittman/PrecisionFarming/tree/main/scripts/STEP_6_MERGE_TANKS_after_seeding_23May2018.R) \
[STEP_7_make_boundaries_after_seeding_23May2018.R](https://github.com/tylerpittman/PrecisionFarming/tree/main/scripts/STEP_7_make_boundaries_after_seeding_23May2018.R) \
[STEP_8_make_boundaries_add_area_23May2018.R](https://github.com/tylerpittman/PrecisionFarming/tree/main/scripts/STEP_8_make_boundaries_add_area_23May2018.R) \
[STEP_9_SEEDING_MAPS_after_seeding_not_sloughs_2018_23May2018.R](https://github.com/tylerpittman/PrecisionFarming/tree/main/scripts/STEP_9_SEEDING_MAPS_after_seeding_not_sloughs_2018_23May2018.R) \
[STEP_10_SPLIT_YIELD_FILES_COMBINE_after_harvest_15September2018.R](https://github.com/tylerpittman/PrecisionFarming/tree/main/scripts/STEP_10_SPLIT_YIELD_FILES_COMBINE_after_harvest_15September2018.R) \
[STEP_11_COMBINE_contour_polygons_2018_15September2018.R](https://github.com/tylerpittman/PrecisionFarming/tree/main/scripts/STEP_11_COMBINE_contour_polygons_2018_15September2018.R) \
[STEP_12_PUBLISH_create_TopoJSON_files_for_web_SMALLER_15September2018.bsh](https://github.com/tylerpittman/PrecisionFarming/tree/main/scripts/STEP_12_PUBLISH_create_TopoJSON_files_for_web_SMALLER_15September2018.bsh) \
[STEP_13_GET_ANALYSIS_1_data_ready_10July2019.R](https://github.com/tylerpittman/PrecisionFarming/tree/main/scripts/STEP_13_GET_ANALYSIS_1_data_ready_10July2019.R) \
[STEP_14_GET_ANALYSIS_2_data_ready_15July2019.R](https://github.com/tylerpittman/PrecisionFarming/tree/main/scripts/STEP_14_GET_ANALYSIS_2_data_ready_15July2019.R) \
[STEP_15_farm_weather_data_paper_15July2019.R](https://github.com/tylerpittman/PrecisionFarming/tree/main/scripts/STEP_15_farm_weather_data_paper_15July2019.R) \
[STEP_16_ANALYSIS_farm_data_15December2019.R](https://github.com/tylerpittman/PrecisionFarming/tree/main/scripts/STEP_16_ANALYSIS_farm_data_15December2019.R) \
[STEP_17_ANALYSIS_yield_map_15December2019.R](https://github.com/tylerpittman/PrecisionFarming/tree/main/scripts/STEP_17_ANALYSIS_yield_map_15December2019.R) \
[STEP_18_farm_rainfall_data_SwiftCurrent_5February2020.R](https://github.com/tylerpittman/PrecisionFarming/tree/main/scripts/STEP_18_farm_rainfall_data_SwiftCurrent_5February2020.R) \
[STEP_19_FARM_RECORDS_1986_2018_analysis_22December2019.R](https://github.com/tylerpittman/PrecisionFarming/tree/main/scripts/STEP_19_FARM_RECORDS_1986_2018_analysis_22December2019.R) \
[weatherDownloadScript.py](https://github.com/tylerpittman/PrecisionFarming/tree/main/scripts/weatherDownloadScript.py) \
#!-@-!#!-@-!#!-@-!#!-@-!#!-@-!#!-@-!#!-@-!# 
",0,0,1,0,precision-agriculture,"[fertilizer, grain-yield, observational-case-study, precision-agriculture]",00000
1486,OpenVRT-Firmware,luizguilhermefr,N/A,https://github.com/luizguilhermefr/OpenVRT-Firmware,https://api.github.com/repos/luizguilhermefr/OpenVRT-Firmware,Arduino firmware for OpenVRT communication. ,"# OpenVRT Firmware

This firmware provide an OpenVRT interface managing a treadmill miniature.

- [Go to site](https://luizguilhermefr.github.io/OpenVRT)
- [Watch the video](https://www.youtube.com/watch?v=W3I2XYizy-U)

## Requirements

- Arduino Mega 2560
- Adafruit Arduino Shield
- [Arduino SDK](https://www.arduino.cc/en/Main/Software)
- [Adafruit Motor Shield library](https://learn.adafruit.com/adafruit-motor-shield/library-install)
- [PID Library](https://playground.arduino.cc/Code/PIDLibrary)

## Configuration

Set `ARDUINO_SDK_HOME` globally to the path of your installation (e.g: in `/etc/environment`).

## Compiling and uploading

```bash
./upload.sh
```
",0,0,2,0,precision-agriculture,"[arduino, precision-agriculture]",00000
1487,Big_Data_Second_Project,bug-data,bug-data,https://github.com/bug-data/Big_Data_Second_Project,https://api.github.com/repos/bug-data/Big_Data_Second_Project,Second project for Big Data course held at Roma Tre University,"# Big Data Second Project
Second project for Big Data course held at Roma Tre University

## Contributors
- [Jerin George Mathew](https://github.com/jgeorgemathew)
- [Luca Pasquini](https://github.com/lucapas)
",0,0,1,0,precision-agriculture,"[grafana, influxdb, iot, kafka, kafka-python, kafka-spark-streaming, precision-agriculture, python, roma-tre-university, spark, spark-streaming, university-project]",00000
1488,Precision-Agriculture-Datasets,Mr-TalhaIlyas,N/A,https://github.com/Mr-TalhaIlyas/Precision-Agriculture-Datasets,https://api.github.com/repos/Mr-TalhaIlyas/Precision-Agriculture-Datasets,A repository containing links of datasets used for training deep CNNs in precision agriculture.,"[![Hits](https://hits.seeyoufarm.com/api/count/incr/badge.svg?url=https%3A%2F%2Fgithub.com%2FMr-TalhaIlyas%2FPrecision-Agriculture-Datasets&count_bg=%2379C83D&title_bg=%23555555&icon=&icon_color=%23E7E7E7&title=hits&edge_flat=false)](https://hits.seeyoufarm.com)

# Datasets

### Download Link [One Drive](https://o365jbnu-my.sharepoint.com/:f:/g/personal/talha_student_jbnu_ac_kr/EtY7EzFK6LhEq2ibaVmK_V4BP712j8fZNUuz7DaqiZGFlA?e=QMWVhH)
The above Onedrive link contains the links to all the datasets used in below papers.

### SS1K Dataset
[Paper](https://www.frontiersin.org/articles/10.3389/fpls.2021.591333/full)
### Strawberry Disease Dataset
[Paper]()
### Strawberry Crown Dataset
[Paper]()
### Strawberry Center Point Dataset
[Paper]()

# Rice and Paddy Dataset

[Paper]()


### Citation

```
Ilyas, T., Khan, A., Umraiz, M., Jeong, Y. and Kim, H., 2021. Multi-scale context aggregation for strawberry fruit recognition and disease phenotyping. IEEE Access, 9, pp.124491-124504.

Ilyas, T., Umraiz, M., Khan, A. and Kim, H., 2021. DAM: Hierarchical adaptive feature selection using convolution encoder decoder network for strawberry segmentation. Frontiers in plant science, 12, p.591333.

Ilyas, T. and Kim, H., 2021, October. A Deep Learning Based Approach for Strawberry Yield Prediction via Semantic Graphics. In 2021 21st International Conference on Control, Automation and Systems (ICCAS) (pp. 1835-1841). IEEE.
```
",0,0,1,0,precision-agriculture,"[crops-and-weeds, dataset, deep-learning, precision-agriculture]",00000
1489,KisaanBot_Farmer_Assistant,rhazra-003,N/A,https://github.com/rhazra-003/KisaanBot_Farmer_Assistant,https://api.github.com/repos/rhazra-003/KisaanBot_Farmer_Assistant,KisaanBot: A chatbot assistant for farmers towards improving livelihood,"## KisaanBot: A chatbot assistant for farmers towards improving livelihood

India is considered as a major agricultural powerhouse as this sector counts to about 15% of India’s Gross Domestic Product (GDP). However, Indian agriculture still lacks access to modern farming techniques, which results in the wastage of resources. One of the modern technologies used to bridge this technological gap is an user-friendly messaging application known as Chatbot. A chatbot trained with agriculture related data can assist the farmers in having knowledge about the modern farming practices without the hassle of waiting for an expert to help solve their queries. 

In this context, a natural language based chatbot model is proposed here, named KisaanBot, as a remote assistant to the farmer, which can respond to their queries. Our assistant is trained by the RASA Open Source Framework and can be accessed with a Web URL via Dialogflow deployment. The proposed chatbot model identifies the intent and the entity from user utterances and it generates the responses from the trained database, which delivers it to the user. The knowledge base used in training is designed by collecting grouped data from Kisan Call Centre (KCC) and Indian Council of Agricultural Research (ICAR). This knowledge base comprises the frequently asked questions and the corresponding answers regarding agricultural practices of West Bengal concerned with four domains namely soil, weather, crops and fertigation. Hence, the dataset comprises three fields, such as intent (the goal of a user query), query (the question related to that intent) and the answer (response from the chatbot). The chatbot is trained with 9 subqueries for each query to develop the knowledge base having 9 queries for a single intent. This can resolve the issue which arises due to different ways of framing a particular question by the users. The proposed system is pretrained and tested in the 80:20 ratio with the dataset. The efficiency of the proposed model is assessed by the performance measures, such as precision, recall and f1-score. The overall accuracy thus achieved by the proposed model is  99.82% which shows an improvement over existing works. 

**Keywords:** Chatbot, Agriculture, RASA, Dialogflow, Natural Language Processing (NLP), Accuracy

**This is B.Tech Final Year project of Ridam Hazra and Arpan Kesh, batch of 2023 at the Department of Computer Science and Engineering (CSE) in the National Institute of Technology Durgapur, under the guidance of Dr. Parag Kumar Guhathakurta.**
",0,0,1,0,precision-agriculture,"[accuracy, chatbot-framework, dialogflow, kisaanbot, nlp, precision-agriculture, rasa-chatbot]",00000
1490,CropMap,omaresguerra,N/A,https://github.com/omaresguerra/CropMap,https://api.github.com/repos/omaresguerra/CropMap,CropMap is a web-based image processing system designed to generate color-coded NDVI and OSAVI maps for precision agriculture.,"[![License: GPL v3](https://img.shields.io/badge/License-GPLv3-blue.svg)](https://www.gnu.org/licenses/gpl-3.0)
[![DOI](https://zenodo.org/badge/277069649.svg)](https://zenodo.org/badge/latestdoi/277069649)
# CropMap
CropMap is a web-based image processing system designed to generate color-coded NDVI and OSAVI maps for precision agriculture. The system was developed using Python and Django framework.

",0,0,2,1,precision-agriculture,"[hacktoberfest, hacktoberfest2020, osavi-maps, precision-agriculture]",00000
1491,DIANA,Mr-TalhaIlyas,N/A,https://github.com/Mr-TalhaIlyas/DIANA,https://api.github.com/repos/Mr-TalhaIlyas/DIANA,A method for paprika disease severity assessment.,"[![Hits](https://hits.seeyoufarm.com/api/count/incr/badge.svg?url=https%3A%2F%2Fgithub.com%2FMr-TalhaIlyas%2FDIANA&count_bg=%2379C83D&title_bg=%23555555&icon=&icon_color=%23E7E7E7&title=hits&edge_flat=false)](https://hits.seeyoufarm.com)
# DIANA: A deep learning-based paprika plant disease and pest phenotyping system with disease severity analysis
## Dataset 

The dataset used in the paper can be downloaded from the following link

[One Drive](https://o365jbnu-my.sharepoint.com/:f:/g/personal/talha_student_jbnu_ac_kr/EtY7EzFK6LhEq2ibaVmK_V4BP712j8fZNUuz7DaqiZGFlA?e=QMWVhH)


The emergence of Deep Neural Networks has allowed the development of fully automated and efficient diagnostic systems for plant disease and pest phenotyping. Although previous approaches have proven to be promising, they are limited, especially in real-life scenarios, to properly diagnose and characterize the problem. In this work, we propose a framework which besides recognizing and localizing various plant abnormalities also informs the user about the severity of the diseases infecting the plant. By taking a single image as input our algorithm is able to generate detailed descriptive phrases (user-defined) that displays the location, severity stage and visual attributes of all the abnormalities that are present in the image. Our framework is comprised of three main components. One of them is a detector that accurately and efficiently recognizes and localizes the abnormalities in plants by extracting region-based anomaly features using a deep neural network based feature extractor. The second one is an encoder-decoder network that performs pixel-level analysis to generate abnormality specific severity levels. Lastly, an integration unit which aggregates the information of these units and assigns unique IDs to all the detected anomaly instances. Thus, generating descriptive sentences describing location, severity and class of anomalies infecting plants. We discuss two possible ways of utilizing the above-mentioned units in a single framework. We evaluate and analyze the efficacy of both approaches on newly constructed diverse paprika disease and pest recognition dataset, comprising six anomaly categories along with eleven different severity levels. Our algorithm achieves mean average precision of 91.7% for abnormality detection task and mean panoptic quality score of 70.78% for severity level prediction. Our algorithm provides practical and cost-efficient solution to farmers that facilitates proper handling of crops.

 [**Full paper**](https://www.frontiersin.org/articles/10.3389/fpls.2022.983625/abstract) 

![Alt text](https://www.frontiersin.org/files/Articles/983625/fpls-13-983625-HTML/image_m/fpls-13-983625-g015.jpg)

![Alt text](https://github.com/Mr-TalhaIlyas/DIANA/blob/main/Figuers/Figure%201.jpg)


",0,0,1,0,precision-agriculture,"[disease-severity-analysis, plant-anomaly, plant-disease-detection, precision-agriculture]",00000
1492,marianobonelli,marianobonelli,N/A,https://github.com/marianobonelli/marianobonelli,https://api.github.com/repos/marianobonelli/marianobonelli,,"### Mariano F. Bonelli

[<img src=""https://camo.githubusercontent.com/dd9207aae8b652b023f5cf40711ad4536a4f9b41ca5136648b6c7dda52421da2/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4d792d4c696e6b6564496e2d626c7565"" alt=""LinkedIn Badge"" data-canonical-src=""https://img.shields.io/badge/My-LinkedIn-blue"" style=""max-width: 100%;"">](https://www.linkedin.com/in/mariano-francisco-bonelli/)

Actualmente lidero el grupo DataLab en GeoAgro by TEK, enfocado en el procesamiento de datos espaciales y teledetección para mejorar la interpretación y toma de decisiones en el campo de la Agricultura de Precisión. Me encuentro próximo a graduarme como Ingeniero Agrónomo en la Facultad de Agronomía y Veterinaria de la UNRC.

",0,0,1,0,precision-agriculture,"[colab, data-science, geospatial, gis, jupyter, precision-agriculture, python]",00000
1493,canopyMissing,dtcMLOps,N/A,https://github.com/dtcMLOps/canopyMissing,https://api.github.com/repos/dtcMLOps/canopyMissing,C++ algorithm to estimate percent canopy missing of a stem tree using PCL,"# Percent canopy missing
C++ algorithm to estimate percent canopy missing of a stem tree using PCL 1.9.1 and OpenCV 4.1.0

## Input file structure support

* .pcd 

## Output file structure .txt

* percentage_canopy_missing %

## Example
<img src=""./example/reference.png"" align=""center"" height=""300"" width=""500""><br>
<img src=""./example/example0.png"" align=""center"" height=""300"" width=""500""><br>
<img src=""./example/example1.png"" align=""center"" height=""300"" width=""500""><br>
<img src=""./example/example2.png"" align=""center"" height=""400"" width=""500""><br>
<img src=""./example/example3.png"" align=""center"" height=""300"" width=""500""><br>

-------------------
## Compilation
* Set ""YOUR OWN"" PCL Build DIR in CMakeList.txt e.g: **/opt/pcl-1.9.1/build** and save it.
* Set ""YOUR OWN"" OpenCV Build DIR in CMakeList.txt e.g: **/opt/opencv-4.1.0/build** and save it.
* Create a ""build"" folder

in the main folder:

    - cd build  
    - cmake ../src/
    - make
       
        	 
### Test

    cd /build/bin
    ./canopyMissing <pcd file> <output dir> 
     
",0,0,2,0,precision-agriculture,"[cmake, cmakelists, cplusplus, opencv, opencv4, pcl, pcl-library, pcl-viewer, precision-agriculture, precision-farming, robotics, ubuntu1604]",00000
1494,EmbracingLimitedImperfectTrainingDatasets,xml94,N/A,https://github.com/xml94/EmbracingLimitedImperfectTrainingDatasets,https://api.github.com/repos/xml94/EmbracingLimitedImperfectTrainingDatasets,Embrace limited and imperfect training datasets in plant disease recognition using deep learning.,"# EmbracingLimitedImperfectDatasets

Embracing limited and imperfect datasets in plant disease recognition using deep learning.

Currently maintained by [Mingle Xu](https://xml94.github.io/ ""Personal website"").

# Motivation
>Recent advancements in deep learning have brought significant improvements to plant disease recognition.
However, achieving satisfactory performance often requires high-quality training datasets, 
which are challenging and expensive to collect. 
Consequently, the practical application of current deep learning-based methods in real-world scenarios 
is hindered by the scarcity of high-quality datasets.
Consequently, we argue that embracing non-high-quality datasets is more convincing and practical.
Although this embrace brings opportunities, new challenges exist.
A taxonomy of related challenges is, therefore, proposed to enrich our understandings.
With this perspective, we do hope that deep learning can be implemented 
in real-world applications with satisfactory performance.


# Taxonomy of the challenges

* Limited data: the training dataset is not in large-scale.
* * Class-level: consider the variation of different classes within the training dataset.
* * * ![](https://img.shields.io/badge/-Few--shot-ffe8d1): All classes have similar few annotated images, where trained models may get low performance for all classes.
* * * ![](https://img.shields.io/badge/-Class%20imbalance-ffd7e1): One class has many more annotated images than another class, where trained models may get high performance in the former class but suffer in the latter class.
* * Dataset-level: consider the diversity between the training and test datasets.
* * * ![](https://img.shields.io/badge/-Domain%20shift-red): The training and test datasets share the same label spaces but are in different distribution spaces, where trained models may get low test performance.
* * * ![](https://img.shields.io/badge/-Unknown%20class-purple): Unknown (new) classes exist in the test dataset, where trained models will consider the corresponding image into a known class and not distinguish the unknown from known classes.
* Imperfect data: the training dataset is annotated in an undesired way.
* * ![](https://img.shields.io/badge/-Incomplete%20annotation-green): Training datasets have labeled and unlabeled images simultaneously, where utilizing the unlabeled images may contribute to the test performance.
* * ![](https://img.shields.io/badge/-Inexact%20annotation-yellow): Training datasets are given with only coarse-grained annotations, where utilizing these annotations is challenging to train models.
* * ![](https://img.shields.io/badge/-Inaccurate%20annotation-blue): Some annotations may be inaccurate, where it is challenging to get decent test performance by utilizing these annotations to train models.




# Related research
",0,0,1,0,precision-agriculture,"[data-centric-ai, deep-learning, plant-disease-classification, plant-disease-detection, precision-agriculture, smart-agriculture]",00000
1495,gui-Control-points,dtcMLOps,N/A,https://github.com/dtcMLOps/gui-Control-points,https://api.github.com/repos/dtcMLOps/gui-Control-points,Gui for select image pixel reference for iTree3DMap,"# gui-Control-points
Gui for select image pixel reference for iTree3DMap. This program uses the control point registration GUI of OpenMVG as base.

----------------

## GUI
<img src=""./example/control.png"" align=""center"" height=""500"" width=""640""><br>

## Dependencies
* OpenMVG
* Cereal
* runit


## Compile
     cmake ../
     make


## Test
    usage: ./control_point_Reg <sfm data bin/xml> <output dir>
",0,0,2,0,precision-agriculture,"[cmake, cpp, gui, pcl, pcl-library, pcl-viewer, precision-agriculture, precision-farming, qt5]",00000
1496,awesome-agriculture,brycejohnston,N/A,N/A,https://api.github.com/repos/brycejohnston/awesome-agriculture,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1AC:0208:2DD717C:5DE2FE6:65223FBD.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,soil,"[N, /, A]",00000
1497,farmOS,farmOS,N/A,N/A,https://api.github.com/repos/farmOS/farmOS,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C150:7A65:2826F0:53AD54:65223FBE.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,soil,"[N, /, A]",00000
1498,gprMax,gprMax,gprMax,https://github.com/gprMax/gprMax,https://api.github.com/repos/gprMax/gprMax,gprMax is open source software that simulates electromagnetic wave propagation using the Finite-Difference Time-Domain (FDTD) method for numerical modelling of Ground Penetrating Radar (GPR),"{'message': 'Not Found', 'documentation_url': 'https://docs.github.com/rest/repos/contents#get-repository-content'}",504,504,37,29,soil,"[antenna, cuda, electromagnetic, fdtd, gpr, gpu, modelling, nvidia, python, simulation, soil]",00000
1499,pyTSEB,hectornieto,N/A,https://github.com/hectornieto/pyTSEB,https://api.github.com/repos/hectornieto/pyTSEB,A python Two Source Energy Balance model for estimation of evapotranspiration with remote sensing data,"# PyTSEB

## Synopsis

This project contains *Python* code for *Two Source Energy Balance* models (Priestley-Taylor **TSEB-PT**, 
Dual Time Difference **DTD** and TSEB with component soil and canopy temperatures **TSEB-2T**) 
for estimating sensible and latent heat flux (evapotranspiration) based on measurements of radiometric surface temperature. 

The project consists of: 

1. lower-level modules with the basic functions needed in any resistance energy balance model 

2. higher-level scripts for easily running TSEB with tabulated data and/or satellite/airborne imagery.

## Installation

Download the project to your local system, enter the download directory and then type

`python setup.py install` 

if you want to install pyTSEB and its low-level modules in your Python distribution. 

The following Python libraries will be required:

- Numpy
- Pandas
- pyPro4Sail, at [https://github.com/hectornieto/pyPro4Sail]
- GDAL, for running TSEB over an image
- pandas
- netCDF4
- bokeh

With `conda`, you can create a complete environment with
```
conda env create -f environment.yml
```

## Code Example
### High-level example

The easiest way to get a feeling of TSEB and its configuration is through the provided ipython/jupyter notebooks. 
In a terminal shell, navigate to your working folder and type

- `jupyter notebook ProcessPointTimeSeries.ipynb` 
>for configuring and running TSEB over a time series of tabulated data

- `jupyter notebook ProcessLocalImage.ipynb` 
>for configuring and running TSEB over an image/scene using local meteorological data

In addition, you can also run TSEB with the scripts *TSEB_local_image_main.py* and *TSEB_point_time_series_main.py*, 
which will read an input configuration file (defaults are *Config_LocalImage.txt* and *Config_PointTimeSeries.txt* respectively). 
You can edit these configuration files or make a copy to fit your data and site characteristics and either run any of 
these two scripts in a Python GUI or in a terminal shell:

- `python TSEB_local_image_main.py <configuration file>`
> where \<configuration file> points to a customized configuration file... leave it blank if you want to use the default 
file *Config_LocalImage.txt*

- `python TSEB_point_time_series.py <configuration file>`
> where \<configuration file> points to a customized configuration file... leave it blank if you want to use the default 
file *Config_PointTimeSeries.txt*

### Low-level example
You can run any TSEB model or any related process in python by importing the module *TSEB* from the *pyTSEB* package. 
It will also import the ancillary modules (*resitances.py* as `res`, *netRadiation* as `rad`,
*MOsimilarity.py* as `MO`, *ClumpingIndex.py* as `CI` and *meteoUtils.py* as `met`)

```python
import pyTSEB.TSEB as TSEB 
output=TSEB.TSEB_PT(Tr_K, vza, Ta_K, u, ea, p, Sdn_dir, Sdn_dif, fvis, fnir, sza, Lsky, LAI, hc, emisVeg, emisGrd, spectraVeg, spectraGrd, z_0M, d_0, zu, zt)
```

You can type
`help(TSEB.TSEB_PT)`
to understand better the inputs needed and the outputs returned

The direct and difuse shortwave radiation (`Sdn_dir`, `Sdn_dif`, `fvis`, `fnir`) and the downwelling longwave radiation (`Lsky`) can be estimated by

```python
emisAtm = TSEB.rad.calc_emiss_atm(ea,Ta_K_1) # Estimate atmospheric emissivity from vapour pressure (mb) and air Temperature (K)
Lsky = emisAtm * TSEB.met.calc_stephan_boltzmann(Ta_K_1) # in W m-2
difvis,difnir, fvis,fnir=TSEB.rad.calc_difuse_ratio(Sdn,sza,press=p, Wv=1) # fraction of difuse and PAR/NIR radiation from shortwave irradiance (W m-2, solar zenith angle, atmospheric pressure and precipitable water vapour )
Skyl=difvis*fvis+difnir*fnir # broadband difuse fraction
Sdn_dir=Sdn*(1.0-Skyl)
Sdn_dif=Sdn*Skyl
```
   
## Basic Contents
### High-level modules
- *.pyTSEB/pyTSEB.py*, class object for TSEB scripting

- *ProcessPointTimeSeries.ipynb* and *ProcessLocalImage.ipynb* notebooks for using TSEB and configuring 
TSEB through a Graphical User Interface, GUI

- *TSEB_local_image_main.py* and *TSEB_point_time_series.py*, high level scripts for running TSEB 
through a configuration file (*Config_LocalImage.txt* or *Config_PointTimeSeries.txt*)

### Low-level modules
The low-level modules in this project are aimed at providing customisation and more flexibility in running TSEB. 
The following modules are included

- *.pyTSEB/TSEB.py*
> core functions for running different TSEB models (`TSEB_PT (*args,**kwargs)`, `TSEB_2T(*args,**kwargs)`, 
`DTD (*args,**kwargs)`), or a One Source Energy Balance model (`OSEB(*args,**kwargs)`). 

- *.pyTSEB/net_radiation.py*
> functions for estimating net radiation and its partitioning between soil and canopy

- *.pyTSEB/resistances.py*
> functions for estimating the different resistances for momemtum and heat transport and surface roughness

- *.pyTSEB/MO_similarity.py*
> functions for computing adiabatic corrections for heat and momentum transport, 
Monin-Obukhov length, friction velocity and wind profiles

- *.pyTSEB/clumping_index.py*
> functions for estimating the canopy clumping index and get effective values of Leaf Area Index

- *.pyTSEB/meteo_utils.py*
> functions for estimating meteorolgical-related variables such as density of air, 
heat capacity of air or latent heat of vaporization.

## API Reference
http://pytseb.readthedocs.org/en/latest/index.html

## Main Scientific References
- Norman,  J.  M.,  Kustas,  W.  P.,  Prueger,  J.  H.,  and  Diak,  G.  R.: Surface  flux  estimation  using  radiometric  temperature:  a  dual-temperature-difference method to minimize measurement errors, Water  Resour.  Res.,  36,  2263,  doi: 10.1029/2000WR900033, 2000
- Norman,  J.,  Kustas,  W.,  and  Humes,  K.:  A  two-source  approach for estimating soil and vegetation fluxes from observations of directional radiometric surface temperature, Agr. Forest Meteorol., 77, 263–293, doi: 10.1016/0168-1923(95)02265-Y, 1995
- Kustas, W. P. and Norman, J. M.: A two-source approach for estimating turbulent fluxes using multiple angle thermal infrared observations, Water Resour. Res., 33, 1495–1508, 199
- Kustas,  W.  P.  and  Norman,  J.  M.:  Evaluation  of  soil  and  vegetation heat flux prediction using a simple two-source model with radiometric  temperatures  for  partial  canopy  cover,  Agr.  Forest Meteorol., 94, 13–29, 199
- Guzinski, R., Nieto, H., Stisen, S., and Fensholt, R.: Inter-comparison of energy balance and hydrological models for land surface energy flux estimation over a whole river catchment, Hydrol. Earth Syst. Sci., 19, 2017-2036, doi:10.5194/hess-19-2017-2015, 2015.
- William P. Kustas, Hector Nieto, Laura Morillas, Martha C. Anderson, Joseph G. Alfieri, Lawrence E. Hipps, Luis Villagarcía, Francisco Domingo, Monica Garcia: Revisiting the paper “Using radiometric surface temperature for surface energy flux estimation in Mediterranean drylands from a two-source perspective”, Remote Sensing of Environment, In Press. doi:10.1016/j.rse.2016.07.024.


## Tests
The folder *./Input* contains examples for running TSEB in a tabulated time series (*ExampleTableInput.txt*) 
and in an image (*ExampleImage_\< variable >.tif*). Just run the high-level scripts with the configuration files 
provided by default and compare the resulting outputs with the files stored in *./Output/*

## Contributors
- **Hector Nieto** <hnieto@ias.csic.es> <hector.nieto.solana@gmail.com> main developer
- **Radoslaw Guzinski** main developer, tester
- **William P. Kustas** TSEB modeling, tester 
- **Ana Andreu** tester

## License
pyTSEB: a Python Two Source Energy Balance Model

Copyright 2016 Hector Nieto and contributors.
    
This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.
",118,118,21,1,soil,"[canopy, evapotranspiration, heat, radiometric-temperatures, satellite-imagery, soil, source-energy-balance]",00000
1500,HumiditySensor,gabrieldim,N/A,https://github.com/gabrieldim/HumiditySensor,https://api.github.com/repos/gabrieldim/HumiditySensor,Embedded systems using STM32 boards.,"# HumiditySensor - “Embedded systems”

- First week: <br> 
The first week was the introduction to embedded systems by getting acquainted with the STM32 boards on which the whole project was based. This week's activities were divided into two parts: in the first part of the day before the break there were several presentations that would help us to make the main project we chose in the second week, and in the second part we tried and saw the application of the previously presented material. <br> 
I worked with the STM32L100C board in the first week. I learned solidly how to use Atollic TrueSTUDIO, STM32CubeMX and TouchGFX, which I initially had difficulty with.
I also had the opportunity during the whole internship to keep my board and try to learn additional things after the working day. <br> 
At the end of the first week we had project proposals from the mentor and we could think for a few days on what topic we would like to work on.


- Second week: <br> 
At the beginning of the second week we divided into groups and chose topics. I was working with another colleague on a team on ""Automated Smart Irrigation System"".
We first made the project on the STM32L100C board, but since this board did not have a built-in screen we switched to the STM32f769i Discovery in order for the final 
presentation to be better. In the main program I enabled to read the values ​​given by the sensor and I also performed the mapping of the same.  <br> 
We set a condition for soil moisture in order to prevent the plants from drying out, and we prevented that with a special pump that irrigated the 
soil if the condition is met, ie the humidity is lower than we want. Since every plant needs a different level of soil moisture, we set an interrupt which, 
by clicking on the button that is built into the plate, increases the limit by 5% until we reach 100% and then returns to the initial set value.


- Third week: <br> 
In the third week we made a display of the change in humidity on the screen from the board itself in the form of a graph that when it reached the end of 
the screen we took the second part of the values and put them at the beginning so that the measurements could continue and be seen. part of the previous ones. <br> 
During this week we have created special conditions with which appropriate messages appear on the screen. For example a message if the sensor is not in the 
ground or the sensor is not well connected and so on.


- Fourth week: <br> 
Last week we tested the project and saw what little things we could add to make it look better (such as changing the colors on the screen).  <br> 
Once we were sure that everything was working as we wanted we had to make a presentation of what we had made.
 <br> 

 => Gabriel Dimitrievski
",109,109,2,0,soil,"[board, embedded-systems, humidity, humidity-sensor, plant, sensor, soil, soil-moisture, stm, stm32]",00000
1501,soilDB,ncss-tech,ncss-tech,https://github.com/ncss-tech/soilDB,https://api.github.com/repos/ncss-tech/soilDB,soilDB: Simplified Access to National Cooperative Soil Survey Databases,"[![CRAN Version
(Stable)](http://www.r-pkg.org/badges/version-ago/soilDB)](https://cran.r-project.org/package=soilDB)
[![CRAN
status](https://badges.cranchecks.info/worst/soilDB.svg)](https://cran.r-project.org/web/checks/check_results_soilDB.html)
[![Development
Version](https://ncss-tech.r-universe.dev/badges/soilDB)](https://ncss-tech.r-universe.dev/)
[![R-CMD-check Build
Status](https://github.com/ncss-tech/soilDB/workflows/R-CMD-check/badge.svg)](https://github.com/ncss-tech/soilDB/actions)
[![Total CRAN
Downloads](http://cranlogs.r-pkg.org/badges/grand-total/soilDB)](https://cran.r-project.org/package=soilDB)
![CRAN/METACRAN](https://img.shields.io/cran/l/soilDB) [![soilDB
Manual](https://img.shields.io/badge/docs-HTML-informational)](https://ncss-tech.github.io/soilDB/)

## Installation

Get the stable version (2.7.8) from CRAN:

    install.packages('soilDB', dependencies = TRUE)

Get the development version from GitHub:

    remotes::install_github(""ncss-tech/soilDB"", dependencies = FALSE)

## Website

-   CRAN Package: <https://cran.r-project.org/package=soilDB>
-   Package Manual: <http://ncss-tech.github.io/soilDB/>
-   Algorithms for Quantitative Pedology (AQP) Project:
    <http://ncss-tech.github.io/AQP/>

## Citation

    ## To cite soilDB in publications use:
    ## 
    ##   Beaudette, D., Skovlin, J., Roecker, S., Brown, A. (2023). soilDB:
    ##   Soil Database Interface. R package version 2.7.8.
    ##   <https://CRAN.R-project.org/package=soilDB>
    ## 
    ## A BibTeX entry for LaTeX users is
    ## 
    ##   @Manual{,
    ##     title = {soilDB: Soil Database Interface},
    ##     author = {Dylan Beaudette and Jay Skovlin and Stephen Roecker and Andrew Brown},
    ##     note = {R package version 2.7.8},
    ##     url = {https://CRAN.R-project.org/package=soilDB},
    ##     year = {2023},
    ##   }

## soilDB 2.7.9

<!-- ### Notices on Database Interfaces -->
<!-- #### NASIS -->
<!-- #### Soil Data Access (SDA) -->
<!-- #### SoilWeb API -->
<!-- #### MS Access -->

## Functions by Data Source

-   Soil Data Access (SDA)
    -   [`fetchSDA`](http://ncss-tech.github.io/soilDB/reference/fetchSDA.html)
    -   [`fetchSDA_spatial`](http://ncss-tech.github.io/soilDB/reference/fetchSDA_spatial.html)
    -   [`SDA_query`](http://ncss-tech.github.io/soilDB/reference/SDA_query.html)
    -   [`SDA_spatialQuery`](http://ncss-tech.github.io/soilDB/reference/SDA_spatialQuery.html)
    -   “SSURGO On Demand” Queries
        -   [`get_SDA_hydric`](http://ncss-tech.github.io/soilDB/reference/get_SDA_hydric.html)
        -   [`get_SDA_interpretation`](http://ncss-tech.github.io/soilDB/reference/get_SDA_interpretation.html)
        -   [`get_SDA_muaggatt`](http://ncss-tech.github.io/soilDB/reference/get_SDA_muaggatt.html)
        -   [`get_SDA_pmgroupname`](http://ncss-tech.github.io/soilDB/reference/get_SDA_pmgroupname.html)
        -   [`get_SDA_property`](http://ncss-tech.github.io/soilDB/reference/get_SDA_property.html)
        -   [`get_SDA_coecoclass`](http://ncss-tech.github.io/soilDB/reference/get_SDA_coecosite.html)
        -   [`get_SDA_metrics`](http://ncss-tech.github.io/soilDB/reference/get_SDA_metrics.html)
        -   [`get_SDA_cosurfmorph`](http://ncss-tech.github.io/soilDB/reference/get_SDA_cosurfmorph.html)
-   SSURGO Web Soil Survey
    -   [`downloadSSURGO`](http://ncss-tech.github.io/soilDB/reference/downloadSSURGO.html)
    -   [`createSSURGO`](http://ncss-tech.github.io/soilDB/reference/createSSURGO.html)
-   SSURGO Local Geodatabases
    -   [`fetchGDB`](http://ncss-tech.github.io/soilDB/reference/fetchGDB.html)
-   ROSETTA
    -   [`ROSETTA`](http://ncss-tech.github.io/soilDB/reference/ROSETTA.html)
-   SSURGO/KSSL via SoilWeb
    -   [`fetchKSSL`](http://ncss-tech.github.io/soilDB/reference/fetchKSSL.html)
    -   [`fetchOSD`](http://ncss-tech.github.io/soilDB/reference/fetchOSD.html)
    -   [`siblings`](http://ncss-tech.github.io/soilDB/reference/siblings.html)
    -   [`OSDquery`](http://ncss-tech.github.io/soilDB/reference/OSDquery.html)
    -   [`seriesExtent`](http://ncss-tech.github.io/soilDB/reference/seriesExtent.html)
    -   [`taxaExtent`](http://ncss-tech.github.io/soilDB/reference/taxaExtent.html)
    -   [`mukey.wcs`](http://ncss-tech.github.io/soilDB/reference/mukey.wcs.html)
    -   [`ISSR800.wcs`](http://ncss-tech.github.io/soilDB/reference/ISSR800.wcs.html)
-   NASIS WWW interface
    -   [`parseWebReport`](http://ncss-tech.github.io/soilDB/reference/parseWebReport.html)
    -   [`fetchNASISWebReport`](http://ncss-tech.github.io/soilDB/reference/fetchNASISWebReport.html)
-   SCAN/SNOTEL
    -   [`fetchSCAN`](http://ncss-tech.github.io/soilDB/reference/fetchSCAN.html)
    -   [`SCAN_SNOTEL_metadata`](http://ncss-tech.github.io/soilDB/reference/SCAN_SNOTEL_metadata.html)
-   Henry Mount Soil and Water Database
    -   [`fetchHenry`](http://ncss-tech.github.io/soilDB/reference/fetchHenry.html)
-   NASIS local database
    -   [`fetchNASIS`](http://ncss-tech.github.io/soilDB/reference/fetchNASIS.html)
    -   [`dbConnectNASIS`](http://ncss-tech.github.io/soilDB/reference/dbConnectNASIS.html)
        (alias `NASIS()`)
    -   [`dbQueryNASIS`](http://ncss-tech.github.io/soilDB/reference/dbQueryNASIS.html)
    -   [`createStaticNASIS`](http://ncss-tech.github.io/soilDB/reference/createStaticNASIS.html)
-   SoilGrids
    -   [`fetchSoilGrids`](http://ncss-tech.github.io/soilDB/reference/fetchSoilGrids.html)

## Miscellaneous Functions

-   [`estimateSTR`](http://ncss-tech.github.io/soilDB/reference/estimateSTR.html)
-   [`STRplot`](http://ncss-tech.github.io/soilDB/reference/STRplot.html)
-   [`KSSL_VG_model`](http://ncss-tech.github.io/soilDB/reference/KSSL_VG_model.html)
-   [`simplifyFragmentData`](http://ncss-tech.github.io/soilDB/reference/simplifyFragmentData.html)
-   [`simplifyColorData`](http://ncss-tech.github.io/soilDB/reference/simplifyColorData.html)
-   [`uncode`](http://ncss-tech.github.io/soilDB/reference/uncode.html)
-   [`code`](http://ncss-tech.github.io/soilDB/reference/code.html)
-   [`get_NOAA_GHCND`](http://ncss-tech.github.io/soilDB/reference/get_NOAA_GHCND.html)

## Tutorials and Demonstrations

-   [fetchKSSL](http://ncss-tech.github.io/AQP/soilDB/KSSL-demo.html)
-   [SDA\_query](http://ncss-tech.github.io/AQP/soilDB/SDA-tutorial.html)
-   [fetchOSD](http://ncss-tech.github.io/AQP/sharpshootR/OSD-dendrogram.html)
-   [SCAN/SNOTEL
    Data](http://ncss-tech.github.io/AQP/soilDB/fetchSCAN-demo.html)

## Related Packages

-   [aqp](https://github.com/ncss-tech/aqp)
-   [sharpshootR](https://github.com/ncss-tech/sharpshootR)
-   [SoilTaxonomy](https://github.com/ncss-tech/SoilTaxonomy)
",67,67,7,35,soil,"[cran, kssl, nasis, nrcs, r, soil, soil-data-access, soil-survey, soilweb, sql, usda]",00000
1502,srdb,bpbond,N/A,https://github.com/bpbond/srdb,https://api.github.com/repos/bpbond/srdb,Global soil respiration database,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C1B0:28F2:2A29570:5652819:652242E7.'}",46,46,10,22,soil,"[carbon-cycle, data, global-database, science, soil, soil-respiration]",00000
1503,aqp,ncss-tech,N/A,N/A,https://api.github.com/repos/ncss-tech/aqp,N/A,"
<!-- README.md is generated from README.Rmd. Please edit that file -->

[![R build
status](https://github.com/ncss-tech/aqp/workflows/R-CMD-check/badge.svg)](https://github.com/ncss-tech/aqp/actions)
[![CRAN_Status_Badge](http://www.r-pkg.org/badges/version/aqp)](http://cran.r-project.org/web/packages/aqp)
[![Total_Downloads](http://cranlogs.r-pkg.org/badges/grand-total/aqp)](https://cran.r-project.org/package=aqp)
[![aqp
Manual](https://img.shields.io/badge/docs-HTML-informational)](http://ncss-tech.github.io/aqp/)

# Algorithms for Quantitative Pedology (aqp) package for R

<!-- aqp hexsticker! -->

<a href=""https://raw.githubusercontent.com/ncss-tech/aqp/master/misc/hexstickers/aqp_sticker_v2.png"">
<img src = ""https://raw.githubusercontent.com/ncss-tech/aqp/master/misc/hexstickers/aqp_sticker_v2.png"" alt = ""aqp hexsticker (Paxton, Montauk, Woodbridge, Ridgebury, Whitman, Catden soil series dendogram)"" title = ""aqp hexsticker (Paxton, Montauk, Woodbridge, Ridgebury, Whitman, Catden soil series dendogram)"" width = ""45%"" height = ""45%"" hspace=""15"" vspace=""15"" align=""right""/></a>

The Algorithms for Quantitative Pedology (AQP) project was started in
2009 to organize a loosely-related set of concepts and source code on
the topic of soil profile visualization, aggregation, and classification
into this package (aqp). Over the past 8 years, the project has grown
into a suite of related R packages that enhance and simplify the
quantitative analysis of soil profile data. Central to the AQP project
is a new vocabulary of specialized functions and data structures that
can accommodate the inherent complexity of soil profile information;
freeing the scientist to focus on ideas rather than boilerplate data
processing tasks <doi:10.1016/j.cageo.2012.10.020>. These functions and
data structures have been extensively tested and documented, applied to
projects involving hundreds of thousands of soil profiles, and deeply
integrated into widely used tools such as SoilWeb
<https://casoilresource.lawr.ucdavis.edu/soilweb-apps/>. Components of
the AQP project (aqp, soilDB, sharpshootR, soilReports packages) serve
an important role in routine data analysis within the USDA-NRCS Soil
Science Division. The AQP suite of R packages offer a convenient
platform for bridging the gap between pedometric theory and practice.

## Installation

Get the stable version from CRAN:

``` r
install.packages('aqp', dep=TRUE)
```

Get the development version from Github, after installing the CRAN
version + dependencies:

``` r
remotes::install_github(""ncss-tech/aqp"", dependencies=FALSE, upgrade=FALSE, build=FALSE)
```

## Website

<http://ncss-tech.github.io/AQP/>

## Examples

``` r
library(aqp)

# example data from three official series descriptions
data(""osd"")

# simulate 2 copies of each
# using horizon boundary distinctness offsets
set.seed(10101)
x <- perturb(osd, n = 2, boundary.attr = 'hzd', min.thickness = 5)

# tighter margins
par(mar = c(0, 0, 1, 0))

# adjust default style
# depict truncation at 175cm with ragged bottom
plotSPC(
  x, 
  name.style = 'center-center', 
  cex.names = 1,
  width = 0.33,
  cex.id = 0.9,
  hz.distinctness.offset = 'hzd', 
  max.depth = 175, 
  depth.axis = FALSE, 
  hz.depths = TRUE
)
```

<img src=""man/figures/README-unnamed-chunk-2-1.svg"" style=""display: block; margin: auto;"" />

## Install Suggested Packages

``` r
p <- c(""colorspace"", ""ape"", ""soilDB"", ""latticeExtra"", ""tactile"", ""compositions"", 
""sharpshootR"", ""markovchain"", ""xtable"", ""testthat"", ""Gmedian"", 
""farver"", ""Hmisc"", ""tibble"", ""RColorBrewer"", ""scales"", ""digest"", 
""MASS"", ""mpspline2"", ""soiltexture"", ""knitr"", ""rmarkdown"")

install.packages(p)
```

## Citation

``` r
citation(""aqp"")
#> 
#> To cite aqp in publications use:
#> 
#>   Beaudette, D., Roudier, P., Brown, A. (2023). aqp: Algorithms for
#>   Quantitative Pedology. R package version 2.0.
#>   <https://CRAN.R-project.org/package=aqp>
#> 
#>   Beaudette, D.E., Roudier, P., O'Geen, A.T. Algorithms for
#>   quantitative pedology: A toolkit for soil scientists, Computers &
#>   Geosciences, Volume 52, March 2013, Pages 258-268, ISSN 0098-3004,
#>   http://dx.doi.org/10.1016/j.cageo.2012.10.020.
#> 
#> To see these entries in BibTeX format, use 'print(<citation>,
#> bibtex=TRUE)', 'toBibtex(.)', or set
#> 'options(citation.bibtex.max=999)'.
```

## Related Packages

- [soilDB](https://github.com/ncss-tech/soilDB)
- [sharpshootR](https://github.com/ncss-tech/sharpshootR)

## Vignettes

- [Introduction to SoilProfileCollection
  Objects](https://ncss-tech.github.io/aqp/articles/Introduction-to-SoilProfileCollection-Objects.html)
- [Numerical Classification of Soil
  Profiles](https://ncss-tech.github.io/aqp/articles/NCSP.html)
- [Overlapping
  Annotation](https://ncss-tech.github.io/aqp/articles/label-placement.html)
- [What is new in aqp
  2.0?](https://ncss-tech.github.io/aqp/articles/new-in-aqp-2.html)

## Tutorials

- [Soil Profile
  Sketches](https://ncss-tech.github.io/AQP/aqp/sketches.html)
- [Assigning Generalized Horizon
  Labels](https://ncss-tech.github.io/AQP/aqp/gen-hz-assignment.html)
- [Visualization of Horizon
  Boundaries](https://ncss-tech.github.io/AQP/aqp/hz-boundaries.html)
- [Mixing Munsell Colors in
  {aqp}](https://ncss-tech.github.io/AQP/aqp/mix-colors.html)
- [Theoretical Water Retention
  Curves](https://ncss-tech.github.io/AQP/aqp/water-retention-curves.html)
- [Soil Texture Vizualization
  Ideas](https://ncss-tech.github.io/AQP/aqp/soiltexture-vizualization-ideas.html)

## Related Presentations / Posters

- [Numerical Classification of Soil Profiles (2023 NCSS
  Meetings)](https://ncss-tech.github.io/AQP/presentations/2023-NCSS-NCSP-poster.pdf)

## aqp in the Wild

- <https://www.pnas.org/content/115/26/6751>
- [as found by
  Scopus](https://www.scopus.com/results/citedbyresults.uri?sort=plf-f&cite=2-s2.0-84871520076&src=s&imp=t&sid=77a47f45322dcfd492772ab2198cbd60&sot=cite&sdt=a&sl=0&origin=inward&editSaveSearch=&txGid=2178c12c5b47dbcdd8b2f12cd9a81478)
- [as found by Google
  Scholar](https://scholar.google.com/scholar?cites=14155970656017510549&as_sdt=5,29&sciodt=0,29&hl=en)
- <http://www.scielo.br/scielo.php?script=sci_arttext&pid=S2179-80872019000100121>
",N/A,N/A,N/A,N/A,soil,"[N, /, A]",00000
1504,brukeropusreader,qedsoftware,N/A,N/A,https://api.github.com/repos/qedsoftware/brukeropusreader,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C1B9:2B71:2768B51:50DD65D:652242E8.'}",N/A,N/A,N/A,N/A,soil,"[N, /, A]",00000
1505,Crop-Recommender,gabbygab1233,N/A,https://github.com/gabbygab1233/Crop-Recommender,https://api.github.com/repos/gabbygab1233/Crop-Recommender,AI Application that can predict the most suitable crops to grow in particular farm based on various parameters.,"[![Hits](https://hits.seeyoufarm.com/api/count/incr/badge.svg?url=https%3A%2F%2Fgithub.com%2Fgabbygab1233%2FCrop-Recommendation&count_bg=%23161716&title_bg=%23095202&icon=leaflet.svg&icon_color=%23E7E7E7&title=Crop+Recommender&edge_flat=true)](https://hits.seeyoufarm.com)

# Crop Recommendation Using Machine Learning

Crop recommendation is one of the most important aspects of precision agriculture. Crop recommendations are based on a number of factors. Precision agriculture seeks to define these criteria on a site-by-site basis in order to address crop selection issues. While the ""site-specific"" methodology has improved performance, there is still a need to monitor the systems' outcomes.Precision agriculture systems aren't all created equal. However, in agriculture, it is critical that the recommendations made are correct and precise, as errors can result in significant material and capital loss.


<p align=""center"">
<img src=""https://www.opendei.eu/wp-content/uploads/2020/11/img-Yanewn0ORWCx4Jlm-w800.jpg"" />
</p>
This application will assist farmers in increasing agricultural productivity, preventing soil degradation in cultivated land, reducing chemical use in crop production, and maximizing water resource efficiency.

# [Dataset]()
This dataset was build by augmenting datasets of rainfall, climate and fertilizer data available for India.

### [Attributes information:]()

* **N** - Ratio of Nitrogen content in soil
* **P** - Ratio of Phosphorous content in soil
* **K** - Ratio of Potassium content in soil
* **Temperature** -  temperature in degree Celsius
* **Humidity** - relative humidity in %
* **ph** - ph value of the soil
* **Rainfall** - rainfall in mm 

### [Experiment Results:]()
* **Data Analysis**
    * All columns contain outliers except for N.
 * **Performance Evaluation**
    * Splitting the dataset by 80 % for training set and 20 % validation set.
 * **Training and Validation**
    * GausianNB gets a higher accuracy score than other classification models.
    * GaussianNB ( 99 % accuracy score )
 * **Performance Results**
    * Training Score: 99.5%
    * Validation Score: 99.3%

 
# Demo
Live Demo: https://ai-crop-recommender.herokuapp.com/

![](https://i.imgur.com/TnsSPQy.png)

# References
* https://www.prolim.com/crop-recommendation-system-using-machine-learning-for-digital-farming/
* https://www.irjet.net/archives/V4/i12/IRJET-V4I12179.pdf
* http://sersc.org/journals/index.php/IJAST/article/view/30399
* https://www.researchgate.net/publication/345247916_Crop_Plantation_Recommendation_using_Feature_Extraction_and_Machine_Learning_Techniques
* https://ieeexplore.ieee.org/document/8768790
* https://towardsdatascience.com/farmeasy-crop-recommendation-portal-for-farmers-48a8809b421c
* http://agri.ckcest.cn/ass/8185d605-6c4d-4d8a-b280-c867c2304d42.pdf
* https://www.kaggle.com/atharvaingle/crop-recommendation-dataset
",39,39,2,2,soil,"[ai, ai-in-agriculture, crop-recommender, farming, machine-learning, modeling, prediction, python, soil, streamlit-application]",00000
1506,ossl-manual,soilspectroscopy,N/A,N/A,https://api.github.com/repos/soilspectroscopy/ossl-manual,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C1E6:5C75:276A728:50E2FA8:652242E8.'}",N/A,N/A,N/A,N/A,soil,"[N, /, A]",00000
1507,Smart_Farming,heyitsdsp,N/A,N/A,https://api.github.com/repos/heyitsdsp/Smart_Farming,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C16A:336C:2D0720A:5C4EE78:6522416B.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,soil,"[N, /, A]",00000
1508,stats_for_soil_survey,ncss-tech,N/A,N/A,https://api.github.com/repos/ncss-tech/stats_for_soil_survey,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C129:7039:2783C08:5110BC7:652242E9.'}",N/A,N/A,N/A,N/A,soil,"[N, /, A]",00000
1509,CRITERIA3D,ARPA-SIMC,N/A,N/A,https://api.github.com/repos/ARPA-SIMC/CRITERIA3D,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C1BA:59CA:263E855:4E8C565:652242E9.'}",N/A,N/A,N/A,N/A,soil,"[N, /, A]",00000
1510,CNN-LSTM_for_DSM,leizhang-geo,N/A,N/A,https://api.github.com/repos/leizhang-geo/CNN-LSTM_for_DSM,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C11C:6459:266BB51:4EF56AA:652242EA.'}",N/A,N/A,N/A,N/A,soil,"[N, /, A]",00000
1511,SOC-Mapping-Cookbook,FAO-GSP,N/A,N/A,https://api.github.com/repos/FAO-GSP/SOC-Mapping-Cookbook,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C124:9CF4:280A0FC:5212081:652242EB.'}",N/A,N/A,N/A,N/A,soil,"[N, /, A]",00000
1512,SMAP-HydroBlocks_postprocessing,NoemiVergopolan,N/A,N/A,https://api.github.com/repos/NoemiVergopolan/SMAP-HydroBlocks_postprocessing,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C142:3996:2629F35:4E54DB8:652242EB.'}",N/A,N/A,N/A,N/A,soil,"[N, /, A]",00000
1513,slga,obrl-soil,N/A,N/A,https://api.github.com/repos/obrl-soil/slga,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C1BF:04F2:272A9B7:505ACD8:652242EC.'}",N/A,N/A,N/A,N/A,soil,"[N, /, A]",00000
1514,PySawit,cbsteh,N/A,N/A,https://api.github.com/repos/cbsteh/PySawit,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1F4:47EA:269819A:4F47798:65223FDF.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,soil,"[N, /, A]",00000
1515,soilpalettes,kaizadp,N/A,N/A,https://api.github.com/repos/kaizadp/soilpalettes,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C1C2:75D0:2643D5A:4EA0C95:652242EC.'}",N/A,N/A,N/A,N/A,soil,"[N, /, A]",00000
1516,sidb,SoilBGC-Datashare,N/A,N/A,https://api.github.com/repos/SoilBGC-Datashare/sidb,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C1AF:3996:262A0CB:4E55112:652242ED.'}",N/A,N/A,N/A,N/A,soil,"[N, /, A]",00000
1517,curve_number_generator,ar-siddiqui,N/A,N/A,https://api.github.com/repos/ar-siddiqui/curve_number_generator,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C15F:3D80:271BA7D:503E396:652242EE.'}",N/A,N/A,N/A,N/A,soil,"[N, /, A]",00000
1518,GDAY,mdekauwe,N/A,N/A,https://api.github.com/repos/mdekauwe/GDAY,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C196:6EFD:254AD74:4CAE13C:652242EE.'}",N/A,N/A,N/A,N/A,soil,"[N, /, A]",00000
1519,SOC-DRaHR,ISCN,N/A,N/A,https://api.github.com/repos/ISCN/SOC-DRaHR,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C1FC:1B08:280CA55:520D877:652242EF.'}",N/A,N/A,N/A,N/A,soil,"[N, /, A]",00000
1520,farm-monitoring-system,apoorvtripathi1999,N/A,https://github.com/apoorvtripathi1999/farm-monitoring-system,https://api.github.com/repos/apoorvtripathi1999/farm-monitoring-system,Farm Monitoring System uses arduino ide and basic sensor modules to address various issues of farming.,"# farm-monitoring-system
The farm monitoring system is a mixture of hardware and software additives. The hardware part includes embedded systems and software program is the Arduino ide.The Arduino ide displays readings from sensors are inserted using the hardware.The special sensors used are temperature and humidity sensor,pir sensor and soil moisture 
sensor. The facts gathered with the aid of the sensors is sent to the Arduino UNO microcontroller ATmega328.The gathered information may be displayed in a Arduino IDE. A GSM module is hooked up with the Arduino to facilitate messaging service which updates the farmers each 10 seconds approximately the climate conditions of the subject.
IV.HARDWARE USED
This project is aided with many hardwares. This proposed technology is an amalgamation of different sensors, microcontroller and communication medium to help the farmers to work on their farms.

A.Arduino uno

Arduino is a microcontroller to control the working of the sensors and manage the working of the device. The Uno version of Arduino is implemented in this project. It was developed by Arduino CC. The Arduino board comes with various number of pins. The pins are categorized as output and input pins. The input pins ac cepts digital as well as analog pins. It has 14 digital pins and 
6 analog pins. It accepts 7 to 20 volts of power for working. It also has an USB port. The Uno was the first version of Arduino to be introduced in the Arduino family. 

B.DHT11 Temperature And Humidity Sensor

The DHT11 Temperature And Humidity sensor is used to sense temperature and humidity present in the atmosphere. It has 3 pins generally. One pin is used for transmitting signals, the next pin is used to receive signals and the last pin is data transfer. It can be used for prolonged time period. It gives approximate results. It regularly sends information to Arduino Uno. The information
consists the signals which contain the values gathered about temperature and humidity. It is reliable on nature. It gives a very fast response. 

C.Soil Moisture sensor

The Soil Moisture sensor is used to sense moisture content in the soil. It checks the volume of water content or moisture present in the soil. The calculations are done in the soil moisture sensor through coefficients. It estimates the volume of water content in the soil. It detects the water content in the soil and gets and sends the analog signals which is shown digitally. It transmits
the the signals containing information or data or values of the condition of soil to Arduino to futher process it and display.

D.PIR Sensor

PIR sensor stands for Passive Infrared Sensor. It detects the movement around it and sends the signals accordingly. It radiates electromagnetic radiation. It hits the object and comes back to the PIR sensor telling that there is presence of an object in a specified range. An led or Buzzer can be attached with PIR sensor so that the hindrance can be detected easily. It will help the farmer to know if any animal has broken into field and is destroying  crops. In this way the farmer can save his crops.

E.GSM Shield
The GSM Shield is used as a method of communication in this proposed technology. The GSM Shield is sed to send text messages to the farmer’s cell phone about the conditions of the temperature, humidity soil and field area. A separate coding has to be done for gsm shield in Arduino. It needs a sim to implement it. The number of the sim has to be fed in the coding. The number would belong to
farmer to which the messages has to be sent. The values detected and transmitted by the sensors to Arduino is sent by the gsm to the cell phone. Hence it uses a network which does not require internet and overcpmes the biggest loop hole of projects of this domain. 
It can also be used to make voice calls. It is bas3d on radio modem M10 Quectel. It incorporates AT Commands. It also has several pins to connect to. It uses TCP and UDP protocol for sending data packets. It uses HTTP which is HyperText Transfer Protocol.


The Farm Monitoring System can be used for destiny factors of agriculture. This would be a relief for farmers since it decreases the load of manual efforts A gadget to      screen moisture levels within the soil changed into constructed and the assignment furnished an possibility to take a look at        the prevailing structures, at the side of their features anddownsides. The stated gadget 
may be used to turn on/off the water sprinkler in keeping with soil moisture levels thereby automating the technique of 
irrigation that is one of the most time ingesting activities in farming. Agriculture is one of the most effort-consuming hobby.     The device makes use of statistics from soil moisture sensors to irrigate soil FUTURE SCOPE
The proposed assignment may be further greater with the aid of including pump to  the       machine to facilitate computerized irrigation. The automated irrigation  device may be triggered when the moisture      content of the soil is going under the brink       stage.  The threshold degree can be decided    in the code written for Arduino. So whenever the fee for moisture goes under the brink
degree, the pump gets mechanically on and       irrigation is performed to an ok  degree.To improve the efficiency and 
effectiveness of the machine, the noted recommendations can be placed into attention. Alternative of controlling the water pump may be given to the farmer by way of which they are able to turn on or off the pump to be able to start or prevent the manner of irrigation without being there on     farm at that gift time. The farmer can know   earlier about the negative climate situations. In such 
instances farmer might also want to    forestall the machine remotely or routinely. The concept of the usage of IOT for 
irrigation can be prolonged in addition to  other tasks in farming together with farm   animals management, fireplace detection and climate manage.This could limit human intervention in   farming sports.
#For opening 
1. Download Arduino Ide from https://www.arduino.cc/en/Main/Software .
2. Import the  	DHT ,GSM_GPRS_GPS_Shield_GSMSHIELD libraries(copy and paste the folder to the library folder of the directory of your arduino ide).
3. open the arduino_code.ino file .
",13,13,4,1,soil,"[arduino, arduino-ide, arduino-uno, college-project, dht11, farming, gsm-shield, iot, iot-application, iot-platform, moisture-sensor, soil]",00000
1521,soil_logr,Open-Source-Agriculture,N/A,N/A,https://api.github.com/repos/Open-Source-Agriculture/soil_logr,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C15E:38A4:2BAC58D:599E3BD:65223FEA.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,soil,"[N, /, A]",00000
1522,Soil-Carbon-Debt,whrc,N/A,N/A,https://api.github.com/repos/whrc/Soil-Carbon-Debt,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C1A5:4A15:2905C79:540D726:652242EF.'}",N/A,N/A,N/A,N/A,soil,"[N, /, A]",00000
1523,hwsdr,bluegreen-labs,N/A,N/A,https://api.github.com/repos/bluegreen-labs/hwsdr,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C109:27B4:256122E:4CD5964:652242F0.'}",N/A,N/A,N/A,N/A,soil,"[N, /, A]",00000
1524,MAIZSIM,USDA-ARS-ACSL,N/A,N/A,https://api.github.com/repos/USDA-ARS-ACSL/MAIZSIM,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C1C8:7E90:26CB42D:4F8BAA5:652242F1.'}",N/A,N/A,N/A,N/A,soil,"[N, /, A]",00000
1525,DEMENTpy,DEMENT-Model,N/A,N/A,https://api.github.com/repos/DEMENT-Model/DEMENTpy,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C19A:049C:270BDA7:5027E2E:652242F1.'}",N/A,N/A,N/A,N/A,soil,"[N, /, A]",00000
1526,CRITERIA1D,ARPA-SIMC,N/A,N/A,https://api.github.com/repos/ARPA-SIMC/CRITERIA1D,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C13C:27B4:25613CE:4CD5CBE:652242F2.'}",N/A,N/A,N/A,N/A,soil,"[N, /, A]",00000
1527,SoilTaxonomy,ncss-tech,N/A,N/A,https://api.github.com/repos/ncss-tech/SoilTaxonomy,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C145:5173:24D524D:4BB991A:652242F2.'}",N/A,N/A,N/A,N/A,soil,"[N, /, A]",00000
1528,febr-package,Laboratorio-de-Pedometria,N/A,N/A,https://api.github.com/repos/Laboratorio-de-Pedometria/febr-package,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C1DD:04F2:272AFA4:505B935:652242F3.'}",N/A,N/A,N/A,N/A,soil,"[N, /, A]",00000
1529,Soil,inad9300,N/A,N/A,https://api.github.com/repos/inad9300/Soil,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C146:8A0D:282A91E:5264666:652242F3.'}",N/A,N/A,N/A,N/A,soil,"[N, /, A]",00000
1530,soilReports,ncss-tech,N/A,N/A,https://api.github.com/repos/ncss-tech/soilReports,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C1EA:629D:45760E0:8CF2562:652242F4.'}",N/A,N/A,N/A,N/A,soil,"[N, /, A]",00000
1531,Open-Bodem-Index-Calculator,AgroCares,N/A,N/A,https://api.github.com/repos/AgroCares/Open-Bodem-Index-Calculator,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C14C:7E09:25E5B27:4E18BF6:65223FF6.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,soil,"[N, /, A]",00000
1532,sample-cpt-interpreter,viktor-platform,N/A,N/A,https://api.github.com/repos/viktor-platform/sample-cpt-interpreter,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C1EF:679F:2ABDACA:57679EF:652242F5.'}",N/A,N/A,N/A,N/A,soil,"[N, /, A]",00000
1533,soil-pit,ncss-tech,N/A,N/A,https://api.github.com/repos/ncss-tech/soil-pit,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C1DE:75D0:26445E3:4EA1E39:652242F5.'}",N/A,N/A,N/A,N/A,soil,"[N, /, A]",00000
1534,opengl-mingw-boilerplate,RainEggplant,N/A,N/A,https://api.github.com/repos/RainEggplant/opengl-mingw-boilerplate,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C1DD:04F2:272B1D9:505BDC8:652242F6.'}",N/A,N/A,N/A,N/A,soil,"[N, /, A]",00000
1535,soilc-midwest,Science-for-Nature-and-People,N/A,N/A,https://api.github.com/repos/Science-for-Nature-and-People/soilc-midwest,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C1AF:3996:262A928:4E56280:652242F6.'}",N/A,N/A,N/A,N/A,soil,"[N, /, A]",00000
1536,SoilSamples,OpenGeoHub,N/A,N/A,https://api.github.com/repos/OpenGeoHub/SoilSamples,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C1EC:6459:266C5C2:4EF6C85:652242F7.'}",N/A,N/A,N/A,N/A,soil,"[N, /, A]",00000
1537,Moisture-Duck,MakersFunDuck,N/A,N/A,https://api.github.com/repos/MakersFunDuck/Moisture-Duck,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C1E8:603C:2889F6F:53124EA:652242F7.'}",N/A,N/A,N/A,N/A,soil,"[N, /, A]",00000
1538,ssurgoOnDemand,ncss-tech,N/A,N/A,https://api.github.com/repos/ncss-tech/ssurgoOnDemand,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C1BE:78AC:27ED83C:51EB737:652242F8.'}",N/A,N/A,N/A,N/A,soil,"[N, /, A]",00000
1539,esp32-vpn,aabbtree77,N/A,N/A,https://api.github.com/repos/aabbtree77/esp32-vpn,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C14B:18FC:272F173:5063547:652242F8.'}",N/A,N/A,N/A,N/A,soil,"[N, /, A]",00000
1540,earthshot,collaborative-earth,N/A,N/A,https://api.github.com/repos/collaborative-earth/earthshot,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C168:39DF:278A525:511266A:652242F8.'}",N/A,N/A,N/A,N/A,soil,"[N, /, A]",00000
1541,envalysis,zsteinmetz,N/A,N/A,https://api.github.com/repos/zsteinmetz/envalysis,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C1F7:7DF2:26B85A9:4F6BED5:652242F9.'}",N/A,N/A,N/A,N/A,soil,"[N, /, A]",00000
1542,agrolib,ARPA-SIMC,N/A,N/A,https://api.github.com/repos/ARPA-SIMC/agrolib,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C1C5:5173:24D5976:4BBA7ED:652242FA.'}",N/A,N/A,N/A,N/A,soil,"[N, /, A]",00000
1543,pedometrics-package,Laboratorio-de-Pedometria,N/A,N/A,https://api.github.com/repos/Laboratorio-de-Pedometria/pedometrics-package,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C1E3:12FA:5E728F:C28F39:652242FA.'}",N/A,N/A,N/A,N/A,soil,"[N, /, A]",00000
1544,smartGarden,ataffe,N/A,N/A,https://api.github.com/repos/ataffe/smartGarden,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C1CF:3996:262ACB2:4E569DA:652242FB.'}",N/A,N/A,N/A,N/A,soil,"[N, /, A]",00000
1545,Poroelasticity,josebastiase,N/A,N/A,https://api.github.com/repos/josebastiase/Poroelasticity,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C193:646E:2703D63:500F2C3:652242FA.'}",N/A,N/A,N/A,N/A,soil,"[N, /, A]",00000
1546,CNN-LSTM_for_DSM,zlxy9892,N/A,N/A,https://api.github.com/repos/zlxy9892/CNN-LSTM_for_DSM,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C1E8:603C:288A30E:5312C5F:652242FB.'}",N/A,N/A,N/A,N/A,soil,"[N, /, A]",00000
1547,predicting-heavy-metal-adsorption-in-soil,KuanHuang,N/A,N/A,https://api.github.com/repos/KuanHuang/predicting-heavy-metal-adsorption-in-soil,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C18F:7646:296C46B:54DE4E0:652242FB.'}",N/A,N/A,N/A,N/A,soil,"[N, /, A]",00000
1548,SoilKnowledgeBase,ncss-tech,N/A,N/A,https://api.github.com/repos/ncss-tech/SoilKnowledgeBase,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C19C:1D92:25E9296:4DD9C13:652242FC.'}",N/A,N/A,N/A,N/A,soil,"[N, /, A]",00000
1549,np_vs_kriging,3springs,N/A,N/A,https://api.github.com/repos/3springs/np_vs_kriging,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C15F:3D80:271C7AB:503FF23:652242FD.'}",N/A,N/A,N/A,N/A,soil,"[N, /, A]",00000
1550,OpenGL-Engine,p-ranav,N/A,N/A,https://api.github.com/repos/p-ranav/OpenGL-Engine,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C10C:7D9C:2B55BF1:58AA3BF:652242FD.'}",N/A,N/A,N/A,N/A,soil,"[N, /, A]",00000
1551,Soil_Moisture,Ario20,N/A,N/A,https://api.github.com/repos/Ario20/Soil_Moisture,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C133:4AAE:277D286:510CA2C:652242FE.'}",N/A,N/A,N/A,N/A,soil,"[N, /, A]",00000
1552,CEAP-Grazing-Lands,jneme910,N/A,N/A,https://api.github.com/repos/jneme910/CEAP-Grazing-Lands,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C115:8A0D:282B295:5265A24:652242FE.'}",N/A,N/A,N/A,N/A,soil,"[N, /, A]",00000
1553,Arduino_Plant_Watering_System,ldijkman,N/A,N/A,https://api.github.com/repos/ldijkman/Arduino_Plant_Watering_System,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C143:74C7:268E253:4F29E83:652242FF.'}",N/A,N/A,N/A,N/A,soil,"[N, /, A]",00000
1554,OpenGreenery,Alexander-Degtyar,N/A,N/A,https://api.github.com/repos/Alexander-Degtyar/OpenGreenery,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C1CA:9CF4:280B58D:5214B41:652242FF.'}",N/A,N/A,N/A,N/A,soil,"[N, /, A]",00000
1555,uFTIR,fcorra,N/A,N/A,https://api.github.com/repos/fcorra/uFTIR,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C1DD:04F2:272B913:505CD11:652242FF.'}",N/A,N/A,N/A,N/A,soil,"[N, /, A]",00000
1556,OpenGreenery,Alexander-Degtyar,N/A,N/A,https://api.github.com/repos/Alexander-Degtyar/OpenGreenery,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C1CA:9CF4:280B58D:5214B41:652242FF.'}",N/A,N/A,N/A,N/A,soil,"[N, /, A]",00000
1557,rosettaPTF,ncss-tech,ncss-tech,https://github.com/ncss-tech/rosettaPTF,https://api.github.com/repos/ncss-tech/rosettaPTF,R frontend for the Python rosetta-soil module. Uses {reticulate} to wrap the Rosetta pedotransfer functions and provide unsaturated soil hydraulic parameter estimates from basic soil properties.,"
<!-- README.md is generated from README.Rmd. Please edit that file -->

# rosettaPTF

<!-- badges: start -->

[![R-CMD-check](https://github.com/ncss-tech/rosettaPTF/workflows/R-CMD-check/badge.svg)](https://github.com/ncss-tech/rosettaPTF/actions)
[![HTML
Docs](https://camo.githubusercontent.com/f7ba98e46ecd14313e0e8a05bec3f92ca125b8f36302a5b1679d4a949bccbe31/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d48544d4c2d696e666f726d6174696f6e616c)](https://ncss-tech.github.io/rosettaPTF/)
[![codecov](https://codecov.io/gh/ncss-tech/rosettaPTF/branch/main/graph/badge.svg?token=BYBKW7PKC3)](https://codecov.io/gh/ncss-tech/rosettaPTF)
<!-- badges: end -->

Rosetta is a neural network-based model for predicting unsaturated soil
hydraulic parameters from basic soil characterization data. The model
predicts parameters for the van Genuchten unsaturated soil hydraulic
properties model, using sand, silt, and clay, bulk density and water
content.

{rosettaPTF} uses {reticulate} to wrap the Python
[rosetta-soil](https://github.com/usda-ars-ussl/rosetta-soil) module:
providing several versions of the
[Rosetta](http://ncss-tech.github.io/AQP/soilDB/ROSETTA-API.html)
pedotransfer functions in an R environment.

This package is primarily intended for more demanding use cases (such as
calling Rosetta “continuously” on each cell in a stack of rasters), or
for accessing the uncertainty and shape metrics from Zhang & Schaap
(2017). High-throughput input to the pedotransfer function is possible
by using RasterStack ([raster](https://github.com/rspatial/raster/)) or
SpatRaster ([terra](https://github.com/rspatial/terra/)) objects as
input.

## Install {rosettaPTF}

First, install the package from GitHub:

``` r
if (!require(""remotes"")) install.packages(""remotes"")
remotes::install_github(""ncss-tech/rosettaPTF"")
```

Then load the `rosetta-soil` module by loading the R package. If you do
not have an available `python` installation or `rosetta-soil` module you
will be notified.

``` r
library(rosettaPTF)
```

### `rosetta-soil` Python module

The [rosetta-soil](https://github.com/usda-ars-ussl/rosetta-soil) module
is a Python package maintained by Dr. Todd Skaggs (USDA-ARS) and other
U.S. Department of Agriculture employees.

The Rosetta pedotransfer function predicts five parameters for the van
Genuchten model of unsaturated soil hydraulic properties

- `theta_r` : residual volumetric water content
- `theta_s` : saturated volumetric water content
- `log10(alpha)` : retention shape parameter `[log10(1/cm)]`
- `log10(n)` : retention shape parameter (also referred to as `npar`)
- `log10(ksat)` : saturated hydraulic conductivity `[log10(cm/d)]`

For each set of input data a mean and standard deviation of each
parameter is given.

Less demanding use cases are encouraged to use the web interface or API
endpoint. There are additional wrappers of the API endpoints provided by
the soilDB R package `ROSETTA()` method. For small amounts of data
consider using the interactive version that has copy/paste
functionality: <https://www.handbook60.org/rosetta>.

# Input Data

The [Rosetta](http://ncss-tech.github.io/AQP/soilDB/ROSETTA-API.html)
model relies on a minimum of 3 soil properties, with increasing
(expected) accuracy as additional properties are included:

- Required, `sand`, `silt`, `clay`: USDA soil texture separates
  (percentages) that sum to 100%

- Optional, `bulk density (any moisture basis)`: mass per volume after
  accounting for \>2mm fragments, units of grams/cm3

- Optional, `volumetric water content at 33 kPa`: roughly “field
  capacity” for most soils, units of cm3/cm3

- Optional, `volumetric water content at 1500 kPa`: roughly “permanent
  wilting point” for most plants, units of cm3/cm3

The default order of inputs is: `sand`, `silt`, `clay`,
`bulk density (any basis)`, `water content (field capacity; 33 kPa)`,
`water content (permanent wilting point; 1500 kPa)` of which the first
three are required.

If you specify field capacity water content, you must specify bulk
density. If you specify permanent wilting point water content you must
also specify bulk density and field capacity water content.

## {reticulate} Setup

If you are using this package for the first time you will need to have
Python installed and you will need to download the necessary modules.

You can set up {reticulate} to install modules into a virtual or Conda
environment. {reticulate} offers `reticulate::install_python()` and
`reticulate::install_miniconda()` to download and set up Python/Conda if
you have not yet done so.

### Finding the `python` binaries

``` r
rosettaPTF::find_python()
#> [1] ""C:/Users/Andrew/Documents/.virtualenvs/r-reticulate/Scripts/python.exe""
```

`find_python()` provides heuristics for setting up {reticulate} to use
Python in commonly installed locations.

The first attempt makes use of `Sys.which()` to find installations
available in the user path directory.

`find_python()` also provides an option for using ArcGIS Pro Conda
environments–which may be needed for users who cannot install Conda by
some other means. To use this option specify the `arcpy_path` argument
or the `rosettaPTF.arcpy_path` option to locate both the ArcGIS Pro
Conda environment and Python binaries in *C:/Program
Files/ArcGIS/Pro/bin/Python*, for example:

``` r
rosettaPTF::find_python(arcpy_path = ""C:/Program Files/ArcGIS/Pro/bin/Python"")
```

If automatic configuration via `find_python()` fails (returns `NULL`)
you can manually set a path to the `python` executable with the
{reticulate} `RETICULATE_PYTHON` environment variable:
`Sys.setenv(RETICULATE_PYTHON = ""path/to/python"")` or
`reticulate::use_python(""path/to/python"")`

### Install `rosetta-soil` Python Module

The {rosettaPTF} `install_rosetta()` method wraps
`reticulate::py_install(""rosetta-soil"")`.

You can use `install_rosetta()` to install into custom environments by
specifying `envname` as needed. After installing a new version of the
module you should restart your R session.

``` r
rosettaPTF::install_rosetta()
#> Using virtual environment ""C:/Users/Andrew/Documents/.virtualenvs/r-reticulate"" ...
#> + ""C:/Users/Andrew/Documents/.virtualenvs/r-reticulate/Scripts/python.exe"" -m pip install --upgrade --no-user ""rosetta-soil""
#> [1] TRUE
```

Alternately, to install the module manually with `pip` you can run the
following command. This assumes a Python 3 binary called `python` can be
found on your path.

``` sh
python -m pip install rosetta-soil
```

## `run_rosetta()`

Batch runs of Rosetta models can be done using using `list`,
`data.frame`, `matrix`, `RasterStack`, `RasterBrick` and `SpatRaster`
objects as input.

### `list()` Input Example

``` r
run_rosetta(list(c(30, 30, 40, 1.5), c(55, 25, 20),  c(55, 25, 20, 1.1)),
            rosetta_version = 3)
#>   id model_code theta_r_mean theta_s_mean log10_alpha_mean log10_npar_mean
#> 1  1          3   0.11535773    0.4179120        -2.067139       0.1120102
#> 2  2          2   0.08613275    0.3888528        -1.898150       0.1347136
#> 3  3          3   0.09130753    0.4850320        -2.022388       0.1510716
#>   log10_Ksat_mean  theta_r_sd  theta_s_sd log10_alpha_sd log10_npar_sd
#> 1       0.8325407 0.013350113 0.009377977     0.08251142    0.01323413
#> 2       1.1858005 0.006014445 0.006273536     0.07481303    0.01160419
#> 3       1.9060148 0.012771407 0.013062171     0.10020312    0.01763982
#>   log10_Ksat_sd
#> 1    0.09245277
#> 2    0.08428578
#> 3    0.14163567
```

Output `model_code` reflects the number of parameters in the input.

### `data.frame()` Input Example

The `data.frame` interface allows for using using custom column names
and order. If the `vars` argument is not specified it is assumed that
the columns are in the order specified in the `run_rosetta()` manual
page.

``` r
run_rosetta(data.frame(
  d = c(NA, 1.5),
  b = 60,
  a = 20,
  c = 20
), vars = letters[1:4])
#>   id model_code theta_r_mean theta_s_mean log10_alpha_mean log10_npar_mean
#> 1  1          2   0.08994502    0.4301366        -2.426236       0.1756873
#> 2  2          3   0.08495731    0.3887858        -2.318826       0.1598879
#>   log10_Ksat_mean  theta_r_sd  theta_s_sd log10_alpha_sd log10_npar_sd
#> 1       1.1927311 0.006707593 0.008785824     0.07413139    0.01323068
#> 2       0.9961317 0.010184683 0.008100061     0.07976954    0.01753829
#>   log10_Ksat_sd
#> 1    0.08709446
#> 2    0.07771481
```

### Soil Data Access / SSURGO Mapunit Aggregate Input Example

This example pulls mapunit/component data from Soil Data Access (SDA).
We use the {soilDB} function `get_SDA_property()` to obtain
representative values for `sand`, `silt`, `clay`, and
`bulk density (1/3 bar)` we run Rosetta on the resulting data.frame (one
row per mapunit) then use raster attribute table (RAT) to display the
results (1:1 with `mukey`).

``` r
library(soilDB)
library(terra)
#> terra 1.6.17
library(rosettaPTF)

# obtain mukey map from SoilWeb Web Coverage Service (800m resolution SSURGO derived)
res <- mukey.wcs(aoi = list(aoi = c(-114.16, 47.65,-114.08, 47.68), crs = 'EPSG:4326'))
#> Loading required namespace: sf

# request input data from SDA
varnames <- c(""sandtotal_r"", ""silttotal_r"", ""claytotal_r"", ""dbthirdbar_r"")
resprop <- get_SDA_property(property = varnames,
                            method = ""Dominant Component (numeric)"",
                            mukeys = unique(values(res$mukey)))

# keep only those where we have a complete set of 4 parameters (sand, silt, clay, bulk density; model code #3)
soildata <- resprop[complete.cases(resprop), c(""mukey"", varnames)]

# run Rosetta on the mapunit-level aggregate data
system.time(resrose <- run_rosetta(soildata[,varnames]))
#>    user  system elapsed 
#>     0.2     0.0     0.2

# transfer mukey to result
resrose$mukey <- soildata$mukey

# merge property (input) and rosetta parameters (output) into RAT
levels(res) <- merge(cats(res)[[1]], resprop, by = ""mukey"", all.x = TRUE)
levels(res) <- merge(cats(res)[[1]], resrose, by = ""mukey"", all.x = TRUE)

# convert categories based on mukey to numeric values
res2 <- catalyze(res)

# make a plot of the predicted Ksat
plot(res2, ""log10_Ksat_mean"")
```

<img src=""man/figures/README-unnamed-chunk-9-1.png"" width=""100%"" />

### *SpatRaster* (terra) Input Example

The above example shows how to create raster output based on *discrete*
(SSURGO polygon derived) data. A more general case is when each raster
cell has “unique” values (i.e. *continuous* raster inputs).
`run_rosetta()` has an S3 method defined for *SpatRaster* input.

We previously merged the input data from SDA (an ordinary *data.frame*)
into the RAT of `res`; exploiting the linkage between `mukey` and raster
cells to make the map. For comparison with the `mukey` results above we
stack de-ratified input layers and create a new *SpatRaster*.

``` r
res3 <- rast(list(
  res2[[""sandtotal_r""]],
  res2[[""silttotal_r""]],
  res2[[""claytotal_r""]],
  res2[[""dbthirdbar_r""]]
))

# SpatRaster to data.frame interface (one call on all cells)
system.time(test2 <- run_rosetta(res3))
#>    user  system elapsed 
#>   41.98    9.25   49.46

# make a plot of the predicted Ksat (identical to mukey-based results)
plot(test2, ""log10_Ksat_mean"")
```

<img src=""man/figures/README-unnamed-chunk-10-1.png"" width=""100%"" />

You will notice the results for Ksat distribution are identical since
the same input values were used, but the latter approach took longer to
run. The time difference is the difference of estimating \~40 (1
estimate per mapunit key) versus \~30,000 (1 estimate per raster cell)
sets of Rosetta parameters.

## Extended Output with `Rosetta` S3 Class

### Make a *Rosetta* class instance for running extended output methods

Note that each instance of *Rosetta* has a fixed version and model code,
so if you have heterogeneous input you need to iterate over model code.

``` r
# defaults are version 3 and model code 3 (4 parameters: sand, silt, clay and bulk density)
my_rosetta <- Rosetta(rosetta_version = 3, model_code = 3)
```

### `predict()` Rosetta Parameter Values and Standard Deviations from a *Rosetta* instance

``` r
predict(my_rosetta, list(c(30, 30, 40, 1.5), c(55, 25, 20, 1.1)))
#> [[1]]
#>            [,1]     [,2]      [,3]      [,4]      [,5]
#> [1,] 0.11535773 0.417912 -2.067139 0.1120102 0.8325407
#> [2,] 0.09130753 0.485032 -2.022388 0.1510716 1.9060148
#> 
#> [[2]]
#>            [,1]        [,2]       [,3]       [,4]       [,5]
#> [1,] 0.01335011 0.009377977 0.08251142 0.01323413 0.09245277
#> [2,] 0.01277141 0.013062171 0.10020312 0.01763982 0.14163567
```

### Extended *Rosetta* Predictions, Parameter Distributions and Summary Statistics after Zhang & Schaap (2017) with `ann_predict()`

``` r
ann_predict(my_rosetta, list(c(30, 30, 40, 1.5), c(55, 25, 20, 1.1)))
#> ann_predict() is defined for objects with class Rosetta; see `Rosetta()` to create a new instance
#> $var_names
#> $var_names[[1]]
#> b'theta_r'
#> 
#> $var_names[[2]]
#> b'theta_s'
#> 
#> $var_names[[3]]
#> b'alpha'
#> 
#> $var_names[[4]]
#> b'npar'
#> 
#> $var_names[[5]]
#> b'ks'
#> 
#> 
#> $sum_res_mean
#>            [,1]        [,2]
#> [1,]  0.1153577  0.09130753
#> [2,]  0.4179120  0.48503196
#> [3,] -2.0671385 -2.02238809
#> [4,]  0.1120102  0.15107161
#> [5,]  0.8325407  1.90601478
#> 
#> $sum_res_std
#>             [,1]       [,2]
#> [1,] 0.013350113 0.01277141
#> [2,] 0.009377977 0.01306217
#> [3,] 0.082511421 0.10020312
#> [4,] 0.013234131 0.01763982
#> [5,] 0.092452769 0.14163567
#> 
#> $sum_res_cov
#> , , 1
#> 
#>              [,1]         [,2]          [,3]          [,4]         [,5]
#> [1,] 1.782255e-04 3.719987e-05  5.300747e-05  2.278859e-05 5.965812e-05
#> [2,] 3.719987e-05 8.794645e-05  2.570007e-04  3.632187e-06 2.662337e-04
#> [3,] 5.300747e-05 2.570007e-04  6.808135e-03 -3.601399e-04 1.347519e-03
#> [4,] 2.278859e-05 3.632187e-06 -3.601399e-04  1.751422e-04 8.973559e-05
#> [5,] 5.965812e-05 2.662337e-04  1.347519e-03  8.973559e-05 8.547515e-03
#> 
#> , , 2
#> 
#>               [,1]          [,2]          [,3]          [,4]          [,5]
#> [1,]  1.631088e-04  2.342660e-05  2.087559e-05 -9.477980e-06 -0.0003382175
#> [2,]  2.342660e-05  1.706203e-04  3.156961e-04 -4.577936e-05  0.0005664825
#> [3,]  2.087559e-05  3.156961e-04  1.004067e-02 -7.685234e-04  0.0012668368
#> [4,] -9.477980e-06 -4.577936e-05 -7.685234e-04  3.111634e-04  0.0001828960
#> [5,] -3.382175e-04  5.664825e-04  1.266837e-03  1.828960e-04  0.0200606627
#> 
#> 
#> $sum_res_skew
#>             [,1]        [,2]
#> [1,] -4.52570431 -2.33577302
#> [2,] -0.01729594 -0.22228088
#> [3,] -0.18215435 -0.25961263
#> [4,] -0.15345973  0.04145318
#> [5,] -0.20386127 -0.35765020
#> 
#> $sum_res_kurt
#>            [,1]        [,2]
#> [1,] 36.6873026 16.85229297
#> [2,]  0.5975976  0.02966211
#> [3,]  0.3016512  0.11663125
#> [4,]  0.1342581  0.26557316
#> [5,]  0.3127817  0.54242091
#> 
#> $sum_res_bool
#>      [,1] [,2]
#> [1,] TRUE TRUE
#> [2,] TRUE TRUE
#> [3,] TRUE TRUE
#> [4,] TRUE TRUE
#> [5,] TRUE TRUE
#> 
#> $nsamp
#> [1] 2
#> 
#> $nout
#> [1] 5
#> 
#> $nin
#> [1] 4
```

## Selected References

Three versions of the ROSETTA model are available, selected using
`rosetta_version` argument.

- `rosetta_version` 1 - Schaap, M.G., F.J. Leij, and M.Th. van
  Genuchten. 2001. ROSETTA: a computer program for estimating soil
  hydraulic parameters with hierarchical pedotransfer functions. Journal
  of Hydrology 251(3-4): 163-176. doi: 10.1016/S0022-1694(01)00466-8.

- `rosetta_version` 2 - Schaap, M.G., A. Nemes, and M.T. van
  Genuchten. 2004. Comparison of Models for Indirect Estimation of Water
  Retention and Available Water in Surface Soils. Vadose Zone Journal
  3(4): 1455-1463. doi: 10.2136/vzj2004.1455.

- `rosetta_version` 3 - Zhang, Y., and M.G. Schaap. 2017. Weighted
  recalibration of the Rosetta pedotransfer model with improved
  estimates of hydraulic parameter distributions and summary statistics
  (Rosetta3). Journal of Hydrology 547: 39-53. doi:
  10.1016/j.jhydrol.2017.01.004.
",4,4,8,1,soil,"[hydraulic, hydrology, ksat, pedotransfer, python, r, reticulate, rosetta, soil]",00000
1558,SmartGarden,avkondrat,N/A,https://github.com/avkondrat/SmartGarden,https://api.github.com/repos/avkondrat/SmartGarden,,"This low cost kit for creating battery low power sensors(device) and a gateway for wireless (based on the NRF24) monitoring of soil condition with WiFi data transmission to the IOT platform.

Included controller's firmware files, circuits and boards, case models for 3D printing. No programming required for customization.

Please, read WiKi (RUS) project https://github.com/avkondrat/SmartGarden/wiki
",4,4,0,0,soil,"[garden, iot, nrf24l01, nrf24le1, sensor, soil]",00000
1559,OSDRegistry,ncss-tech,ncss-tech,https://github.com/ncss-tech/OSDRegistry,https://api.github.com/repos/ncss-tech/OSDRegistry,Registry for Official Soil Series Descriptions (OSDs).,"# OSDRegistry

[![Refresh](https://github.com/ncss-tech/OSDRegistry/workflows/refresh-osd/badge.svg)](https://github.com/ncss-tech/OSDRegistry/actions?query=workflow%3Arefresh-osd)
[![R build status](https://github.com/ncss-tech/OSDRegistry/workflows/R-CMD-check/badge.svg)](https://github.com/ncss-tech/OSDRegistry/actions?query=workflow%3AR-CMD-check)
[![Download Weekly OSD Snapshot](https://img.shields.io/badge/Download%20OSD%20Snapshot-ZIP-blueviolet)](https://github.com/ncss-tech/OSDRegistry/releases/download/main/OSD-data-snapshot.zip)
[![Download Weekly SC Snapshot](https://img.shields.io/badge/Download%20SC%20Snapshot-ZIP-orange)](https://github.com/ncss-tech/OSDRegistry/releases/download/main/SC-data-snapshot.zip)

Version control repository for [Official Series Descriptions](https://soilseries.sc.egov.usda.gov/) (OSDs). 

Official ""Soil Series"" are the detailed soil types used by the USDA-NRCS and the National Cooperative Soil Survey program. The ""Soil Series"" is the lowest level in the United States National Soil Classification System hierarchy. Series names are correlated to soil survey map unit components based on specific conditions found within soil survey areas (SSA) and Major Land Resource Areas (MLRAs). More information on the concept and standards for the Soil Series can be found in the [National Soil Survey Handbook](http://www.nrcs.usda.gov/wps/portal/nrcs/detail/soils/ref/?cid=nrcs142p2_054242) [Part 614 ""Applying Soil Taxonomy""](https://directives.sc.egov.usda.gov/44230.wba).

Key differentia between series are encoded in the narrative portions of OSDs. _OSDRegistry_ provides a readily-accessible, open-source, version-controlled resource for Series concepts in OSDs. 

You can download the weekly release of a ""snapshot"" of all OSDs (as .txt files) [here](https://github.com/ncss-tech/OSDRegistry/releases/download/main/OSD-data-snapshot.zip). 
These files are parsed and stored as JSON in the [ncss-tech/SoilKnowledgeBase](https://github.com/ncss-tech/SoilKnowledgeBase) repository and can be queried using the [ncss-tech/soilDB](https://github.com/ncss-tech/soilDB) R package [`get_OSD()`](https://ncss-tech.github.io/soilDB/reference/get_OSD.html) method.

You can also download the weekly ""snapshot"" of the ""Series Classification"" database table (as .csv file) [here](https://github.com/ncss-tech/OSDRegistry/releases/download/main/SC-data-snapshot.zip). The SC database is used for validation of the plain-text data in the OSDs in [ncss-tech/SoilKnowledgeBase](https://github.com/ncss-tech/SoilKnowledgeBase). 

---

## Recommended Citation

Soil Survey Staff, Natural Resources Conservation Service, United States Department of Agriculture. Official Soil Series Descriptions. Available online. Accessed [month/day/year].
",4,4,8,0,soil,"[descriptions, ncss, nrcs, osd, registry, series, soil, soil-series, spsd, usda]",00000
1560,sda-lib,ncss-tech,ncss-tech,https://github.com/ncss-tech/sda-lib,https://api.github.com/repos/ncss-tech/sda-lib,Soil Data Access is the name of a suite of web services and applications whose purpose is to meet requirements for requesting and delivering soil survey spatial and tabular data that are not being met by the current Web Soil Survey and Geospatial Data Gateway websites.,"# sda-lib 
[GitHub sda-lib Wiki Home](https://github.com/ncss-tech/sda-lib/wiki) 

## Soil Data Access Query Page
1. [Submitting a Query](https://sdmdataaccess.nrcs.usda.gov/Query.aspx) Submit your own SQL or SQL Data Shaping query to retrieve data from the Soil Data Mart.
2. [Using Soil Data Access web services Help](https://sdmdataaccess.nrcs.usda.gov/Help.aspx) Soil Data Access Web Service Help.
3. [Creating my own custom database queries Help](https://sdmdataaccess.nrcs.usda.gov/QueryHelp.aspx) Soil Data Access Query Help. This page provides information one needs in order to effectively query Soil Data Access. Documents and other guides.
3. [Using the Soil Data Access website Help](https://sdmdataaccess.nrcs.usda.gov/Help.aspx)  Soil Data Access Help. The purpose of this page is to provide you with general information about this site and to help you resolve some common issues that may be experienced whilst browsing. 
4. [Citing Soil Data Access as a source of soils data.](https://sdmdataaccess.nrcs.usda.gov/Citation.htm)
5. [Advanced Queries](https://sdmdataaccess.nrcs.usda.gov/documents/AdvancedQueries.html) Soil Data Access provides two advanced features for querying spatial data:
    * Tabular Functions act as ""virtual"" tables that can be used in the ""FROM"" clause of a query.
    * Macros are condensed statements that SDA expands into full SQL statements.
    
   ## Soil Data Access Script Examples with Explanation
 list:
   *  [Soil Organic Carbon Stocks by Map Unit](https://ncss-tech.github.io/sda-lib/chapters/Soil%20Organic%20Carbon%20Stocks.html) 
  *  [Geometry Intersect by Map Unit Acres](https://ncss-tech.github.io/sda-lib/chapters/) 


",4,4,12,1,soil,"[database, nrcs, soil, soil-data-access, soil-survey, sql, ssurgo, ssurgo-datasets, ssurgo-tools, usda, web-soil-survey]",00000
1561,AgroSmart,mindwebs,mindwebs,https://github.com/mindwebs/AgroSmart,https://api.github.com/repos/mindwebs/AgroSmart,Smart Farming with IoT and MEAN Stack,"<p align=""center"">
<img src=""https://img.shields.io/badge/Hacktoberfest-Friendly-blueviolet?style=for-the-badge"">
<img src=""https://img.shields.io/github/issues-pr/mindwebs/AgroSmart?label=Pull%20Requests&style=for-the-badge"">
<img src=""https://img.shields.io/github/issues/mindwebs/AgroSmart?color=db0000&label=Issues&style=for-the-badge"">
<img src=""https://img.shields.io/github/contributors/mindwebs/AgroSmart?color=blue&style=for-the-badge"">
</p>

# AgroSmart - A Smart Farming Solution
IoT Based Field Monitorin and Control Platfornm Using MEAN Stack.

## Abstract
We have implemented IOT and smart agriculture techniques to conserve the limiting natural resources and maximize the production of the fields. AgroSmart was directed to make the work of the farmers easier and less complicated. We have approached the solution of this problem by designing certain devices called SmartPods, which are to be sowed in the soil (having a limited coverage) they will provide valuable information like soil quality, humidity, temperature (all the features required to be monitored while farming) easily with the help of controllers and the results are displayed in a webpage which is designed solely for monitoring real time data gathered from the Smart Pods. After analysing the statistical data and graphs we could predict the meteorological conditions of the area, the type of crop suitable for cultivation in that area and the optimum requirements of that crop in the given environment, which helped us in estimating the exact amount of resources required, the crop to be cultivated and what uncertainties to expect from the weather of the region.

## Sections of this Project
This project has a physical layer under ""SmartPODS"", back end framework in ExpressJS and Frontend in Angular. The physical layer can be used over any WiFi enabled microcontroller like NodeMCU (ESP8266) or ESP32.  
You can find all the arduino libraries and the code inside the ``Smart Pods`` Folder.  
The backend API is located under the ``api`` folder.  
And the front-end is located under ``web/dashboard`` folder.  

## How to Contribute
Fork this Repository, Make a Local Instance of MongoDB or create a free atlas account and push that details in /api/config/db.js and create a database dbAgro under that username in your mongo instance.  
You can find the connect URI where you should put the details in username:password@host:port/dbName format.

After implementing the changes you can create a pull request to this repository.

## Access the Live Link
If you wish to test the live application, please write to us at contact@mindwebs.org with the subject heading ""Access to AgroSmart Web Dashboard"". Please feed in your complete developer details, so that we can evaluate and give you the access to it. Please don't forget to write the reason of your request of access. If granted, you will be mailed with the email and password to get into the dashboard.

## Project Creators
1. [Dipan Roy](https://github.com/dipan29)
2. [Ritankar Paul](https://github.com/xritzx)
  
For more details, please check out the Contribution.md and make sure to add your name while submiting a pull request into that file.
  
Thank You!
",4,4,1,0,soil,"[crop, cultivation, hacktoberfest, hacktoberfest2020, iot, mean, soil]",00000
1562,triaxial_test_evaluation_tool,GUT-Aachen,GUT-Aachen,https://github.com/GUT-Aachen/triaxial_test_evaluation_tool,https://api.github.com/repos/GUT-Aachen/triaxial_test_evaluation_tool,Evaluate results of a modified geotechnical triaxial test with permeability measurement,"# Triaxial Test Evaluation Tool

<img align=""left"" src = ""logo.png"" height=280>

> With this evaluation tool you can check and interpret the results of a modified <a href=""https://en.wikipedia.org/wiki/Triaxial_shear_test"" target=""_blank"">`geotechnical triaxial test`</a>.
With this appliance it is possible to confine a probe, rise the axial stress and measure the permeability of the probe at all stages.
The tool was developed as part of a joint project called MERID (Microstructural Influence on Reservoir Integrity at Variable Hydromechanical Conditions) funded by the German Federal Ministry of Education and Research as part of GEO:N Project ([Geoforschung für Nachhaltigkeit](https://www.bmbf.de/de/geoforschung-2398.html)) to evaluate the results of a special assembled large triaxial cell.
This tool consists of a backend and a frontend both assembled in MathWorks Matlab.
The backend creates a connection to a MySQL-Database where the results of all experiments stored.

[![License: GNU](https://img.shields.io/github/license/froido/triaxial_test_evaluation_tool?style=flat-square&color=red)](LICENSE.md) 
[![Release: Date](https://img.shields.io/github/release-date/froido/triaxial_test_evaluation_tool?style=flat-square)](https://github.com/froido/triaxial_test_evaluation_tool/releases) 
[![Release: Version](https://img.shields.io/github/v/release/froido/triaxial_test_evaluation_tool?style=flat-square)](https://github.com/froido/triaxial_test_evaluation_tool/releases) 
[![DOI](https://zenodo.org/badge/206527480.svg)](https://zenodo.org/badge/latestdoi/206527480) 


[![MathWorks Matlab](https://img.shields.io/static/v1?label=Mathworks&message=Matlab&color=blue&style=flat-square&logo=mathworks)](https://mathworks.com/)
[![MySQL](https://img.shields.io/static/v1?label=Oracle&message=MySQL&color=blue&style=flat-square&logo=mysql)](https://www.oracle.com/de/mysql/)

---


## Features

### Frontend (GUI)

 - List and overview of all experiments in database
 - Keep rock/soil parameters always in view
 - Check experiment descriptions and additional comments
 - Get an overview of important parameters and their connection
 - Show experiment's time log related to experiments data
 - Change integration time step for permeability calculation
 - Plot graphs with variable x-axis and two possible y-axes
 - Compare to different/independent experiments
 - Export graphs easily as raster graphics (1200 DPI) or vector graphics

<p align=""center"">
  <img src = ""sample/experiments_list.png"" width=300> <img src = ""sample/data_overview.png"" width=300>
</p><p align=""center"">
  <img src = ""sample/data_vs_timelog.png"" width=300> <img src = ""sample/comparison.png"" width=300>
</p>
 

### Backend

 - Class oriented programming in Matlab
 - Connection to MySQL database
 - Interface between frontend (GUI) and MySQL database
 - Separate classes for handling experiments metadata `ExperimentsMetaData`, measured values `ExperimentsData`, rock/soil related data `ExperimentsSpecimenData`, MySQL database connection `MeridDB`, interface to frontend (GUI) `TriaxTestHandler`
 - Measured data cleansing like filtering NaN values
 - Calculating permeability and permeability coefficient according to fluid (water) properties with help of <a href=""https://github.com/isantosruiz"" target=""_blank"">isantosruiz'</a> <a href=""https://github.com/isantosruiz/water-properties"" target=""_blank"">`water-properties`</a> repository.
 - Using [`BrewerMap`](https://github.com/DrosteEffect/BrewerMap) from [DrosteEffect](https://github.com/DrosteEffect) which provides all [ColorBrewer](https://colorbrewer2.org/) colorschemes (designed by [Cynthia A. Brewer](http://www.personal.psu.edu/cab38/)) for MATLAB.


---

## Requirements

 - Matlab Version 2020a or newer
 - [Matlab Curve Fitting Toolbox](https://de.mathworks.com/products/curvefitting.html) for permeability calculations
 - [JDBC MySQL Connector](https://dev.mysql.com/downloads/connector/j/) included in Matlab `javaclasspath` (dynamic or static)
 - Configured MySQL database engine (a script creating the database skeleton is [attached](sample/database_generation_script.sql) in this repository) which includes all triaxial test data sets
 
 ---
 
## Setup

 - Have a running MathWorks Matlab 2019b or higher engine with installed curve fitting toolbox.
 - Have a running MySQL engine with a database according to the needs of this tool. To create a valid database you can use the [batch file](sample/database_generation_script.sql) in this repository.
 - Download [JDBC MySQL Connector](https://dev.mysql.com/downloads/connector/j/) (platform independent version) to your local machine.
 - Add JDBC MySQL Connector to `javaclasspath` dynamic part
  ```matlab
  >> javaaddpath('/your_folder/mysql-connector-java-8.0.20.jar')
  ```
 - Check if adding was successful
  ```matlab
  >> javaclasspath
    
    /some_other_folder/some_file.jar
    
        DYNAMIC JAVA PATH

    /your_folder/mysql-connector-java-8.0.20.jar
  ```
 - Download the latest release of Triaxial Test Evaluation Tool to your local machine and include the submodule `water-properties` additionally. As an alternative you can clone the repository via
 `git clone --recurse-submodules --remote-submodules https://github.com/froido/triaxial_test_evaluation_tool.git`
 - Run `GUI.mlapp`
 

---

## Usage

1. Adding triaxial test data sets to the database
2. Start the `Triaxial Test Evaluation Tool` via `GUI.mlapp`.
3. Select a main experiment from the shown list.
4. Evaluate your test results and enjoy.

---

## Additional Hints

 - Matlab has often problems with the timezone set in Oracle MySQL database under Windows systems. CEST (German: MESZ) is unknown for Matlab, which leads to an error. Set the timezone manually to e.g. `+02:00`.
 ```mysql
 SET GLOBAL time_zone = '+02:00';
 ```
 - Due to very big data sets the global buffer size shall be extended in MySQL database to e.g. 4 gigabyte
 ```mysql
 SET GLOBAL innodb_buffer_pool_size=4294967296;
 ```
 - After a couple of changes were performed in the graphs, the GUI of Matlab lags sometimes for unknown reasons. You have two options: kill or wait.

---

## Support

Reach out to me at one of the following places!

- Website at <a href=""https://www.gut.rwth-aachen.de/cms/Geotechnik/Das-Institut/Team/~liwvr/Sven-Biebricher/?lidx=1"" target=""_blank"">`www.gut.rwth-aachen.de`</a>
- <a href=""https://orcid.org/0000-0001-9018-3485"" target=""_blank"">ORCID</a>
- <a href=""https://www.xing.com/profile/SvenF_Biebricher"" target=""_blank"">XING</a>

---

## License

[![License: GNU](https://img.shields.io/github/license/froido/triaxial_test_evaluation_tool?style=flat-square&color=red)](LICENSE.md)
This project is licensed under the GNU General Public License v3.0 - see [LICENSE.md](LICENSE.md) file for details

---

## Thanks

[![isantosruiz for water-properties](https://img.shields.io/static/v1?label=isantosruiz&message=water-properties&color=blue&style=flat-square&logo=github)](https://github.com/isantosruiz/water-properties)
[![DrosteEffect for BrewerMaP](https://img.shields.io/static/v1?label=isantosruiz&message=BrewerMap&color=blue&style=flat-square&logo=github)](https://github.com/DrosteEffect/BrewerMap)
",3,3,3,2,soil,"[colorbrewer, colormap, geotechnical-engineering, matlab-data-processing, matlab-database-connection, matlab-gui, matlab-interface, mysql, permeability, rock, soil, triaxial-test]",00000
1563,ANZSoilML,ANZSoilData,ANZSoilData,https://github.com/ANZSoilData/ANZSoilML,https://api.github.com/repos/ANZSoilData/ANZSoilML,ANZSoilML is a data exchange schema for soil information used in the Australian and New Zealand soil sciences.,"# Australian and New Zealand Soil Mark-up Language (ANZSoilML)

## Contents
> 1. [Site Map](#Site-map)
> 1. [Summary](#Summary)
> 1. [The current state of ANZSoilML](#The-current-state-of-ANZSoilML)
> 1. [The future of ANZSoilML](#The-future-of-ANZSoilML)
> 1. [Contacts](#Contacts)

## Site map
| Page | Link | Description |
| ---- | ---- | ----------- |
| Canonical Schema | [ANZ Soil project website (external link)](http://anzsoil.org/def/schema/) | Canonical published location of ANZSoilML schema documents. |
| Documentation | [ANZSoilML GitHub Wiki](https://github.com/ANZSoilData/ANZSoilML/wiki) | Full documentation of the ANZSoilML information model and project work. |
| Public development resources | [anzsoildata.github.io](https://anzsoildata.github.io/ANZSoilML/) | Schema under development. Archived schema. |
| Project planning | [ANZSoilML GitHub Project](https://github.com/ANZSoilData/ANZSoilML/projects/1) | Known issues and planned future work. |

> As of January 2019, all ANZSoilML development is hosted in this GitHub repository.

## Summary
> ANZSoilML primer at the [repository wiki](https://github.com/ANZSoilData/ANZSoilML/wiki/ANZSoilML-Primer).

ANZSoilML is an information model that specifies the set of classes, properties, relationships and supporting
vocabularies needed to structure digital information used in the Australian and New Zealand soil sciences. It is
primarily concerned with observed properties of soils and their associated landscape features as specified in the:
- _Australian Soil and Land Survey Field Handbook, Third edition, 2009, The National Committee on Soil and Terrain._
([CSIRO Publishing](https://www.publish.csiro.au/book/5230/))
- _New Zealand Soil Description Handbook, Revised edition, 1995, Milne, J.D.G., Clayden, B., Singleton, P.L., Wilson,
A.D._ ([Manaaki Whenua Digital Library](http://digitallibrary.landcareresearch.co.nz/cdm/ref/collection/p20022coll14/id/79))

The main intention of ANZSoilML is to provide communities of data providers and users with a model that allows them to
publish and parse a consistent set of data across multiple data repositories. End users should be confident that, for a
given version of ANZSoilML, responses from providers will use the same data types, property names and vocabularies.

ANZSoilML also aims for consistency with other environmental datasets. Soil itself does not exist in isolation - its
formation is influenced by climate, hydrology, geology, topography and biology, and in return it influences those
aspects of the environment. This means that to effectively describe and model soil, data describing other parts of the
environment may be required, and aggregating these data is much easier if they are delivered in a consistent way. This
means ANZSoilML has been developed using a policy of re-use - importing and aligning itself with important standards
for observation and sampling data, geology, groundwater and hydrology.

ANZSoilML was derived from OzSoilML, which was developed in Australia by [CSIRO](https://www.csiro.au/) under the
auspices of the Australian Collaborative Land Evaluation Program ([ACLEP](http://www.clw.csiro.au/aclep/)). Later, CSIRO
worked with New Zealand's [Manaaki Whenua](https://www.landcareresearch.co.nz) to test and refine OZSoilML, this new
version was rebranded as ANZSoilML.

> Copyright (c) CSIRO, Landcare Research NZ Ltd and Federation University of Australia 2019. All rights reserved.  
> License: [CC-BY-SA-4.0](https://github.com/ANZSoilData/ANZSoilML/blob/master/LICENSE.md)

## The current state of ANZSoilML
> Full description at the [repository wiki](https://github.com/ANZSoilData/ANZSoilML/wiki/Current-Version).

The current version of ANZSoilML (2.0.1) has been designed and implemented as a
[Geography Mark-up Language (GML)](https://en.wikipedia.org/wiki/Geography_Markup_Language) [Application Schema](https://en.wikipedia.org/wiki/Geography_Markup_Language#Application_schema).
This approach involves the definition and provision of
'[Features](https://en.wikipedia.org/wiki/Geography_Markup_Language#Features)' (broadly speaking physical things) that
are of interest when dealing with soils. These include (in _italics_):
- _Soil Profiles_ as made up of _Soils_ and their _Horizons_
- Soil _Landscape Features_ (e.g. _Topography_, _Climatic Setting_ and _Vegetation_)
- Soil _Sites_
- Soil _Samples_ and _Specimens_
- _Laboratory Measurements_

ANZSoilML has focussed on defining the Features specific to soil and imported and extended other Application Schema:
- [Observations and Measurements 2.0 (O&M)](https://en.wikipedia.org/wiki/Observations_and_Measurements) - soil samples
and laboratory measurements
- [GeoScience Mark-up Language 3.0 (GeoSciML)](https://en.wikipedia.org/wiki/GeoSciML) - soil composition and parent
material

The use of GML Application Schema has these technical implications:
- GML is an XML grammar therefore XML documents are provided by default
- The physical model for the XML documents is provided as a collection of XML Schema Documents (XSDs)
([link](http://anzsoil.org/def/schema/))
- Documents are mainly provided via web services conforming to the OGC
[Web Feature Service (WFS)](https://en.wikipedia.org/wiki/Web_Feature_Service) specification
- Documents may be accessed via URLs acting as an identifier for a Feature (so called HTTP URIs) - these may proxy or
redirect to a WFS request or a static document

## The future of ANZSoilML
> Full description at the [repository wiki](https://github.com/ANZSoilData/ANZSoilML/wiki/Future-Work).

ANZSoilML 2.0.1 has defined a rich and robust conceptual model for the description, sampling and analysis of soils, and
the modelling of their distribution, productivity or health. The next steps for the ANZSoilML community are to:
- repackage the data model in a way that separates concepts (the 'data dictionary') from technology (encodings, and
web services and their APIs)
- define a modular framework that allows deployment of a range of tools that use technology and data that are
appropriate to different communities of users

These communities will be varied. They may be made up of any combination (often in the same individual) of:
-  _data providers_ who must publish and exchange rich, well documented data in a way that preserves the quality of the
data without the loss of _any_ content
- _data engineers_ who work with data providers to publish data in ways the meet the needs of users or with users to
extract and transform data according to their needs
- _data scientists_ who may need fast access to raw data for models and simulations with optional access to rich
metadata to help explain anomalies in results; or Semantic Web inferencing tools to discover new patterns in data
- _web developers_ who need simple, terse and fast interfaces that use widely used and supported technology (ReST, JSON
etc)

The tentative workplan for 'ANZSoilML 3' involves:
1. Converting the current GML Application Schema to a technology independent model that can be formally captured using
Semantic Web data modelling tools and also be published using lightweight web tools
2. Defining practices for publishing data in a manner best suited to web developers (particularly the use of JSON and
GeoJSON, and ReSTful interfaces)
3. The definition of a more advanced, but still relatively simple, delivery mechanism using the O&M data types
4. An investigation of the most effective way to deliver complex objects (for example a full soil profile description)

This work will begin in January 2019.

> The OGC is conducting the [ELFIE](https://github.com/opengeospatial/ELFIE/) initiative - a series of Interoperability
> Experiments (IEs) designed to promote web-friendly implementations of linked environmental data. Our vision for
> ANZSoilML as a usable standard closely aligned with other environmental data standards matches the long term vision
> for ELFIE. We are active participants and expect to use the findings of ELFIE to design implement and the new version.

## Contacts
ANZSoilML is developed by an informal group of research organizations that have a responsibility to deliver soil
information to their own scientists but also other agencies and the general public. They work in close consultation with
various environmental Domain Working Groups within the [Open Geospatial Consortium](https://www.opengeospatial.org/)
(OGC).

The group would be delighted to welcome new members and/or to receive feedback. Contributors do not need to have a
research focus or be members of the OGC, nor do they need to be 'locals'.

| Agency | Country | Contact |
| ------ | ------- | ------- |
| CSIRO | Australia | [Peter Wilson](https://people.csiro.au/w/p/peter-wilson) |
| Federation University of Australia | Australia | [Bruce Simons](http://www.cerdi.edu.au/cb_pages/bruce_simons.php) |
| Manaaki Whenua - Landcare Research | New Zealand | [Alistair Ritchie](https://www.landcareresearch.co.nz/about/people/staff-details?id=cml0Y2hpZWE=) |
",3,3,4,6,soil,"[horizon, measurement, observation, profile, sample, soil, specimen]",00000
1564,awesome-regenerative-agriculture,hopeman15,N/A,N/A,https://api.github.com/repos/hopeman15/awesome-regenerative-agriculture,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1C4:9D23:26BFEF0:4F87691:6522404F.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,soil,"[N, /, A]",00000
1565,BGR-APIs,fruchtfolge,N/A,N/A,https://api.github.com/repos/fruchtfolge/BGR-APIs,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1A5:4A15:28D39DB:53A62B5:65224040.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,soil,"[N, /, A]",00000
1566,NRCS-Soil-Data-Access,jneme910,N/A,https://github.com/jneme910/NRCS-Soil-Data-Access,https://api.github.com/repos/jneme910/NRCS-Soil-Data-Access,Soil Data Access Scripts,"# Soil Data Access SQL Script Library 

Soil Data Access is the name of a suite of web services and applications whose purpose is to meet requirements for requesting and delivering soil survey spatial and tabular data that are not being met by the current Web Soil Survey and Geospatial Data Gateway websites.

# sda-lib 
[GitHub sda-lib Wiki Home](https://github.com/ncss-tech/sda-lib/wiki) 

## Soil Data Access Query Page
1. [Submitting a Query](https://sdmdataaccess.nrcs.usda.gov/Query.aspx) Submit your own SQL or SQL Data Shaping query to retrieve data from the Soil Data Mart.
2. [Using Soil Data Access web services Help](https://sdmdataaccess.nrcs.usda.gov/Help.aspx) Soil Data Access Web Service Help.
3. [Creating my own custom database queries Help](https://sdmdataaccess.nrcs.usda.gov/QueryHelp.aspx) Soil Data Access Query Help. This page provides information one needs in order to effectively query Soil Data Access. Documents and other guides.
3. [Using the Soil Data Access website Help](https://sdmdataaccess.nrcs.usda.gov/Help.aspx)  Soil Data Access Help. The purpose of this page is to provide you with general information about this site and to help you resolve some common issues that may be experienced whilst browsing. 
4. [Citing Soil Data Access as a source of soils data.](https://sdmdataaccess.nrcs.usda.gov/Citation.htm)
5. [Advanced Queries](https://sdmdataaccess.nrcs.usda.gov/documents/AdvancedQueries.html) Soil Data Access provides two advanced features for querying spatial data:
    * Tabular Functions act as ""virtual"" tables that can be used in the ""FROM"" clause of a query.
    * Macros are condensed statements that SDA expands into full SQL statements.
    
   ## Soil Data Access Script Examples with Explanation
 list:
   * [Soil Organic Carbon Stocks by Map Unit](https://ncss-tech.github.io/sda-lib/chapters/Soil%20Organic%20Carbon%20Stocks.html) 
   * [Geometry Intersect by Map Unit Acres](https://ncss-tech.github.io/sda-lib/chapters/) 
   * [Query by Map Unit Name or Map Unit Symbol](https://jneme910.github.io/NRCS-Soil-Data-Access/documents/State-Soil-Scientst-Mapunit-Check) 
   * [Lab Chemical Properties](https://jneme910.github.io/NRCS-Soil-Data-Access/sandbox/Lab_Chemical_Properties.html)
   * [WV Crop Yields](https://jneme910.github.io/NRCS-Soil-Data-Access/sandbox/SDA_WV_Crop.html)
   * [Web Soil Survey Metrics Report by a State](https://jneme910.github.io/NRCS-Soil-Data-Access/sandbox/Web%20Soil%20Survey%20Metrics%20Summary.html)
   * [Aggregate Stability by a State](https://jneme910.github.io/NRCS-Soil-Data-Access/sandbox/lab_aggregate_stability.html)
   
   

",3,3,5,0,soil,"[github-page, jekyll, jekyll-themes, nrcs, soil, soil-data-access, soil-properties, ssurgo-datasets, theme, usda]",00000
1567,VisionSoilAnalyzer,jellespijker,N/A,https://github.com/jellespijker/VisionSoilAnalyzer,https://api.github.com/repos/jellespijker/VisionSoilAnalyzer,Soil analyzer using an USB microscope - for Linux PC and Beaglebone Black,"Soil
====

Project for my Bachelor Minor -> Embedded Vision Design and my graduation project -> Mechanical ENgineering @ University of Applied Sciences HAN Arnhem en Nijmegen.

The Doxygen documentation can be found here: http://peer23peer.github.io/VisionSoilAnalyzer/Webpage/index.html
Further documentation indepth background information can be found at the wikie
Youtube movie of the first testrun of the SoilCape can be found here: https://www.youtube.com/watch?v=Ew5GgzQKrGk

The Soil Analyzer is a portable lab that can analyse soil samples and tells the user about it's optical properties. It looks at the texture and describe it as a Particle Size Distribution. This information is presented as a Cumulative Distribution Function (CDF). It also describes the structure of the soil sample and gives information on the sphericity and roundness / angularity. It does so by analysing the contour of particles, describing them as Fourier Descriptors and using a Neural Network to describe it's properties. Finally it gives the color properties in a histogram in the CIE La*b* colorspace, which show correlations with the fertility of the soil. and a histogram of the Redness Index, which gives has a correlation on the iron content.

The analyse is performed on a Beaglebone Black rev C. with the following image Linux arm 3.8.13-bone68 #1 SMP Sat Nov 22 06:51:58 UTC 2014 armv7l armv7l armv7l GNU/Linux

The soil is analyzed using it optical properties. This is done with a 5MP USB webcam with a maximum magnification of 300x. It has a custom cape with which the user can control the device.

Although it uses openCV most Vision algorithms are custom written (part of my Minor demand). openCV is used for camera aquisition and picture storage mostly. This project make use of custom vision, object detection and classification algorithmes.

test",3,3,1,24,soil,"[beaglebone-black, computer-vision, linux, optical-properties, soil, soil-analyzer, soil-sample, visionprocessing]",00000
1568,Soil-Data-Development-Tools---ArcMap,USDA-NRCS,USDA-NRCS,https://github.com/USDA1568,NRCS-Soil-Data-Access,jneme910,N/A,https://github.com/jneme910/NRCS-Soil-Data-Access,https://api.github.com/repos/jneme910/NRCS-Soil-Data-Access,Soil Data Access Scripts,"# Soil Data Access SQL Script Library 

Soil Data Access is the name of a suite of web services and applications whose purpose is to meet requirements for requesting and delivering soil survey spatial and tabular data that are not being met by the current Web Soil Survey and Geospatial Data Gateway websites.

# sda-lib 
[GitHub sda-lib Wiki Home](https://github.com/ncss-tech/sda-lib/wiki) 

## Soil Data Access Query Page
1. [Submitting a Query](https://sdmdataaccess.nrcs.usda.gov/Query.aspx) Submit your own SQL or SQL Data Shaping query to retrieve data from the Soil Data Mart.
2. [Using Soil Data Access web services Help](https://sdmdataaccess.nrcs.usda.gov/Help.aspx) Soil D1569,GLFW,OudomMunint,N/A,https://github.com/OudomMunint/GLFW,https://api.github.com/repos/OudomMunint/GLFW,GLFW & SOIL Playground,"# OpenGL, SOIL, GLFW playground

![OpenGL](https://img.shields.io/badge/OpenGL-%23FFFFFF.svg?style=for-the-badge&logo=opengl) ![C++](https://img.shields.io/badge/c++-%2300599C.svg?style=for-the-badge&logo=c%2B%2B&logoColor=white) ![C](https://img.shields.io/badge/c-%2300599C.svg?style=for-the-badge&logo=c&logoColor=white)

## Maintenace Status :wrench:
![maintenance-status](https://img.shields.io/badge/maintenance-passively--maintained-yellowgreen.svg)
## CI Build Status :hammer:
[![GLFW Build](https://github.com/OudomMunint/GLFW/actions/workflows/main.yml/badge.svg)](https://github.com/OudomMunint/GLFW/actions/workflows/main.yml) 

## CodeQL :mag:
[![CodeQL](https://github.com/OudomMunint/GLFW/actions/workflows/codeql.yml/badge.svg)](https://github.com/OudomMunint/GLFW/actions/workflows/codeql.yml)

# Dependencies / Requirements
- `GLFW` = `OpenGL 3+`
- `GLEW` = `OpenGL 3+`
- `SOIL` = `OpenGL 3+`
- `GLSL 3.3+`
- GPU that supports `OpenGL 3+` i.e. NVIDIA GeForce 8 series+ or ATI Radeon HD 2000 series+
- GPU with `shader model 4.0+`
- MSBuild: Any version of MSBuild.

## Getting started
### !!! This project will not run on Mac, Visual Studio for Mac doesn't support this project
### First time setup
- Clone the repository
- Download [GLFW](https://www.glfw.org/download.html) and [SOIL](https://www.lonesock.net/soil.html)
- Extract the files and copy the `include` folder to `C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include`
- Copy the `lib` folder to `C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\lib`
- Copy the `dll` folder to `C:\Windows\System32`
- Open the project in Visual Studio and build the project
- If MSBuild is not installed, install it from [here](https://visualstudio.microsoft.com/downloads/#build-tools-for-visual-studio-2019)
- Or modify visual studio installer and install MSBuild
- Open the project in Visual Studio and build the project
- Set the startup project to `GLFW`
- Run the project in `debug` mode
- If project fails to build with dependency errors, check the `include` and `lib` directories or try running NuGet package restore with `Ctrl + Shift + R`
- If build is successful, there should be a window opened with a triangle & an fps counter. <br> <br>
<img src=""window.png""/>",3,3,1,0,soil,"[cpp, glfw, opengl, soil]",00000
1570,soil-moisture,raysummee,N/A,N/A,https://api.github.com/repos/raysummee/soil-moisture,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C12A:2299:2536591:4C76AB0:65224034.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,soil,"[N, /, A]",00000
1571,microbiome-drought-legacy,bioatmosphere,N/A,https://github.com/bioatmosphere/microbiome-drought-legacy,https://api.github.com/repos/bioatmosphere/microbiome-drought-legacy,A theorectical investigation into mechanisms of drought legacy formation and influencing factors in soil microbiomes using DEMENTpy.,"![Decomposition Scenarios](https://github.com/bioatmosphere/microbiome-drought-legacy/blob/master/presentation/source_materials/yas_figure_v2.svg)

# Drought Legacies Mediated by Trait Tradeoffs in Soil Microbiomes

A theorectical investigation into drought legacy formation mechanisms and influencing factors in soil microbial systems using [**DEMENTpy v1.0**](https://github.com/bioatmosphere/DEMENTpy/releases/tag/v1.0).

---

**Bin Wang, Steven D. Allison. [Drought Legacies Mediated by Trait Tradeoffs in Soil Microbiomes](https://doi.org/10.1002/ecs2.3562). Ecosphere. 10.1002/ecs2.3562**

---

## Data and step-by-step Analysis (with Python in Jupyter Notebook)

**version_1**: data and analysis with a different Osmolyte Production Rate as in **version_2**, hightlighting the robustness of the simulation.

**version_2**: data and analysis behind what's presented in the manuscript.


## [Manuscript](https://github.com/bioatmosphere/microbiome-drought-legacy/tree/master/writing)


## Presentation 

A rough compilation of slides and a few figures in the manuscript, as well as some images from other sources used in the slides. 
",3,3,1,0,soil,"[bacteria, carbon, community, dement, dementpy, drought, ecology, enzyme, legacy, memory, microbes, microbiome, osmolyte, soil, systems, tradeoff]",00000
1572,Shallow-StrainPathMethod,lluis-mv,N/A,https://github.com/lluis-mv/Shallow-StrainPathMethod,https://api.github.com/repos/lluis-mv/Shallow-StrainPathMethod,Implementation of the Strain Path method and Shallow Strain Path method to compute the displacement and strain fields due to the penetration of a tube," ## Shallow-StrainPathMethod
 [![License][license-image]][license]
 
 [license-image]: https://img.shields.io/badge/license-BSD-green.svg?style=flat
[license]: https://github.com/lluis-mv/Shallow-StrainPathMethod/blob/main/LICENSE
 
Matlab/Octave code to compute displacements, velocities and strains due to the penetration of a tube using the Strain Path Method ([Baligh, 1985](http://doi.org/10.1061/(ASCE)0733-9410(1985)111:9(1108))).

The Shallow Strain Path Method ([Sagaseta et al, 1998](http://doi.org/10.1002/(SICI)1096-9853(199710)21:10<687::AID-NAG897>3.0.CO;2-3)) is also considered.

Both codes follow the approach proposed by [Sagaseta et al (1998)](http://doi.org/10.1002/(SICI)1096-9853(199710)21:10<687::AID-NAG897>3.0.CO;2-3): the tube moves from the far field to the center of the domain.

Elliptical integrals are computed according to [Hollos (2012)](http://www.exstrom.com/math/elliptic/ellipint.html) since it is by far more eficient than using the Matlab build-in elliptical integrals.

Data postprocessing is done in [GiD](http://www.gidhome.com/).



### Octave compatibility with symbolic generation

The code is fully compatible with Octave. However, the symbolic generation of these files is slow and probably should be changed. 

The symbolic toolbox of octave might be installed (in Linux) by typping in the octave command window:

> pkg install -forge symbolic

and loaded with:
   
> pkg load symbolic

It might be necessary to install sympy. In a terminal, enter the following line:

> sudo apt-get install python-sympy

## License and citation

This code is distributed under BSD 3-Clause License. 


If you find these codes useful for your work, please cite as follows:
- Monforte, L., Arroyo, M., Carbonell, J.M. & Gens, A. (2022) Large strain analysis of undrained smooth tube samplig. Géotechnique, 72(1):61–77 [https://doi.org/10.1680/jgeot.19.p.354](https://doi.org/10.1680/jgeot.19.p.354)



",3,3,1,0,soil,"[geomechanics, geotechnical-engineering, matlab, sampling-disturbance, soil, soil-mechanics, soil-sample, soil-structure, strain-path]",00000
1573,SGEngine-Cpp,stuhacking,N/A,https://github.com/stuhacking/SGEngine-Cpp,https://api.github.com/repos/stuhacking/SGEngine-Cpp,C++ Renderer using OpenGL and SDL2,"{'message': 'Not Found', 'documentation_url': 'https://docs.github.com/rest/repos/contents#get-repository-content'}",2,2,1,0,soil,"[3d, engine, opengl, realtime, sdl2, soi1574,conan-soil2,bincrafters,bincrafters,https://github.com/bincrafters/conan-soil2,https://api.github.com/repos/bincrafters/conan-soil2,Conan package for the SOIL2 Image library,"## Package Status

| Bintray | Windows | Linux & macOS |
|:--------:|:---------:|:-----------------:|
|[![Download](https://api.bintray.com/packages/bincrafters/public-conan/soil2%3Abincrafters/images/download.svg) ](https://bintray.com/bincrafters/public-conan/soil2%3Abincrafters/_latestVersion)|[![Build status](https://ci.appveyor.com/api/projects/status/github/bincrafters/conan-soil2?svg=true)](https://ci.appveyor.com/project/bincrafters/conan-soil2)|[![Build Status](https://travis-ci.com/bincrafters/conan-soil2.svg)](https://travis-ci.com/bincrafters/conan-soil2)|

## Conan Information

Bincrafters packages can be found in the following public Conan repository:

[Bincrafters Public Conan Repository on Bintray](https://bintray.com/bincrafters/public-conan)

*Note: You can click the ""Set Me Up"" button on the Bintray page above for instructions on using packages from this repository.*


## Issues

If you wish to report an issue or make a request for a Bincrafters package, please do so here:

[Bincrafters Community Issues](https://github.com/bincrafters/community/issues)


## General Information

This git repository is managed by the Bincrafters team and holds files related to Conan.  For detailed information about Bincrafters and Conan, please visit the following resources:

[Conan Documentation](https://docs.conan.io)

[Bincrafters Technical Documentation](http://bincrafters.readthedocs.io/en/latest/)

[Bincrafters Blog](https://bincrafters.github.io)


## License Information

Bincrafters packages are hosted on [Bintray](https://bintray.com) and contain software which is licensed by the software's maintainers and NOT Bincrafters.

The contents of this GIT repository are completely separate from the software being packaged and therefore licensed separately. The license for all files contained in this GIT repository are defined in the [LICENSE.md](LICENSE.md) file in this repository. The licenses included with all Conan packages published by Bincrafters can be found in the Conan package directories in the following locations, relative to the Conan Cache root (`~/.conan` by default):

    ~/.conan/data/<pkg_name>/<pkg_version>/bincrafters/package/<random_package_id>/license/<LICENSE_FILES_HERE>

*Note :   The most common filenames for OSS licenses are `LICENSE` AND `COPYING` without file extensions.*
",2,2,3,0,soil,"[conan, soil, soil2]",00000
1575,labsaf,ambarja,N/A,https://github.com/ambarja/labsaf,https://api.github.com/repos/ambarja/labsaf,Labsaf is a packages of R that providers functions to spatial analysis and interpolation ,"# **LABSAF** 🌱 <img src=""https://raw.githubusercontent.com/ambarja/labsaf/main/man/figures/logo.png"" align=""right"" width=""20%"">
LABSAF is an R package under development that provides multiple functions for exploratory spatial soil analysis.
It has multiple user-friendly functions for exploring the Earth Engine catalogue dataset using the `tidyverse` syntax derived from `tidyrgee` and `rgee`. Finally it has multiple functions for spatial exploratory graphics and also for mapping derived for `ggplot`, `sfmap` and `tidyterra`.
 
## 🟢 **Package installation**

You can install the first version of labsaf from
[GitHub](https://github.com/ambarja/labsaf):

The following code just copy and paste into the R console:

```r
if(!require(""remotes"")) install.packages(""remotes"")
remotes::install_github(""ambarja/labsaf"")
```

```r
library(labsaf)
```



",2,2,0,0,soil,"[inia, labsaf, peru, soil, spatial]",00000
1576,Tree-Root-Microbiome-Project,TomC-93,N/A,https://github.com/TomC-93/Tree-Root-Microbiome-Project,https://api.github.com/repos/TomC-93/Tree-Root-Microbiome-Project,The scripts contained in this repository relate directly to the work conducted by the Tree Root Microbiome Project (TRMP) led by Dr Steve Wakelin.,"# Tree-Root-Microbiome-Project
The files contained in this repository relate directly to the work conducted for the Tree Root Microbiome Project (TRMP) led by Dr Steve Wakelin.

## Aim

Helping trees to adapt quickly to climate change by using the genetic information and metabolic pathways of all the organisms existing in intimate partnership with the tree – the microbiome.


![TRMP](https://user-images.githubusercontent.com/90012658/156644294-4c26c4df-19ed-4a10-b725-5193f16aa790.jpg)
> Image adapted from Hall et. al (2018)
>
> Hall EK, Bernhardt ES, Bier RL, Bradford MA, Boot CM, Cotner JB, del Giorgio PA, Evans SE, Graham EB, Jones SE, Lennon JT, Locey KJ, Nemergut D, Osborne BB, Rocca JD, Schimel JP, Waldrop MP, Wallenstein MD (2018) Understanding how microbiomes influence the systems they inhabit. Nature Microbiology 3:977-982.

## Outcomes

1. Showing how microbiome associations can alter trees’ drought tolerance.

2. Determining if the microbiome relationships that co-evolved with Pinus radiata have been altered/lost with domestication of radiata and if this affects how it adapts to environmental change.

3. Establishing Pinus radiata as the global model for tree-microbiome research, providing a platform for transformative tree and silvicultural science.

4. Ensuring the science is adopted by (a) engaging the international scientific community, (b) working with industry stakeholders, and (c) focussing on science excellence and communication.

5. Developing relationships with conservation and indigenous groups to enable microbiomedriven conservation of Aotearoa NZ’s indigenous tree species and provide new opportunities to expand the diversity of all forests.

6. Creating enduring tree/microbiome groups with increased resilience to climate change and emerging stressors to:

      •  Rescue at-risk species

      • Improve afforestation outcomes by supporting more diverse, productive forests
      
      • Support more diverse, productive forests with reduced needs for external inputs

Together, these outcomes will help underpin the carbon neutral economy that is central our government responses to climate change as a species

### Funding Statement:

The TRMP is jointly funded by the MBIE Endeavour Fund and the Forestry Growers Levy Trust, this research programme kicked off in October 2020.
",2,2,2,0,soil,"[forest, forestry, ftir, ftir-data-analysis, microbiology, microbiome, microbiome-analysis, microbiome-data, microbiome-workflow, soil, soil-properties, soil-science, soil-survey, spectroscopy, tree]",00000
1577,Garduino,kerimkaan,N/A,https://github.com/kerimkaan/Garduino,https://api.github.com/repos/kerimkaan/Garduino,Plant Monitoring & Management System,"# Garduino<sup>v0.7</sup>
[![Build Status](https://travis-ci.org/kerimkaan/Garduino.svg?branch=master)](https://travis-ci.org/kerimkaan/Garduino) [![Bu1578,Garduino,kerimkaan,N/A,https://github.com/kerimkaan/Garduino,https://api.github.com/repos/kerimkaan/Garduino,Plant Monitoring & Management System,"# Garduino<sup>v0.7</sup>
[![Build Status](https://travis-ci.org/kerimkaan/Garduino.svg?branch=master)](https://travis-ci.org/kerimkaan/Garduino) [![Build status](https://ci.appveyor.com/api/projects/status/xe7xvrd5gprempey?svg=true)](https://ci.appveyor.com/project/kerimkaan/garduino)
[![FOSSA Status](https://app.fossa.io/api/projects/git%2Bgithub.com%2Fkerimkaan%2FGarduino.svg?type=shield)](https://app.fossa.io/projects/git%2Bgithub.com%2Fkerimkaan%2FGarduino?ref=badge_shield)
> Plant Monitoring &amp; Management System on Arduino

## Introduction

Garduino is a design for a plant’s monitoring & watering. The design gives us remote controlling, automation & less costly management of a plant or a garden. The project uses Arduino on IR (Infra-red, Optional) and Wi-Fi (ESP8266).

## Wiring

Under construction.

### Remote Control

Under construction.

*IF YOU USE IR RECEIVER & TRANSMITTER IN THE PROJECT, INCLUDE ""IROptional.ino"" TO THE PROJECT*

### Communication & Integration

Under construction.


## Bill of Materials

* 1 x Arduino UNO
* 1 x DHT11 Temp. & Hum. Sensor
* 1 x YL-69 Soil Humidity Sensor
* 1 x HC-SR04 Ultrasonic Sensor
* 1 x Water pump (12VDC)
* 1 x 5VDC to 12VDC Step-up converter
* 1 x Blue LED
* 1 x Yellow LED
* 1 x Red LED
* 4 x 10k Ohm Resistor
* 1 x IR receiver (Optional)
* 1 x IR transmitter (Optional)
* 1 x ESP8266 Wi-Fi Module

…

### Versions

* Gardunio is **under development**. For get the latest release, see **[Releases](https://github.com/kerimkaan/Garduino/releases/)** page.


------

### License, Issues and Contributing:

* Garduino is under the MIT license. See the [LICENSE](https://github.com/kerimkaan/Garduino/blob/master/LICENSE) file for details.
* Bugs, suggestions or feature requests, [open an issue](https://github.com/kerimkaan/Garduino/issues)


For more information about contributing issues or pull requests, contact from **Github** or Twitter(**[@kerimkaandonmez](https://twitter.com/kerimkaandonmez)**)


*UNDER DEVELOPMENT. NOT READY FOR USE*


[![FOSSA Status](https://app.fossa.io/api/projects/git%2Bgithub.com%2Fkerimkaan%2FGarduino.svg?type=large)](https://app.fossa.io/projects/git%2Bgithub.com%2Fkerimkaan%2FGarduino?ref=badge_large)",2,2,1,0,soil,"[arduino, gardening, management, plant, sensor, soil]",00000
1579,soiltestr,evanmascitti,N/A,https://github.com/evanmascitti/soiltestr,https://api.github.com/repos/evanmascitti/soiltestr,A tidy & reproducible workflow for soil physical testing,"This folder contans individual data files from the Mastersizer 3000.

    Each file is named `sample-[SAMPLE NUMBER].xlsx` to facilitate joining
    with other metadata from this set/batch of analyses.
",2,2,1,0,soil,"[baseball, geotechnical-engineering, soil]",00000
1580,soil-water-level,ahmetarsiv,N/A,https://github.com/ahmetarsiv/soil-water-level,https://api.github.com/repos/ahmetarsiv/soil-water-level,Open source soil water level measurement project,"# Soil Water Level
[![License](https://poser.pugx.org/bagisto/bagisto-gdpr/license)](https://github.com/arsivpro/soil-water-level/blob/master/LICENSE)

## 1. Introduction:

An open-source system that measures the soil water level and also warns with warning lights.

Thank you to all our backers! 🙏

<a href=""https://opencollective.com/arsivpro#contributors"" target=""_blank""><img src=""https://opencollective.com/arsivpro/backers.svg?width=890""></a>
",2,2,0,0,soil,"[level, opensource, soil, water]",00000
1581,Environmental-Code-Sharing,HorizonsRC,HorizonsRC,https://github.com/HorizonsRC/Environmental-Code-Sharing,https://api.github.com/repos/HorizonsRC/Environmental-Code-Sharing,** DEVELOPMENT CODE ** Code sharing development group. HRC shall not be held liable for any claim for any loss or damage as a result of reliance on the information contained in this repository.,"{'message': 'Not Found', 'documentation_url': 'https://docs.github.com/rest/repos/contents#get-repository-content'}",2,2,5,0,soil,"[air, c, compliance, consents, emergency-management, environment, land, planning, python, r, river-engineering, soil, transport, water, water-management, water-monitoring, water-quality]",00000
1582,sample-compare-cpt,viktor-platform,viktor-platform,https://github.com/viktor-platform/sample-compare-cpt,https://api.github.com/repos/viktor-platform/sample-compare-cpt,This sample app shows how to compare multiple CPT's (.gef),"![](https://img.shields.io/badge/SDK-v13.0.0-blue) <Please check version is the same as specified in requirements.txt>

# Compare CPT files
This sample app shows how to compare two CPT's (.gef) 

In this app you can create multiple projects. In each pro1582,pygada,DOV-Vlaanderen,DOV-Vlaanderen,https://github.com/DOV-Vlaanderen/pygada,https://api.github.com/repos/DOV-Vlaanderen/pygada,Python geostatistical package to perform automated exploratory and geostatistical data analysis.,"# pygada
[![Documentation Status](https://readthedocs.org/projects/pygada/badge/?version=latest)](https://pygada.readthedocs.io/en/stable/?badge=latest)
[![DOI](https://zenodo.org/badge/617938141.svg)](https://zenodo.org/badge/latestdoi/617938141)
[![Project Status: WIP – Initial development is in progress, but there has not yet been a stable, usable release suitable for the public.](https://www.repostatus.org/badges/latest/wip.svg)](https://www.repostatus.org/#wip)
[![Binder]1583,pygada,DOV-Vlaanderen,DOV-Vlaanderen,https://github.com/DOV-Vlaanderen/pygada,https://api.github.com/repos/DOV-Vlaanderen/pygada,Python geostatistical package to perform automated exploratory and geostatistical data analysis.,"# pygada
[![Documentation Status](https://readthedocs.org/projects/pygada/badge/?version=latest)](https://pygada.readthedocs.io/en/stable/?badge=latest)
[![DOI](https://zenodo.org/badge/617938141.svg)](https://zenodo.org/badge/latestdoi/617938141)
[![Project Status: WIP – Initial development is in progress, but there has not yet been a stable, usable release suitable for the public.](https://www.repostatus.org/badges/latest/wip.svg)](https://www.repostatus.org/#wip)
[![Binder](https://mybinder.org/badge_logo.svg)](https://mybinder.org/v2/gh/dov-vlaanderen/pygada/main?filepath=docs%2Fnotebooks)
![GitHub top language](https://img.shields.io/github/languages/top/DOV-Vlaanderen/pygada)
![GitHub repo size](https://img.shields.io/github/repo-size/DOV-Vlaanderen/pygada)
<a href=""https://github.com/DOV-Vlaanderen/pygada/blob/master/LICENSE""><img src=""https://img.shields.io/github/license/DOV-Vlaanderen/pygada?color=2b9348"" alt=""License Badge""/></a>

<a href=""https://github.com/DOV-Vlaanderen/pygada/stargazers""><img src=""https://img.shields.io/github/stars/DOV-Vlaanderen/pygada"" alt=""Stars Badge""/></a>
<a href=""https://github.com/DOV-Vlaanderen/pygada/watchers""><img src=""https://img.shields.io/github/watchers/DOV-Vlaanderen/pygada"" alt=""Watchers Badge""/></a>
<a href=""https://github.com/DOV-Vlaanderen/pygada/network/members""><img src=""https://img.shields.io/github/forks/DOV-Vlaanderen/pygada"" alt=""Forks Badge""/></a>
<a href=""https://github.com/DOV-Vlaanderen/pygada/pulls""><img src=""https://img.shields.io/github/issues-pr/DOV-Vlaanderen/pygada"" alt=""Pull Requests Badge""/></a>
<a href=""https://github.com/DOV-Vlaanderen/pygada/issues""><img src=""https://img.shields.io/github/issues/DOV-Vlaanderen/pygada"" alt=""Issues Badge""/></a>
<a href=""https://github.com/DOV-Vlaanderen/pygada/graphs/contributors""><img alt=""GitHub contributors"" src=""https://img.shields.io/github/contributors/DOV-Vlaanderen/pygada?color=2b9348""></a>

![GitHub last commit](https://img.shields.io/github/last-commit/DOV-Vlaanderen/pygada)

pygada is a python package to perform automated exploratory and geostatistical data-analysis.

It is hosted on [GitHub](https://github.com/DOV-Vlaanderen/pygada) and development is coordinated by [Databank Ondergrond Vlaanderen (DOV)](https://www.dov.vlaanderen.be). \
DOV aggregates data about soil, subsoil and groundwater of Flanders and makes them publicly available.
With this package DOV offers a tool to perform data-analysis on the data from DOV. Nevertheless, this package also works for a private dataset.

To get started, see the documentation at https://pygada.readthedocs.io/en/stable/.

Please note that using DOV data with pygada is governed by the same [disclaimer](https://www.dov.vlaanderen.be/page/disclaimer) that applies to the other DOV services. Be sure to consult it when using DOV data with pygada.

## Installation

You can install `pygada` stable using pip:

```shell script
pip install pygada
```

<!--Or clone the [git repository](https://github.com/DOV-Vlaanderen/pygada) and install with `python setup.py install` to get the latest snapshot from the master branch.--> 

To contribute to the code, check out the [installation instructions](https://pygada.readthedocs.io/en/stable/installation.html) and the [development guidelines](https://pygada.readthedocs.io/en/stable/development.html).

## Quick start

## Documentation

Full documentation of `pygada` can be found on our [ReadTheDocs page](https://pygada.readthedocs.io/en/stable).

## Contributing

You do not need to be a code expert to contribute to this project as there are several ways you can contribute to
this project. Have a look at the [contributing page](https://pygada.readthedocs.io/en/stable/contributing.html).

*This repository is currently being build up based on the thesis work of Guillaume Vandekerckhove, pygeostat.*
",2,2,4,0,soil,"[data-analysis, data-science, data-visualization, geostatistics, package, python, soil, water]",00000
1584,soil-theme-vscode,codesbiome,N/A,https://github.com/codesbiome/soil-theme-vscode,https://api.github.com/repos/codesbiome/soil-theme-vscode,A relaxing dark theme for Visual Studio Code with simple colors for the Editor Interface. This theme provides easy to read interface for dim-light environments (night).,"# Soil Theme

A relaxing dark theme for `Visual Studio Code` with simple colors for the Editor Interface, it also provides easy to read interface for dim-light environments (night).

Install from Marketplace : https://marketplace.visualstudio.com/items?itemName=codesbiome.soil-theme-vscode

<br />
<img src=""assets/soil.png"" />

<details>
  <summary>Show Monokai Syntax Colors</summary>
  <br />
  <img src=""assets/soil-monokai.png"" />
</details>

<br />

### Supported Languages 🎉

- `C / C++`
- `C#`
- `JAVA`
- `HTML`
- `CSS`
- `SCSS / SASS`
- `LESS`
- `JavaScript`
- `TypeScript`
- `JSX / TSX`
- `XML / XAML / YAML`
- `Markdown`
- `JSON`
- `Markdown`
- `Flutter`
- `Dart`
- `PHP`

<br>

### Information & Tips 📌

If you're using Windows 10, these settings of `Editor` might provide you a better experience with this theme :

```json
    ""editor.fontSize"": 13,
    ""editor.lineHeight"": 22,
    ""editor.suggestFontSize"": 13,
    ""editor.padding.top"": 10,
    ""terminal.integrated.lineHeight"": 1.4,
    ""editor.fontFamily"": ""'Jetbrains Mono', 'Fira Code', Consolas, 'Courier New', monospace"",
```

- Text Font : `Jetbrains Mono`
- File Icon Theme : `Material Icon Theme`

<br />

### Issue or Requests

Found any 🐛 bug/glitch or have a request related to this project? Feel free to submit `Issue` at respository <a href=""https://github.com/codesbiome/soil-theme-vscode/issues"">here</a>.
<br>
Cheers 🍻
",2,2,1,0,soil,"[dark-theme, soil, soil-theme, theme, vscode-theme]",00000
1585,Soil-Type-Classification,souvik0306,N/A,https://github.com/souvik0306/Soil-Type-Classification,https://api.github.com/repos/souvik0306/Soil-Type-Classification,• Designed a classification model with 5 classes and 98% testing accuracy using a Convolutional Neural Network. • Applied Data Augmentation and reduced validation losses by 30% by applying MobileNetV2 Architecture. ,"## Soil-Type-Classification

### About the Dataset - 
The dataset consists of 5 varieties of soil images in 5 directories or folders. [[Kaggle]](https://www.kaggle.com/datasets/prasanshasatpathy/soil-types)

### Contents -
1. Black Soil
2. Yellow Soil
3. Cinder Soil
4. Laterite Soil
5. Peat Soil 

| Black Soil    | Yellow Soil |
| :-----------: | :-----------: |
|   <image src=""https://github.com/souvik0306/Soil-Type-Classification/blob/main/Soil%20types/Black%20Soil/Black_Soil_%20(14).jpg"" width=""450"" height=""350"">  | <image src=""https://github.com/souvik0306/Soil-Type-Classification/blob/main/Soil%20types/Yellow%20Soil/Yellow_Soil_%20(14).jpg"" width=""450"" height=""350"">  |

| Cinder Soil   | Laterite Soil        |
| :-----------: | :-----------: |
|  <image src=""https://github.com/souvik0306/Soil-Type-Classification/blob/main/Soil%20types/Cinder%20Soil/Cinder_Soil_%20(14).jpg"" width=""450"" height=""350""> |    <image src=""https://github.com/souvik0306/Soil-Type-Classification/blob/main/Soil%20types/Laterite%20Soil/Laterite_Soil_%20(12).jpg"" width=""450"" height=""350"">    |

| Peat Soil   | Training vs Val Accuracy    |
| :-----------: | :-----------: |
|  <image src=""https://github.com/souvik0306/Soil-Type-Classification/blob/main/Soil%20types/Peat%20Soil/Peat_Soil_%20(14).jpg"" width=""450"" height=""350""> |    <image src=""https://github.com/souvik0306/Soil-Type-Classification/blob/main/train_vs_val.png"" width=""450"" height=""350"">    |

The dataset is a very small dataset meant for beginners to build ML models using this dataset currently. A small dataset helps in learning without wasting hefty time in training the model for half an hour or more and expensive computation. The results won't be really great as the dataset is really low and thus overfitting and other issues.

## Objectives - 
• Designed a classification model with 5 classes and 98% testing accuracy using a Convolutional Neural Network. 

• Applied Data Augmentation and reduced validation losses by 30% by applying MobileNetV2 Architecture. 
",2,2,1,0,soil,"[computer-vision, deep-learning, soil, soil-classification]",00000
1586,Phinesture,PhinesTech,N/A,N/A,https://api.github.com/repos/PhinesTech/Phinesture,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1EA:3BF5:71F042:EAF9FC:65224068.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,soil,"[N, /, A]",00000
1587,IrrigationPiHat,Cameron-Ray,N/A,https://github.com/Cameron-Ray/IrrigationPiHat,https://api.github.com/repos/Cameron-Ray/IrrigationPiHat,Irrigation System μPiHAT for hobby or scientific use. This repo provides a full design process to create your own μPiHAT PCB from scratch. It allows you to control solenoid valves (although the system can be modified slightly to control various sub systems) from input taken from soil moisture sensors (these can also be substituted with other sensor types).,"# **Irrigation System μPiHAT <br>for RaspberryPi Zero**

The irrigation PiHAT can be used for the irrigation of small gardens/vegetable patches via soil moisture level sensing and water dispensing. It may also be used in lab environments where scientists need to hold the moisture level of the soil at a constant level.

An optional configuration, which shows the modular ability of the HAT, is to replace the moisture sensors with a float switch or humidity sensor to either fill up pools; ponds; or water tanks or to operate ventilation systems if an enclosed space reaches a maximum humidity level.

The PiHAT will allow more advanced users to continuously perform measurements or monitor the soil moisture levels by sending its input from the sensors into the main Pi GPIO header.
<br><br>

![Example Irrigation PiHAT in operation](<Combined Schematic & PCB/PCBScreenshots/IrrigationDemo.jpg>)

---

# Table of Contents

1. [**Getting Started**](#getting-started)

2. **How To Operate The...**

   - [Amplifier Module](How-Tos/DesignProcess.md#amplifier-module)
   - [LED Module](How-Tos/DesignProcess.md#led-module)
   - [Power Module](How-Tos/DesignProcess.md#power-module)

3. **Circuit Design Process**

   - [Requirements and Specifications](<Requirements & Specifications.pdf>)
   - [Simulation Output](<Simulation Files/SimulationPlots>)
   - [Final Individual Circuit Schematics](<Individual Module Schematics>)
   - [Combined Circuit Schematic](<Combined Schematic & PCB/Main Circuit.sch>)

4. **Final PCB Resources**

   - [KiCAD PCB Design File](<Combined Schematic & PCB/Main Circuit.kicad_pcb>)
   - [Bill of Materials](<Combined Schematic & PCB/BillOfMaterials.md>)
   - [Manufacturing Notes](How-Tos/ManufacturingNotes.md)

5. [**Contributing To This Repo**](CONTRIBUTING.md)

---

# Getting Started

Here's how to get started with your own Irrigation System PiHAT project!

## **Step 1:**

Clone this repository to your computer to get started by using the following command line git command:<br>
`git clone https://github.com/ryxcam002/IrrigationPiHat`<br><br>

## **Step 2:**

Change directory into the newly cloned repo using:<br>
`cd IrrigationPiHat`<br><br>

## **Step 3:**

Make sure you have the latest version of KiCAD and LTSpice installed. The download links to these open source programs can be found at:<br>
KiCAD - https://www.kicad.org/download/<br>
LTSpice - https://www.analog.com/en/design-center/design-tools-and-calculators/ltspice-simulator.html<br><br>

## **Step 4:**

Go through the design files to check if all is working well. If you wish to make any changes to the design, pay particular attention to the `Individual Module Schematics`, `Combined Schematic & PCB`, and `Simulation Files` folders.<br><br>

- The `Individual Module Schematics` folder is where you will find each submodule KiCAD schematic design. These can be modified individually to suit your needs.<br>
- The `Simulation Files` folder is where the V2.0 circuits weere simulated to determine if all parameters ffor circuit components were setup correctly.<br>
- The `Combined Schematic & PCB` folder is where all the submodules have been combined to form a single schematic, ready for PCB footprint assignment and BOM generation.<br><br>

## **Step 5:**

Generate gerber files for final PCB manufacturing. To do this, open the `.kicad_pcb` file in the `Combined Schematic & PCB` folder, ensure that all components/PCB specifications are correct and generate the gerber files from there.

## **Step 6:**

Manufacture PCB and solder all components or have this done by the manufacturer if they support this. You now have a micro irrrigation controller!

---

# Contributing To This Repo

See the full contribution documentation [here](CONTRIBUTING.md).

---
",2,2,0,0,soil,"[irrigation-pi-hat, moisture-level, power-supply, raspberry-pi, sensors, soil, solenoid-valve]",00000
1588,textural-triangle-canvas,netosep,N/A,https://github.com/netosep/textural-triangle-canvas,https://api.github.com/repos/netosep/textural-triangle-canvas,Triângulo Textural para classificação do solo desenvolvido com o HTML Canvas,"<h1 align=""center"">
  <p>Textural Triangle Canvas</p>
</h1>

<div align=""center"">
  <p>Triângulo Textural para classificação do solo desenvolvido com o <a href=""https://developer.mozilla.org/pt-BR/docs/Web/API/Canvas_API""><i>HTML Canvas</i></a>. <a href=""https://netosep.github.io/textural-triangle-canvas/"">Ver demonstração</a>.</p>
  <img alt=""License"" src=""https://img.shields.io/github/license/netosep/textural-triangle-canvas?color=blue&logo=apache&logoColor=white"">
  <img alt=""Stars"" src=""https://img.shields.io/github/stars/netosep/textural-triangle-canvas?logo=github&color=blue"">
</div>

#

### 💡 Como utilizar
Faça o <a href=""https://github.com/netosep/textural-triangle-canvas/releases/latest"">download</a> do projeto ou use pelo <a href=""https://www.jsdelivr.com/"">cdn.jsdelivr.net<a> copiando um dos scripts abaixo:
```html
<script src=""https://cdn.jsdelivr.net/gh/netosep/textural-triangle-canvas/TexturalTriangleCanvas.js""></script>
// ou
<script src=""https://cdn.jsdelivr.net/gh/netosep/textural-triangle-canvas/TexturalTriangleCanvas.min.js""></script>
```

Em seu _HTML_, crie sua tag canvas com um ID:
```html
<canvas id=""myCanvas"" width=""700"" height=""700""></canvas>
```
> **Note**
> — Use as medidas de `width` e `height` do canvas iguais! Quanto maior o tamanho melhor a resolução da imagem gerada.

Em seu código _JavaScript_, use:
```html
<script>
    // passando como parâmetro (string), o id do seu Canvas
    let myTriangle = new TexturalTriangleCanvas('myCanvas');
</script>
```

Para somente desenhar o triângulo sem os valores, use:
```js
myTriangle.draw();
// ou diretamente
new TexturalTriangleCanvas('myCanvas').draw();
```
**🖼 Preview:**
<div align=""left"">
  <img src=""https://i.imgur.com/XqNrB9W.png"" width=""450"">
</div>

#

Para desenhar com valores, use:
```js
let siltPercent = 15;
let sandPercent = 60;
let clayPercent = 25;

triangle.drawWithValues(siltPercent, sandPercent, clayPercent);
// ou também diretamente
new TexturalTriangleCanvas('myCanvas').drawWithValues(siltPercent, sandPercent, clayPercent);
```

> **Note**
> A sequencia dos parâmetros da função devem ser respectivamente: silte, areia e argila

> **Warning**
> A soma dos três valores deve **resultar 100**, caso contrário retornará um erro no console.
  
**🖼 Preview:**
<div align=""left"">
  <img src=""https://i.imgur.com/6a8U0UZ.png"" width=""450"">
</div>

#

### 🌟 Extras

Idiomas suportados: **Inglês**, **Português Brasileiro** e **Espanhol** (fique a vontade para utilizar o seu 😉).
```js
myTriangle.setLanguage('pt-br'); // para usar o idioma português brasileiro (nativo)
```
> **Note**
> Caso queira utilizar um idioma diferente dos três citados, você pode passar um objeto json como segundo parâmetro da função. Para mais informações e padrões, <a href=""https://github.com/netosep/textural-triangle-canvas/blob/main/TexturalTriangleCanvas.js#L99"">veja o código fonte</a>.

Utilize também o método `refresh()` para aplicar alterações de texto na imagem do triângulo:
```js
myTriangle.refresh();
```

#

### 📌 Contribuições
Sinta-se à vontade para abrir _issues_ e realizar _pull requests_. Contribuições são bem-vindas 😉.

#

### 📜 Licença
[MIT](https://github.com/netosep/textural-triangle-canvas/blob/main/LICENSE.md)

#

<p align=""center"">
  <i>Developed with 🖤 by <a href=""https://github.com/netosep"">Neto Sepulveda</a></i>
</p>
",2,2,1,0,soil,"[agronomy, canvas, javascript, soil]",00000
1589,An_emergent_soil_enzyme_decomposition_model,bioatmosphere,N/A,https://github.com/bioatmosphere/An_emergent_soil_enzyme_decomposition_model,https://api.github.com/repos/bioatmosphere/An_emergent_soil_enzyme_decomposition_model,Source data and code supporting model-based analysis of emergent properties (ECA) of soil enzyme-driven organic matter decomposition,"# Emergent properties of organic matter decomposition by soil enzymes
**This repository deposits source data and code supporting our model-based analysis of Emergent properties of organic matter decomposition by soil enzymes:**

**Wang, B., & Allison, S. D. (2019). [Emergent properties of organic matter decomposition by soil enzymes](https://doi.org/10.1016/j.soilbio.2019.107522). Soil Biology and Biochemistry, 107522.** 

<!--![GitHub stars](https://img.shields.io/github/stars/bioatmosphere/An_emergent_soil_enzyme_decomposition_model?style=social) -->

![GitHub repo size](https://img.shields.io/github/repo-size/bioatmosphere/An_emergent_soil_enzyme_decomposition_model)
![GitHub contributors](https://img.shields.io/github/contributors/bioatmosphere/An_emergent_soil_enzyme_decomposition_model)
![GitHub forks](https://img.shields.io/github/forks/bioatmosphere/An_emergent_soil_enzyme_decomposition_model?style=social)
![Twitter Follow](https://img.shields.io/twitter/follow/bioatmo_sphere?style=social)
![Github All Releases](https://img.shields.io/github/downloads/bioatmosphere/An_emergent_soil_enzyme_decomposition_model/total.svg)

![Emergent Enzyme Kinetics](https://pbs.twimg.com/media/D9zCMN3U8AAq1DF?format=jpg&name=4096x4096)

In detail, this repository stores data & code following the order of figures occurring in our manuscript:

For each figure (seven in total, of which 3 are supporting figures), the source data (.csv) and the corresponding code (.ipynb) doing the statistical analyses (in R/Python) and drawing the figures (in Python 3.6) in Jupyter Notebook are deposited in a seperate folder. More importantly, all 'real' source data, which are literally model outputs, are provided in the /Source Data folder. These source data have the potential to be further tapped into for other analyses.

With JupyterNotebook, step-by-step analyses are demonstrated, facilitating reproducible analyses. Some essential Python packages (Pandas and Numpy, as well as Matplotlib), of course, should be installed before any real re-runs of these notebooks.

Any questions should be directed to B. Wang at wbwenwu@gmail.com or bw8my@virginia.edu

------------------------------------------------------------------------------------------------------------------------------------------
#### File Strucure

**Publication/**

The pulished manuscript in pdf and supporting material in .docx.

**Source Data/**

Data from the model outputs of DEMENT, in contrast to the data presented below which is processed (but just literally data extraction) and derived from these data. How to extract data from these outputs, the code used, is demonstrated in Jupyter Notebooks with R. In addition, parameters setting up the DEMENT is listed.

**Figure_1/**

All data and jupyter notebooks pertaining to the Figure 1

**Figure_2/**

Similarly, all data and jupyter notebooks pertaining to the Figure 2. And the supporting Fig.1 can be derived from here.

**Figure_3/**

Similarly, all data and jupyter notebooks pertaining to the Figure 3

**Figure_4/**

Similarly, all data and jupyter notebooks pertaining to the Figure 4. And the supporting Fig.2 and Fig.3 can be derived from here.
",2,2,2,0,soil,"[eca, ecological-scaling, ecosystem-model, emergent, enzyme, equilibrium-chemistry-approximation, heterogeneity, jupyter, jupyter-notebook, michaelis-menten, soil]",00000
1590,agro_monitor,GitHub4Eddy,N/A,https://github.com/GitHub4Eddy/agro_monitor,https://api.github.com/repos/GitHub4Eddy/agro_monitor,"This QuickApp contains data of accumulated temperature and precipitation, soil temperature and moisture from OpenWeathermap via Agro Monitoring. ","# agro_monitor

This QuickApp contains data of accumulated temperature and precipitation, soil temperature and moisture from OpenWeathermap via Agro Monitoring. 

Accumulated temperature and precipitation is essential to make a right decision depends on a threshold setting. Temperature quantity index calculated as the sum of daily temperatures. Humidity quantity index expressed as the sum of daily precipitation. Soil temperature and moisture are essential indices that allow your customer to adjust irrigation work and prevent crop roots damage.

Current soil data is updated 2 times a day. The soil temperature is provided only in Kelvins and in this quickapp converted to Celsius (C = K - 273.15)


IMPORTANT
- You need an API key and Polygon ID from https://agromonitoring.com
- You need to create your Api key and Polygon ID at https://agromonitoring.com/dashboard/dashboard-start
   - After your registration click the ""New"" button in the top of the ""Create polygon"" screen.
   - Click on the polygon icon or square icon on the map.
   - Draw your polygon. If you choose a polygon shape icon do not forget to merge the first and last points to finish your polygon.
   - Fill in the ""Name"" field and click the ""Create"" button to save your polygon.
- The API is free up to 60 calls per minute and a total area of polygons	of 1000 ha


See: https://agromonitoring.com/dashboard/dashboard-start
See: https://openweathermap.medium.com/dashboard-update-current-and-historical-soil-data-24422fc75c5b


Version 0.2 (24th May 2021))
- Changed Soil Moisture (child) device from multilevelSensor to humiditySensor with percentage presentation

Version 0.1 (22 May 2021)
- Initial version


Variables (mandatory): 
- apiKey = Get your free API key from https://agromonitoring.com
- polygon = Create your Polygon ID at https://agromonitoring.com/dashboard/dashboard-start
- interval = [number] in seconds time to get the data from the API
- timeout = [number] in seconds for http timeout
- debugLevel = Number (1=some, 2=few, 3=all, 4=simulation mode) (default = 1)
- icon = [numbber] User defined icon number (add the icon via an other device and lookup the number)
",2,2,1,0,soil,"[agro-api, agro-climatic-tools, agro-monitoring, agro-monitoring-api, climate, fibaro, fibaro-hc3, fibaro-home-center, moisture, moisture-level, openweather, openweathermap, soil, soil-moisture]",00000
1591,QUAKE,ppizarror,N/A,https://github.com/ppizarror/QUAKE,https://api.github.com/repos/ppizarror/QUAKE,Propagación de ondas en suelos multicapa,"<h1 align=""center"">
  <img alt=""QUAKE"" src=""https://res.ppizarror.com/other/matlab.png"" width=""200px"" height=""200px"" />
  <br /><br />
  QUAKE</h1>
<p align=""center"">Propagación de ondas en suelos multicapa</p>
<div align=""center""><a href=""https://ppizarror.com""><img alt=""@ppizarror"" src=""https://res.ppizarror.com/badges/autor.svg"" /></a>
<a href=""https://opensource.org/licenses/MIT""><img alt=""MIT"" src=""https://res.ppizarror.com/badges/licenciamit.svg"" /></a>
</div><br />

## Ejemplos

|  |  |
|:---:|:---:|
| ![QUAKE](https://res.ppizarror.com/images/quake/quake1.png)  | ![QUAKE](https://res.ppizarror.com/images/quake/quake2.png) |
| ![QUAKE](https://res.ppizarror.com/images/quake/quake3.png)  | ![QUAKE](https://res.ppizarror.com/images/quake/quake4.png) |

## Autor

[Pablo Pizarro R.](https://ppizarror.com) | 2019 - 2020

## Licencia

Este proyecto está licenciado bajo la licencia MIT [https://opensource.org/licenses/MIT]
",2,2,2,0,soil,"[amplitude-factor, earthquake-engineering, soil, soil-dynamics, transfer-function, wave, wave-propagation]",00000
1592,SASA-Chitti-Version-3.0,akshatvg,N/A,https://github.com/akshatvg/SASA-Chitti-Version-3.0,https://api.github.com/repos/akshatvg/SASA-Chitti-Version-3.0,This project helps find out soil composition on other planets to find out if they're habitable or not.,"# SASA- Chitti Version 3.0

[![GitHub code size in bytes](https://img.shields.io/github/languages/code-size/akshatvg/SASA-Chitti-Version-3.0?logo=github&style=social)](https://github.com/akshatvg/) [![GitHub last commit](https://img.shields.io/github/last-commit/akshatvg/SASA-Chitti-Version-3.0?style=social&logo=git)](https://github.com/akshatvg/) [![GitHub stars](https://img.shields.io/github/stars/akshatvg/SASA-Chitti-Version-3.0?style=social)](https://github.com/akshatvg/SASA-Chitti-Version-3.0/stargazers) [![GitHub forks](https://img.shields.io/github/forks/akshatvg/SASA-Chitti-Version-3.0?style=social&logo=git)](https://github.com/akshatvg/SASA-Chitti-Version-3.0/network)

This project helps find out soil composition on other planets to find out if they're habitable or not.

<h1 align=""center"">SASA- Chitti Version 3.0</h1>

![Generic badge](https://img.shields.io/badge/SASA_Chitti_Version-3.0-orange) 

## Introduction

Most of what we know about the elemental composition of Mars comes from orbiting spacecraft and landers.
If you google something about this, all you can find is “there ‘may’ be iron, magnesium, calcium, etc”. There is no proper confirmation as to which element is present where and in what quantity.
In order to make a proper plan for living on Mars, we need to know all these details.


## Project Features

1) Find the weather, temperature and pressure of the planet.

2) Find the soil moisture which will help us realize if water is available in the soil in that area.

3) Feature detection for planetary exploration.


## Rover Features

1) Solar Powered.

2) Autonomous (using Image Processing).

3) Bore to dig into the soil.

4) Automatic wind protection.

## Requirements

[![GitHub top language](https://img.shields.io/github/languages/top/akshatvg/SASA-Chitti-Version-3.0?logo=jupyter&style=social)](https://github.com/akshatvg/)

## Need help?

Feel free to contact me via [Facebook](https://www.facebook.com/akshatvg).

Invite me to connect on [LinkedIn](https://www.linkedin.com/in/akshatvg/).

[![Facebook](https://img.shields.io/badge/Facebook-add-blue.svg?logo=facebook&logoColor=white)](https://www.facebook.com/akshatvg) [![Quora](https://img.shields.io/badge/Quora-ask-red.svg?logo=quora)](https://www.quora.com/profile/Akshat-Gupta-279) [![Instagram](https://img.shields.io/badge/Instagram-follow-purple.svg?logo=instagram&logoColor=white)](https://www.instagram.com/akshatvg/) [![GitHub](https://img.shields.io/badge/Snapchat-add-yellow.svg?logo=snapchat&logoColor=white)](https://www.snapchat.com/add/akshatvg) [![Medium](https://img.shields.io/badge/Medium-follow-black.svg?logo=medium&logoColor=white)](https://medium.com/@akshatvg)


```bash



 _____ _                 _     __   __            
|_   _| |               | |    \ \ / /            
  | | | |__   __ _ _ __ | | __  \ V /___  _   _   
  | | | '_ \ / _` | '_ \| |/ /   \ // _ \| | | |  
  | | | | | | (_| | | | |   <    | | (_) | |_| |  
  \_/ |_| |_|\__,_|_| |_|_|\_\   \_/\___/ \__,_|  
                                                  
                                                  
______                                            
|  ___|                                           
| |_ ___  _ __                                    
|  _/ _ \| '__|                                   
| || (_) | |                                      
\_| \___/|_|                                      
                                                  
                                                  
______      _               _   _               _ 
| ___ \    (_)             | | | |             | |
| |_/ / ___ _ _ __   __ _  | |_| | ___ _ __ ___| |
| ___ \/ _ \ | '_ \ / _` | |  _  |/ _ \ '__/ _ \ |
| |_/ /  __/ | | | | (_| | | | | |  __/ | |  __/_|
\____/ \___|_|_| |_|\__, | \_| |_/\___|_|  \___(_)
                     __/ |                        
                    |___/                         

 


```

## License

**MIT &copy; [Akshat Gupta](https://github.com/akshatvg/SASA-Chitti-Version-3.0/blob/master/LICENSE)**

[![GitHub license](https://img.shields.io/github/license/akshatvg/SASA-Chitti-Version-3.0?style=social&logo=github)](https://github.com/akshatvg/SASA-Chitti-Version-3.0/blob/master/LICENSE) [![Twitter Follow](https://img.shields.io/twitter/follow/akshatvg?style=social)](https://twitter.com/akshatvg)

---------

```javascript

if (youEnjoyed) {
    starThisRepository();
}

```

-----------
",2,2,2,0,soil,"[aags, akshat, akshatvg, chitti, gupta, hackathon, planet, project, sasa, sasa-chitti, soil, soil-composition, version]",00000
1593,labtaxa,brownag,N/A,https://github.com/brownag/labtaxa,https://api.github.com/repos/brownag/labtaxa,Analysis-ready Rocker RStudio Server-based Container for the USDA-NRCS-NCSS Kellogg Soil Survey Lab Data Mart 'SQLite' Snapshot,"
<!-- README.md is generated from README.Rmd. Please edit that file -->

# labtaxa

<!-- badges: start -->

[![R-CMD-check](https://github.com/brownag/labtaxa/actions/workflows/R-CMD-check.yaml/badge.svg)](https://github.com/brownag/labtaxa/actions/workflows/R-CMD-check.yaml)
[![docker-publish](https://github.com/brownag/labtaxa/actions/workflows/docker-publish.yml/badge.svg)](https://github.com/brownag/labtaxa/actions/workflows/docker-publish.yml)
[![Docker
Pulls](https://badgen.net/docker/pulls/brownag/labtaxa?icon=docker&label=pulls)](https://hub.docker.com/r/brownag/labtaxa/)
[![ghcn.io](https://ghcr-badge.egpl.dev/brownag/labtaxa/size)](https://github.com/users/brownag/packages/container/package/labtaxa)
<!-- badges: end -->

The goal of {labtaxa} is to provide ‘Lab Data Mart’
(<https://ncsslabdatamart.sc.egov.usda.gov/>) database snapshots for use
in R. This repository is an R package used to download and cache the
contents of the Lab Data Mart GeoPackage database.

## Docker

To get up and running quickly you can use the Docker container. The
`labtaxa` container is based on
[`""rocker/rstudio:latest""`](https://hub.docker.com/r/rocker/rstudio). In
addition to the standard RStudio tools, the container has the cached Lab
Data Mart GeoPackage (containing lab and spatial data) and the companion
morphologic database (derived from NASIS pedon descriptions)
pre-downloaded. Also, the results of `soilDB::fetchLDM()` called on the
LDM GeoPackage data source are cached as an R object file (.rds).
Finally, a variety of useful R packages are pre-installed. All can be
accessed via an RStudio Server web browser interface.

From Docker Hub:

``` sh
docker pull brownag/labtaxa:latest
```

Or from GitHub:

``` sh
docker pull ghcr.io/brownag/labtaxa:latest
```

Once you have a local copy of the `labtaxa` container you can run:

``` sh
docker run -d -p 8787:8787 -e PASSWORD=mypassword -v ~/Documents:/home/rstudio/Documents -e ROOT=TRUE brownag/labtaxa
```

Then open your web browser and navigate to `http://localhost:8787`. The
default username is `rstudio` and the default password is `mypassword`.

## R Package Installation

You can install the development version of {labtaxa} from GitHub:

``` r
if (!require(""labtaxa"")) 
 remotes::install_github(""brownag/labtaxa"")
```

## Example

Download (and cache) the latest Lab Data Mart SQLite snapshot from
<https://ncsslabdatamart.sc.egov.usda.gov/> like so:

``` r
library(labtaxa)
ldm <- get_LDM_snapshot()
```

Downloaded and derived files will be cached in platform-specific
directory specified by `ldm_data_dir()` using `cache_labtaxa()`

In the Docker container the snapshot has already been created and cached
from the latest data (as of the last time the container was built).
Updates to the method used to create the cache, as well as scheduled
(monthly) updates occur.

The cached data help to get off and running quickly analyzing the entire
KSSL database using the [{aqp}](https://cran.r-project.org/package=aqp)
R package toolchain.

The lab data are pre-loaded in a large SoilProfileCollection object
(over 65,000 profiles). In only a few seconds from when you have the
Docker container loaded, you can be filtering and processing the lab
data object. Downloading archives of the complete databases can take 10s
of minutes to a couple hours (depending on internet connection). Only in
cases where the absolute most recent data are needed would require doing
a cache update.

The downloaded databases (GeoPackage, SQLite) are queried locally using
{soilDB} functions `fetchLDM()` and `fetchNASIS()`. The {soilDB}
functions can take a couple minutes to process on larger databases like
this, so the container building process front loads these more costly
processing steps. Querying the data using a method like this essentially
precedes all analyses. soilDB provides standard aggregation methods that
produce {aqp} SoilProfileCollections, which provide a convenient data
structure for working with horizon and site level data associated with
specific soil profiles.

When you start up {labtaxa} in the Docker container you will have the
latest database and the first-step data object (as if you ran the
{soilDB} functions) readily available for post-processing for answering
specific questions. See demo.R in the container home folder to get started.

``` r
ldm <- load_labtaxa()

length(ldm)
#> [1] 65403
```

If you are running on your own machine you will have to run
`get_LDM_snapshot()` at least once (as above) before the
`load_labtaxa()` command works. In future runs you will not need to
re-download or prepare the data unless you need to update the cache.
",2,2,1,2,soil,"[database, docker, geopackage, kssl, lab, ncss, r, rstudio, rstudio-server, soil, soil-survey]",00000
1594,Tic-Tac-Toe,HarshShah1997,N/A,https://github.com/HarshShah1997/Tic-Tac-Toe,https://api.github.com/repos/HarshShah1997/Tic-Tac-Toe,Tic Tac Toe using OpenGL,"# Tic-Tac-Toe
A Tic Tac Toe game using OpenGL.  
  
## Dependencies ##
1. OpenGL  
2. Glut  
3. SOIL (Download it from [here](http://www.lonesock.net/soil.html))
  
## How to run ##
In linux, simply type make.  

## Play against computer ##
Default mode is two players. Run with --single argument to play against computer.  
  
## Snapshots ##

![image](Snapshots/Initial.png)
![image](Snapshots/Middle.png)
![image](Snapshots/End.png)


",1,1,3,0,soil,"[artificial-intelligence, cpp, glut, minimax, minimax-algorithm, opengl, soil, tic-tac-toe]",00000
1595,Egg-Adventure-OpenGL-Game,rubelhassan,N/A,https://github.com/rubelhassan/Egg-Adventure-OpenGL-Game,https://api.github.com/repos/rubelhassan/Egg-Adventure-OpenGL-Game,"A windows desktop game created with C++, OpenGL, GLFW, SOIL, FREETYPE","# Egg-Adventure-OpenGL-Game
A windows desktop game created with C++, OpenGL, GLFW, SOIL, FREETYPE

![alt-tag](https://cloud.githubusercontent.com/assets/8174101/17643326/dca95426-6188-11e6-9c14-4294b8c1e86f.PNG)
",1,1,2,1,soil,"[c-plus-plus, desktop-game, freetype, glfw, opengl, soil]",00000
1596,CROPify,JackJJCodes,N/A,https://github.com/JackJJCodes/CROPify,https://api.github.com/repos/JackJJCodes/CROPify,Web application created using Flask to help farmers to find out the most suitable crop to grow on their field.,"<img align=""right"" src=""https://github.com/Jackson-hub/CROPify/blob/main/static/images/logo.png"" width=""100"" height=""100"">

# CROPify
A Flask-based web application for farmers to find out the crops which can grow perfectly on their fields.

### This is my submission for HackDSC-2021.

# Motivation:
Traditional cropping patterns are not effective in today's rapidly changing, unpredicted climate and polluted soils. Likewise, every region is unique in relation to each other and has various properties. Your goal is to design a system to predict the most suitable crop for that region, harvest time, plantation pattern and maintenance of that crop for better yield utilizing information like soil quality, weather, resources and other factors that affect crop production.
<p> 
Keeping this in mind, I have created a web application which will help farmers to identify the best crop that they can grow in their respective fields, keeping in mind all the properties discussed before.

# Tech Stack Used:
<code><img height=""30"" src=""https://raw.githubusercontent.com/github/explore/80688e429a7d4ef2fca1e82350fe8e3517d3494d/topics/html/html.png""></code>
<code><img height=""30"" src=""https://raw.githubusercontent.com/github/explore/80688e429a7d4ef2fca1e82350fe8e3517d3494d/topics/python/python.png""></code>
<code><img height=""30"" src=""https://github.com/tomchen/stack-icons/raw/master/logos/bootstrap.svg""></code>
<code><img height=""30"" src=""https://symbols.getvecta.com/stencil_80/56_flask.3a79b5a056.jpg""></code>
<code><img height=""30"" src=""https://raw.githubusercontent.com/github/explore/80688e429a7d4ef2fca1e82350fe8e3517d3494d/topics/git/git.png""></code>
<code><img height=""30"" src=""https://raw.githubusercontent.com/github/explore/80688e429a7d4ef2fca1e82350fe8e3517d3494d/topics/javascript/javascript.png""></code>
<code><img height=""30"" src=""https://raw.githubusercontent.com/github/explore/80688e429a7d4ef2fca1e82350fe8e3517d3494d/topics/css/css.png""></code>
<code><img height=""30"" src=""https://raw.githubusercontent.com/numpy/numpy/7e7f4adab814b223f7f917369a72757cd28b10cb/branding/icons/numpylogo.svg""></code>
<code><img height=""30"" src=""https://raw.githubusercontent.com/pandas-dev/pandas/761bceb77d44aa63b71dda43ca46e8fd4b9d7422/web/pandas/static/img/pandas.svg""></code>
<code><img height=""30"" src=""https://matplotlib.org/_static/logo2.svg""></code>
<code><img height=""30"" src=""https://upload.wikimedia.org/wikipedia/commons/thumb/0/05/Scikit_learn_logo_small.svg/1280px-Scikit_learn_logo_small.svg.png""></code>

# Data-set Used:
For this application, I used datasets from Kaggle.
- [Crop Recommendation ](https://www.kaggle.com/atharvaingle/crop-recommendation-dataset) 

# Algorithms Used:
I have used a variety of algorithms for this problem, namely Logistic Regression, Decision Trees, SVM, Random Forest to name a few.
<br>
For me, Random Forest has worked wonders, as it gave me 100% accuracy.
If you want an in-depth explaination on random Forest and how do they work, feel free to checkout <a href = ""https://towardsdatascience.com/understanding-random-forest-58381e0602d2"">this article</a>. 
<br>
![](https://github.com/Jackson-hub/CROPify/blob/main/static/images/comparisionCROPify.png)
<br>
# Features Used:
### The features used to solve this problem are:
1. Nitrogen Level: The percentage of nitrogen present in the soil.
2. Phosphorus Level: The percentage of phosphorus present in the soil.
3. Potasium Level: The percentage of potassium present in the soil.
4. Temperature: Temperature of the soil.
5. Humidity Level: Percentage of humidity of the soil.
6. PH Value: PH value of the soil.
7. Rainfall: The amount of rainfall(In mm).

# Functionalities of this application:
 1. On putting features like nitrogen %, phosphorus % etc, a farmer could find out which crop will suit his field the best.
 2. The farmer would also know the type of crop to field(for eg; a Rabi, or a Kharif crop). The application will also provide the suitable sowing and harvesting dates for the crops.
 3. After finding out the name of the crop, the farmer could also find out the importance of each feature; so as to get more acquainted with how the different features affect the soil.


#### To run this on your machine:
1. Make sure you have Python3, Flask installed.
2. In your terminal, cd to the folder you got this project in, and type <b><i>python run app.py<i></b>
3. And voila!!

# Screenshots:
![](https://github.com/Jackson-hub/CROPify/blob/main/static/images/crop1.png)
<br>
![](https://github.com/Jackson-hub/CROPify/blob/main/static/images/crop2.png)
<br>
![](https://github.com/Jackson-hub/CROPify/blob/main/static/images/crop3.png)

# Demo Video:
<div align=""center"">
  <img src=""https://github.com/Jackson-hub/CROPify/blob/main/static/images/CROPifydemolast.gif"" width=""100%"">  
</div>

# Explanation Presentation:
You can access the presentation <a href=""https://docs.google.com/presentation/d/1kEqwQipxB7r72Ew_C2hjVFVZkyzEVBj5MPVLlRcQSkI/edit?usp=sharing"">here</a>

# Future Improvements:
 1. An Crop Disease predictor could be added to this application. It could take input in for of an image, and predict if it is diseased or not.
 2. A feature in which after a farmer finds out about the most suitable crop, he could directy call any supplier of the said crop.
 3. This web application is not mobile-first. So if anyone out there could make it mobile-reponsive, that'd be great.

# Issues:
 1. The designing part of the web application is in a bit of mess😅.
 2. The UI could be improved.
 3. The web application is a bit slow during rendering. So anything to help speed up rendering would be great. 

# Hosting:
This application is hosted on Heroku:
https://cropify-northkeys.herokuapp.com/
<br>
P.S: It will take a ittle time to get started, but it's worth the wait!
",1,1,1,0,soil,"[crop, farmer, nitrogen, phosphorus, soil]",00000
1597,nmrrr-workflow,kaizadp,N/A,https://github.com/kaizadp/nmrrr-workflow,https://api.github.com/repos/kaizadp/nmrrr-workflow,general processing script for soil NMR data,"
<img align=""right"" heignt = ""250"" width = ""250"" src=""images/nmr_hex.png"">

# nmrrr

This script is designed for batch processing and analysis of **NMR
r**esults in **R** (nmrrr).

Use this script for:  
(a) plotting spectra  
(b) calculating relative abundance of functional groups  
(c) peak assignments

Before using this script, NMR spectra must be processed in MestreNova
(phase corrected, baseline corrected, deconvoluted, peak picked,
normalized).

------------------------------------------------------------------------

2021-06-09 update: We are currently streamlining this workflow by
converting the script into reproducible functions. They can be found in
`code/nmrrr_workflow/`. -KFP

2021-07-10 update: The `vignettes` directory contains tutorials on how
to use this package. The .md files are the rendered Markdown reports,
and the .Rmd files are the source files for the reports. - KFP

------------------------------------------------------------------------

Example spectra:  
spectra processed in MestreNova, with automated Global Spectral
Deconvolution.  
Water peak removed during processing. Avoid using DMSO and water regions
for further analyses.

### spectra plot version 1: with banded regions for bins

This is good for visualization, not necessarily ideal for manuscripts.

![gg\_nmr1](images/spectra_1.png)

### spectra plot version 2: with bracketed regions for bins

Preferred for manuscripts.

![gg\_nmr2](images/spectra_2.png)

These bins were obtained from [Mitchell et al. 2018, *Soil
Systems*](https://doi.org/10.3390/soils2010008).  
(1) aliphatic polymethylene and methyl groups (0.6-1.3 ppm); (2) N- and
O-substituted aliphatic (1.3–2.9 ppm); (3) O-alkyl (2.9–4.1 ppm); (4)
α-proton of peptides (4.1–4.8 ppm); (5) anomeric proton of carbohydrates
(4.8–5.2 ppm); (6) aromatic and phenolic (6.2–7.8 ppm); and (7) amide
(7.8–8.4 ppm). The peak at 2.50 ppm arises from the solvent (DMSO-d6).

------------------------------------------------------------------------

## BINS USED

These are the options available in the file `0-NMR_BINS.csv`

| binset name  | state    | solvent | reference                                                                           |
|--------------|----------|---------|-------------------------------------------------------------------------------------|
| Clemente2012 | solution | DMSO-d6 | [Clemente et al. *Environmental Chemistry*](https://doi.org/10.1071/EN11096)        |
| Mitchell2018 | solution | DMSO-d6 | [Mitchell et al. 2018, *Soil Systems*](https://doi.org/10.3390/soils2010008)        |
| Lynch2019    | solution | D2O     | [Lynch et al. *Global Biogeochemical Cycles*](https://doi.org/10.1029/2018GB006030) |
",1,1,2,1,soil,"[nmr, soil, spectra, template]",00000
1598,KSTL,brownag,N/A,https://github.com/brownag/KSTL,https://api.github.com/repos/brownag/KSTL,Keys to Soil Taxonomy Plumber API (https://soilschema.org/kstl/docs/),"# KSTL
Keys to Soil Taxonomy Plumber API (https://soilschema.org/kstl/docs/)
",1,1,1,0,soil,"[api, plumber, soil, swagger, taxonomy]",00000
1599,PlantMoistureCheck,eplx,N/A,https://github.com/eplx/PlantMoistureCheck,https://api.github.com/repos/eplx/PlantMoistureCheck,Plant moisture checker using Arduino UNO,"# PlantMoistureCheck
Plant moisture checker using Arduino UNO

Project: Plant moisture checker
Description: Uses a soil humidity sensor to indicate when a plan needs water.
             LED blinks to indicate soil humidity (Red below 30%, Yellow between 30% and 70%, Green above 70%): 
               
 Components:
             - Arudino UNO board
             - Soil Moisture Sensor
             - 9V Battery and connecter for arduino board
             - RGB LED 
",1,1,2,0,soil,"[arduino, fc-28, humidity, plants, sensor, soil, water]",00000
1600,afsisdb-demos,qedsoftware,N/A,N/A,https://api.github.com/repos/qedsoftware/afsisdb-demos,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1D5:22D5:2F3ADCA:60B673C:6522408F.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,soil,"[N, /, A]",00000
1601,National-soil-data,gbessardon,N/A,https://github.com/gbessardon/National-soil-data,https://api.github.com/repos/gbessardon/National-soil-data,,"# National-soil-data

This repository contains all the procedure and the file necessary to the procedure to convert Irish Soil Information System data (http://soils.teagasc.ie) into a SURFEX (https://www.umr-cnrm.fr/surfex/) file input.


# Requirements


numpy
shapefile
pyproj
sys
osgeo
matplotlib
mpl_toolkits

# Description


The Irish Soil Information System data are Shapefiles (.shp) containing location of associations of soil from the sampling (or series) collected around Ireland. Unfortunately these Shapefiles do not contain sand and clay fraction however it can be found using other informations available on the Irish Soil Information System website (http://soils.teagasc.ie)


The repository is divided in 4 different subfolders:
- *input_files*: contains get_all_associations.php and get_all_series specific files from the teagasc dataset and it is recommended to set the teagasc file and the reference dataset here
- *conversion_national_to_grid*: contains all the scripts used to convert the national dataset to the desired grid
- *blending*: contains all the scripts necessary to blend the national dataset with a reference dataset
- *plots*: contains different scripts to plot the data at different stages

 # How to use it
1. Reduce the size of the reference dataset around the desired area:

To gain computational time it is recommended to use the gdal_translate (https://gdal.org/programs/gdal_translate.html) command:
gdal_translate -a_srs ’+proj=longlat +datum=WGS84 +no_defs’ -projwin -12 60 -2 50 [inputfile] [outputfile.tif] 
where -12 60 and -2 50 respectively the upper right and lower right points (or the most north-westerly and
south easterly points), and store the outputfile.tif file in the input_file directory and run the scripts using it.

2. Download the national dataset 
Choose on of the (.shp) files available in http://soils.teagasc.ie and store it in the input files directory

3. Conversion of the national data to the desired grid:
run the file conversion_national_to_grid/regrid_teagasc_data.py with the parameters set in conversion_national_to_grid/config.cfg.

4. Blend of the national data with the reference dataset:
run the file blending/read_config_blending.py with parameter set in blending/config_blending.cfg.


5. Merge the newly created blend into the new dataset :
gdal_merge.py -o [outputfile] -co COMPRESS=DEFLATE [file1] [file2]}} can merge 2 dataset at different coordinates with [file2] data covering [data1] when they overlap. -co COMPRESS=DEFLATE defines the compression format

6. If needed convert the tif file to dir: 

gdal_translate -of EHdr -ot Byte [input.tif] [output.dir] allows to create the .dir file input for SURFEX. Before running it in SURFEX or HARMONIE the corresponding output.hdr file needs to be created as follow:

one coment line

nodata: 0 

north: [HDR_NORTH]

south: [HDR_SOUTH]

west:  [HDR_WEST]

east:  [HDR_EAST]

rows:  [HDR_ROWS]

cols:  [HDR_COLS]

recordtype: recordtype: integer 8 bits

7. OPTIONAL plotting directory:

gather different script to display the data at different stage


",1,1,0,0,soil,"[national-data, shapefiles, soil, tif]",00000
1602,Modified-MMF-Morgan-Morgan-Finney-model,rlilhare,N/A,https://github.com/rlilhare/Modified-MMF-Morgan-Morgan-Finney-model,https://api.github.com/repos/rlilhare/Modified-MMF-Morgan-Morgan-Finney-model,"Modified MMF (Morgan–Morgan–Finney) model (2008) ""in Python"" for evaluating effects of crops and vegetation cover on soil erosion","# Modified-MMF-Morgan-Morgan-Finney-model
These python codes automate the process to estimate runoff, soil loss, and sedimentation yield using the Modified MMF (Morgan–Morgan–Finney) model, which was originally developed for evaluating effects of crops and vegetation cover on soil erosion. These codes have been used and are a part of the following research paper: ""Application of GIS-Coupled Modified MMF Model to Estimate Sediment Yield on a Watershed Scale"", https://ascelibrary.org/doi/abs/10.1061/(ASCE)HE.1943-5584.0001063.
Users must read the paper before using these codes for their area of resarch/study.
",1,1,1,0,soil,"[erosion, gis, modifiedmmf, runoff, sediment, sedimentation, soil]",00000
1603,rubik,erincones,N/A,https://github.com/erincones/rubik,https://api.github.com/repos/erincones/rubik,Cubo Rubik en OpenGL,"# Rubik

Cubo Rubik en OpenGL para el proyecto final de Introducción a la Computación Gráfica ([ICG](http://ccg.ciens.ucv.ve/categoria/materias/introduccion-a-la-computacion-grafica/)) I-2017.


### Detalles de implementación

* Lectura y despliegue de archivos OBJ.
* Manejo de datos con Vertex Array Object (VAO).
* Modelo de iluminación Gouraud.
* Mapeo de texturas.
* Animaciones independientes de los FPS.
* Minicubo guía para orientación.
* Interacción con mouse.
  * Rotación con cuaterniones: Arrastrar con click izquierdo.
  * Click and drag: Arrastrar con click derecho.
  * Zoom: Subir y bajar rueda del mouse.
* Interacción con teclado.
  * Jugar: Q, W, E, R, T, Y, A, S, D, F, G, H.
  * Pantalla completa: ALT + Enter.


### Por hacer

* Mostrar controles.
* Mostrar número de pasos.
* Temporizador.
* Mostrar botones para opciones.
* N-Filas x N-Columnas x N-Capas.
* Cambiar calidad del juego.
* Sonido.
* Armar cubo.
* Evitar que el cubo salga de la pantalla.
* Centrar cubo.
* Ajustar velocidad del turno.
* Ajustar FPS.



---

### Dependencias

* [FreeGLUT](http://freeglut.sourceforge.net/)
* [GLEW](http://glew.sourceforge.net/)
* [GLM](https://glm.g-truc.net/)
* [SOIL](http://www.lonesock.net/soil.html)

Los modelos 3D han sido diseñados con [Blender](https://www.blender.org/).

_Aunque se trata de un proyecto de [QtCreator](https://www.qt.io/) en Lubuntu no es difícil migrarlo a Visual Studio._
",1,1,2,0,soil,"[blender, c-plus-plus, cplusplus, cpp, cube, freeglut, glew, glm, obj, opengl, qtcreator, rubik, rubik-cube, soil, ucv]",00000
1604,senegal-nematodes,swood-ecology,N/A,N/A,https://api.github.com/repos/swood-ecology/senegal-nematodes,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1D2:6D2F:2D9A97:5E9AEB:65224093.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,soil,"[N, /, A]",00000
1605,ABM,bioatmosphere,N/A,https://github.com/bioatmosphere/ABM,https://api.github.com/repos/bioatmosphere/ABM,Aggregate-based model (ABM) of soil systems comprising soil aggregates as biogeochemical reactors of different sizes,"# ABM
Aggregate-based model (ABM) of soil systems comprising soil aggregates as biogeochemical reactors of different sizes.

<p align='center'> <img src=""figures/ABM.jpg""> </p>

<p align='center'> <img src=""figures/Aggregate_reactor.jpg""> </p>

## Conceptual basis

Wang, B., Brewer, P. E., Shugart, H. H., Lerdau, M. T., & Allison, S. D. (2019). [Building bottom-up aggregate-based models (ABMs) in soil systems with a view of aggregates as biogeochemical reactors](https://doi.org/10.1111/gcb.14684). Global Change Biology, 25(8), e6-e8.

Wang, B., Brewer, P. E., Shugart, H. H., Lerdau, M. T., & Allison, S. D. (2019). [Soil aggregates as biogeochemical reactors and implications for soil–atmosphere exchange of greenhouse gases—A concept](https://doi.org/10.1111/gcb.14515). Global Change Biology, 25, 373-385.
",1,1,1,0,soil,"[abm, aggregate, aggregate-based-modelling, aggregation, modelling, reactor, soil, soil-aggregate, soil-structure]",00000
1606,hklmirs,henningte,N/A,https://github.com/henningte/hklmirs,https://api.github.com/repos/henningte/hklmirs,"Reproducible Research Compendium for ""Improving Models to Predict Holocellulose and Klason Lignin Contents for Peat Soil Organic Matter with Mid-Infrared Spectra"" and ""The need to reinterpret Hodgkins et al. (2018)"".","
<!-- README.md is generated from README.Rmd. Please edit that file -->

[![DOI](https://zenodo.org/badge/465653387.svg)](https://zenodo.org/badge/latestdoi/465653387)
![Last-changedate](https://img.shields.io/badge/last%20change-2022--11--23-brightgreen.svg)

# hklmirs

This repository contains the data and code for our two manuscripts (in
preparation):

> Henning Teickner, and Klaus-Holger Knorr (2022): *Improving Models to
> Predict Holocellulose and Klason Lignin Contents for Peat Soil Organic
> Matter with Mid-Infrared Spectra*. SOIL 8 (2): 699–715. DOI:
> [10.5194/soil-8-699-2022](https://doi.org/10.5194/soil-8-699-2022).

> Henning Teickner and Klaus-Holger Knorr (in preparation): *The need to
> reinterpret Hodgkins et al. (2018).*

### How to cite

Please cite this compendium as:

> Henning Teickner and Klaus-Holger Knorr, (2022). *Compendium of R code
> and data for “Improving Models to Predict Holocellulose and Klason
> Lignin Contents for Peat Soil Organic Matter with Mid Infrared
> Spectra” and “The need to reinterpret Hodgkins et al. (2018)”*.
> Accessed 23 Nov 2022. Online at
> <https://doi.org/10.5281/zenodo.6325760>

## Contents

The **analysis** directory contains:

  - [:file\_folder: paper](/analysis/paper): R Markdown source documents
    needed to reproduce the manuscript, including figures and tables.
    The main script is
    [001-paper-main.Rmd](analysis/paper/001-paper-main.Rmd). This script
    produces both manuscripts and the corresponding supplementary
    information. Additional scripts are:
    
      - [002-paper-m-original-models.Rmd](analysis/paper/002-paper-m-original-models.Rmd):
        Computes the original models used in Hodgkins et al. (2018) and
        models with the same model structure, but as Bayesian models.  
      - [003-paper-m-gaussian-beta.Rmd](analysis/paper/003-paper-m-gaussian-beta.Rmd):
        Computes models assuming a Beta distribution for holocellulose
        and Klason lignin contents and compares them to the original
        models.
      - [004-paper-m-reduce-underfitting.Rmd](analysis/paper/004-paper-m-reduce-underfitting.Rmd):
        Extents the Beta regression models by including additional
        variables (additional peaks) or using a different approach
        (using measured spectral intensities of binned spectra instead
        of extracted peaks), and validates these models using LOO-CV.
      - [005-paper-m-minerals.Rmd](analysis/paper/005-paper-m-minerals.Rmd):
        Uses the models from `003-paper-m-gaussian-beta.Rmd` to test how
        accurate a model for holocellulose content is which is also
        calibrated on training samples with higher mineral contents.
      - [006-paper-m-prediction-domain.Rmd](analysis/paper/006-paper-m-prediction-domain.Rmd):
        Analyzes the prediction domain (Wadoux et al. 2021) of the
        original models and the modified models and identifies under
        which conditions models extrapolate for peat and vegetation
        samples from Hodgkins et al. (2018).
      - [007-paper-m-prediction-differences.Rmd](analysis/paper/007-paper-m-prediction-differences.Rmd):
        Compares predictions for the training data and the peat and
        vegetation data from Hodgkins et al. (2018) for the original
        models from Hodgkins et al. (2018) and the modified models from
        `004-paper-m-reduce-underfitting.Rmd`.
      - [008-paper-supplementary.Rmd](analysis/paper/008-paper-supplementary.Rmd):
        Computes supplementary analyses and figures for the first
        manuscript.
      - [001-reply-main.Rmd](analysis/paper/001-reply-main.Rmd): This is
        the main script for manuscript 2. It is compiled from within
        `001-paper-main.Rmd` and produces the supplementary information
        for manuscript 2.
      - [002-reply-main.Rmd](analysis/paper/002-reply-main.Rmd): This
        script produces the document for manuscript 2. It is compiled
        from within `001-reply-main.Rmd`.

  - [:file\_folder: data](/analysis/data): Data used in the analysis.
    Note that raw data is not stored in [:file\_folder:
    raw\_data](/analysis/data/raw_data) (empty folder), but in
    [:file\_folder: /inst/extdata](/inst/extdata). [:file\_folder:
    derived\_data](/analysis/data/derived_data) contains derived data
    computed from the scripts. The raw data are derived from Hodgkins et
    al. (2018).

  - [:file\_folder: stan\_models](/analysis/stan_models): The Stan model
    used in `001-reply-main.Rmd`.

The other folders in this directory follow the standard naming scheme
and function of folders in R packages. There are the following
directories and files:

  - `README.md`/`README.Rmd`: Readme for the compendium.  
  - `DESCRIPTION`: The R package DESCRIPTION file for the compendium.  
  - `NAMESPACE`: The R package NAMESPACE file for the compendium.  
  - `LICENSE.md`: Details on the license for the code in the
    compendium.  
  - `CONTRIBUTING.md` and `CONDUCT.md`: Files with information on how to
    contribute to the compendium.  
  - `Dockerfile`: Dockerfile to build a Docker image for the
    compendium.  
  - `.Rbuildignore`, `.gitignore`, `.dockerignore`: Files to ignore
    during R package building, to ignore by Git, and to ignore while
    building a Docker image, respectively.  
  - `renv.lock`: renv lock file (Lists all R package dependencies and
    versions and can be used to restore the R package library using
    renv). `renv.lock` was created by running `renv::snapshot()` in the
    R package directory and it uses the information included in the
    `DESCRIPTION` file.  
  - `.Rprofile`: Code to run upon opening the R-project.  
  - `R`, `man`, `inst`, `data-raw`, `data`, `src`: Default folders for
    making the R package run.
  - Folder `inst/extdata`: Folder with the raw data used for the
    analyses. All files in this folder are derived from Hodgkins et al.
    (2018).

## How to run in your broswer or download and run locally

You can download the compendium as a zip from from these URLs:
<https://github.com/henningte/hklmirs/> or
<https://doi.org/10.5281/zenodo.6325760>

Or you can install this compendium as an R package, hklmirs, from GitHub
with:

``` r
remotes::install_github(""henningte/hklmirs"")
```

## How to use

#### Reproduce the analyses

To reproduce the analyses for the paper, open the RStudio project
included in this research compendium and run the Rmarkdown script in
`analysis/paper/001-paper-main.rmd`.

Running the whole script takes about 12 hours and occupies additional
disk space of \~2 Gb.

Alternatively, the [Dockerfile](Dockerfile) can be used to build a
Docker image from which all analyses can be reproduced. The Dockerfile
ensures that all required dependencies are installed (e.g. specific R
packages; this is managed using the R package
[renv](https://rstudio.github.io/renv/articles/renv.html)).

The [Dockerfile](Dockerfile) provides instructions how to build a Docker
image from the Dockerfile and how to run the image in a Docker
container. It occupies disk space of \~7 Gb.

When the Docker image runs in a container, go to `localhost:8787` in
your Browser. You will find an RStudio interface where you can log in
with username `rstudio` and password `hkl`. Here you can find the
Rmarkdown scripts (`hklmirs/analysis/paper/001-paper-main.rmd`) as
described above.

### Licenses

**Text and figures :**
[CC-BY-4.0](http://creativecommons.org/licenses/by/4.0/)

**Code :** See the [DESCRIPTION](DESCRIPTION) file

**Data :** [CC-0](http://creativecommons.org/publicdomain/zero/1.0/)
attribution requested in reuse. See the sources section for licenses for
data derived from external sources and how to give credit to the
original author(s) and the source.

### Sources

All files in `inst/extdata` are derived from Hodgkins et al. (2018).
These data are licensed under the
[CC-BY 4.0](http://creativecommons.org/licenses/by/4.0/) license (see
<https://www.nature.com/articles/s41467-018-06050-2#rightslink>).

The format of this research compendium is inspired by Marwick,
Boettiger, and Mullen (2018) and was created with rrtools (Marwick
2019). The Rmarkdown template for the main article is from the rticles
package (Allaire et al. 2020).

### Contributions

We welcome contributions from everyone. Before you get started, 1607,Soil-Sensing-Device,TheGreatBuddo,N/A,https://github.com/TheGreatBuddo/Soil-Sensing-Device,https://api.github.com/repos/TheGreatBuddo/Soil-Sensing-Device,"A Low-Cost Soil Sensing Project developed at Twin Cities Engineering, University of Mankato","# Soil-Sensing-Device Readme

Welcome to Twin Cities Engineering's project on soil health monitoring 
through gas-based measurement! Soil health plays a critical role in
agriculture and environmental sustainability. Measuring gases in soil pore 
spaces is an effective way to monitor soil health, providing valuable 
information about the soil's nutrient content and microorganism activity. 
However, commercially available gas-based soil health measurement devices 
are prohibitively expensive, limiting their accessibility to farmers and 
soil scientists. To address this issue, our engineering project team is 
developing a low-cost DIY soil gas sensing unit capable of 
measuring oxygen, carbon dioxide, and methane concentrations at 
four soil depths every hour. Our goal is to create a prototype 
that is affordable, portable, and easy to use, 
empowering more people to measure and monitor soil health.

Our project is centered around a device that attaches to four soil 
probes of varying lengths (0.25, 0.5, 0.75, and 1 meter) to extract 
soil gases. These probes are placed in a 1-meter squared area of soil, 
assuming that the soil gas concentrations will remain constant. 
The device has four ports for tubes that connect from the probes 
to the device, and each port connects to a solenoid valve inside the 
device. These valves can be opened and closed by a Mayfly microcontroller, 
allowing the device to be exposed to one probe at a time. 
A sensor chamber houses four sensors, including 
an Alphasense IRC-AT carbon dioxide sensor, Alphasense O2-A3 oxygen sensor,
and TGS2611-E00 methane sensor, along with a bme280 temperature, pressure,
and humidity sensor. The final component in the sensor chamber is a 
heating element, which is designed to prevent condensation from forming 
and potentially damaging the sensors. If the bme280 detects a dew point, 
the heating element is activated.

All work accomplished can be found in the Final Design Document and more
discussion about the project. A poster has been developed for this project
and is also uploaded in the repository. Lastly STL files for the sensor chamber
and the program to control the device are included.
",1,1,3,0,soil,"[arduino, envirodiy, gases, mayfly, sensor, soil]",00000
1608,Soilers,DaRkZ1177,N/A,https://github.com/DaRkZ1177/Soilers,https://api.github.com/repos/DaRkZ1177/Soilers,A website on soil awareness,"# Soilers
A website on soil awareness
",1,1,1,0,soil,"[environment, environmental-monitoring, pollution, soil, soil-survey]",00000
1609,Farmability,darthbatman,N/A,N/A,https://api.github.com/repos/darthbatman/Farmability,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C119:2EE5:285BEB2:5307D25:652240B4.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,soil,"[N, /, A]",00000
1610,SOIL,Pikachuxxxx,N/A,https://github.com/Pikachuxxxx/SOIL,https://api.github.com/repos/Pikachuxxxx/SOIL,Simple OpenGL Image Loading Library with  CMake build,"# SOIL - **Simple OpenGL Image Library**
Simple OpenGL Image Library with  CMake build
### ![GitHub](https://img.shields.io/github/license/Pikachuxxxx/SOIL?style=for-the-badge)  ![GitHub code size in bytes](https://img.shields.io/github/languages/code-size/Pikachuxxxx/SOIL?color=E89393&logoColor=E89393&style=for-the-badge)

**Introduction:**  

SOIL is a tiny C library used primarily for uploading textures into OpenGL. It can load TGA and DDS files, and to perform common functions needed in loading OpenGL textures. SOIL can also be used to save and load images in a variety of formats.

This is a clone of Simple OpenGL Image Library from http://lonesock.net/soil.html which hasn't changed since July 7, 2008.

I wanted to work with the code and seeing it was MIT license and the original svn repo is offline, I figured it was acceptable to post it here with some changes to the codebase and added the Cmake build file.

**Features:** 

  *   Readable Image Formats: 
  *   BMP - non-1bpp, non-RLE (from stb_image documentation) 
  *   PNG - non-interlaced (from stb_image documentation) 
  *   JPG - JPEG baseline (from stb_image documentation) 
  *   TGA - greyscale or RGB or RGBA or indexed, uncompressed or RLE 
  *   DDS - DXT1/2/3/4/5, uncompressed, cubemaps (can't read 3D DDS files yet) 
  *   PSD - (from stb_image documentation) 
  *   HDR - converted to LDR, unless loaded with \*HDR\* functions (RGBE or RGBdivA or RGBdivA2) 

Writeable Image Formats: 
  *   TGA - Greyscale or RGB or RGBA, uncompressed 
  *   BMP - RGB, uncompressed 
  *   DDS - RGB as DXT1, or RGBA as DXT5
  *   Can load an image file directly into a 2D OpenGL texture, optionally performing the following functions: 
  *   Can generate a new texture handle, or reuse one specified 
  *   Can automatically rescale the image to the next largest power-of-two size 
  *   Can automatically create MIPmaps 
  *   Can scale (not simply clamp) the RGB values into the ""safe range"" for NTSC displa1610,SOIL,Pikachuxxxx,N/A,https://github.com/Pikachuxxxx/SOIL,https://api.github.com/repos/Pikachuxxxx/SOIL,Simple OpenGL Image Loading Library with  CMake build,"# SOIL - **Simple OpenGL Image Library**
Simple OpenGL Image Library with  CMake build
### ![GitHub](https://img.shields.io/github/license/Pikachuxxxx/SOIL?style=for-the-badge)  ![GitHub code size in bytes](https://img.shields.io/github/languages/code-size/Pikachuxxxx/SOIL?color=E89393&logoColor=E89393&style=for-the-badge)

**Introduction:**  

SOIL is a tiny C library used primarily for uploading textures into OpenGL. It can load TGA and DDS files, and to perform common functions needed in loading OpenGL textures. SOIL can also be used to save and load images in a variety of formats.

This is a clone of Simple OpenGL Image Library from http://lonesock.net/soil.html which hasn't changed since July 7, 2008.

I wanted to work with the code and seeing it was MIT license and the original svn repo is offline, I figured it was acceptable to post it here with some changes to the codebase and added the Cmake build file.

**Features:** 

  *   Readable Image Formats: 
  *   BMP - non-1bpp, non-RLE (from stb_image documentation) 
  *   PNG - non-interlaced (from stb_image documentation) 
  *   JPG - JPEG baseline (from stb_image documentation) 
  *   TGA - greyscale or RGB or RGBA or indexed, uncompressed or RLE 
  *   DDS - DXT1/2/3/4/5, uncompressed, cubemaps (can't read 3D DDS files yet) 
  *   PSD - (from stb_image documentation) 
  *   HDR - converted to LDR, unless loaded with \*HDR\* functions (RGBE or RGBdivA or RGBdivA2) 

Writeable Image Formats: 
  *   TGA - Greyscale or RGB or RGBA, uncompressed 
  *   BMP - RGB, uncompressed 
  *   DDS - RGB as DXT1, or RGBA as DXT5
  *   Can load an image file directly into a 2D OpenGL texture, optionally performing the following functions: 
  *   Can generate a new texture handle, or reuse one specified 
  *   Can automatically rescale the image to the next largest power-of-two size 
  *   Can automatically create MIPmaps 
  *   Can scale (not simply clamp) the RGB values into the ""safe range"" for NTSC displays (16 to 235, as recommended [here][1]) 
  *   Can multiply alpha on load (for more correct blending / compositing) 
  *   Can flip the image vertically 
  *   Can compress and upload any image as DXT1 or DXT5 (if EXT\_texture\_compression_s3tc is available), using an internal (very fast!) compressor 
  *   Can convert the RGB to YCoCg color space (useful with DXT5 compression: see [this link][2] from NVIDIA) 
  *   Will automatically downsize a texture if it is larger than GL\_MAX\_TEXTURE_SIZE 
  *   Can directly upload DDS files (DXT1/3/5/uncompressed/cubemap, with or without MIPmaps). Note: directly uploading the compressed DDS image will disable the other options (no flipping, no pre-multiplying alpha, no rescaling, no creation of MIPmaps, no auto-downsizing) 
  *   Can load rectangluar textures for GUI elements or splash screens (requires GL\_ARB/EXT/NV\_texture_rectangle) 
  *   Can decompress images from RAM (e.g. via [PhysicsFS][3] or similar) into an OpenGL texture (same features as regular 2D textures, above) 
  *   Can load cube maps directly into an OpenGL texture (same features as regular 2D textures, above) 
  *   Can take six image files directly into an OpenGL cube map texture 
  *   Can take a single image file where width = 6*height (or vice versa), split it into an OpenGL cube map texture 
  *   No external dependencies 
  *   Tiny 
  *   Cross platform (Windows, *nix, Mac OS X) 
  *   Public Domain 

**Installation:**  

SOIL is meant to be used as a static library (as it's tiny). 

Simply include SOIL.h in your C or C++ file, link in the static library, and then use any of SOIL's functions. The file SOIL.h contains simple doxygen style documentation. (If you use the static library, no other header files are needed besides SOIL.h)

You can compile it like any other CMAKE project, simply make a folder named ""build"" and run
```
cmake ..
make

```
**Usage:**
load an image file directly as a new OpenGL texture

    GLuint tex_2d = SOIL_load_OGL_texture
    (
      ""img.png"",
      SOIL_LOAD_AUTO,
      SOIL_CREATE_NEW_ID,
      SOIL_FLAG_MIPMAPS | SOIL_FLAG_INVERT_Y | SOIL_FLAG_NTSC_SAFE_RGB | SOIL_FLAG_COMPRESS_TO_DXT
    );

check for an error during the load process

    if( 0 == tex_2d )
    {
      printf( ""SOIL loading error: '%s'\n"", SOIL_last_result() );
    }

load another image, but into the same texture ID, overwriting the last one

    tex_2d = SOIL_load_OGL_texture
    (
      ""some_other_img.dds"",
      SOIL_LOAD_AUTO,
      tex_2d,
      SOIL_FLAG_DDS_LOAD_DIRECT
    );

load 6 images into a new OpenGL cube map, forcing RGB

    GLuint tex_cube = SOIL_load_OGL_cubemap
    (
      ""xp.jpg"",
      ""xn.jpg"",
      ""yp.jpg"",
      ""yn.jpg"",
      ""zp.jpg"",
      ""zn.jpg"",
      SOIL_LOAD_RGB,
      SOIL_CREATE_NEW_ID,
      SOIL_FLAG_MIPMAPS
    );

load and split a single image into a new OpenGL cube map, default format
face order = East South West North Up Down => ""ESWNUD"", case sensitive!

    GLuint single_tex_cube = SOIL_load_OGL_single_cubemap
    (
      ""split_cubemap.png"",
      ""EWUDNS"",
      SOIL_LOAD_AUTO,
      SOIL_CREATE_NEW_ID,
      SOIL_FLAG_MIPMAPS
    );

actually, load a DDS cubemap over the last OpenGL cube map, default format
try to load it directly, but give the order of the faces in case that fails
the DDS cubemap face order is pre-defined as SOIL_DDS_CUBEMAP_FACE_ORDER

    single_tex_cube = SOIL_load_OGL_single_cubemap
  1612,ciatsocapp,CIAT,CIAT,https://github.com/CIAT/ciatsocapp,https://api.github.com/repos/CIAT/ciatsocapp,This web application provides a platform where users can visualize the organic carbon content of soil of their choice.,"# CIAT SOC APP

This web application provides a platform where users can visualize the organic carbon content of a soil of their choice, as well as the quantitative impact of soil conserving management practices on sequestration, how such sequestration would unfold over time and what would be the magnitude of SOC sequestration if the anticipated practice (to foster SOC seq.) would be scaled out to countries, sub-continents or the entire world. 

The basis of the idea is the publication from Sommer and Bossio 2014 (Dynamics and climate change mitigation potential of soil organic carbon sequestration. J. Environm. Management 144, 83-87)
",1,1,3,0,soil,"[carbon, soil]",00000
1613,CropRecommender-main,Sahitya777,N/A,https://github.com/Sahitya777/CropRecommender-main,https://api.github.com/repos/Sahitya777/CropRecommender-main,Crop Recommender and Soil fertility ,"Instructions for using the Crop booster Model.

Download the Final_Project.ipynb file and the dataset(final_data.csv) file.

For Jupyter notebook
1. Make a folder including both files.
2. Open the ipynb file on Jupyter.
3. Import/Install the required libraries using either pip or conda.
4. Run the code 

For Google Colab 
1. Upload the .ipynb file on colab.
2. Upload the dataset.
3. Use Run all.
Our Website: https://cropbooster.netlify.app/
",1,1,1,0,soil,"[ai, css3, html5, soil]",00000
1614,HM-RK,lluis-mv,N/A,https://github.com/lluis-mv/HM-RK,https://api.github.com/repos/lluis-mv/HM-RK,Implementation of explicit Runge-Kutta time-marching schemes for the coupled hydro-mechanical problem. ,"# HM-RK

 [![License][license-image]][license]
 
 [license-image]: https://img.shields.io/badge/license-BSD-green.svg?style=flat
[license]: https://github.com/lluis-mv/HM-RK/blob/main/LICENSE

Matlab codes to simulate the coupled hydro-mechanical problem at pseudo-static conditions (**u**-p<sub>w</sub> formulation) using the Finite Element method 1612,ciatsocapp,CIAT,CIAT,https://github.com/CIAT/ciatsocapp,https://api.github.com/repos/CIAT/ciatsocapp,This web application provides a platform where users can visualize the organic carbon content of soil of their choice.,"# CIAT SOC APP

This web application provides a platform where users can visualize the organic carbon content of a soil of their choice, as well as the quantitative impact of soil conserving management practices on sequestration, how such sequestration would unfold over time and what would be the magnitude of SOC sequestration if the anticipated practice (to foster SOC seq.) would be scaled out to countries, sub-continents or the entire world. 

The basis of the idea is the publication from Sommer and Bossio 2014 (Dynamics and climate change mitigation potential of soil organic carbon sequestration. J. Environm. Management 144, 83-87)
",1,1,3,0,soil,"[carbon, soil]",00000
1613,CropRecommender-main,Sahitya777,N/A,https://github.com/Sahitya777/CropRecommender-main,https://api.github.com/repos/Sahitya777/CropRecommender-main,Crop Recommender and Soil fertility ,"Instructions for using the Crop booster Model.

Download the Final_Project.ipynb file and the dataset(final_data.csv) file.

For Jupyter notebook
1. Make a folder including both files.
2. Open the ipynb file on Jupyter.
3. Import/Install the required libraries using either pip or conda.
4. Run the code 

For Google Colab 
1. Upload the .ipynb file on colab.
2. Upload the dataset.
3. Use Run all.
Our Website: https://cropbooster.netlify.app/
",1,1,1,0,soil,"[ai, css3, html5, soil]",00000
1614,HM-RK,lluis-mv,N/A,https://github.com/lluis-mv/HM-RK,https://api.github.com/repos/lluis-mv/HM-RK,Implementation of explicit Runge-Kutta time-marching schemes for the coupled hydro-mechanical problem. ,"# HM-RK

 [![License][license-image]][license]
 
 [license-image]: https://img.shields.io/badge/license-BSD-green.svg?style=flat
[license]: https://github.com/lluis-mv/HM-RK/blob/main/LICENSE

Matlab codes to simulate the coupled hydro-mechanical problem at pseudo-static conditions (**u**-p<sub>w</sub> formulation) using the Finite Element method and node-based smoothed finite element method.

In addition to a fully implicit time integration approach, explicit Runge-Kutta time-marching schemes are also considered.


Several types of elements are considered: T3T3 employs linear interpolants for both displacement and water pressure, T6T3 uses a quadratic shape functions for displacements whereas water pressure is discretized with linear functions and T6T6 describes both field with quadratic interpolants. Q4Q4 employs bilinear shape functions for both nodal variables whereas Q8Q4 uses quadratic shape functions for displacements and bilinar interpolants for water pressure. 

A three field element has displacement, volumetric strain and water pressure as nodal variables, which are discretized with linear shape functions (T3T3T3) in triangles and bilinear interpolants (Q4Q4Q4) in quadrilater elements. These elements have two stabilization terms.

Additionally, node-based smoothed finite elements are considered. This implementation is only valid for linear triangular elements and bilinear quadrilateral elements.


Constitutive models: linear elasticity, non-linear elasticity (pressure-dependent hypo-elastic law) and Subloading Modified Cam Clay [(Hashiguchi, 2017)](https://doi.org/10.1007/978-3-319-48821-9)

### Matlab versions

The code has been tested in Matlab R2019a, R2020a and R2022b.

### Submodules

Some of the constitutive models (elastoplastic) are available in another [repository](https://github.com/lluis-mv/ExplicitStressIntegration)

## Sign convention
Computational geomechanics sign conventions is used in this implementation: in the water pressure field compression pressures are positive values whereas negative values of the effective Cauchy stress tensor denote compression.


## License and citation

These codes are distributed under BSD 3-Clause License. 


If you find these codes useful for your work, please cite as follows:
- Monforte, L., Carbonell, J.M., Arroyo, M. and Gens, A. (2022) An unconditionally stable explicit stabilized finite element for the coupled hydromechanical formulation in soil mechanics in pseudo-stationary conditions. International Journal for Numerical Methods in Engineering [https://doi.org/10.1002/nme.7064](https://doi.org/10.1002/nme.7064)

- Monforte, L., Collico, S., Carbonell, J.M., Arroyo, M. and Gens, A. (2023) Exploring the numerical performance of node-based smoothed finite elements in coupled hydro-mechanical problems. Computers and Geotechnics [https://doi.org/10.1016/j.compgeo.2023.105547](https://doi.org/10.1016/j.compgeo.2023.105547)
",1,1,1,0,soil,"[finite-element, hydro-mechanical, matlab, runge-kutta, soil, soil-mechanics]",00000
1615,cn-ws,cn-ws,cn-ws,https://github.com/cn-ws/cn-ws,https://api.github.com/repos/cn-ws/cn-ws,CN-WS,"# CN-WS

CN-WS is a model that can be used to
simulate soil erosion, sediment transport, water and sediment routing and
flow run-off in time and space. The package combines three existing submodels:

 - The Curve Number model (CN) for simulating flow run-off.
 - The WaTEM/SEDEM model (WS) for simulating erosion and over-land sediment
   transport.
 - The routing algorithm for simulating water and sediment routing over land.

CN-WS is developed to assess soil erosion on
agricultural fields, sediment transport through the landscape and sediment
delivery to watercourses and sewage systems. As the impact of soil erosion
mitigation measures is incorporated, the model can also be used to evaluate soil
erosion management measures and compare mitigation strategies.

## Code

The code can be found on [Github](https://github.com/cn-ws/cn-ws/). 
Binaries for windows or linux of the releases 1616,soilMakers,byrd-laif,N/A,https://github.com/byrd-laif/soilMakers,https://api.github.com/repos/byrd-laif/soilMakers,"Dedicated to her Son, and all posterity learning to live in the light of nature.","{'message': 'Not Found', 'documentation_url': 'https://docs.github.com/rest/repos/contents#get-repository-content'}",1,1,1,0,soil,"[biodiversity, circle, cultivate-cultures, cultivating-cultures, ecological, lifestyle, soil, soil-seekers, vivarium-salon-circles]",00000
1617,meteobe,syngenta,syngenta,https://github.com/syngenta/meteobe,https://api.github.com/repos/syngenta/meteobe,Python scripts that extract weather and soil data from Meteoblue,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C100:29CE:3307EA6:6825832:65224326.'}",1,1,6,0,soil,"[soil, weather]",00000
1618,soc-twitter,Science-for-Nature-and-People,Science-for-Nature-and-People,https://github.com/Science-for-Nature-and-People/soc-twitter,https://api.github.com/repos/Science-for-Nature-and-People/soc-twitter,SNAPP - Soil Organic Carbon Twitter data,"# SNAPP Soil Organic Carbon -- Tweet Parsing and Analysis 

This repository contains several scripts developed to process Twitter data to investigate how soil organic content and health are related.


### Processing Twitter Data

Two different data sources are used:

- Data from the Twitter archives
- Data collected directly from the Twitter API 


   History of Data: 

     - Archive Data (purchased) 2017-04-01 to 2017-10-10
     - Manual API Data 2017-10-11 to 2019-06-14 NOTE there is missing data during these dates
     - Automatic API Data 2019-06-15 to Current
     
     There have been multiple ""versions"" of data, current code should be run on the latest version (ie. change code and directory names to v3):  
     - V1 ""Merged_data"":  
     - V2 ""Merged_v2"":  
     - V3 ""Merged_v3"": this fixed issue where archive data did not hav1616,soc-twitter,Science-for-Nature-and-People,Science-for-Nature-and-People,https://github.com/Science-for-Nature-and-People/soc-twitter,https://api.github.com/repos/Science-for-Nature-and-People/soc-twitter,SNAPP - Soil Organic Carbon Twitter data,"# SNAPP Soil Organic Carbon -- Tweet Parsing and Analysis 

This repository contains several scripts developed to process Twitter data to investigate how soil organic content and health are related.


### Processing Twitter Data

Two different data sources are used:

- Data from the Twitter archives
- Data collected directly from the Twitter API 


   History of Data: 

     - Archive Data (purchased) 2017-04-01 to 2017-10-10
     - Manual API Data 2017-10-11 to 2019-06-14 NOTE there is missing data during these dates
     - Automatic API Data 2019-06-15 to Current
     
     There have been multiple ""versions"" of data, current code should be run on the latest version (ie. change code and directory names to v3):  
     - V1 ""Merged_data"":  
     - V2 ""Merged_v2"":  
     - V3 ""Merged_v3"": this fixed issue where archive data did not have *is_retweet* flagged and replaced old retweets where usernames were present within the original tweet *text*, see: [fix_old_retweets.R](https://github.com/Science-for-Nature-and-People/soc-twitter/blob/master/pre_processing/fix_old_retweets.R)  
     - V4 ""Merged_v4"": this removed duplicates within and between datasets, with cleaner processing on the original purchased dataset. See [data_version_check.R](https://github.com/Science-for-Nature-and-People/soc-twitter/blob/60809f78eef5ea52aba165526b55c1f1f018c0aa/data_version_check.Rmd) for a comparison between data versions 3 and 4
        

For the archive data:

- Main: [raw_data_processing.R](https://github.com/Science-for-Nature-and-People/soc-twitter/blob/master/pre_processing/raw_data_processing.R):
  - read raw twitter datasets from different sources (Json or csv format) 
  - clean and standardize to enable a merge
  - simple analysis of what the data looks like 
  - to correct parsing errors found in the csv files derived from the API (cell overlap) use [fixed_tweet.sh](fixed_tweet.sh)
    **!!! This script needs to be edited from the command line and _NOT_ from R, as it is dealing with hidden characters !!!**

For the data collected via Twitter API:

- Main: [automate.R](automate.R) 
  - saves two files:  
  (1) raw data from Twitter API in .csv format saved in directory /home/shares/soilcarbon/Twitter/API_csv/   
  (2) writes over previous /home/shares/soilcarbon/Twitter/Merged_v3/ (master files) cleaning and standardizing to enable merge, as well as removing duplicates
  - runs twice a week collecting the last 6-9 days of twitter data based on query words from [tag_list.csv](tag_list.csv)
  
*** 

- Inititial data exploration: 
  - [Data_viz_script.R](Data_viz_script.R): Data visualization and exploration
  - [Sentiment_test.R](sentiment_test.R): Used to explore text mining options with Archived/json data. Reproducible for the larger merged dataset.

- More specific exploration and visualizations can be found in the following folders (see their respective README's for more detailed information about specific analyses):
  - various way of visualizing the content of tweets by different categories[tweet_content](https://github.com/Science-for-Nature-and-People/soc-twitter/tree/master/tweet_content) 
  - attempts to identify what type of content appeals to different user groups [influencers](https://github.com/Science-for-Nature-and-People/soc-twitter/tree/master/influencers)
  - each of these ^ rely on the functions within [text_analysis_functions.R](https://github.com/Science-for-Nature-and-People/soc-twitter/blob/master/text_analysis_functions.R)
  
***       
      
[translation](https://github.com/Science-for-Nature-and-People/soc-twitter/tree/master/translation) folder contains scripts for translating hindi using google translate via webinterface

*** 

[pre_processing](https://github.com/jeremyknox-ucsb/soc-twitter/tree/master/pre_processing) folder contains scripts for specific tasks (usually run once). 
",1,1,3,13,soil,"[social-media, soil, soil-quality, text-analysis, text-mining, twitter, twitter-sentiment-analysis]",00000
1617,macrounchained,julienmoeys,N/A,https://github.com/julienmoeys/macrounchained,https://api.github.com/repos/julienmoeys/macrounchained,R package for batch simulation of substance properties and application patterns with MACRO and MACRO In FOCUS,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C10E:1E3B:2FD9C34:61C55A5:65224326.'}",1,1,1,1,soil,"[model, pesticide, r, r-package, soil, water]",00000
1618,cssc-texture-triangle,kentwalters,N/A,N/A,https://api.github.com/repos/kentwalters/cssc-texture-triangle,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C10F:0E7B:1A3AA79:36073A5:65224327.'}",N/A,N/A,N/A,N/A,soil,"[N, /, A]",00000
1619,soilMakers,byrd-laif,N/A,https://github.com/byrd-laif/soilMakers,https://api.github.com/repos/byrd-laif/soilMakers,"Dedicated to her Son, and all posterity learning to live in the light of nature.","{'message': 'Not Found', 'documentation_url': 'https://docs.github.com/rest/repos/contents#get-re1624,soilsensor,plantmer,N/A,N/A,https://api.github.com/repos/plantmer/soilsensor,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C112:1E3B:2FD9E5F:61C5A1F:65224329.'}",N/A,N/A,N/A,N/A,soil,"[N, /, A]",00000
1625,Julia-Soilspec,tstenborg,N/A,N/A,https://api.github.com/repos/tstenborg/Julia-Soilspec,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C1DB:2319:69E4CD:DB504F:65224329.'}",N/A,N/A,N/A,N/A,soil,"[N, /, A]",00000
1626,PlantGuard,fabiansteiner,N/A,N/A,https://api.github.com/repos/fabiansteiner/PlantGuard,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C130:41B1:717349:EABDD8:6522432A.'}",N/A,N/A,N/A,N/A,soil,"[N, /, A]",00000
1627,jNSMR,ncss-tech,N/A,N/A,https://api.github.com/repos/ncss-tech/jNSMR,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C135:87DB:300942A:6217872:6522432A.'}",N/A,N/A,N/A,N/A,soil,"[N, /, A]",00000
1628,Computer-Graphics-SoSe16,albertkasdorf,N/A,N/A,https://api.github.com/repos/albertkasdorf/Computer-Graphics-SoSe16,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-res1624,soilsensor,plantmer,N/A,N/A,https://api.github.com/repos/plantmer/soilsensor,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C1F0:505E:7711E4:F56FDF:65224329.'}",N/A,N/A,N/A,N/A,soil,"[N, /, A]",00000
1625,Julia-Soilspec,tstenborg,N/A,N/A,https://api.github.com/repos/tstenborg/Julia-Soilspec,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C1DA:178A:2CA86EE:5B6D7C2:65224329.'}",N/A,N/A,N/A,N/A,soil,"[N, /, A]",00000
1626,PlantGuard,fabiansteiner,N/A,N/A,https://api.github.com/repos/fabiansteiner/PlantGuard,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C12B:984A:7683DB:F472CB:6522432A.'}",N/A,N/A,N/A,N/A,soil,"[N, /, A]",00000
1627,jNSMR,ncss-tech,N/A,N/A,https://api.github.com/repos/ncss-tech/jNSMR,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C140:4F4C:72E714:ED20AC:6522432A.'}",N/A,N/A,N/A,N/A,soil,"[N, /, A]",00000
1628,Computer-Graphics-SoSe16,albertkasdorf,N/A,N/A,https://api.github.com/repos/albertkasdorf/Computer-Graphics-SoSe16,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C10A:178A:2CA8896:5B6DB36:6522432B.'}",N/A,N/A,N/A,N/A,soil,"[N, /, A]",00000
1629,dinoSOIL-toolbox,acocac,N/A,N/A,https://api.github.com/repos/acocac/dinoSOIL-toolbox,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C1A3:505E:7714B4:F575AF:6522432B.'}",N/A,N/A,N/A,N/A,soil,"[N, /, A]",00000
1630,graph_soil_texture,ccarbajal16,N/A,N/A,https://api.github.com/repos/ccarbajal16/graph_soil_texture,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C18A:7AEF:2DDEEB4:5DCD4ED:6522432C.'}",N/A,N/A,N/A,N/A,soil,"[N, /, A]",00000
1631,Soil-Testing-App,EngrSaad2,N/A,N/A,https://api.github.com/repos/EngrSaad2/Soil-Testing-App,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C1A6:4D66:6D139F:E1C762:6522432D.'}",N/A,N/A,N/A,N/A,soil,"[N, /, A]",00000
1632,reforestation-soils,TNC-GlobalLands,N/A,N/A,https://api.github.com/repos/TNC-GlobalLands/reforestation-soils,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C1D1:6A74:1A3C8E3:3609C6F:6522432D.'}",N/A,N/A,N/A,N/A,soil,"[N, /, A]",00000
1633,Soil_flux_app,TlaskalV,N/A,N/A,https://api.github.com/repos/TlaskalV/Soil_flux_app,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C127:784E:767E0D:F4A31A:6522432D.'}",N/A,N/A,N/A,N/A,soil,"[N, /, A]",00000
1634,Marble_Crush_Game,kenzazayo,N/A,N/A,https://api.github.com/repos/kenzazayo/Marble_Crush_Game,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C1FC:0FAE:1986B99:34A6D34:6522432E.'}",N/A,N/A,N/A,N/A,soil,"[N, /, A]",00000
1635,soil-resistivity-prediction,ruankie,N/A,N/A,https://api.github.com/repos/ruankie/soil-resistivity-prediction,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Supp1640,SoilMBVariability,petacapek,N/A,N/A,https://api.github.com/repos/petacapek/SoilMBVariability,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C1E6:607B:798DF8:FA6BC0:65224331.'}",N/A,N/A,N/A,N/A,soil,"[N, /, A]",00000
1641,soil_health_hstf,Saurav12das,N/A,N/A,https://api.github.com/repos/Saurav12das/soil_health_hstf,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C122:5934:286B380:531C8B5:65224332.'}",N/A,N/A,N/A,N/A,soil,"[N, /, A]",00000
1642,basilika,niksiboxi,N/A,N/A,https://api.github.com/repos/niksiboxi/basilika,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C172:2319:69ECE1:DB6110:65224332.'}",N/A,N/A,N/A,N/A,soil,"[N, /, A]",00000
1643,prototype-runoff-sample-splitter,samuel-rosa,N/A,N/A,https://api.github.com/repos/samuel-rosa/prototype-runoff-sample-splitter,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C1FD:5934:286B2E1:531C779:65224331.'}",N/A,N/A,N/A,N/A,soil,"[N, /, A]",00000
1644,Back-From-Klondike,jamesblasco,N/A,N/A,https://api.github.com/repos/jamesblasco/Back-From-Klondike,N/A,"{'documentation_url': 'https://docs.github.com/en1640,prototype-runoff-sample-splitter,samuel-rosa,N/A,N/A,https://api.github.com/repos/samuel-rosa/prototype-runoff-sample-splitter,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C1FD:5934:286B2E1:531C779:65224331.'}",N/A,N/A,N/A,N/A,soil,"[N, /, A]",00000
1641,Back-From-Klondike,jamesblasco,N/A,N/A,https://api.github.com/repos/jamesblasco/Back-From-Klondike,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C155:7B5B:7392AC:EE531B:65224332.'}",N/A,N/A,N/A,N/A,soil,"[N, /, A]",00000
1642,ng2-soil-input-form,kentwalters,N/A,N/A,https://api.github.com/repos/kentwalters/ng2-soil-input-form,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C1F6:418F:2A770D1:56D2A8F:65224332.'}",N/A,N/A,N/A,N/A,soil,"[N, /, A]",00000
1643,IrrigationRecs,KSUSTL,N/A,N/A,https://api.github.com/repos/KSUSTL/IrrigationRecs,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C103:3B38:2DDA33:5EF987:652240F7.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,soil,"[N, /, A]",00000
1644,SoilHOMC,saedoquililongo,N/A,N/A,https://api.github.com/repos/saedoquililongo/SoilHOMC,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C141:6611:6E6E6D:E47100:65224333.'}",N/A,N/A,N/A,N/A,soil,"[N, /, A]",00000
1645,SlakeItEasy,Soil-Health-Institute,N/A,N/A,https://api.github.com/repos/Soil-Health-Institute/SlakeItEasy,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1D2:6D2F:2DF9CF:5F60E9:652240FC.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,soil,"[N, /, A]",00000
1646,SoilMBVariability,petacapek,N/A,N/A,https://api.github.com/repos/petacapek/SoilMBVariability,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C1E6:607B:798DF8:FA6BC0:65224331.'}",N/A,N/A,N/A,N/A,soil,"[N, /, A]",00000
1647,soil_health_hstf,Saurav12das,N/A,N/A,https://api.github.com/repos/Saurav12das/soil_health_hstf,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C122:5934:286B380:531C8B5:65224332.'}",N/A,N/A,N/A,N/A,soil,"[N, /, A]",00000
1648,basilika,niksiboxi,N/A,N/A,https://api.github.com/repos/niksiboxi/basilika,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C172:2319:69ECE1:DB6110:65224332.'}",N/A,N/A,N/A,N/A,soil,"[N, /, A]",00000
1649,Bearing-Capacity-of-Soil,TamandeepSingh,N/A,N/A,https://api.github.com/repos/TamandeepSingh/Bearing-Capacity-of-Soil,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C1A5:7AEF:2DDF542:5DCE26C:65224333.'}",N/A,N/A,N/A,N/A,soil,"[N, /, A]",00000
1650,HINT2.0,deecube,N/A,N/A,https://api.github.com/repos/deecube/HINT2.0,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C1F8:5934:286B54A:531CC6B:65224333.'}",N/A,N/A,N/A,N/A,soil,"[N, /, A]",00000
1651,twitter-data,demal-lab,N/A,N/A,https://api.github.com/repos/demal-lab/twitter-data,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the reque1656,Nitrogen_cycle,jflater,N/A,N/A,https://api.github.com/repos/jflater/Nitrogen_cycle,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C18F:4678:1ADD040:3750971:65224337.'}",N/A,N/A,N/A,N/A,soil,"[N, /, A]",00000
1657,bonsai-watering-system,Undead8,N/A,N/A,https://api.github.com/repos/Undead8/bonsai-watering-system,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C17B:29CE:3308EF3:68279C2:65224337.'}",N/A,N/A,N/A,N/A,soil,"[N, /, A]",00000
1658,Plastic_mulch-soil_properties,NGBeriot,N/A,N/A,https://api.github.com/repos/NGBeriot/Plastic_mulch-soil_properties,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1BD:178A:2C85CEC:5B25F57:6522412B.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,soil,"[N, /, A]",00000
1659,regexsolos,Laboratorio-de-Pedometria,N/A,N/A,https://api.github.com/repos/Laboratorio-de-Pedometria/regexsolos,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C198:4678:1ADD138:3750B79:65224338.'}",N/A,N/A,N/A,N/A,soil,"[N, /, A]",00000
1660,starship-re,kanissh,N/A,N/A,https://api.github.com/repos/kanissh/starship-re,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C136:87DB:300A383:621983A:65224338.'}",N/A,N/A,N/A,N/A,soil,"[N, /, A]",00000
1661,soil210,hanwendong1,N/A,N/A,https://api.github.com/repos/hanwendong1/soil2101657,bonsai-watering-system,Undead8,N/A,N/A,https://api.github.com/repos/Undead8/bonsai-watering-system,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C1F5:7AEF:2DDF973:5DCEB21:65224337.'}",N/A,N/A,N/A,N/A,soil,"[N, /, A]",00000
1658,Plastic_mulch-soil_properties,NGBeriot,N/A,N/A,https://api.github.com/repos/NGBeriot/Plastic_mulch-soil_properties,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1BD:178A:2C85CEC:5B25F57:6522412B.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,soil,"[N, /, A]",00000
1659,regexsolos,Laboratorio-de-Pedometria,N/A,N/A,https://api.github.com/repos/Laboratorio-de-Pedometria/regexsolos,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C16D:58D0:77C6C4:F68875:65224338.'}",N/A,N/A,N/A,N/A,soil,"[N, /, A]",00000
1660,starship-re,kanissh,N/A,N/A,https://api.github.com/repos/kanissh/starship-re,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C1AD:36DF:35700CD:6CF3142:65224338.'}",N/A,N/A,N/A,N/A,soil,"[N, /, A]",00000
1661,soil210,hanwendong1,N/A,N/A,https://api.github.com/repos/hanwendong1/soil210,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C105:092A:715BB0:EA4FBE:65224339.'}",N/A,N/A,N/A,N/A,soil,"[N, /, A]",00000
1662,soilqualitylab.github.io,soilqualitylab,N/A,N/A,https://api.github.com/repos/soilqualitylab/soilqualitylab.github.io,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C176:2319:69F376:DB6EBA:6522433A.'}",N/A,N/A,N/A,N/A,soil,"[N, /, A]",00000
1663,R-codes-for-East-Chicago-soil-PCB-analysis,valdiman,N/A,N/A,https://api.github.com/repos/valdiman/R-codes-for-East-Chicago-soil-PCB-analysis,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C1CC:6A74:1A3D352:360B211:6522433A.'}",N/A,N/A,N/A,N/A,soil,"[N, /, A]",00000
1664,GLion,Klevh,N/A,N/A,https://api.github.com/repos/Klevh/GLion,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C19C:984A:76930A:F4921A:6522433B.'}",N/A,N/A,N/A,N/A,soil,"[N, /, A]",00000
1665,mysoil-sample-app,NERC-CEH,N/A,N/A,https://api.github.com/repos/NERC-CEH/mysoil-sample-app,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C12D:7B5B:739BBB:EE65C9:6522433B.'}",N/A,N/A,N/A,N/A,soil,"[N, /, A]",00000
1666,M1S1_LMG,Romain96,N/A,N/A,https://api.github.com/repos/Romain96/M1S1_LMG,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C1B1:0C3C:75FB58:F3766B:6522433C.'}",N/A,N/A,N/A,N/A,soil,"[N, /, A]",00000
1667,Arduino-Projects,Sairamdhandapani,N/A,N/A,https://api.github.com/repos/Sairamdhandapani/Arduino-Projects,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C103:6A74:1A3D4EB:360B561:6522433C.'}",N/A,N/A,N/A,N/A,soil,"[N, /,1672,food_security,patmejia,N/A,N/A,https://api.github.com/repos/patmejia/food_security,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C11F:5F41:702006:E7D2BB:6522433F.'}",N/A,N/A,N/A,N/A,soil,"[N, /, A]",00000
1673,laserdiffraktometrie_korngroessen,meerestier,N/A,N/A,https://api.github.com/repos/meerestier/laserdiffraktometrie_korngroessen,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C14D:309A:2E67130:5EAD11F:65224340.'}",N/A,N/A,N/A,N/A,soil,"[N, /, A]",00000
1674,major-project,Naga-Abhilash,N/A,N/A,https://api.github.com/repos/Naga-Abhilash/major-project,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C189:1F34:1BAF89C:38E703D:65224340.'}",N/A,N/A,N/A,N/A,soil,"[N, /, A]",00000
1675,nrcs,hammerly,N/A,N/A,https://api.github.com/repos/hammerly/nrcs,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C1B8:29CE:330978B:6828B82:65224341.'}",N/A,N/A,N/A,N/A,soil,"[N, /, A]",00000
1676,hardy,SethNC,N/A,N/A,https://api.github.com/repos/SethNC/hardy,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1A5:5B68:2A8E52:58A95A:65224104.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,soil,"[N, /, A]",00000
1677,tambua-shamba,MarvinKweyu,N/A,N/A,https://api.github.com/repos/MarvinKweyu/tambua-shamba,N/A,"{'message': 'API rate limit exceeded 1673,laserdiffraktometrie_korngroessen,meerestier,N/A,N/A,https://api.github.com/repos/meerestier/laserdiffraktometrie_korngroessen,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C19A:29CE:3309699:682898B:65224340.'}",N/A,N/A,N/A,N/A,soil,"[N, /, A]",00000
1674,major-project,Naga-Abhilash,N/A,N/A,https://api.github.com/repos/Naga-Abhilash/major-project,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C10F:0E7B:1A3C047:360A0EA:65224340.'}",N/A,N/A,N/A,N/A,soil,"[N, /, A]",00000
1675,nrcs,hammerly,N/A,N/A,https://api.github.com/repos/hammerly/nrcs,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C1B9:505E:7728F3:F59FAC:65224341.'}",N/A,N/A,N/A,N/A,soil,"[N, /, A]",00000
1676,Sorption,devalc,N/A,N/A,https://api.github.com/repos/devalc/Sorption,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C132:7B5B:73A163:EE7193:65224341.'}",N/A,N/A,N/A,N/A,soil,"[N, /, A]",00000
1677,Arduino-SoilSense,naoto64,N/A,N/A,https://api.github.com/repos/naoto64/Arduino-SoilSense,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C1D5:4E78:70827F:E88C36:65224342.'}",N/A,N/A,N/A,N/A,soil,"[N, /, A]",00000
1678,Suma-Solos,andersonhsporto,N/A,N/A,https://api.github.com/repos/andersonhsporto/Suma-Solos,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C101:178A:2CAA024:5B70BBE:65224342.'}",N/A,N/A,N/A,N/A,soil,"[N, /, A]",00000
1679,USDA-Forest-Service-Experimental-Forests-Soils,carrie7490,N/A,N/A,https://api.github.com/repos/carrie7490/USDA-Forest-Service-Experimental-Forests-Soils,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C1CD:5F41:70232D:E7D968:65224343.'}",N/A,N/A,N/A,N/A,soil,"[N, /, A]",00000
1680,global_soil_carbon_turnover_time,leizhang-geo,N/A,N/A,https://api.github.com/repos/leizhang-geo/global_soil_carbon_turnover_time,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C1E6:607B:799FD3:FA90AB:65224343.'}",N/A,N/A,N/A,N/A,soil,"[N, /, A]",00000
1681,-bhoomi,Sonaaa10,N/A,N/A,https://api.github.com/repos/Sonaaa10/-bhoomi,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C128:73C7:700742:E74D6E:6522411A.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,soil,"[N, /, A]",00000
1682,nr-soils-relocation,bcgov,N/A,N/A,https://api.github.com/repos/bcgov/nr-soils-relocation,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C1A9:3819:1AF9D32:3778F0C:65224344.'}",N/A,N/A,N/A,N/A,soil,"[N, /, A]",00000
1683,Soil-Moisture-Sensor-Example,layadcircuits,N/A,N/A,https://api.github.com/repos/layadcircuits/Soil-Moisture-Sensor-Example,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C187:984A:769C7D:F4A5C1:65224345.'}",N/A,N/A,N/A,N/A,soil,"[N, /, A]",00000
1684,Plane_CG,im-loki,N/A,N/A,https://api.github.com/repos/im-loki/Plane_CG,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate1689,Soil-Moisture-Sensor-Example,layadcircuits,N/A,N/A,https://api.github.com/repos/layadcircuits/Soil-Moisture-Sensor-Example,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C15F:784E:769130:F4CB1E:65224345.'}",N/A,N/A,N/A,N/A,soil,"[N, /, A]",00000
1690,Plane_CG,im-loki,N/A,N/A,https://api.github.com/repos/im-loki/Plane_CG,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C13B:4678:1ADDCCD:375238E:65224345.'}",N/A,N/A,N/A,N/A,soil,"[N, /, A]",00000
1691,plants-vs-environment,maxxk,N/A,N/A,https://api.github.com/repos/maxxk/plants-vs-environment,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C11C:87DB:300B2C6:621B781:65224346.'}",N/A,N/A,N/A,N/A,soil,"[N, /, A]",00000
1692,Greenhouse-intelligent-flower-watering-system,Su996,N/A,N/A,https://api.github.com/repos/Su996/Greenhouse-intelligent-flower-watering-system,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C15A:5934:286C85B:531F3FA:65224346.'}",N/A,N/A,N/A,N/A,soil,"[N, /, A]",00000
1693,essdive-water-soil-sed-chem,ess-dive-community,N/A,N/A,https://api.github.com/repos/ess-dive-community/essdive-water-soil-sed-chem,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/r1689,soilutils,alechaulotte,N/A,N/A,https://api.github.com/repos/alechaulotte/soilutils,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C12B:984A:76A0CA:F4AE79:65224348.'}",N/A,N/A,N/A,N/A,soil,"[N, /, A]",00000
1690,nasis,brownag,N/A,N/A,https://api.github.com/repos/brownag/nasis,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C127:784E:769515:F4D31E:65224348.'}",N/A,N/A,N/A,N/A,soil,"[N, /, A]",00000
1691,RootWaterUptake,Code4Plants,N/A,N/A,https://api.github.com/repos/Code4Plants/RootWaterUptake,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C196:2115:70CA7B:E93C98:65224348.'}",N/A,N/A,N/A,N/A,soil,"[N, /, A]",00000
1692,nasatmp,marjenahaque,N/A,https://github.com/marjenahaque/nasatmp,https://api.github.com/repos/marjenahaque/nasatmp,A simple script to show how to download temperature data of different location of an area from NASA POWER for SWAT module.,"# NASA_POWER_API_PythonforSWAT
This Python script allows you to download daily temperature data from NASA's Power API for specific geographic coordinates. The data is obtained in CSV format and can be used for various purposes, including input to the SWAT (Soil and Water Assessment Tool) module.

## Prerequisites
Before running the script, ensure that you have the following prerequisites:

- Python 3.x installed on your system.
- Required Python libraries installed (you can install them using pip):
  - **requests**: Used for making HTTP requests.
  - **pandas**: Used for data manipulation.
  - **re**: Regular expressions library for text processing.
## Usage
1.Modify the locations list with the latitude and longitude coordinates for the locations you are interested in. You can add or remove coordinates as needed.

1.Customize the base_url variable if necessary. The default URL fetches daily maximum and minimum temperature data for Renewable Energy (RE) communities from 1982-01-01 to 2017-12-31. You can adjust the parameters, community, start date, and end date as needed.

1.Run the script by executing it with Python:   ***Nasatmpdata_for_swat.py***

1.The script will download temperature data for each location in the locations list and save it as CSV files with filenames like tmp{LAT}.csv and corresponding text files tmp{LAT}.txt.

## Output
For each location specified in the **locations** list, you will get two files:

- **'tmp{LAT}.csv'**: A CSV file containing daily temperature data with columns 'T2M_MAX' and 'T2M_MIN'.
- **'tmp{LAT}.txt'**: A CSV file with the same data, but with columns renamed to the date in YYYYMMDD format (e.g., '19820101' for January 1, 1982).
## Notes
The script uses the latitude to generate a unique filename for each location by removing non-alphanumeric characters from the latitude value.
Make sure to adjust the file paths in the script (**pd.read_csv** and **nasa.to_csv**) according to your system's configuration.
The script currently saves the data in the same directory as the script itself. You can modify the save path as needed.
Remember to comply with NASA's data usage policies and terms when using the data obtained through this script.




",0,0,1,0,soil,"[api, nasa, precipitation, python, soil, swat, temperature]",00000
1693,SOIL-recompiled,itiievskyi,N/A,https://github.com/itiievskyi/SOIL-recompiled,https://api.github.com/repos/itiievskyi/SOIL-recompiled,Compiled SOIL library for uploading textures into OpenGL.,"# SOIL-recompiled

SOIL is a tiny C library used primarily for uploading textures into OpenGL.
You can find the source code of SOIL at the [official page](https://www.lonesock.net/soil.html).

The library can be used ""as is"" or compiled right on your computer. 
Unfortunately the static library downloaded for the mentioned page didn't work for me so I compiled it on my iMac 2017 with macos High Sierra on board.

This library was successfully tested with OpenGL while making a small 2D game.

### How to use:
Just clone or dowload the library as well as header file and use it while compiling your program.

### Enjoy!
",0,0,1,0,soil,"[cpp, graphics, opengl, soil, textureloader]",00000
1694,aus-vocab,ANZSoilData,ANZSoilData,https://github.com/ANZSoilData/aus-vocab,https://api.github.com/repos/ANZSoilData/aus-vocab,SCMA work now in https://github.com/ANZSoilData/def-au-scma,"# aus-vocab
Australian soil vocabularies.

Well governed soil vocabularies from various national and other recognised authorities (for example the handbooks issued by the Australian National Committee on Soil and Terrain).

Excel spreadsheets of structure compatable with https://skos-play.sparna.fr/play/home are stored here, as are the skos-play ouputs RDF serialisation files (e.g. ttl.) 

The Excel spreadsheets are converted to RDF vocabularies (as SKOS) using https://skos-play.sparna.fr/play/home

RDF resulting serialisation files are loaded into CSIRO linked data registry (LDR). Th1700,aus-vocab,ANZSoilData,ANZSoilData,https://github.com/ANZSoilData/aus-vocab,https://api.github.com/repos/ANZSoilData/aus-vocab,SCMA work now in https://github.com/ANZSoilData/def-au-scma,"# aus-vocab
Australian soil vocabularies.

Well governed soil vocabularies from various national and other recognised authorities (for example the handbooks issued by the Australian National Committee on Soil and Terrain).

Excel spreadsheets of structure compatable with https://skos-play.sparna.fr/play/home are stored here, as are the skos-play ouputs RDF serialisation files (e.g. ttl.) 

The Excel spreadsheets are converted to RDF vocabularies (as SKOS) using https://skos-play.sparna.fr/play/home

RDF resulting serialisation files are loaded into CSIRO linked data registry (LDR). The LDR Service provides management and public access to codes, codelists, vocabularies, ontologies and other reference resources authorized or adopted by CSIRO.

The experimental (sandbox) into which these files are lodaded for checking is http://registry.it.csiro.au/sandbox/soil/
The permanent location is http://anzsoil.org/def/au/
 

",0,0,6,4,soil,"[land-survey, rdf, soil, soil-chemistry, soil-profile, soil-properties, soil-survey, vocabularies]",00000
1701,Plant-Monitor-with-ESP8266,ammerscm68,N/A,https://github.com/ammerscm68/Plant-Monitor-with-ESP8266,https://api.github.com/repos/ammerscm68/Plant-Monitor-with-ESP8266,A Plant Monitor with ESP8266 and Capacitive Soil Moisture Sensor (MQTT-Broker Version),"# Plant-Monitor-with-ESP8266 (MQTT-Broker Version)
A Plant Monitor with ESP8266 and Capacitive Soil Moisture Sensor and MQTT Broker

# Hardware: 
RGB LED  --> Green = GPIO 2 (D4) / Blue = GPIO 0 (D3) / Red = GPIO 4 (D2) <br>
ESP8266 (Wemos D1 Mini) <br>
Capacitive Soil Moisture Sensor V1.2 an A0 Pin from then D1 Mini <br>

# Manual RGB-LED Indikator
When the sensor is started for the first time, the ""Captive Portal"" is started and the LED lights up ""BLUE"" <br>
After entering the data, the sensor restarts and the RGB LED lights up as follows: <br>

1. Checking the RGB LED --- All three colors flash three times (Red/Blue/Green) <br>
2. Establishing WiFi connection RGB LED blinks BLUE/GREEN <br>
3. If the WLAN connection is successful and everything is loaded, the RGB LED lights up green --- otherwise RED <br>
4. With each measurement, the RGB LED flashes Green once briefly. <br>

Note: If the WLAN connection cannot be established for about 15 minutes, the ""Captive Portal"" will be started!

# Software:
A ""captive portal"" is created when the software is started for the first time. (Name = Plant-Monitor) <br>
Make the appropriate entries here. A website can be opened via the assigned IP address or with the Hostname. <br>
(The Hostname is ""Sensorname"".local - Example: kitchenplant.local) <br>
Should it ever be necessary to change the WLAN access data and other parameters, this can be <br>
done by a RESET on the website. If this is not possible then simply wait (when WLAN is switched off!) <br>
until the LED lights up only blue and the ""Captive Portal"" starts again. <br>
The new data can now be entered.<br>
<br>
New from version 1.4.0: <br>
new Captive Portal (WiFi-Manager)<br>
bug fix<br>
<br>
New from version 1.2.8: <br> 
Now with Arduino OTA. <br>
Sketch updates without a USB cable over the network <br>
<br>
New from version 1.1.8: <br>
Improved webinterface <br>
bug fix <br>
The webinterface can now be reached with the DNS name. The DNS name is equal to the name of the sensor. <br>
(Example : http://kitchenplant.local) <br>
<br>
New from version 1.1.5: <br>
After switching on the sensor, a measurement is taken every 15 seconds to check the values. (Number of measurements: 20 - start mode)  <br>
After these 20 measurements, the measurement takes place again at the set interval.  <br>
<br>
New from version 1.1.2: <br>
The sensor now also works without MQTT (do not specify the MQTT host in the captive portal) <br>
The sensor can now also be calibrated during operation.
",0,0,1,0,soil,"[dns, esp8266, led, monitoring, mqtt, mqtt-broker, mqtt-client, plant, soil, soil-moisture-sensor, water, watering, wemos-d1-mini]",00000
1702,SQ_Energy_Balance,Crop2ML-Catalog,Crop2ML-Catalog,https://github.com/Crop2ML-Catalog/SQ_Energy_Balance,https://api.github.com/repos/Crop2ML-Catalog/SQ_Energy_Balance,This component allows to estimate crop canopy temperature and soil-plant energy fluxes,"
AgriculturalModelExchangeInitiative
===================================

Model of Energy Balance of the crop growth simulation model SiriusQuality

Project Organization
--------------------

```

    ├── LICENSE.txt        <- License file
    ├── README.md          <- The top-level README for AMEI members using this project.
    ├── data/              <- data used for model simulation
    │
    ├── doc/               <- Package documentation
    │
    ├── test/              <- model tests for each language and platform
    │
    ├── crop2ml/           <- model units and composite in crop2ml format.
    │      ├── xml files
    │      ├── Algo/
    │
    ├── original/          <- The initial implementation of the model component.
    │
    ├── src/               <- Executable source in different language and platform
    │   ├── pyx/
    │   ├── java/
    │   ├── py/
        ├── R/
        ├── cpp/
        ├── cs/
        ├── f90/
        ├── Bioma/
        ├── Sirius/
        ├── Simplace/
        ├── OpenAlea/
        ├── Record/
        ├── DSSAT/
   
```

Model visualization
-------------------
![](doc/images/energy_balance2.png)

An example of transformation in OpenAlea
----------------------------------------

![](doc/images/openalea_workflow.png)



An example of unit test in R (Penman model unit)
------------------------------------------------

![](doc/images/penman_notebook.png)

",0,0,0,0,soil,"[crop, energy, soil]",00000
1703,soil-demo,joelschutz,N/A,https://github.com/joelschutz/soil-demo,https://api.github.com/repos/joelschutz/soil-demo,"Explore water absorption by soil with the Soil Demo, created using Go and Ebiten game engine. Adjust soil type, water, and drainage to visualize absorption. Educational and interactive.","# Soil Demo

The Soil Demo project is a demonstration of water absorption by soil under different conditions. It is written in Go programming language and utilizes assets from [SkaldingDelight](https://skalding.itch.io).

## Table of Contents

- [Soil Demo](#soil-demo)
  - [Table of Contents](#table-of-contents)
  - [Introduction](#introduction)
  - [Features](#features)
  - [Installation](#installation)
  - [Usage](#usage)
  - [Contributing](#contributing)
  - [License](#license)

## Introduction

The Soil Demo project aims to showcase the process of water absorption by soil, simulating different conditions. By running this project, users can observe how the soil behaves under various scenarios and gain insights into the absorption process.

## Features

- Simulates water absorption by soil.
- Allows customization of different soil conditions.
- Provides visual representation of the absorption process.
- Displays relevant information and statistics during the simulation.

## Installation

To install the Soil Demo project, follow these steps:

1. Make sure you have Go installed on your system.
2. Clone the repository: `git clone https://github.com/your-username/soil-demo.git`
3. Navigate to the project directory: `cd soil-demo`
4. Install dependencies: `go mod download`

## Usage

To run the Soil Demo project, execute the following command:

```shell
go run main.go
```

Once the project is running, follow the on-screen instructions to interact with the simulation. You can customize the soil conditions and observe the water absorption process.

## Contributing

Contributions to the Soil Demo project are welcome! If you'd like to contribute, please follow these steps:

1. Fork the repository.
2. Create a new branch: `git checkout -b feature/my-feature`
3. Make your changes and commit them: `git commit -am 'Add 1698,LBRES2106,plantmodelling,plantmodelling,https://github.com/plantmodelling/LBRES2106,https://api.github.com/repos/plantmodelling/LBRES2106,Teaching materials for the course LBRES2106,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C115:46E9:761129:F385B1:6522434E.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",0,0,2,0,soil,"[plant, science, soil]",00000
1699,mixing_experiment,petacapek,N/A,N/A,https://api.github.com/repos/petacapek/mixing_experiment,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C143:46E9:7611D1:F38716:6522434F.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,soil,"[N, /, A]",00000
1700,EUROSEM,TheSoilman,N/A,N/A,https://api.github.com/repos/TheSoilman/EUROSEM,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C172:2319:6A07BB:DB98DE:6522434F.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,soil,"[N, /, A]",00000
1701,hardy,SethNC,N/A,N/A,https://api.github.com/repos/SethNC/hardy,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1A5:5B68:2A8E52:58A95A:65224104.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,soil,"[N, /, A]",00000
1702,tambua-shamba,MarvinKweyu,N/A,N/A,https://api.github.com/repos/MarvinKweyu/tambua-shamba,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C176:33C6:29FD3A0:5648CB0:65224104.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,soil,"[N, /, A]",00000
1703,Conductividad_hidraulica,EfraCL,N/A,N/A,https://api.github.com/repos/EfraCL/Conductividad_hidraulica,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C174:5831:2BC4ECE:59B247A:65224341.'}",N/A,N/A,N/A,N/A,soil,"[N, /, A]",00000
1704,KruskalAlgorithmTutorial,ToughNickel,N/A,https://github.com/ToughNickel/KruskalAlgorithmTutorial,https://api.github.com/repos/ToughNickel/KruskalAlgorithmTutorial,Kruskal Algorithm Graphics Tutorial using OpenGL in C and JOGL in Java ,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1A9:3819:1AFAA11:377A938:6522434E.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",0,0,2,0,soil,"[c, codeblocks, freeglut, freeglut-library, java, jogl, kruskal-algorithm, netbeans-ide, opengl, soil]",00000
1705,Retaining_Walls_Performance,jrstanley04,N/A,N/A,https://api.github.com/repos/jrstanley04/Retaining_Walls_Performance,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1B2:418F:2A790A2:56D6B80:6522434E.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,soil,"[N, /, A]",00000
1706,Arduino_Projects,marius0210,N/A,N/A,https://api.github.com/repos/marius0210/Arduino_Projects,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C189:1F34:1BB0B67:38E96FB:65224350.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,soil,"[N, /, A]",00000
1707,TES_spatial_access_2021,kaizadp,N/A,N/A,https://api.github.com/repos/kaizadp/TES_spatial_access_2021,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1FF:29CE:330AC31:682B5F1:65224350.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,soil,"[N, /, A]",00000
1708,Soil_Horizons_Cheat_Sheet,G-2200,N/A,N/A,https://api.github.com/repos/G-2200/Soil_Horizons_Cheat_Sheet,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C193:2CBC:7870FF:F83BB9:65224351.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,soil,"[N, /, A]",00000
1709,TMS_visualization,TlaskalV,N/A,N/A,https://api.github.com/repos/TlaskalV/TMS_visualization,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1DB:2319:6A09FF:DB9D8B:65224352.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,soil,"[N, /, A]",00000
1710,conan-soil2,inexorgame-obsolete,N/A,N/A,https://api.github.com/repos/inexorgame-obsolete/conan-soil2,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C10B:0E7B:1A3D419:360C99B:65224352.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate1715,TES_spatial_access_2021,kaizadp,N/A,N/A,https://api.github.com/repos/kaizadp/TES_spatial_access_2021,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1FF:29CE:330AC31:682B5F1:65224350.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,soil,"[N, /, A]",00000
1716,Soil_Horizons_Cheat_Sheet,G-2200,N/A,N/A,https://api.github.com/repos/G-2200/Soil_Horizons_Cheat_Sheet,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C193:2CBC:7870FF:F83BB9:65224351.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,soil,"[N, /, A]",00000
1717,bioturbation-model,samharrison7,N/A,N/A,https://api.github.com/repos/samharrison7/bioturbation-model,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C16A:58D0:77E26C:F6C182:65224353.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,soil,"[N, /, A]",00000
1718,taxosuelos.github.io,AleBecerra,N/A,N/A,https://api.github.com/repos/AleBecerra/taxosuelos.github.io,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C122:5934:286D931:5321647:65224353.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,soil,"[N, /, A]",00000
1719,Enivironmental-R-Analysis-Activities,zahmed333,N/A,N/A,https://api.github.com/repos/zahmed333/Enivironmental-R-Analysis-Activities,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C17C:418F:2A797B9:56D79C5:65224354.', 'documentation_url': 'https://doc1716,SoilDataPrep,TillF,N/A,N/A,https://api.github.com/repos/TillF/SoilDataPrep,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C10F:0E7B:1A3D462:360CA3A:65224352.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,soil,"[N, /, A]",00000
1717,bioturbation-model,samharrison7,N/A,N/A,https://api.github.com/repos/samharrison7/bioturbation-model,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1C2:3BF5:749FDD:F08D3C:65224353.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,soil,"[N, /, A]",00000
1718,taxosuelos.github.io,AleBecerra,N/A,N/A,https://api.github.com/repos/AleBecerra/taxosuelos.github.io,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C168:6611:6E87EF:E4A634:65224354.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,soil,"[N, /, A]",00000
1719,Enivironmental-R-Analysis-Activities,zahmed333,N/A,N/A,https://api.github.com/repos/zahmed333/Enivironmental-R-Analysis-Activities,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C104:2319:6A0CAB:DBA2FE:65224354.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,soil,"[N, /, A]",00000
1720,Escala-Sensivel-ao-Conteudo-C,mrRodrigo,N/A,N/A,https://api.github.com/repos/mrRodrigo/Escala-Sensivel-ao-Conteudo-C,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C127:784E:76A0EB:F4EB96:65224355.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,soil,"[N, /, A]",00000
1721,Prj_SoilSensor,kaxori,N/A,N/A,https://api.github.com/repos/kaxori/Prj_SoilSensor,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C118:0C72:72FDE9:ED8D9D:65224355.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,soil,"[N, /, A]",00000
1722,Liming-calculator,andersonhsporto,N/A,N/A,https://api.github.com/repos/andersonhsporto/Liming-calculator,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1AE:607B:79B68D:FABF4A:65224355.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,soil,"[N, /, A]",00000
1723,RadonRisk,JLSolerLlorens,N/A,N/A,https://api.github.com/repos/JLSolerLlorens/RadonRisk,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C19A:29CE:330B3EC:682C5DD:65224356.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,soil,"[N, /, A]",00000
1724,PSInetRCN.github.io,PSInetRCN,N/A,N/A,https://api.github.com/repos/PSInetRCN/PSInetRCN.github.io,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C151:1F34:1BB1308:38EA67D:65224356.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,soil,"[N, /, A]",00000
1725,irecord-land-app,NERC-CEH,N/A,N/A,https://api.github.com/repos/NERC-CEH/irecord-land-app,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C132:6C98:2CDCEE:5D4E36:65224357.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,soil,"[N, /, A]",00000
1726,Kydro,montimaj,N/A,N/A,https://api.github.com/repos/montimaj/Kydro,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C18E:6B96:288A5DE:536E0FF:65224357.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,soil,"[N, /, A]",00000
1727,GEO468E_NDSI,ozcihanb,N/A,N/A,https://api.github.com/repos/ozcihanb/GEO468E_NDSI,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C174:6B96:288A681:536E239:65224358.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,soil,"[N, /, A]",00000
1728,Penalized-regression-on-high-dimensional-data,rightaway006,N/A,N/A,https://api.github.com/repos/rightaway006/Penalized-regression-on-high-dimensional-data,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1EA:500E:2A7F543:5738DD5:65224358.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,soil,"[N, /, A]",00000
1729,gravity-retaining-wall,thiagopassos2001,N/A,N/A,https://api.github.com/repos/thiagopassos2001/gravity-retaining-wall,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1D4:68AA:2EB79E1:5FA9C8B:65224359.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,soil,"[N, /, A]",00000
1730,FDR2soilmoisture,TillF,N/A,N/A,https://api.github.com/repos/TillF/FDR2soilmoisture,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C181:38A4:2BEFA08:5A288DF:6522435A.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,soil,"[N, /, A]",00000
