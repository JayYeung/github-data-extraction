,repo,user,organization,url (HTML),url (API),description,readme,stargazer count,watcher count,subscriber count,open issue count,topic (search),topics,NAICS Code
0,osmnx,gboeing,N/A,https://github.com/gboeing/osmnx,https://api.github.com/repos/gboeing/osmnx,"Python for street networks. Download, model, analyze, and visualize street networks and other geospatial features from OpenStreetMap.","[![PyPI Version](https://badge.fury.io/py/osmnx.svg)](https://pypi.org/project/osmnx/)
[![PyPI Downloads](https://static.pepy.tech/personalized-badge/osmnx?period=total&units=international_system&left_color=grey&right_color=brightgreen&left_text=downloads)](https://pepy.tech/project/osmnx)
[![Anaconda Downloads](https://anaconda.org/conda-forge/osmnx/badges/downloads.svg)](https://anaconda.org/conda-forge/osmnx)
[![Documentation Status](https://readthedocs.org/projects/osmnx/badge/?version=latest)](https://osmnx.readthedocs.io/)
[![Build Status](https://github.com/gboeing/osmnx/workflows/CI/badge.svg?branch=main)](https://github.com/gboeing/osmnx/actions/workflows/ci.yml)
[![Coverage Status](https://codecov.io/gh/gboeing/osmnx/branch/main/graph/badge.svg)](https://codecov.io/gh/gboeing/osmnx)

# OSMnx

**OSMnx** is a Python package to download, model, analyze, and visualize street networks and other geospatial features from OpenStreetMap. You can download and model walking, driving, or biking networks with a single line of code then easily analyze and visualize them. You can just as easily work with urban amenities/points of interest, building footprints, transit stops, elevation data, street orientations, speed/travel time, and routing.

## Citation

If you use OSMnx in your work, please cite the journal article:

Boeing, G. 2017. ""[OSMnx: New Methods for Acquiring, Constructing, Analyzing, and Visualizing Complex Street Networks](https://geoffboeing.com/publications/osmnx-complex-street-networks/)."" _Computers, Environment and Urban Systems_ 65, 126-139.

## Getting Started

First read the [Getting Started](https://osmnx.readthedocs.io/en/stable/getting-started.html) guide for an introduction to the package and FAQ.

Then work through the [OSMnx Examples](https://github.com/gboeing/osmnx-examples) gallery for step-by-step tutorials and sample code.

## Installation

Follow the [Installation](https://osmnx.readthedocs.io/en/stable/installation.html) guide to install OSMnx.

## Support

If you have any trouble, consult the [User Reference](https://osmnx.readthedocs.io/en/stable/user-reference.html). The OSMnx repository is hosted on [GitHub](https://github.com/gboeing/osmnx). If you have a ""how-to"" or usage question, please ask it on [StackOverflow](https://stackoverflow.com/search?q=osmnx), as we reserve the repository's issue tracker for bug tracking and feature development.

## License

OSMnx is open source and licensed under the MIT license. OpenStreetMap's open data [license](https://www.openstreetmap.org/copyright/) requires that derivative works provide proper attribution.
",4372,4372,121,3,transportation,"[geography, geospatial, gis, mapping, networks, networkx, openstreetmap, osm, osmnx, overpass-api, python, routing, spatial, spatial-analysis, spatial-data, street-networks, transport, transportation, urban, urban-planning]",00000
1,libretaxi,ro31337,N/A,https://github.com/ro31337/libretaxi,https://api.github.com/repos/ro31337/libretaxi,Open source Uber #deleteuber,"# LibreTaxi v2

LibreTaxi is open-source Uber proof-of-concept that works through [Telegram](https://telegram.org/).

See it in action: https://t.me/libretaxi_bot

Public feed: https://t.me/libretaxi_all

It is closer to Craigslist rideshare rather than Uber, but it works, and works great! The app that is easy to use, supports multiple languages, fast and cool. There are tens of thousands users worldwide, and we're on the way to 1M users. So please spread the word!

* [How it works - English](https://telegra.ph/LibreTaxi-20---you-will-love-it-02-02)
* [How it works - Spanish](https://telegra.ph/LibreTaxi-20---te-va-a-enamorar-02-09)
* [How it works - Russian](https://telegra.ph/Novaya-versiya-Libre-taksi-vam-ponravitsya-02-08)
* [How it works - Portuguese](https://telegra.ph/LibreTaxi-20---Vai-o-amar-02-12)

## Prerequisites

1. [Install Go](https://golang.org/doc/install)
2. [Install Go dep](https://github.com/golang/dep)
3. Download the repo to `~/go/src/libretaxi`
4. Install Docker with docker-compose
5. Run PostgreSQL and RabbitMQ with default credentials (see connection strings below)
```
docker-compose up -d
```

## Setting up RabbitMQ (for development and production)

`rabbitmq:3-management` contains UI plugin for queue management. Plugin port is 8080 (15672 in container).
Login **guest/guest**.

Login to RabbitUI here: http://localhost:8080

There is only one queue at the moment:

* `messages` queue, http://localhost:8080/#/queues/%2F/messages - picked up by message handler, enqueued by libretaxi

Note that there is one message producer, and one message consumer threads (goroutines) in application.

Port 5672 is RabbitMQ itself.

## LibreTaxi settings

Init settings for `./libretaxi.yml`:

```
telegram_token: YOUR_TOKEN
db_conn_str: postgres://libretaxi:libretaxi@localhost:15432/libretaxi
rabbit_url: amqp://127.0.0.1:8079/
admin_channel_chat_id: -1001324105405
public_channel_chat_id: -1001470847849
```

Admin channel is the place where you shadow ban spamers. 
See https://stackoverflow.com/a/41779623/337085 for how to get id for you private channel.
You'll need to invite `@get_id_bot` and type `/my_id@get_id_bot`. You'll see chat id.

## Running

When all services are running, run libretaxi:

```
dep ensure # or ~/go/bin/dep ensure
go build
./libretaxi
```

## 🌟 Project Sponsors

Shown below are our bronze, silver and gold project sponsors.
Big thanks to these companies for supporting the project.
Note: Listed services are not tested, vetted nor supported by the author(s) in any manner.

### Gold sponsors

Prevent workplace conflicts with this Slack app:

<table><tbody><tr>
<td><a href=""https://healthydebate.ai"" target=""_blank"">
    <img width=""400"" src=""https://user-images.githubusercontent.com/1477672/152650139-fe043eac-eab4-4cdb-a04a-e0a9daea4639.svg"" alt=""Prevent workplace conflicts"">
</a></td>
</tr></tbody></table>

[Become a sponsor!](https://github.com/sponsors/ro31337)

[View all sponsors](https://github.com/sponsors/ro31337)
",3774,3774,197,13,transportation,"[golang, lyft, ridesharing, telegram, transportation, uber]",00000
2,osmnx-examples,gboeing,N/A,https://github.com/gboeing/osmnx-examples,https://api.github.com/repos/gboeing/osmnx-examples,"Gallery of OSMnx tutorials, usage examples, and feature demonstations.","[![GitHub tag](https://img.shields.io/github/v/tag/gboeing/osmnx-examples?label=Uses+OSMnx)](https://github.com/gboeing/osmnx)
[![Binder](https://mybinder.org/badge_logo.svg)](https://mybinder.org/v2/gh/gboeing/osmnx-examples/main?urlpath=lab)
[![Build Status](https://github.com/gboeing/osmnx-examples/workflows/tests/badge.svg?branch=main)](https://github.com/gboeing/osmnx-examples/actions?query=workflow%3Atests)

# OSMnx Examples Gallery

[OSMnx](https://github.com/gboeing/osmnx) is a Python package to download, model, analyze, and visualize street networks and other geospatial features from [OpenStreetMap](https://www.openstreetmap.org/copyright/). You can download and model walking, driving, or biking networks with a single line of code then easily analyze and visualize them. You can just as easily work with urban amenities/points of interest, building footprints, transit stops, elevation data, street orientations, speed/travel time, and routing.

This gallery contains step-by-step usage tutorials and feature demonstrations as Jupyter notebooks. You can run these notebooks interactively online with [Binder](https://mybinder.org/v2/gh/gboeing/osmnx-examples/main?urlpath=lab) or locally with the official OSMnx [Docker image](https://hub.docker.com/r/gboeing/osmnx). All of the examples are in this repo's [notebooks](notebooks) folder. Note that this repo's main branch generally tracks the functionality of the OSMnx repo's main branch. For examples corresponding to previously released versions of OSMnx, use this repo's tags to browse by release.

### More info:

- [Overview of OSMnx](https://geoffboeing.com/2016/11/osmnx-python-street-networks/)
- [OSMnx repo](https://github.com/gboeing/osmnx)
- [Documentation](https://osmnx.readthedocs.io/)
- [Journal article and citation info](https://geoffboeing.com/publications/osmnx-complex-street-networks/)
",1331,1331,58,1,transportation,"[accessibility, binder, cities, city, jupyter-notebook, network-analysis, notebooks, openstreetmap, public-transport, python, street-networks, transit, transport, transportation, urban-analytics, urban-data-science, urban-design, urban-planning]",00000
3,ppd599,gboeing,N/A,https://github.com/gboeing/ppd599,https://api.github.com/repos/gboeing/ppd599,USC urban data science course series with Python and Jupyter,"[![Binder](https://mybinder.org/badge_logo.svg)](https://mybinder.org/v2/gh/gboeing/ppd599/main?urlpath=lab)
[![Build Status](https://github.com/gboeing/ppd599/workflows/tests/badge.svg?branch=main)](https://github.com/gboeing/ppd599/actions?query=workflow%3A%22tests%22)


# PPD599: Advanced Urban Analytics

This is the second part of a two-course series on **urban data science** that I teach at the **University of Southern California**'s Department of Urban Planning and Spatial Analysis.

This course series takes a computational social science approach to working with urban data. It uses Python and Jupyter notebooks to introduce coding and statistical methods that students can reproduce and experiment with in the cloud. The series as a whole presumes no prior knowledge as it introduces coding, stats, spatial analysis, and applied machine learning from the ground up, but PPD599 assumes you have completed [PPD534](https://github.com/gboeing/ppd534) or its equivalent.


## Urban Data Science course series

### PPD534: Data, Evidence, and Communication for the Public Good

The first course in the series, **PPD534**, starts with the basics of coding with Python, then on to data loading and analysis, then on to descriptive statistics, then inference and the scientific method, and finally a critical assessment of smart cities and urban informatics.

**PPD534**'s lecture materials are available on [GitHub](https://github.com/gboeing/ppd534) and interactively on [Binder](https://mybinder.org/v2/gh/gboeing/ppd534/main).


### PPD599: Advanced Urban Analytics

The second course, **PPD599**, assumes you have completed PPD534 (or its equivalent) and builds on its topics. It introduces spatial analysis, network analysis, spatial models, and applied machine learning. It also digs deeper into the tools and workflows of urban data science in both research and practice.

**PPD599**'s lecture materials are available in this repo and interactively on [Binder](https://mybinder.org/v2/gh/gboeing/ppd599/main).


## Not a USC student?

Did you discover this course on GitHub? Come study with us: [consider applying](https://geoffboeing.com/lab/) to the urban planning master's or PhD programs at USC.

Are you interested in data science and spatial analysis to improve urban transportation around the world, critically interrogate how big data reshapes housing affordability, or leverage technology for better city planning? We seek students from all backgrounds. If you're an activist or urbanist with no tech experience, we will teach you data/tech skills to effectively apply your knowledge to serve the community. If you're a coder or scientist interested in urbanism and planning, we will teach you how to unlock your skills for more equitable cities.
",1233,1233,123,1,transportation,"[cities, city-government, coding, course, course-materials, data-science, jupyter, network-analysis, python, spatial-analysis, statistics, syllabus, transport, transportation, urban-analytics, urban-data-science, urban-informatics, urban-planning, urbanism, usc]",00000
4,maro,microsoft,microsoft,https://github.com/microsoft/maro,https://api.github.com/repos/microsoft/maro,Multi-Agent Resource Optimization (MARO) platform is an instance of Reinforcement Learning as a Service (RaaS) for real-world resource optimization problems. ,"[![License](https://img.shields.io/pypi/l/pymaro)](https://github.com/microsoft/maro/blob/master/LICENSE)
[![Platform](https://raw.githubusercontent.com/microsoft/maro/master/docs/source/images/badges/platform.svg)](https://pypi.org/project/pymaro/)
[![Python Versions](https://img.shields.io/pypi/pyversions/pymaro.svg?logo=python&logoColor=white)](https://pypi.org/project/pymaro/#files)
[![Code Size](https://img.shields.io/github/languages/code-size/microsoft/maro)](https://github.com/microsoft/maro)
[![Docker Size](https://img.shields.io/docker/image-size/maro2020/maro)](https://hub.docker.com/repository/docker/maro2020/maro/tags?page=1)
[![Issues](https://img.shields.io/github/issues/microsoft/maro)](https://github.com/microsoft/maro/issues)
[![Pull Requests](https://img.shields.io/github/issues-pr/microsoft/maro)](https://github.com/microsoft/maro/pulls)
[![Dependencies](https://img.shields.io/librariesio/github/microsoft/maro)](https://libraries.io/pypi/pymaro)
[![test](https://github.com/microsoft/maro/workflows/test/badge.svg)](https://github.com/microsoft/maro/actions?query=workflow%3Atest)
[![build](https://github.com/microsoft/maro/workflows/build/badge.svg)](https://github.com/microsoft/maro/actions?query=workflow%3Abuild)
[![docker](https://github.com/microsoft/maro/workflows/docker/badge.svg)](https://hub.docker.com/repository/docker/maro2020/maro)
[![docs](https://readthedocs.org/projects/maro/badge/?version=latest)](https://maro.readthedocs.io/)
[![PypI Versions](https://img.shields.io/pypi/v/pymaro)](https://pypi.org/project/pymaro/#files)
[![Wheel](https://img.shields.io/pypi/wheel/pymaro)](https://pypi.org/project/pymaro/#files)
[![Citi Bike](https://raw.githubusercontent.com/microsoft/maro/master/docs/source/images/badges/citi_bike.svg)](https://maro.readthedocs.io/en/latest/scenarios/citi_bike.html)
[![CIM](https://raw.githubusercontent.com/microsoft/maro/master/docs/source/images/badges/cim.svg)](https://maro.readthedocs.io/en/latest/scenarios/container_inventory_management.html)
[![VM Scheduling](https://raw.githubusercontent.com/microsoft/maro/master/docs/source/images/badges/vm_scheduling.svg)](https://maro.readthedocs.io/en/latest/scenarios/vm_scheduling.html)
[![Gitter](https://img.shields.io/gitter/room/microsoft/maro)](https://gitter.im/Microsoft/MARO#)
[![Stack Overflow](https://raw.githubusercontent.com/microsoft/maro/master/docs/source/images/badges/stack_overflow.svg)](https://stackoverflow.com/questions/ask?tags=maro)
[![Releases](https://img.shields.io/github/release-date-pre/microsoft/maro)](https://github.com/microsoft/maro/releases)
[![Commits](https://img.shields.io/github/commits-since/microsoft/maro/latest/master)](https://github.com/microsoft/maro/commits/master)
[![Vulnerability Scan](https://github.com/microsoft/maro/workflows/vulnerability%20scan/badge.svg)](https://github.com/microsoft/maro/actions?query=workflow%3A%22vulnerability+scan%22)
[![Lint](https://github.com/microsoft/maro/workflows/lint/badge.svg)](https://github.com/microsoft/maro/actions?query=workflow%3Alint)
[![Coverage](https://img.shields.io/codecov/c/github/microsoft/maro)](https://codecov.io/gh/microsoft/maro)
[![Downloads](https://img.shields.io/pypi/dm/pymaro)](https://pypi.org/project/pymaro/#files)
[![Docker Pulls](https://img.shields.io/docker/pulls/maro2020/maro)](https://hub.docker.com/repository/docker/maro2020/maro)
[![Play with MARO](https://raw.githubusercontent.com/microsoft/maro/master/docs/source/images/badges/play_with_maro.svg)](https://hub.docker.com/r/maro2020/maro)

# [![MARO LOGO](./docs/source/images/logo.svg)](https://maro.readthedocs.io/en/latest/)

Multi-Agent Resource Optimization (MARO) platform is an instance of Reinforcement
learning as a Service (RaaS) for real-world resource optimization. It can be
applied to many important industrial domains, such as [container inventory
management](https://maro.readthedocs.io/en/latest/scenarios/container_inventory_management.html)
in logistics, [bike repositioning](https://maro.readthedocs.io/en/latest/scenarios/citi_bike.html)
in transportation, [virtual machine](https://maro.readthedocs.io/en/latest/scenarios/vm_scheduling.html) provisioning in data centers, and asset management in finance. Besides
[Reinforcement Learning](https://www.andrew.cmu.edu/course/10-703/textbook/BartoSutton.pdf) (RL),
it also supports other planning/decision mechanisms, such as
[Operations Research](https://en.wikipedia.org/wiki/Operations_research).

Key Components of MARO:

- Simulation toolkit: it provides some predefined scenarios, and the reusable
wheels for building new scenarios.
- RL toolkit: it provides a full-stack abstraction for RL, such as agent manager,
agent, RL algorithms, learner, actor, and various shapers.
- Distributed toolkit: it provides distributed communication components, interface
of user-defined functions for message auto-handling, cluster provision, and job orchestration.

![MARO Key Components](./docs/source/images/maro_overview.svg)

## Contents

| File/folder | Description                                                                                       |
| ----------- | ------------------------------------------------------------------------------------------------- |
| `maro`      | MARO source code.                                                                                 |
| `docs`      | MARO docs, it is host on [readthedocs](https://maro.readthedocs.io/en/latest/).                   |
| `examples`  | Showcase of MARO.                                                                                 |
| `notebooks` | MARO quick-start notebooks.                                                                       |

*Try [MARO playground](#run-playground) to have a quick experience.*

## Install MARO from [PyPI](https://pypi.org/project/pymaro/#files)

*Notes: The CLI commands (including the visualization tool) are not included in pymaro package. To enable these support, you need to install from source.*

- Mac OS / Linux

  ```sh
  pip install pymaro
  ```

- Windows

  ```powershell
  # Install torch first, if you don't have one.
  pip install torch===1.6.0 torchvision===0.7.0 -f https://download.pytorch.org/whl/torch_stable.html

  pip install pymaro
  ```

## Install MARO from Source

*Notes: Install from source if you want to use the CLI commands (including the visualization tool).*

- Prerequisites
  - C++ Compiler
    - Linux or Mac OS X: `gcc`
    - Windows: [Build Tools for Visual Studio 2017](https://visualstudio.microsoft.com/thank-you-downloading-visual-studio/?sku=BuildTools&rel=15)

- Enable Virtual Environment
  - Mac OS / Linux

    ```sh
    # If your environment is not clean, create a virtual environment firstly.
    python -m venv maro_venv
    source ./maro_venv/bin/activate
    ```

  - Windows

    ```powershell
    # If your environment is not clean, create a virtual environment firstly.
    python -m venv maro_venv

    # You may need this for SecurityError in PowerShell.
    Set-ExecutionPolicy -Scope CurrentUser -ExecutionPolicy Unrestricted

    # Activate the virtual environment.
    .\maro_venv\Scripts\activate
    ```

- Install MARO

  ```sh
  # Git Clone the whole source code.
  git clone https://github.com/microsoft/maro.git
  ```

  - Mac OS / Linux

    ```sh
    # Install MARO from source.
    bash scripts/install_maro.sh;
    pip install -r ./requirements.dev.txt;
    ```

  - Windows

    ```powershell
    # Install MARO from source.
    .\scripts\install_maro.bat;
    pip install -r ./requirements.dev.txt;
    ```

- *Notes: If your package is not found, remember to set your PYTHONPATH*

  - Mac OS / Linux

  ```sh
  export PYTHONPATH=PATH-TO-MARO
  ```

  - Windows

  ```powershell
  $Env:PYTHONPATH=PATH-TO-MARO
  ```

## Quick Example

```python
from maro.simulator import Env

env = Env(scenario=""cim"", topology=""toy.5p_ssddd_l0.0"", start_tick=0, durations=100)

metrics, decision_event, is_done = env.step(None)

while not is_done:
    metrics, decision_event, is_done = env.step(None)

print(f""environment metrics: {env.metrics}"")

```

## [Environment Visualization](https://maro.readthedocs.io/en/latest/)

```sh
# Enable environment dump feature, when initializing the environment instance
env = Env(scenario=""cim"",
          topology=""toy.5p_ssddd_l0.0"",
          start_tick=0,
          durations=100,
          options={""enable-dump-snapshot"": ""./dump_data""})

# Inspect environment with the dump data
maro inspector dashboard --source_path ./dump_data/YOUR_SNAPSHOT_DUMP_FOLDER
```

### Show Cases

- Case I - Container Inventory Management
![CIM Inter Epoch](./docs/source/images/visualization/dashboard/cim_inter_epoch.gif)
![CIM Intra Epoch](./docs/source/images/visualization/dashboard/cim_intra_epoch_by_ports.gif)

- Case II - Citi Bike
![Citi Bike Inter Epoch](./docs/source/images/visualization/dashboard/citi_bike_inter_epoch.gif)
![Citi Bike Intra Epoch](./docs/source/images/visualization/dashboard/citi_bike_intra_epoch_by_station.gif)

## Run Playground

- Pull from [Docker Hub](https://hub.docker.com/r/maro2020/playground)

  ```sh
  # Pull the docker image from docker hub
  docker pull maro2020/playground

  # Run playground container.
  # Redis commander (GUI for redis) -> http://127.0.0.1:40009
  # Jupyter lab with maro -> http://127.0.0.1:40010
  docker run -p 40009:40009 -p 40010:40010 maro2020/playground
  ```

- Build from source
  - Mac OS / Linux

    ```sh
    # Build playground image.
    bash ./scripts/build_playground.sh

    # Run playground container.
    # Redis commander (GUI for redis) -> http://127.0.0.1:40009
    # Jupyter lab with maro -> http://127.0.0.1:40010
    docker run -p 40009:40009 -p 40010:40010 maro2020/playground
    ```

  - Windows

    ```powershell
    # Build playground image.
    .\scripts\build_playground.bat

    # Run playground container.
    # Redis commander (GUI for redis) -> http://127.0.0.1:40009
    # Jupyter lab with maro -> http://127.0.0.1:40010
    docker run -p 40009:40009 -p 40010:40010 maro2020/playground
    ```

## Contributing

This project welcomes contributions and suggestions. Most contributions require
you to agree to a Contributor License Agreement (CLA) declaring that you have
the right to, and actually do, grant us the rights to use your contribution. For
details, visit https://cla.opensource.microsoft.com.

When you submit a pull request, a CLA bot will automatically determine whether
you need to provide a CLA and decorate the PR appropriately (e.g., status check,
comment). Simply follow the instructions provided by the bot. You will only need
to do this once across all repos using our CLA.

This project has adopted the
[Microsoft Open Source Code of Conduct](https://opensource.microsoft.com/codeofconduct/).
For more information see the
[Code of Conduct FAQ](https://opensource.microsoft.com/codeofconduct/faq/)
or contact [opencode@microsoft.com](mailto:opencode@microsoft.com)
with any additional questions or comments.

## Related Papers

### [Container Inventory Management](https://maro.readthedocs.io/en/latest/scenarios/container_inventory_management.html)

![CIM Vis](./docs/source/images/scenario/cim_vis.gif)

Wenlei Shi, Xinran Wei, Jia Zhang, Xiaoyuan Ni, Arthur Jiang, Jiang Bian, Tie-Yan Liu. ""[Cooperative Policy Learning with Pre-trained Heterogeneous Observation Representations](https://arxiv.org/abs/2012.13099)"". AAMAS 2021

Xihan Li, Jia Zhang, Jiang Bian, Yunhai Tong, Tie-Yan Liu. ""[A Cooperative Multi-Agent Reinforcement Learning Framework for Resource Balancing in Complex Logistics Network](https://arxiv.org/abs/1903.00714)"". AAMAS 2019

## Related News

[MSRA Top-10 Hack-Techs in 2021](https://mp.weixin.qq.com/s/Y4kjQq8gKcsEsVadjdwnEQ)

[Open Source Platform MARO: Anywhere Door for Resource Optimization](https://mp.weixin.qq.com/s/zXIpgzomLhDWS_YUFmRlEQ)

[AI from ""Point"" to ""Surface""](https://mp.weixin.qq.com/s/PggO49wwmS7grTO0nEMgVQ)

## [Cite Us](./CITATION)

## License

Copyright (c) Microsoft Corporation. All rights reserved.

Licensed under the [MIT](./LICENSE) License.
",745,745,26,20,transportation,"[agent, citi-bike, docker, finance, inventory-management, logistics, maro, multi-agent, multi-agent-reinforcement-learning, operations-research, raas, reinforcement-learning, resource-optimization, rl-algorithms, simulator, transportation]",00000
5,transitive.js,conveyal,conveyal,https://github.com/conveyal/transitive.js,https://api.github.com/repos/conveyal/transitive.js,Transit data visualization,"# transitive.js [![NPM version][npm-image]][npm-url] [![Build status][travis-image]][travis-url]

A tool for generating dynamic stylized transit maps that are easy to understand. Transitive takes in information describing specific transport network elements (routes, stops, journeys) -- typically produced by the OpenTripPlanner Profiler extension -- and produces a schematic map of those elements:

![threeoptions](img/threeoptions.png)

Dynamic styling of the network elements allows for interactivity and flexibility in the visual presentation. For instance, a single journey can be highlighted:

![threeoptions_focused](img/threeoptions_focused.png)

A Transitive map can be embedded as a freestanding web element or overlaid onto a [Leaflet](http://leafletjs.com/) map using the [Leaflet.TransitiveLayer](https://github.com/conveyal/Leaflet.TransitiveLayer) plugin.

Transitive is supported by the [Mobility Lab](http://mobilitylab.org/) [Transit Tech Initiative](http://mobilitylab.org/tech/transit-tech-initiative/). Read more in [this Mobility Lab article](http://mobilitylab.org/2014/04/16/the-technology-behind-a-new-kind-of-travel-planning/).

## Storybook

To view samples of Transitive in action, [check out the live Storybook](https://s3.amazonaws.com/transitive.js/index.html).

You can also run this locally with:

```bash
git clone https://github.com/conveyal/transitive.js
cd transitive.js
yarn start
# Go to http://localhost:5555 to view the storybook (the web page should open automatically)
```

### Usage of otp-ui

These stories rely on the [otp-ui](https://github.com/opentripplanner/otp-ui)
project to render transitive data on a Leaflet map. Specifically, it uses:
- @opentripplanner/base-map - renders a Leaflet base map
- @opentripplanner/core-utils - converts an OpenTripPlanner itinerary object into
  data that Transitive can read.
- @opentripplanner/transitive-overlay - copied from the otp-ui project and
  replaces the Transitive import with the local copy (useful for testing local
  changes)

### BYOD - Bring your own data

To test out how your own data (e.g., an OpenTripPlanner itinerary) would appear in
Transitive, try replacing the `itinerary` prop in the [Itinerary](https://s3.amazonaws.com/transitive.js/index.html?path=/story/example-transitive--itinerary) (for OpenTripPlanner itineraries) story (or `transitiveData`
in the [Profile](https://s3.amazonaws.com/transitive.js/index.html?path=/story/example-transitive--profile)
story).

You can also override the default style by adding a `style` prop. See a style
example here: https://github.com/conveyal/transitive-demo/blob/master/styles.js

## Demo

* [Demo of a freestanding Transitive map](http://conveyal.github.io/transitive.js)
* [Demo using Leaflet and Leaflet.TransitiveLayer](http://conveyal.github.io/Leaflet.TransitiveLayer)

## API

[See documentation here](https://github.com/conveyal/transitive.js/wiki/API-Documentation).

## See Also

- [conveyal/modeify](https://github.com/conveyal/modeify)

## License

MIT

[npm-image]: https://img.shields.io/npm/v/transitive-js.svg?maxAge=2592000&style=flat-square
[npm-url]: https://www.npmjs.com/package/transitive-js
[travis-image]: https://img.shields.io/travis/conveyal/transitive.js.svg?style=flat-square
[travis-url]: https://travis-ci.org/conveyal/transitive.js
",668,668,36,16,transportation,"[transit, transportation]",00000
6,stplanr,ropensci,ropensci,https://github.com/ropensci/stplanr,https://api.github.com/repos/ropensci/stplanr,Sustainable transport planning with R,"
<!-- README.md is generated from README.Rmd. Please edit that file -->

# stplanr <a href='https://docs.ropensci.org/stplanr/'><img src='man/figures/logo.png' align=""right"" height=215/></a>

<!-- [![Build Status](https://travis-ci.org/ropensci/stplanr.svg?branch=master)](https://travis-ci.org/ropensci/stplanr) -->

[![rstudio mirror
downloads](https://cranlogs.r-pkg.org/badges/stplanr)](https://github.com/r-hub/cranlogs.app)
[![](https://cranlogs.r-pkg.org/badges/grand-total/stplanr)](https://cran.r-project.org/package=stplanr)
[![CRAN_Status_Badge](https://www.r-pkg.org/badges/version/stplanr)](https://cran.r-project.org/package=stplanr)
[![lifecycle](https://img.shields.io/badge/lifecycle-maturing-blue.svg)](https://lifecycle.r-lib.org/articles/stages.html)
[![](https://badges.ropensci.org/10_status.svg)](https://github.com/ropensci/software-review/issues/10)
[![R-CMD-check](https://github.com/ropensci/stplanr/workflows/R-CMD-check/badge.svg)](https://github.com/ropensci/stplanr/actions)

**stplanr** is a package for sustainable transport planning with R.

It provides functions for solving common problems in transport planning
and modelling, such as how to best get from point A to point B. The
overall aim is to provide a reproducible, transparent and accessible
toolkit to help people better understand transport systems and inform
policy, as outlined in a
[paper](https://journal.r-project.org/archive/2018/RJ-2018-053/index.html)
about the package, and the potential for open source software in
transport planning in general, published in the [R
Journal](https://journal.r-project.org/).

The initial work on the project was funded by the Department of
Transport
([DfT](https://www.gov.uk/government/organisations/department-for-transport))
as part of the development of the Propensity to Cycle Tool (PCT), a web
application to explore current travel patterns and cycling potential at
zone, desire line, route and route network levels (see
[www.pct.bike](https://www.pct.bike/) and click on a region to try it
out). The basis of the methods underlying the PCT is origin-destination
data, which are used to highlight where many short distance trips are
being made, and estimate how many could switch to cycling. The results
help identify where cycleways are most needed, an important component of
sustainable transport planning infrastructure engineering and policy
[design](https://www.icevirtuallibrary.com/doi/abs/10.1680/dfct.63495.001).

See the package vignette (e.g. via `vignette(""introducing-stplanr"")`) or
an [academic paper on the Propensity to Cycle Tool
(PCT)](https://dx.doi.org/10.5198/jtlu.2016.862) for more information on
how it can be used. This README provides some basics.

Much of the work supports research undertaken at the Leeds’ Institute
for Transport Studies ([ITS](https://environment.leeds.ac.uk/transport))
but **stplanr** should be useful to transport researchers and
practitioners needing free, open and reproducible methods for working
with geographic data everywhere.

## Key functions

Data frames representing flows between origins and destinations must be
combined with geo-referenced zones or points to generate meaningful
analyses and visualisations of ‘flows’ or origin-destination (OD) data.
**stplanr** facilitates this with `od2line()`, which takes flow and
geographical data as inputs and outputs spatial data. Some example data
is provided in the package:

``` r
library(stplanr)
```

Let’s take a look at this data:

``` r
od_data_sample[1:3, 1:3] # typical form of flow data
#> # A tibble: 3 × 3
#>   geo_code1 geo_code2   all
#>   <chr>     <chr>     <dbl>
#> 1 E02002361 E02002361   109
#> 2 E02002361 E02002363    38
#> 3 E02002361 E02002367    10
cents_sf[1:3,] # points representing origins and destinations
#>       geo_code  MSOA11NM percent_fem  avslope             geometry
#> 1708 E02002384 Leeds 055    0.458721 2.856563 -1.546463, 53.809517
#> 1712 E02002382 Leeds 053    0.438144 2.284782 -1.511861, 53.811611
#> 1805 E02002393 Leeds 064    0.408759 2.361707 -1.524205, 53.804098
```

These datasets can be combined as follows:

``` r
travel_network <- od2line(flow = od_data_sample, zones = cents_sf)
w <- flow$all / max(flow$all) *10
plot(travel_network, lwd = w)
```

<img src=""man/figures/README-plot1-1.png"" width=""100%"" />

**stplanr** has many functions for working with OD data. See the
[`stplanr-od`](https://docs.ropensci.org/stplanr/articles/stplanr-od.html)
vignette for details.

The package can also allocate flows to the road network, e.g. with
[CycleStreets.net](https://www.cyclestreets.net/api/) and the
OpenStreetMap Routing Machine
([OSRM](https://github.com/Project-OSRM/osrm-backend)) API interfaces.
These are supported in `route_*()` functions such as
`route_cyclestreets` and `route_osrm()`:

Routing can be done using a range of back-ends and using lat/lon or
desire line inputs with the `route()` function, as illustrated by the
following commands which calculates the route between Fleet Street and
Southwark Street over the River Thames on Blackfriars Bridge in London:

``` r
library(osrm)
#> Data: (c) OpenStreetMap contributors, ODbL 1.0 - http://www.openstreetmap.org/copyright
#> Routing: OSRM - http://project-osrm.org/
trip <- route(
  from = c(-0.11, 51.514),
  to = c(-0.10, 51.506),
  route_fun = osrmRoute,
  returnclass = ""sf""
  )
#> Warning: ""returnclass"" is deprecated.
#> Most common output is sf
plot(trip)
```

<img src=""man/figures/README-unnamed-chunk-5-1.png"" width=""100%"" />

You can also use and place names, found using the Google Map API:

``` r
trip2 <- route(
  from = ""Leeds"",
  to = ""Bradford"",
  route_fun = osrmRoute,
  returnclass = ""sf""
  )
#> Warning: ""returnclass"" is deprecated.
#> Most common output is sf
plot(trip2)
```

<img src=""man/figures/README-unnamed-chunk-6-1.png"" width=""100%"" />

We can replicate this call multiple times with the `l` argument in
`route()`:

``` r
desire_lines <- travel_network[2:6, ]
```

Next, we’ll calculate the routes:

``` r
routes <- route(
  l = desire_lines,
  route_fun = osrmRoute,
  returnclass = ""sf""
  )
#> Warning: ""returnclass"" is deprecated.

#> Warning: ""returnclass"" is deprecated.

#> Warning: ""returnclass"" is deprecated.

#> Warning: ""returnclass"" is deprecated.

#> Warning: ""returnclass"" is deprecated.
plot(sf::st_geometry(routes))
plot(desire_lines, col = ""red"", add = TRUE)
#> Warning in plot.sf(desire_lines, col = ""red"", add = TRUE): ignoring all but the
#> first attribute
```

<img src=""man/figures/README-plot2-1.png"" width=""100%"" />

<!-- The resulting routes will look something like this: -->

For more examples, `example(""route"")`.

`overline()` takes a series of route-allocated lines, splits them into
unique segments and aggregates the values of overlapping lines. This can
represent where there will be most traffic on the transport system, as
demonstrated in the following code chunk.

``` r
routes$foot <- desire_lines$foot
rnet <- overline(routes, attrib = ""foot"")
```

The resulting route network, with segment totals calculated from
overlapping parts for the routes for walking, can be visualised as
follows:

``` r
plot(rnet[""foot""], lwd = rnet$foot)
```

<img src=""man/figures/README-unnamed-chunk-9-1.png"" width=""100%"" />

The above plot represents the number walking trips made (the ‘flow’)
along particular segments of a transport network.

<!-- (results not shown): -->

## Policy applications

The examples shown above, based on tiny demonstration datasets, may not
seem particularly revolutionary. At the city scale, however, this type
of analysis can be used to inform sustainable transport policies, as
described in papers [describing the Propensity to Cycle
Tool](https://www.jtlu.org/index.php/jtlu/article/view/862/859) (PCT),
and its [application to calculate cycling to school
potential](https://doi.org/10.1016/j.jth.2019.01.008) across England.

Results generated by **stplanr** are now part of national government
policy: the PCT is the recommended tool for local and regional
authorities developing strategic cycle network under the Cycling and
Walking Infrastructure Strategy
([CWIS](https://www.gov.uk/government/publications/cycling-and-walking-investment-strategy)),
which is part of the Infrastructure Act
[2015](https://www.legislation.gov.uk/ukpga/2015/7/contents/enacted).
**stplanr** is helping dozens of local authorities across the UK to
answer the question: where to prioritise investment in cycling? In
essence, stplanr was designed to support sustainable transport policies.

There are many other research and policy questions that functions in
**stplanr**, and other open source software libraries and packages, can
help answer. At a time of climate, health and social crises, it is
important that technology is not only sustainable itself (e.g. as
enabled by open source communities and licenses) but that it contributes
to a sustainable future.

## Installation

To install the stable version, use:

``` r
install.packages(""stplanr"")
```

The development version can be installed using **devtools**:

``` r
# install.packages(""devtools"") # if not already installed
devtools::install_github(""ropensci/stplanr"")
library(stplanr)
```

### Installing stplanr on Linux and Mac

**stplanr** depends on **sf**. Installation instructions for Mac, Ubuntu
and other Linux distros can be found here:
<https://github.com/r-spatial/sf#installing>

## Funtions, help and contributing

The current list of available functions can be seen on the package’s
website at
[docs.ropensci.org/stplanr/](https://docs.ropensci.org/stplanr/), or
with the following command:

``` r
lsf.str(""package:stplanr"", all = TRUE)
```

To get internal help on a specific function, use the standard way.

``` r
?od2line
```

To contribute, report bugs or request features, see the [issue
tracker](https://github.com/ropensci/stplanr/issues).

## Further resources / tutorials

Want to learn how to use open source software for reproducible
sustainable transport planning work? Now is a great time to learn.
Transport planning is a relatively new field of application in R.
However, there are already some good resources on the topic, including
(any further suggestions: welcome):

- The Transport chapter of *Geocomputation with R*, which provides a
  broad introduction from a geographic data perspective:
  <https://r.geocompx.org/transport.html>
- The **stplanr** paper, which describes the context in which the
  package was developed:
  <https://journal.r-project.org/archive/2018/RJ-2018-053/index.html>
  (please cite this if you use **stplanr** in your work)
- The `dodgr` vignette, which provides an introduction to routing in R:
  <https://github.com/UrbanAnalyst/dodgr>

## Meta

- Please report issues, feature requests and questions to the [github
  issue tracker](https://github.com/ropensci/stplanr/issues)
- License: MIT
- Get citation information for **stplanr** in R doing
  `citation(package = 'stplanr')`
- This project is released with a [Contributor Code of
  Conduct](https://github.com/ropensci/stplanr/blob/master/CONDUCT.md).
  By participating in this project you agree to abide by its terms.

[![rofooter](https://ropensci.org/public_images/github_footer.png)](https://ropensci.org)
",406,406,22,24,transportation,"[cycle, cycling, desire-lines, origin-destination, peer-reviewed, pubic-transport, r, r-package, route-network, routes, routing, rstats, spatial, transport, transport-planning, transportation, walking]",00000
7,SOTA-Py,mehrdadn,N/A,https://github.com/mehrdadn/SOTA-Py,https://api.github.com/repos/mehrdadn/SOTA-Py,A discrete-time Python-based solver for the Stochastic On-Time Arrival routing problem,"# What is SOTA-Py?

SOTA-Py is a Python-based solver for the policy- and path-based ""SOTA"" problems,
using the algorithm(s) described in
[*Tractable Pathfinding for the Stochastic On-Time Arrival Problem*](https://link.springer.com/chapter/10.1007/978-3-319-38851-9_16) (also in the corresponding [arXiv preprint](https://arxiv.org/abs/1408.4490))
and previous works referenced therein.

What is the SOTA problem? Read on...

# Theory (in plain English)

## What is the ***Stochastic On-Time Arrival*** problem (SOTA)?

It's the ***reliable routing*** problem:

> ### *How do you travel from point A to point B **in T time** under traffic?*  

For example, you might have a meeting in San Jose at 3pm, and one to reach in San Francisco at 4pm.  
Or you might need to get from your house to the airport in less than 1 hour.

### Doesn't Google Maps already solve this?

No. It doesn't let you specify a time budget.
It only lets you specify a departure or arrival time, but not both.

What it (probably) gives you is the path with the *least expected (average) time* to your destination.

### But so what? 30 minutes or 60 minutes—isn't there a *single* best path?

No. That would only be the case if traffic was perfectly predictable.

If you don't have a lot of time, you might need to take a riskier path
(e.g. a highway), otherwise you might have no chance of reaching your destination on time.
But if you have a lot of time, you might take a safer path (like side roads) that no one uses,
to avoid suddenly getting stuck in the middle of, say, a highway, due to traffic.

That means your time budget can affect your route.

## Policy- vs. Path-based Routing

### What is the *policy-based* SOTA problem?

It is the case of the SOTA problem where you decide which road to take based on how much time you have left.
You'd probably need a navigation device for this, since there are too many possibilities in the ""policy"" to print on paper.

This is what you'd prefer to do, because it can potentially give better results depending on whether you get lucky/unlucky with traffic.

This is a dynamic-programming problem, because the probability of reaching your destination on time
is just the maximum probability of reaching it from each road at the next intersection.

### What is the *path-based* SOTA problem?

It is the SOTA problem in the case where you statically decide on the entire path before you depart.  
You can just print out a map for this on paper, the old-fashioned way.

This is—counterintuitively!—a much tougher problem than finding the policy.
Even though the solution looks simpler (it's just a path rather than a policy),
it's much harder to compute.
Why? Intuitively, it's because after you travel a bit,
you won't necessarily be on the most optimal path anymore,
so you can't make that assumption to simplify the problem initially.  
By contrast, in the policy-based scenario, you always assume that your future actions are optimal,
so you have an optimal subproblem structure to exploit.

## The Algorithm

The (unhelpful) ultra-short version is that Dijkstra's algorithm is used for policy-based SOTA and A* is used for path-based SOTA.

The (more helpful) short version is:
- For the policy computation, a re-visiting variant of Dijkstra's algorithm
is used to obtain an optimal ordering for computing the reliabilty of each node,
and a technique known as *zero-delay convolution* is used to perform cross-dependent convolutions incrementally
to keep the time complexity quasilinear in the time budget. (A naive FFT would not do this.)  
- For the path computation, the computed policy is used as an (admissible) heuristic in A*.
Note that this choice of a heuristic is critical. A poor heuristic can easily result in exponential running time.

For the long version, please see the paper linked above, and others referenced inside.
The paper should (hopefully) be quite easy to follow and understand, especially as far as research papers go.

Note that the pre-processing algorithms from the paper (such as *arc-potentials*) are **not** implemented,
but they should be far easier to implement than the pathfinding algorithms themselves.

## The Traffic Model

This code models the travel time across every road as a mixture of Gaussian distributions (GMM)
(""censored"" to strictly positive travel times).
It discretizes the distributions and solves the discrete problem in discrete-time.

Obviously, realistic travel times are not normally distributed. But that's the model of the data I had.
Getting good traffic data is hard, and encoding data efficiently is also hard.
If you don't like the current model, you'd have to change the code to accommodate other models.

# The Code

## Inputs

### Dependencies

- [**NumPy**](http://www.numpy.org) is the only hard external dependency.  
- [**Numba**](//numba.pydata.org), if available, is used for compiling Python to native code (≈ 3× speedup).  
- [**PyGLET**](http://www.pyglet.org), if available, is used for rendering the results on the screen via OpenGL.
- [**SciPy**](//www.scipy.org), if available, is used for slightly faster FFTs.  

### Map File Format

The road network and traffic data is assumed to be a concatentation of JSON objects, each as follows:

	{
		""id"": [10000, 1],
		""startNodeId"": [1000, 0],
		""endNodeId"": [1001, 0],
		""geom"": { ""points"": [
			{""lat"": 37.7, ""lon"": -122.4},
			{""lat"": 37.8, ""lon"": -122.5}
		]},
		""length"": 12,
		""speedLimit"": 11.2,
		""lanes"": 1,
		""hmm"": [
			{""mode"": ""go"", ""mean"": 1.2, ""cov"": 1.5, ""prob"": 0.85},
			{""mode"": ""stop"", ""mean"": 7, ""cov"": 0.1, ""prob"": 1.5E-1}
		]
	}

Note the following:

- The HMM directly represents *travel times* for various ""modes"" of travel (stop, go, etc.) for the Gaussian mixture model.
- The HMM is ""optional"". If missing, pseudo-random data is generated.
- The length and speed limit are divided to obtain the *minimum* travel time across each edge
  (we assume an ideal world where everyone abides by the speed limit).
  Therefore, their individual values are not relevant; only their ratio is relevant.
- The number of lanes is only for rendering purposes.
- Every ID is assumed to be of the form [primary, secondary], where the secondary number is small.  
  The secondary component is intended to distinguish different segments of the same road for each edge.
- A minimum covariance is enforced in the code. (If your variance is too low, you may need to change this.)
- No comma or brackets should delimit these objects, so the full file isn't strictly JSON.
- For hand-checking simple cases, I recommend you set the length to be a multiple of the speed limit
  in order to avoid floating-point round-off error.

## Maintenance (or: why is the code ugly?)

This code isn't intended to finish any job for you. It's certainly not production-quality.
It's just meant to help any researchers working on this topic get started and/or cross-check their algorithm correctness.

Given that it's not meant to be used in any production,
I don't plan on actively maintaining it unless I encounter bugs (or if I see enough interest from others).

## Example

There's no short ""getting started"" code example, sorry.
The main startup file is basically a (very) long example.

### Usage

It's pretty self-explanatory:

	python Main.py --source=65280072.0 --dest=65345534.0 --budget=1800 --network=""data/sf.osm.json""

The time discretization interval is automatically chosen to be the globally minimum travel time across
any edge in the network,
since it should be as large as possible (for speed) and smaller than the travel time of every edge.
You would need to change this in the code for greater accuracy.

Note that a time budget that is too high can cause the pathfinding algorithm to thrash exponentially, because
the reliability of *every* path reaches 100% as your time budget increases, and the algorithm ends up
trying all of them.  
However, realistically, you would not need to run this algorithm for very high time budgets.
A classical path would already be reliable enough.

### Demo

Note that you (obviously) need both a map and traffic data to run this code.
Unfortunately I can't release the dataset I used in the paper,
but I have a sample map from **OpenStreetMap**, and the code attempts to naively fill in missing traffic data,
so that should be good enough to get started.

Here's an example of what one can get in 15 seconds on my machine. The code runs in two phases:

- As time increases, the optimal policy is computed for reachable roads farther and farther from the destination
  (highlighted), until the source is reached.  
  Roads that can never be used to reach the destination on time are not examined.
- Once the policy is determined, the optimal path for each time budget *up to* the one requested is determined,
  in order from high to low time budget.  
  This is to demonstrate the fact that the optimal path can change depending on the time budget.

![Animation](doc/SOTA-Demo.gif)

# Contact

## Licensing

Please refer to the license file.

For attribution, a reference to the aforementioned article (which this code is based on) would be kindly appreciated.

## Questions/Comments

If you find a bug, have questions, would like to contribute,
or the like, feel free to open a GitHub issue/pull request/etc.

For private inquiries (e.g. commercial licensing requests), you can find my contact
information if you search around (e.g. see the paper linked above).
",401,401,12,0,transportation,"[a-star, arrival, convolution, dijkstra-shortest-path, pathfinding-algorithm, reliable-routing, routing, routing-algorithm, shortest-path-problem, shortest-path-routing-algorithm, shortest-pathfinding-algorithm, stochastic-dynamic-programming, stochastic-models, transportation, transportation-network, transportation-planning, transportation-problem]",00000
8,transbigdata,ni1o1,N/A,https://github.com/ni1o1/transbigdata,https://api.github.com/repos/ni1o1/transbigdata,"A Python package develop for transportation spatio-temporal big data processing, analysis and visualization.","English [中文版](README-zh_CN.md)

# TransBigData

<img src=""https://github.com/ni1o1/transbigdata/raw/main/docs/source/_static/logo-wordmark-dark.png"" style=""width:550px"">

[![Documentation Status](https://readthedocs.org/projects/transbigdata/badge/?version=latest)](https://transbigdata.readthedocs.io/en/latest/?badge=latest) [![Downloads](https://pepy.tech/badge/transbigdata)](https://pepy.tech/project/transbigdata) [![Downloads](https://pepy.tech/badge/transbigdata/week)](https://pepy.tech/project/transbigdata) [![Tests](https://github.com/ni1o1/transbigdata/actions/workflows/tests.yml/badge.svg)](https://github.com/ni1o1/transbigdata/actions/workflows/tests.yml) [![codecov](https://codecov.io/gh/ni1o1/transbigdata/branch/main/graph/badge.svg?token=GLAVYYCD9L)](https://codecov.io/gh/ni1o1/transbigdata)

## Introduction

`TransBigData` is a Python package developed for transportation spatio-temporal big data processing, analysis and visualization. `TransBigData` provides fast and concise methods for processing common transportation spatio-temporal big data such as Taxi GPS data, bicycle sharing data and bus GPS data. `TransBigData` provides a variety of processing methods for each stage of transportation spatio-temporal big data analysis. The code with `TransBigData` is clean, efficient, flexible, and easy to use, allowing complex data tasks to be achieved with concise code.

For some specific types of data, `TransBigData` also provides targeted tools for specific needs, such as extraction of Origin and Destination(OD) of taxi trips from taxi GPS data and identification of arrival and departure information from bus GPS data. The latest stable release of the software can be installed via pip and full documentation
can be found at https://transbigdata.readthedocs.io/en/latest/. Introduction PPT can be found [here](https://github.com/ni1o1/transbigdata/blob/main/introduction/IntroductionofTransBigData.pdf) and [here(in Chinese)](https://github.com/ni1o1/transbigdata/blob/main/introduction/gridbasedframework.pdf)

### Target Audience

The target audience of `TransBigData` includes:

- Data science researchers and data engineers in the field of transportation big data, smart transportation systems, and urban computing, particularly those who want to integrate innovative algorithms into intelligent trasnportation systems
- Government, enterprises, or other entities who expect efficient and reliable management decision support through transportation spatio-temporal data analysis.

### Technical Features

* Provide a variety of processing methods for each stage of transportation spatio-temporal big data analysis.
* The code with `TransBigData` is clean, efficient, flexible, and easy to use, allowing complex data tasks to be achieved with concise code.

### Main Functions

Currently, `TransBigData` mainly provides the following methods:

* **Data Quality**: Provides methods to quickly obtain the general information of the dataset, including the data amount the time period and the sampling interval.
* **Data Preprocess**: Provides methods to clean multiple types of data error.
* **Data Gridding**: Provides methods to generate multiple types of geographic grids (Rectangular grids, Hexagonal grids) in the research area. Provides fast algorithms to map GPS data to the generated grids.
* **Data Aggregating**: Provides methods to aggregate GPS data and OD data into geographic polygon.
* **Data Visualization**: Built-in visualization capabilities leverage the visualization package keplergl to interactively visualize data on Jupyter notebook with simple code.
* **Trajectory Processing**: Provides methods to process trajectory data, including generating trajectory linestring from GPS points, and trajectory densification, etc.
* **Basemap Loading**: Provides methods to display Mapbox basemap on matplotlib figures


#### Grid processing framework offered by TransBigData

Here is an overview of the gridding framework offered by `TransBigData`.

![1648715064154.png](https://github.com/ni1o1/transbigdata/raw/main/image/README/1648715064154.png)

See [This Example](https://github.com/ni1o1/transbigdata/blob/main/docs/source/gallery/Example%202-Grid-base%20processing%20framework%20of%20TransBigData.ipynb) for further details.


#### Trajectory processing framework offered by TransBigData

Here is an overview of the Trajectory processing framework offered by `TransBigData`.

![trajs.png](https://github.com/ni1o1/transbigdata/blob/main/docs/source/images/trajs.png)

See [This Example](https://github.com/ni1o1/transbigdata/blob/main/docs/source/gallery/Example%203-Trajectory%20processing%20using%20TransBigData.ipynb) for further details.


## Installation

`TransBigData` support Python >= 3.6

### Using pypi [![PyPI version](https://badge.fury.io/py/transbigdata.svg)](https://badge.fury.io/py/transbigdata)

`TransBigData` can be installed by using `pip install`. Before installing `TransBigData`, make sure that you have installed the available [geopandas package](https://geopandas.org/en/stable/getting_started/install.html). If you already have geopandas installed, run the following code directly from the command prompt to install `TransBigData`:

    pip install transbigdata

### Using conda-forge [![Conda Version](https://img.shields.io/conda/vn/conda-forge/transbigdata.svg)](https://anaconda.org/conda-forge/transbigdata) [![Conda Downloads](https://img.shields.io/conda/dn/conda-forge/transbigdata.svg)](https://anaconda.org/conda-forge/transbigdata)

You can also install `TransBigData` by `conda-forge`, this will automaticaly solve the dependency, it can be installed with:

    conda install -c conda-forge transbigdata

## Contributing to TransBigData [![GitHub contributors](https://img.shields.io/github/contributors/ni1o1/transbigdata.svg)](https://github.com/ni1o1/transbigdata/graphs/contributors) [![Join the chat at https://gitter.im/transbigdata/community](https://badges.gitter.im/transbigdata/community.svg)](https://gitter.im/transbigdata/community?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge) ![GitHub commit activity](https://img.shields.io/github/commit-activity/m/ni1o1/transbigdata)

All contributions, bug reports, bug fixes, documentation improvements, enhancements and ideas are welcome. A detailed overview on how to contribute can be found in the [contributing guide](https://github.com/ni1o1/transbigdata/blob/master/CONTRIBUTING.md) on GitHub.

## Examples

### Example of data visualization

#### Visualize trajectories (with keplergl)

![gif](https://github.com/ni1o1/transbigdata/raw/main/image/README/tbdexample1.gif)

#### Visualize data distribution (with keplergl)

![gif](https://github.com/ni1o1/transbigdata/raw/main/image/README/tbdexample2.gif)

#### Visualize OD (with keplergl)

![gif](https://github.com/ni1o1/transbigdata/raw/main/image/README/tbdexample3.gif)

### Example of taxi GPS data processing

The following example shows how to use the `TransBigData` to perform data gridding, data aggregating and data visualization for taxi GPS data.

#### Read the data

```python
import transbigdata as tbd
import pandas as pd
#Read taxi gps data  
data = pd.read_csv('TaxiData-Sample.csv',header = None) 
data.columns = ['VehicleNum','time','lon','lat','OpenStatus','Speed'] 
data
```

<div>
<table border=""1"" class=""dataframe"">
  <thead>
    <tr style=""text-align: right;"">
      <th></th>
      <th>VehicleNum</th>
      <th>time</th>
      <th>lon</th>
      <th>lat</th>
      <th>OpenStatus</th>
      <th>Speed</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>34745</td>
      <td>20:27:43</td>
      <td>113.806847</td>
      <td>22.623249</td>
      <td>1</td>
      <td>27</td>
    </tr>
    <tr>
      <th>1</th>
      <td>34745</td>
      <td>20:24:07</td>
      <td>113.809898</td>
      <td>22.627399</td>
      <td>0</td>
      <td>0</td>
    </tr>
    <tr>
      <th>2</th>
      <td>34745</td>
      <td>20:24:27</td>
      <td>113.809898</td>
      <td>22.627399</td>
      <td>0</td>
      <td>0</td>
    </tr>
    <tr>
      <th>3</th>
      <td>34745</td>
      <td>20:22:07</td>
      <td>113.811348</td>
      <td>22.628067</td>
      <td>0</td>
      <td>0</td>
    </tr>
    <tr>
      <th>4</th>
      <td>34745</td>
      <td>20:10:06</td>
      <td>113.819885</td>
      <td>22.647800</td>
      <td>0</td>
      <td>54</td>
    </tr>
    <tr>
      <th>...</th>
      <td>...</td>
      <td>...</td>
      <td>...</td>
      <td>...</td>
      <td>...</td>
      <td>...</td>
    </tr>
    <tr>
      <th>544994</th>
      <td>28265</td>
      <td>21:35:13</td>
      <td>114.321503</td>
      <td>22.709499</td>
      <td>0</td>
      <td>18</td>
    </tr>
    <tr>
      <th>544995</th>
      <td>28265</td>
      <td>09:08:02</td>
      <td>114.322701</td>
      <td>22.681700</td>
      <td>0</td>
      <td>0</td>
    </tr>
    <tr>
      <th>544996</th>
      <td>28265</td>
      <td>09:14:31</td>
      <td>114.336700</td>
      <td>22.690100</td>
      <td>0</td>
      <td>0</td>
    </tr>
    <tr>
      <th>544997</th>
      <td>28265</td>
      <td>21:19:12</td>
      <td>114.352600</td>
      <td>22.728399</td>
      <td>0</td>
      <td>0</td>
    </tr>
    <tr>
      <th>544998</th>
      <td>28265</td>
      <td>19:08:06</td>
      <td>114.137703</td>
      <td>22.621700</td>
      <td>0</td>
      <td>0</td>
    </tr>
  </tbody>
</table>
<p>544999 rows × 6 columns</p>
</div>

#### Data pre-processing

Define the study area and use the `tbd.clean_outofbounds` method to delete the data out of the study area

```python
#Define the study area
bounds = [113.75, 22.4, 114.62, 22.86]
#Delete the data out of the study area
data = tbd.clean_outofbounds(data,bounds = bounds,col = ['lon','lat'])
```

#### Data gridding

The most basic way to express the data distribution is in the form of geograpic grids. `TransBigData` provides methods to generate multiple types of geographic grids (Rectangular grids, Hexagonal grids) in the research area. For rectangular gridding, you need to determine the gridding parameters at first (which can be interpreted as defining a grid coordinate system):

```python
#Obtain the gridding parameters
params = tbd.area_to_params(bounds,accuracy = 1000)
params
```

> {'slon': 113.75,
> 'slat': 22.4,
> 'deltalon': 0.00974336289289822,
> 'deltalat': 0.008993210412845813,
> 'theta': 0,
> 'method': 'rect',
> 'gridsize': 1000}

The gridding parameters store the information of the initial position, the size and the angle of the gridding system.

The next step is to map the GPS data to their corresponding grids. Using the `tbd.GPS_to_grid`, it will generate the `LONCOL` column and the `LATCOL` column (Rectangular grids). The two columns together can specify a grid:

```python
#Map the GPS data to grids
data['LONCOL'],data['LATCOL'] = tbd.GPS_to_grid(data['lon'],data['lat'],params)
```

Count the amount of data in each grids, generate the geometry of the grids and transform it into a GeoDataFrame:

```python
#Aggregate data into grids
grid_agg = data.groupby(['LONCOL','LATCOL'])['VehicleNum'].count().reset_index()
#Generate grid geometry
grid_agg['geometry'] = tbd.grid_to_polygon([grid_agg['LONCOL'],grid_agg['LATCOL']],params)
#Change the type into GeoDataFrame
import geopandas as gpd
grid_agg = gpd.GeoDataFrame(grid_agg)
#Plot the grids
grid_agg.plot(column = 'VehicleNum',cmap = 'autumn_r')
```

![png](https://github.com/ni1o1/transbigdata/raw/main/image/README/output_5_1.png)

#### Triangle and Hexagon grids & rotation angle

`TransBigData` also support the triangle and hexagon grids. It also supports given rotation angle for the grids. We can alter the gridding parameter:

```python
#set to the hexagon grids
params['method'] = 'hexa'
#or set as triangle grids: params['method'] = 'tri'
#set a rotation angle (degree)
params['theta'] = 5
```

Then we can do the GPS data matching again:

```python
#Triangle and Hexagon grids requires three columns to store ID
data['loncol_1'],data['loncol_2'],data['loncol_3'] = tbd.GPS_to_grid(data['lon'],data['lat'],params)
#Aggregate data into grids
grid_agg = data.groupby(['loncol_1','loncol_2','loncol_3'])['VehicleNum'].count().reset_index()
#Generate grid geometry
grid_agg['geometry'] = tbd.grid_to_polygon([grid_agg['loncol_1'],grid_agg['loncol_2'],grid_agg['loncol_3']],params)
#Change the type into GeoDataFrame
import geopandas as gpd
grid_agg = gpd.GeoDataFrame(grid_agg)
#Plot the grids
grid_agg.plot(column = 'VehicleNum',cmap = 'autumn_r')
```

![1648714436503.png](https://github.com/ni1o1/transbigdata/raw/main/image/README/1648714436503.png)

#### Data Visualization(with basemap)

For a geographical data visualization figure, we still have to add the basemap, the colorbar, the compass and the scale. Use `tbd.plot_map` to load the basemap and `tbd.plotscale` to add compass and scale in matplotlib figure:

```python
import matplotlib.pyplot as plt
fig =plt.figure(1,(8,8),dpi=300)
ax =plt.subplot(111)
plt.sca(ax)
#Load basemap
tbd.plot_map(plt,bounds,zoom = 11,style = 4)
#Define colorbar
cax = plt.axes([0.05, 0.33, 0.02, 0.3])
plt.title('Data count')
plt.sca(ax)
#Plot the data
grid_agg.plot(column = 'VehicleNum',cmap = 'autumn_r',ax = ax,cax = cax,legend = True)
#Add scale
tbd.plotscale(ax,bounds = bounds,textsize = 10,compasssize = 1,accuracy = 2000,rect = [0.06,0.03],zorder = 10)
plt.axis('off')
plt.xlim(bounds[0],bounds[2])
plt.ylim(bounds[1],bounds[3])
plt.show()
```

![1648714582961.png](https://github.com/ni1o1/transbigdata/raw/main/image/README/1648714582961.png)

## Citation information [![DOI](https://zenodo.org/badge/419559811.svg)](https://zenodo.org/badge/latestdoi/419559811) [![status](https://joss.theoj.org/papers/d1055fe3105dfa2dcff4cb6c7688a79b/status.svg)](https://joss.theoj.org/papers/d1055fe3105dfa2dcff4cb6c7688a79b)

Please cite [this](https://doi.org/10.21105/joss.04021) when using `TransBigData` in your research. Citation information is as follows:

```bibtex
@article{Yu2022,
  doi       = {10.21105/joss.04021},
  url       = {https://doi.org/10.21105/joss.04021},
  year      = {2022},
  publisher = {The Open Journal},
  volume    = {7},
  number    = {71},
  pages     = {4021},
  author    = {Qing Yu and Jian Yuan},
  title     = {TransBigData: A Python package for transportation spatio-temporal big data processing, analysis and visualization},
  journal   = {Journal of Open Source Software}
}
```


## Introducing Video (In Chinese) [![bilibili](https://img.shields.io/badge/bilibili-%E5%90%8C%E6%B5%8E%E5%B0%8F%E6%97%AD%E5%AD%A6%E9%95%BF-green.svg)](https://space.bilibili.com/3051484)

* [Bilibili](https://www.bilibili.com/video/BV1na411i7sd/)
* [Youtube](https://www.youtube.com/watch?v=ynqJ01WmPiQ)
",343,343,7,8,transportation,"[bike-sharing-data, bus-gps-data, data-analysis, data-pre-processing, data-quality-analysis, data-visualization, geospatial-data, python, spatio-temporal-data, taxi-gps-data, transportation]",00000
9,busrouter-sg,cheeaun,N/A,https://github.com/cheeaun/busrouter-sg,https://api.github.com/repos/cheeaun/busrouter-sg,BusRouter SG: Singapore Bus Routes Explorer,"<div align=""center"">
  <img src=""icons/icon.svg"" width=""96"" alt="""">

  # BusRouter SG

**Singapore Bus Routes Explorer** 🚌 🗺 🇸🇬
</div>

Explore bus stops and routes on the map for all bus services in Singapore, with realtime bus arrival times and per-bus-stop passing routes overview.

[**Website**](https://busrouter.sg/) &nbsp;&nbsp;&nbsp; [**Blog Post**](https://cheeaun.com/blog/2019/02/building-busrouter-sg/)

[![Screenshot of BusRouter SG](screenshots/screenshot-4.jpg)](https://busrouter.sg/)

[![Screenshot of BusRouter SG](screenshots/screenshot-5.jpg)](https://busrouter.sg/)

## ✨ Features

- **All** bus stops shown even in low zoom levels.
- **Full routes** display with all stops for every service.
- View all routes **passing through** a stop.
- Bus **arrival times** for every stop.
- **First/last timings** for all services.

## 🕰 Previously

_Previously_ known as Singapore Bus Routes Explorer, abbreviated as 'SBRE' and _previously_ looks like this:

[![Screenshot of Singapore Bus Routes Explorer](screenshots/screenshot-1.png)](https://busrouter.sg/)

## Visualization mini-site

A separate mini-site showing **ALL** stops and routes on a map. All of them.

Check it out: [Visualization mini-site](https://busrouter.sg/visualization/) (⚠️ Uses a lot of bandwidth).

![](screenshots/visualization/screenshot-1.jpg)

## Technicalities

### Data

All data such as bus stops, services and routes are mostly _scraped_ from <https://www.lta.gov.sg/>, which means they are copyrighted by the [Land Transport Authority](https://www.lta.gov.sg/content/ltagov/en/terms-of-use.html).

They are available here: [cheeaun/sgbusdata](https://github.com/cheeaun/sgbusdata).

### Web App

The scripts for the web app:

- `npm start` - start server for development
- `npm run build` - build for production and deployment, in `./dist` folder.

### Localization

[![Crowdin](https://badges.crowdin.net/busrouter-sg/localized.svg)](https://crowdin.com/project/busrouter-sg)

**[➡️ Start translating ⬅️](https://crwd.in/busrouter-sg)**

### Visualization

At least Node.js 14 is required.

The scripts to generate the data, in order:

1. `node visualization/build-routes.mjs`
   - Reads `data.busrouter.sg/v1/data/stops.min.json` and transform routes data with ""levels"" for 3D extrusion.
   - Generates `visualization/data/routes.json` and `visualization/data/levels.json` to be read by the `build-stops` script.
2. `node visualization/build-stops.mjs`
   - Reads `data.busrouter.sg/v1/data/stops.min.geojson` and _buffered_ into triangle polygons which will be 3D-extruded.
   - Generates `visualization/data/stops.3d.json`.

## 📜 License

Data © [LTA](http://www.mytransport.sg/content/mytransport/home/dataMall/termOfUse.html) © [OneMap](https://www.onemap.sg/legal/termsofuse.html) © [OSM contributors](https://www.openstreetmap.org/copyright). Everything else: [MIT](http://cheeaun.mit-license.org/)

## 🎤 Feedback

If you have any feedback, leave them on [Discussions](https://github.com/cheeaun/busrouter-sg/discussions) or tweet me [@cheeaun on Twitter](http://twitter.com/cheeaun).

## 🙇‍ Credits

- Inspired by [this tweet](https://twitter.com/mengwong/status/155511398653362177).
- Icon is from [The Noun Project](http://thenounproject.com/noun/bus/#icon-No97)
- Color scheme initially _inspired_ by [Gothere.sg](http://gothere.sg/)
- Thanks to Eddy Yanto for building the [iPad app](https://github.com/eddyyanto/SGBusRouter) until mid-2015.
",302,302,21,18,transportation,"[bus, bus-arrival, bus-number, bus-services, bus-station, bus-stop, bus-timing, buses, public-transportation, singapore, transportation]",00000
10,bluesky,TUDelft-CNS-ATM,TUDelft-CNS-ATM,https://github.com/TUDelft-CNS-ATM/bluesky,https://api.github.com/repos/TUDelft-CNS-ATM/bluesky,The open source air traffic simulator,"# BlueSky - The Open Air Traffic Simulator

[![Open in Visual Studio Code](https://img.shields.io/static/v1?logo=visualstudiocode&label=&message=Open%20in%20Visual%20Studio%20Code&labelColor=2c2c32&color=007acc&logoColor=007acc)](https://open.vscode.dev/TUDelft-CNS-ATM/bluesky)
[![GitHub release](https://img.shields.io/github/release/TUDelft-CNS-ATM/bluesky.svg)](https://GitHub.com/TUDelft-CNS-ATM/bluesky/releases/)
![GitHub all releases](https://img.shields.io/github/downloads/TUDelft-CNS-ATM/bluesky/total?style=social)

[![PyPI version shields.io](https://img.shields.io/pypi/v/bluesky-simulator.svg)](https://pypi.python.org/pypi/bluesky-simulator/)
![PyPI - Downloads](https://img.shields.io/pypi/dm/bluesky-simulator?style=plastic)
[![PyPI license](https://img.shields.io/pypi/l/bluesky-simulator?style=plastic)](https://pypi.python.org/pypi/bluesky-simulator/)
[![PyPI pyversions](https://img.shields.io/pypi/pyversions/bluesky-simulator?style=plastic)](https://pypi.python.org/pypi/bluesky-simulator/)

BlueSky is meant as a tool to perform research on Air Traffic Management and Air Traffic Flows, and is distributed under the GNU General Public License v3.

The goal of BlueSky is to provide everybody who wants to visualize, analyze or simulate air
traffic with a tool to do so without any restrictions, licenses or limitations. It can be copied,
modified, cited, etc. without any limitations.

**Citation info:** J. M. Hoekstra and J. Ellerbroek, ""[BlueSky ATC Simulator Project: an Open Data and Open Source Approach](https://www.researchgate.net/publication/304490055_BlueSky_ATC_Simulator_Project_an_Open_Data_and_Open_Source_Approach)"", Proceedings of the seventh International Conference for Research on Air Transport (ICRAT), 2016.

## BlueSky Releases
BlueSky is also available as a pip package, for which periodically version releases are made. You can find the latest release here:
https://github.com/TUDelft-CNS-ATM/bluesky/releases
The BlueSky pip package is installed with the following command:

    pip install bluesky-simulator[full]

Using ZSH? Add quotes around the package name: `""bluesky-simulator[full]""`. For more installation instructions go to the Wiki.

## BlueSky Wiki
Installation and user guides are accessible at:
https://github.com/TUDelft-CNS-ATM/bluesky/wiki

## Some features of BlueSky:
- Written in the freely available, ultra-simple-hence-easy-to-learn, multi-platform language
Python 3 (using numpy and either pygame or Qt+OpenGL for visualisation) with source
- Extensible by means of self-contained [plugins](https://github.com/TUDelft-CNS-ATM/bluesky/wiki/plugin)
- Contains open source data on navaids, performance data of aircraft and geography
- Global coverage navaid and airport data
- Contains simulations of aircraft performance, flight management system (LNAV, VNAV under construction),
autopilot, conflict detection and resolution and airborne separation assurance systems
- Compatible with BADA 3.x data
- Compatible wth NLR Traffic Manager TMX as used by NLR and NASA LaRC
- Traffic is controlled via user inputs in a console window or by playing scenario files (.SCN)
containing the same commands with a time stamp before the command (""HH:MM:SS.hh>"")
- Mouse clicks in traffic window are use in console for lat/lon/heading and position inputs

## Contributions
BlueSky can be considered 'perpetual beta'. We would like to encourage anyone with a strong interest in
ATM and/or Python to join us. Please feel free to comment, criticise, and contribute to this project. Please send suggestions, proposed changes or contributions through GitHub pull requests, preferably after debugging it and optimising it for run-time performance.
",289,289,40,18,transportation,"[air-traffic-control, air-transport, aircraft, conflict-detection, conflict-resolution, drones, navaids, python, simulation, traffic, transportation, transportation-simulation, tudelft, urban-air-mobility, uspace, utm, wgs84]",00000
11,transitland-processing-animation,transitland,transitland,https://github.com/transitland/transitland-processing-animation,https://api.github.com/repos/transitland/transitland-processing-animation,Animating scheduled transit trips using the Transitland API and Processing,"# Visualizing scheduled transit frequency

*TransitFlow* uses Mapzen's [Transitland API](https://transit.land/) to download transit schedule data and [Processing](https://processing.org/) with [Unfolding Maps](http://unfoldingmaps.org/) to animate scheduled transit frequency.

*TransitFlow* was created by [Will Geary](https://twitter.com/wgeary) during an internship at Mapzen in 2017. See this blog post for more info: https://mapzen.com/blog/animating-transitland/

Here is an example animation generated for San Francisco with a single command:

`python transitflow.py --name=san_francisco --bbox=-122.515411,37.710714,-122.349243,37.853983 --clip_to_bbox`

[![IMAGE ALT TEXT](http://i.imgur.com/3zF4uE7.png)](https://vimeo.com/230827684?quality=1080p ""San Francisco Transit Flows"")

See here for more [transit flow visualizations](https://vimeopro.com/willgeary/transit-flows).

## Install Processing
1. Download [Processing 3](https://processing.org/).
2. Download [Unfolding Maps version 0.9.9 for Processing 3](http://services.informatik.hs-mannheim.de/~nagel/GDV/Unfolding_for_processing_0.9.9beta.zip).
3. Navigate to `~/Documents/Processing/libraries` on your machine.
4. Drag and drop the unzipped Unfolding Maps folder into `~/Documents/Processing/libraries`.
5. Open Processing, navigate to Sketch > Import Library > Add Libary. Search for ""Video Export"" and click Install.
6. Quit and re-open Processing.

## Instructions
- Download the repository, unzip it and `cd` into it
- `pip install -r requirements.txt` to install the python requirements (pandas, numpy, requests)
- `cd transitflow`

Now, you are ready to download transit schedule data and generate visualizations.

There are two ways to go about using this tool:

### 1) Search by transit operator Onestop ID

You can visualize a single transit operator by passing in the operator's Onestop ID. What's a Onestop ID, you ask? As part of Transitland's [Onestop ID  Scheme](https://transit.land/documentation/onestop-id-scheme/), every transit operator, route, feed and stop are assigned a unique identifier called a Onestop ID.

You can look up an operator's Onestop ID using the [Transitland Feed Registery](https://transit.land/feed-registry/). For example, the Onestop ID for San Francisco BART is `o-9q9-bart`.

Visualize one day of BART transit flows:

- `python transitflow.py --name=bart --operator=o-9q9-bart`

[![IMAGE ALT TEXT](http://i.imgur.com/NFPEnYj.png)](https://vimeo.com/230364702?quality=1080p ""One Day of BART Trips"")

### 2) Search by bounding box

You can also visualize transit flows by searching for all operators within a bounding box. The bounding box must be in the format: West, South, East, North. I like using [bboxfinder](http://bboxfinder.com/) to draw bounding boxes. For example, here's the command to visualize transit flows in Chicago:

- `python transitflow.py --name=chicago --bbox=-87.992249,41.605175,-87.302856,42.126747 --clip_to_bbox --exclude=o-9-amtrak,o-9-amtrakcharteredvehicle`

[![IMAGE ALT TEXT](http://i.imgur.com/pH7AwgB.png)](https://vimeo.com/230857619?quality=1080p ""Chicago Transit Flows"")

Note, the use of `--clip_to_bbox`. This command will clip the dataset to only include transit vehicle trips within the specified bounding box, both in the geo-visualization and in the vehicle count calculations that drive the stacked bar chart.

Also, note the optional use of `--exclude`. This command will exclude specified operators, Amtrak in this case.

### Play your animation

Navigate to `sketches\{name}\{date}\sketch` and open the `sketch.pde` file.

This should open the Processing application. Simply click Play or `command + r` to play the animation.

### Change map providers

Cycle through the first two rows on the keyboard (1 to 0, q to u) to see the built in map provider options.

Read more about Unfolding Maps map providers here: http://unfoldingmaps.org/tutorials/mapprovider-and-tiles.html

### Panning and zooming

You can pan around on the map by clicking and dragging it. You can zoom in with Shift + ""+"" and zoom out with ""-"".

### Exporting to video

Open `sketch.pde` file.

- For a quick, medium quality video, set `boolean recording = true;`
- For a high quality video, set `boolean recording = true;` and `boolean HQ = true;`. This will generate 3,600 .tiff frames that can be stiched together using ffmpeg or Processing's built in movie maker tool.

## Command line arguments

**Key**|**Status**|**Description**|**Example**
-----|-----|-----|-----
--name|required|The name of your project|--name=boston
--date|optional|Defaults to today's date|--date=2017-08-15
--operator|optional|Operator Onestop ID|--operator=o-drt-mbta
--bbox|optional|West, South, East, North| --bbox=-71.4811,42.1135,-70.6709,42.6157
--clip\_to\_bbox|optional|Clip results to bounding box|--clip\_to\_bbox
--exclude|optional|Operators to be excluded|--exclude=o-9-amtrak
--apikey|optional|Mapzen API key|--apikey=mapzen-abc1234

A Mapzen API Key is optional, but recommended for faster results. Sign up for a [Mapzen API Key here](https://mapzen.com/developers/sign_up).

## Troubleshooting

If your visualization is not working as expected...

- Make sure that the operator of interest actually has service on the specified date (no `--date` argument defaults to today's date). Some operators are better than others at sharing updated data. For example, Mexico City's [Metrobús](https://transit.land/api/v1/schedule_stop_pairs?operator_onestop_id=o-9g3w-metrobs) has a `service_end_date` of 2016-08-17. So, you would need pass in a `--date=2016-08-17` or earlier or to download and visualize the Metrobús.

- Make sure that Transitland has coverage in your area of interest. You can search for transit operators and feeds using the [Transitland Feed Registery](https://transit.land/feed-registry/). Is Transitland missing a feed? [Let us know](https://transit.land/participate/)!

## Attribution
- [Will Geary](https://twitter.com/wgeary) for Mapzen, August 2017
- Transit schedule data from [Mapzen](https://mapzen.com/), [Transitland](https://transit.land/)
- Map tiles from [Stamen](https://stamen.com/), [Carto](http://carto.com/), [OpenStreetMap](http://www.openstreetmap.org/), [ESRI](http://www.esri.com/), [Bing Maps](https://www.bing.com/maps)
- The visualization incorporates Processing code from [this workshop](https://github.com/juanfrans-courses/DataScienceSocietyWorkshop) by [Juan Francisco Saldarriaga](http://juanfrans.com/) to plot trips using linear interpolation. It also relies on the [Unfolding Maps](http://unfoldingmaps.org/) library by [Till Nagel](http://tillnagel.com/) for its built-in map tiles and functions to convert geolocations into screen positions. Thank you to Juan and Till for your inspiring work!

## Sources of inspiration
- *[Shanghai Metro Flow](http://tillnagel.com/2013/12/shanghai-metro-flow/)*, Till Nagel
- *[Barcelona Cycle Challenge](http://juanfrans.com/projects/barcelonaCycleChallenge.html)*, Juan Francisco Saldarriaga
- *[Seven Days of Car-Sharing in Milan](http://labs.densitydesign.org/carsharing/)*, Matteo Azzi, Daniele Ciminieri, others
- *[NYC Taxis: A Day in the Life](http://chriswhong.github.io/nyctaxi/)*, Chris Whong
- *[Analyzing 1.1 Billion NYC Taxi and Uber Trips](http://toddwschneider.com/posts/analyzing-1-1-billion-nyc-taxi-and-uber-trips-with-a-vengeance/)*, Todd Schneider

See more visualizations created with TransitFlow here: https://vimeopro.com/willgeary/transit-flows

## Press & Recognition

- **The Guardian** [*""Go with the flow: the hypnotic beauty of public transport – mapped""*](https://www.theguardian.com/cities/2017/oct/04/hypnotic-beauty-public-transport-mapped) (October 2017)

- **Le Monde** [*""L’étrange beauté des flux de Paris dans une carte animée""*](http://www.lemonde.fr/smart-cities/article/2017/10/12/l-etrange-beaute-des-flux-de-paris-dans-une-carte-animee_5200106_4811534.html#zqdvSAkUWw754WcX.99) (December 2017)

- **Kantar Information is Beautiful Awards Longlist** [*""Multimodal Symphony""*](https://www.informationisbeautifulawards.com/showcase/2347) (October 2017)

- **CityLab** [*""Mapping the Ebb and Flow of Transit Around the World""*](https://www.citylab.com/transportation/2017/09/visualize-transit-frequency-nearly-anywhere-in-the-world/538725/) (September 2017)

- **Mobility Lab** [*""A visualized day of New York’s transit options, working together""*](https://mobilitylab.org/2017/04/11/nyc-visualization-transit-options/) (April 2017)

- **Planetizen**[*""Watch Transit Move With These Animated Maps""*](https://www.planetizen.com/node/94598/watch-transit-move-these-animated-maps) (September 2017)
",271,271,18,6,transportation,"[mapzen, processing, python, transit, transportation]",00000
12,fleetbase,fleetbase,fleetbase,https://github.com/fleetbase/fleetbase,https://api.github.com/repos/fleetbase/fleetbase,🚚 Fleetbase: Open Source Modular Logistics Platform. Built on Adaptable Extensions to Manage and Orchestrate Logistics Operations.,"<div id=""hero"">
  <p align=""center"" dir=""auto"">
      <a href=""https://fleetbase.io"" rel=""nofollow"">
        <img src=""https://user-images.githubusercontent.com/58805033/191936702-fed04b0f-7966-4041-96d0-95e27bf98248.png"" alt=""Fleetbase logo"" width=""600"" height=""140"" style=""max-width: 100%;"">
      </a>
    </p>
    <p align=""center"" dir=""auto"">
      Open Source Modular Logistics Platform
      <br>
      <a href=""https://fleetbase.github.io/guides"" rel=""nofollow"">Fleetbase Documentation →</a>
      <br>
      <br>
      <a href=""https://github.com/fleetbase/fleetbase/issues"">Report an Issue</a>
      ·
      <a href=""https://fleetbase.github.io/api-reference"">API Reference</a>
      ·
      <a href=""https://fleetbase.github.io/guides"">Guides</a>
      ·
      <a href=""https://github.com/fleetbase/fleetbase/issues"">Request a Feature</a>
      ·
      <a href=""https://www.fleetbase.io/blog-2"" rel=""nofollow"">Blog</a>
      ·
      <a href=""https://fleetbase.apichecker.com"" target=""_api_status"" rel=""nofollow"">API Status</a>
      ·
      <a href=""https://discord.gg/V7RVWRQ2Wm"" target=""discord"" rel=""nofollow"">Discord</a>
    </p>
    <hr />
</div>

# ⭐️ Overview

Fleetbase is an open-source modular platform designed for the efficient management and orchestration of logistics operations. It serves as both a powerful operational tool for businesses and a flexible foundation for developers. The platform's core is built around a collection of ""extensions,"" which create a customizable framework capable of meeting a wide range of supply chain and logistics requirements.

Each extension in Fleetbase is purposefully engineered to fulfill specific roles within the logistics ecosystem. Users have the freedom to create their own extensions, expanding the platform's ecosystem and ensuring its adaptability to various use cases. This extensible nature keeps Fleetbase at the forefront of addressing diverse logistical and supply chain needs now and in the future.

<p align=""center"" dir=""auto"">
  <img src=""https://github.com/fleetbase/fleetbase/assets/816371/deef79fa-e30c-4ce9-8a04-0dee990ffd9d"" alt=""Fleetbase Console"" width=""600"" style=""max-width: 100%;"" />
</p>

<div align=""center"">
  <a href=""https://www.producthunt.com/posts/fleetbase-alpha"" target=""_producthunt"">🚀 We've just announced our Alpha release on Product Hunt! 🚀</a>
  <p>Check Fleetbase out on ProductHunt, and support with a Upvote!</p>
  <a href=""https://www.producthunt.com/posts/fleetbase-alpha?utm_source=badge-featured&utm_medium=badge&utm_souce=badge-fleetbase&#0045;alpha"" target=""_blank""><img src=""https://api.producthunt.com/widgets/embed-image/v1/featured.svg?post_id=399731&theme=light"" alt=""Fleetbase&#0032;&#0040;Alpha&#0041; - The&#0032;open&#0032;source&#0032;OnFleet&#0032;alternative | Product Hunt"" style=""width: 250px; height: 54px;"" width=""250"" height=""54"" /></a>
</div>
  

# 📖 Table of contents

  - [What's Included](#-whats-included)
  - [Getting Started](#-getting-started)
  - [Use Cases](#-use-cases)
  - [Installation](#-installation)
  - [Extensions](#-extensions)
  - [Apps](#-apps)
  - [Roadmap](#-roadmap)
  - [Bugs and Feature Requests](#-bugs-and--feature-requests)
  - [Documentation](#-documentation)
  - [Contributing](#-contributing)
  - [Community](#-community)
  - [Creators](#-creators)
  - [License & Copyright](#-license-and-copyright)

# 📦 What's Included

Fleetbase is more than just a platform; it's a versatile ecosystem carefully architected to empower developers and businesses alike. Fleetbase comes pre-installed with a few extensions that provide base functionality to get users and businesses started:

<ul>
  <li>
    <strong>Console</strong>: Fleetbase's frontend console is built with Ember.js and Ember Engines, offering a modular and extensible design. This design allows the system to easily adapt and scale according to your evolving needs while simplifying the integration of new extensions. By leveraging the console's design, extensions can be seamlessly installed using their respective package managers, reducing complexity and integration time.
  </li>
  <li>
    <strong>Fleetbase API</strong>: Fleetbase's backend API and framework are built with Laravel, providing a robust and flexible infrastructure for extension development and integration. The system efficiently manages complex data structures and transactions while seamlessly incorporating new extensions through package managers. We offer additional packages for developers to create custom extensions, enhancing the flexibility and extensibility of the Fleetbase ecosystem.
  </li>
  <li>
    <strong>Extensions</strong>: Fleetbase is designed to provide immediate utility out-of-the-box. It comes pre-installed with several key extensions
    <ul>
      <li><strong>FleetOps</strong>: FleetOps, our comprehensive fleet management extension, caters to all aspects of last-mile operations. Some of it's features include:
        <ul>
          <li>
            Real-time tracking for vehicles and assets, ensuring optimal operational efficiency.
          </li>
          <li>
            Order creation and management, facilitating seamless transaction processing.
            Service rates management, helping maintain financial transparency and profitability.
          </li>
          <li>
            Fleet management, providing a holistic view and control of your fleet.
          </li>
          <li>
            Third-party vendor integrations, allowing you to consolidate your resources.
          </li>
          <li>
            API & Webhooks that not only offer increased interconnectivity but also serve to facilitate integrations with other services and applications, making FleetOps a truly versatile solution.
          </li>
        </ul>
      </li>
      <li>
        <strong>Storefront</strong>: Storefront is an extension that delivers headless commerce functionality, ideal for businesses aspiring to develop on-demand stores or marketplaces. It aims to facilitate seamless transactions while focusing on providing an excellent user experience.
      </li>
      <li><strong>Dev Console</strong>: The Dev Console extension is a developer's toolbox, providing resources such as:
        <ul>
          <li>
            API keys management, ensuring secure interactions with the application programming interface.
          </li>
          <li>
            Webhooks management, enabling real-time data exchanges.
          </li>
          <li>
            Sockets management, facilitating bi-directional client-server communication.
          </li>
          <li>
            Logs management, crucial for system monitoring and troubleshooting.
          </li>
          <li>
            API events management, keeping a pulse on system communications.
          </li>
        </ul>
      </li>
    </ul>
  </li>
</ul>

# 🏁 Getting Started

Before you can get started with Fleetbase, you'll need to make sure you have the following prerequisites:

<ol>
  <li>
    A computer running either Linux, Mac OS, or Windows
  </li>
  <li>Docker installed</li>
  <li>Git installed</li>
  <li>If you want to try now, the <a href=""https://console.fleetbase.io/"" target=""_fleetbase"" alt=""Fleetbase"">cloud hosted version of Fleetbase available here.</a></li>
</ol>

# 🚦 Use Cases

Fleetbase's comprehensive suite of features and the modular design make it highly versatile, catering to a broad array of applications across different industries. Here are a few use cases:
<ul>
  <li><strong>Logistics and Supply Chain Management</strong>: Fleetbase could be employed by a logistics company to streamline its operations. Real-time tracking provided by FleetOps would help maintain visibility of fleet vehicles and assets at all times. This would ensure timely delivery, reduce operational inefficiencies, and enable proactive management of any logistical issues. Additionally, the order creation and management feature could be used to manage deliveries, pickups, and routing.</li>
  
  <li><strong>On-demand Delivery Services</strong>: On-demand services like food delivery or courier companies could utilize Fleetbase to manage their fleet of delivery agents. The real-time tracking functionality would help to optimize routes and ensure prompt deliveries, while the order creation and management system would efficiently handle incoming orders.</li>
  
  <li><strong>E-Commerce Platforms</strong>: E-commerce businesses could leverage Fleetbase to manage their backend logistics. The Storefront extension would enable seamless online transactions, while FleetOps could manage all aspects of the delivery process, ensuring a smooth shopping experience for the customers.</li>
  
  <li><strong>Ride-Hailing Services</strong>: Fleetbase could be a perfect fit for ride-hailing or car rental services. FleetOps would manage real-time tracking of vehicles, maintaining optimal vehicle utilization, while the API and Webhooks would facilitate integration with mobile apps to provide real-time updates to customers.</li>
  
  <li><strong>Third-party Logistics (3PL) Provider</strong>: A 3PL provider could use Fleetbase for comprehensive management of its services. From real-time tracking of cargo to managing service rates and integration with other vendors in the supply chain, Fleetbase could provide an all-in-one solution.</li>
  
  <li><strong>Developer Resource Management</strong>: Developers building complex, resource-intensive applications could benefit from Fleetbase's Dev Console. API keys and webhook management could streamline the secure interaction between different software components. At the same time, sockets, logs, and API events management tools would assist in maintaining, troubleshooting, and improving the system.</li>

  <li><strong>Public Transportation Systems</strong>: City transportation services could use Fleetbase to optimize their bus or subway operations. With FleetOps, they could have real-time tracking of their vehicles, ensuring that schedules are met promptly and delays are handled effectively. Moreover, service rates management could assist in setting and adjusting fares, while the API and Webhooks functionality could integrate with public apps to provide real-time updates to commuters about arrivals, delays, and route changes.</li>

  <li><strong>Fleet Leasing Companies</strong>: Fleet leasing companies could employ Fleetbase to manage their vehicle assets and track their status in real time. From managing service rates to ensuring the best utilization of assets, FleetOps could provide a holistic solution. Moreover, the Storefront extension could be used to list available vehicles and manage online reservations seamlessly.</li>

  <li><strong>Emergency Services</strong>: Emergency services like ambulance or firefighting departments could use Fleetbase to manage their operations. FleetOps would provide real-time tracking, ensuring that emergency vehicles are dispatched quickly and the fastest routes are chosen. In addition, the API and Webhooks functionality could allow integration with emergency call centers, ensuring a seamless flow of information and a swift response to emergencies.</li>
</ul>

Remember, these are just a few examples. Given the modular and extensible nature of Fleetbase, it can be customized and scaled to fit many other use cases across different industries.

# 💾 Installation

Getting Fleetbase up and running on your system using Docker and Docker-compose is straightforward. Please follow the steps below:

### Prerequisites

<ul>
  <li>Ensure that you have Docker and Docker-compose installed on your system. If not, you can download and install them from their respective official websites:
    <ul>
      <li><a href=""https://docs.docker.com/get-docker/"" target=""_docker"">Docker</a></li>
      <li><a href=""https://docs.docker.com/compose/install/"" target=""_docker_compose"">Docker Compose</a></li>
    </ul>
  </li>
  <li>
    Clone the Fleetbase repository to your local machine:
    <pre>git clone git@github.com:fleetbase/fleetbase.git</pre>
  </li>
  <li>
    Navigate to the cloned repository:
    <pre>cd fleetbase</pre>
  </li>
  <li>
    Initialize and pull submodules:
    <pre>git submodule update --init --recursive</pre>
  </li>
</ul>

### Build and Run Fleetbase

<ol>
  <li>
    <strong>Start the Docker daemon:</strong>
    Ensure the Docker daemon is running on your machine. You can either start Docker Desktop or either executed by running:
    <pre>service docker start</pre>
  </li>
  <li>
    <strong>Build the Docker containers:</strong>
Use Docker Compose to build and run the necessary containers. In the root directory of the Fleetbase repository, run:
  <pre>docker-compose up -d</pre>
  </li>
</ol>

### Additional Steps

<ol>
   <li>Fleetbase will try to find the current hostname or public IP address to whitelist in for CORS, but if this fails you will need to manually add your hostname or instance URL to <code>api/config/cors.php</code> in the <code>allowed_origins</code> array. This will whitelist the console for CORS access to your instance backend.
  </li>
  <li>🛣 Routing! By default Fleetbase currently will use it's own routing engine which is hosted at <a href=""https://routing.fleetbase.io"" target=""_fleetbase_routing_machine"">https://routing.fleetbase.io</a>, this routing engine only works for a few enabled countries which include USA, Canada, Belgium, Spain, Serbia, Taiwan, Malaysia, Singapore, Brunei, Mongolia, India, Ghana. We can enable more regions and countries upon request. There is a Roadmap item to allow users to easily change to any routing engine provider such as Mapbox, Google Maps, and other 3rd Party Routing services. Optionally, you can switch out Fleetase Routing engine with any OSRM compatible service such as OpenStreetMap by changing the console environment variable <code>OSRM_HOST</code> which can be found in <code>console/environments/*.env</code>.
  </li>
  <li>If you find any bugs or unexpected issues please <a href=""https://github.com/fleetbase/fleetbase/issues/new/choose"">post an issue</a> to the repo or join our <a href=""https://discord.gg/V7RVWRQ2Wm"" target=""_discord"" alt=""Fleetbase Discord"">Discord</a>.
  </li>
</ol>

### Troubleshoot

Have an issue with the installation, try a few of these workarounds.

<ul>
  <li><strong>Installer not working?</strong> <br>If you encounter issues with the web based installer use this workaround to get going.
  <ol>
    <li>Login to the application container. 
      <pre class=""bash"">docker exec -ti fleetbase-application-1 bash</pre>
    </li>
    <li>Manually run the database setup and migrations.
      <pre class=""bash"">php artisan mysql:createdb
php artisan migrate:refresh --seed</pre>
      </li>
    <li>After completing these steps you should be able to proceed with account creation.</li>
  </ol>
  </li>
</ul>

### Access Fleetbase

Now that Fleetbase is up and running via Docker you can find the console and the API accessible:

<ul>
  <li>Fleetbase Console: <code>http://localhost:4200</code></li>
  <li>Fleetbase API: <code>http://localhost:8000</code></li>
</ul>

# 🧩 Extensions

Fleetbase extensions provide a powerful way to enhance and customize the functionality of Fleetbase to suit your specific needs. They are standalone modules that seamlessly integrate with Fleetbase's frontend and backend, allowing you to extend its capabilities.

### What are Fleetbase Extensions?
Fleetbase Extensions are built using both a backend PHP package and a frontend Ember Engine Addon. They are designed to blend seamlessly into the Fleetbase ecosystem, utilizing shared services, utilities, stylesheets, components, and template helpers.

### How do Extensions Work?
<ul>
  <li><strong>Backend</strong>: The backend of an extension is developed as a PHP package. This package should utilize the composer package <code>fleetbase/core-api</code>, which provides core API functionalities, making it easier to integrate your extension with Fleetbase's backend.</li>
  
  <li><strong>Engine</strong>: The frontend of an extension is built as an Ember Engine Addon. The Addon must require the packages <code>@fleetbase/ember-core</code> and <code>@fleetbase/ember-ui</code>. The <code>@fleetbase/ember-core</code> package provides core services and utilities that help to align your extension with Fleetbase's frontend. The <code>@fleetbase/ember-ui</code> package, on the other hand, supplies all the stylesheets, components, and template helpers needed to design a Fleetbase extension that seamlessly matches the look and feel of the Fleetbase UI.</li>
</ul>

### Building a Fleetbase Extension
To create a Fleetbase extension, follow these steps:

<ul>
  <li><strong>Backend PHP Package Creation</strong>: Begin by creating a backend PHP package. Make sure to use the composer package <code>fleetbase/core-api</code> to ensure smooth integration with Fleetbase's backend.</li>
  
  <li><strong>Frontend Ember Engine Addon</strong>: Next, you need to create the frontend of the extension using Ember Engine. Be sure to include the <code>@fleetbase/ember-core</code> and <code>@fleetbase/ember-ui</code> packages. These packages provide necessary services, utilities, and design components for aligning your extension with Fleetbase's UI.</li>

  <li><strong>Integrate Your Extension</strong>: Once you have the backend and frontend ready, you can integrate your extension into Fleetbase by installing it via the respective package managers. In the future you will be able to publish your extension to the Fleetbase extensions repository making it available to all instances of Fleetbase with the ability to even sell your extension.</li>
</ul>

With Fleetbase's modular architecture, you can develop your extensions to solve unique problems, enhance existing functionality, or add entirely new capabilities to your Fleetbase instance. This extensibility allows Fleetbase to adapt and evolve with your growing business needs.

# 📱 Apps

Fleetbase offers a few open sourced apps which are built on Fleetbase which can be cloned and customized. Every app is built so that the Fleetbase instance can be switched out whether on-premise install or cloud hosted.

<ul>
  <li><a href=""https://github.com/fleetbase/storefront-app"">Storefront App</a>: Fleetbase based ecommerce/on-demand app for launching your very own shop or marketplace to Apple or Android playstore.</li>
  <li><a href=""https://github.com/fleetbase/navigator-app"">Navigator App</a>: Fleetbase based driver app which can be used for drivers to manage and update order, additionally provides real time driver location which can be viewed in the Fleetbase Console.</li>
</ul>

# 🛣 Roadmap

<ol>
  <li>Open Source Extension Repository</li>
  <li>🌎 Internationalize</li>
  <li>Multiple and Custom Routing Engine's in FleetOps</li>
  <li>Identity & Access Management (IAM) Extension</li>
  <li>Inventory and Warehouse Management Extension</li>
  <li>Freight Forwarder Quote Parser/ System Extension</li>
</ol>

# 🪲 Bugs and 💡 Feature Requests

Have a bug or a feature request? Please check the <a href=""https://github.com/fleetbase/fleetbase/issues"">issue tracker</a> and search for existing and closed issues. If your problem or idea is not addressed yet, please <a href=""https://github.com/fleetbase/fleetbase/issues/new"">open a new issue</a>.

# 📚 Documentation

View and contribute to our <a href=""https://github.com/fleetbase/guides"">Fleetbase Guide's</a> and <a href=""https://github.com/fleetbase/api-reference"">API Reference</a>

# 👨‍💻 Contributing

Please read through our <a href=""https://github.com/fleetbase/fleetbase/blob/main/CONTRIBUTING.md"">contributing guidelines</a>. Included are directions for opening issues, coding standards, and notes on development.

# 👥 Community

Get updates on Fleetbase's development and chat with the project maintainers and community members by joining our <a href=""https://discord.gg/V7RVWRQ2Wm"">Discord</a>.

<ul>
  <li>Follow <a href=""https://twitter.com/fleetbase_io"">@fleetbase_io on Twitter</a>.</li>
  <li>Read and subscribe to <a href=""https://www.fleetbase.io/blog-2"">The Official Fleetbase Blog</a>.</li>
  <li>Ask and explore <a href=""https://github.com/orgs/fleetbase/discussions"">our GitHub Discussions</a>.</li>
</ul>
<p dir=""auto"">See the <a href=""https://github.com/fleetbase/fleetbase/releases"">Releases</a> section of our GitHub project for changelogs for each release version of Fleetbase.</p>
<p>Release announcement posts on <a href=""https://www.fleetbase.io/blog-2"" rel=""nofollow"">the official Fleetbase blog</a> contain summaries of the most noteworthy changes made in each release.</p>

# Creators

<p dir=""auto""><strong>Ronald A. Richardson</strong>- Co-founder &amp; CTO</p>
<img src=""https://user-images.githubusercontent.com/58805033/230263021-212f2553-1269-473d-be94-313cb3eecfa5.png"" alt=""Ron Image"" width=""75"" height=""75"" style=""max-width: 100%;"">          
<p><a href=""https://github.com/orgs/fleetbase/people/roncodes"">Github</a> | <a href=""https://www.linkedin.com/in/ronald-a-richardson/"">LinkedIn</a></p>
                   
<p dir=""auto""><strong>Shiv Thakker</strong> - Co-founder &amp; CEO</p>
<img src=""https://user-images.githubusercontent.com/58805033/230262598-1ce6d0cc-fb65-41f9-8384-5cf5cbf369c7.png"" alt=""Shiv Image"" width=""75"" height=""75"" style=""max-width: 100%;"">  
<p><a href=""https://github.com/orgs/fleetbase/people/shivthakker"">Github</a> | <a href=""https://www.linkedin.com/in/shivthakker/"">LinkedIn</a></p>


# License & Copyright

Code and documentation copyright 2018–2023 the <a href=""https://github.com/fleetbase/fleetbase/graphs/contributors"">Fleetbase Authors</a>. Code released under the <a href=""https://github.com/fleetbase/storefront-app/blob/main/LICENSE.md"">MIT License</a>.
",249,249,7,3,transportation,"[driver-app, fleet-management, freight-management, infrastructure, inventory-management, logistics, ondemand, open-source, order-management, route-optimization, supply-chain-management, tracking-and-monitoring, transportation, warehouse-management]",00000
13,r5,conveyal,conveyal,https://github.com/conveyal/r5,https://api.github.com/repos/conveyal/r5,"Developed to power Conveyal's web-based interface for scenario planning and land-use/transport accessibility analysis, R5 is our routing engine for multimodal (transit/bike/walk/car) networks with a particular focus on public transit","# Conveyal R5 Routing Engine

## R5: Rapid Realistic Routing on Real-world and Reimagined networks
R5 is the routing engine for [Conveyal](https://www.conveyal.com/learn), a web-based system that allows users to create transportation scenarios and evaluate them in terms of cumulative opportunities accessibility indicators. See the [Conveyal user manual](https://docs.conveyal.com/) for more information.

We refer to the routing method as ""realistic"" because it works by planning door-to-door trips at many different departure times in a time window, which better reflects how people use transportation systems than planning a single trip at an exact departure time. R5 handles both scheduled public transit and headway-based lines, using novel methods to characterize variation and uncertainty in travel times. It is designed for one-to-many and many-to-many travel-time calculations used in access indicators, offering substantially better performance than repeated calls to older tools that provide one-to-one routing results. For a comparison with OpenTripPlanner, see [this background](http://docs.opentripplanner.org/en/latest/Version-Comparison/#commentary-on-otp1-features-removed-from-otp2).

We say ""Real-world and Reimagined"" networks because R5's networks are built from widely available open OSM and GTFS data describing baseline transportation systems, but R5 includes a system for applying light-weight patches to those networks for immediate, interactive scenario comparison.

**Please note** that the Conveyal team does not provide technical support for third-party deployments. R5 is a component of a specialized commercial system, and we align development efforts with our roadmap and the needs of subscribers to our hosted service. This service is designed to facilitate secure online collaboration, user-friendly data management and scenario editing through a web interface, and complex calculations performed hundreds of times faster using a compute cluster. These design goals may not align well with other use cases. This project is open source primarily to ensure transparency and reproducibility in public planning and decision making processes, and in hopes that it may help researchers, students, and potential collaborators to understand and build upon our methodology.

While the Conveyal team provides ongoing support and compatibility to subscribers, third-party projects using R5 as a library may not work with future releases. R5 does not currently expose a stable programming interface (""API"" or ""SDK""). As we release new features, previous functions and data types may change. The practical effect is that third-party wrappers or language bindings (e.g., for R or Python) may need to continue using an older release of R5 for feature compatibility (though not necessarily result compatibility, as the methods used in R5 are now relatively mature). 

## Methodology

For details on the core methods implemented in Conveyal Analysis and R5, see:

* [Conway, Byrd, and van der Linden (2017)](https://keep.lib.asu.edu/items/127809)
* [Conway, Byrd, and van Eggermond (2018)](https://www.jtlu.org/index.php/jtlu/article/view/1074)
* [Conway and Stewart (2019)](https://files.indicatrix.org/Conway-Stewart-2019-Charlie-Fare-Constraints.pdf)

### Citations

The Conveyal team is always eager to see cutting-edge uses of our software, so feel free to send us a copy of any thesis, report, or paper produced using this software. We also ask that any academic or research publications using this software cite the papers above, where relevant and appropriate.

## Configuration

It is possible to run a Conveyal Analysis UI and backend locally (e.g. on your laptop), which should produce results identical to those from our hosted platform. However, the computations for more complex analyses may take quite a long time. Extension points in the source code allow the system to be tailored to cloud computing environments to enable faster parallel computation.

### Running Locally

To get started, copy the template configuration (`analysis.properties.tmp`) to `analysis.properties`.
To run locally, use the default values in the template configuration file. `offline=true` will create a local instance that avoids cloud-based storage, database, or authentication services.
By default, analysis-backend will use the `analysis` database in a local MongoDB instance, so you'll also need to install and start a MongoDB instance.

Database configuration variables include:

- `database-uri`: URI to your MongoDB cluster
- `database-name`: name of the database to use in your MongoDB cluster

## Building and running

Once you have configured `analysis.properties` and started MongoDB locally, you can build and run the analysis backend with `gradle runBackend`. If you have checked out a commit (such as a release tag) where you are sure all tests will pass, you can skip the tests with `gradle -x test runBackend`.

You can build a single self-contained JAR file containing all the dependencies with `gradle shadowJar` and start it with `java -Xmx2g -cp build/libs/r5-vX.Y.Z-all.jar com.conveyal.analysis.BackendMain`.

Once you have this backend running, follow the instructions to start the [analysis-ui frontend](https://github.com/conveyal/analysis-ui). Once that the UI is running, you should be able to log in without authentication (using the frontend URL, e.g. http://localhost:3000). 

## Creating a development environment

In order to do development on the frontend or backend, you'll need to set up a local development environment. We use [IntelliJ IDEA](https://www.jetbrains.com/idea/). The free/community edition is sufficient for working on R5. Import R5 into IntelliJ as a new project from existing sources. You can then create a run configuration for `com.conveyal.analysis.BackendMain`, which is the main class. You will need to configure the JVM options and properties file mentioned above.

By default, IntelliJ will follow common Gradle practice and build R5 using the ""Gradle wrapper"" approach, in which operating-system specific scripts are run that download and install a specific version of Gradle in the projet directory. We have encountered problems with this approach where IntelliJ seems to have insufficient control over the build/run/debug cycle. IntelliJ has its own internal implementation of the Gradle build process, and in our experience this works quite smoothly and is better integrated with the debug cycle. To switch to this appraoch, in the Gradle section of the IntelliJ settings, choose ""Build and run using IntelliJ IDEA"" and ""Run tests using IntelliJ IDEA"". Below that you may also want to choose ""Use Gradle from specified location"" to use your local system-wide copy.

## Structured Commit Messages

We use structured commit messages to help generate changelogs.

The first line of these messages is in the following format: `<type>(<scope>): <summary>` 

The `(<scope>)` is optional and is often a class name. The `<summary>` should be in the present tense. The type should be one of the following:

- feat: A new feature from the user point of view, not a new feature for the build.
- fix: A bug fix from the user point of view, not a fix to the build.
- docs: Changes to the user documentation, or to code comments.
- style: Formatting, semicolons, brackets, indentation, line breaks. No change to program logic.
- refactor: Changes to code which do not change behavior, e.g. renaming a variable.
- test: Adding tests, refactoring tests. No changes to user code.
- build: Updating build process, scripts, etc. No changes to user code.
- devops: Changes to code that only affect deployment, logging, etc. No changes to user code.
- chore: Any other changes causing no changes to user code.

The body of the commit message (if any) should begin after one blank line. 

From 2018 to 2020, we used major/minor/patch release numbering as suggested by https://www.conventionalcommits.org. Starting in 2021, we switched to major/minor release numbering, incrementing the minor version with regular feature releases and the major version only when there are substantial changes to the cluster computing components of our system. Because there is no public API at this time, the conventional definition of breaking changes under semantic versioning does not apply. 
",236,236,15,215,transportation,"[accessibility, gtfs, modeling, planning, transit, transportation]",00000
14,spopt,pysal,pysal,https://github.com/pysal/spopt,https://api.github.com/repos/pysal/spopt,Spatial Optimization,"
<p align=""center"">
<img src=""docs/_static/images/pysal_banner.svg"" width=""370"" height=""200"" />
</p>

# `spopt`: Spatial Optimization

#### Regionalization, facility location, and transportation-oriented modeling

![tag](https://img.shields.io/github/v/release/pysal/spopt?include_prereleases&sort=semver)
[![Continuous Integration](https://github.com/pysal/spopt/actions/workflows/testing.yml/badge.svg)](https://github.com/pysal/spopt/actions/workflows/testing.yml)
[![codecov](https://codecov.io/gh/pysal/spopt/branch/main/graph/badge.svg)](https://codecov.io/gh/pysal/spopt)
[![Documentation](https://img.shields.io/static/v1.svg?label=docs&message=current&color=9cf)](http://pysal.org/spopt/)
[![License](https://img.shields.io/badge/License-BSD%203--Clause-blue.svg)](https://opensource.org/licenses/BSD-3-Clause)
[![Code style: black](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/psf/black)
[![status](https://joss.theoj.org/papers/1413cf2c0cf3c561386949f2e1208563/status.svg)](https://joss.theoj.org/papers/1413cf2c0cf3c561386949f2e1208563)
[![DOI](https://zenodo.org/badge/DOI/10.5281/zenodo.4444156.svg)](https://doi.org/10.5281/zenodo.4444156)

Spopt is an open-source Python library for solving optimization problems with spatial data. Originating from the `region` module in [PySAL (Python Spatial Analysis Library)](http://pysal.org), it is under active development for the inclusion of newly proposed models and methods for regionalization, facility location, and transportation-oriented solutions. 

### Regionalization

```python
import spopt, libpysal, geopandas, numpy
mexico = geopandas.read_file(libpysal.examples.get_path(""mexicojoin.shp""))
mexico[""count""] = 1
attrs = [f""PCGDP{year}"" for year in range(1950, 2010, 10)]
w = libpysal.weights.Queen.from_dataframe(mexico)
mexico[""count""], threshold_name, threshold, top_n = 1, ""count"", 4, 2
numpy.random.seed(123456)
model = spopt.region.MaxPHeuristic(mexico, w, attrs, threshold_name, threshold, top_n)
model.solve()
mexico[""maxp_new""] = model.labels_
mexico.plot(column=""maxp_new"", categorical=True, figsize=(12,8), ec=""w"");
```
<p align=""center"">
<img src=""docs/_static/images/maxp.svg"" height=""350"" />
</p>

### Locate
```python
from spopt.locate import MCLP
from spopt.locate.util import simulated_geo_points
import numpy, geopandas, pulp, spaghetti

solver = pulp.PULP_CBC_CMD(msg=False, warmStart=True)
lattice = spaghetti.regular_lattice((0, 0, 10, 10), 9, exterior=True)
ntw = spaghetti.Network(in_data=lattice)
street = spaghetti.element_as_gdf(ntw, arcs=True)
street_buffered = geopandas.GeoDataFrame(
    geopandas.GeoSeries(street[""geometry""].buffer(0.5).unary_union),
    crs=street.crs,
    columns=[""geometry""],
)
client_points = simulated_geo_points(street_buffered, needed=100, seed=5)
ntw.snapobservations(client_points, ""clients"", attribute=True)
clients_snapped = spaghetti.element_as_gdf(
    ntw, pp_name=""clients"", snapped=True
)
facility_points = simulated_geo_points(street_buffered, needed=10, seed=6)
ntw.snapobservations(facility_points, ""facilities"", attribute=True)
facilities_snapped = spaghetti.element_as_gdf(
    ntw, pp_name=""facilities"", snapped=True
)
cost_matrix = ntw.allneighbordistances(
    sourcepattern=ntw.pointpatterns[""clients""],
    destpattern=ntw.pointpatterns[""facilities""],
)
numpy.random.seed(0)
ai = numpy.random.randint(1, 12, 100)
mclp_from_cost_matrix = MCLP.from_cost_matrix(cost_matrix, ai, 4, p_facilities=4)
mclp_from_cost_matrix = mclp_from_cost_matrix.solve(solver)
```
*see [notebook](https://github.com/pysal/spopt/blob/main/notebooks/mclp.ipynb) for plotting code*
<p align=""center"">
<img src=""docs/_static/images/mclp.png"" height=""350"" />
</p>

## Examples
More examples can be found in the [Tutorials](https://pysal.org/spopt/tutorials.html) section of the documentation.
- [Max-p-regions problem](https://pysal.org/spopt/notebooks/maxp.html)
- [Skater](https://pysal.org/spopt/notebooks/skater.html)
- [Region K means](https://pysal.org/spopt/notebooks/reg-k-means.html)
- [Facility Location Real World Problem](https://pysal.org/spopt/notebooks/facloc-real-world.html)

All examples can be run interactively by launching this repository as a [![Binder](https://mybinder.org/badge_logo.svg)](https://mybinder.org/v2/gh/pysal/spopt/main).

## Requirements
- [scipy](http://scipy.github.io/devdocs/)
- [numpy](https://numpy.org/devdocs/)
- [pandas](https://pandas.pydata.org/docs/)
- [networkx](https://networkx.org/)
- [libpysal](https://pysal.org/libpysal/)
- [scikit-learn](https://scikit-learn.org/stable/)
- [geopandas](https://geopandas.org/)
- [pulp](https://coin-or.github.io/pulp/)
- [shapely](https://shapely.readthedocs.io/en/stable/)
- [spaghetti](https://github.com/pysal/spaghetti)

## Installation
spopt is available on the [Python Package Index](https://pypi.org/). Therefore, you can either install directly with pip from the command line:
```
$ pip install -U spopt
```
or download the source distribution (.tar.gz) and decompress it to your selected destination. Open a command shell and navigate to the decompressed folder. Type:
```
$ pip install .
```
You may also install the latest stable spopt via conda-forge channel by running:
```
$ conda install --channel conda-forge spopt
```

## Related packages

* Region
* Locate
  * [`allagash`](https://github.com/apulverizer/allagash)
  * [`maximum-coverage-location`](https://github.com/cyang-kth/maximum-coverage-location)
  * [`p-center`](https://github.com/antoniomedrano/p-center)
  * [`pyspatialopt`](https://github.com/apulverizer/pyspatialopt)

## Contribute

PySAL-spopt is under active development and contributors are welcome.

If you have any suggestions, feature requests, or bug reports, please open new [issues](https://github.com/pysal/spopt/issues) on GitHub. To submit patches, please review [PySAL's documentation for developers](https://pysal.org/docs/devs/), the PySAL [development guidelines](https://github.com/pysal/pysal/wiki), the `spopt` [contributing guidelines](https://github.com/pysal/spopt/blob/main/.github/CONTRIBUTING.md) before  opening a [pull request](https://github.com/pysal/spopt/pulls). Once your changes get merged, you’ll automatically be added to the [Contributors List](https://github.com/pysal/spopt/graphs/contributors).


## Support
If you are having trouble, please [create an issue](https://github.com/pysal/spopt/issues), [start a discussion](https://github.com/pysal/spopt/discussions), or talk to us in the [gitter room](https://gitter.im/pysal/spopt).

## Code of Conduct

As a PySAL-federated project, `spopt` follows the [Code of Conduct](https://github.com/pysal/governance/blob/main/conduct/code_of_conduct.rst) under the [PySAL governance model](https://github.com/pysal/governance).


## License

The project is licensed under the [BSD 3-Clause license](https://github.com/pysal/spopt/blob/main/LICENSE.txt).


## Citation

If you use PySAL-spopt in a scientific publication, we would appreciate using the following citations:

```
@misc{spopt2021,
    author    = {Feng, Xin, and Gaboardi, James D. and Knaap, Elijah and
                Rey, Sergio J. and Wei, Ran},
    month     = {jan},
    year      = {2021},
    title     = {pysal/spopt},
    url       = {https://github.com/pysal/spopt},
    doi       = {10.5281/zenodo.4444156},
    keywords  = {python,regionalization,spatial-optimization,location-modeling}
}

@article{spopt2022,
    author    = {Feng, Xin and Barcelos, Germano and Gaboardi, James D. and
                Knaap, Elijah and Wei, Ran and Wolf, Levi J. and
                Zhao, Qunshan and Rey, Sergio J.},
    year      = {2022},
    title     = {spopt: a python package for solving spatial optimization problems in PySAL},
    journal   = {Journal of Open Source Software},
    publisher = {The Open Journal},
    volume    = {7},
    number    = {74},
    pages     = {3330},
    url       = {https://doi.org/10.21105/joss.03330},
    doi       = {10.21105/joss.03330},
}
```

## Funding

This project is/was partially funded through:

[<img align=""middle"" src=""docs/_static/images/nsf_logo.png"" width=""75"">](https://www.nsf.gov/index.jsp) National Science Foundation Award #1831615: [RIDIR: Scalable Geospatial Analytics for Social Science Research](https://www.nsf.gov/awardsearch/showAward?AWD_ID=1831615)

<!-- [<img align=""middle"" src=""docs/_static/image/IMAGE2.png"" width=""150"">](link2) Some text2: [Project title 2](another_link2) -->
",217,217,13,23,transportation,"[facility-location, location-allocation, location-modeling, python, regionalization, resource-planning, routing, spatial-analysis, spatial-optimization, transportation]",00000
15,react-layer-stack,lexfro,N/A,https://github.com/lexfro/react-layer-stack,https://api.github.com/repos/lexfro/react-layer-stack,Layering system for React. Useful for popover/modals/tooltip/dnd application,"# DEPRICATED

[Live demo](https://fckt.github.io/react-layer-stack/)

[Chat](https://gitter.im/react-layer-stack/Lobby)

### Rationale
`react`/`react-dom` comes with 2 basic assumptions/ideas:
- every UI is hierarchical naturally. This why we have the idea of ""`components` wrap each other""
- `react-dom` mounts (physically) child component to its parent DOM node by default

The problem is that sometimes the second property isn't what you want in your specific case. Sometimes you want to mount your component into the different physical DOM node and hold the logical parent-child connection at the same time.

Canonical example is a Tooltip-like component: at some point, during development process, you could find that you need to add some description for your UI element: it'll be rendered in some fixed layer and it should know its coordinates (which are corresponding UI element coord or mouse coords) and at the same time it needs information whether it should be shown right now or not, its content and some context from parent components.

```javascript
import React, { Component } from 'react';
import { Layer, LayerToggle } from 'react-layer-stack';
import FixedLayer from './demo/components/FixedLayer';

class Demo extends Component {
  render() {
    return (
      <div>
        <Layer to=""screen"" id=""lightbox2"">{ (_, content) => // Layer should have an unique ID
          <FixedLayer style={ { marginRight: '15px', marginBottom: '15px' } }>
            { content }
          </FixedLayer>
        }</Layer>

        <LayerToggle for=""lightbox2"">{({ show, hide }) => ( // Layer is accessible from any part of the tree. 
                                                            // There could be several Toggles for one Layer.
            <button onMouseLeave={ hide } onMouseMove={ ({ pageX, pageY }) => {
              show(
                <div style={{
                      left: pageX, top: pageY + 20, position: ""absolute"",
                      padding: '10px',
                      background: 'rgba(0,0,0,0.7)', color: '#fff', borderRadius: '5px',
                      boxShadow: '0px 0px 50px 0px rgba(0,0,0,0.60)'}}>
                   “There has to be message triage. If you say three things, you don’t say anything.”
                </div>)
            }}>Yet another button. Move your pointer to it.</button> )}
          </LayerToggle>
      </div>
    )
  }
}
```

Another option could be use one of dozens complete implementations with different properties:
https://js.coach/?search=popover

### More examples
https://github.com/fckt/react-layer-stack/blob/master/demo/src/Demo.js

### Live demo
https://fckt.github.io/react-layer-stack/

### Installation
```
npm install --save react-layer-stack
```

### API

3 components with a few properties.

#### `<Layer />`

`id: string` - a Layer identificator. There could be only one layer with the same `id`

`to` (optional) - the mount point to mount to. If `to` is not defined the layer will be rendered right in place

`use: Array` (optional) - array with context (closure) variables. Useful if you want to update the Layer if closure variables are changed

`defaultArgs: Array` (optional) - initial arguments for a Layer

`defaultShow: Boolean` (optional)

`children: callback({ isActive, show: callback(args), showOnlyMe, hide, hideAll }, ...args): ReactElement` - will be rendered into 

#### `<LayerToggle />`

`LayerToggle` is a helper to have an access for show/hide callbacks and the current state of the layer. There could be multiple `LayerToggle`s for the same `Layer`.

`for: string` - a Layer identificator which LayerToggle corresponds to

`children: callback({ isActive, show: callback(args), showOnlyMe, hide, hideAll }): ReactElement` - will be mounted (rendered) directly to its parent

#### `<LayerStackMountPoint />`

This is a mount point for `Layer`s.

`id: string` (optional) - you can have multiple `LayerStackMountPoint` which could have different ID's

`children: callback({ views, displaying, show: callback(id, args), hide, hideAll, mountPointId, mountPointArgs }): ReactElement` - you can choose different strategies how to render `Layers` in `LayerStackMountPoint` instead of the default one


### Real-world usage example

Public API consist 2 key components: `Layer`, `LayerStackMountPoint` and 1 additional: `LayerToggle` (sometimes toggle needs to know which popover is open now).
Set the `LayerStackMountPoint` somewhere on the top of the tree:

```javascript
import { LayerStackProvider, LayerStackMountPoint } from 'react-layer-stack'
// ...
//  render() {
        return (
            <LayerStackProvider>
              <Container>
                <LayerStackMountPoint id=""screen""/>
                <AppBar />
                <Container className={styles.container}>
                  {children}
                </Container>
              </Container>
            </LayerStackProvider>
        )
//  }
```

Define your `Layer`. This example shows how to propagate variables from lexical context (https://developer.mozilla.org/en/docs/Web/JavaScript/Closures) to the `Layer`, which will be displayed in the `LayerStackMountPoint`. Each layer should have an `id` and `use` properties. `use` property is needed to determine if we should update the lexical context of the anonymous function which renders `Modal` into `Layer` if `Cell` is updated.

```javascript
import { Layer, LayerToggle } from 'react-layer-stack'
// ... for each `object` in array of `objects`
const modalId = 'DeleteObjectConfirmation' + objects[rowIndex].id
return (
    <Cell {...props}>
        // the layer definition. The content will show up in the LayerStackMountPoint when `show(modalId)` be fired in LayerToggle
        <Layer to=""screen"" use={[objects[rowIndex], rowIndex]} id={modalId}> {({
            hide, // alias for `hide(modalId)`
            index } // useful to know to set zIndex, for example
            , e) => // access to the arguments (click event data in this example)
          <Modal onClick={ hide } zIndex={(index + 1) * 1000}>
            <ConfirmationDialog
              title={ 'Delete' }
              message={ ""You're about to delete to "" + '""' + objects[rowIndex].name + '""' }
              confirmButton={ <Button type=""primary"">DELETE</Button> }
              onConfirm={ this.handleDeleteObject.bind(this, objects[rowIndex].name, hide) } // hide after confirmation
              close={ hide } />
          </Modal> }
        </Layer>
        
        // this is the toggle for Layer with `id === modalId` can be defined everywhere in the components tree
        <LayerToggle for={ modalId }> {({show}) => // show is alias for `show(modalId)`
          <div style={styles.iconOverlay} onClick={ (e) => show(e) }> // additional arguments can be passed (like event)
            <Icon type=""trash"" />
          </div> }
        </LayerToggle>
    </Cell>)
// ...
```

### ReactDOM.unstable_createPortal
Facebook team is working on the similar [feature](https://github.com/facebook/react/blob/d28ac9eea0cad6be949cc9d3f973cf548e89bf97/src/renderers/dom/fiber/__tests__/ReactDOMFiber-test.js#L254) called ""portals"" (by analogy with https://github.com/tajo/react-portal). That approach uses `ReactDOM` (API) which is fatal if browser is not the only target. There are [other considerations](https://github.com/facebook/react/pull/8386#issuecomment-265628702) also. 

### Alternatives
The is a lot of alternative ways to archive the desirable **bottom-to-up** link b/w components.

The most obvious (and naiive as well) way is to use redux (or another flux/data lib) as a transport to send data from one DOM branch to another. It's good and robust solution, but the problem is that it just feels like overkill. It seems not universal also, could consume some additional time to implement and grasp afterwards, not because of complications, but because you have to reinvent the same pattern again and again (slightly different in each case, see https://stackoverflow.com/questions/35623656/how-can-i-display-a-modal-dialog-in-redux-that-performs-asynchronous-actions).

Another solution is to use on of ready-to-use components. But sometimes are you need slightly different behavior/look and more productive to implement home-grown ad-hock solution.

And the last option is to find library like https://github.com/tajo/react-portal or https://react-bootstrap.github.io/react-overlays/, designed to address the needs of **bottom-to-up** communication. These libs are often quite opinionated to their cases and doesn't solve the problem in its roots. The goal of **react-layer-stack** is to give an answer how to organize **bottom-to-up** communication in the most natural, reasonable and flexible way.

### The future
Obviously there is a lot of applications for the Layer API (https://github.com/fckt/react-layer-stack/blob/master/README.md#layer-). So, you can declare the entire React app as a Layer and manage it from the outer app!

### Images to understand the whole thing
#### View layers stack
![Symlink](http://cfs6.tistory.com/upload_control/download.blog?fhandle=YmxvZzE1NzczMkBmczYudGlzdG9yeS5jb206L2F0dGFjaC8wLzEzMDAwMDAwMDAyMi5qcGc%3D)

#### Layer id and ""use"" property (sym/soft link)
![Symlink](http://1.bp.blogspot.com/-gZMz1nF3GC0/UiyehOS_bWI/AAAAAAAABQI/BpYyEtadcEg/s640/profiles1.png)

### Related Stackoverflow q&a
- http://stackoverflow.com/a/40461655/524034
- http://stackoverflow.com/questions/40443160/bootstrap-modal-like-behavior-in-react
- http://stackoverflow.com/questions/40444788/rendering-a-modal-in-react
- http://stackoverflow.com/questions/39805544/showing-list-of-buttons-displaying-modals-in-reactjs
- http://stackoverflow.com/questions/39913593/dynamically-displaying-data-from-a-clickable-table-row-into-a-modal

The easiest way to support `react-layer-stack` is to upvote the answers below.
",159,159,4,7,transportation,"[bottom-up, dropdown, flyout, layer, layers, lightbox, modal, overlay, popover, popup, portal, react, react-component, tooltip, transportation, window, windowing, zindex]",00000
16,Complete_Street_Rule,d-wasserman,N/A,https://github.com/d-wasserman/Complete_Street_Rule,https://api.github.com/repos/d-wasserman/Complete_Street_Rule,The Complete Street Rule for ArcGIS CityEngine is a scenario oriented design tool intended to enable users to quickly create procedurally generated multimodal streets. ,"# What is the Complete Street Rule?
The Complete Street Rule is a scenario oriented design tool intended to enable users to quickly create procedurally generated multimodal streets in ArcGIS CityEngine. The rule incorporates knowledge and ideas from various sources of transportation planning guidance including NACTO Design Guidelines, AASHTO Design Recommendations, and MUTCD standards. The goal of the rule is to enable the 3D representation of a diversity of street configurations to support multimodal planning in urban areas and provide some basis for before and after comparisons of street treatments and transportation investments in ArcGIS CityEngine. Alongside being a quick response parametric visualization tool for streets, this street rule has dynamic performance metrics and reports that react to changes in a street's configuration and related parameters. These performance metrics provide a template for how procedural rules can create a responsive connection between design, metrics, and visualization that enables the rapid exploration and communication of different design scenarios. This street rule is well suited to representing transportation planning treatments for complete streets and common highway configurations that might include shoulders, jersey barriers, and HOV Lanes. By being a part of ArcGIS CityEngine, the Complete Street Rule can create 3D models of streets that can be exported to different 3D formats, scene layer packages to be shared over the web, and even exports compatible with game engines such as Unity & Unreal to create virtual experiences as part of public outreach efforts. 

This is an updated repository for a modified version of the ESRI Complete Street rule by the original rule author.

## Scenario Oriented Design Tool

![alt tag](/images/CSRuleCEDemo.gif)

# Instructions

If you are new to using CityEngine, then the instructions on this [page](Instructions.md) provide step by step instructions on how to open the project or integrate the rule into an existing project. 


# Key Features of the Complete Street Rule

* Enables Quick Visualization of Multiple Features of Complete Streets: The rule can be used to quickly iterate on high level cross-sectional designs for streets through changes to its parameters. The features that can be visualized include bike lanes, bike lane buffers, shared-use lanes, bus lanes, HOV lanes, parking lanes, medians, two-way left turn lanes, and sidewalks featuring trees, street furniture, and other amenities. 

* Dynamic Performance Metrics & Analytics: The Complete Street rule includes a diversity of reports that can be leveraged inside of CityEngine to power dynamic dashboards that react to changes to a street's configuration and design. The supported metrics include modal preference metrics such as level of traffic stress for bicyclists, metrics related to curbside allocations and parking space counts, metrics related to how much space on the street overall is allocated to different modes of transport, vegetation & impervious cover amounts, and speed related metrics.  

* Support for Curbside Management: The rule's options for parallel parking include options to reallocate curb space to other uses. These curbspace management options provide a template for how cities can reallocate curbspace to support micro-mobility (scooters/bikeshare/DoBi), transit operations, freight loading zones, and passenger drop-off locations to support TNC/Taxi operations and in preparation for supporting shared autonomous vehicles.

* Mode Focused Thematics: Allows a user to highlight specific improvements to a street with custom color choices. For example, if you add a bike lane and select ""Bicycle Highlight"" thematic, the solid color attribute will only highlight added bike lanes. Also, the addition of a All Mode Preference option helps visualize all the mode preference reports at once. There are also options for NACTO themed highlights of the street, and preliminary support for semantic highlighting for the purpose of supporting synthetic data generation for deep learning models. 

* CityEngine Handles Support: Local Edits allow randomly generated and spaced assets to be moved within a CityEngine model rather than post processed in Photoshop or some other 3D modeling software. Current assets and elements that can be edited with handles include: Street Lamps|Traffic Lights|Trees|Benches|Curbside Allocations.

* Support for Multiple Levels of Detail (LOD): If LOD is set to High, the street will now pick default population parameters to make the street seem occupied. LOD Settings are now Low (Asset choice changes to reduce polygon count), Moderate (high polygon assets/choices), and High/Very High (high polygon assets and populated streets).

* Support for Asset Replacement: Use of stencils instead of multi-color textures enable clean asset replacements in a variety of platforms. In addition, the rule will label relevant objects and shapes based on their location making it easier to replace assets in platforms such as TwinMotion, Unreal Engine, or Unity. 

[![alt tag](/images/Road_Diet_Update.jpg)](https://www.youtube.com/watch?v=6t4TYrB0TZ4)

# Citations
If you use the complete street rule in academic research or as part of professional reports, please cite the rule as the following: 


Wasserman, D. Complete Street Rule. (2015) GitHub repository, https://github.com/d-wasserman/Complete_Street_Rule.
",147,147,13,3,transportation,"[arcgis-cityengine, cga, cityengine, complete, environmental-modelling, geometry, procedural-generation, simulation, street-configuration, street-rule, streets, transportation, treatments, urban-design, urban-planning]",00000
17,tidytransit,r-transit,r-transit,https://github.com/r-transit/tidytransit,https://api.github.com/repos/r-transit/tidytransit,R package for working with GTFS data,"[![CRAN
status](https://www.r-pkg.org/badges/version-ago/tidytransit?)](https://cran.r-project.org/package=tidytransit)
[![Project Status: Active](https://www.repostatus.org/badges/latest/active.svg)](https://www.repostatus.org/#active) 
[![](https://cranlogs.r-pkg.org/badges/tidytransit)](https://cran.r-project.org/package=tidytransit)
[![](https://cranlogs.r-pkg.org/badges/grand-total/tidytransit?color=lightgrey)](https://cran.r-project.org/package=tidytransit)
[![R build
status](https://github.com/r-transit/tidytransit/workflows/R-CMD-check/badge.svg)](https://github.com/r-transit/tidytransit/actions?query=workflow%3AR-CMD-check)
[![codecov](https://codecov.io/gh/r-transit/tidytransit/branch/master/graph/badge.svg)](https://app.codecov.io/gh/r-transit/tidytransit/)

# tidytransit

Use tidytransit to map transit stops and routes, calculate travel times and transit
frequencies, and validate transit feeds. Tidytransit reads the 
[General Transit Feed Specification](https://gtfs.org/) into 
[tidyverse](https://tibble.tidyverse.org/) and 
[simple features](https://en.wikipedia.org/wiki/Simple_Features) data frames. 
Tidytransit can be used to:
- [read GTFS feeds into R](https://r-transit.github.io/tidytransit/reference/read_gtfs.html)
- [calculate travel times between transit stops](https://r-transit.github.io/tidytransit/reference/travel_times.html)
- [convert stops and routes to sf data frames](https://r-transit.github.io/tidytransit/reference/gtfs_as_sf.html)
- [validate transit feeds and more](https://r-transit.github.io/tidytransit/reference/index.html)

Have a look at the following vignettes to see how tidytransit can be used to analyse a feed:

- [introduction](https://r-transit.github.io/tidytransit/articles/introduction.html) 
- [calendar and service patterns](https://r-transit.github.io/tidytransit/articles/servicepatterns.html)
- [create time tables for stops](https://r-transit.github.io/tidytransit/articles/timetable.html)
- [frequency and headway calculations](https://r-transit.github.io/tidytransit/articles/frequency.html)  

## Installation

This package requires a working installation of
[sf](https://github.com/r-spatial/sf#installing).

Install tidytransit from CRAN:

``` r
install.packages('tidytransit')
```

For the development version from Github:

```r
# install.packages(""devtools"")
devtools::install_github(""r-transit/tidytransit"")
```

## GTFS-related packages

-   [`gtfsio`](https://github.com/r-transit/gtfsio) R package to read and write gtfs feeds, tidytransit builds on gtfsio
-   [`gtfstools`](https://github.com/ipeaGIT/gtfstools) Tools for editing and analysing transit feeds
-   [`gtfsrouter`](https://github.com/UrbanAnalyst/gtfsrouter) Package for public transport routing 
-   [`gtfs2gps`](https://github.com/ipeaGIT/gtfs2gps) Converting public transport data from GTFS format to GPS-like records


## Contributing

Please feel free to issue a pull request or [open an issue](https://github.com/r-transit/tidytransit/issues/new).
",127,127,14,2,transportation,"[cran, gtfs, public, public-transport, tidyverse, transit, transit-data, transport, transportation]",00000
18,sthlmtraveling,johannilsson,N/A,https://github.com/johannilsson/sthlmtraveling,https://api.github.com/repos/johannilsson/sthlmtraveling,"STHLM Traveling helps you plan your journeys using data from Stockholm Public Transport (SL, Stockholms Lokaltrafik) on your Android phone","{'message': 'Not Found', 'documentation_url': 'https://docs.github.com/rest/repos/contents#get-repository-content'}",112,112,15,12,transportation,"[android-app, java, traffic, transportation]",00000
19,Motoro,blockchain-IoT,blockchain-IoT,https://github.com/blockchain-IoT/Motoro,https://api.github.com/repos/blockchain-IoT/Motoro,Smart contracts for decentralized rentals of vehicles.,"<img src=""https://secure.meetupstatic.com/photos/event/6/d/d/highres_445201757.jpeg"" alt=""Toptal"" width=""233"" align=""left"" />
<img src=""http://res.cloudinary.com/hkhuw4b7v/image/upload/v1500318899/VIKINGGARAGE-logo-1200-600.png"" alt=""VIKING GARAGE"" width=""233"" align=""right"" />
<br clear=""both"" />

# Motoro blockchain IoT

Smart contracts for decentralized rentals of vehicles.

<img src=""https://uploads.toptal.io/blog/image/125357/toptal-blog-image-1517930970029-b694f3e94eed9b254b2c1e0cbd3a0d00.png"" alt=""Motoro blockchain IoT the future of transportation"" width=""100%"" />

## Our goal

**To research and develop an infrastructure for decentralized (peer-to-peer) rentals of motorised machines.**

We create the DApps (decentralized applications) for blockchain, to use as agreement templates and for processing transactions for vehicle rentals, trade, services. We integrate the machines we use for transportation and work in the physical world using IoT embedded systems. Our aim is to achieve a trust-less, decentralized consensus. 

We develop the infrastructure as libraries and modular smart contracts for the Ethereum blockchain, with an API in Solidity and Node.js and an interface in React. We aim to provide an end-to-end solution – blockchain through software to hardware.

The goal is support local machine owners and renters, leverage existing machines and make it easier to access direct machine rentals. Read more about it in our article [Motoro – blockchain IoT the future of transportation](https://www.toptal.com/ethereum/motoro-iot-in-transportation). We build on popular open source projects, such as the [Truffle suite](http://truffleframework.com/) and [OpenZeppelin smart contracts](https://openzeppelin.org/). We will support the startups which want to use Motoro blockchain IoT.

## Current state

### March 2018
- Merged in the vehicle registration procedure PR by @koscielnik
- Merged in the initial DApp UI interface for Machine Owner registration by @ocet
- Refactore the DApp's structure completely
- Updated Issue and Pull Request templates

### February 2018

Added another Smart Contract, fully tested, which can be used for selling and re-selling products and services. Blockchain IoT workshop in Campus Warsaw, Zabkowska 33C in Warsaw, Poland, on 20 February 2018 at 6.30 pm.

### January 2018 

We have prototypes of two crucial Smart Contracts, for (1) registering owners and new machines and (2) renting out motorcycles.

### November 2017

The current state of the project is that we have an initial Dapp, which includes Smart Contracts, a Node.js build script, a React front-end, and a few tests. The Smart Contract allow for new machines to signup, and assign a counter to every machine. The idea for this prototype is to increment the counter, every time the machine (motorcycle) is started – basically an ignition counter.

## Local development

### local Etherum blockchain – Ganache

For development, we will use the personal Ethereum blockchain, with a really handy GUI: Ganache. Please download the app from [Ganache @ Truffle Framework](http://truffleframework.com/ganache/) and then just start it. We use port 7545 for local development.

#### Truffle suite

The full-stack DApp uses [Truffle](http://truffleframework.com/) [React box](http://truffleframework.com/boxes/react).

```
npm i -g truffle
```

### Set up local repo

Basically just git clone the repo, and install its dependencies:

```
git clone https://github.com/blockchain-IoT/blockchain-IoT-core.git
cd blockchain-IoT-core
npm i
```

### Compile and migrate the contracts

compile the contracts:

```
truffle compile
```

migrate them to the local Ethereum node:
```
truffle migrate
```

### Start the DApp

run the Node.js / React front-end:

```
npm start
```

and check that it all works, by accessing the frontend through [http://localhost:3000](http://localhost:3000).


## UPDATE new tutorial series – Ethereum Development Walkthrough

* [Part 1](https://hackernoon.com/ethereum-development-walkthrough-part-1-smart-contracts-b3979e6e573e)
* [Part 2](https://hackernoon.com/ethereum-development-walkthrough-part-2-truffle-ganache-geth-and-mist-8d6320e12269)
* [Part 3](https://hackernoon.com/ethereum-development-walkthrough-part-3-security-limitations-and-considerations-d482f05278b4)


## Contributing
Please refer to the [Contributing guidelines for this project](https://github.com/blockchain-IoT/blockchain-IoT-core/blob/master/CONTRIBUTING.md).

## Communication
Realtime communication happens on [Slack](https://blockchainiot.slack.com/open)

Task communication happens here, through [Issues](https://github.com/blockchain-IoT/blockchain-IoT-core/issues). We use a Kanban board, available under the [Project](https://github.com/blockchain-IoT/blockchain-IoT-core/projects) tab.

## Slack
https://blockchainiot.slack.com/open

If you did not get an invitation, please reach out to [Michal](https://github.com/michalmikolajczyk), michal.mikolajczyk at toptal.com

## Whitepaper draft
https://docs.google.com/document/d/1QtdCi4zABw2B0t4zUHncf1yX2hFsMzpVlKlWgtVJi-w/edit#
",104,104,21,9,transportation,"[blockchain, blockchain-iot, consensus, dapp, decentralized, ethereum, infrastructure, iot, platform, protocol, solidity, transportation, truffle, vehicle, workshop]",00000
20,transitland-datastore,transitland,transitland,https://github.com/transitland/transitland-datastore,https://api.github.com/repos/transitland/transitland-datastore,Transitland v1 core components. Deprecated and only maintained occasionally. See Transitland v2.,"[![Circle CI](https://circleci.com/gh/transitland/transitland-datastore.png?style=badge)](https://circleci.com/gh/transitland/transitland-datastore)

# Transitland Datastore

A community-run and -edited timetable and map of public transit service around the world.

***For more information about Transitland as a whole, and how to use the Datastore in particular, view the [Transitland documentation site](https://transit.land/documentation).***

This readme describes the Transitland Datastore behind the scenes: a Ruby on Rails web service (backed by Postgres/PostGIS), along with an asynchronous Sidekiq queue (backed by Resque) that runs Ruby and Python data-ingestion libraries.

Note that this web application is designed to run at `https://transit.land/api/v1` While you're welcome to try hosting your own instance, please keep in mind that the Transitland Datastore is intended to be a centralized source of data run by a community in one place (much like [the Rails app that powers the openstreetmap.org API](https://github.com/openstreetmap/openstreetmap-website)).

## Technical documentation

- [API endpoints](https://transit.land/documentation/datastore/api-endpoints.html)
- [Local instructions](doc/local-instructions.md)
- [Configuration reference](doc/configuration.md)
- [Development practices](doc/development-practices.md)
- [Conflation with OSM](doc/conflation-with-osm.md)
- [Admin interface](doc/admin-interface.md)
- [Authentication](doc/authentication.md)

## See also

- [changelog](CHANGELOG.md)
- [contributing](CONTRIBUTING.md)
- [license](LICENSE.txt)
",104,104,15,55,transportation,"[datasets, geo, gtfs, open-data, transit, transportation]",00000
21,datatools-ui,ibi-group,ibi-group,https://github.com/ibi-group/datatools-ui,https://api.github.com/repos/ibi-group/datatools-ui,Core application for IBI's transit data tools suite.,"# datatools-ui

[![Join the chat at https://matrix.to/#/#transit-data-tools:gitter.im](https://badges.gitter.im/repo.png)](https://matrix.to/#/#transit-data-tools:gitter.im)

The core application for IBI Group's TRANSIT-Data-Tools suite. This application provides GTFS editing, management, validation, and deployment to OpenTripPlanner.

## Quick Start

A pre-configured datatools instance can be lauched via Docker by running

```bash
cd docker
cp ../configurations/default/env.yml.tmp ../configurations/default/env.yml
docker-compose up
```

from the datatools-ui directory. Datatools will then be running on port `9966`.

Deployment functionality will not work, and persistence may only work in certain cases (look into Docker volumes for more info).

## Configuration

This repository serves as the front end UI for the Data Manager application. It must be run in conjunction with [datatools-server](https://github.com/conveyal/datatools-server)

## Documentation

View the [latest release documentation](http://data-tools-docs.ibi-transit.com/en/latest/) at ReadTheDocs for more info on deployment and development as well as a user guide.

Note: `dev` branch docs (which refer to the default `branch` and are more up-to-date and accurate for most users) can be found [here](http://data-tools-docs.ibi-transit.com/en/dev/).

## Getting in touch

We have a Gitter [space](https://matrix.to/#/#transit-data-tools:gitter.im) for the full TRANSIT-Data-Tools project where you can post questions and comments.

## Shoutouts 🙏

<img src=""browserstack-logo-600x315.png"" height=""80"" title=""BrowserStack Logo"" alt=""BrowserStack Logo"" />

Big thanks to [BrowserStack](https://www.browserstack.com) for letting the maintainers use their service to debug browser issues.

<img src=""https://www.graphhopper.com/wp-content/uploads/2018/03/graphhopper-logo-small.png"" height=""25"" alt=""GraphHopper Logo"" />

Street snapping powered by the <a href=""https://www.graphhopper.com/"">GraphHopper API</a>.
",99,99,11,147,transportation,"[gtfs, opentripplanner, transit-routes, transit-schedule, transportation]",00000
22,otv2-platform,opentraffic,opentraffic,https://github.com/opentraffic/otv2-platform,https://api.github.com/repos/opentraffic/otv2-platform,An overview of the entire Open Traffic v2 platform and its components,"# Open Traffic v2 platform

## Contents

<!-- the following is generated by:
     1. npm install --save markdown-toc -g
     2. markdown-toc -i README.md
-->

<!-- toc -->

- [Introduction](#introduction)
- [Platform architecture](#platform-architecture)
  * [Overview diagram and description of components](#overview-diagram-and-description-of-components)
  * [More detailed component diagram](#more-detailed-component-diagram)
- [System components](#system-components)
  * [Basemap Generator](#basemap-generator)
    + [OSMLR](#osmlr)
    + [Valhalla routing graph tiles with OSMLR segment associations](#valhalla-routing-graph-tiles-with-osmlr-segment-associations)
  * [Reporter](#reporter)
  * [Datastore](#datastore)
  * [Data Privacy and Competitive Concerns](#data-privacy-and-competitive-concerns)
  * [Analyst User Interface](#analyst-user-interface)
  * [Routing engine](#routing-engine)
  * [Stand-alone traffic maps](#stand-alone-traffic-maps)

<!-- tocstop -->

## Introduction

Open Traffic is a global data platform to process anonymous positions of vehicles and smartphones into real-time and historical traffic statistics. We're building this in the open, using fully open-source software, with involvement from a growing list of partners.

After a successful proof-of-concept by the World Bank, Grab, and Conveyal (known as OTv1), Mapzen is working with the partners to build out a new version of the platform that will scale to have global coverage (known as OTv2). For more information on the partnerships behind Open Traffic and the OTv2 platform, see:

- [The World Bank Launches New Open Transport Partnership to Improve Transportation through Open Data](http://www.worldbank.org/en/news/press-release/2016/12/19/the-world-bank-launches-new-open-transport-partnership-to-improve-transportation-through-open-data) press release from the World Bank
- [Open Traffic Data to Revolutionize Transport](http://www.worldbank.org/en/news/feature/2016/12/19/open-traffic-data-to-revolutionize-transport) story from the World Bank
- [_World Bank + Mapzen + partners = open traffic data_](https://mapzen.com/blog/announcing-open-traffic/) on the Mapzen blog 

The following diagrams and documentation describe OTv2. For more information on OTv1, see the [opentraffic/architecture](https://github.com/opentraffic/architecture) repository.

## Platform architecture
### Overview diagram and description of components

The OTv2 platform is built of both distributed and centralized services:

![](images/otv2-overview-component-diagram.png)
<!-- To view and edit the original diagram: https://docs.google.com/drawings/d/12B5inmN1jrfIjJ2BQLnVJl3uW_g30OGr7DFiwA9nQTM/edit -->

From left to right the components in this diagram are:

1. **Open Traffic Basemap Producer** is a centralized service. On a regular basis, it ingests OpenStreetMap data and outputs the OSMLR segments against which traffic statistics are matched, reported, stored, and displayed.
2. **Open Traffic Reporter** is run by each organization that contributes probe data to Open Traffic. Each Reporter instance ingests GPS location streams, map-matches those locations against OSMLR segments, aggregates these locations into anonymous speed statistics.
3. **Open Traffic Datastore** receives and merges together the anonymous speed statistics from all of the Reporter instances. Datastore creates a variety of public data extracts from its historical records of traffic statistics, including space/time tile files to power the Analyst User Interface and routing graph tile files to power a traffic-influenced routing engine.
4. An instance of [Valhalla](https://github.com/valhalla), an open-source routing engine by Mapzen, serves as a **routing engine**.
5. **Open Traffic Analyst User Interface** serves as an easy-to-use view into Open Traffic's historical speed and observation count data, allowing basic querying by area, time, and route.

### More detailed component diagram

The same as above, with more detail on the specific pieces within each component and the data flows between components:

![](images/otv2-architecture-component-diagram.png)
<!-- To view and edit the original diagram: https://docs.google.com/drawings/d/17KOkCOvnq7WyUmsnmHoaQjarUO4eLqBFv7TIq0QY9ac/edit -->

## System components

### Basemap Generator

The Basemap Generator is a set of centralized processes that regularly create the road network data common to all other OTv2 components.

#### OSMLR

On a regular basis (likely quarter), the Basemap Generator runs the [OSMLR application](https://github.com/opentraffic/osmlr) to create traffic segments according to the [OSMLR tile spec](https://github.com/opentraffic/osmlr-tile-spec). Outputs are in protocol buffer and GeoJSON formats. The resulting worldwide OSMLR tile set is available for free use by all [through the Amazon Public Datasets program](https://mapzen.com/blog/osmlr-released-as-public-dataset/).

→ See [this blog post](https://mapzen.com/blog/open-traffic-osmlr-technical-preview) and [this blog post](https://mapzen.com/blog/osmlr-2nd-technical-preview/) for an introduction to OSMLR.

→ To download OSMLR segment tiles, go to [these S3 bucket listings](https://s3.amazonaws.com/osmlr/listing.html).

#### Valhalla routing graph tiles with OSMLR segment associations

On a regularly basis (weekly), the Basemap Generator combines OpenStreetMap data with OSMLR segments to create a set of Valhalla routing graph tiles. These routing graph tiles are available to power Valhalla for map-matching purposes, as is done inside the Open Traffic Reporter.

### Reporter

(In OTv1, this component was called the [Traffic Engine](https://github.com/opentraffic/traffic-engine).)

Reporter is run by each organization that is providing probe data to the Open Traffic platform. Reporter is distributed as a set of Docker containers, or can be run anywhere Java, Python, and [Apache Kafka](https://kafka.apache.org/) are available. Reporter can also be run as a script against historical speed archives, without Kafka.

Reporter performs the following steps:

1. Reformat incoming GPS-derived points to match the expected key names and structure
2. Collect points into a moving window. That is, a time-ordered slice of a single vehicle's positions.
3. Match the trajectory of points in the window to OSMLR segments, using the map-matching utilities provided by [Valhalla Meili](https://github.com/valhalla/valhalla/blob/master/docs/meili.md) and the Valhalla routing graph tiles created by the Basemap Producer
4. Pools matches to ensure they pass privacy thresholds
5. When privacy thresholds are met, send resulting binned times and observation counts to the centralized Open Traffic Datastore

→ See more documentation in [the Reporter repository](https://github.com/opentraffic/reporter).

→ The nature of map-matching and generating traffic statistics is probabilistic; noisy GPS input can produce variable results . See the [Reporter Quality Testing Rig](https://github.com/opentraffic/reporter-quality-testing-rig) for more information on how to evaluate and tune a Reporter deployment. Also described in a series of blog posts: [one](https://mapzen.com/blog/map-matching-validation/), [two](https://mapzen.com/blog/data-driven-map-matching/), [three](https://mapzen.com/blog/map-matching-post-processing/), [four](https://mapzen.com/blog/map-matching-built-env/).

### Datastore

(In OTv1, this component was called the Data Pool. Its API was called the [Traffic Engine App](https://github.com/opentraffic/traffic-engine-app).)

The [Datastore](https://github.com/opentraffic/datastore) ingests input from distributed [Reporter](https://github.com/opentraffic/reporter) instances. It stores the aggregated statistics as ***histogram tile files***.

From the histogram tile files, Datastore produces a variety of public data extracts:

- historical average speed tiles (`.spd` tiles) → [documentation](https://github.com/opentraffic/datastore/blob/master/docs/public_data_extracts.md#historical-average-speed-tiles)
- intersection delay and queue length tiles (`.nex` tiles) → [documentation](https://github.com/opentraffic/datastore/blob/master/docs/public_data_extracts.md#intersection-delays-and-queue-lengths)
- reference speed tiles (`.ref` tiles) → [documentation](https://github.com/opentraffic/datastore/blob/master/docs/public_data_extracts.md#reference-speed-tiles)
- coverage maps → [documentation](https://github.com/opentraffic/datastore/blob/master/docs/coverage_map.md)

→ See more documentation in [the Datastore repository](https://github.com/opentraffic/datastore).

### Data Privacy and Competitive Concerns

Note that the Datastore does not store any personally identifiable information. The contents of the histogram tile files have been aggregated such that it should not be possible to reconstruct the paths of any individuals.

The histogram tile files include the number of vehicles/drivers observed along each OSMLR segment. This volume information is important for weighting averages and other statistics. However, releasing to the public the exact number of vehicles/drivers along specific roads may reveal too much information about the business operations of Open Traffic's data providers. Therefore, public data extracts produced by the Datastore only include vehicle/driver counts as a binned ""prevalence"" index.

### Analyst User Interface

(In OTv1, this component was the [Traffic Engine App](https://github.com/opentraffic/traffic-engine-app).)

The Analyst UI provides a simple way of performing basic exploration and querying of OTv2 data. It is powered by the Datastore's public data extracts, just by downloading tile files from AWS S3.

![screenshot of Open Traffic Analyst UI](/images/otv2-analyst-ui-screenshot.png)

→ See more documentation in [the Analyst UI repository](https://github.com/opentraffic/analyst-ui).

### Routing engine

Analyst UI uses the [Valhalla routing engine](https://github.com/valhalla) to plan journeys between origins and one or more destinations. Analyst UI then uses the Datastore's public data extracts to calculate the ETA along these routes. 

In the future, Valhalla may also offer journey-planning that is weighted by historical and/or real-time speeds.

→ See [this documentation](https://mapzen.com/documentation/mobility/turn-by-turn/api-reference/) for more information on Valhalla's routing API.

→ See [this documentation](https://mapzen.com/documentation/mobility/map-matching/api-reference/#trace-attributes-action) for more information on Valhalla's `trace_attributes` action, which is also used by Analyst UI.

→ See [this blog post](https://mapzen.com/blog/speed-tiles/) for a proof-of-concept using traffic speeds to influence Valhalla routing.

### Stand-alone traffic maps

Datastore's public data extracts can be turned into traffic maps for display. While not formally part of the OTv2 platform, we are demonstrating future possibilities during the development process:

→ See [this demo](https://mapzen.github.io/open-traffic-poc-data-demo/) using the [Tangram map rendering library](https://github.com/tangrams/tangram) to display an entire day's worth of traffic in Manila (from the OTv1 platform). Here is an animated screenshot of some of the map:

![](images/otv1-tangram-map-demo-animation.gif)
",95,95,23,1,transportation,"[open-data, traffic-map, traffic-statistics, transportation]",00000
23,transitland-atlas,transitland,transitland,https://github.com/transitland/transitland-atlas,https://api.github.com/repos/transitland/transitland-atlas,an open directory of mobility feeds and operators — powers both Transitland v1 and v2,"<!-- omit in toc -->
# Transitland Atlas

An open catalog of transit/mobility data feeds and operators.

This catalog is used to power the canonical [Transitland](https://transit.land) platform, is available for distributed used of the [transitland-lib](https://github.com/interline-io/transitland-lib) tooling, and is open to use as a ""crosswalk"" within other transportation data systems.

**Table of contents**:

<!-- TOC created and updated by VSCode Markdown All in One extension -->
- [Feeds](#feeds)
- [How to Add a New Feed](#how-to-add-a-new-feed)
- [How to Update an Existing Feed](#how-to-update-an-existing-feed)
- [Operators](#operators)
- [Onestop IDs](#onestop-ids)
- [License](#license)

## Feeds

Public mobility/transit data feeds cataloged in the [Distributed Mobility Feed Registry](https://github.com/transitland/distributed-mobility-feed-registry) format.

Includes feeds in the following data specifications (specs):

- [GTFS](https://gtfs.org/reference/static)
- [GTFS Realtime](https://gtfs.org/reference/realtime/v2/)
- [GBFS](https://github.com/NABSA/gbfs) - automatically synchronized from https://github.com/NABSA/gbfs/blob/master/systems.csv
- [MDS](https://github.com/openmobilityfoundation/mobility-data-specification) - automatically synchronized from https://github.com/openmobilityfoundation/mobility-data-specification/blob/main/providers.csv

## How to Add a New Feed

1. Check if a `./feeds` file exists with the domain name for the feed URL. (ex. `http://bart.gov` -> `bart.gov.dmfr.json`)
    * If a file exists, use that file, otherwise create a new empty DMFR file.
    * To create a new file, you can use `example.com.dmfr.json` as a starting point, which contains the basic schema and an example feed.
    * Feeds exist as an array in the `feeds` property of a DMFR file.
2. Propose a new Onestop ID for the feed (see [below](#onestop-ids))
    * Feed Onestop ID's begins with `f-` and continues with a unique string, like the transit operator's name
    * Use lowercase, alphanumeric unicode characters  in the name component
    * Use `~` instead of spaces or other punctuation
3. Add the appropriate URL to `static_current`
4. Add license and/or authorization metadata if you are aware of it.
5. Open a PR. Feel free to add any questions as a comment on the PR if you are uncertain about your DMFR file.
6. GitHub Actions (continuous integration service) will run a basic validation check on your PR and report any errors.
7. A moderator will review and comment on your PR. If you don't get a response shortly, feel free to ping us at [hello@transit.land](mailto:hello@transit.land)

If you are using the Github web interface, you can click ""Add a file -> Create a new file"" in the `./feeds` directory, or when viewing an individual existing file, the pencil icon in the upper right of the contents display. Make sure to select ""Create a new branch for this commit"" and begin creating a pull request to propose changes.

For more information on what can go into a DMFR file, see the [DMFR documentation](https://github.com/transitland/distributed-mobility-feed-registry).

## How to Update an Existing Feed

1. Find the DMFR file containing the feed.
2. Update the URLs and other properties for that feed
    * For static feeds, use `static_current` for the present URL.
    * Add the previous URL value to the `static_historic` array.
3. Edit the file and open the PR as described above.

Onestop ID values for feeds and operators are used to synchronize with existing values in the Transitland database. Editing the Onestop ID value will cause a new feed or operator record to be created; values in the database that are no longer present in the Transitland Atlas will be marked as soft-deleted. Use caution and clear intent when changing a Onestop ID value.

## Operators

[Operators](https://transit.land/operators) describe, annotate, and group data from different feed data sources. For example, `o-9q9-actransit` describes a transit operator, Alameda-Contra Costa Transit District, which pulls from two different data sources (one GTFS-RT, one static GTFS) and adds additional metadata such as a US National Transit Database ID.

Operators can exist in the top-level `operators` property if a DMFR file, or nested within a feed. An operator defined in the top-level `operators` property requires an `associated_feeds` value to connect the operator with data sources. When an operator is nested within a feed, there is an implicit association that all GTFS agencies contained in that file are associated with that operator, which helps reduces complexity and maintenance.

The key properties for an operator are:
* `onestop_id`: A OnestopID value for this operator, starting with `o-`
* `name`: A formal name for the operator, such as `Bay Area Rapid Transit`
* `short_name`: A simpler, colloqial name for an operator, such as `BART`
* `tags`: A set of key,value string pairs that provide additional metadata and references
* `website`: A URL to find more information about this operator
* `associated_feeds`: An array of feed association objects; for each entry, `feed_onestop_id` is required and `gtfs_agency_id` is optional

Values for `onestop_id` and `name` are required; `associated_feeds` (either explicit or through nesting the operator in a feed) are highly recommended.

## Onestop IDs

Every feed and operator record in the Atlas repository is identified by a unique [Onestop ID](https://transit.land/documentation/onestop-id-scheme/). Onestop IDs are meant to be globally unique (no duplicates in the world) and to be stable (no change over time).

To simplify the process of creating Onestop IDs, we now allow two different variants:

- a three-part Onestop ID includes an entity prefix, a geohash, and a name. For example: `f-9q9-bart`
- a two-part Onestop ID includes just the entity prefix and a name. For example: `f-banning~pass~transit`

The two-part Onestop ID is simpler to create if you are manually adding records to the Transitland Atlas repository.

Rules for Onestop IDs in this repository:

- Feeds start with `f-` and operators start with `o-`
- Geohash part is optional
- Name can include any alphanumeric characters in UTF-8
- The only separation or punctuation character allowed in the name component is a tilde (`~`)

## License

All data files in this repository are made available under the [Community Data License Agreement – Permissive, Version 1.0](LICENSE.txt). This license allows you to:

1. use this data for commercial, educational, or research purposes and be able to trust that it's cleanly licensed
2. duplicate data, as long as you mention (attribute) this source
3. use this data to create analyses and derived data (such as geocoding), without needing to provide attribution

We welcome you to contribute your edits and improvements directly to this repository. Please open a pull request!
",94,94,9,10,transportation,"[gbfs, gtfs, gtfs-realtime, gtfs-rt, mds, mobility, open-data, transit, transitland, transportation]",00000
24,tpp,tpportugal,tpportugal,https://github.com/tpportugal/tpp,https://api.github.com/repos/tpportugal/tpp,"Repositório central para organização total (Issues, README's, LICENSE's, etc)","# TPP
#### Projeto para unificação informativa dos transportes públicos de Portugal

[![Guia de Contribuição](https://img.shields.io/badge/%E2%9D%A4-Guia%20de%20contribui%C3%A7%C3%A3o-blue.svg)](https://github.com/tpportugal/tpp/blob/master/CONTRIBUTING.md)
[![Canal de Comunicação](https://img.shields.io/badge/Canal%20de%20Comunica%C3%A7%C3%A3o-Gitter-green.svg)](https://gitter.im/tpportugal/Geral)
[![Administradores](https://img.shields.io/badge/Administradores-3-red.svg)](https://github.com/tpportugal/tpp/blob/master/ADMINS.md) 
  
**Read this in other languages**: [English](https://github.com/tpportugal/tpp/blob/master/README_EN.md)
***

## Finalidade

Este projeto pretende unificar todos os transportes públicos de Portugal numa única aplicação, isto é, a unificação de meios de transporte, horários e rotas num único sistema para que o utilizador, neste caso, o viajante consiga mover-se em Portugal com maior facilidade apenas introduzindo o local de partida e o local de chegada.

## Funcionamento

Para que a aplicação possa mostrar a melhor rota entre o ponto A e o ponto B é necessário ter em nossa posse vários tipos de dados como: Regiões, Rotas, Meios de transporte, Operadoras de transporte e Horários. A partir destes dados o nosso algoritmo conseguirá calcular a rota mais eficiente para o utilizador, isto é, que tenha o menor número de mudanças de linha, como também a duração da viagem. Obviamente é necessário também que os dados estejam atualizados conforme comunicado pelas operadoras.

## Obtenção de dados

Geralmente por canais digitais onde as operadoras têm os seus dados publicados. Haverá casos em que as operadoras não têm horários em formato digital, aí teremos que fazer uma digitalização dos horários e aplicar um algoritmo de reconhecimento de padrões que extraia os dados por nós, isto para evitar erros humanos na introdução de dados

# Serviços

**Valhalla** [Motor de rotas] - https://github.com/tpportugal/tpp_valhalla  
**Banco de dados** [API do serviço web centralizado TPP] - https://github.com/tpportugal/tpp_banco_de_dados  
**Explorador** [Explorador de redes de transportes em Portugal] - https://github.com/tpportugal/tpp_explorador  
**APP** [Frontend para o serviço TPP] - https://github.com/tpportugal/tpp_app  
**Expedidor** [Administrador do Backend do Banco de Dados] - https://github.com/tpportugal/tpp_expedidor  
**Registo de feeds** [Diretoria de feeds de operadoras] - https://github.com/tpportugal/tpp_registo_de_feeds  
**Admin** [Projeto Django TPP Admin management] - https://github.com/tpportugal/tpp_admin  
",93,93,25,22,transportation,"[api, portugal, public, tpp, transportation]",00000
25,gtfs-osm-sync,CUTR-at-USF,CUTR-at-USF,https://github.com/CUTR-at-USF/gtfs-osm-sync,https://api.github.com/repos/CUTR-at-USF/gtfs-osm-sync,Synchronizes public transportation data in GTFS format with OpenStreetMap.org,"gtfs-osm-sync [![Build Status](https://travis-ci.org/CUTR-at-USF/gtfs-osm-sync.svg?branch=master)](https://travis-ci.org/CUTR-at-USF/gtfs-osm-sync)
=============

GO_Sync is short for [General Transit Feed Specification (GTFS)](https://developers.google.com/transit/gtfs/reference) [OpenStreetMap](http://wiki.openstreetmap.org/wiki/Main_Page) Synchronization. 

It is a Java Desktop Application which can be used by a public transit agency in order to synchronize the bus stop and route information from their GTFS dataset with OpenStreetMap. This synchronization process allows an agency to upload all bus stops from their GTFS data into OpenStreetMap, as well as retrieve crowd-sourced edits such as improvements of bus stop locations or the addition of amenities such as benches, lighting, and bike racks for integration back into the transit agency's bus stop inventory. When an agency produces a new GTFS dataset with updated route and stop information, GO_Sync will automatically compare this against the contents of OSM and guide the user through merging any changes in both datasets.

The expected benefits to a transit agency and the general public are:

1. Leveraging a transit agency's GTFS bus stop data as the primary dataset for upload to OpenStreetMap, instead of requiring OSM users to code each individual bus stop
2. Retrieving OSM edits to the bus stop location and amenities back to the transit agency, so that agencies can leverage public contributions to data improvements

GO_Sync is still under development and currently has below functionalities:

1. Compare bus stops and bus routes between GTFS dataset and existing OpenStreetMap data. A report is generated for the user's convenience.
2. Upload, modify, delete bus stops from OpenStreetMap.
3. Revert a changeset in OpenStreetMap with a given changeset id.

Since two of GO_Sync's functionalities are the automated edits (e.g., upload, modify, delete, revert changeset) of OpenStreetMap and the tool is currently under development, it's highly recommended that GO_Sync users understand OpenStreetMap well and let other OpenStreetMap users know a big change is coming BEFORE any upload/revert.

## Getting Started

You'll need to install both [Git](https://git-scm.com/) for version control, and [Maven](https://maven.apache.org/index.html) for dependency management and to build the project.

Then, from the command line run:

`git clone https://github.com/CUTR-at-USF/gtfs-osm-sync.git`

`cd gtfs-osm-sync/GO_Sync`

`mvn install`

This should download the dependencies for the project (you'll need an internet connection) and create a file:

`gtfs-osm-sync\GO_Sync\target\gtfs-osm-sync-1.0.1-SNAPSHOT-jar-with-dependencies.jar`

You can double-click on this JAR file to run the application, or execute it from the command line:

`cd target`

`java -jar gtfs-osm-sync-1.0.1-SNAPSHOT-jar-with-dependencies.jar`

Note that you can also supply a list of default operators in a operators.csv file.  An example file is [here](https://github.com/CUTR-at-USF/gtfs-osm-sync/blob/master/GO_Sync/operators.csv).

Fore more info, please visit our [Getting started wiki page](https://github.com/CUTR-at-USF/gtfs-osm-sync/wiki/Getting-started) for details.

If you'd like to contribute to the project, please let us know!

## Papers and Presentations

If you're interested in the details of GO_Sync, check out our [paper](http://www.locationaware.usf.edu/wp-content/uploads/2011/10/Tran-et.-al.-GO_Sync-Framework-to-Synchronize-Crowd-sourced-Transit-Data-with-GTFS-ITS-final.pdf) and [presentation](https://www.slideshare.net/sjbarbeau/go-syncitsworldcongress20119703) from the 2011 ITS World Congress:

Khoa Tran, Ed Hillsman, Sean J. Barbeau, and Miguel Labrador. “GO! Sync – A Framework to Synchronize Crowd-Sourced Mapping Contributions From Online Communities and Transit Agency Bus Stop Inventories,” Proceedings of the 2011 ITS World Congress, Orlando, FL, October 18, 2011.

## Acknowledgements

GO_Sync was developed as part of the project [""Enabling Cost-Effective Multimodal Trip Planners through Open Transit Data.""](http://www.locationaware.usf.edu/ongoing-research/open-transit-data/) (Subtask 4b: Develop protocol and software tool for data management between transit agencies and OSM). Marcy Gordon and Khoa Tran are leading the development of this software tool.

This project was funded by the Florida Department of Transportation and the National Center for Transit Research. The two principal investigators are Edward Hillsman and Sean Barbeau from the [Center for Urban Transportation Research](http://www.cutr.usf.edu/), [University of South Florida](www.usf.edu).
",87,87,15,18,transportation,"[bus, gtfs, gtfs-dataset, gtfs-osm-sync, java, openstreetmap, transit-agency, transportation]",00000
26,WazeCCPProcessor,LouisvilleMetro,LouisvilleMetro,https://github.com/LouisvilleMetro/WazeCCPProcessor,https://api.github.com/repos/LouisvilleMetro/WazeCCPProcessor,"Waze WARP takes your CCP data feed and processes it into your cloud provider for access, analysis, and visualization. An Open Government Coalition (OGC) project. @govintheopen","# Waze WARP 

**A free, open source cloud data processor for mobility use cases.**

WARP *(Waze Analytics Relational-database Platform)* takes the [Waze CCP](https://www.waze.com/ccp) data feed and processes it into a cloud database system for historic and real-time querying, analysis, API hooks, mapping, and integrations.

## Overview

Louisville has created an automated cloud processing solution that can be replicated by any CCP Partner in the cloud, with the [help of other govs, partners, and sponsors](https://github.com/LouisvilleMetro/WazeCCPProcessor/wiki/Waze-CCP-Collaborative-Processor).

You grab this project's [Terraform.io](http://www.terraform.io) code and deploy the infrastructure-as-code stack (currently AWS but cloud agnostic).

You enter your CCP data feed URL as a parameter.

Then you can store, analyze, query, extract live and historic data for your city for many [use cases](https://github.com/LouisvilleMetro/WazeCCPProcessor/wiki/Use-Cases).

See the [Projects](https://github.com/LouisvilleMetro/WazeCCPProcessor/projects) area for how you can help, and the [Wiki](https://github.com/LouisvilleMetro/WazeCCPProcessor/wiki) for all the details.

## Premier Project Sponsors

Organizations that are helping to fund, manage, collaborate, promote, and support the project.

![Sponsors](https://raw.githubusercontent.com/LouisvilleMetro/WazeCCPProcessor/master/docs/images/sponsors.jpg)

See the project [wiki](https://github.com/LouisvilleMetro/WazeCCPProcessor/wiki) for more details.

## Deploy the Solution to Your Cloud

We have an end-to-end data processor, database, and analytics tools working that you can deploy.  It saves your CCP data as JSON files every 2 minutes, and processes the data into a combined real-time and historic database.

**See [/docs/technical-deployment.md](/docs/technical-deployment.md) for very detailed instructions** on how to get up and running in [30 minutes](https://twitter.com/brendanbabb/status/994314335634604032).

## Finished Result

This creates an infrastructure stack which pings your custom Waze CCP data feed every 2 minutes and saves the JSON to a new bucket, which then gets processed into the relational database.  There is error handling and also notification options for when things go right or wrong.  

Here's what is created:

![Waze Current Architecture](docs/Current%20Architecture.png ""Waze Current Architecture"")

You can update the stack with new infrastructure as the code here gets updated, and it only affects new and changed items. You can also remove all the infrastructure automatically (minus the S3 bucket you created manually) by deleting the Terraform stack using `terraform destroy` after the `get` and `init` commands. 

## Building on the Platform

Since this is managed like software product, tools and integrations can be built upon it, and used by anyone who has deployed it.  Examples include:

- [Power BI Traffic Study Tool](https://medium.com/louisville-metro-opi2/how-we-do-free-traffic-studies-with-waze-data-and-how-you-can-too-a550b0728f65)
- [CARTO Connector](https://carto.com/blog/announcing-carto-waze-open-source-connector/)

Create your own integrations and see our [Issues](https://github.com/LouisvilleMetro/WazeCCPProcessor/issues) for ideas.

## Loading Historic JSON Data Files

You can also dump any previously collected historic JSON files into your bucket and the processor will go through them and save/update the relevant data into your database.  Using `aws s3 cp` is a good place to start to copy files in chunks from a previous bucket to a new bucket.  

**See [/docs/technical-backloading-data.md](/docs/technical-backloading-data.md) for very detailed instructions!**

## Costs

This config stands up infrastructure that is pretty inexpensive (and is about the same for any sized city). The database itself is the main cost (95+%) and will result in monthly charges under $200.  We are working on ways to reduce the costs and you can help out on this [issue](https://github.com/LouisvilleMetro/WazeCCPProcessor/issues/32).

## Current Plans

We are working on writing API hooks, data visualizations and tools, and maps, which is all part of our project roadmap.

See our [Projects](https://github.com/LouisvilleMetro/WazeCCPProcessor/projects) and [Releases](https://github.com/LouisvilleMetro/WazeCCPProcessor/releases) areas for our blueprint of how we are proceeding. 

**We would like to collaborate with you!**  Please suggest updates, work on the [help wanted issues](https://github.com/LouisvilleMetro/WazeCCPProcessor/issues?q=is%3Aissue+is%3Aopen+label%3A%22help+wanted%22), collaborate on the Wiki, etc.  It would be great to work together to get the best solution, use cases, and finish faster.   

We've build out the code in [Terraform](http://www.terraform.io) and supported AWS at first, but would like it to be deployed to any cloud provider.  See our [Issues](https://github.com/LouisvilleMetro/WazeCCPProcessor/issues) area for how you can help with this.

## Background

If you'd like a little more background on Louisville and what our city has been going with Waze and other mobility data, take a look at these links:

1. [Louisville Waze Internal Hackathon Recap](https://medium.com/louisville-metro-opi2/waze-louisvilles-first-internal-hackathon-647363a85392)
2. [Harvard Civic Analytics Network Presentation - Slides](https://docs.google.com/presentation/d/1esPVvhuIRjD199rN8aimK_XcmCt0pJOkjEIyCMhGKks/)
3. [Waze April 2018 Monthly Call - Slides](https://docs.google.com/presentation/d/1loAV4BDAUyXdrn44QoLmYiwZdLmL59C4jvJGlZ1a-AY/)
4. [Open Government Coalition](https://www.govintheopen.com/) Supporting Framework
5. [Run Free Traffic Studies Using This Tool](https://medium.com/louisville-metro-opi2/how-we-do-free-traffic-studies-with-waze-data-and-how-you-can-too-a550b0728f65)
6. [Traffic Study Tool Version 2](https://medium.com/louisville-metro-opi2/data-driven-governance-reflecting-on-opi2-bdd324aefbdc) with Intersection Analysis
7. [UPenn Masters in Urban Spatial Analytics Program](https://insiderlouisville.com/government/infrastructure/a-new-data-project-aims-to-predict-louisville-traffic-collisions/) Collision Prediction Model


",79,79,24,23,transportation,"[amazon-aws, aws, cloudformation, louisville, mobility, terraform, transportation, waze, waze-ccp]",00000
27,jpo-ode,usdot-jpo-ode,usdot-jpo-ode,https://github.com/usdot-jpo-ode/jpo-ode,https://api.github.com/repos/usdot-jpo-ode/jpo-ode,US Department of Transportation (USDOT) Intelligent Transportation Systems Operational Data Environment (ITS ODE). This is the main repository that integrates and coordinates ODE Submodules.,"| Travis Build Status | Sonar Code Quality | Sonar Code Coverage |
|---------------------|---------------------|---------------------|
 [![Build Status](https://travis-ci.org/usdot-jpo-ode/jpo-ode.svg?branch=master)](https://travis-ci.org/usdot-jpo-ode/jpo-ode) | [![Quality Gate Status](https://sonarcloud.io/api/project_badges/measure?project=usdot.jpo.ode%3Ajpo-ode&metric=alert_status)](https://sonarcloud.io/dashboard?id=usdot.jpo.ode%3Ajpo-ode) | [![Coverage](https://sonarcloud.io/api/project_badges/measure?project=usdot.jpo.ode%3Ajpo-ode&metric=coverage)](https://sonarcloud.io/dashboard?id=usdot.jpo.ode%3Ajpo-ode) |

# jpo-ode

**US Department of Transportation (USDOT) Intelligent Transportation Systems (ITS) Joint Program Office (JPO) Operational Data Environment (ODE)**

The ITS ODE is a real-time virtual data router that ingests and processes operational data from various connected devices - including vehicles, infrastructure, and traffic management centers - and distributes it to other devices and subscribing transportation management applications. Using the ITS ODE within intelligent transportation deployments increases data fluidity and interoperability while meeting operational needs and protecting user privacy. The software’s microservices architecture makes it easy to add new capabilities to meet local needs. Check the ITS factsheet for more information: <https://www.its.dot.gov/factsheets/pdf/ITSJPO_ODE.pdf>.

![Figure 1: ODE Dataflows](docs/images/readme/figure1.png)

_Figure 1: ODE Dataflows_

**Documentation:**

1. [ODE Architecture](docs/Architecture.md)
2. [ODE User Guide](docs/UserGuide.md)
3. [ODE Output Schema Reference Guide](docs/ODE_Output_Schema_Reference.docx)
4. [ODE REST API Guide](https://usdot-jpo-ode.github.io/)
5. [ODE Smoke Tests](https://github.com/usdot-jpo-ode/jpo-ode/wiki/JPO-ODE-QA-Documents)

All stakeholders are invited to provide input to these documents. To provide feedback, we recommend that you create an ""issue"" in this repository (<https://github.com/usdot-jpo-ode/jpo-ode/issues>). You will need a GitHub account to create an issue. If you don’t have an account, a dialog will be presented to you to create one at no cost.

---

<a name=""toc""/>

## Release Notes
The current version and release history of the JPO-ODE: [ODE Release Notes](<docs/Release_notes.md>)

## Table of Contents

1.  [Usage Example](#usage-example)
2.  [Configuration](#configuration)
3.  [Installation](#installation)
4.  [File Manifest](#file-manifest)
5.  [Development Setup](#development-setup)
6.  [Release History](#release-history)
7.  [Contact Information](#contact-information)
8.  [Contributing](#contributing)
9.  [Known Bugs](#known-bugs)
10. [Credits and Acknowledgement](#credits-and-acknowledgement)
11. [Code.gov Registration Info](#codegov-registration-info)
12. [Kubernetes](#kubernetes)
13. Sonar Token Configuration([#Sonar cloud](https://sonarqube.ow2.org/documentation/user-guide/user-token/))

<!--
#########################################
############# Usage Example #############
#########################################
 -->

<a name=""usage-example""/>

## 1. Usage Example

Once the ODE is deployed and running locally, you may access the ODE's demonstration console by opening your browser and navigating to  `http://localhost:8080`. This portal can only be used to decode a subset of the supported message types: BSM and TIM messages. To decode messages such as MAP, SPaT, SRM and SSM, the ODE UDP ports must be utilized. The following sections will describe how to utilize both methods.

<b>For testing BSM and TIM decoding only:</b>
1.  Press the `Connect` button to connect to the ODE WebSocket service.
2.  Press `Select File` button to select an OBU log file containing BSMs and/or TIM messages as specified by the WYDOT CV Pilot project. See below documents for details:
    - [Wyoming CV Pilot Log File Design](data/Wyoming_CV_Pilot_Log_File_Design.docx)
    - [WYDOT Log Records](data/wydotLogRecords.h)
3.  Press `Upload` button to upload the file to ODE.

Upload records within the files must be embedding BSM and/or TIM messages wrapped in J2735 MessageFrame and ASN.1 UPER encoded, wrapped in IEEE 1609.2 envelope and ASN.1 COER encoded binary format. Please review the files in the [data](data) folder for samples of each supported type. By uploading a valid data file, you will be able to observe the decoded messages contained within the file appear in the web UI page while connected to the WebSocket interface.

Another way data can be uploaded to the ODE is through copying the file to the location specified by the `ode.uploadLocationRoot/ode.uploadLocationObuLog`property. If not specified,  Default locations would be `uploads/bsmlog`sub-directory off of the location where ODE is launched.

The result of uploading and decoding of messages will be displayed on the UI screen.

![ODE UI](docs/images/readme/figure2.png)

_Figure 2: ODE UI demonstrating message subscription_

Notice that the empty fields in the J2735 message are represented by a `null` value. Also note that ODE output strips the MessageFrame header and returns a pure BSM or TIM in the subscription topic.

With the PPM module running, all filtered BSMs that are uploaded through the web interface will be captured and processed. You will see an output of both submitted BSM and processed data unless the entire record was filtered out.

<b>For testing decoding with all supported ODE message types:</b>

To test decoding all supported ODE messages, the UDP endpoints must be utilized. These endpoints specifically take hex ASN.1 UPER encoded message data. These messages are allowed to have headers but do not need to. The headers are trimmed out currently once the UDP receiver receives the message so this data will not affect the output.

Supported message types:
- BSM
- TIM
- MAP
- SPaT
- SRM
- SSM

1. Navigate to the [UDP sender Python scripts](<./scripts/tests/>) in the project.
2. Ensure the environment variable ""DOCKER_HOST_IP"" has been set in the shell that will be running the script. This must be set to the same IP that the ODE deployments are using.
3. Run the script of your choosing: `python3 ./scripts/tests/udpsender_spat.py`
4. View the output Kafka messages from kafkacat: `kafkacat -b $DOCKER_HOST_IP:9092 -G udp_test_group topic.OdeSpatJson -f '\nTopic: %t, Key: %k, Offset: %o, Timestamp: %T\nValue: %s\n'`
5. The script should continue to send the same message every 5 seconds and kafkacat should continue to output the latest message.
6. You may modify the content of the UDP sender scripts to test different payloads of your own.

<p align=""center"">
  <img src=""./docs/images/readme/figure3.png"" width=""80%"" height=""50%"">
</p>

[Back to top](#toc)

<!--
#########################################
############# Configuration #############
#########################################
 -->

<a name=""configuration""/>

## 2. Configuration

### System Requirements

-  Minimum RAM: 16 GB
-  Minimum storage space: 100 GB
-  Supported operating systems:
   -  Ubuntu 18.04 Linux (Recommended)
   -  Windows 10 Professional (Professional version required for Docker virtualization)
   -  OSX 10 Mojave

The ODE software can run on most standard Window, Mac, or Linux based computers with
Pentium core processors. Performance of the software will be based on the computing power and available RAM in
the system.  Larger data flows can require much larger space requirements depending on the
amount of data being processed by the software. The ODE software application was developed using the open source programming language Java. If running the ODE outside of Docker, the application requires the Java 8 runtime environment.

### Software Prerequisites

The ODE is bundled as a series of submodules running in Docker containers and managed by Docker-Compose. All other required dependencies will automatically be downloaded and installed as part of the Docker build process.

- Docker: <https://docs.docker.com/engine/installation/>
- Docker-Compose: <https://docs.docker.com/compose/install/>

### Tips and Advice

Read the following guides to familiarize yourself with ODE's Docker and Kafka modules.

- [Docker README](docker.md)
- [Kafka README](kafka.md)

The following guide contains information about the data flow diagrams for the ODE.

- [Data Flow Diagrams README](docs/data-flow-diagrams/README.md)

**Installation and Deployment:**

- Docker builds may fail if you are on a corporate network due to DNS resolution errors.
[See here](https://github.com/usdot-jpo-ode/jpo-ode/wiki/Docker-fix-for-SSL-issues-due-to-corporate-network) for instructions to fix this.
- Additionally `git` commands may fail for similar reasons, you can fix this by running `export GIT_SSL_NO_VERIFY=1`.
- Windows users may find more information on installing and using Docker [here](https://github.com/usdot-jpo-ode/jpo-ode/wiki/Docker-management).
- Users interested in Kafka may find more guidance and configuration options [here](docker/kafka/README.md).

**Configuration:**

If you wish to change the application properties, such as change the location of the upload service via `ode.uploadLocation.*` properties or set the `ode.kafkaBrokers` to something other than the `$DOCKER_HOST_IP:9092`, or wish to change the log file upload folder, etc. instead of setting the environment variables, modify `jpo-ode-svcs\src\main\resources\application.properties` file as desired.

ODE configuration can be customized for every deployment environment using environment variables. These variables can either be set locally or using the [sample.env](sample.env) file. Instructions for how to use this file can be found [here](https://github.com/usdot-jpo-ode/jpo-ode/wiki/Using-the-.env-configuration-file).

**Important!**
You must rename `sample.env` to `.env` for Docker to automatically read the file. This file will contain AWS access keys and other private information. Do not push this file to source control.

[Back to top](#toc)

<!--
########################################
############# Installation #############
########################################
 -->

<a name=""installation""/>

## 3. Installation

The following instructions describe the minimal procedure to fetch, build, and run the main ODE application. If you want to use the privacy protection module and/or S3 depositors, see the [User Guide](docs/UserGuide.md) for more detailed information. Additionally, different build processes are covered at the bottom of this section.

#### Step 0 - For Windows Users Only

If running on Windows, please make sure that your global git config is set up to not convert end-of-line characters during checkout.

Disable `git core.autocrlf` (One Time Only)

```bash
git config --global core.autocrlf false
```

#### Step 1 - Download the Source Code

The ODE software system consists of the following modules hosted in separate Github repositories:

|Name|Visibility|Description|
|----|----------|-----------|
|[jpo-ode](https://github.com/usdot-jpo-ode/jpo-ode)|public|Contains the public components of the application code.|
|[jpo-cvdp](https://github.com/usdot-jpo-ode/jpo-cvdp)|public|Privacy Protection Module|
|[jpo-s3-deposit](https://github.com/usdot-jpo-ode/jpo-s3-deposit)|public|S3 depositor service. Optional, comment out of `docker-compose.yml` file if not used.|
|[asn1_codec](https://github.com/usdot-jpo-ode/asn1_codec)|public|ASN.1 Encoder/Decoder module|
|[jpo-security-svcs](https://github.com/usdot-jpo-ode/jpo-security-svcs)|public|Provides cryptographic services.|
|[jpo-sdw-depositor](https://github.com/usdot-jpo-ode/jpo-sdw-depositor)|public|SDW depositor service. Optional, comment out of `docker-compose.yml` file if not used.|

You may download the stable, default branch for ALL of these dependencies by using the following recursive git clone command:

```bash
git clone --recurse-submodules https://github.com/usdot-jpo-ode/jpo-ode.git
```

Once you have these repositories obtained, you are ready to build and deploy the application.

##### Downloading the source code from a non-default branch

<details><summary>(Advanced) Downloading the source code from a non-default branch</summary>
<p>

The above steps to pull the code from GitHub repository pulls it from the default branch which is the stable branch. If you wish to pull the source code from a branch that is still under development or beta testing, you will need to specify the branch to pull from. The following commands aid you in that action.

**Note**: These commands can also be performed using the provided script `update_branch`.

```bash
# Backup user provided source or configuration files used by submodules
cp asn1_codec/asn1c_combined/J2735_201603DA.ASN .

# Run the following commands to reset existing branch
git reset --hard
git submodule foreach --recursive git reset --hard

# Pull from the non-default branch
git checkout <branch_name>
git pull origin <branch_name>

# The next command wipes out all of the submodules and re-initializes them.
git submodule deinit -f . && git submodule update --recursive --init

# Restore user provided source or configuration files used by submodules
cp ./J2735_201603DA.ASN asn1_codec/asn1c_combined/
```

</p>
</details>

#### Step 2 - Build and run the application

**Notes:**
- Docker builds may fail if you are on a corporate network due to DNS resolution errors.
[See here](https://github.com/usdot-jpo-ode/jpo-ode/wiki/Docker-fix-for-SSL-issues-due-to-corporate-network) for instructions to fix this.
- In order for Docker to automatically read the environment variable file, you must rename it from `sample.env` to `.env`. **This file will contain private keys, do not put add it to version control.**

Copy the following files from `jpo-ode` directory into your DOCKER_SHARED_VOLUME directory.
- Copy jpo-ode/ppm.properties to ${DOCKER_SHARED_VOLUME}/config.properties. Open the newly copied `config.properties` file in a text editor and update the `metadata.broker.list=your.docker.host.ip:9092` line with your system's DOCKER_HOST_IP in place of the dummy `your.docker.host.ip` string.
- Copy jpo-ode/adm.properties to ${DOCKER_SHARED_VOLUME}/adm.properties
- Copy jpo-ode/aem.properties to ${DOCKER_SHARED_VOLUME}/aem.properties
- Specifying the variable: ${DOCKER_SHARED_VOLUME_WINDOWS} to ""C:"" may be required for certain Windows users.

Navigate to the root directory of the jpo-ode project and run the following command:

```bash
docker-compose up --build -d
docker-compose ps
```

To bring down the services and remove the running containers run the following command:

```bash
docker-compose down
```
For a fresh restart, run:

```bash
docker-compose down
docker-compose up --build -d
docker-compose ps
```

To completely rebuild from scratch, run:

```bash
docker-compose down
docker-compose rm -fvs
docker-compose up --build -d
docker-compose ps
```

Check the deployment by running `docker-compose ps`. You can start and stop containers using `docker-compose start` and `docker-compose stop` commands.
If using the multi-broker docker-compose file, you can change the scaling by running `docker-compose scale <container>=n` where container is the container you would like to scale and n is the number of instances. For example, `docker-compose scale kafka=3`.


#### asn1_codec Module (ASN.1 Encoder and Decoder)
ODE requires the deployment of asn1_codec module. ODE's `docker-compose.yml` file is set up to build and deploy the module in a Docker container. If you wish to run `asn1_codec` module outside Docker (i.e. directly on the host machine), please refer to the documentation of `asn1_codec` module.

The only requirement for deploying `asn1_codec` module on Docker is the setup of two environment variables `DOCKER_HOST_IP` and `DOCKER_SHARED_VOLUME`.

#### PPM Module (Geofencing and Filtering)

To run the ODE with PPM module, you must install and start the PPM service. PPM service communicates with other services through Kafka Topics. PPM will read from the specified ""Raw BSM"" topic and publish the result to the specified ""Filtered Bsm"" topic. These topic names are specified by the following ODE and PPM properties:

 - ODE properties for communications with PPM (set in application.properties)
	 - ode.kafkaTopicOdeBsmJson  (default = topic.OdeBsmJson)
	 - ode.kafkaTopicFilteredOdeBsmJson (default = topic.FilteredOdeBsmJson)
 - PPM properties for communications with ODE (set in yourconfig.properties)
	 - privacy.topic.consumer (default = j2735BsmRawJson)
	 - privacy.topic.producer (default = j2735BsmFilteredJson)

Follow the instructions [here](https://github.com/usdot-jpo-ode/jpo-cvdp/blob/master/docs/installation.md) to install and build the PPM service.

During the build process, edit the sample config file located in `config/example.properties` and point the property `metadata.broker.list` towards the host of your docker machine or wherever the kafka brokers are hosted. You may use the command `docker-machine ls` to find the kafka service.

After a successful build, use the following commands to configure and run the PPM

```
cd $BASE_PPM_DIR/jpo-cvdp/build
$ ./bsmjson_privacy -c ../config/ppm.properties
```

# Confluent Cloud Integration

Rather than using a local kafka instance, the ODE can utilize an instance of kafka hosted by Confluent Cloud via SASL.



## Environment variables

### Purpose & Usage

- The DOCKER_HOST_IP environment variable is used to communicate with the bootstrap server that the instance of Kafka is running on.

- The KAFKA_TYPE environment variable specifies what type of kafka connection will be attempted and is used to check if Confluent should be utilized. If this environment variable is not set, the ODE will default to normal behavior.

- The CONFLUENT_KEY and CONFLUENT_SECRET environment variables are used to authenticate with the bootstrap server. If the KAFKA_TYPE environment variable is not set, then these are not required.



### Values
In order to utilize Confluent Cloud:

- DOCKER_HOST_IP must be set to the bootstrap server address (excluding the port)

- KAFKA_TYPE must be set to ""CONFLUENT""

- CONFLUENT_KEY must be set to the API key being utilized for CC

- CONFLUENT_SECRET must be set to the API secret being utilized for CC



## CC Docker Compose File

There is a provided docker-compose file (docker-compose-confluent-cloud.yml) that passes the above environment variables into the container that gets created. Further, this file doesn't spin up a local kafka instance since it is not required.



## Note

This has only been tested with Confluent Cloud but technically all SASL authenticated Kafka brokers can be reached using this method.	

[Back to top](#toc)
	
<!--
#########################################
############# File Manifest #############
#########################################
 -->

<a name=""file-manifest""/>

## 4. File Manifest

This section outlines the software technology stacks of the ODE.

### Containerization and Management

- [Docker](https://www.docker.com/)
- [Docker-Compose](https://docs.docker.com/compose/)

### Messaging

- [Kafka](https://kafka.apache.org/)

### Code Quality

- [SonarCloud](https://sonarcloud.io)

### Continuous Integration

- [TravisCI](https://travis-ci.org/)

### ODE Code

- [Java 8](https://openjdk.java.net/)
- [Maven](https://maven.apache.org/)
- [Spring Boot](http://spring.io/projects/spring-boot)
- [Logback](https://logback.qos.ch/)
- [SNMP4J](https://www.snmp4j.org/)
- [JUnit](https://junit.org)
- [JMockit](http://jmockit.github.io/)
- [Stomp Websocket](http://jmesnil.net/stomp-websocket)

### Web UI

- [MaterializeCSS](https://materializecss.com)
- [jQuery](https://jquery.com/)
- [Stomp Websocket](http://jmesnil.net/stomp-websocket)
- [SockJS](https://github.com/sockjs)

[Back to top](#toc)

<!--
#############################################
############# Development Setup #############
#############################################
 -->

<a name=""development-setup""/>

## 5. Development Setup

### Integrated Development Environment (IDE)

Install the IDE of your choice:

* Eclipse: [https://eclipse.org/](https://eclipse.org/)
* STS: [https://spring.io/tools/sts/all](https://spring.io/tools/sts/all)
* IntelliJ: [https://www.jetbrains.com/idea/](https://www.jetbrains.com/idea/)

### Continuous Integration

* TravisCI: <https://travis-ci.org/usdot-jpo-ode/jpo-ode>

### Dev Container Environment
The project can be reopened inside of a dev container in VSCode. This environment should have all of the necessary dependencies to debug the ODE and its submodules. When attempting to run scripts in this environment, it may be necessary to make them executable with ""chmod +x"" first.

[Back to top](#toc)

<!--
###########################################
############# Release History #############
###########################################
 -->

<a name=""release-history""/>

## 6. Release History

[Release Notes](ReleaseNotes.md)

[Back to top](#toc)

<!--
###############################################
############# Contact Information #############
###############################################
 -->

<a name=""contact-information""/>

## 7. Contact Information

Contact the developers of the ODE application by submitting a [Github issue](https://github.com/usdot-jpo-ode/jpo-ode/issues).

Contact the ODE management representative using the information in the [Code.gov Registration Info](#codegov-registration-info) section.

### License information

Licensed under the Apache License, Version 2.0 (the ""License""); you may not use this
file except in compliance with the License.
You may obtain a copy of the License at <http://www.apache.org/licenses/LICENSE-2.0>
Unless required by applicable law or agreed to in writing, software distributed under
the License is distributed on an ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either expressed or implied. See the License for the specific language governing
permissions and limitations under the [License](http://www.apache.org/licenses/LICENSE-2.0).

[Back to top](#toc)

<!--
########################################
############# Contributing #############
########################################
 -->

<a name=""contributing""/>

## 8. Contributing

Please read our [contributing guide](docs/contributing_guide.md) to learn about our development process, how to propose pull requests and improvements, and how to build and test your changes to this project.

### Source Repositories - GitHub

- Main repository on GitHub (public)
	- <https://github.com/usdot-jpo-ode/jpo-ode>
- Data Privacy Module on Github (public)
	- <https://github.com/usdot-jpo-ode/jpo-cvdp>
- S3 Depositor Module on Github (public)
	- <https://github.com/usdot-jpo-ode/jpo-s3-deposit>
- Security services repository on GitHub (public)
  - <https://github.com/usdot-jpo-ode/jpo-security-svcs>
- ODE Output Validatory Library (public)
  - https://github.com/usdot-jpo-ode/ode-output-validator-library

### Agile Project Management - Jira
<https://usdotjpoode.atlassian.net/secure/RapidBoard.jspa?projectKey=ODE>

### Wiki - Confluence
<https://usdotjpoode.atlassian.net/wiki/>

### Continuous Integration and Delivery
<https://travis-ci.org/usdot-jpo-ode/jpo-ode>

<details><summary>Using Travis for your build</summary>


To allow Travis run your build when you push your changes to your public fork of the jpo-ode repository, you must define the following secure environment variable using Travis CLI (<https://github.com/travis-ci/travis.rb>).

Run:

```
travis login --org
```
Enter personal github account credentials.

In order to allow Sonar to run, personal key must be added with this command:
(Key can be obtained from the JPO-ODE development team)

```
travis env set SONAR_SECURITY_TOKEN <key> -pr <user-account>/<repo-name>
```
</details>
<br>

### Static Code Analysis

<https://sonarcloud.io/organizations/usdot-jpo-ode/projects>

[Back to top](#toc)

<!--
######################################
############# Known Bugs #############
######################################
 -->

### Quality Assurance

Code quality assurance is reported through the [usdot-jpo-ode SonarCloud organization](https://sonarcloud.io/organizations/usdot-jpo-ode/projects). Code quality reports are generated by the [JaCoCo plugin for Maven](https://www.eclemma.org/jacoco/trunk/doc/maven.html) during the ODE's [webhook-triggered TravisCI build](https://github.com/usdot-jpo-ode/jpo-ode/blob/dev/.travis.yml#L16). After a successful build, the [SonarQube scanner plugin for Maven](https://docs.sonarqube.org/display/SCAN/Analyzing+with+SonarQube+Scanner+for+Maven) creates and uploads a code quality report to SonarCloud.

For regression and user acceptance testing, ODE provides an automated test harness. The test harness is pprovided in the [qa/test-harness](ga/test-harness) directory under jpo-ode root folder. The test harness uses the ODE [Validator Library](https://github.com/usdot-jpo-ode/ode-output-validator-library) repository as a submodule.

For more information, please see: https://github.com/usdot-jpo-ode/jpo-ode/wiki/Using-the-ODE-test-harness

<a name=""known-bugs""/>

## 9. Known Bugs

Date: 07/2017

In its current state, the ODE has been developed to accomplish the goals of data transfer, security, and modularity working with the J2735 and 1609.2 security. The system has been designed to support multiple services orchestrated through the Apache Kafka streaming data pipelines, services built and supported as separate applications and described with each service's repository. As a modular system, each component has been built for functionality first, and additional performance testing is needed to understand the limits of the system with large volumes of data.

### Troubleshooting

Please read our [Wiki](https://github.com/usdot-jpo-ode/jpo-ode/wiki) for more information, or check the [User Guide](docs/UserGuide.md).

Application Support for the ODE currently managed via GitHub's native issue tracker: <https://github.com/usdot-jpo-ode/jpo-ode/issues>.

[Back to top](#toc)

<!--
#######################################################
############# Credits and Acknowledgement #############
#######################################################
 -->

<a name=""credits-and-acknowledgement""/>

## 10. Credits and Acknowledgement

[Attribution](ATTRIBUTION.md)

[Back to top](#toc)

<!--
######################################################
############# Code.gov Registration Info #############
######################################################
 -->

<a name=""codegov-registration-info""/>

## 11. Code.gov Registration Info

Agency: DOT

Short Description: The ITS ODE is a real-time virtual data router that ingests and processes operational data from various connected devices – including vehicles, infrastructure, and traffic management centers – and distributes it to other devices and subscribing transportation management applications. Using the ITS ODE within intelligent transportation deployments increases data fluidity and interoperability while meeting operational needs and protecting user privacy. The software’s microservices architecture makes it easy to add new capabilities to meet local needs.

Status: Beta

Tags: transportation, connected vehicles, intelligent transportation systems, java

Labor hours: 200

Contact Name: James Lieu

Contact Phone: (202) 366-3000

## 12. Kubernetes
The ODE can be run in a k8s environment.
See [this document](./docs/Kubernetes.md) for more details about this.

[Back to top](#toc)

## 13. Sonar Token Configuration
Generating and Using Tokens
Users can generate tokens that can be used to run analyses or invoke web services without access to the user's actual credentials.

USDOT-JPO-ODE SonarCloud Organization : https://sonarcloud.io/organizations/usdot-jpo-ode-1/

## Generating a token
You can generate new tokens at User > My Account > Security.
The form at the bottom of the page allows you to generate new tokens. Once you click the Generate button, you will see the token value. Copy it immediately; once you dismiss the notification you will not be able to retrieve it.

## Using a token
SonarScanners running in GitHub Actions can automatically detect branches and pull requests being built so you don't need to specifically pass them as parameters to the scanner.

**<ins>To analyze your projects with GitHub Actions, you need to: </ins>**

**<ins> Creating your GitHub secrets </ins>**
You can create repository secrets from your GitHub repository as below:

Sonar Token: Generate a SonarQube token and, in GitHub, create a new repository secret in GitHub with SONAR_TOKEN as the Name and the token you generated as the Value.
Sonar Host URL: In GitHub, create a new repository secret with SONAR_HOST_URL as the Name and your SonarQube server URL as the Value.

Configure your workflow YAML file as below:

	1. Add GitHub Secrets in ci.yml workflow as SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }
 	2. Update the sonar properties in Sonar scan step (- name: Run Sonar) with new sonar project properties.
  
Commit and push your code to start the analysis.

## Revoking a token
You can revoke an existing token at User > My Account > Security by clicking the Revoke button next to the token.
",73,73,27,4,transportation,"[data-routing, docker, transportation]",00000
28,urbansprawl,lgervasoni,N/A,https://github.com/lgervasoni/urbansprawl,https://api.github.com/repos/lgervasoni/urbansprawl,Open framework for calculating spatial urban sprawl indices and performing disaggregated population estimates using open data,"# Urbansprawl

The urbansprawl project provides an open source framework for assessing urban sprawl using open data. It uses OpenStreetMap (OSM) data to calculate its sprawling indices, divided in Accessibility, Land use mix, and Dispersion.

Locations of residential and activity (e.g. shop, commerce, office, among others) units are used to measure mixed use development and built-up dispersion, whereas the street network is used to measure the accessibility between different land uses. The output consists of spatial indices, which can be easily integrated with GIS platforms.

Additionally, a method to perform dissagregated population estimates at building level is provided. Our goal is to estimate the number of people living at the fine level of individual households by using open urban data (OpenStreetMap) and coarse-scaled population data (census tract).

**Motivation:**

Urban sprawl has been related to numerous negative environmental and socioeconomic impacts. Meanwhile, the number of people living in cities has been increasing considerably since 1950, from 746 million to 3.9 billion in 2014. More than 66% of the world's population are projected to live in urban areas by 2050, against 30% in 1950 [(United Nations, 2014)](https://esa.un.org/unpd/wup/publications/files/wup2014-highlights.pdf). The fact that urban areas have been growing at increasing rates urges for assessing urban sprawl towards sustainable development. However, sprawl is an elusive term and different approaches to measure it have lead to heterogeneous results. 

Moreover, most studies rely on private/commercial data-sets and their software is rarely made public, impeding research reproducibility and comparability. Furthermore, many works give as result a unique value for a region of analysis, dismissing spatial information which is vital for urban planners and policy makers. 

This situation brings new challenges on how to conceive cities that host such amounts of population in a sustainable way. Thus, this sustainability question should address several aspects, ranging from economical to social and environmental matters among others. Urbansprawl provides an open framework to aid in the process of calculating sprawling indices.

**Framework characteristics:**

* Open data: we rely solely on open data in order to ensure replicability.
* Open source: users are free to use the framework for any purpose.
* World-wide coverage: the analysis can be applied to any city in the world, as long as sufficient data exists.
* Data homogeneity: a set of statistical tools are applied to homogeneous and well-defined [map features](https://wiki.openstreetmap.org/wiki/Map_Features) data.
* Geo-localized data: precise location of features allow to cope with the [Modifiable Areal Unit Problem](https://en.wikipedia.org/wiki/Modifiable_areal_unit_problem) (avoid using gridded data, e.g. Land Use Land Cover data).
* Crowd-sourced data: rapid updates given an ever-increasing community.
* GIS output: easy to integrate with other GIS frameworks.
* Potential missing data: still few data exist for some regions in the world.

**Disclaimer:** This package is no longer maintained.

**For more details, refer to:**
* Gervasoni Luciano, 2018. ""[Contributions to the formalization and implementation of spatial urban indices using open data : application to urban sprawl studies](https://tel.archives-ouvertes.fr/tel-02077356)."" Computers and Society [cs.CY]. Université Grenoble Alpes, 2018.
* Gervasoni Luciano, Bosch Martí, Fenet Serge, and Sturm Peter. 2016. ""[A framework for evaluating urban land use mix from crowd-sourcing data](https://hal.inria.fr/hal-01396792)."" 2nd International Workshop on Big Data for Sustainable Development (IEEE Big Data 2016).
* Gervasoni Luciano, Bosch Martí, Fenet Serge, and Sturm Peter. 2017. ""[LUM_OSM: une plateforme pour l'évaluation de la mixité urbaine à partir de données participatives](https://hal.inria.fr/hal-01548341)."" GAST Workshop, Conférence Extraction et Gestion de Connaissances (EGC 2017).
* Gervasoni Luciano, Bosch Martí, Fenet Serge, and Sturm Peter. 2017. ""[Calculating spatial urban sprawl indices using open data](https://hal.inria.fr/hal-01535469)."" 15th International Conference on Computers in Urban Planning and Urban Management (CUPUM 2017).
* Gervasoni Luciano, Fenet Serge, and Sturm Peter. 2018. ""[Une méthode pour l’estimation désagrégée de données de population à l’aide de données ouvertes](https://hal.inria.fr/hal-01667975)."" Conférence Internationale sur l'Extraction et la Gestion des Connaissances (EGC 2018).
* Gervasoni Luciano, Fenet Serge, Perrier Régis and Sturm Peter. 2018. ""[Convolutional neural networks for disaggregated population mapping using open data](https://hal.inria.fr/hal-01852585)."" IEEE International Conference on Data Science and Advanced Analytics (DSAA 2018).

## Installation

The urbansprawl framework works with Python 2+3.

- Python dependencies:
```sh
osmnx scikit-learn psutil tensorflow keras jupyter
```

### Using pip
- Install the ```spatialindex``` library. Using apt-get (Linux):
```sh
sudo apt-get install libspatialindex-dev
```
- Install the dependencies using *pip*
```sh
pip install osmnx scikit-learn psutil tensorflow keras jupyter
```

### Using Miniconda
- Install [Miniconda](https://conda.io/miniconda.html)
- [Optional] Create a [conda virtual environment](http://conda.pydata.org/docs/using/envs.html) 
```
conda create --name urbansprawl-env
source activate urbansprawl-env
```

- Install the dependencies using the conda package manager and the conda-forge channel
```sh
conda install -c conda-forge libspatialindex osmnx scikit-learn psutil tensorflow keras jupyter
```

### Using Anaconda
- Install [Anaconda](https://www.anaconda.com/download)
- [Optional] Create a [conda virtual environment](http://conda.pydata.org/docs/using/envs.html) 
```
conda create --name urbansprawl-env
source activate urbansprawl-env
```

- Install the dependencies using the conda package manager and the conda-forge channel
```sh
conda update -c conda-forge --all
conda install -c conda-forge osmnx scikit-learn psutil tensorflow keras jupyter
```

## Usage
The framework is presented through different [examples](https://github.com/lgervasoni/urbansprawl/tree/master/examples) in the form of notebooks. As well, the computational running times involved in each procedure are shown for each example. To this end, a _r5.large_ [AWS EC2](https://aws.amazon.com/ec2/) instance was employed (2 vCPU and 16GiB memory) to run the notebooks.

Please note that the different procedures can be both memory and time consuming, according to the size of the chosen region of interest. In order to run the different notebooks, type in a terminal:
```sh
jupyter notebook
```

## Example: Urban sprawl

OpenStreetMap data is retrieved using the Overpass API.
An input region of interest can be extracted by:

* Place + result number: The name of the city/region, and the resulting number to retrieve (as seen in OpenStreetMap result order)
* Polygon: A polygon with the coordinates delimitating the desired region of interest
* Bounding box: Using northing, southing, easting, and westing coordinates
* Point + distance (meters): Use the (latitude, longitude) central point plus an input distance around it
* Address + distance (meters): Set the address as central point and an input distance around it

Additionally, the state of the data-base can be retrieved for a specific data. 
This allows for comparisons across time and keeping track of a city's evolution.

Results are depicted for the city of **Lyon, France**:

- Locations of residential and activity land uses are retrieved

* Buildings with defined land use:
	* Blue: Residential use
	* Red: Activity use
	* Green: Mixed use

![Buildings](examples/images/Lyon_Buildings.png?raw=true)

* Points of interest (POIs) with defined land use:

![POI](examples/images/Lyon_POIs.png?raw=true)

- Densities for each land use are estimated:

	* Probability density function estimated using Kernel Density Estimation (KDE)

![Densit](examples/images/Lyon_densities.png?raw=true)

* Activity uses can be further classified using the OSM wiki:
	* Leisure and amenity
	* Shop
	* Commercial and industrial

![Activ](examples/images/Lyon_activities_densities.png?raw=true)

- Street network:

![SN](examples/images/Lyon_graph.png?raw=true)

**Sprawling indices:**

- Land use mix indices: Degree of co-occurence of differing land uses within 'walkable' distances.

![LUM](examples/images/Lyon_Landusemix.png?raw=true)

- Accessibility indices: Denotes the degree of accessibility to differing land uses (from residential to activity uses).

	* Fixed activities: Represents the distance needed to travel in order to reach a certain number of activity land uses

	* Fixed distance: Denotes the cumulative number of activity opportunities found within a certain travel distance

![Acc](examples/images/Lyon_Accessibility.png?raw=true)

- Dispersion indices: Denotes the degree of scatteredness of the built-up area.

	* ""A landscape suffers from urban sprawl if it is permeated by urban development or solitary buildings [...]. The more area built over and the more dispersed the built-up area, [...] the higher the degree of urban sprawl"" [(Jaeger and Schwick 2014)](http://www.sciencedirect.com/science/article/pii/S1470160X13004858)

![Disp](examples/images/Lyon_Dispersion.png?raw=true)

## Example: Population densities

Gridded population data is used in the context of population densities downscaling:

* A fine scale description of residential land use (surface) per building is built exploiting OpenStreetMap.

* Using coarse-scale gridded population data, we perform the down-scaling for each household given their containing area for residential usage

* The evaluation is carried out using fine-grained census block data (INSEE) for cities in France as ground-truth.

Population count images are depicted for the city of **Grenoble, France**:

- Population densities (INSEE census data):

![INSEE](examples/images/Grenoble_INSEE.png?raw=true)


- Population densities (INSEE census data, Gridded Population World resolution):

![GPW](examples/images/Grenoble_GPW_simulation.png?raw=true)

",68,68,6,1,transportation,"[demographics, dispersion, geospatial, gis, land-use, land-use-mix, open-data, openstreetmap, overpass-api, population-density, python, spatial-analysis, sustainability, sustainable-development-goals, transportation, urban, urban-accessibility, urban-dispersion, urban-planning, urban-sprawl]",00000
29,hironex,johannesuhl,N/A,https://github.com/johannesuhl/hironex,https://api.github.com/repos/johannesuhl/hironex,"HiRoNEx: Historical road network extractor: A python tool for automatic, fully unsupervised extraction of historical road networks from historical maps.","# HIRONEX: Historical road network extractor
HIRONEX is a python tool for automatic, fully unsupervised extraction of historical road networks from historical maps. 
HIRONEX reads a shapefile containing the modern road network, and a scanned & georeferenced historical map from year T, covering the same area, in the same spatial reference system.
Then, HIRONEX samples the color information from the historical map, and calculates a probability (road overlap indicator - ROI) for each modern road segment of overlapping with a road symbol in the historical map. Then, 1d cluster analysis is applied to extract road segments that are likely to have existed in the year T of the historical map.
The ROI and resulting cluster labels are then appended to the input shapefile, which can be visualized directly in the script.

The HIRONEX output is not perfect, as HIRONEX is work in progress and is currently being improved.
There are a few user-set parameters (see script), that should be tested in order to optimize results. While sensitivity analyses have shown that the results are largely invariant to these parameters, tweaking them can greatly improve processing time.

<img width=""1000"" src=""https://github.com/johannesuhl/hironex/blob/main/hironex.jpg"">

Reference:

Uhl, J. H., Leyk, S., Chiang, Y. Y., & Knoblock, C. A. (2022). Towards the automated large-scale reconstruction of past road networks from historical maps. Computers, Environment and Urban Systems, 94, 101794. https://doi.org/10.1016/j.compenvurbsys.2022.101794


",68,68,8,0,transportation,"[clustering, geographic-data, geographical-information-system, historical-data, historical-gis, historical-maps, map, map-processing, road-network, spatial-data, topographic-maps, transportation, transportation-network, urbanization]",00000
30,bustime,norn,N/A,https://github.com/norn/bustime,https://api.github.com/repos/norn/bustime,Web and API for public transport real-time monitoring and visualization.,"# Bustime - public trasport online
Checkout [busti.me](https://busti.me/) for live example.

Python/Django app process and visualize public transport vehicle positions using GPS coordinates.
This collection of programs are able to detect current nearest stop, vehicle direction,
real-time timetable, sleeping state (not moved for a long time), zombie state (broken vehicles).

## Supported transport types:
* bus
* trolleybus
* tramway
* inter-city bus
* shuttle bus

## Features
* high optimization for rapid server replies
* websocket real-time updates
* modern HTML5 standard compliance
* simplified version for older devices and browsers (even with no JS)
* OpenStreetmap support
* Rainsys system updates only changed information (broadcasted via websocket)
* ""MultiBus"" technology allows to track all vehicles of selected route

## How to install
1. Install Ubuntu 14.04 LTS (tested)
2. Make virtualenv and install pip packages from ```docs/pips/pips.freeze```
3. Initialize Django environment
4. Fill in city, bus, bus stop and route tables
5. Generate list of stops for JS at ```utils/nbusstops-export.py```
6. Edit zbusupd.py according to active cities
7. Install supervisor and daemons from the ```addons``` list
8. Run

Optionally you could install:
* [Semantic UI](http://semantic-ui.com/) (CSS framework)
* [r.js optimizer](http://requirejs.org/docs/optimization.html) (compile collection of JS in one file)
* [GeoLite2](http://dev.maxmind.com/geoip/geoip2/geolite2/) (for user's city detection by IP address)

Scripts for building CSS and JS: 99-release-*.sh

#### License
Published under [MIT](LICENSE) license.

",65,65,5,2,transportation,"[bus, django, gps, gtfs, gtfs-rt, opendata, public-transport, public-transportation, realtime, tracking, transportation]",00000
31,modeify,conveyal,conveyal,https://github.com/conveyal/modeify,https://api.github.com/repos/conveyal/modeify,Deliver personalized commute information to travelers.,"# Modeify

[![Build status][travis-image]][travis-url]
[![Test coverage][coveralls-image]][coveralls-url]
[![Code Climate][code-climate-image]][code-climate-url]
[![Dependency Status][david-image]][david-url]

[travis-image]: https://img.shields.io/travis/conveyal/modeify.svg?style=flat-square
[travis-url]: https://travis-ci.org/conveyal/modeify
[coveralls-image]: https://img.shields.io/coveralls/conveyal/modeify.svg?style=flat-square
[coveralls-url]: https://coveralls.io/r/conveyal/modeify?branch=master
[code-climate-image]: http://img.shields.io/codeclimate/github/conveyal/modeify.svg?style=flat-square
[code-climate-url]: https://codeclimate.com/github/conveyal/modeify
[david-image]: http://img.shields.io/david/conveyal/modeify.svg?style=flat-square
[david-url]: https://david-dm.org/conveyal/modeify

[Modeify](http://modeify.co) is an open-source platform for multimodal commuter engagement. Utilizing the latest advances in open transportation technology, Modeify uses personalized outreach to promote commuter behavior change and improve outcomes for travelers, employers, and transportation demand management (TDM) providers.

Development of Modeify is supported by the [Mobility Lab](http://mobilitylab.org/) [Transit Tech Initiative](http://mobilitylab.org/tech/transit-tech-initiative/).

## Development quick start

Clone to your local directory to begin.

```bash
$ git clone git@github.com:conveyal/modeify.git
$ cd modeify
```

### Requirements

* [Node.js](https://nodejs.org/) version `6.x.x`
* [Yarn](https://yarnpkg.com/en/)
* [R5](https://github.com/conveyal/r5) url endpoint
* [MongoDB](https://www.mongodb.org/)
* [Mapbox](https://mapbox.com) access token and a map id
* [Mapzen Search](https://mapzen.com/projects/search/) api key
* [Auth0](https://auth0.com)

### Configuration

An example configuration can be found in `configurations/default`. Copy that directory and edit the `settings.yml` and `env.yml` files. Add your

1. `MONGODB_URL` to `env.yml`.
2. Mapbox `access_token` and `map_id` to `settings.yml`.
3. Mapzen Search `api_key` to `settings.yml`.
4. R5 url endpoint to `settings.yml`.
5. Auth0 `AUTH0_CLIENT_ID`, `AUTH0_DOMAIN`, `AUTH0_NON_INTERACTIVE_CLIENT_ID`, `AUTH0_NON_INTERACTIVE_CLIENT_SECRET`, and `AUTH0_SECRET` to `env.yml`.
6. Auth0 logo and primary color in `lock > theme` in `settings.yml`.

If you have configuration specific images run `./bin/set-deployment ../path/to/your/configuration/directory` to use them.

### Running

If Modeify is configured correctly (above) then you will be able to run with `npm start`. This will

1. Install all of the dependencies.
2. Run the node server with automatic restarts using [nodemon](http://nodemon.io/). It watches for changes in the `/lib` directory.
3. Build the `client/planner-app` and `client/manager-app` and rebuilds on changes.

Once it starts, you will be able to find the planner at [http://localhost:5000](http://localhost:5000) and the manager at [http://localhost:5000/manager](http://localhost:5000/manager).

To point it at a different configuration directory run:

```bash
$ npm start -- ../path/to/configuration/directory
```

## Deployment

This repository is setup to deploy automatically to Heroku. All commits to the dev branch will be deployed to staging and all commits to master will be deployed to production. Pull requests will create review apps that run on Heroku Hobby Dynos. The review apps will build their client side files locally while the staging and production apps retrieve their assets from AWS and they need to be deployed manually.

Heroku will run the node server with

```bash
$ node lib/server.js
```

### Heroku Environment Variables

All variables in `env.yml` must be set manually as Heroku environment variables. They can be set via the command line with:

```bash
$ heroku config:set VARIABLE_NAME=value --app heroku-app-name
```

The `settings.yml` is retrieved from Heroku apps via the `MODEIFY_CONFIG` environment variable. To set that value you can run the `bin/push-settings-to-heroku` script:

```bash
$ ./bin/push-settings-to-heroku ../path/to/configuration/settings.yml heroku-app-name
```

### AWS Assets Deployment

Deployment is done with `mastarm`. See [mastarm#deploy](https://github.com/conveyal/mastarm#deploy) for more info on configuration.

```bash
$ mastarm deploy --minify --env production --config ../configurations/modeify
```
",64,64,16,50,transportation,"[tdm, transportation]",00000
32,cfr,google,google,https://github.com/google/cfr,https://api.github.com/repos/google/cfr,Solve vehicle routing problems with Google Optimization AI Cloud Fleet Routing,"# Google Fleet Routing App

A web application to explore the capabilities of
the [**Cloud Fleet Routing**](https://cloud.google.com/optimization/docs/overview) (CFR) feature of
Google **Cloud Optimization API**.

CFR solves vehicle routing problems (VRPs).
Given a set of *shipments* with locations,
a set of *vehicles* to carry out deliveries,
costs and additional constraints;
CFR works to find an optimal solution with efficient routes
where every shipment is delivered by a vehicle,
with all constraints met and minimal cost.

This application presents the properties
of the CFR data model as interactive forms, tables, and maps.
Users may find it a helpful way to familiarize themselves
with the data model and functions of the API.
Before writing any code, use the application to construct CFR scenarios,
tune constraint parameters, visualize routes, and more.

<https://cloud.google.com/optimization>

![Fleet Routing App screenshot](application/frontend/src/assets/docs/app-overview.png)

## Intended Use

The application is intended to be used as an exploratory tool
and should not be deployed in any production critical path.
Google provides this application for users to try out the API and understand
how to model their use cases in CFR.
But customers should implement their own solutions
to integrate Cloud Fleet Routing into their business processes.

## Billing
The resources and API usage generated by the application are billed to the project owner.
*Fleet Routing App is not free to use.*
Customers can expect ongoing charges related to cloud resources
(compute, networking, storage, etc.),
along with usage-based charges for the Maps Platform APIs and Cloud Fleet Routing.
When running locally for development,
the application will still incur usage-based charges for Maps and CFR.

In order to deploy the application to a project,
the project must be linked to a valid **Google Cloud Billing Account**.
The customer is responsible for all charges accrued on the account.

> ⚠️ The application and Cloud Fleet Routing perform several kinds of batch operations.
> This means it can be easy to generate a high volume of usage in a short period of time,
> especially for large scenarios with many shipments.
> Familiarize yourself with the pricing models for Maps Platform and Cloud Fleet Routing
> before using the application and routinely monitor the charges on your billing account.
>
> Keep scenarios small to begin with and get comfortable with the billing model
> before attempting to solve large scenarios which may be expensive.

### Pricing
Refer to the following pricing guides for Cloud, Maps, and CFR for detailed costs:
- [Google Cloud Pricing](https://cloud.google.com/pricing)
- [Google Maps Platform Pricing](https://mapsplatform.google.com/pricing/)
- [Cloud Fleet Routing Pricing](https://cloud.google.com/optimization/pricing)

> ⚠️ Google Cloud and Google Maps Platform offer ""getting started"" and ""free tier"" credits that may cover
> a small amount of usage for free. However, as mentioned in the previous section,
> large scenarios can generate a lot of spend in a short period of time.
> If you are not careful, it is possible to use up all of your credits
> with just a few large scenarios.

## License
Code is license under an MIT-style license,
see [LICENSE](LICENSE) for details.

## Terms of Use
The application is subject the following terms of use:
- [Google Cloud Terms of Use](https://cloud.google.com/terms)
- [Google Maps Platform Terms of Use](https://cloud.google.com/maps-platform/terms)
- [Google Cloud Optimization API service-specific terms](https://cloud.google.com/optimization/docs/tos/service-terms)
- [Google OAuth 2.0 Policies](https://developers.google.com/identity/protocols/oauth2/policies)


---
## Deploy an Instance

To deploy a containerized instance of the application from **Google Artifact Registry**,
follow the steps in the project setup and deployment guides:

- **[Project Setup](docs/project.md)** <br>
  Create and configure a Google Cloud project with the prerequisites to deploy Fleet Routing App.
- **[Deployment Guide](docs/deployment.md)** <br>
  Deploy an instance of Fleet Routing App into your Google Cloud project.


---
## Local Development

To run a local instance of the application on your machine,
follow the steps in the development guide:

- **[Development Guide](docs/development.md)** <br>
  Run Fleet Routing App in your local Node.js environment.


---
## User Guide
Instructions for how to use the application are available in the
[User Guide](application/frontend/src/assets/docs/documentation.md).

This guide can also be accessed by clicking the
""app help docs"" link on the application's landing page
or the ""❔ Help"" button in the lower-left corner
of the main application window.
",62,62,8,10,transportation,"[fleet-management, google, google-cloud, google-maps, logistics, optimization, route-optimization, routing, transportation, tsp, tsp-problem, tsp-solver, vrp, vrp-solver]",00000
33,DTA,DrKeHan,N/A,https://github.com/DrKeHan/DTA,https://api.github.com/repos/DrKeHan/DTA,"This repository documents MATLAB implementation of a dynamic user equilibrium solver, including a dynamic network loading sub-routine","# DTA
This repository documents a MATLAB package for computing large-scale Dynamic User Equilibrium models. 

# Documentation
Han, K, Eve, G, Friesz, TL, 2019. Computing dynamic user equilibria on large-scale networks with software implementation. Networks and Spatial Economics, Volume 19, Issue 3, pp 869–902. Open-access URL: https://doi.org/10.1007/s11067-018-9433-y.
",62,62,5,2,transportation,"[modeling, traffic, traffic-simulation, transport, transportation, transportation-network, transportation-planning, transportation-simulation]",00000
34,MultiObjectTracker,alokwhitewolf,N/A,https://github.com/alokwhitewolf/MultiObjectTracker,https://api.github.com/repos/alokwhitewolf/MultiObjectTracker,Advanced multiple object tracker using dlib and OpenCV. ,"# Multi ObjectTracker
Advanced multiple object tracker using <b>dlib</b> and <b>openCV</b> library.
<br><br>
![Image](docs/images/screenshot_tracking.png)

This is my summer(2017) project under Prof P. Vedagiri of Civil department(IIT Bombay) at the end of my 2nd semester. This pertains to automating the detection of pedestrian-vehicle conflicts by using image processing. The objective was to find out <a href=""https://www.researchgate.net/figure/7232990_fig1_Fig-1-Illustration-of-post-encroachment-time-PET""> Post Encroachment Time (PET)</a> values semi-autonomously.

This program has two modes. The <b>normal mode</b> can track multiple instances of user specified objects of 2 categories as they move across the frames. The <b>analysis</b> mode consists a suite of data analysis of the object trajectories obtained for the transportation department purposes. 


## Dependencies

* [`Dlib` with Python support](http://dlib.net/)
* [`OpenCV` with Python support](http://opencv.org)
* [`xlwt` python package(for writing on excel files to store PET values)](https://pypi.python.org/pypi/xlwt)

## Starting the code

### Normal mode

To run the code using a video file use the following command line arguement --

```shell
python main.py -v <path-2-video-file>
```

For example, you can use the demo video provided with this code as --

```shell
python main.py -v docs/video/traffic2
```


Once the code starts, it will play video file. To select the objects to be tracked, pause the video by pressing the <kbd>p</kbd> key. It will first ask you to  to create a bounding box around the object(s) to be tracked in a newly created window. Press the mouse to select the top-left pixel location of the object to be tracked and then release the mouse on the bottom-right location of the object to be tracked. You can select multiple instaces of a type of object

![Image](docs/images/normal_create_rectangles.png)

Also, if you want to discard the last selected object, press the <kbd>d</kbd> key. Press <kbd>s</kbd> key to save the category of objects and initiate the tracker.Each object is assigned an index, which will be useful in deleting instances of the trackers. press <kbd>r</kbd> key anytime to resume tracking without saving the currently selected objects.

This process is done twice to track objects of 2 categories. You may fill objects of one category only if you choose so. You can always pause and add objects later

Whenever the video is playing, you can press <kbd>d</kbd> key to delete instances of the object you do not want. Further instruction will appear on the terminal window

You can always pause and resume the tracking. It won't lead to any loss of tracker objects.

Press <kbd>q</kbd> anytime to gracefully quit the code

### Analysis mode


Additional flag -l is needed for calculating PET and using the analysis mode.

If the -l flag is not provided, main.py simply acts as multiple object tracker.

The -l is followed by the length of the video to be played in seconds. This is important for finding out PET values, as we need the frame processing rate. The runtime of the video is essential. 

```shell
-l <run time length of the video in seconds>
```
In the first frame, it asks you to draw two reference lines in the image. This reference lines are the lines in real world whose separation distance, you know earlier from field observation. These reference lines will be used in calculating avg velocity of the vehicles for analysis purpose

![Image](docs/images/mode_drawlines.png)

Set the distance between two reference lines(in metres) with the flad -d. The distance is set as 100 in default. 

```shell
-d <distance between to reference lines
```

What follows next is the same procedure for adding objects to track as in normal mode. It forst asks you for adding pedestrians and then vehicles. Trajectory of each object is tracked and stored. The algorithm in algo.py and intersect.py help in detecting whenever a vehicle lands at a point where the pedestrian was present erstwhile. If -l flag is provided then PET values calculated are stored in an excel file.

![Image](docs/images/mode_tracking_collision.png)


A sample commandline instruction for the provided sample video, whose runtime is around 134 seconds, in analysis mode could b -

```shell
python main.py -v docs/video/traffic2 -l 134 -d 100
```
After the video playback is over, or if you quit the program inbetween, it does analysis of the trajectories and displays the following - 
* Points in the video where path conflict took place - <br>

 ![Image](docs/images/mode_conflictpoints.png)
 
* Trajectory of the vehicles and pedestrians we have tracked - <br>
 
 ![Image](docs/images/mode_trajectory.png)
 
* Saves an excel sheet whose column headers are PET values, Sex of the pedestrian, Speed of the vehicle, Time in the video at which the said conflict took place and the coordinate in the video where it took place

  ![Image](docs/images/sheet.png)
  <i>important to note that speed of the vehicle gets stores only of it crosses both the reference lines</i>


",61,61,3,2,transportation,"[civil-engineering, computer-vision, dlib, image-processing, multiple, opencv, post-encroachment-time, python, transportation, transportation-problem, transportation-safety]",00000
35,Realtime-Port-Authority,rectangle-dbmi,rectangle-dbmi,https://github.com/rectangle-dbmi/Realtime-Port-Authority,https://api.github.com/repos/rectangle-dbmi/Realtime-Port-Authority,Realtime transit tracker of Pittsburgh's Port Authority buses using the realtime PAT API using Google Maps to Display the Maps,"![PAT track Logotype](https://github.com/Tobaloidee/Realtime-Port-Authority/blob/default/images/logotype-a-v1.png)

Realtime-Port-Authority
=======================

The purpose of this was to create a real-time tracking of port authority
of Pittsburgh, PA, using the realtime API given by [Port Authority](http://truetime.portauthority.org/bustime/home.jsp) on top of
the Google Maps API.

### Features:
- Buses Run at Realtime
- shows ETAs of buses to stops and stops to buses
- shows stop markers above a certain zoom
- RecyclerView saves via sharedpreferences
- Uses RxJava + Retrofit to obtain data from Port Authority's API
- Our (lame) attempt at using MVVM for UI-model interaction


### Releases:
- [Google Play Store](https://play.google.com/store/apps/details?id=rectangledbmi.com.pittsburghrealtimetracker)

API limitations:
- the buses don't update until after 10+ seconds. Our app only updates 
every 10 seconds
- There are only a couple buses offered publicly. We promise to get updates
to the new buses as soon as possible!
- Buses disappear when off-route away from their route lines

#Android Development

Please refer to [this wiki page](https://github.com/rectangle-dbmi/Realtime-Port-Authority/wiki/Contributing-to-to-PAT-Track) for instructions to install and use the project.

This will be done using [Android Studio](https://developer.android.com/sdk/installing/studio.html) 1.0 as of 12-09-2014.


",59,59,8,50,transportation,"[android, buses, java, kotlin, pittsburgh, realtime, transit, transportation, vehicle-tracking]",00000
36,schiene,kennell,N/A,https://github.com/kennell/schiene,https://api.github.com/repos/kennell/schiene,:train2: schiene is a Python library for interacting with Bahn.de,"# 🚆 schiene
schiene is a Python library for interacting with Bahn.de. Consider it a unofficial API client. This library uses **realtime,  live** information retrieved from Bahn.de and therefore contains information on delays, cancellations etc.

<sub>Note: if you do not need live information (delays etc.) you can use the new official [Fahrplan API](https://data.deutschebahn.com/dataset/api-fahrplan.html) from Deutsche Bahn. Also, the Bahn.de HTML code is a steaming pile of shit that can cause this library to break at any time. Do not use for any critical stuff.</sub>

## Install

```
pip install schiene
```

## Usage examples
```python
>>> import schiene
>>> s = schiene.Schiene()
>>> s.connections('Mannheim HbF', 'Stuttgart HbF')
[{'arrival': '13:08',
  'canceled': True,
  'delay' : {
    'delay_departure' : 15,
    'delay_arrival': 0
  }
  'departure': '12:30',
  'details': 'http://mobile.bahn.de/bin/mobil/query.exe/dox?ld=15085&n=1&i=or.0179785.1439546366&rt=1&use_realtime_filter=1&co=C0-1&vca&HWAI=CONNECTION$C0-1!details=opened!&',
  'price': 39.0,
  'products': ['ICE'],
  'time': '0:38',
  'transfers': 0},
 {'arrival': '13:54',
  'departure': '12:38',
  'details': 'http://mobile.bahn.de/bin/mobil/query.exe/dox?ld=15085&n=1&i=or.0179785.1439546366&rt=1&use_realtime_filter=1&co=C0-2&vca&HWAI=CONNECTION$C0-2!details=opened!&',
  'ontime': True,
  'price': 30.0,
  'products': ['S', 'EC'],
  'time': '1:16',
  'transfers': 1},
  ...]
>>> s.stations('Hamburg')
[{'extId': '008002549',
  'id': 'A=1@O=Hamburg '
        'Hbf@X=10006908@Y=53552732@U=80@L=008002549@B=1@p=1439332022@',
  'prodClass': '15',
  'state': 'id',
  'type': '1',
  'typeStr': '[Bhf/Hst]',
  'value': 'Hamburg Hbf',
  'weight': '24258',
  'xcoord': '10006908',
  'ycoord': '53552732'},
 {'extId': '008002548',
  'id': 'A=1@O=Hamburg '
        'Dammtor@X=9989568@Y=53560751@U=80@L=008002548@B=1@p=1439332022@',
  'prodClass': '31',
  'state': 'id',
  'type': '1',
  'typeStr': '[Bhf/Hst]',
  'value': 'Hamburg Dammtor',
  'weight': '27663',
  'xcoord': '9989568',
  'ycoord': '53560751'},
  ...]
```

## Projects using schiene

* [Home Assistant](https://github.com/home-assistant/home-assistant)
* [Deutsche Bahn Home Assistant Sensor](https://github.com/FaserF/ha-deutschebahn)

<sub>Create a pull request to add your project here</sub>

",52,52,9,8,transportation,"[bahn, germany, public-transportation, python, transportation]",00000
37,GTFS-ride,ODOT-PTS,ODOT-PTS,https://github.com/ODOT-PTS/GTFS-ride,https://api.github.com/repos/ODOT-PTS/GTFS-ride,GTFS-ride is an open standard for storing and sharing fixed-route transit ridership data.,"The repository contains specification for GTFS-ride, an open standard for storing and sharing fixed-route transit ridership data.

[Read more about GTFS-Ride](https://gtfsride.org)
",47,47,22,9,transportation,"[public-transportation, ridership, transit, transportation]",00000
38,entur-card,jonkristian,N/A,https://github.com/jonkristian/entur-card,https://api.github.com/repos/jonkristian/entur-card,Home Assistant Lovelace card card for the Entur public transport component.,"# Entur Card

[![hacs][hacs-badge]][hacs-url]
[![GitHub Release][releases-shield]][releases]
[![License][license-shield]](LICENSE)
![Project Maintenance][maintenance-shield]
[![BuyMeCoffee][buymecoffeebadge]][buymecoffee]

This card is made to work with the [Entur public transport](https://www.home-assistant.io/components/sensor.entur_public_transport/) component. You will have to configure the Entur component before you can use this card.
Click [here](https://stoppested.entur.org) to get stop id's for your setup.

![Example][exampleimg]

> ⚠️ Unfortunately there is currently no provided method to define a start and a stop station with entur. But you can add a whitelist of _lines_ so that you can force only relevant results.

### Features

- 🛠 Editor (no need to edit `yaml`)
- 🌎 Internationalization
- 😍 Customize routes and lines
- 🌓 Light and dark theme support

## Installation

### HACS

Entur Card is available in [HACS][hacs] (Home Assistant Community Store).

1. Install HACS if you don't have it already
2. Open HACS in Home Assistant
3. Go to ""Frontend"" section
4. Click button with ""+"" icon
5. Search for ""Entur Card""

### Manual

1. Download `entur-card.js` file from the [latest-release].
2. Put `entur-card.js` file into your `config/www` folder.
3. Add reference to `entur-card.js` in Dashboard. There's two way to do that:
   - **Using UI:** _Settings_ → _Dashboards_ → _More Options icon_ → _Resources_ → _Add Resource_ → Set _Url_ as `/local/entur-card.js` → Set _Resource type_ as `JavaScript Module`.
     **Note:** If you do not see the Resources menu, you will need to enable _Advanced Mode_ in your _User Profile_
   - **Using YAML:** Add following code to `lovelace` section.
     ```yaml
     resources:
       - url: /local/entur-card.js
         type: js
     ```

---

## Card options

| Field             | Type               | Description                                        |
| ----------------- | ------------------ | -------------------------------------------------- |
| custom:entur-card | `string(required)` |
| name              | `string`           | Name of the card                                   |
| divide_routes     | `true/false`       | Add a line divider between routes                  |
| display_time      | `true/false`       | Displays the time in the header                    |
| entities          | `list(required)`   | A list of entity IDs or entity objects, see below. |

## Entity options

| Field               | Type               | Description                                           |
| ------------------- | ------------------ | ----------------------------------------------------- |
| entity              | `string(required)` | Home Assistant entity ID.                             |
| icon                | `string`           | Overrides the icon.                                   |
| name                | `string`           | Overrides friendly name.                              |
| destination         | `string`           | Display hardcoded destination name.                   |
| clock_icon_state    | `string`           | None or `left` / `right` side of the time string.     |
| extra_departures    | `string`           | `next` or `all`.                                      |
| human_readable_time | `string`           | Show for `all`, `line`, `line_next` or `line_extras`. |
| remaining_time      | `string`           | Show for `all`, `line`, `line_next` or `line_extras`. |

## Entur configuration

```yaml
sensor:
  - platform: entur_public_transport
    name: Transport
    show_on_map: true
    stop_ids:
      - ""NSR:StopPlace:5850"" # Grorud T bus stop
      - ""NSR:StopPlace:548"" # Bergen train station
      - ""NSR:StopPlace:58652"" # Mortavika ferry
```

## Manual card configuration

```yaml
- type: custom:entur-card
  name: Rutetider
  entities:
    - entity: sensor.transport_grorud_t
      extra_departures: all
      divide_lines: true
      clock_icon_state: left
    - entity: sensor.transport_bergen_stasjon
      human_readable_time: line
    - entity: sensor.transport_mortavika_ferjekai
      remaining_time: all
      clock_icon_state: left
  display_time: true
  divide_routes: true
```

## Contributions are welcome!

---

⭐️ this repository if you found it useful ❤️

[![BuyMeCoffee][buymecoffebadge2]][buymecoffee]

<!-- Badges -->

[buymecoffee]: https://www.buymeacoffee.com/jonkristian
[buymecoffeebadge]: https://img.shields.io/badge/buy%20me%20a%20coffee-donate-yellow.svg?style=for-the-badge
[buymecoffebadge2]: https://bmc-cdn.nyc3.digitaloceanspaces.com/BMC-button-images/custom_images/white_img.png
[hacs-url]: https://github.com/hacs/integration
[hacs-badge]: https://img.shields.io/badge/HACS-default-orange.svg?style=for-the-badge
[forum-shield]: https://img.shields.io/badge/community-forum-brightgreen.svg?style=for-the-badge
[forum]: https://community.home-assistant.io/
[license-shield]: https://img.shields.io/github/license/jonkristian/entur-card.svg?style=for-the-badge
[maintenance-shield]: https://img.shields.io/badge/maintainer-Jon%20Kristian%20Nilsen%20%40jonkristian-blue.svg?style=for-the-badge
[releases-shield]: https://img.shields.io/github/release/jonkristian/entur-card.svg?style=for-the-badge
[releases]: https://github.com/jonkristian/entur-card/releases

<!-- References -->

[hacs]: https://hacs.xyz
[exampleimg]: example.png
",46,46,14,4,transportation,"[entur, hacs, home-assistant, homeassistant, lovelace, transportation]",00000
39,amodeus,amodeus-science,amodeus-science,https://github.com/amodeus-science/amodeus,https://api.github.com/repos/amodeus-science/amodeus,Autonomous Mobility-on-Demand Extremely Useful Simulation,"# amodeus.amodeus <a href=""https://travis-ci.org/amodeus-science/amodeus""><img src=""https://travis-ci.org/amodeus-science/amodeus.svg?branch=master"" alt=""Build Status""></a>

Autonomous mobility-on-demand simulation library, version `2.1.1`

## Admins

AMoDeus is jointly maintained and further developed by the Admins Christian Fluri (ETH Zürich), Joel Gächter (ETH Zürich), Sebastian Hörl (IRT SystemX), Claudio Ruch, Jan Hakenberg, ChengQi Lu (TU Berlin), and Marc Albert (nuTonomy). There is a Slack channel where stakeholders of the library meet and exchange.

Please let us know if you'd like to contribute to the code or join the Slack channel!

## Purpose

This repository is a library that allows the simulation of autonomous mobility-on-demand (AMoD) system including their fleet management algorithms in the multi-agent transportation simulation environment MATSim.

Try it, orchestrate your own fleet of amod-taxis!
To get started, install and run [amod](https://github.com/amodeus-science/amod).
Here is a [visualization](https://www.youtube.com/watch?v=QkFtIQQSHto).

Our website is [amodeus.science](https://www.amodeus.science/).

## Features

The code manages the dispatching of autonomous taxis in the MATSim environment.
It provides standard autonomous mobility-on-demand dispatching algorithms and an API to implement and test novel ones.

### Available Unit Capacity Dispatching Algorithms

* **Adaptive Real-Time Rebalancing Policy** from *Robotic load balancing for mobility-on-demand systems* by Pavone, M., Smith, S.L., Frazzoli, E. and Rus, D., 2012.
* **Feedforward Fluidic Optimal Rebalancing Policy** from *Robotic load balancing for mobility-on-demand systems* by Pavone, M., Smith, S.L., Frazzoli, E. and Rus, D., 2012.
* **Global Bipartite Matching Policy** fromRuch, Claudio, Sebastian Hörl, and Emilio Frazzoli. ""Amodeus, a simulation-based testbed for autonomous mobility-on-demand systems."" 2018 21st International Conference on Intelligent Transportation Systems (ITSC). IEEE, 2018.
* **SQM algorithm** from *Fundamental Performance Limits and Efficient Polices for Transportation-On-Demand Systems* by M.Pavone, K.Treleaven, E.Frazzoli, 2010.
* **Demand-supply-balancing dispatching heuristic** from *Large-scale microscopic simulation of taxi services* by Maciejewski, M., and Bischoff J., 2015.
* **First Come First Served Strategy with Grid Rebalancing** from *Operations of Shared Autonomous Vehicle
Fleet for Austin, Texas, Market* by Fagnant, D. J., Kockelman, K. M., and Bansal, P., 2015.
* **Feedforward time-varying rebalancing policy** from Spieser, Kevin, Samitha Samaranayake, and Emilio Frazzoli. ""Vehicle routing for shared-mobility systems with time-varying demand."" American Control Conference (ACC), 2016. IEEE, 2016.
* **+1 method** from The +1 Method: Model-Free Adaptive Repositioning Policies for Robotic Multi-Agent Systems by Ruch, C., Gächter, J., Hakenberg, J. and Frazzoli, E., 2019.
* **DFR algorithm** from Albert, M., Ruch, C. and Frazzoli, E. ""Imbalance in Mobility-on-Demand Systems: A Stochastic Model and Distributed Control Approach."" ACM Transactions on Spatial Algorithms and Systems (TSAS) - Special Issue on Urban Mobility: Algorithms and Systems, 2019.
* **Control policy requiring no explicit communication** and **sensor based control policy** from Arsie, Alessandro, Ketan Savla, and Emilio Frazzoli. ""Efficient routing algorithms for multiple vehicles with no explicit communications."" IEEE Transactions on Automatic Control, 2009.

### Available Ride Sharing Dispatching Algorithms
* **Demand-supply-balancing with Beam Extension for Ride Sharing** Demand Supply Balancing heuristic from *Large-scale microscopic simulation of taxi services* by Maciejewski, M., and Bischoff J., 2015 extended with ride sharing if two requests start close to each other and have a similar direction.
* **Dynamic Ride Sharing Strategy** from *Dynamic ride-sharing and optimal fleet sizing for a system of shared autonomous vehicles* by Fagnant, D. J., and Kockelman, K. M., 2015.
* **T-Share** from Ma, Shuo, Yu Zheng, and Ouri Wolfson. ""T-share: A large-scale dynamic taxi ridesharing service."" Data Engineering (ICDE), 2013 IEEE 29th International Conference on. IEEE, 2013.
* **High-Capacity Algorithm** from Alonso-Mora, Javier, et al. ""On-demand high-capacity ride-sharing via dynamic trip-vehicle assignment."" Proceedings of the National Academy of Sciences 114.3 (2017): 462-467.

## Gallery

<table><tr>
<td>

![p1t1](https://user-images.githubusercontent.com/4012178/38852194-23c0b602-4219-11e8-90af-ce5c589ddf47.png)

<td>

![p1t4](https://user-images.githubusercontent.com/4012178/38852209-30616834-4219-11e8-81db-41fe71f7599e.png)

<td>

![p1t3](https://user-images.githubusercontent.com/4012178/38852252-4f4d178e-4219-11e8-9634-434200922ed0.png)

<td>

![p1t2](https://user-images.githubusercontent.com/4012178/38852212-3200c8d8-4219-11e8-9dad-eb0aa33e1357.png)

</tr></table>

## Integration

Specify `repository` and `dependency` of the amodeus library in the `pom.xml` file of your maven project:
```xml
<repositories>
  <repository>
    <id>amodeus-mvn-repo</id>
    <url>https://raw.github.com/amodeus-science/amodeus/mvn-repo/</url>
    <snapshots>
      <enabled>true</enabled>
      <updatePolicy>always</updatePolicy>
    </snapshots>
  </repository>
</repositories>

<dependencies>
  <dependency>
    <groupId>amodeus</groupId>
    <artifactId>amodeus</artifactId>
    <version>2.1.1</version>
  </dependency>
</dependencies>
```
The source code is attached to every release.

## Literature

AMoDeus was originally introduced in the paper
* *AMoDeus, a simulation- based testbed for autonomous mobility-on-demand systems* by Ruch, C., Hörl, S., Frazzoli, E., in [21st International Conference on Intelligent Transportation Systems (ITSC), pages 3639–3644](https://ieeexplore.ieee.org/abstract/document/8569961?casa_token=pTSPwvis80sAAAAA:Hkw25pq0BrDFbz7_d_JatPPmP8qqjH3Pha7_bNhYrCM4bdAsTAm-eSBl7zvIcWJiwNz11gmtNjo), 2018.

Since then, the library has been used for various scientific contributions, including:

* *Quantifying the efficiency of ride sharing* by Ruch, C., Lu, C., Sieber, L., and Frazzoli, in [IEEE Transactions on Intelligent Transportation Systems, 10.1109/TITS.2020.2990202](https://ieeexplore.ieee.org/document/9089254), 2020
* *Improved public transportation in rural areas with self-driving cars: A study on the operation of Swiss train lines.* by Sieber, L., Ruch, C., Hörl, S., Axhausen, K.W., and Frazzoli, E. in [Transportation Research Part A: Policy and Practice, 134:35–51](https://www.sciencedirect.com/science/article/pii/S0965856418314083?casa_token=t8VPYKrq63kAAAAA:qlSeaPRjqTslxzIq5NrcoyaaRqVU-MhVfezCzT--uCTqlvmgIw-gIoKXf4Rdg2CPDnnsYhHToYY), 2020
* *Fleet operational policies for automated mobility: A simulation assessment for Zurich* by Hörl, S., Ruch, C., Becker, F., Frazzoli, E., and Axhausen, K, in [Transportation Research Part C: Emerging Technologies, 102:20–31](https://www.sciencedirect.com/science/article/pii/S0968090X18304248?casa_token=v5pFVnpPITMAAAAA:3n0s9nLm7bcDJ0C9SUBmkaYU_NBV-upA9JG5OEM9w7VdstUy3jk8Jy-pNI_jm7XNLcm5b0oZCB4), 2019
* *Learning to operate a fleet of cars* by Fluri, C., Ruch, C. Zilly, J., and Frazzoli, E., . In 2019 [IEEE Intelligent Transportation Systems Conference (ITSC), pages 2292–2298](https://ieeexplore.ieee.org/abstract/document/8917533). IEEE, 2019
* *Imbalance in mobility-on-demand systems: A stochastic model and distributed control approach* by Albert, M., Ruch, C., and Frazzoli, E. in [ACM Transactions on Spatial Algorithms and Systems (TSAS), 5(2):13](https://dl.acm.org/doi/abs/10.1145/3325914), 2019
* *Scalable model predictive control for autonomous mobility-on-demand systems* by Carron, A., Seccamonte, F., Ruch, C., Frazzoli, E., and Zeilinger, M., in [IEEE Transactions on Control Systems Technology, pages 1–10](https://ieeexplore.ieee.org/abstract/document/8938759?casa_token=pfqOPex6QpsAAAAA:fb1xdb2Ja-X-dbVuOo0RzqRrXvBOJHZHNnCSMvkQuZWFwPkV1YNMdXRsmJMxiCoo9FnhfBl4sfk), 2019
* *The value of coordination in one-way mobility-on-demand systems* by Ruch, C., Richards, S., and Frazzoli, in [IEEE Transactions on Network Science and Engineering, 10.1109/TNSE.2019.2912078](https://ieeexplore.ieee.org/abstract/document/8693730/?casa_token=sB_IE9o55oUAAAAA:7kUrH-5WCgoWSBcub5D3J1KjjDLuBMOZEIc9tHUvnA-Z5jWKg7ih_USMSOZXRa5I1hATHXDejQs), 2019


## Misc

So beherrscht mein äusserer Sinn die physische, mein innerer Sinn die moralische Welt. Alles unterwirft sich meiner Willkür, jede Erscheinung, jede Handlung kann ich nennen, wie es mir gefällt; die lebendige und leblose Welt hängt an den Ketten, die mein Geist regiert, mein ganzes Leben ist nur ein Traum, dessen mancherlei Gestalten sich nach meinem Willen formen. Ich selbst bin das einzige Gesetz in der ganzen Natur, diesem Gesetz gehorcht alles.
",46,46,5,8,transportation,"[amod, amodeus-library, dispatching-algorithms, matsim-environment, simulation, transportation]",00000
40,go-jay,agusibrahim,N/A,https://github.com/agusibrahim/go-jay,https://api.github.com/repos/agusibrahim/go-jay,Proof of concept Android App for request a ride (bajaj/bajay),"<img src=""https://github.com/agusibrahim/go-jay/blob/master/img/GOJAY_Banner.jpg"">


Berdasarkan beberapa survey, Transportasi berbasis aplikasi menjadi angkutan yang paling digemari masyarakat. Kehadirannya menjadi alternatif bagi warga di kota-kota besar untuk menghindari kemacetan. Terlepas banyak pihak yang menentang  keberadaannya, transportasi online ini makin digemari dan semakin menjamur di beberapa kota.

Di antara kita pasti tidak asing lagi dengan ""Go-Jeg"", yap! pasukan ijo yang banyak lalu lalang di jalanan ibukota, menyelip di gang-gang sempit dan bahkan mengantarkan makanan, lho?  Ya! bukan hanya mengantarkan penumpang, mereka juga bisa mengantarkan makanan dan masih banyak lagi.

Mengandalkan peta digital dari Google, membuat aplikasi mereka semakin interaktif, memilih tempat jemput dan lokasi tujuan hanya dengan klik.

# Memperkenalkan GO-JAY
Dari beberapa transportasi online yang banyak berseliweran, Ojek atau angkutan yang menggunakan sepeda motor menjadi golongan yang terbanyak ketimbang mobil, heli dan jet.

Namun bagaimana dengan bajaj (bajay) ? Transportasi umum roda tiga ini acap kali di sepelekan, ntah karena bising atau efek goyang-goyang saya tidak tahu, yang jelas saya sendiri belum pernah merasakan sensasi menumpanginya. lah?
Kelebihan kedaraan roda tiga ini disamping bisa muat sekitar 3 sampai 10 penumpang, juga bisa menyelip ke gang sempit, menerobos kemacetan, masuk jalur Busway, dan berjalan mundur, eh..

Bajay online rasanya sudah ada, namun jika dilihat di Google Play Store, User Interface dari aplikasinya sangat tidak niat, okelah mungkin Screenshot menggunakan versi lawas. lupakan itu..

Bagaimana dengan GO-JAY?

### Mudah digunakan
<img src=""https://github.com/agusibrahim/go-jay/blob/master/img/navigasi.gif"" width=""300""> | <img src=""https://github.com/agusibrahim/go-jay/blob/master/img/pencarian.gif"" width=""300"">
------------ | -------------
Navigasi | Pencarian

GO-JAY mudah digunakan, tinggal pilih lokasi jemput dan lokasi tujuan, bisa pilih manual di peta, berdasarkan pencarian atau lokasi pengguna saat ini.

### Koordinasi Animasi
<img src=""https://github.com/agusibrahim/go-jay/blob/master/img/animasisearchbar.gif"" width=""300""> | <img src=""https://github.com/agusibrahim/go-jay/blob/master/img/animasitarif.gif"" width=""300"">
------------ | -------------
Searchbar | Tariff View

Tampil profesional dengan koordinasi animasi yang keren. Diharapkan pengguna bisa menggunakan aplikasi dengan nyaman. 

### Driver Terdekat
<img src=""https://github.com/agusibrahim/go-jay/blob/master/img/driverterdekat.gif"" width=""300"">

> Menampilkan driver terdekat dari lokasi jemput. 

### Edit Lokasi
<img src=""https://github.com/agusibrahim/go-jay/blob/master/img/editlokasi.gif"" width=""300"">

> Edit Lokasi jemput maupun lokasi tujuan

### Kamera Pintar
<img src=""https://github.com/agusibrahim/go-jay/blob/master/img/autocorrect.gif"" width=""300"">

Bukan hanya animasi kamera yang keren, kamera disini juga pintar. Akan di zoom out otomatis jika point A ataupun point B tertutup widget atau hilang dari pandangan, sehingga tampilan rute tampil jelas.

### Runtime Permission Support
<img src=""https://github.com/agusibrahim/go-jay/blob/master/img/Screenshot_20170621-203820.png"" width=""300""> | <img src=""https://github.com/agusibrahim/go-jay/blob/master/img/Screenshot_20170621-203837.png"" width=""300"">
------------ | -------------
Location Perms | Google Location Switch

GO-JAY Mendukung Runtime Permission di Android 23 (Mashmallow) keatas, juga adanya GPS switch instan, sehingga tidak perlu ke Pengaturan lokasi untuk mengaktifkan GPS.

## What Next?
Tentu masih banyak lagi yang harus ditambah dan bahkan dibenahi dari GO-JAY. Yang paling penting adalah membuat Aplikasi untuk driver, semacam pelacak lokasi (GPS Tracker) yang akan mengirim lokasi secara realtime ke server. Backend bisa menggunakan serverless macam [Firebase](https://firebase.google.com/)
 atau layanan dari [AWS](https://aws.amazon.com/)
. Lokasi setiap driver di query berdasarkan jarak terdekat dari lokasi pengguna, mungkin bisa menggunakan [GeoFire](https://github.com/firebase/geofire-java) jika menggunakan Firebase

## ATENTION for Android Studio Users
Karena ini dibuat tanpa Android Studio, jadi perlu penyesuaian jika terjadi project error. GO-JAY dibuat menggunakan [AIDE](https://play.google.com/store/apps/details?id=com.aide.ui) di ponsel Android langsung, tanpa Laptop/PC.

Punya ide gila atau ingin menjalin kerja sama? [Contact Me](http://telegram.me/agusibrahim)
* [Agus Ibrahim](http://fb.me/mynameisagoes)

<img src=""https://i1.sndcdn.com/artworks-000220944135-hb3nko-t500x500.jpg"" width=""300"">

### [Download GO-JAY APK](https://www.dropbox.com/s/s81dzgu86nk1u0d/Gojay_demo.apk?dl=0)

## Changelog (27/6/17)
* Fix crash on kitkat and below
* Fix animate camera problem
* Add animate route (uber app like), credit https://github.com/amalChandran/google-maps-route-animation
* Add loading indicator (my location finder) on center of screen
* Full screen map mode on 21+ (transparent statusbar)
* And more...

## Credits
* https://github.com/Ereza/CustomActivityOnCrash
* https://github.com/yshrsmz/KeyboardVisibilityEvent
* https://developers.google.com/maps/documentation/android-api/?hl=id
* http://wptrafficanalyzer.in/blog/drawing-driving-route-directions-between-two-locations-using-google-directions-in-google-map-android-api-v2/
* https://github.com/googlesamples/android-play-places
* https://github.com/amalChandran/google-maps-route-animation

## License
GO-JAY prototype makes use of the [GNU GPL v3.0](http://choosealicense.com/licenses/gpl-3.0/) license. Remember to make public your project source code when reusing GO-JAY code.
",45,45,5,3,transportation,"[android, bajaj, gojek, transportation]",00000
41,OpenIIoT.Core,OpenIIoT,OpenIIoT,https://github.com/OpenIIoT/OpenIIoT.Core,https://api.github.com/repos/OpenIIoT/OpenIIoT.Core,A cross-platform application platform for the Industrial Internet of Things.,"<h1>OpenIIoT</h1>

[![Build status](https://ci.appveyor.com/api/projects/status/fe97n9g7kc66k6wp?svg=true)](https://ci.appveyor.com/project/OpenIIoTAdmin/openiiot-core)
[![Build Status](https://travis-ci.org/OpenIIoT/OpenIIoT.Core.svg?branch=master)](https://travis-ci.org/OpenIIoT/OpenIIoT.Core)
[![codecov](https://codecov.io/gh/OpenIIoT/OpenIIoT.Core/branch/master/graph/badge.svg)](https://codecov.io/gh/OpenIIoT/OpenIIoT.Core)
[![License: AGPL v3](https://img.shields.io/badge/License-AGPL%20v3-blue.svg)](https://github.com/OpenIIoT/OpenIIoT.Core/blob/master/LICENSE)

## About

OpenIIoT is a cross-platform (via Mono) application platform for the (Industrial) Internet of Things written in C#.  The code in this repository is a work in progress and is presently on hiatus while a web framework is evaluated and selected for front-end development.

Feel free to email <info@openiiot.org> with any questions.

If you'd like to demo the front end, skip to the [demo](#demo) section.

## Concept

The concept is straightforward; the application gathers data from industrial control system assets and moves it somewhere else.  Where the application can get data from, as well as where it can send the data to, is determined by the available plugins.  

The following concept diagram outlines the functionality from a high level:

![concept overview](doc/img/concept.png) 

Plugins come in the form of .NET binaries, and capabilities are extended by the implementation of one or more interfaces (documentation TBD).  The interfaces implemented by plugins determine the functionality, but generally plugins will fall into either the category of ""connector"", which allows the application to retrieve data from various places, or ""endpoint"", which allows the application to send data.

Also pluggable are repository interfaces, however this is not shown in the concept diagram.  Repository plugins are essentially database abstractions.

In addition to Endpoints, the application provides a number of core services, primarily a robust set of RESTful APIs, a real-time data streaming engine (SignalR), and a static file server.  This functionality allows for user-defined web applications to be hosted by the application, and in turn these application consume the available APIs to display and manipulate data.  Future functionality includes MQTT and probably an OPC-UA server.

## Architecture

Up-to-date documentation for the software architecture isn't available, however the present state pretty closely reflects the original concept designed some time around 2010:

![architecture](doc/img/architecture.png)

Notable changes are the addition of SignalR and the static web server, the abandonment of an ODBC interface, and the repositioning of the data model as the central element of the application.

The application wasn't imagined to be pluggable at the time this was made, so there's a bunch of architectural details around that as well.

## Demo

A recent build of the application has been deployed to an AWS EC2 instance for demo purposes.  The demo can be accessed at [http://demo.openiiot.org](http://demo.openiiot.org); use 'admin' for both the username and password, without quotes.

Note that there's nothing else on this server but the demo application, and the application hasn't been secured.  If you find that something isn't working properly or has perhaps been defaced, please create an [issue](https://github.com/OpenIIoT/OpenIIoT.Core/issues) or email <info@openiiot.org>.

## Screenshots

### Dashboard

The application takes a hands-off approach to performance; due to the range of hardware upon which it will run (primarily single-board computers like the Raspberry Pi) and the variety of things that can be done with it, whoever is responsible for configuration needs to keep an eye on the performance characteristics and offload functionality if needed.

The dashboard provides administrators with a quick view of the present CPU, memory and hard drive usage of the host machine.  Additional metrics such as swap (*nix) and paging and Ethernet activity will probably be added later.

![dashboard](doc/img/dashboard.png)

Also available on the dashboard are real-time application logs.  These are presently full of API requests because the application is running with debug logging enabled.

### Sine Wave

The demo contains a few different examples of the types of data visualization that can be achieved; the most comprehensive of which is the Sine Wave graph.

![sine wave](doc/img/sine.png)

This screen demonstrates the application streaming a real-time data item from the application, in this case an array, and displaying the data in a browser.

The current update rate at the back end is 50 milliseconds, and as can be seen in the browser the unbroken sine wave depicted in the graph illustrates that neither the back end nor the real-time data pipe drops frames (on most systems, under most conditions).

### Database

The back end model is completely agnostic about the data it contains, and to illustrate this the Database display was created:

![database display](doc/img/database.png)

This information is fetched from a SQL database (AWS RDS), piped through the application, and sent to the browser as a simple JSON object.

This screen, like most, uses a SignalR connection to display data in real-time, although the database is presently static so no data changes.  If you see data updating on this screen I have since scheduled a task to change it periodically.

### API

The various APIs exposed by the application are fully documented using [Swashbuckle](https://github.com/domaindrivendev/Swashbuckle) annotations in the code.  This allows for use with [Swagger UI](https://swagger.io/swagger-ui/), which has been customized to better match the look and feel of the front end:

![api](doc/img/api.png)

This interface can be accessed via the 'API' menu, or directly at [http://demo.openiiot.org/help](http://demo.openiiot.org/help).

Note that these APIs are very much a work in progress, and presently the only two endpoints which are in a presentable state are the two which are expanded in the screenshot, Security and Packaging.

## Documentation

Code documentation is generated with [Sandcastle Help File Builder](https://github.com/EWSoftware/SHFB) and is updated somewhat regularly at [http://openiiot.org](http://openiiot.org).
",44,44,10,6,transportation,"[agriculture, construction, cross-platform, energy, iiot, industrial, industrial-automation, industry, industry-4, iot, logistics, manufacturing, mining, platform, transportation, warehousing]",00000
42,TelematicsApp-Android,Mobile-Telematics,Mobile-Telematics,https://github.com/Mobile-Telematics/TelematicsApp-Android,https://api.github.com/repos/Mobile-Telematics/TelematicsApp-Android,"Zenroad - Open-source telematics app for Android. The application is suitable for UBI (Usage-based insurance), shared mobility, transportation, safe driving, tracking, family trackers, drive-coach, and other driving mobile applications","# Android Open-Source Telematics App with Firebase© integration

![](https://github.com/Mobile-Telematics/TelematicsApp-Android/blob/master/img_readme/telematicsapp.jpeg)

## Description

This Telematics App is developed by Damoov and is distributed free of charge. This app can be used
to create your own telematics app for Android in few steps.

## Ready Features

Telematics:

- Telematics SDK - mobile telematics engine.

Screens:

- Dashboard
- Feed
- Trip Details
- Leaderboard
- My Rewards

## Basic concepts & credentials

1. Create an account https://app.damoov.com and get `InstanceId` and`InstanceKey` auth keys to work
   with the telematics SDK & APIs.
   How to obtain InsanceId &
   InstanceKey => https://docs.telematicssdk.com/docs/datahub#user-group-credentials

2. Additionally, to authenticate users in your app and store users data, you need to create a
   firebase account: https://firebase.google.com
   All user data will be stored in the Firebase© Realtime Database, which will allow you to create
   an app users database without programming skills.

# Setting Up

Here you can find a short video guide, how to launch Android Open-Source Telematics app:

[![Watch the video](https://github.com/Mobile-Telematics/TelematicsApp-Android/blob/master/Android%20Open-Source%20App.png)](https://youtu.be/Hbk7p3q8fbw)

## Setup Firebase© Project

Step 1: After creating your Firebase© account, open your
console: https://console.firebase.google.com

Click ""Create a project"" button.

![](https://github.com/Mobile-Telematics/TelematicsApp-Android/blob/master/img_readme/1.png)

Step 2: Enter the name of your future Project. Click ""Continue"" button.

![](https://github.com/Mobile-Telematics/TelematicsApp-Android/blob/master/img_readme/2.png)

Step 3: For ease of integration, at the next step, we recommend deactivating the ""Enable Google
Analytics"" checkbox.

![](https://github.com/Mobile-Telematics/TelematicsApp-Android/blob/master/img_readme/3.png)

Click ""Create project"".

Step 4: Now you need to create a configuration for your Android app. Click on the ""Android"" as it us
shown on the picture below:
![](https://github.com/Mobile-Telematics/TelematicsApp-Android/blob/master/img_readme/4.png)

Step 5: Enter your Android Package Name. Enter the SHA-1 key, this identifier must be used in your
application in Android Studio. Click ""Register app"" then.
![](https://github.com/Mobile-Telematics/TelematicsApp-Android/blob/master/img_readme/5.png)

Step 6: To connect your Firebase you need to add the `google-services.json` file
to `project_directory\app`. Final file path: `project_directory\app\google-services.json`
![](https://github.com/Mobile-Telematics/TelematicsApp-Android/blob/master/img_readme/6.png)

Step 7: You can skip the ""Add Firebase SDK"" & ""Add initialization code"" steps below, because we
already did it for you in our Telematics App:) Finish the setup and click on ""Continue to console"".
![](https://github.com/Mobile-Telematics/TelematicsApp-Android/blob/master/img_readme/7.png)

Step 8: Important. In order for your users to create accounts to log into your app, you need to go
to ""Authentication"" section on the left side of the menu.
![](https://github.com/Mobile-Telematics/TelematicsApp-Android/blob/master/img_readme/8.png)

Step 9: In the ""Sign-in method"" tab, click on the Provider's ""Email/Password"" on the right ""
pencil"" (Edit configuration hint) as in the picture below. If you need to perform authorization
using the ""Phone"" Provider - select the setting of this item.

![](https://github.com/Mobile-Telematics/TelematicsApp-Android/blob/master/img_readme/9.png)

Step 10: Switch to ""Enable"" and click ""Save"" button. Now your users can login to the app.

![](https://github.com/Mobile-Telematics/TelematicsApp-Android/blob/master/img_readme/10.png)

Step 11: We need to activate Firebase© Realtime Database. This will allow you to store the data of
all your users in this simple web interface. Go to the Realtime Database section on the left side of
the menu and click on the ""Create Database"" button.

![](https://github.com/Mobile-Telematics/TelematicsApp-Android/blob/master/img_readme/11.png)

Step 12: Choose any Realtime Database location value.

![](https://github.com/Mobile-Telematics/TelematicsApp-Android/blob/master/img_readme/12.png)

Step 13: Select ""Start a locked mode"" and click the ""Enable"" button.

![](https://github.com/Mobile-Telematics/TelematicsApp-Android/blob/master/img_readme/13.png)

Step 14: Now you need to change rules for your Realtime Database. You need to go to “Realtime
Database” section on the left side of the menu. In the “Rules” tab change read and write fields to
“auth.uid != null”.

![](https://github.com/Mobile-Telematics/TelematicsApp-Android/blob/master/img_readme/14.png)

Step 15: Open our TelematicsApp in Android Studio, make sure to transfer the `google-services.json`
file to project_directory\app (See Step 5 above) and Enjoy!

Build & Run!

## Setup TelematicsApp Configuration

In file AppConfig.kt you can specify the basic settings for your app.
To use your unique applicationId for your application, change applicationIdPrefix and name:<br/>
const val applicationIdPrefix = ""com.your_application_prefix""<br/>
private const val name = ""your_application_name""

To work with our API use InstanceId and InstanceKey
from https://app.damoov.com/user/registration :<br/>
const val INSTANCE_ID_PROD = ""YOUR_INSTANCE_ID""<br/>
const val INSTANCE_KEY_PROD = ""YOUR_INSTANCE_KEY""

To set application label change app_name in strings.xml in content module:<br/>
<string name=""app_name"">YOUR_LABEL</string>

To set Privacy Policy change PRIVACY_POLICY in AppConfig.kt file :<br/>
const val PRIVACY_POLICY = ""YOUR_PRIVACY_POLICY_LINK"" //for
example ""https://www.telematicssdk.com/privacy-policy/""

To set Terms Of Use change PRIVACY_POLICY in AppConfig.kt file : <br/>
const val TERMS_OF_USE = ""YOUR_TERMS_OF_USE_LINK"" //for
example""https://www.telematicssdk.com/privacy-policy/""

To set application icon, find the content module icon in resource folders (res/mipmap,
res/mipmap-hdpi, etc.) and replace it. And for change background icon color set
ic_launcher_background in color.xml:
<color name=""ic_launcher_background"">#your_color</color>

## Telematics SDK Setup

We are using the Gradle auto build system.
The Telematics SDK is installed automatically in the Telematics app. After downloading this
application for the first time, you need to run the `Sync Project with Gradle Files` command. This
will install the required dependency libraries for the application to function properly. To upgrade
the Telematics SDK version, go to the `Versions` file ( module: buildSrc) and change
the `const val trackingApi` parameter. This repository will always use the current version of the
Telematics SDK.

## Telematics SDK | Permission Wizard

An important part to record user's trips is to properly request permissions to use the user's
Location and Motion & Fitness activity. Telematics SDK includes a specially designed `Wizard` that
helps the user explain why the application needs it and make the right choice.
Note: this wizard is fully cutomizable, you can find the documentation
here: https://docs.telematicssdk.com/docs/android-sdk-integration

For use your own icon to the notification, place your own icons to res/drawable (module: content)
folders with the following
names: `ic_tracking_sdk_status_bar.png`, `ic_tracking_sdk_notification.png`.
For change Wizard next button background color you need edit `layout_telematics_wizard_page.xml` (
modile: data).

## LoginAuthFramework Authentication

We have created a special Framework that allows you to
receive `deviceToken`, `jwToken` & `refreshToken` for full integration with our services. These keys
are required to make calls to our APIs.
`LoginAuth Framework` is already integrated into this Telematics App. After downloading this
application for the first time, you need to run the `Sync Project with Gradle Files` command. This
will install the required dependency libraries for the application to function properly. To upgrade
the Telematics SDK version, go to the `Versions` file ( module: buildSrc) and change
the `const val loginAuthFramework` parameter. This repository will always use the current version of
the LoginAuthFramework.
You can find complete information about LoginAuth Framework in our
repository https://github.com/Mobile-Telematics/LoginAuthFramework-Android

## Get Google Map API key

In the next few simple steps, we'll show you how easy it is to create access keys in the Google
Cloud Console.

Step 1: After sign in your Google account open https://console.cloud.google.com/ </br>

Step 2: Create new project in Google Cloud
Console: https://console.cloud.google.com/projectcreate </br>

![](https://github.com/Mobile-Telematics/TelematicsApp-Android/blob/master/img_readme/instruction_map_1.png)

![](https://github.com/Mobile-Telematics/TelematicsApp-Android/blob/master/img_readme/instruction_map_2.png)

![](https://github.com/Mobile-Telematics/TelematicsApp-Android/blob/master/img_readme/instruction_map_3.png)

Step 3: Set billing for this project: https://console.cloud.google.com/projectselector/billing
Note: use of maps is free </br>

Step 4: Enable MapsSDK for
Android: https://console.cloud.google.com/apis/library/maps-android-backend.googleapis.com </br>

![](https://github.com/Mobile-Telematics/TelematicsApp-Android/blob/master/img_readme/instruction_map_4.png)

Step 5: Go to the Google Maps Platform → Credentials page → Create credentials → API key. </br>

![](https://github.com/Mobile-Telematics/TelematicsApp-Android/blob/master/img_readme/instruction_map_5.png)

![](https://github.com/Mobile-Telematics/TelematicsApp-Android/blob/master/img_readme/instruction_map_6.png)

![](https://github.com/Mobile-Telematics/TelematicsApp-Android/blob/master/img_readme/instruction_map_7.png)

Step 6: After API key is created, copy it to GOOGLE_MAP_API parameter in AppConfig.kt file. </br>

More info here: https://developers.google.com/maps/documentation/android-sdk/overview

## Dashboard

Our goal is to provide your users with a user-friendly interface to get the best user experience.
To get the first data, user usually needs to drive a short distance. We set this parameter in the
configuration file `AppConfig.kt` in parameter
const val DASHBOARD_DISTANCE_LIMIT = ""10"" //measured in km

## Feed

The Trips screen displays the trips users have made.

## Feed | Type of transport

The Telematics SDK allows users to change their role for any trip.

Use the following string values below!

- OriginalDriver
- Passenger
- Bus
- Motorcycle
- Train
- Taxi
- Bicycle
- Other

## Feed | Tags

Depending on your product use cases, you can also use our Tags feature. You can learn more about it
here: https://docs.telematicssdk.com/docs/tags
We also offer you a convenient interface for switching certain tags for each trip.

The Telematics SDK allows users to add specific unique`tags` to any ride for ease of use.
For example, by adding tag options to any trip, you will be able to mark specific trips for
Business/Personal or other options.

NOTE: you can use `DEL` tag and hide the trips marked by it in the app. These trips will be shown in
DataHub on List of Trips page with a special mark that these trips were hidden in the app.

## Leaderboard

You can learn more about these services by following to our docs:
https://docs.telematicssdk.com/docs/leaderboards

All 9 types of Leaderboard are presented in the Telematics App and you can figure out which of these
options you actually need.

> Note! Only users who have trips during latest 14 days participate in Leaderboard. Use placeholders
> for new and lost users.

## My Rewards

Our telematics app allows you to work with DriveCoins and Streaks for each user:

You can learn more about these services by following to our docs:
DriveCoins - https://docs.telematicssdk.com/docs/drivecoins
Streaks - https://docs.telematicssdk.com/docs/streaks-1

In detail, you can see the work with methods for rewards in the Telematics App source code in the
DriveCoins section.

## On-Demand Tracking Mode

In the new version of the app, we have provided the ability to select Tracking Mode in Settings.
There may be 3 options - `Automatic Tracking`, `On-Demand Tracking`, `Tracking disabled`.

The`On-Demand Tracking` provides an updated `Dashboard` by applying and programmatically increasing
Constraints in InterfaceBuilder and a special method for increasing the vertical dimensions of the
DashboardController.m file. In this Mode, the user can create a Job for himself.

`JobName` is a specific tag identifier that will be added for 1 or any number of trips made by the
user. The user must necessarily start a certain job or order, and complete it accordingly. In the
future, when the trip is enriched on our backend-side, the app will receive statistics for
this `JobName` tag. The user will see the number of trips made for this task, the rating of
maneuverability, risk score, etc. All this is available in a new section on our `Dashboard`.

`On-Demand Tracking` is great for any business like delivery service, taxi and many others.
Currently, this Mode will be an integral part of the Telematics App and provide you with a new
experience of integrations and work options.

## User Log Out

In the Telematics App source code, we show you an option to clear user data after logging out. Do
not forget - to stop tracking and record user trips, you need to explicitly
delete `VIRTUAL_DEVICE_TOKEN`.
This can be done using Telematics SDK method:

    trackingApi.setEnableSdk(false) //disable SDK
    trackingApi.clearDeviceID() //Clear DeviceToken

You can also disable Telematics SDK with the trips uploading to upload already recorded and stored
on the device trips to Damoov platform.
Learn more about available SDK methods
here: https://docs.telematicssdk.com/docs/methods-for-android-app

## Connect OBD device

Telematics App provides you with the optional functionality to connect the app with an OBD vehicle
adapter using Bluetooth® technology.
OBD adapter is a small device that plugs into the CAN-port of your car.

Telematics App created by Damoov, has a full range of functionality that allows you to read almost
any information and indicators from your vehicle, and add it to trips recorded by the Telematics App
on iOS/Android.
Connecting and disconnecting to your Android device happens automatically. OBD adapter can detect
accidents.

Detailed documentation and the basic principles of operation can be found in the development
portal https://docs.telematicssdk.com/docs/bluetooth-obd
To fully work with this functionality, you need additional equipment, which we can provide upon your
request.

## Links

[Official product Web-page](https://app.damoov.com/)

[Official API services web-page](https://www.damoov.com/telematics-api/)

[Official API references](https://docs.telematicssdk.com/reference)

[Official ZenRoad web-page](https://www.damoov.com/telematics-app/)

[Official ZenRoad app for iOS](https://apps.apple.com/jo/app/zenroad/id1563218393)

[Official ZenRoad app for Android](https://play.google.com/store/apps/details?id=com.telematicssdk.zenroad&hl=en&gl=US)

[Official ZenRoad app for Huawei](https://appgallery.huawei.com/#/app/C104163115)

###### Copyright © 2020-2021 DATA MOTION PTE. LTD. All rights reserved.
",40,40,4,0,transportation,"[distracted-driving, distracted-driving-detection, driver-behavior, driving-scorecard, driving-sdk, driving-style, firebase-account, geo-analytics, location-tracker, mobile-telematics, realtime-database, safe-driving, smart-city, speeding, telematics, telematics-api, telematics-sdk, tracking-app, transportation, usage-based-insurance]",00000
43,osm-relatify,Zaczero,N/A,https://github.com/Zaczero/osm-relatify,https://api.github.com/repos/Zaczero/osm-relatify,🚌 OpenStreetMap public transport made easy,"# <img height=""24"" src=""https://github.com/Zaczero/osm-relatify/blob/main/web/static/img/icon.png?raw=true"" alt=""🗺️""> OSM Relatify

![Python version](https://shields.monicz.dev/badge/python-v3.11-blue)
[![Project license](https://shields.monicz.dev/github/license/Zaczero/osm-relatify)](https://github.com/Zaczero/osm-relatify/blob/main/LICENSE)
[![Support my work](https://shields.monicz.dev/badge/%E2%99%A5%EF%B8%8F%20Support%20my%20work-purple)](https://monicz.dev/#support-my-work)
[![GitHub repo stars](https://shields.monicz.dev/github/stars/Zaczero/osm-relatify?style=social)](https://github.com/Zaczero/osm-relatify)

OpenStreetMap public transport made easy.

You can access the **official instance** of osm-relatify at [relatify.monicz.dev](https://relatify.monicz.dev).

<img width=""60%"" src=""https://github.com/Zaczero/osm-relatify/blob/main/resources/application-preview.png?raw=true"" alt=""Application preview"">

## About

OSM Relatify is a user-friendly web application specifically designed for editing public transport relations within OpenStreetMap (OSM).

The application relies on the OSM data to be (more-or-less) accurately tagged. Incorrect or poor tagging may necessitate manual corrections using an OSM editor, like iD or JOSM.

Please note that, for now, OSM Relatify only supports bus relations.

## User documentation

https://wiki.openstreetmap.org/wiki/Relatify

## Features

### Supported

- ✅ Bus routes
- ✅ One-way streets
- ✅ Roundabouts
- ✅ Right-hand traffic
- ✅ `ref` & `local_ref`
- ✅ `roundtrip`
- ✅ `public_transport:version=2`
- ✅ `public_transport=platform`
- ✅ `public_transport=stop_position`
- ✅ `public_transport=stop_area`

### Planned

- ⏳ Custom changeset comment
- ⏳ Tag editing
- ⏳ Creating new relations
- ⏳ Creating new bus stops
- ⏳ Left-hand traffic
- ⏳ Relation `type=restriction`
- ⏳ `direction=*`
- ⏳ `oneway=-1`
- ⏳ Trams, trolleybuses, trains, etc.

### Unsupported

- ❌ Exceptionally poor tagging
- ❌ `public_transport:version=1`

## Footer

### Contact me

https://monicz.dev/#get-in-touch

### Support my work

https://monicz.dev/#support-my-work

### License

This project is licensed under the GNU Affero General Public License v3.0.

The complete license text can be accessed in the repository at [LICENSE](https://github.com/Zaczero/osm-relatify/blob/main/LICENSE).
",39,39,5,25,transportation,"[bus, docker, leaflet, openstreetmap, overpass-api, public-transport, python, routing, routing-engine, transit, transport, transportation]",00000
44,DVRPTW_ACS,ralucanecula,N/A,https://github.com/ralucanecula/DVRPTW_ACS,https://api.github.com/repos/ralucanecula/DVRPTW_ACS,"Ant colony system (ACS) based algorithm for the dynamic vehicle routing problem with time windows (DVRPTW). For more details, see this paper ""Necula, R., Breaban, M., & Raschip, M.: Tackling Dynamic Vehicle Routing Problem with Time Windows by means of ant colony system. CEC, (2017)"" (https://ieeexplore.ieee.org/document/7969606)","# DVRPTW_ACS
Ant colony system (ACS) based algorithm for solving the dynamic vehicle routing problem with time windows (DVRPTW). The DVRPTW test instances are available online at this page: http://profs.info.uaic.ro/~mtsplib/vrp-extension/dvrptw/.
Version: 1.0
Contact: necula dot raluca at gmail dot com",36,36,1,0,transportation,"[ant-colony-optimization, ant-colony-systems, dynamic-vehicle-routing-problem, single-objective-optimization, time-windows, transportation, vehicle-routing-problem]",00000
45,simobility,sash-ko,N/A,https://github.com/sash-ko/simobility,https://api.github.com/repos/sash-ko/simobility,simobility - light-weight mobility simulation framework. Best for quick prototyping,"# simobility

**simobility** is a light-weight mobility simulation framework. Best for quick prototyping

**simobility** is a human-friendly Python framework that helps scientists and engineers to prototype and compare fleet optimization algorithms (autonomous and human-driven vehicles). It provides a set of building blocks that can be used to design different simulation scenarious, run simulations and calculate metrics. It is easy to plug in custom demand models, customer behavior models, fleet types, spatio-temporal models (for example, use [OSRM](http://project-osrm.org/) for routing vehicles and machine learning models trained on historical data to predict [ETA](https://en.wikipedia.org/wiki/Estimated_time_of_arrival)).

### Motivation

Create an environment for experiments with machine learning algorithms for decision-making problems in mobility services and compare them to classical solutions.

<img src=""./examples/moving_vehicles.gif"" width=""35%"" align=""right"">

Some examples:
* [Deep Reinforcement Learning with Applications in Transportation](https://outreach.didichuxing.com/tutorial/AAAI2019/)

* [T. Oda and C. Joe-Wong, ""Movi: A model-free approach to dynamic fleet management"". 2018](https://arxiv.org/pdf/1804.04758.pdf)

* [A. Alabbasi, A. Ghosh, and V. Aggarwal, ""DeepPool: Distributed model-free algorithm for ride-sharing using deep reinforcement learning"", IEEETrans. Intelligent Transportation Systems (to appear). 2019](https://arxiv.org/pdf/1903.03882)

* [C Wang,Y Hou, M Barth, ""Data-Driven Multi-step Demand Prediction for Ride-hailing Services Using Convolutional Neural Network"". 2019](https://arxiv.org/pdf/1911.03441.pdf)

* [J. Ke, F. Xiao, H. Yang, and J. Ye. Optimizing online matching for ride-sourcing services with multi-agent deep reinforcement learning. 2019](https://arxiv.org/abs/1902.06228)

### Installation

`pip install simobility`

### Contributions and thanks

Thanks to all who contributed to the concept/code:

* [Steffen Häußler](https://www.linkedin.com/in/steffenhaeussler/)
* [Stephen Privitera](https://www.linkedin.com/in/stephen-privitera/)
* [Sultan Imanhodjaev](https://www.linkedin.com/in/imanhodjaev/)
* [Yábir Benchakhtir](https://www.linkedin.com/in/yabirgb/)

### Examples

[Grid world simulation](./examples/grid_world.py)

[Simple simulation](./examples/simple_simulation.py)

[Taxi service](./examples/taxi_service.py)

[Log example](./examples/simulation_output_example.csv)


### Benchmarks

Benchmark simulations with `LinearRouter` and `GreedyMatcher`. Simulations will run slower with `OSRMRouter` because `OSRM` cannot process requests as fast as the linear router.

_Processor: 2,3 GHz Dual-Core Intel Core i5; Memory: 8 GB 2133 MHz LPDDR3_

Simulated time | Simulation step | Vehicles | Bookings per hour | Execution time | Generated events | Pickup rate
--- | --- | --- | --- | --- | --- | ---
|1 hour | 10 sec | 50 | 100 | 4 sec | 1082 | 96.97%
|24 hours | 1 min | 50 | 100 | 12 sec | 23745 | 88.37%
|24 hours | 10 sec | 50 | 100 | 20 sec | 23880 | 88.84%
|12 hours | 10 sec | 200 | 100 | 18 sec | 13337 | 99.89%
|12 hours | 10 sec | 50 | 500 | 31 sec | 40954 | 53.92%
|12 hours | 10 sec | 200 | 500 | 46 sec | 65444 | 99.3%
|12 hours | 10 sec | 1000 | 500 | 1 min 48 sec | 66605 | 99.98%
|1 hour | 1 min | 1000 | 1000 | 14 sec | 11486 |
|1 hour | 10 sec | 1000 | 1000 | 18 sec | 11631 |
|24 hours | 1 min | 1000 | 1000 | 5 min 1 sec | 262384 |
|24 hours | 10 sec | 1000 | 1000 | 6 min 20 sec | 262524 |

A heuristic that allows estimating a maximum number of booking a fleet of N vehicles can handle: assume that an avarage trip duration is 15 minute, than 1 vehicle can not more then handle 4 booking per hour and the upper limit for 1000 vehicles is 4000 bookings per hour.

### Metrics example

```json
{
    ""avg_paid_utilization"": 63.98,
    ""avg_utilization"": 96.87,
    ""avg_waiting_time"": 292.92,
    ""created"": 3998,
    ""dropoffs"": 589,
    ""empty_distance"": 640.37,
    ""empty_distance_pcnt"": 33.67,
    ""fleet_paid_utilization"": 63.98,
    ""fleet_utilization"": 96.87,
    ""num_vehicles"": 50,
    ""pickup_rate"": 15.48,
    ""pickups"": 619,
    ""total_distance"": 1902.04,
}
```

### Simulation logs

The are multiple ways to collect simulation log - use CSV or InMemory log handler or implement your own handler: [loggers](https://github.com/sash-ko/simobility/blob/master/simobility/core/loggers.py)


Read CSV logs with pandas:

```python
import pandas as pd

data = pd.read_csv(
    ""simulation_output.csv"",
    sep="";"",
    converters={""details"": lambda v: eval(v)},
)

details = data.details.apply(pd.Series)
```

### Run OSRM

```bash
wget http://download.geofabrik.de/north-america/us/new-york-latest.osm.pbf
docker run -t -v ""${PWD}:/data"" osrm/osrm-backend osrm-extract -p /opt/car.lua /data/new-york-latest.osm.pbf
docker run -t -v ""${PWD}:/data"" osrm/osrm-backend osrm-partition /data/new-york-latest.osrm
docker run -t -v ""${PWD}:/data"" osrm/osrm-backend osrm-customize /data/new-york-latest.osrm
docker run -d -t -i -p 5010:5000 -v ""${PWD}:/data"" osrm/osrm-backend osrm-routed --algorithm mld /data/new-york-latest.osrm
```
",35,35,4,6,transportation,"[autonomous-vehicles, fleet-management, mobility, mobility-modeling, optimization-algorithms, python, ridehailing, ridesharing, simulation-framework, simulator, transportation]",00000
46,torchtrajectory,tgbnhy,N/A,https://github.com/tgbnhy/torchtrajectory,https://api.github.com/repos/tgbnhy/torchtrajectory,The World's First Search Engine for Trajectory Data,"# <img src=""https://github.com/tgbnhy/torch-trajectory/blob/developing/t4.png"" alt=""drawing"" width=""60""/>  T-Torch: searching trajectories in a fast way
* T-Torch is the world's first search engine for trajectory data, which is built over our research paper below:
```
Sheng Wang, Zhifeng Bao, J. Shane Culpepper, Zizhe Xie, Qizhi Liu, Xiaolin Qin: Torch: A Search Engine for 
Trajectory Data. SIGIR 2018: 535-544
```
* We also have a traffic analytics system based on T-Torch: http://47.75.79.142:8080/TTorchServer/.

## Supported queries 
T-Torch is able to efficiently answer two typical types of queries now:
* Boolean search
  * Range query
  * Path query
  * Strict path query
* Top-k similarity search, we support a list of similarity measures:
  * Dynamic time wrapping (DTW)
  * Longest common sub-sequence (LCSS)
  * Edit distance with real penalty (EDR)
  * Hausdorff distance
  * Discrete Fréchet Distance
  * Longest overlapped road segments (LORS)

## Features of framework
* T-Torch performs trajectory search over the mapped trajectories.
  * Optimized map-matching algorithms over Graphhopper
  * Ligtweight data storage
* Fast search with
  * Compressiable index
  * Various similarity measures
* Trajectory visualization on real road network
  * http://115.146.93.77:8080/TTorchServer/


## Getting started
### 0. Download the Porto Dataset
Our trajectory dataset collected at Porto is available. 
The dataset is map-matched and indexed. 
Please download it at https://drive.google.com/open?id=110U9RaQxHxWS_tN0IjI-A1N71ElRiyBM
and put it in the root directory of the project.

### 1. Dependencies
We manage the dependent libraries with Maven. You can easily install those 
required softwares in pom.xml file.

### 2. Running the sample program
We provide a use case for Path query. The main() method is in the 
Test class.

```
   1. Engine engine = Engine.getBuilder().build();
   2. List<List<TrajEntry>> queries = read();
   3. QueryResult result = engine.findOnPath(queries.get(0));
``` 

T-Torch provides high level class *Engine* containing simple APIs for query processing. 
- line 1 loads/builds the index structures of a dataset, encapsulated by Engine class.
- line 2 loads sample queries provided by us.
- line 3 invokes API of a path query. APIs for other supported query types are described in the next section

### 3. Query Types

#### 1) Range query
```
   QueryResult ret = engine.findInRange(50, 50, 50);
```
The range query is used to retrieve trajectories passing through a specified rectangular area. To define the rectangular area, three arguments are needed. 
Latitude and longitude defines the middle point, with radius( in meters) together representing the rectangular area.

#### 2) Path query
```
   QueryResult ret = engine.findOnPath(query);
```
The Path query<sup>[2]</sup> is used to retrieve trajectories having at least one common edge with the query.
The argument it takes is a ""path"" represented by a list of *Coordinate*.

#### 3) Strict path query
```
   QueryResult ret = engine.findOnStrictPath(query)
```
The strict path query<sup>[2]</sup> is used to retrieve trajectories strictly passing through the entire query from beginning to end.
The argument it takes is a ""path"" represented by a list of *Coordinate*.

#### 4) Top-k trajectory similarity search
```
   QueryResult ret = engine.findTopK(query, 3);
```
The top-k query returns
k highest ranked trajectories based on the specified similarity measure.
First argument is a ""query trajectory"" represented by a list of *Coordinate*, 
and the second is number of top results to return.

### 4. QueryResult
```
   if (ret.mappingSucceed){
      List<Trajectory<TrajEntry>> l = ret.getResultTrajectory();
      String mapVformat = ret.getMapVFormat();
   }else{
       //do something
   }
```

After the query is processed, object of type QueryResult is returned uniformly. 
It contains the query trajectory in raw form, the map-matched query trajectory, and all trajectories being retrieved. Also, you can project these on MapV<sup>[3]</sup> for visualization purpose.

### 3. Use your own dataset
If you want to search over your own dataset, please follow these steps for data preprocessing:

1) Download the map data from openstreetmap where the trajectory data is collected,
It should be in *.osm.pbf format and you need to put it into Resourses directory.

2) Preprocess your dataset into the format supported by our program. 
Map matching is the technique for projecting raw trajectories onto real road network.
The first argument is the URI of raw trajectory data-set, while the second argument 
**""Resources/porto.osm.pbf""** should be the URI to your PBF file<sup>[1]</sup>
After setup, call start() method to convert raw trajectories to mapped trajectories.
After mapmatching, run the main() program in the Torch.base.db.DBManager class to build inverted index on disk. 
Please take our Porto dataset as an example. 
```
   MapMatching mm = MapMatching.getBuilder().build(""Resources/porto_raw_trajectory.txt"",""Resources/porto.osm.pbf"");
   mm.start();
```


#### Note:
```
   trajectoryID [[latitude1,longtitude1],[latitude2,longtitude2],...]
```
 1. The format of trajectory data should be the same as it in sample data-set, and there is a **\t** character separating trajectory id and content of it
 2. If using your own dataset, please preprocess your data properly. Low quality trajectories leads to low projection rate, and high length trajectories (over 200) could affect query time.



## Main contributors
  * Yunzhuang Shen
  * Zizhe Xie
  * Sheng Wang (Homepage: https://sites.google.com/site/shengwangcs/)

## Cite the paper
If you use this code for your scientific work, please cite it as:

```
Sheng Wang, Zhifeng Bao, J. Shane Culpepper, Zizhe Xie, Qizhi Liu, Xiaolin Qin: Torch: A Search Engine for 
Trajectory Data. SIGIR 2018: 535-544
```

```
@inproceedings{wang2018torch,
  author          = {{Wang}, Sheng and {Bao}, Zhifeng and {Culpepper}, J. Shane and {Xie}, Zizhe and {Liu}, Qizhi and {Qin}, Xiaolin},
  title           = ""{Torch: {A} Search Engine for Trajectory Data}"",
  booktitle       = {Proceedings of the 41th International ACM SIGIR Conference on Research & Development in Information Retrieval},
  organization    = {ACM},
  pages     = {535--544},
  year            = 2018,
}
```

[1]: https://wiki.openstreetmap.org/wiki/PBF_Format
[2]: https://dl.acm.org/citation.cfm?id=2666413 ""Krogh, B., Pelekis, N., Theodoridis, Y., & Torp, K. (2014, November). Path-based queries on trajectory data. In Proceedings of the 22nd ACM SIGSPATIAL International Conference on Advances in Geographic Information Systems (pp. 341-350). ACM.""
[3]: http://mapv.baidu.com/

",32,32,2,4,transportation,"[search-engine, trajectory, transportation]",00000
47,bdit_data-sources,CityofToronto,CityofToronto,https://github.com/CityofToronto/bdit_data-sources,https://api.github.com/repos/CityofToronto/bdit_data-sources,Data sources used by the Big Data Innovation Team,"﻿# BDIT Data Sources <!-- omit in toc -->

This is the primary repository for code and documentation for most the data sources the Data & Analytics Unit uses.

Each folder is for a different data source (or category of related data sources). They contain:
* an explanation of what the data source is,
* how it can be used, and
* the Python and SQL necessary for our Extract, Load, Transform, and Validate processes into our PostgreSQL database.

For those curious about what data we manage is released on OpenData, see the [Open Data Releases](#open-data-releases).

## Table of Contents <!-- omit in toc -->

- [Airflow DAGS](#airflow-dags)
- [Bluetooth Detectors](#bluetooth-detectors)
- [Collisions](#collisions)
- [Cycling App (inactive)](#cycling-app-inactive)
- [Events (inactive)](#events-inactive)
- [GIS - Geographic Data](#gis---geographic-data)
  - [Assets](#assets)
    - [Red Light Cameras](#red-light-cameras)
    - [Traffic Signals](#traffic-signals)
  - [School Safety Zones](#school-safety-zones)
  - [Street Centreline Geocoding](#street-centreline-geocoding)
- [HERE Travel Time Data](#here-travel-time-data)
- [Incidents (inactive)](#incidents-inactive)
- [INRIX (inactive)](#inrix-inactive)
- [Parking (inactive)](#parking-inactive)
- [Road Closure (inactive)](#road-closure-inactive)
- [TTC (inactive)](#ttc-inactive)
- [Volume Data](#volume-data)
  - [Miovision - Multi-modal Permanent Video Counters](#miovision---multi-modal-permanent-video-counters)
  - [RESCU - Loop Detectors](#rescu---loop-detectors)
  - [Short-term Counting Program](#short-term-counting-program)
- [Watch Your Speed signs](#watch-your-speed-signs)
- [Weather](#weather)
- [Open Data Releases](#open-data-releases)

## Airflow DAGS

[`dag/`](dag/)

This folder contains the DAG Python files for our Airflow orchestration that dictate the logic and schedule for data pipeline tasks.

## Bluetooth Detectors
[`bluetooth/`](bluetooth/)

The City collects traffic data from strategically placed sensors at intersections and along highways. These detect Bluetooth MAC addresses of vehicles as they drive by, which are immediately anonymized. When a MAC address is detected at two sensors, the travel time between the two sensors is calculated.

## Collisions

[`collisions/`](collisions/)

The collisions dataset consists of data on individuals involved in traffic collisions from approximately 1985 to the present day (though there are some historical collisions from even earlier included).

## Cycling App (inactive)

[`cycling_app/`](cycling_app/)

The Cycling App collected OD and trip data until 2016.

## Events (inactive)

[`events/`](events/)

How do special events impact traffic in the city? Data sources include the City's Open Data and TicketMaster.

## GIS - Geographic Data

### Assets
[`assets/`](gis/assets/)

The `assets` directory stores [airflow](https://github.com/CityofToronto/bdit_team_wiki/blob/master/install_instructions/airflow.md) processes related to various assets that we help manage, such as datasets related to Vision Zero.  Below are the assets that we have automated so far.  

#### Red Light Cameras
[`assets/rlc/`](gis/assets/rlc/)

Red Light Camera data are obtained from Open Data and are also indicators that are displayed on the [Vision Zero Map](https://www.toronto.ca/services-payments/streets-parking-transportation/road-safety/vision-zero/safety-measures-and-mapping/) and [Dashboard](https://www.toronto.ca/services-payments/streets-parking-transportation/road-safety/vision-zero/vision-zero-dashboard/). We have developed a process using Airflow to automatically connect to [Open Data](https://open.toronto.ca/dataset/red-light-cameras/) and store the data to our RDS Postgres database. See the README file in [`assets/rlc`](assets/rlc/) for details about this process.

#### Traffic Signals
[`assets/traffic_signals/`](gis/assets/traffic_signals/)

A number of different features of traffic signals (Leading Pedestrian Intervals, Audible Pedestrian Signals, Pedestrian Crossovers, Traffic Signals) are periodically pulled from [OpenData](https://open.toronto.ca/dataset/traffic-signals-tabular/) . These indicators are used to populate the [Vision Zero Map](https://www.toronto.ca/services-payments/streets-parking-transportation/road-safety/vision-zero/safety-measures-and-mapping/) and [Dashboard](https://www.toronto.ca/services-payments/streets-parking-transportation/road-safety/vision-zero/vision-zero-dashboard/). See the README file in [`assets/traffic_signals`](assets/traffic_signals/) for details about the source datasets and how they are combined into a final table made up of the following data elements.

### School Safety Zones

[`gis/school_safety_zones/`](gis/school_safety_zones/)

This dataset comes from Vision Zero which uses Google Sheets to track progress on the implementation of safety improvements in school zones.


### Street Centreline Geocoding

[`gis/text_to_centreline/`](gis/text_to_centreline/)

Contains SQL used to transform text description of street (in bylaws) into centreline geometries.

## HERE Travel Time Data

Travel time data provided by HERE Technologies from a mix of vehicle probes. Daily extracts of 5-min aggregated speed data for each link in the city (where data are available).

## Incidents (inactive)

See [CityofToronto/bdit_incidents](https://github.com/CityofToronto/bdit_incidents)

## INRIX (inactive)

[`inrix/`](inrix/)

Data collected from a variety of traffic probes from 2007 to 2016 for major streets and arterials.

## Parking (inactive)
[`parking/`](parking/)

This contains R and SQL files for pulling parking lots and parking tickets from Open Data. They might be useful but haven't been documented or automated.

## Road Closure (inactive)
[`road_closure/`](road_closure/)

This directory contains a Python file to pull and parse the XML feed of road closures. This process hasn't been automated (and more recent versions of the API use JSON).

## TTC (inactive)
[`ttc/`](ttc/) 

This contains some valiant attempts at transforming CIS vehicle location data provided to us by the TTC on streetcar locations as well as an automated process for pulling in GTFS schedule data.

## Volume Data
[`volumes/`](volumes/)


### Miovision - Multi-modal Permanent Video Counters
[`volumes/miovision/`](volumes/miovision/)

Miovision currently provides volume counts gathered by cameras installed at specific intersections. There are 32 intersections in total. Miovision then processes the video footage and provides volume counts in aggregated 1 minute bins. Data stored in 1min bin (TMC) is available in `miovision_api.volumes` whereas data stored in 15min bin for TMC is available in `miovision_api.volumes_15min_tmc` and data stored in 15min for ATR is available in `miovision_api.volumes_15min`. 

### RESCU - Loop Detectors
[`volumes/rescu/`](volumes/rescu/)

AKA Vehicle Detector Station (VDS)

Road Emergency Services Communication Unit (RESCU) data tracks traffic volume on expressways using loop detectors. 
More information can be found on the [city's website](https://www.toronto.ca/services-payments/streets-parking-transportation/road-restrictions-closures/rescu-traffic-cameras/) 
or [here](https://en.wikipedia.org/wiki/Road_Emergency_Services_Communications_Unit).

### Short-term Counting Program
[`volumes/short_term_counting_program/`](volumes/short_term_counting_program/)

Short-term traffic counts are conducted on an ad-hoc basis as the need arises, and may be done throughout the year both at intersections and mid-block. Much of this dataset is also available through the internal application MOVE and data go as far back as 1994. 

## Watch Your Speed signs
[`wys/`](wys/)

The city has installed [Watch Your Speed signs](https://www.toronto.ca/services-payments/streets-parking-transportation/road-safety/vision-zero/safety-initiatives/initiatives/watch-your-speed-program/) that display the speed a vehicle is travelling at and flashes if the vehicle is travelling over the speed limit. Installation of the sign was done as part of 2 programs: the mobile watch your speed which has signs mounted on existing poles, moved every few weeks, and school watch your speed which has signs installed at high priority schools. The signs also collect continuous speed data.

## Weather
[`weather/](weather/)

Daily historical weather conditions and predictions from Environment Canada.

## Open Data Releases

- [Travel Times - Bluetooth](https://open.toronto.ca/dataset/travel-times-bluetooth/) contains data for all the bluetooth segments collected by the city. The travel times are 5 minute average travel times. The real-time feed is currently not operational. See [the Bluetooth README](bluetooth#8-open-data-releases) for more info.
- [Watch Your Speed Signs](#watch-your-speed-signs) give feedback to drivers to encourage them to slow down, they also record speed of vehicles passing by the sign. Semi-aggregated and monthly summary data are available for the two programs (Stationary School Safety Zone signs and Mobile Signs) and are updated monthly.  [see the WYS README for links to these datasets](wys/#open-data)

For the [King St. Transit Pilot](toronto.ca/kingstreetpilot), the team has released the following datasets, which are typically a subset of larger datasets specific to the pilot:

- [King St. Transit Pilot - Detailed Bluetooth Travel Time](https://open.toronto.ca/dataset/king-st-transit-pilot-detailed-bluetooth-travel-time/) contains travel times collected during the King Street Pilot in the same format as the above data set. Data is collected on segments found in the [King St. Transit Pilot – Bluetooth Travel Time Segments](https://open.toronto.ca/dataset/king-st-transit-pilot-bluetooth-travel-time-segments/) map layer. See [the Bluetooth README](bluetooth#8-open-data-releases) for more info.
- [King St. Transit Pilot – Bluetooth Travel Time Summary](https://open.toronto.ca/dataset/king-st-transit-pilot-bluetooth-travel-time-summary/) contains monthly averages of corridor-level travel times by time periods. See [the Bluetooth README](bluetooth#8-open-data-releases) for more info.
- [King St. Transit Pilot - 2015 King Street Traffic Counts](https://open.toronto.ca/dataset/king-st-transit-pilot-2015-king-street-traffic-counts/) contains 15 minute aggregated ATR data collected during 2015 of various locations on King Street. See the [Volumes Open Data King Street Pilot](volumes#king-street-pilot) section for more info.
- [King St. Transit Pilot – Detailed Traffic & Pedestrian Volumes](https://open.toronto.ca/dataset/king-st-transit-pilot-detailed-traffic-pedestrian-volumes/) contains 15 minute aggregated TMC data collected from Miovision cameras during the King Street Pilot. The counts occurred at 31-32 locations at or around the King Street Pilot Area. See the [Miovision Open Data](miovision#open-data) section for more info.
- [King St. Transit Pilot - Traffic & Pedestrian Volumes Summary](https://open.toronto.ca/dataset/king-st-transit-pilot-traffic-pedestrian-volumes-summary/) is a monthly summary of the above data, only including peak period and east-west data. The data in this dataset goes into the [King Street Pilot Dashboard](https://www.toronto.ca/city-government/planning-development/planning-studies-initiatives/king-street-pilot/data-reports-background-materials/). See the [Miovision Open Data](miovision#open-data) section for more info.
",32,32,15,132,transportation,"[data-processing, freeway, open-data, traffic-data, transportation]",00000
48,supply-chain-sustainability,samirsaci,N/A,https://github.com/samirsaci/supply-chain-sustainability,https://api.github.com/repos/samirsaci/supply-chain-sustainability,Build Supply Chain Sustainability Reporting with Python,"# Supply Chain Sustainability Reporting with Python 🌲
*4 steps to build an ESG reporting focusing CO2 emissions of your Distribution Network*

<p align=""center"">
  <img align=""center"" src=""images/intro.png"" width=75%>
</p>
<p align=""center"">Supply Chain Sustainability Reporting</p>

The demand for transparency in sustainable development from investors and customers has grown over the years.

Investors have placed an increased emphasis on sustainability of the business when assessing the value and resiliency of an organization.

Therefore, more and more organizations invest resources to build capabilities for sustainability reporting and determine the best strategies for a sustainable supply chain.

### Youtube Video
Click on the GIF below to access a short explainer video to understand the concept behind this solution
<div align=""center"">
  <a href=""https://www.youtube.com/watch?v=yodNWnf7PQ0""><img src=""https://github.com/samirsaci/supply-chain-sustainability/blob/main/thumbnail.webp"" alt=""Explainer Video Link""></a>
</div>

## **Article**
In this [Article](https://www.samirsaci.com/supply-chain-sustainability-reporting-with-python/), we will introduce a simple methodology to **report the CO2 emissions of your Distribution Network** using **Python and PowerBI**.

## **Definition**
Based on the GHG Protocol corporate standard (Link), greenhouse gas emissions are classified into three scopes:

- Scope 1: direct emissions emissions released to the atmosphere because of company’s activities (Company’s facilities like manufacturing plant/warehouses, company’s vehicles)
- Scope 2: indirect emissions from the generation of purchased energy
(purchased electricity, gas, ..)
- Scope 3: all indirect emissions (out of scope 2) occuring in the value chain of the company (Transportation, Waste of Operations, Business Travels, …)

In this article we will focus our attention on the Scope 3 calculations related to downstream transportation.
What is the environmental impact of your distribution network?

## **Formula**
Following the protocol the French Environmental Agency Ademe (Link), the formula to estimate the CO2 emissions of transportation is:

<p align=""center"">
  <img align=""center"" src=""images/equation.png"" width=75%>
</p>
<p align=""center"">Formula using Emission Factor</p>

## **Objective**

1. Based on this formula, we collect and process data to calculate the emissions.

<p align=""center"">
  <img align=""center"" src=""images/data collection.png"" width=75%>
</p>
<p align=""center"">Data to be Collected</p>

2. We calculate the unit of measure conversions considering the shipped handling units.

<p align=""center"">
  <img align=""center"" src=""images/weight reference.png"" width=75%>
</p>
<p align=""center"">Handling Units</p>

3. We add distances by mode and compute the CO2 emissions by order 

<p align=""center"">
  <img align=""center"" src=""images/emissions factors.png"" width=75%>
</p>
<p align=""center"">Emission by transportation mode</p>



## **Exemples of visuals using PowerBI**

### Bubble map with size = f(CO2 Total)
<p align=""center"">
  <img align=""center"" src=""images/bubble map.png"" width=75%>
</p>
<p align=""center"">Bubble Map</p>

_Visual Insights_

You can observe where you have the majority of CO2 emissions (large bubbles) with a color coding by transportation mode.

### Split by Country Destination and Item Code
<p align=""center"">
  <img align=""center"" src=""images/bar chart.png"" width=75%>
</p>
<p align=""center"">Bar Chart</p>

**Product Portfolio Insights**
For each market, which item has the highest environmental impact?

_Product Portfolio Insights_

For each market, which item has the highest environmental impact?

### CO2 = f(Turnover) by City Destination
<p align=""center"">
  <img align=""center"" src=""images/scatter plot.png"" width=75%>
</p>
<p align=""center"">Scatter Plot</p>

_Financial Insights_

The impacts of your future efforts for CO2 Emissions reductions on the profitability will probably be higher for the customers in PEINE-WOLTORF.

# Code
This repository code you will find all the code used to explain the concepts presented in the article.

# About me 🤓
Senior Supply Chain Engineer with an international experience working on Logistics and Transportation operations. \
Have a look at my portfolio: [Data Science for Supply Chain Portfolio](https://samirsaci.com) \
Data Science for Warehousing📦, Transportation 🚚 and Demand Forecasting 📈 
",31,31,1,0,transportation,"[logistics, supply-chain, supply-chain-management, sustainability, sustainable-development, transportation]",00000
49,tdm-calculator,hackforla,hackforla,https://github.com/hackforla/tdm-calculator,https://api.github.com/repos/hackforla/tdm-calculator,DTLA Hack for LA is partnering with Los Angeles Department of Transportation (LADOT) to develop a Traffic Demand Management (TDM) calculator tool.  This tool will help planners at LADOT and real estate developers to meet the Los Angeles’s Mobility Plan goals by 2035. ,"# TDM Calculator

Traffic Demand Management (TDM) calculator tool. DTLA Hack for LA is partnering with Los Angeles Department of Transportation (LADOT) to develop this tool to help planners at LADOT and real estate developers calculate how to meet some of Los Angeles’s Mobility Plan 2035 goals.

Transportation demand management (TDM) is a defined set of strategies aimed at maximizing traveller choices while also improving mobility, reduce congestion, vehicle miles travelled, greenhouse gas emissions, and air pollution. For our project purposes, we are creating a TDM calculator tool in order to help real estate developers learn how to pass their development plans through the city with visible calculations showing based on their development plans.

## Project context

In order to start construction on a building to the City of Los Angeles, real estate developers have to submit a proposal of their development plan to the city for review and must meet certain criteria in order to be approved. Currently, the process for getting approved to build plans (on a super high level, steps may vary) goes like this:

- Real estate developer submit development proposal
- City manually checks criteria through manual review
- If it meets the criteria, city ""approves"" the plan
- If it doesn't, real estate developer is able to request a meeting for further review and discussion. Otherwise, the plan is rejected.

Real estate developers currently don't have any way to understand where their development plans are getting rejected. The TDM Calculator will be created in order to give them more visibility into how to get their development plans approved and, more importantly, get fined less for following city building criteria.

The city will benefit by having more time to review edge cases for building development plans, while being able to approve plans that fit criteria with more ease and less hassle.

[LADOT New Requirements for Sustainable Developments](https://ladot.lacity.org/businesses/development-review#new-requirements-for-sustainable-developments)

[LA Mobility Plan 2035](https://planning.lacity.org/documents/policy/mobilityplnmemo.pdf)

[Hack for LA Code of Conduct](https://github.com/hackforla/codeofconduct)

### Technology used

- [HTML](https://developer.mozilla.org/en-US/docs/Web/HTML)
- [CSS](https://developer.mozilla.org/en-US/docs/Web/CSS) / [How CSS Works](https://developer.mozilla.org/en-US/docs/Learn/CSS/Introduction_to_CSS/How_CSS_works) / [MDN Resources](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Language_Resources)
- Client and Server Programming Language: [JavaScript](https://www.ecma-international.org/ecma-262/6.0/) / [Introduction](http://javascript.info/)
- Web Server Runtime: [Node](https://nodejs.org/en/)
- Web API Server Library: [Express](https://expressjs.com/)
- Client JavaScript Library: [React](https://reactjs.org/)
- Scaffolding for Client Application: [Create React App](https://facebook.github.io/create-react-app/docs/getting-started)
- Visual Component Library: [Storybook](https://storybook.js.org/) / [Tutorial](https://www.learnstorybook.com/react/en/get-started) - The first three sections are enough to get you started.
- JavaScript Unit Test Framework: [Jest](https://jestjs.io/)
- Database Engine: [Microsoft SQL Server](http://www.sqlservertutorial.net/) / [Tutorial](http://www.sqlservertutorial.net/)

## Feature Descriptions

- [register](/docs/register.md)
- [forgot-password](/docs/forgot-password.md)

## How to Contribute

- Join the team on the Hack For LA Slack channel (#tdm-calculator), or at our weekly hack night on Tuesdays in [Hack For LA](https://www.hackforla.org/)!

- To help with user research, find other cities' TDM calculators. For example, check out [SF's TDM Tool](http://www.sftdmtool.org/)

- To contribute to the code, see [Contributing](https://github.com/hackforla/tdm-calculator/wiki/Contributing-Code)

### Working with issues

- To submit a bug.

Go to Project Kanban board by clicking on ""Projects"" tab. Create a note in Ice Box by clicking on the ""+"" sign. Write a general bug description and add the note. During weekly meetings in Hack For LA, we'll review the Ice Box and convert cards to Prioritized Backlog.

- Explain how to submit a feature request.

- Explain how to contribute to an existing issue.

To create a new issue, please use the blank issue template (available when you click New Issue). If you want to create an issue for other projects to use, please create the issue in your own repository and send a slack message to one of your hack night hosts with the link.

## Contact info

Please use the tdm-calculator slack channel to communicate with the whole project team, or direct-messages through slack for communication with individuals.

If you have any questions or comments, feel free to reach out to:
Hack For LA
Bonnie
Co-Host/Organizer
bonnie@hackforla.org

### Licensing

Include details about the project's open source status.

_this readme file sourced from [Jessica Sand](http://jessicasand.com/other-stuff/just-enough-docs/)_
",31,31,8,87,transportation,"[civictechindex, code-for-all, code-for-america, hack-for-la, lacp, ladot, los-angeles, parking, sustainable-cities-communities, traffic-demand-management, transportation]",00000
50,sf_abm,cb-cities,cb-cities,https://github.com/cb-cities/sf_abm,https://api.github.com/repos/cb-cities/sf_abm,"Traffic model: network, demand and agent-based simulation for San Francisco or other cities.","# sf_abm
* Creating the street network graph for a city (San Francisco as an example) directly from [OpenStreetMap (OSM)](openstreetmap.org);
* Generating node-level Origin-Destination (OD) pairs in San Francisco from Traffic Analysis Zone level data;
* Simulating the traffic movements in the study area with Agent Based Model (ABM). It can easily simulate the movements of millions of agents if run in parallel, using python multiprocessing and High Performance Computers (HPC).

![ABM for San Francisco](figures/public/sf_vis.png)

### Code structure
To run the ABM simulation, you will need to run through each of the following folder:
  * [`0_network`](0_network): downloading the OSM street network and constructing a graph (nodes and links) for the study area;
  * [`1_OD`](1_OD): generating the hourly OD matrices based on data based on SFCTA's [TNC study](http://tncstoday.sfcta.org) (Uber/Lyft pick-ups and drop-offs). Origins and destinations are nodes in the graph;
  * [`2_ABM`](2_ABM): finding the shortest path for each OD pair using [python-igraph](http://igraph.org/python/), [sp](https://github.com/cb-cities/sp) and [python-multiprocessing](https://docs.python.org/3.4/library/multiprocessing.html?highlight=process). The code can run on multi-core PC or HPC.

### Performance
  * The most time consuming part of the ABM is finding the shortest path for each agent. In order to speed up the shortest path computation for thousands or even millions of agents:
  	* we are developing our own shortest path implementation [sp](https://github.com/cb-cities/sp);
  	* we use the multiprocessing+HPC in python to parallel the routing part for each agent in, e.g., 32 threads.
  * On a network with 370,000 vertices, 700,000 edges, running on a 32-CPU node (6GB per CPU), it takes 47 minutes in total to run the ABM with 1 million agents.
  * On the same graph and computing hardware, it takes less than 2 minutes to run the ABM for 40,000 agents, roughly 17 times faster than running on single thread.
  ![Performance graph](figures/public/bay_area_abm_performance.png)",30,30,4,1,transportation,"[agent-based-modeling, osm, transportation]",00000
51,lebanon-traffic-dataset,ramikay,N/A,https://github.com/ramikay/lebanon-traffic-dataset,https://api.github.com/repos/ramikay/lebanon-traffic-dataset,Road traffic data for Lebanon collected between 2014 and 2019.,"## Lebanon Traffic Dataset

This is a data package of automotive velocities on the roads of Lebanon, crowd-sourced using [Tari'ak (طريقك) mobile app](http://tari2ak.com) from a total of 17,274 smartphones. The set contains 6,006,041 data points that span from March 20, 2014 to October 17, 2019.

## Instructions

The easiest way to import this package is using one of the existing [Data Package Libraries](https://frictionlessdata.io/universe/).

You can also manually ingest the package resources, which is composed from 2 files:

- **`data/streets.geojson`**: list of street features referenced in `data/velocities.csv` described in [`GeoJSON`](https://geojson.org/).
- **`data/velocities.csv`**: location and velocity data of devices in automotive transport, confined to the country of Lebanon.

| Field                 | Type     | Description                                                                                                                                                                                                                                                                                                                                                                                                       |
|-----------------------|----------|-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
| Date                  | `date`     | Date of when the data point was collected. Date values are reported in `Asia/Beirut` timezone. Values range between `2015-03-20` and `2019-10-17`.                                                                                                                                                                                                                                                               |
| Time                  | `time`     | Time of when the data point was collected. Time values are reported in `Asia/Beirut` timezone. Values range between `00:00:00` and `23:59:59`.                                                                                                                                                                                                                                                                   |
| Coordinate (Lon, Lat) | `geopoint` | Coordinate of where the data point was collected. Coordinates are represented as `(longitude,latitude)`, and NOT `(latitude,longitude)`. Latitude values range between `-90` and `90`. Longitude values range between `-180` and `180`.                                                                                                                                                                          |
| Course                | `number`   | The direction in which the device was traveling when the data point was collected, measured in degrees starting at due north and continue clockwise around the compass. Thus, north is 0 degrees, east is 90 degrees, south is 180 degrees, and so on. Course values may not be available on all devices. A negative value indicates that the course information is invalid. Values range between `0` and `360`. |
| Velocity              | `number`   | The velocity the device was traveling at when the data point was collected, measured in meters/second NOT kilometers/hour. Values are positive.                                                                                                                                                                                                                                                                  |
| Street ID             | `string`   | The unique identifier for the street using its OpenStreetMap (OSM) ID. Streets are map-matched from OSM with a simple linear algebra algorithm using the device's coordinate and course.                                                                                                                                                                                                                          |

## License

This data package is licensed under ODC Open Database License (ODbL v1.0) which means you can use it freely for your personal or commercial projects as long as you attribute its source to tari2ak.com and keep your data open.

The full license is described in [`LICENSE.md`](LICENSE.md).
",27,27,2,0,transportation,"[beirut, city-analytics, datapackage, geodata, geojson, lebanon, logistics, roads, traffic-data, transportation, urban-planning, velocities]",00000
52,sustainable-mobility-api,maasglobal,maasglobal,https://github.com/maasglobal/sustainable-mobility-api,https://api.github.com/repos/maasglobal/sustainable-mobility-api,Library and API to calculate CO2 emissions for personal mobility.,"# Sustainable Mobility API

This project consists of a Python library and HTTP API for estimating the environmental impact of personal mobility.

## Estimator

The estimator consists of a Python library to calculate CO2 emissions for a transport trip based on the distance and mode. The library has been published to the Python Package Index as [transport-co2](https://pypi.org/project/transport-co2/).

The [README](estimator/README.md) in the [estimator](estimator/) folder also have examples on the library responses, for various modes of transportation.

## API

The API provides an HTTP(s) endpoint to estimate the CO2 emissions for a transport trip. Internally, the API relies on the ""transport-co2"" estimator library.

Please go into [api](api/) folder to read more about running locally or deploying as docker container or serverless function.

## Roadmap

This project is intended as a proof-of-concept and to generate feedback for future development. See our [project roadmap](https://github.com/maasglobal/sustainable-mobility-api/milestones) for upcoming plans and ideas.

## Support or feedback

If you have ideas for this project or need assistance, please contact us via the [project issue tracker](https://github.com/maasglobal/sustainable-mobility-api/issues).
",27,27,4,30,transportation,"[co2, co2-emission, co2-emissions, emissions, environment, ghg, greenhouse-gas-emissions, greenhouse-gases, mobility-as-a-service, mobilityanalysis, passenger, python-library, sustainability, sustainable-consumption, transport, transport-co2, transport-trip, transportation]",00000
53,trs,im-n1,N/A,https://github.com/im-n1/trs,https://api.github.com/repos/im-n1/trs,Transportation timetambles for command line.,"# TRS 

Transportation timetambles for command line.

![example](./assets/example.png)

## Installation

```
cargo install --git https://github.com/im-n1/transpors
```

## Usage

Note: When installed the binary is named `trs` for convenience.

### Wizard

When you run the app for the first time a wizard will welcome you and
walk you thru the setup process. All you need is GTFS file URL or location
on your drive.

Such GTFS file can be found on the internet on your local transporation company
website. Apps like [Citymapper](https://citymapper.com/) uses exactly these
files. There is also [this](https://transitfeeds.com/) portal where you can try
to find your city.

### Print timetables

Except wiping (`-w`) the app always prints out the timetables of your stations.

```
$ trs

Skloněná -> Sídliště Čakovice
-----------------------------
136 - 13:20 (+14 min)
136 - 13:35 (+29 min)
136 - 13:50 (+44 min)
```

### Refreshing database

When a new version of GTFS file is available you can simply refresh your app database
with just one command. If the GTFL file location is URL it will be downloaded automatically.

```
$ trs -r
```

### Add/delete stops

```
$ trs -a  # to add new stops
$ trs -d  # to delete existing stops
```

### Wiping whole app

```
$ trs -w  # wipes whole app database - cannot be undone.
```

## Changelog

### 0.1.4

- added `-l` param for better peek to the future

### 0.1.3

- log messages (CLI output) unified
- dependencies bumped to newer versions

### 0.1.2

- timetables are now sorted by stop name
- dependencies bumped to newer versions which brings notably better performance
- ! you need to rebuild your database after this update

### 0.1.1

- added relative times
- added a few words about GTFS to README filte
- updated dependencies

### 0.1

- initial release
",26,26,1,2,transportation,"[cli, rust, transportation]",00000
54,pdptw-instances,cssartori,N/A,https://github.com/cssartori/pdptw-instances,https://api.github.com/repos/cssartori/pdptw-instances,Instances for the Pickup and Delivery Problem with Time Windows (PDPTW) based on open data,"# Instances for the Pickup and Delivery Problem with Time Windows based on open data

In this repository you can find information about the PDPTW instances proposed in the article *A study on the pickup and delivery problem with time windows: Matheuristics and new instances*, Computers & Operations Research (2020). The article is available online [here](https://doi.org/10.1016/j.cor.2020.105065).

The instances were generated using real-world data for addresses and travel times. The tool [Open Source Vehicle Routing Instance Generator](https://github.com/cssartori/ovig) was developed specifically for the purpose of generating these instances. Travel times are computed using the [Open Source Routing Machine](https://github.com/Project-OSRM/osrm-backend) which takes as input [OpenStreetMap](https://planet.openstreetmap.org/) data. Addresses were obtained from the [OpenAdresses](https://openaddresses.io/) project and the [Donovan and Work (2016)](https://doi.org/10.13012/J8PN93H8) dataset. Further information can be found in the repository of the instance generator and the original article.

This repository was inspired by others in the combinatorial optimization and operations research communities, such as the [TSPLib](https://www.iwr.uni-heidelberg.de/groups/comopt/software/TSPLIB95/), the [CVRPLib](http://vrp.atd-lab.inf.puc-rio.br/index.php/en/), and the [SINTEF TOP](https://www.sintef.no/projectweb/top/). The latter maintains the standard instances of the PDPTW proposed by Li and Lim (2003) and their best-known solutions.

## Instance files

Information on how to obtain the 300 files containing the definiton of the instances in the set are available under the folder [instances/](https://github.com/cssartori/pdptw-instances/tree/master/instances).

## Best-known solutions

The detailed best-known solution for each instance is kept under the folder [solutions/](https://github.com/cssartori/pdptw-instances/tree/master/solutions). The folder keeps tables on best-known values as well, which can be used for comparisons and analyses in future works.

## Validator

The folder [validator/](https://github.com/cssartori/pdptw-instances/tree/master/validator) contains Python (3.0) scripts to validate solutions for the instances. In this way, it is possible to verify if new best-known solutions respect all the constraints imposed by the PDPTW.

## How to contribute new best-known solutions

Anyone can contribute with new best-known solutions for the proposed instances. All that is needed is to submit the file containing the new candidate solution. For the structure of the solution file, please make every effort to have it in the same way as the one detailed in the [solutions/](https://github.com/cssartori/pdptw-instances/tree/master/solutions) folder. A reference to the work that generated the solutions is very much appreciated.

New solutions can be submitted to: cssartori `at` inf  `dot` ufrgs `dot` br

## Reference in publications

When using the instances in publications, please cite

```
@article{sartori-buriol-2020,
	title = ""A Study on the Pickup and Delivery Problem with Time Windows: Matheuristics and New Instances"",
	author = ""Carlo S. Sartori and Luciana S. Buriol"",
	journal = ""Computers & Operations Research"",
	pages = ""105065"",
	year = ""2020"",
	issn = ""0305-0548"",
	doi = ""https://doi.org/10.1016/j.cor.2020.105065""
}
```
",26,26,4,0,transportation,"[combinatorial-optimization, logistics, operations-research, transportation, vehicle-routing-problem]",00000
55,analysis-backend,conveyal,conveyal,https://github.com/conveyal/analysis-backend,https://api.github.com/repos/conveyal/analysis-backend,Server component of Conveyal Analysis,"# Conveyal Analysis Backend

## This repository is deprecated. It has been merged into Conveyal's main routing component R5. 
Development of the Conveyal Analysis backend is continuing in [the r5 repository](https://github.com/conveyal/r5), and existing issues are being migrated there. Please create any new issues or pull requests against that repository.
",23,23,5,0,transportation,"[analysis, transportation]",00000
56,transitland-lib,interline-io,interline-io,https://github.com/interline-io/transitland-lib,https://api.github.com/repos/interline-io/transitland-lib,"Library and tool for reading, writing, and processing transit data","# Interline Transitland <!-- omit in toc -->

`transitland-lib` is a library and command-line tool for reading, writing, and processing transit data in [GTFS](http://gtfs.org) and related formats. The library is structured as a set of data sources, filters, and transformations that can be mixed together in a variety of ways to create processing pipelines. The library supports the [DMFR](https://github.com/transitland/distributed-mobility-feed-registry) format to describe feed resources.

![Test & Release](https://github.com/interline-io/transitland-lib/workflows/Test%20&%20Release/badge.svg) [![GoDoc](https://godoc.org/github.com/interline-io/transitland-lib/tl?status.svg)](https://godoc.org/github.com/interline-io/transitland-lib/tl) ![Go Report Card](https://goreportcard.com/badge/github.com/interline-io/transitland-lib)

## Table of Contents <!-- omit in toc -->
<!-- to update use https://marketplace.visualstudio.com/items?itemName=yzhang.markdown-all-in-one -->
- [Installation](#installation)
	- [Download prebuilt binary](#download-prebuilt-binary)
	- [Install using homebrew](#install-using-homebrew)
	- [Install binary from source](#install-binary-from-source)
- [Usage as a CLI tool](#usage-as-a-cli-tool)
	- [`validate` command](#validate-command)
	- [`copy` command](#copy-command)
	- [`extract` command](#extract-command)
	- [`sync` command](#sync-command)
	- [`fetch` command](#fetch-command)
	- [`import` command](#import-command)
	- [`unimport` command](#unimport-command)
	- [`dmfr` command](#dmfr-command)
- [Usage as a library](#usage-as-a-library)
	- [Key library components](#key-library-components)
	- [Install as a library](#install-as-a-library)
	- [Example of how to use as a library](#example-of-how-to-use-as-a-library)
- [Database migrations](#database-migrations)
- [Usage as a Web Service](#usage-as-a-web-service)
	- [`transitland_server` command](#transitland_server-command)
	- [Hasura](#hasura)
- [Included Readers and Writers](#included-readers-and-writers)
- [Development](#development)
	- [Releases](#releases)
- [Licenses](#licenses)


## Installation

### Download prebuilt binary

The `transitland` binaries for Linux and macOS are attached to each [release](https://github.com/interline-io/transitland-lib/releases).

### Install using homebrew

The `transitland` binary can be installed using homebrew. The executable is code-signed and notarized.

```bash
brew install interline-io/transitland-lib/transitland-lib
```

### Install binary from source

```bash
go get github.com/interline-io/transitland-lib/cmd/transitland
```

This package uses Go Modules and will also install required dependencies.

Main dependencies:
- `twpayne/go-geom`
- `jmoiron/sqlx`
- `Masterminds/squirrel`
- `lib/pq`
- `mattn/go-sqlite3` (requires CGO)

## Usage as a CLI tool

The main subcommands are:
- [validate](#validate-command)
- [copy](#copy-command)
- [extract](#extract-command)
- [sync](#sync-command)
- [fetch](#fetch-command)
- [import](#import-command)
- [unimport](#unimport-command)- 
- [dmfr](#dmfr-command)

### `validate` command

The validate command performs a basic validation on a data source and writes the results to standard out.

```bash
% transitland validate --help
Usage: validate <reader>
  -best-practices
    	Include Best Practices validations
  -ext value
    	Include GTFS Extension
  -o string
    	Write validation report as JSON to file
```

Example: 

```bash
% transitland validate ""https://www.bart.gov/dev/schedules/google_transit.zip""
```

### `copy` command

The copy command performs a basic copy from a reader to a writer. By default, any entity with errors will be skipped and not written to output. This can be ignored with `-allow-entity-errors` to ignore simple errors and `-allow-reference-errors` to ignore entity relationship errors, such as a reference to a non-existent stop.

```bash
% transitland copy --help
Usage: copy <reader> <writer>
  -allow-entity-errors
    	Allow entities with errors to be copied
  -allow-reference-errors
    	Allow entities with reference errors to be copied
  -create
    	Create a basic database schema if none exists
  -ext value
    	Include GTFS Extension
  -fvid int
    	Specify FeedVersionID when writing to a database
```

Example:

```bash
% transitland copy --allow-entity-errors ""https://www.bart.gov/dev/schedules/google_transit.zip"" output.zip

% unzip -p output.zip agency.txt
agency_id,agency_name,agency_url,agency_timezone,agency_lang,agency_phone,agency_fare_url,agency_email
BART,Bay Area Rapid Transit,https://www.bart.gov/,America/Los_Angeles,,510-464-6000,,
  ```

### `extract` command

The extract command extends the basic copy command with a number of additional options and transformations. It can be used to pull out a single route or trip, interpolate stop times, override a single value on an entity, etc. This is a separate command to keep the basic copy command simple while allowing the extract command to grow and add more features over time.

```bash
% transitland extract --help
Usage: extract <input> <output>
  -allow-entity-errors
    	Allow entities with errors to be copied
  -allow-reference-errors
    	Allow entities with reference errors to be copied
  -create
    	Create a basic database schema if none exists
  -create-missing-shapes
    	Create missing Shapes from Trip stop-to-stop geometries
  -deduplicate-stop-times
    	Deduplicate StopTimes using Journey Patterns
  -ext value
    	Include GTFS Extension
  -extract-agency value
    	Extract Agency
  -extract-calendar value
    	Extract Calendar
  -extract-route value
    	Extract Route
  -extract-route-type value
    	Extract Routes matching route_type
  -extract-stop value
    	Extract Stop
  -extract-trip value
    	Extract Trip
  -fvid int
    	Specify FeedVersionID when writing to a database
  -interpolate-stop-times
    	Interpolate missing StopTime arrival/departure values
  -normalize-service-ids
    	Create any missing Calendar entities for CalendarDate service_ids
  -normalize-timezones
    	Normalize timezones and apply default stop timezones based on agency and parent stops
  -set value
    	Set values on output; format is filename,id,key,value
  -simplify-calendars
    	Attempt to simplify CalendarDates into regular Calendars
  -simplify-shapes float
    	Simplify shapes with this tolerance (ex. 0.000005)
  -use-basic-route-types
    	Collapse extended route_type's into basic GTFS values
```

Example:

```bash
# Extract a single trip from the BART GTFS, and rename the agency to ""test"".
% transitland extract -extract-trip ""3050453"" -set ""agency.txt,BART,agency_id,test"" ""https://www.bart.gov/dev/schedules/google_transit.zip"" output2.zip

# Note renamed agency
% unzip -p output2.zip agency.txt
agency_id,agency_name,agency_url,agency_timezone,agency_lang,agency_phone,agency_fare_url,agency_email
test,Bay Area Rapid Transit,https://www.bart.gov/,America/Los_Angeles,,510-464-6000,,

# Only entities related to the specified trip are included in the output.
% unzip -p output2.zip trips.txt
route_id,service_id,trip_id,trip_headsign,trip_short_name,direction_id,block_id,shape_id,wheelchair_accessible,bikes_allowed
1,2020_09_14-DX-MVS-Weekday-15,3050453,San Francisco International Airport,,1,,01_shp,0,0

$ unzip -p output2.zip routes.txt
route_id,agency_id,route_short_name,route_long_name,route_desc,route_type,route_url,route_color,route_text_color,route_sort_order
1,test,YL-S,Antioch to SFIA/Millbrae,,1,http://www.bart.gov/schedules/bylineresults?route=1,FFFF33,,0

% transitland % unzip -p output2.zip stop_times.txt
trip_id,arrival_time,departure_time,stop_id,stop_sequence,stop_headsign,pickup_type,drop_off_type,shape_dist_traveled,timepoint
3050453,04:53:00,04:53:00,CONC,0,,0,0,0.00000,0
3050453,04:58:00,04:58:00,PHIL,2,,0,0,4.06000,0
3050453,05:01:00,05:02:00,WCRK,3,,0,0,5.77000,0
3050453,05:06:00,05:07:00,LAFY,4,,0,0,9.23000,0
3050453,05:11:00,05:12:00,ORIN,5,,0,0,12.99000,0
3050453,05:17:00,05:18:00,ROCK,6,,0,0,17.38000,0
...
```

### `sync` command

The `sync` command loads DMFR files into a database.

```bash
% transitland sync --help
Usage: sync <Filenames...>
  -dburl string
    	Database URL (default: $TL_DATABASE_URL)
  -hide-unseen
    	Hide unseen feeds
  -hide-unseen-operators
    	Hide unseen operators
```

### `fetch` command

The `fetch` command fetches GTFS data and saves feed version records to the database. Use after the `sync` command.

```bash
% transitland fetch --help
Usage: fetch [feed_id...]
  -allow-ftp-fetch
    	Allow fetching from FTP urls
  -allow-local-fetch
    	Allow fetching from filesystem directories/zip files
  -allow-s3-fetch
    	Allow fetching from S3 urls
  -create-feed
    	Create feed records if not found
  -dburl string
    	Database URL (default: $TL_DATABASE_URL)
  -dry-run
    	Dry run; print feeds that would be imported and exit
  -feed-url string
    	Manually fetch a single URL; you must specify exactly one feed_id
  -fetched-at string
    	Manually specify fetched_at value, e.g. 2020-02-06T12:34:56Z
  -storage string
    	GTFS storage location
  -ignore-duplicate-contents
    	Allow duplicate internal SHA1 contents
  -limit int
    	Maximum number of feeds to fetch
  -secrets string
    	Path to DMFR Secrets file
  -workers int
    	Worker threads (default 1)
```

### `import` command

The `import` command imports previously fetched feed versions into the database. Use after the `fetch` command.

```bash
% transitland import --help
Usage: import [feedids...]
  -activate
    	Set as active feed version after import
  -create-missing-shapes
    	Create missing Shapes from Trip stop-to-stop geometries
  -date string
    	Service on date
  -dburl string
    	Database URL (default: $TL_DATABASE_URL)
  -deduplicate-stop-times
    	Deduplicate StopTimes using Journey Patterns
  -dryrun
    	Dry run; print feeds that would be imported and exit
  -ext value
    	Include GTFS Extension
  -fetched-since string
    	Fetched since
  -fv-sha1 value
    	Feed version SHA1
  -fv-sha1-file string
    	Specify feed version IDs by SHA1 in file, one per line
  -fvid value
    	Import specific feed version ID
  -fvid-file string
    	Specify feed version IDs in file, one per line; equivalent to multiple --fvid
  -storage string
    	GTFS storage location
  -interpolate-stop-times
    	Interpolate missing StopTime arrival/departure values
  -latest
    	Only import latest feed version available for each feed
  -limit int
    	Import at most n feeds
  -normalize-timezones
    	Normalize timezones and apply default stop timezones based on agency and parent stops
  -simplify-calendars
    	Attempt to simplify CalendarDates into regular Calendars
  -simplify-shapes float
    	Simplify shapes with this tolerance (ex. 0.000005)
  -workers int
    	Worker threads (default 1)
```

### `unimport` command

The `unimport` command deletes previously imported data from feed versions. The feed version record itself is not deleted. You may optionally specify removal of only schedule data, leaving routes, stops, etc. in place.

```bash
% transitland unimport --help
Usage: unimport [fvids]
  -dburl string
    	Database URL (default: $TL_DATABASE_URL)
  -dryrun
    	Dry run; print feeds that would be imported and exit
  -feed value
    	Feed ID
  -fv-sha1 value
    	Feed version SHA1
  -fv-sha1-file string
    	Specify feed version IDs by SHA1 in file, one per line
  -fvid-file string
    	Specify feed version IDs in file, one per line; equivalent to multiple --fvid
  -schedule-only
    	Unimport stop times, trips, transfers, shapes, and frequencies
```

### `dmfr` command

The `dmfr` command enables validation, linting, and formatting of [Distributed Mobility Feed Registry]([dmfr](https://github.com/transitland/distributed-mobility-feed-registry)) format. Please see [DMFR Command help](dmfr-command.md).

## Usage as a library

### Key library components

- Entity: An `Entity` is entity as specified by GTFS, such as an Agency, Route, Stop, etc.
- Reader: A `Reader` provides streams of GTFS entities over channels. The `tlcsv` and `tldb` modules provide CSV and PostgreSQL/SQLite support, respectively.
- Writer: A `Writer` accepts GTFS entities. As above, `tlcsv` and `tldb` provide basic implementations. Custom writers can also be used to support non-GTFS outputs, such as building a routing graph.
- Copier: A `Copier` reads a stream of GTFS entities from a `Reader`, checks each entity against a `Marker`, performs validation, applies any specified `Filters`, and sends to a `Writer`.
- Marker: A `Marker` selects which GTFS entities will be processed by a `Copier`. For example, selecting only entities related to a single trip or route.
- Filter: A `Filter` applies transformations to GTFS entities, such as converting extended route types to basic values, or modifying entity identifiers.
- Extension: An `Extension` provides support for additional types of GTFS entities.

See [godoc.org](https://godoc.org/github.com/interline-io/transitland-lib/tl) for package documentation.

### Install as a library

```bash
go get github.com/interline-io/transitland-lib
```

### Example of how to use as a library

A simple example of reading and writing GTFS entities from CSV ([full example](https://github.com/interline-io/transitland-lib/raw/master/internal/testreadme/main_test.go)):

```go
package main

import (
	""fmt""
	""testing""

	""github.com/interline-io/transitland-lib/copier""
	""github.com/interline-io/transitland-lib/tl""
	""github.com/interline-io/transitland-lib/tlcsv""
	""github.com/interline-io/transitland-lib/tldb""
)

var URL = ""https://github.com/interline-io/transitland-lib/raw/master/test/data/external/bart.zip""

func TestExample1(t *testing.T) {
	// Read stops from a GTFS url
	reader, _ := tlcsv.NewReader(URL)
	reader.Open()
	defer reader.Close()
	// Write to to the current directory
	writer, _ := tlcsv.NewWriter(""."")
	writer.Open()
	// Copy stops
	for stop := range reader.Stops() {
		fmt.Println(""Read Stop:"", stop.StopID)
		eid, _ := writer.AddEntity(&stop)
		fmt.Println(""Wrote stop:"", eid)
	}
}
```

Database support is handled similary:

```go
func getReader() tl.Reader {
	reader, _ := tlcsv.NewReader(URL)
	return reader
}

func TestExample2(t *testing.T) {
	reader := getReader()
	// Create a SQLite writer, in memory
	dburl := ""sqlite3://:memory:""
	dbwriter, err := tldb.NewWriter(dburl)
	if err != nil {
		t.Fatalf(""no reader available"")
	}
	if err := dbwriter.Open(); err != nil {
		t.Fatalf(""could not open database for writing"")
	}
	if err := dbwriter.Create(); err != nil {
		t.Fatalf(""could not find or create database schema"")
	}
	for stop := range reader.Stops() {
		// A database writer AddEntity returns the primary key as a string.
		fmt.Println(""Read Stop:"", stop.StopID)
		eid, err := dbwriter.AddEntity(&stop)
		if err != nil {
			t.Fatalf(""could not write entity to database"")
		}
		fmt.Println(""wrote stop to database:"", eid)
	}
	// Read back from this source.
	dbreader, err := dbwriter.NewReader()
	if err != nil {
		t.Fatalf(""could not get a new reader"")
	}
	count := 0
	for stop := range dbreader.Stops() {
		fmt.Println(""read stop from database:"", stop.StopID)
		count++
	}
	if count != 50 {
		t.Errorf(""got %d stops, expected 50"", count)
	}
}
```

More advanced filtering operations can be performed using a `Copier`, which provides additional hooks for filtering, transformation, and validation:

```go
func TestExample3(t *testing.T) {
	reader := getReader()
	// Create a zip writer
	writer, err := tlcsv.NewWriter(""filtered.zip"")
	if err != nil {
		t.Fatalf(""no writer available"")
	}
	// Create a copier to stream, filter, and validate entities
	cp := copier.NewCopier(reader, writer)
	result := cp.Copy()
	if result.WriteError != nil {
		t.Fatalf(""fatal copy error"")
	}
	for _, err := range result.Errors {
		fmt.Println(""error:"", err)
	}
	for fn, count := range result.EntityCount {
		fmt.Printf(""copied %d entities from %s\n"", count, fn)
	}
}
```

See API docs at https://godoc.org/github.com/interline-io/transitland-lib

## Database migrations

Migrations are supported for PostgreSQL, using the schema files in `internal/schema/postgres/migrations`. These files can be read and applied using [golang-migrate](https://github.com/golang-migrate/migrate), which will store the most recently applied migration version in `schema_migrations`. See the `bootstrap.sh` script in that directory for an example, as well as details on how to import Natural Earth data files for associating agencies with places.

SQLite database are intended to be short-lived. They can be created on an as needed basis by passing the `-create` flag to some commands that accept a writer. They use a single executable schema, defined in `internal/schema/sqlite.sql`.

## Usage as a Web Service

`transitland-lib` can be used in a variety of ways to power a web service. Interline currently uses two approaches:

1. Populate a database with one or more feeds using `transitland-lib` and use the `transitland-server` package to serve the Transitland v2 REST and/or v2 GraphQL API endpoints. These API endpoints are primarily read-only and focused on querying and analyzing transit data.

2. Populate a postgres database with one or more feeds using `transitland-lib` and use [Hasura](https://hasura.io/) to provide a basic GraphQL API for reading and writing into the database. 

For more information about how these web services are used within the overall architecture of the Transitland platform, see https://www.transit.land/documentation#transitland-architecture 

### `transitland_server` command

See [transitland-server](https://github.com/interline-io/transitland-server) documentation.

### Hasura

[Hasura](https://hasura.io/) is a web service that can provide an ""instant"" GraphQL API based on a postgres database and its schema. We combine Hasura with `transitland-lib` for projects that involve creating new or complex queries (since Hasura can be more flexible than the queries provided by `transitland server`) and projects that involve an API with full read and write access (for example, editing GTFS data, which is also not provided by `transitland server`). Note that Hasura's automatically generated database queries are not guaranteed to be efficient (on the other hand, `transitland server` is tuned to provide better performance).

To use Hasura with `transitland-lib` you can either import feeds into an existing postgres database (using the `transitland dmfr` command) and configure Hasura to recognize all the tables and the foreign key relationships between them.

## Included Readers and Writers

| Target                   | Module  | Supports Read | Supports Write |
| ------------------------ | ------- | ------------- | -------------- |
| CSV                      | `tlcsv` | ✅             | ✅              |
| SQLite                   | `tldb`  | ✅             | ✅              |
| PostgreSQL (with PostGIS)  | `tldb`  | ✅             | ✅              |

We welcome the addition of more readers and writers.

## Development

`transitland-lib` follows Go coding conventions.

GitHub Actions runs all tests, stores code coverage reports as artifacts, and prepares releases.

### Releases

Releases follow [Semantic Versioning](https://semver.org/) conventions.

To cut a new release:

1. Update `transitland-lib/tl/tl.go` with the new version.
2. Create a GitHub release. This will create a tag and GitHub Actions will create &amp; attach code-signed binaries.
3. Download the files from the release, and update the [homebrew formula](https://github.com/interline-io/homebrew-transitland-lib/blob/master/transitland-lib.rb) with the updated sha256 hashes and version tag.

## Licenses

`transitland-lib` is released under a ""dual license"" model:

- open-source for use by all under the [GPLv3](LICENSE) license
- also available under a flexible commercial license from [Interline](mailto:info@interline.io)

",23,23,2,6,transportation,"[golang-library, gtfs, gtfs-realtime, mobility, transit, transitland, transportation]",00000
57,monimpacttransport,incubateur-ademe,incubateur-ademe,https://github.com/incubateur-ademe/monimpacttransport,https://api.github.com/repos/incubateur-ademe/monimpacttransport,La v2 du calculateur d'empreinte climat du transport,"# Mon Impact Transport

Application web et API permettant de comparer la consommation en CO2e de différents modes de transport.

https://monimpacttransport.fr/

https://api.monimpacttransport.fr/beta/getEmissionsPerDistance

## Application Web

### Développement

`yarn` pour installer l'application

`yarn start` pour lancer l'application sur [http://localhost:3000](http://localhost:3000)

### Déploiement

Hébergement via Netlify. Il suffit de push sur ce repo (branche master) pour déployer.

## API

Retourne la liste des modes de transport avec leur impact calculé pour une distance (paramètre **km**) donnée.

### Exemples

https://api.monimpacttransport.fr/beta/getEmissionsPerDistance?km=250

https://api.monimpacttransport.fr/beta/getEmissionsPerDistance?km=250&filter=smart&fields=emoji,description

https://api.monimpacttransport.fr/beta/getEmissionsPerDistance?km=250&transportations=4,9,7

### Paramètres

**Number** (défaut: **1**)
Distance en km utilisée pour le calcul de l'impact des modes de transport

---

**filter**: String (défaut : **auto**)
Mode de filtrage (n'est pas pris en compte si le paramètre **transportations** est défini)

Valeurs possibles :

- **smart** : renvoie les modes de transport pertinents pour la distance (pas d'avion en dessous de 500km par exemple)
- **all** : renvoie les modes de transport dont l'impact est connu.

---

**transportations**: Number[]
ID des modes de transport à retourner, séparé par des virgules

---

**ignoreRadiativeForcing**: Boolean (défaut: **false**)
Si **true** l'api ignore l'impact des trainées ([forçage radiatif](https://fr.wikipedia.org/wiki/For%C3%A7age_radiatif)) dans son calcul de l'impact de l'avion

---

**fields**: String[] (défaut: **id, name, emissions**)
Détermine la liste des champs retournés par l'api.

Valeurs possibles :

- **id** (toujours retourné)
- **source**
- **name** (toujours retourné)
- **emoji**
- **description**
- **carpool**
- **emissions** (toujours retourné)
- **display**
",23,23,2,25,transportation,"[calculator, climate, co2, footprint, transportation]",00000
58,timetable_kit,neroden,N/A,https://github.com/neroden/timetable_kit,https://api.github.com/repos/neroden/timetable_kit,A Python toolkit for generating human-readable timetables from GTFS data; uses PANDAS and gtfs_kit,"{'message': 'Not Found', 'documentation_url': 'https://docs.github.com/rest/repos/contents#get-repository-content'}",23,23,6,1,transportation,"[gtfs, html-timetables, metro, pandas, public-transport, public-transportation, python, static-gtfs, timetable, trains, transit, transit-data, transportation, trip-planning]",00000
59,Accessibility_Toolbox,higgicd,N/A,https://github.com/higgicd/Accessibility_Toolbox,https://api.github.com/repos/higgicd/Accessibility_Toolbox,Accessibility Toolbox for R and ArcGIS,"# Accessibility Toolbox for R and ArcGIS

## Overview
This repository contains the tools, code, and data to support the paper *Accessibility Toolbox for R and ArcGIS* published in *Transport Findings* at DOI [10.32866/8416](https://doi.org/10.32866/8416).

<img width=""900"" alt=""fig_2"" src=""https://github.com/higgicd/Accessibility_Toolbox/blob/master/assets/fig_2.jpg"">

The Accessibility Toolbox contains three tools: 
1. The first is the **Accessibility Calculator** Python toolbox for ArcGIS Pro and 10x that simplifies the steps involved in a place-based accessibility workflow. The Pro version of the tool is written for multiprocessing. As of version ```2.0```, the 10x tool has been moved to the [legacy tools](https://github.com/higgicd/Accessibility_Toolbox/tree/master/legacy_tools) folder. Follow [these steps](https://pro.arcgis.com/en/pro-app/help/analysis/geoprocessing/basics/use-a-custom-geoprocessing-tool.htm) to add the ```.pyt``` toolbox to your project or edit and run via the command line.

2. The second is an interactive **Accessibility Toolbox** R Notebook that visualizes the 5 impedance functions from Kwan (1998) and 28 impedance measures to aid in the selection and customization of accessibility cost functions. Customized parameters can be implemented in the ArcGIS tool's python code.

3. The third is the **Accessibility Calculator for R** that builds on the original R notebook's code to incorporate an open and reproducible workflow for calculating accessibility using the new [r5r](https://github.com/ipeaGIT/r5r) tool.

## Updates  
See [version history](https://github.com/higgicd/Accessibility_Toolbox/blob/master/version_history.md) for previous releases

## Calculating Accessibility in ArcGIS
The Accessibility Calculator has several inputs:  
<img align=""right"" width=""275"" height=""1250"" src=""https://github.com/higgicd/Accessibility_Toolbox/blob/master/assets/toolbox.png"">

*Network Details*
- **Input Network Dataset**: the input Network Analyst network dataset for your analysis
- **Travel Mode** (Pro): the travel mode for your analysis from your network dataset
- **Cutoff Value**: the travel time value at which to stop searching for destinations for a given origin
- *Departure Time* (optional): a time of departure from the origins; useful for analyses with traffic or GTFS transit scheduling
  - see the ArcGIS [Make OD Cost Matrix Analysis Layer](https://pro.arcgis.com/en/pro-app/tool-reference/network-analyst/make-od-cost-matrix-analysis-layer.htm) reference for more guidance and examples on setting a *departure time* parameter
- **Impedance Measure**: a selection of one or more impedance measures; refer to the *R Notebook* for guidance on selecting a measure

*Origins*
- **Origins**: a feature class representing origin locations *i*; can be point or polygon
- **Origins ID Field**: a unique identifier for your input origins; can be any type of field
- **Origins Network Search Tolerance**: the search tolerance for locating the input features on the network; features that are outside the search tolerance are left unlocated
- **Origins Network Search Criteria**: restricts the search to particular source feature classes in your network dataset; useful if you don't want to find features that may be unsuited for a network location
  - for example, if you have created a transit network using the [Add GTFS to Network Dataset](https://esri.github.io/public-transit-tools/AddGTFStoaNetworkDataset.html) tool and want your origins to locate on streets while avoiding other feature classes like transit lines, you could input these expressions (using default names for the GTFS tool) into the value table: ```Streets_UseThisOne``` with a snap type of ```SHAPE```; ```Stops``` and ```NONE```; ```Stops_Snapped2Streets``` and ```NONE```; ```Transit_Network_ND_Junctions``` and ```NONE```; ```Connectors_Stops2Streets``` and ```NONE```; and ```TransitLines``` and ```NONE``` (see example for [Pro](https://github.com/higgicd/Accessibility_Toolbox/blob/master/assets/search_criteria_query_pro.png))
  - see the ArcGIS [Add Locations](https://pro.arcgis.com/en/pro-app/tool-reference/network-analyst/add-locations.htm) reference for more guidance and examples on setting a *search_criteria* parameter
- *Origins Network Search Query* (optional): specifies a query to restrict the search to a subset of the features within a network source feature class; useful if you don't want to locate on particular features
  - for example, if you do not want your input origins to locate on major highways, you could input ```Streets``` with the expression ```FREEWAY=0```
  - in the example data, if you do not want origins to locate on tunnels or bridges, you could input the expressions ```NYC_OSM_Walk``` and ```tunnel<>'yes'``` and ```NYC_OSM_Walk``` and ```bridge<>'yes'``` into the value table (see example for [Pro](https://github.com/higgicd/Accessibility_Toolbox/blob/master/assets/search_criteria_query_pro.png))
  - see the ArcGIS [Add Locations](https://pro.arcgis.com/en/pro-app/tool-reference/network-analyst/add-locations.htm) reference for more guidance and examples on setting a *search_query* parameter

*Destinations*
- **Destinations**: a feature class representing destination locations *j*; can be point or polygon
- **Destinations ID Field**: a unique identifier for your input destinations; can be any type of field
- **Destination Opportunities Field**: a numeric field containing the opportunities *Oj* available at the destination, such as the number of jobs
- **Destinations Network Search Tolerance**: same notes as the *Origins Network Search Tolerance*
- **Destinations Network Search Criteria**: same notes as the *Origins Network Search Criteria*
- *Destinations Network Search Query* (optional): same notes as the *Origins Network Search Query*

*General Settings*
- **Output Work Folder**: the folder where the output geodatabase and multiprocessing workers folder will be created; working files generated during large analyses can require many gigabytes of disk space but they are automatically deleted once the tool finishes
- **Name of Output Analysis Geodatabase**: name for the output geodatabase containing the scratch working files and the final tool output
- **Origins Maximum Batch Size**: maximum size of each batch of origins for multiprocessing and controlling memory/disk use; some optimization may occur if the number of observations can be spread over the available processes within your set maximum batch size (```(n/(cpus-1))+1 if n/(cpus-1) <= batch size```), otherwise it adheres to ```n/batch size```
- *Delete OD lines where i = j?* (optional): if selected, the tool will delete any origin-destination lines or pairs where the origin was the same as the destination; useful if you only want to calculate access to opportunities that are external to the origins
- *Join output back to origins?* (optional): if selected, joins the accessibility output back to the input origins

## Selecting an Impedance Function in R
Using the interactive R Notebook, users can explore 5 impedance functions: 
- inverse power
- negative exponential
- modified Gaussian
- cumulative opportunities rectangular
- cumulative opportunities linear

Each function is specified with several different impedance parameters for a total of 28 different impedance measures.

## Customizing or Adding Your Impedance Measure to the Tool
Users can add or change the impedance functions in the ArcGIS Accessibility Calculator by editing the ```parameters.py``` file. This file specifies the different impedance functions and stores relevant parameters in the dictionary *p*. Using the examples of the ```POW0_8``` and ```CUMR10``` impedance measures, each dictionary entry contains the following elements:

```
p = {
    ""POW0_8"": {""f"": ""power"", ""b0"": 0.8}, 
    ""CUMR10"": {""f"": ""cumr"", ""t_bar"": 10}
    }
```

- ```POW0_8``` and ```CUMR10```: the names of the impedance measures
- ```""f""```: the key ```f``` indexes the value of the impedance function for the impedance measure; in the case of ```POW0_8```, the ```""pow""``` string refers to the inverse power function; for ```CUMR10``` the function is ```""cumr""```. Available functions are:
  - ```power```: inverse power
  - ```neg_exp```: negative exponential
  - ```mgaus```: modified Gaussian
  - ```cumr```: cumulative opportunities rectangular
  - ```cuml```: cumulative opportunities linear
- ```""b0""```: the key ```b0``` indexes the value of the beta parameter for the impedance measure that will be input into the impedance function
  - in the case of the ```POW0_8``` measure, ```0.8``` refers to a beta value of 0.8
- ```""t_bar""```: the key ```""t_bar""``` indexes the value of the travel time window for the cumulative impedance functions
  - in the case of the ```CUMR10``` measure, ```10``` refers to a travel time window of 10 minutes

- if you make any additions of functions to the ```parameters.py``` file, you **must** update the list of impedance functions in the ```Accessibility_Toolbox_Pro_MP.pyt``` Python Toolbox. The list of function names starts on Line 223.

## References

Higgins, C. D. (2019). Accessibility toolbox for R and ArcGIS. *Transport Findings*. https://doi.org/10.32866/8416

Kwan, M. P. (1998). Space-time and integral measures of individual accessibility: A comparative analysis using a point-based framework. *Geographical Analysis*, 30(3), 191-216. https://doi.org/10.1111/j.1538-4632.1998.tb00396.x

## License
<a rel=""license"" href=""http://creativecommons.org/licenses/by-sa/4.0/""><img alt=""Creative Commons License"" style=""border-width:0"" src=""https://i.creativecommons.org/l/by-sa/4.0/88x31.png"" /></a><br />This work is licensed under a <a rel=""license"" href=""http://creativecommons.org/licenses/by-sa/4.0/"">Creative Commons Attribution-ShareAlike 4.0 International License</a>.
",22,22,4,0,transportation,"[accessibility, arcgis, gtfs, landuse, network-analysis, od-matrix, r5, transportation]",00000
60,commuter,KyleBanks,N/A,https://github.com/KyleBanks/commuter,https://api.github.com/repos/KyleBanks/commuter,Commute times on the command line!,"![Commuter](./_misc/commuter.png)

[![Build Status](https://travis-ci.org/KyleBanks/commuter.svg?branch=master)](https://travis-ci.org/KyleBanks/commuter) &nbsp;
[![GoDoc](https://godoc.org/github.com/KyleBanks/commuter?status.svg)](https://godoc.org/github.com/KyleBanks/commuter) &nbsp;
[![Go Report Card](https://goreportcard.com/badge/github.com/KyleBanks/commuter)](https://goreportcard.com/report/github.com/KyleBanks/commuter) &nbsp;
[![Coverage Status](https://coveralls.io/repos/github/KyleBanks/commuter/badge.svg?branch=master)](https://coveralls.io/github/KyleBanks/commuter?branch=master)

Get commute times on the command line!

- Get commuting time between locations.
- Name and add your frequent locations for easier access.
- Geolocation allows you to use your current location without typing an address.

## Install

Download the appropriate `commuter` binary from the [Releases](https://github.com/KyleBanks/commuter/releases) page.

Alternatively, if you have a working Go installation, you can install `commuter` like so:

```sh
$ go get github.com/KyleBanks/commuter
```

## Usage

The first time you run `commuter`, you'll be prompted to provide a [Google Maps API Key](https://developers.google.com/console) and default location. 

**Important:** Ensure you enable the *Google Maps Distance Matrix API* at [developers.google.com/console](https://developers.google.com/console). If you want to use the `-from-current` and `-to-current` flags, you will also need to enable the *Google Maps Geolocation API*.

```sh
$ commuter
> Enter Google Maps API Key: (developers.google.com/console)
123APIKEY456
> Enter Your Default Location: (ex. 123 Main St. Toronto, Canada)
123 Main St. Toronto, Ontario
```

The API key and default location will be stored locally, and are never sent to any remote services aside from the official Google Maps API. The default location is then used by default when a `-from` or `-to` location is not provided.

Next, request your commute time:

```sh
# From your default to a specific location:
$ commuter -to ""321 Maple Ave. Toronto, Ontario""
32 Minutes

# From a specific location to your default:
$ commuter -from ""Toronto, Ontario""
20 Minutes
```

If you want a commute time beginning and ending somewhere other than your default location, you can use supply full locations for both the `-from` and `-to` flags:

```sh
$ commuter -from ""123 Main St. Toronto, Ontario"" -to ""321 Maple Ave. Toronto, Ontario""
32 Minutes
```

### `commuter add`

You can also add names for your frequent locations like so:

```sh
$ commuter add -name home -location ""123 Main St. Toronto, Ontario""
$ commuter add -name work -address ""321 Maple Ave. Toronto, Ontario""
```

And use them as the `from` and/or `to` location:

```sh
$ commuter -from home -to work
32 Minutes
```

### `commuter list`

To see a list of all your named locations:

```sh
$ commuter list
default: 123 Main St. Toronto, Ontario
    gym: 1024 Fitness Lane Toronto, Ontario
   work: 321 Maple Ave. Toronto, Ontario
```

### Using Your Current Location

If you [enabled](https://developers.google.com/console) the *Google Maps Geolocation API* for your API key, you can use the `-from-current` and `-to-current` flags to use your current location. This is done by attempting to use your IP Address to determine your latitude and longitude, and use that as either the start or destination of your commute:

```sh
$ commuter -from-current -to work
32 Minutes
$ commuter -from gym -to-current
12 Minutes
```

### Travel Modes

By default, `commuter` assumes you are driving between locations. However, you can specify one or more commute methods using the `-drive`, `-walk`, `-bike` and `-transit` flags, like so:

```sh
# Single mode:
$ commuter -walk -to work
7 Hours 50 Minutes

# Multiple modes:
$ commuter -walk -transit -drive -bike -to work
Drive: 30 Minutes
Walk: 7 Hours 50 Minutes
Bike: 2 Hours 45 Minutes
Transit: 1 Hour 17 Minutes
```

And of course the different travel modes can be combined with your current location:

```sh
$ commuter -bike -from-current -to gym
2 Hours 18 Minutes
```

## License

```
MIT License

Copyright (c) 2017 Kyle Banks

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the ""Software""), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.
```
",20,20,4,5,transportation,"[command-line-app, commute, commute-times, commuting, drivers, driving, google-maps, transit, transportation]",00000
61,homeassistant-mta-subway,iicky,N/A,https://github.com/iicky/homeassistant-mta-subway,https://api.github.com/repos/iicky/homeassistant-mta-subway,A sensor to provide MTA Subway service statuses for Home Assistant.,"# Home Assistant MTA Subway Service Status Sensor

[![hacs_badge](https://img.shields.io/badge/HACS-Custom-41BDF5.svg)](https://github.com/hacs/integration)

## Overview

A sensor to provide MTA Subway service statuses for Home Assistant. The sensor reads from the [goodservice.io](goodservice.io) API and provides both the overall line status as a sensor state as well as status descriptions and route directions as sensor attributes. The train line states are updated every minute from the detailed [goodservice.io](https://www.goodservice.io/api/routes?detailed=1) route endpoint.

Credit for the line icons goes to [louh](https://github.com/louh) and his great [NYC Subway Icons repo](https://github.com/louh/nyc-subway-icons) (used with some slight renaming).

### Sensor States
- Good Service
- Planned Work
- Slow
- Not Good
- Delays
- Service Change

<p align=""center"">
  <img src=""https://raw.githubusercontent.com/iicky/homeassistant-mta-subway/main/images/Subway%20Group%20Screen%20Shot.png"" alt=""Example subway card in Home Assistant"">
</p>

### Sensor Attributes

**Color**<br>
Indicates the color of the subway line.

**Scheduled**<br>
Indicates whether the route is scheduled or not.

**Direction statuses**<br>
Indicates the route status for both route directions.

**Delay summaries**<br>
A full description of route delays for both directions.

**Service irregularity summaries**<br>
A full description of any service irregularity summaries currently occuring on the line for both route directions.

**Service change summaries**<br>
A full description of any planned work currently for both directions individually and combined.

<br>
<p align=""center"">
  <img src=""https://raw.githubusercontent.com/iicky/homeassistant-mta-subway/main/images/Sensor%20States%20Screen%20Shot.png"" alt=""Example sensor state and attributes in Home Assistant"">
</p>

## Installation

To install the sensor, copy the `mta_subway` folder under `custom_components` to a directory called `custom_components` in your Home Assistant configuration directory.

To use, add the following configuration to your `configuration.yaml` file for Home Assistant, removing any lines that you do not want to monitor:

```
sensor:
  - platform: mta_subway
    line:
      - '1'
      - '2'
      - '3'
      - '4'
      - '5'
      - '6'
      - '6X'
      - '7'
      - '7X'
      - 'A'
      - 'B'
      - 'C'
      - 'D'
      - 'E'
      - 'F'
      - 'FX'
      - 'G'
      - 'J'
      - 'L'
      - 'M'
      - 'N'
      - 'Q'
      - 'R'
      - 'GS'
      - 'FS'
      - 'H'
      - 'SI'
      - 'W'
      - 'Z'
```
",20,20,4,1,transportation,"[api, home-automation, homeassistant, iot, nyc, nyc-subway-data, sensors, trains, transportation]",00000
62,bkk_stop,amaximus,N/A,https://github.com/amaximus/bkk_stop,https://api.github.com/repos/amaximus/bkk_stop,HomeAssistant custom component for Budapest public transportation,"[![hacs_badge](https://img.shields.io/badge/HACS-Default-orange.svg)](https://github.com/hacs/integration)

<p><a href=""https://www.buymeacoffee.com/6rF5cQl"" rel=""nofollow"" target=""_blank""><img src=""https://camo.githubusercontent.com/c070316e7fb193354999ef4c93df4bd8e21522fa/68747470733a2f2f696d672e736869656c64732e696f2f7374617469632f76312e7376673f6c6162656c3d4275792532306d6525323061253230636f66666565266d6573736167653d25463025394625413525413826636f6c6f723d626c61636b266c6f676f3d6275792532306d6525323061253230636f66666565266c6f676f436f6c6f723d7768697465266c6162656c436f6c6f723d366634653337"" alt=""Buy me a coffee"" data-canonical-src=""https://img.shields.io/static/v1.svg?label=Buy%20me%20a%20coffee&amp;message=%F0%9F%A5%A8&amp;color=black&amp;logo=buy%20me%20a%20coffee&amp;logoColor=white&amp;labelColor=b0c4de"" style=""max-width:100%;""></a></p>

# BKK Stop Information custom component for Home Assistant
## Providing also a custom state card for legacyUI.

This custom component and custom card shows Budapest Public Transportation (BKK)
line information departing in the near future from a configurable stop.<p>

#### Installation
The easiest way to install it is through [HACS (Home Assistant Community Store)](https://github.com/hacs/integration),
search for <i>BKK Stop Information</i> in the Integrations.<br />

If you are not using HACS, download the files from custom_components/bkk_stop into your
$homeassistant_config_dir/custom_components/bkk_stop.<br />

Once downloaded and configured as per below information you'll need to restart HomeAssistant to have the custom component
and the sensors of bkk_stop platform taken into consideration.

#### Configuration:
Define sensors with the following configuration parameters:<br />

---
| Name | Optional | `Default` | Description |
| :---- | :---- | :------- | :----------- |
| name | **N** | - | sensor of bkk_stop type to display |
| stopId | **N** | - | StopId as per [go.bkk.hu](https://go.bkk.hu/) |
| apiKey | **N** | - | API Key to BKK data as per [opendata.bkk.hu](https://opendata.bkk.hu/) |
| maxItems | **Y** | `0` | Number of items to consider. 0 disables this feature |
| minsAfter | **Y** | `20` | Number of minutes ahead to show vehicles departing from station |
| wheelchair | **Y** | `false` | Display vehicle's wheelchair accessibility |
| bikes | **Y** | `false` | Display whether bikes are allowed on vehicle |
| colors | **Y** | `false` | Display BKK's default color for the line and the text |
| ignoreNow | **Y** | `true` | Ignore vehicles already in the station |
| entity_id | **Y** | `` | Used instead of name for automatic generation of entity_id |
| inPredicted | **Y** | `false` | Calculate time in as per estimated arrival time, when available |
| routes | **Y** | `` | List of routes to consider. Those not listed will be discarded |
| headsigns | **Y** | `` | List of headsigns to consider. Those not listed will be discarded. Useful for trans stations |
---

On begining of June the test API key has been revoked, therefore to use this integration you'll have to create an account
at [opendata.bkk.hu](https://opendata.bkk.hu/), generate an API key for yourself and set that in the integration configuration.

#### Example
```
platform: bkk_stop
name: 'bkk7u'
stopId: 'BKK_F00940'
minsAfter: 25
wheelchair: true
apiKey: !secret bkk_apikey
routes:
  - 287
  - 114
  - 213
```

#### Lovelace UI
There is a Lovelace custom card related to this component at [https://github.com/amaximus/bkk-stop-card](https://github.com/amaximus/bkk-stop-card).

#### Legacy UI
Custom state card is provided for presenting data on legacy UI. Pls see the legacyUI directory structure for example.

Lovelace UI:<br />
![bkk_stop Lovelace example](example/bkk_lovelace.jpg)
",20,20,5,0,transportation,"[bkk, budapest, homeassistant, homeassistant-components, transportation]",00000
63,openfortravel,jerryzhenleicai,N/A,https://github.com/jerryzhenleicai/openfortravel,https://api.github.com/repos/jerryzhenleicai/openfortravel,包含了开源的高参网火车查询的核心代码 OpenForTravel contains source code of the Gaocan.com's train route search code that has serving millions of Chinese travelers since 1999.,"# 简介 (Introduction)

OpenForTravel 包含了开源的高参网火车查询的核心代码，高参网火车查询自从1999年来已经为数百万的网民服务。

OpenForTravel contains source code of the Gaocan.com's train route search code that has serving millions of Chinese travelers since 1999.


# 编译和安装 (Installation)

## 准备时刻表价格表文件 (Prepare the Schedule Data)

``` mkdir /var/opt/traindata ```

``` cp train_schedule_data/*.gz  /var/opt/traindata ```

``` cd  /var/opt/traindata; gunzip *.gz ```


## 编译 (Build)：

用Apache Maven来编译:

```mvn install```

结果会生成一个WAR文件： ./rest-server/target/rest-server-1.0.war.这个WAR文件可以直接发布到任何支持Java Servlet标准的J2EE容器，例如Apache Tomcat。下面我们就用Tomcat 8.5.9为例。

This will create a WAR file under ./rest-server/target/rest-server-1.0.war, which can be deployed to any Java servlet
container. We will use Apache Tomcat 8.5.9 as an example.

## 运行 (Run)：

```cp ./rest-server/target/rest-server-1.0.war  /opt/apache-tomcat-8.5.9/webapps/rest.war```

启动 Tomcat ， 然后在浏览器中打开如下的URL: (start Tomcat and open this URL)

http://localhost:8080/rest/trest?src=成都&dest=深圳

注意app启动时由于初始化一次性的需要大概两分钟,最后结果会返回如下JSON。
Note the app may take a couple minutes to initialize. Finally you will see this JSON response:

```
[{ ""segs"": [ {""line"" : ""G1315/G1318"", ""dep"":""7:55"", ""arriv"":""21:50"",""from"":""成都东"",""to"":""广州南""},{""line"" : ""G6225"", ""dep"":""22:25"", ""arriv"":""23:01"",""from"":""广州南"",""to"":""深圳北""}],""shifa"":true,""travel_minutes"":906,""price"":{""yzPrice"":159,""rzPrice"":250,""ywPrice"":250,""rwPrice"":-2}, ""start"":""7:55"", ""end"":""23:01""},{ ""segs"": [ {""line"" : ""G1315/G1318"", ""dep"":""7:55"", ""arriv"":""19:01"",""from"":""成都东"",""to"":""长沙南""},{""line"" : ""G6027"", ""dep"":""19:29"", ""arriv"":""22:55"",""from"":""长沙南"",""to"":""深圳北""}],""shifa"":true,""travel_minutes"":900,""price"":{""yzPrice"":253,""rzPrice"":399,""ywPrice"":399,""rwPrice"":-2}, ""start"":""7:55"", ""end"":""22:55""},{ ""segs"": [ {""line"" : ""D2241/D2244"", ""dep"":""6:45"", ""arriv"":""16:32"",""from"":""成都东"",""to"":""武汉""},{""line"" : ""G1021"", ""dep"":""16:58"", ""arriv"":""22:02"",""from"":""武汉"",""to"":""深圳北""}],""shifa"":true,""travel_minutes"":917,""price"":{""yzPrice"":292,""rzPrice"":462,""ywPrice"":462,""rwPrice"":-2}, ""start"":""6:45"", ""end"":""22:02""},{ ""segs"": [ {""line"" : ""G1315/G1318"", ""dep"":""7:55"", ""arriv"":""20:17"",""from"":""成都东"",""to"":""郴州西""},{""line"" : ""G9685"", ""dep"":""21:57"", ""arriv"":""23:58"",""from"":""郴州西"",""to"":""深圳北""}],""shifa"":true,""travel_minutes"":963,""price"":{""yzPrice"":210,""rzPrice"":329,""ywPrice"":329,""rwPrice"":-2}, ""start"":""7:55"", ""end"":""23:58""},{ ""segs"": [ {""line"" : ""G1315/G1318"", ""dep"":""7:55"", ""arriv"":""21:50"",""from"":""成都东"",""to"":""广州南""},{""line"" : ""G6141/G6144"", ""dep"":""23:08"", ""arriv"":""23:37"",""from"":""广州南"",""to"":""深圳北""}],""shifa"":true,""travel_minutes"":942,""price"":{""yzPrice"":159,""rzPrice"":250,""ywPrice"":250,""rwPrice"":-2}, ""start"":""7:55"", ""end"":""23:37""},
...
,{ ""segs"": [ {""line"" : ""D351/D354"", ""dep"":""8:01"", ""arriv"":""16:54"",""from"":""成都东"",""to"":""汉口""},{""line"" : ""T95"", ""dep"":""18:30"", ""arriv"":""8:50"",""from"":""汉口"",""to"":""深圳""}],""shifa"":true,""travel_minutes"":1489,""price"":{""yzPrice"":304,""rzPrice"":509,""ywPrice"":666,""rwPrice"":428}, ""start"":""8:01"", ""end"":""8:50""}]

```

其中的每个 segs 代表一个旅行方案，例如 (each segs stands for one travel plan)：

```
{ ""segs"": [ {""line"" : ""G1315/G1318"", ""dep"":""7:55"", ""arriv"":""21:50"",""from"":""成都东"",""to"":""广州南""},{""line"" : ""G6225"", ""dep"":""22:25"", ""arriv"":""23:01"",""from"":""广州南"",""to"":""深圳北""}],""shifa"":true,""travel_minutes"":906,""price"":{""yzPrice"":159,""rzPrice"":250,""ywPrice"":250,""rwPrice"":-2}, ""start"":""7:55"", ""end"":""23:01""},
```

代表从成都东坐G1315/G1318次车7:55出发，21:50到达广州南, 然后在广州南22:25转G6225次，最后于23:01到达深圳。shifa:true 表示G1315成都东是始发站。
travel_minutes是旅途总共花费时间。price是各种等级座位的价格。

# LICENSE

MIT License. See LICENSE.md

# 作者 Author

蔡杰瑞 Jerry Cai

http://www.gaocan.com/

zcai@gaocan.com
",20,20,6,0,transportation,"[gaocan, route, train, transportation]",00000
64,IntersectionControl,julesdehon,N/A,https://github.com/julesdehon/IntersectionControl,https://api.github.com/repos/julesdehon/IntersectionControl,An environment-agnostic framework for comparing intersection control algorithms,"# IntersectionControl

> :warning: This repository is under **active development** for my BEng thesis and there is a high chance many APIs 
> and components will change in the near future

[![test](https://github.com/julesdehon/IntersectionControl/actions/workflows/python-app.yml/badge.svg)](https://github.com/julesdehon/IntersectionControl/actions/workflows/python-app.yml)
[![Documentation Status](https://readthedocs.org/projects/intersectioncontrol/badge/?version=latest)](https://intersectioncontrol.readthedocs.io/en/latest/?badge=latest)
[![Coverage Status](https://coveralls.io/repos/github/julesdehon/IntersectionControl/badge.svg?branch=main)](https://coveralls.io/github/julesdehon/IntersectionControl?branch=main)

An environment-agnostic framework for implementing and comparing intersection control algorithms

<img alt=""Algorithm Environment Interaction"" src=""docs/source/image/flowcharts/algo-env-relationship.png"" 
width=""300px""/>

## Getting Started

### Installation

```shell
$ pip install intersection-control
```

Refer to the [documentation](https://intersectioncontrol.readthedocs.io/en/latest/usage/installation.html) for all
installation options

### Usage

For a more detailed description of various use-cases, please refer to the
[documentation](https://intersectioncontrol.readthedocs.io/en/latest/usage/quickstart.html).

To run a simple experiment using the QBIM algorithm and SumoEnvironment:

Import the desired algorithm/environment:

```python
from intersection_control.environments.sumo import SumoEnvironment, RandomDemandGenerator
from intersection_control.algorithms.qb_im import QBIMIntersectionManager, QBIMVehicle
```

Instantiate the environment:

```{note}
The RandomDemandGenerator here is used to programmatically add vehicles to specifically to the Sumo environment. 
Alternatively, Sumo based [demand generation](https://sumo.dlr.de/docs/Demand/Introduction_to_demand_modelling_in_SUMO.html)
could be used
```

```python
demand_generator = RandomDemandGenerator({
    ""NE"": 2, ""NS"": 2, ""NW"": 2, ""EN"": 2, ""ES"": 2, ""EW"": 2,
    ""SN"": 2, ""SE"": 2, ""SW"": 2, ""WN"": 2, ""WE"": 2, ""WS"": 2
}, 0.05)
env = SumoEnvironment(""path/to/intersection.sumocfg"",
                      demand_generator=demand_generator, time_step=0.05, gui=True)
```

Instantiate the vehicles and intersection managers:

```python
intersection_managers = {QBIMIntersectionManager(intersection_id, env, 10, 0.05) for intersection_id in
                         env.intersections.get_ids()}  # In this Sumo network there is only one intersection
vehicles = {QBIMVehicle(vehicle_id, env, communication_range=75) for vehicle_id in env.vehicles.get_ids()}
```

Run the main loop:

```python
STEP_COUNT = 360000  # 1 hour
for _ in range(STEP_COUNT):
    env.step()
    removed_vehicles = {v for v in vehicles if v.get_id() in env.get_removed_vehicles()}
    for v in removed_vehicles:
        v.destroy()
    new_vehicles = {QBIMVehicle(vehicle_id, env, communication_range=75)
                    for vehicle_id in env.get_added_vehicles()}
    vehicles = (vehicles - removed_vehicles).union(new_vehicles)
    for vehicle in vehicles:
        vehicle.step()
    for intersection_manager in intersection_managers:
        intersection_manager.step()
```

This simple example is available in `misc/main.py`:

![QBIM Sumo Experiment](docs/source/image/qbim-sim.gif)

### Exploring the code

For a full description of the code's structure please refer to
the [documentation](https://intersectioncontrol.readthedocs.io/en/latest/overview/overview.html)

The directory structure is as follows:

```
IntersectionControl
├── docs  # Documentation images and files
├── intersection_control  # The main source code package
│   ├── core  # Defines all interfaces and defines the component structure
│   │   ├── environment  # Provides an interface for any environment to implement
│   │   │   ├── environment.py  # Defines the base Environment class
│   │   │   ├── intersectiont_handler.py  # Defines the base IntersectionHandler class 
│   │   │   └── vehicle_handler.py  # Defines the base VehicleHandler class
│   │   ├── algorithm
│   │   │   ├── vehicle.py  # Defines the base Vehicle class
│   │   │   └── intersection_manager.py  # Defines the base IntersectionManager class
│   │   ├── communication.py  # Provides an interface for communication - V2V or V2I is possible. Specifically, defines the base MessagingUnit class
│   │   └── performance_indication.py  # Defines the base PerformanceIndicator class (Not yet implemented)
│   ├── algorithms  # A collection of intersection control algorithm implementations (for now only QBIM). These are implementations of core.Vehicle and core.IntersectionManager
│   ├── environments  # A collection of environment implementations (for now only SUMO). These are implementations of core.Environment
│   └── communication  # A collection of communication implementations (for now only DistanceBasedUnit). These are implementations of core.MessagingUnit
├── test  # unit tests for various components
└── misc  # Miscellaneous stand-alone scripts and experiments
```",19,19,1,7,transportation,"[autonomous-driving, autonomous-intersection-management, autonomous-vehicles, control, intelligent, intersection, intersection-control, intersection-controller, intersection-management, junction, optimisation, self-driving-car, simulation, sumo, traffic, transport, transportation]",00000
65,hack-the-traffic,cityofaustin,cityofaustin,https://github.com/cityofaustin/hack-the-traffic,https://api.github.com/repos/cityofaustin/hack-the-traffic,A Transportation-Themed Hackathon hosted by the City of Austin and the UT Center for Transportation Research,"# ATX Hack the Traffic

![Hack the Traffic Logo](https://raw.githubusercontent.com/cityofaustin/hack-the-traffic/master/media/hack_the_traffic_logo.png)

ATX Hack the Traffic is a hackathon series that seeks to use data and technology to solve Austin's transportation challenges. The project is a [City of Austin]() initative carried out in parternship with the [UT Center for Transportation Research]().

Our next event will be at [ATX Hack for Change](http://atxhackforchange.org/) on June 2nd. Visit our [Open Source Traffic Sensor](http://github.com/cityofaustin/traffic-sensor) repo for details about the Hack for Change project.

## Event Schedule
 * [Hack the Traffic](https://github.com/cityofaustin/hack-the-traffic/blob/master/hack-the-traffic-february.md) - March 4, 2017
 * [ATX Hack for Change]() - June 2 - 4, 2017
 * [Transportation Data Challenge]() - Fall 2017

## Talk to Us
Catch up with us on [Open Austin's](http://open-austin.org) Slack channel [#HackTheTraffic](https://open-austin.slack.com/messages/hackthetraffic/).

Email us at [transportation.data@austintexas.gov](mailto:transportation.data@austintexas.gov).",19,19,9,5,transportation,"[austin, bluetooth-sensors, open-data, traffic, transportation]",00000
66,last-mile,samirsaci,N/A,https://github.com/samirsaci/last-mile,https://api.github.com/repos/samirsaci/last-mile,Optimize E-Commerce Last-Mile Delivery with Python,"## Optimize Last Mile Delivery with Python 👷
*Organize your routes to deliver parcels with a minimum number of drivers using optimization models with python*


<p align=""center"">
  <img align=""center"" src=""https://github.com/samirsaci/samirsaci.github.io/blob/main/static/img/Kuaidi.png"">
</p>

### Article
In this [Article](https://www.samirsaci.com/optimize-e-commerce-last-mile-delivery-with-python/), we will build a  a solution to optimize 
the last-mile delivery from these centres to reduce the costs and ensure a uniform distribution of the workload to each driver.

![This is an image](https://miro.medium.com/max/700/1*0bDGnC8nRRTQCdZTOKOKOQ.png)

## Code
This repository code you will find all the code used to explain the concepts presented in the article.

## About me 🤓
Senior Supply Chain Engineer with an international experience working on Logistics and Transportation operations. \
Have a look at my portfolio: [Data Science for Supply Chain Portfolio](https://samirsaci.com) \
Data Science for Warehousing📦, Transportation 🚚 and Demand Forecasting 📈 
",19,19,2,0,transportation,"[e-commerce, last-mile-delivery, linear-programming, optimization, python, supply-chain, supply-chain-management, transportation]",00000
67,hive,NREL,NREL,https://github.com/NREL/hive,https://api.github.com/repos/NREL/hive,HIVE™ is a mobility services research platform,"# <img src=""docs/source/images/hive-icon.png"" alt=""drawing"" width=""100""/>

**H**ighly
**I**ntegrated
**V**ehicle
**E**cosystem

HIVE™ is an open-source mobility services research platform developed by the Mobility, Behavior, and Advanced Powertrains (MBAP) group at the National Renewable Energy Laboratory in Golden, Colorado, USA.

HIVE supports researchers who explore **Electric Vehicle (EV) fleet control**, **Electric Vehicle Supply Equipment (EVSE) siting**, and **fleet composition** problems, and is designed for _ease-of-use_, _scalability_, and _co-simulation_.
Out-of-the-box, it provides a baseline set of algorithms for fleet dispatch, but provides a testbed for exploring alternatives from leading research in model-predictive control (MPC) and deep reinforcement learning.
HIVE is designed to integrate with vehicle power and energy grid power models in real-time for accurate, high-fidelity energy estimation over arbitrary road networks and demand scenarios.

For more information about HIVE, please visit the [HIVE website](https://www.nrel.gov/hive).

For technical details about the HIVE platform, please see the [Technical Report](https://www.nrel.gov/docs/fy21osti/80682.pdf).

For more documentation on how to use HIVE, please see the [HIVE documentation](https://nrelhive.readthedocs.io/en/latest/).

## Installation

HIVE depends on a Python installation [3.8, 3.9, 3.10, 3.11] and the pip package manager ( [python.org](https://www.python.org/downloads/).
In our installation example we use [conda](https://www.anaconda.com/products/distribution) | for managing a HIVE Python environment.

### (optional) set up a virtual environment using conda

We recommend setting up a virtual environment to install HIVE.
This helps avoiding conflicts with other Python dependencies.
Conda compared to other virtualenv managers like Poetry or Pipenv can be better at managing projects such as this one that use large dependencies (such as SciPy).
One way to do this is to use Anaconda:

1. Install [Anaconda](https://www.anaconda.com/products/distribution) or [Miniconda](https://docs.conda.io/en/latest/miniconda.html)
1. Open a terminal or Anaconda Prompt.
1. Create a new virtual environment with the desired Python version: `conda create --name hive python=3.11`
1. Activate the virtual environment `conda activate hive`
1. Continue with the installation instructions below.
   Now your dependencies will be stored within the new virtual environment.

### via pip

    > pip install nrel.hive

### build from source

Clone the repository and install the code via pip:

    > git clone <https://github.com/NREL/hive.git>
    > cd hive
    > pip install -e .

## Run HIVE

run a test of hive using a [built-in scenario](#built-in-scenarios), which are hardcoded:

    > hive denver_demo.yaml

if you want the program to use a file that is not built-in, provide a valid path:

    > hive some_other_directory/my_scenario.yaml

## Built-In Scenarios

The following built-in scenario files come out-of-the-box, and available directly by name:

| scenario                              | description                                                                                              |
| ------------------------------------- | -------------------------------------------------------------------------------------------------------- |
| denver_demo.yaml                      | default demo scenario with 20 vehicles and 2.5k requests synthesized with uniform time/location sampling |
| denver_rl_toy.yaml                    | extremely simple scenario for testing RL                                                                 |
| denver_demo_constrained_charging.yaml | default scenario with limited charging supply                                                            |
| denver_demo_fleets.yaml               | default scenario with two competing TNC fleets                                                           |
| manhattan.yaml                        | larger test scenario with 200 vehicles and 20k requests sampled from the NY Taxi Dataset                 |

For more information on how to build your own scenario, please see the [HIVE documentation](https://nrelhive.readthedocs.io/en/latest/inputs.html).

## Dependencies

HIVE attempts to rely on as few dependencies as possible. For the most part, these dependencies are obvious choices from the open-source Python analysis ecosystem:

- [scipy](https://www.scipy.org/) (bipartite matching optimization)
- [numpy](https://numpy.org) (linear interpolation of energy lookup tables)
- [pandas](https://pandas.pydata.org) (file IO)
- [networkx](https://networkx.org) (underlying network model)
- [pyyaml](https://github.com/yaml/pyyaml)
- [tqdm](https://github.com/tqdm/tqdm) (command line progress bars)

Beyond these, HIVE uses Uber H3, a geospatial index which HIVE uses for positioning and search, and MagicStack Immutables, which provides the implementation of an immutable Map to replace the standard Python `Dict` type. The Returns library provides Python-approximations for functional containers. Links provided here:

- [h3](https://github.com/uber/h3) (spatial index)
- [immutables](https://github.com/MagicStack/immutables) ([HAMT](https://en.wikipedia.org/wiki/Hash_array_mapped_trie) implementation for ""immutable dict"")
- [returns](https://github.com/dry-python/returns) (functional containers)

## Developer documentation

Documentation can be found [here](https://nrelhive.readthedocs.io/en/latest/developer/index.html).

## Why HIVE?

When the Mobility, Behavior, and Advanced Powertrains group began looking to answer questions related to fleet sizing, charging infrastructure, and dynamic energy pricing, we could not find a simulator which was right-sized for our research questions. Most modern models for mobility services have a large barrier-to-entry due to the complex interactions of mode choice, economics, and model tuning required to use the leading micro and mesoscopic transportation models (BEAM, POLARIS, MATSim, SUMO, AMoDeus, etc.). Additionally, they have heavyweight technical infrastructure demands where deployment of these models requires a specialized team. HIVE attempts to fill a gap for researchers seeking to study the economic and energy impacts of autonomous ride hail fleets by providing the following feature set:

- agent-based model (ABM)
- data-driven control interfaces for Model-Predicted Control and Reinforcement Learning research
- easy integration/co-simulation (can be called alongside other software tools)
- dynamic dispatch, trip energy, routing, and economics
- simple to define/share scenarios via configuration files and simulation snapshots
- 100% Python (v 3.7) code with a small(ish) set of dependencies and well-documented code

HIVE is _not_ a fully-featured [Activity-Based Model](https://en.wikipedia.org/wiki/Transportation_forecasting#Activity-based_models), does _not_ simulate all vehicles on the network, and does not simulate congestion. It also assumes demand is fixed. If these assumptions are too strong for your research question, then one of the other mesoscopic models capable of ridehail simulation may be a more appropriate fit. The following (opinionated) chart attempts to compare features of HIVE against LBNL's BEAM and ANL's POLARIS models.

| feature                                       | HIVE       | BEAM      | POLARIS |
| --------------------------------------------- | ---------- | --------- | ------- |
| Agent-Based Ridehail Model                    | :honeybee: | :red_car: | :train: |
| Designed for large-scale inputs               | :honeybee: | :red_car: | :train: |
| Integrates with NREL energy models            | :honeybee: | :red_car: | :train: |
| Charging infrastructure & charge events       | :honeybee: | :red_car: | :train: |
| Service pricing and income model              | :honeybee: | :red_car: | :train: |
| Data-driven ridehail dispatcher               | :honeybee: |           |         |
| Does not require socio-demographic data       | :honeybee: |           |         |
| Built-in example scenario                     | :honeybee: | :red_car: |         |
| Written entirely in Python, installed via pip | :honeybee: |           |         |
| Activity-Based Demand Model                   |            | :red_car: | :train: |
| Dynamic demand using behavioral models        |            | :red_car: | :train: |
| Robust assignment of population demographics  |            | :red_car: | :train: |
| Supports broad set of travel modes            |            | :red_car: | :train: |
| Endogenous traffic congestion modeling        |            | :red_car: | :train: |

## Looking at a default scenario

![Manhattan Animation](docs/source/images/manhattan.gif?raw=true)

Running HIVE takes one argument, which is a configuration file. Hive comes packaged with a demo scenario for Manhattan, located at `hive/resources/scenarios/manhattan/manhattan.yaml`. This file names the inputs and the configuration Parameters for running HIVE.

One the scenario is finished, the console will indicate where the output files have been written and you can load them using pandas:

```python
import pandas as pd
# log files store JSON rows, like a document store
output_file = ""manhattan_2021-02-08_11-00-07/state.log""
pd.read_json(output_file, lines=True)
```

By default, these outputs are generated:

| file name               | file type | description                                                               |
| ----------------------- | --------- | ------------------------------------------------------------------------- |
| \<config\>.yaml         | YAML      | the input configuration serialized (can be read back by HIVE)             |
| run.log                 | text      | console log output                                                        |
| event.log               | JSON rows | events that occur, such as vehicle movement, pickup + dropoff events, etc |
| instruction.log         | JSON rows | instructions sent from dispatcher to drivers                              |
| state.log               | JSON rows | entity states at every time step                                          |
| station_capacities.csv  | CSV       | energy load capacity for each station                                     |
| summary_stats.json      | JSON      | summary stats as displayed in run.log but in JSON format                  |
| time_step_stats_all.csv | CSV       | aggregated data across a fleet (or all fleets) by time step               |

Running this scenario should also feed some logging into the console.
First, HIVE announces where it is loading configuration from.
It then dumps the global and scenario configuration to the console.
Finally, after around 65 lines, it begins running the simulation with a progress bar.
After, it prints the summary stats to the console and exits.

## Roadmap

_Updated October, 2022_

HIVE intends to implement the following features in the near-term:

- [ ] Time-varying network speeds
- [ ] Integration into vehicle powertrain, grid energy, smart charging models
- [ ] Ridehail Pooling
- [ ] Improved network modeling (turn costs, signal costs)
- [ ] Support for wiring in choice models
- [ ] Baseline multi-objective dispatcher

## Citation

If you have found HIVE useful for your research, please cite our [technical report](https://www.nrel.gov/docs/fy21osti/80682.pdf) as follows:

```
@techreport{fitzgerald2021highly,
  title={The Highly Integrated Vehicle Ecosystem (HIVE): A Platform for Managing the Operations of On-Demand Vehicle Fleets},
  author={Fitzgerald, Robert and Reinicke, Nicholas and Moniot, Matthew},
  year={2021},
  institution={National Renewable Energy Lab.(NREL), Golden, CO (United States)}
}
```

## Contributors

HIVE is currently maintained by Nick Reinicke ([@nreinicke](https://github.com/nreinicke)) and Rob Fitzgerald ([@robfitzgerald](https://github.com/robfitzgerald)). It would not be what it is today without the support of:

- Brennan Borlaug
- Thomas Grushka
- Jacob Holden
- Joshua Hoshiko
- Eleftheria Kontou
- Matthew Moniot
- Eric Wood
- Clement Raimes

## Notice

Copyright © 2022 Alliance for Sustainable Energy, LLC, Inc. All Rights Reserved

This computer software was produced by Alliance for Sustainable Energy, LLC under Contract No. DE-AC36-08GO28308 with the U.S. Department of Energy. For 5 years from the date permission to assert copyright was obtained, the Government is granted for itself and others acting on its behalf a nonexclusive, paid-up, irrevocable worldwide license in this software to reproduce, prepare derivative works, and perform publicly and display publicly, by or on behalf of the Government. There is provision for the possible extension of the term of this license. Subsequent to that period or any extension granted, the Government is granted for itself and others acting on its behalf a nonexclusive, paid-up, irrevocable worldwide license in this software to reproduce, prepare derivative works, distribute copies to the public, perform publicly and display publicly, and to permit others to do so. The specific term of the license can be identified by inquiry made to Contractor or DOE. NEITHER ALLIANCE FOR SUSTAINABLE ENERGY, LLC, THE UNITED STATES NOR THE UNITED STATES DEPARTMENT OF ENERGY, NOR ANY OF THEIR EMPLOYEES, MAKES ANY WARRANTY, EXPRESS OR IMPLIED, OR ASSUMES ANY LEGAL LIABILITY OR RESPONSIBILITY FOR THE ACCURACY, COMPLETENESS, OR USEFULNESS OF ANY DATA, APPARATUS, PRODUCT, OR PROCESS DISCLOSED, OR REPRESENTS THAT ITS USE WOULD NOT INFRINGE PRIVATELY OWNED RIGHTS.
",19,19,7,32,transportation,"[python, ridesharing, simulation, transportation, transportation-simulation]",00000
68,LSTM-Mobility-Model,zihenglin,N/A,https://github.com/zihenglin/LSTM-Mobility-Model,https://api.github.com/repos/zihenglin/LSTM-Mobility-Model,LSTM Mobility Model implementation using Tensorflow ,"# LSTM-Mobility-Model

The Tensorflow implementation of LSTM Mobility Model learns trajectories of human activity trajectories that have spatial and temporal features.

#### What are human activity trajectories?
Human activity trajectories are sequences of stationary activities. Stationary activities refer to someone stay at a location for sometime doing something. So the stationary activities have features include, **start time**, **duration**, **location** and **purpose**.

<img src=""https://github.com/zihenglin/LSTM-Mobility-Model/blob/master/images/activity_flow.png"" height=""120px"" align=""middle"">


#### Have other type of time series problems?
The implementations of the LSTM Mobility Model provide good examples of combining discrete and multidimensional continuous features in one model. The implementations can be easily modified for your problem. Feel free to contact me if you need some extra help.

## How does it work?

To model human like decision making for activty choices, I design the two layer model structure shown below. 
The first layer models the activity type choices, such as Home, Work, or Shopping. The second layer makes decision of
activity location and duration according to the activity type decided by the first layer.

<img src=""https://github.com/zihenglin/LSTM-Mobility-Model/blob/master/images/LSTM_diagram_2_layers.png"" height=""320px"" align=""middle"">

Layer are represented as ***h***. The input to both layers ***x_t*** is the feature of previous activity. 
The softmax output from the first layer models the activity type choices. The output from the second layer is a mixture distribution that models the spatial and temporal choices.

<img src=""https://github.com/zihenglin/LSTM-Mobility-Model/blob/master/images/two_layers_sampling_other.png"" height=""420px"" align=""center"">

## Examples

The `examples` directory contains Jupyter Notebook examples using artifitial data sample:

* [2 Layer Structure with Lat-Lon Location](https://github.com/zihenglin/LSTM-Mobility-Model/blob/master/examples/Two%20Layers%20Lat%20Lng%20Location.ipynb) Model activity latitude and longitude location using Guassian mixture distributions.

* [2 Layer Structure with Location ID](https://github.com/zihenglin/LSTM-Mobility-Model/blob/master/examples/Two%20Layers%20Categorical%20Location.ipynb) Prepocess location into location categoreis and model location categories.



",19,19,5,0,transportation,"[deep-learning, jupyter-notebook, lstm, mobility-modeling, mobility-trajectory, python, sequence, tensorflow, time-series, transportation]",00000
69,DPFE,Lemma1,N/A,https://github.com/Lemma1/DPFE,https://api.github.com/repos/Lemma1/DPFE,Implementation of dynamic origin-destination demand estimation,"## Estimating multi-year 24/7 origin-destination demand using high-granular multi-source traffic data


Implemented by Wei Ma, advised by Sean Qian, Civil and environmental engineering, Carnegie Mellon University. 


### Requirements

- Python 2.7.13
- PyTorch 0.2.0_3
- Numpy 1.13.3
- Scipy 0.19.1
- NetworkX 1.11
- pickle
- joblib 0.11
- pandas 0.18.1

### Instructions

Please clone the whole repo, and run DPFE-v0.1.ipynb using jupyter notebook.


### File specifications

- P_matrix: store the route choice portion matrices
- Q_vector: store the estimated dynamic OD
- R_matrix: store the DAR matrices
- X_vector: store the observed link flow
- observe_index_N.npy: observed link indices
- link_count_data.pickle: flow data
- link_spd_data.pickle: speed data
- od_list.pickle: OD information
- graph.pickle: graph information
- cluster_info.pickle: traffic scenario information
- base.py: data processing, DAR matrix construction, P matrix construction
- pfe.py: stochastic projected gradient descent
- DPFE-v0.1.ipynb: main script, start from here


### Paper
[Estimating multi-year 24/7 origin-destination demand using high-granular multi-source traffic data](https://www.sciencedirect.com/science/article/pii/S0968090X18302948)

### Data

Since the traffic speed data (link_spd_data.pickle) and count data (link_count_data.pickle) are under the non-discloure agreement, please contact the authors to obtain the data.


For any questions, please contact Lemma171@gmail.com

",18,18,3,0,transportation,"[dode, transportation]",00000
70,MAC-POSTS,Lemma1,N/A,https://github.com/Lemma1/MAC-POSTS,https://api.github.com/repos/Lemma1/MAC-POSTS,"Mobility Data Analytics Center - Prediction, Optimization, and Simulation toolkit for Transportation Systems","## MAC-POSTS

[![DOI](https://zenodo.org/badge/52655219.svg)](https://zenodo.org/badge/latestdoi/52655219)

### Mobility Data Analytics Center - Prediction, Optimization, and Simulation toolkit for Transportation Systems

In the codes, we also note it as MINAMI (MNM), which represents Multi-functIonal dyNAmic network Modeling tookIt

#### Introduction

MAC-POSTS is a mesoscopic traffic simulation software for dynamic network loading. It is interface based and is friendly to new node/link/routing models.

#### Contributors

- Wei Ma
- Xidong Pi
- Sean Qian (Advisor)

#### Contact Info

For any questions, please contact Lemma171@gmail.com

#### Copyright

Copyright 2014-2018 Carnegie Mellon University

#### Acknowledgements
This project is funded in part by Traffic 21 Institute, Carnegie Mellon University's Mobility21, Technologies for Safe and Efficient Transportation (T-SET) and US Department of Transportation. The contents of this project reflect the views of the authors, who are responsible for the facts and the accuracy of the information presented herein. The U.S. Government assumes no liability for the contents or use thereof.
",18,18,6,0,transportation,"[simulation-toolkit, transportation]",00000
71,Multimodal-DUE,Lemma1,N/A,https://github.com/Lemma1/Multimodal-DUE,https://api.github.com/repos/Lemma1/Multimodal-DUE,"A general formulation for multi-modal dynamic traffic assignment considering multi-class vehicles, public transit and parking","## A general formulation for multi-modal dynamic traffic assignment considering multi-class vehicles, public transit and parking

Implemented by Wei Ma and Xidong Pi (AlanPi1992), advised by Sean Qian, Civil and environmental engineering, Carnegie Mellon University. 


### Requirements

- cvxopt 1.1.9
- numpy 1.14.2
- MNMAPI: MNMAPI is a traffic simulation library developed by MAC in CMU, please refer to https://github.com/Lemma1/MAC-POSTS and http://mac-posts.com/
- MNM_mcnb: the folder interface to MNMAPI, please refer to https://github.com/Lemma1/MAC-POSTS/tree/master/side_project/network_builder

### Instructions

Please clone the whole repo, and run runner.ipynb using jupyter notebook.

### Experiments

To check the details of the experiments in exp_config.py, please refer to the paper.

### File specifications

- src/exp_config.py: experiment settings in the paper
- src/gp.py: gradient projection method
- src/models.py: implementation of multi-modal DUE
- src/runner.ipynb: script that runs the MMDUE
- img/.: imagines used in the paper
- data/input_files_small_multiclass: experiment network in the paper


### Questions

For any question, please contact Wei Ma (Lemma171@gmail.com) and Xidong Pi (xpi@andrew.cmu.edu).",18,18,4,0,transportation,"[dynamic-user-equilbirum, multi-modal, traffic-simulation, transportation]",00000
72,DTD,DrKeHan,N/A,https://github.com/DrKeHan/DTD,https://api.github.com/repos/DrKeHan/DTD,"This repository documents the MATLAB implementation of several day-to-day (disequilibrium) dynamic traffic assignment models, e.g. based on stochastic choice models, bounded rationality, and information sharing behavior","# DTD
This repository documents a day-to-day dynamic traffic assignment model on the Sioux Falls network, with possible extensions to other networks by updating the dynamic network loading module (see https://github.com/DrKeHan/DTA). 

Documentation and cite as:
Yu, Y., Han, K., Ochieng, W.Y., 2020. Day-to-Day Dynamic Traffic Assignment with Imperfect Information, Bounded Rationality and Information Sharing. Transportation Research Part C, 114, 59-83.

Run one of the following scripts to run a version of the day-to-day dynamic traffic assignment model:
Base_Model_I.m,
Base_Model_I_BR.m,
Base_Model_I_IS.m,
Base_Model_II.m, and 
Base_Model_II_IS.m
",18,18,2,0,transportation,"[transport, transportation, transportation-management, transportation-network, transportation-problem, transportation-simulation, transportation-systems]",00000
73,atd-data-and-performance,cityofaustin,cityofaustin,https://github.com/cityofaustin/atd-data-and-performance,https://api.github.com/repos/cityofaustin/atd-data-and-performance,Open data and performance hub for the City of Austin Transportation Department,"# ATD Data & Performance Hub <!-- omit in toc -->

This repo houses code for the [ATD Data & Performance Hub](https://data.mobility.austin.gov/). It is a [NextJS](https://nextjs.org/) app that relies heavily on [open data APIs](https://data.austintexas.gov/).

## Contents <!-- omit in toc -->

- [Get it running](#get-it-running)
- [Configuring a new `MapList`](#configuring-a-new-maplist)
- [Deployment & CI](#deployment--ci)

## Get it running

Activate your node environment

```shell
$ nvm use
```

Install dependencies

```shell
$ npm install
```

Start the development server

```shell
$ npm run dev
```

Open [http://localhost:3000](http://localhost:3000) with your browser to see the result.

You can start editing the page by modifying `pages/index.js`. The page auto-updates as you edit the file.

## Configuring a new `MapList`

The `MapList` is a configureable dashboard component that provides a linked list and map view. It is designed to work well on mobile/touch devices, and can be customized to many data display needs. See `components/MapList.js` for props documentation.

This image illustrates how the MapList props affect the layout:

![MapList props visual](docs/mapList.png)

## Deployment & CI

The production site is hosted by Netlify. Any merge to the `production` branch will trigger a new build. Deploy previews will be generated for any non-production branch.
",18,18,12,4,transportation,"[bootstrap, government, intelligent-transportation-systems, leaflet, mobility, open-data, open-government, traffic-analysis, transportation]",00000
74,BusRouteJS,janithl,N/A,https://github.com/janithl/BusRouteJS,https://api.github.com/repos/janithl/BusRouteJS,A JS rewrite of the original bus route finder.,"BusRouteJS
==========

A JS rewrite of bus route finder.

Currently in preliminary development, so everything is subject to change
without notice.

Demo
----

[There's a demo here](http://janithl.github.io/BusRouteJS/). You 
have to turn on touch event emulation on Chrome to access the modal screens.

Install
-------

Clone the repo and run `npm install`.

API
---

Creating a new Router object and calling  `.findRoutes(from, to)` where `from` is 
the source place ID and `to` is the destination place ID (both integers) will 
return an array of Javascript objects like this:

```javascript
var router = new Router();
router.findRoutes(252, 235);

[
	{
		""from"":""252"",
		""routes"":[
			{""routes"":[""1"",""2"",""4"",""5"",""6"",""19"",""20""],""distance"":4144},
			{""routes"":[""26""],""distance"":3347}
		],
		""changes"":[""53""],
		""to"":""235"",
		""distance"":7491
	},
	{
		""from"":""252"",
		""routes"":[
			{""routes"":[""1"",""2"",""4"",""5"",""6"",""19"",""20""],""distance"":12324},
			{""routes"":[""12"",""13"",""14""],""distance"":6661}
		],
		""changes"":[""39""],
		""to"":""235"",
		""distance"":18985
	},
	{
		""from"":""252"",
		""routes"":[
			{""routes"":[""1"",""2"",""4"",""5"",""6"",""19"",""20""],""distance"":12936},
			{""routes"":[""12"",""13"",""14""],""distance"":7273}
		],
		""changes"":[""38""],
		""to"":""235"",
		""distance"":20209
	},
	...
]
```

The biggest improvement over the last (PHP) version is that it now
handles similar (almost duplicate, but alternate - like Kottawa/Pettah and Homagama/Pettah)
routes gracefully, and runs completely on the clientside, with big popping 
Google Maps to boot.

License
-------

Released under a permissive MIT license.
",17,17,6,0,transportation,"[bus, buses, javascript, public-transportation, react, shortest-paths, sri-lanka, transportation]",00000
75,Shapefile_to_Network,Garvit244,N/A,https://github.com/Garvit244/Shapefile_to_Network,https://api.github.com/repos/Garvit244/Shapefile_to_Network,Convert Shapefile to the Network and find number of shortest paths,"# Shapefile To Network
Construct a network from shapefile and do analytics such as finding number of shortest paths from origin to destination, calculating centrality, degree of the nodes in network.

## Overview
This python module allow you to get number of alpha times shortest paths from origin to destination where alpha is some constant specified by the user. You can also do some analysis over the network like finding degree, centrality of the nodes in graph.

#### Original Network

<br/><img src = ""https://github.com/Garvit244/Shapefile_to_Network/blob/master/shapefile_to_network/Images/Original_Network.png"" height=""450"" width =""450"" alight=""left""> 

#### New Simplified Network

<br/> <img src = ""https://github.com/Garvit244/Shapefile_to_Network/blob/master/shapefile_to_network/Images/New_Network.png"" height=""450"" width =""450""> 


## Installation

* Install python >= 2.7 
  * Ubuntu
    ```
    $ sudo apt-get install python-2.7
    ```
    
  * Mac
    ```
    $ brew install python
    ```
* Run **_setup.py_** for installing required packages

  ```
  $ python2.7 setup.py install
  ```
## Documentation
#### Core Scripts 

* _GraphConvertor.py_  - This module will take the input line shapefile and the path of output directory 
* _ShortestPath.py_    - This module will calculate the number of _alpha_ times shortest path from origin to destination in the graph

#### Other Scripts 

* _BufferedGraph.py_ - This module create the square (_buffer_) of given size around the point geometry 
* _GraphSimplify.py_ - This module will clean and remove all the redundant edges and extra/ uninformative nodes from the graph 
* _MultiDiGraphConvertor.py_ - This module will convert the MultiDiGraph to SimpleGraph 


## How to use
* Create the line shapefile of the road network (if not available)

  * Using QGIS
    - Open the shapefile in QGIS which need to be converted to line shapefile
    - Go to **_Vector_ -> _Geometry Tools_** and select **_Polygons to lines_** to convert shapefile into line shapefile
    
  * Using python
    - Need to be implemented
    
* Convert the created line shapefile into network using **_GraphConvertor.py_**

  * Create **_GraphConvertor_** object by passing the path of input shapefile and the output directory
  
    ```python
    input_file  =  'path of the line shapefile'
    output_dir  =  'path of directory to save new shapefiles'
    
    graph_convertor_obj = GraphConvertor(input_file, output_dir)
    ```
  * Call **_graph_convertor_** function to convert the input shapefile into road network and save the newly created shapefile into specifed **_output_dir_** along with list of nodes and edges in _.csv_ files
  
    ```python
    network = graph_convertor_obj.graph_convertor()
    ```
  
* Find number of shortest paths from origin to destination in new simplified network

  * Create **_ShortestPath_**  object by passing all required parameters listed below
  
     ```python
     g            =  network
     alpha        =  0.1
     graph_buffer =  100
     point_buffer =  50
     break_point  =  200         # Upper limit to save computation time

     shortest_path_obj   =  ShortestPath(g, alpha, graph_buffer, point_buffer, break_point)
     ```
     
   * Run **_alpha_times_shortestpath_** function to calculate number of paths which are alpha times the shortest path
  
     ```python
     start_tuple  =  (lat,lon)
     end_tuple    =  (lat,lon)

     total_path   =  shortest_path_obj.alpha_time_shortestpath(start_tuple, end_tuple)
     ```
* Find metrics like degree centrality, closeness centrality, communicability and load centrality for doing analysis over created network.
 
  * Create **_Centrality_** object by passing the network and the weight attribute of the network
   
    ```python
    centrality = Centrality(g, weight='distance')
    ```

  * Get all the metrics of the network by calling **_metrics_** function of centrality class

    ```python
    degree_centrality, closeness_centrality, communicability, load_centrality = centrality.metrics()
    ```
    
## More Info
For reference/citing: [Journal Paper](https://arxiv.org/pdf/1902.08028.pdf).
",17,17,5,0,transportation,"[geography, geospatial-analytics, geospatial-data, networkx, networkx-graph, qgis, road-network, shapefile, shortest-paths, spatial-analysis, street-networks, temporal-networks, transportation, transportation-network, urban-planning]",00000
76,maas-schemas,maasglobal,maasglobal,https://github.com/maasglobal/maas-schemas,https://api.github.com/repos/maasglobal/maas-schemas,"Mobility as a Service API - data model, tests, and validation","# Shared MaaS Global Type Definitions

This repository contains MaaS Global shared type definitions.

## Index

The code is divided into several independent npm packages.

* [maas-schemas](maas-schemas) contains schemas, type definitions, and related utilities
* [maasglobal-json-schema-validator](maasglobal-json-schema-validator) contains our ajv validator configuration
* [maasglobal-schema-generator-ajv](maasglobal-schema-generator-ajv) contains build utils for ensuring ajv compatibility
* [maasglobal-schema-generator-io-ts](maasglobal-schema-generator-io-ts) contains build utils for generating io-ts codecs
* [maasglobal-schema-package](maasglobal-schema-package) contains general definitions for our schema package format

## Devops

The following commands should work in all packages where applicable.

```
npm install -g yarn               # install yarn
yarn                              # install dependencies
yarn lint                         # run linters
yarn typecheck                    # run static type checks
yarn test                         # run tests
yarn prettify                     # auto format code base
yarn ci                           # perform a local CI test run
yarn build                        # create a production build
yarn clean                        # remove build artefacts
yarn readme-ts                    # extract readme code examples
yarn deploy-npm                   # deploy npm package
yarn deploy-alpha                 # deploy prelease npm package
```
",17,17,23,20,transportation,"[mobility, mobility-as-a-service, transportation]",00000
77,maas-tsp-api,maasglobal,maasglobal,https://github.com/maasglobal/maas-tsp-api,https://api.github.com/repos/maasglobal/maas-tsp-api,WhimApp TSP (Transport Service Provider) Open API,"# WhimApp TSP (Transport Service Provider) API

This is the WhimApp TSP (Transport service provider) API repository,
containing OpenAPI specification, JSON schema for data model and examples.

Using these documents, a third party transport service provider can implement a MaaS compatible API ready to be integrated into [WhimApp](https://whimapp.com)

An interactive version of this documentation is published at [maasglobal.github.io](https://maasglobal.github.io/maas-tsp-api).

For a brief walk through of a booking process [see here](specs/Booking.md)

## Getting started

- spec/booking.yml - OpenAPI Specification for TSP provider booking

## Living documentation

To run it locally, execute

```
npm install
npm start
```

Open browser and navigate to documentation portal (http://localhost:3000)

- Redoc UI for documentation
- Examples

## Build the static website with documentation

```
npm run build
npm run dist
```

## Related projects

Data model are provided by [maas-schemas](https://github.com/maasglobal/maas-schemas/) which are used in API specification to declare and validate request and response payloads.

To create local, OpenAPI specification compatible copy of this schemas, execute `npm run build`. This will create local `schemas` folder which are referenced in [specs/booking.yml](specs/booking.yml)

## Links

- https://github.com/maasglobal/maas-schemas/
- https://swagger.io/specification/
- https://github.com/Redocly/redoc/
",15,15,26,4,transportation,"[api, api-definition, api-documentation, mobility-as-a-service, openapi, openapi-specification, swagger, transportation]",00000
78,almetro-app,kekland,N/A,https://github.com/kekland/almetro-app,https://api.github.com/repos/kekland/almetro-app,"Application for Almaty subway, written using Flutter.","# almaty_metro (Almetro)

Tracking subway trains in Almaty made easy.

## Download

Google Play: [Link](https://play.google.com/store/apps/details?id=com.kekland.almetro)

App Store: [Link](https://apps.apple.com/us/app/almetro/id1540955660)

VK: [Link](https://vk.com/almetro)

## Debugging

```bash
flutter run
```

## Screenshots
Screenshot 1               |  Screenshot 2             |  Screenshot 3
:-------------------------:|:-------------------------:|:-------------------------:
![Screenshot 1](./google_play_assets/screenshot-1.png)  |  ![Screenshot 2](./google_play_assets/screenshot-2.png)  | ![Screenshot 3](./google_play_assets/screenshot-3.png)

 

## Contact me

E-Mail: **kk.erzhan@gmail.com**",15,15,5,0,transportation,"[flutter, flutter-apps, transportation]",00000
79,SupplyChain-Logistics-and-Blockchain-Book,ERPGenie,N/A,https://github.com/ERPGenie/SupplyChain-Logistics-and-Blockchain-Book,https://api.github.com/repos/ERPGenie/SupplyChain-Logistics-and-Blockchain-Book,Open Source Book project delivering a deep understanding on how the Supply Chain can be enhanced by the adoption of BlockChain technology,"# Supply Chain Logistics and Blockchain Book
Open Source Book project delivering a deep understanding on how the Supply Chain can be enhanced by the adoption of BlockChain technology
* If you wish to contribute to this project please email <kevin@erpgenie.com> with your request.
* Focus in on Supply Chain Logistics and Procurement

![Supply Chain and Block Chain](assets/images/coveridea1.jpg)


[![Creative Commons License](https://i.creativecommons.org/l/by-nc-nd/4.0/88x31.png)](https://creativecommons.org/licenses/by-nc-nd/4.0/)
This book is licensed under a <a rel=""license"" href=""http://creativecommons.org/licenses/by-nc-nd/4.0/"">Creative Commons Attribution-NonCommercial-NoDerivatives 4.0 International License</a>.",15,15,5,0,transportation,"[blockchain, blockchain-technology, logistics, manufacturing, supplychain, trackandtrace, transportation]",00000
80,realtime-bus-sms,codeforanchorage,codeforanchorage,https://github.com/codeforanchorage/realtime-bus-sms,https://api.github.com/repos/codeforanchorage/realtime-bus-sms,"Text back current arrival time for buses given a texted in bus stop number for People Mover. AddressLookup branch would allow texting ""Arctic and Fireweed""","realtime-bus-sms
================

[![Build Status](https://travis-ci.org/codeforanchorage/realtime-bus-sms.svg?branch=master)](https://travis-ci.org/codeforanchorage/realtime-bus-sms)


Text back current arrival time for buses given a texted in bus stop number for People Mover

A stub for work combining Bustracker.muni.org, Wheels on the Bus scraping, Twilio, and translation from People Mover bus stop id to Bustracker bus stop id.


For Developers
===================
There are several bus users and scenarios in which they would use the bus.

What exists
- GTFS is in Goole Maps and Bing which allows route planning and locations of stops.
- GTFS is being used by the [Moovit](http://www.moovitapp.com/) smartphone app.
- [Bustracker.muni.org](http://bustracker.muni.org) is a good desktop web interface for showing realtime ETA and locations of buses. This app is hard to view and use on a smartphone screen.
- A text based version of Bustracker. You choose the route and then scroll for the stop name and then select to see the bus ETAs. Good if you know the bus stop name. This project is leveraging the text bustracker interface.

Contributing
------------

1. Fork the repo and work on your changes
1. Create a pull request to the **dev** branch (or your own feature branch)

Project Setup
--------------

There are several environment variables that need to be set up when you configure the installation. Check lib/config.js

Vagrant:

    # create vagrant vm
    vagrant up

    # get onto vagrant vm
    vagrant ssh

    # install npm deps within virtual machine
    cd realtime-bus-sms
    npm install

    # run
    # By default, this will serve on http://192.168.51.10:8080
    ./bin/www

    # run tests
    sudo npm install -g nodeunit   # install testing framework
    npm test


Linux:

    # install nodejs/npm
    # (note: the legacy package makes sure /usr/bin/node links to nodejs and not something else)
    sudo apt-get install npm nodejs nodejs-legacy

    # checkout code
    git clone https://github.com/codeforanchorage/realtime-bus-sms.git

    # install deps
    cd realtime-bus-sms
    npm install

    # run
    # By default, this will serve on http://127.0.0.1:8080
    ./bin/www

    # run tests
    sudo npm install -g nodeunit   # install testing framework
    npm test

Mac:

    TODO: add

Windows:

    TODO: add

Third Party Services
--------------------

This app depends on third party service that require api keys to run. When running in production the api keys are added as environmental variables when the app starts. To run a fully functioning version locally, you will need copy your own api keys into config.js or add them as environmental variables.

- Watson Conversation from IBM. This identifies user intent from input other than stop numbers
- Google Place. Geolocates addressed and places
- Google Analytics.

The app will run without api keys for these services but you will get warnings and errors if a response to input calls one of the services.

**Watson Setup**

You can create a free account on IBM Bluemix and clone the Watson Service using the *watson-workspace.json* file in the repo.

To create an account, go to:

https://www.ibm.com/watson/services/conversation/

Click get started for free and create an IBM account by filling out the form.

Once logged in and confirmed you can access the IBM Watson Bluemix console (https://watson-conversation.ng.bluemix.net)

Create a clone of the Watson workplace by clicking the upload icon under workplaces and uploading the *watson-workspace.json* file. The workplace will then have a workplace ID (accessed by clicking the three dots next to the name) such as 6cb32c12-6b1s-1273-f81f-3ae0984c7c2b which you can add to your configuration or env file for WATSON_WORKPLACE_ID.

You will also need to find your login credentials for the Watson app. These are not in an obvious place. Go to:
https://console.bluemix.net/dashboard/apps/

Click the service you just created. Then in the left menu click 'service credentials' than click veiw credentials in the table on the page. This will show you a username and password which you can add to your conviguration for
WATSON_API_KEY and WATSON_ASSISTANT_KEY

**Google Places**

To create an API Key go to and follow prompts:
https://developers.google.com/places/web-service/get-api-key",15,15,9,21,transportation,[transportation],00000
81,metro-dreamin,the-nemz,N/A,https://github.com/the-nemz/metro-dreamin,https://api.github.com/repos/the-nemz/metro-dreamin,"MetroDreamin' is a web application that allows you to design and visualize the transportation system that you wish your city had, and check out the transit dreams of other users from around the world.","# MetroDreamin'

MetroDreamin' is a web application that allows you to design and visualize the transportation system that you wish your city had, and check out the transit dreams of other users from around the world.

## Contact

If you have any feature suggestions, questions, or anything, please DM me on twitter [@metrodreamin](https://twitter.com/MetroDreamin)!

## Project Structure

### Core application code: `app/`
`app/` contains all the code for the Next.js/React front end and server side rendering. Run `yarn dev` to start up a local Next server that connects to the staging Firebase account. It can run connected to a local Firebase emulator by running `start_emulators.sh` and then starting Next with `yarn local`.

### Firebase functions code: `functions/`
`functions/` contains a simple express-based REST server that handles requests to modify tables mostly associated with version 2.0. Use `yarn serve` to run locally and `yarn deploy` to deploy only Firebase functions. It also includes database callback functions associated with version 3.0 to do things like generate thumbnails, send notifications, etc.

### City map scripts: `city_scripts/`
`city_scripts/` contains all of the scripts used to generate the default map options.

### Maintenance: `maintenance_scripts/`
`maintenance_scripts/` contains scripts used for certain database operations. The `migration/` subfolder contains the scripts used to migrate data for version 3.0.

## License

See the [LICENSE](LICENSE.txt) file for license rights and limitations (GNU AGPL).

This project is tested with BrowserStack.
",15,15,1,28,transportation,"[firebase, mapbox, mapbox-gl, nextjs, react, transportation, vercel, webapp]",00000
82,transition,chairemobilite,chairemobilite,https://github.com/chairemobilite/transition,https://api.github.com/repos/chairemobilite/transition,"Transition is a modern new approach to transit planning. It's a web application to model, simulate and plan public transit and alternative transportation.","# Transition
[![FOSSA Status](https://app.fossa.com/api/projects/git%2Bgithub.com%2Fchairemobilite%2Ftransition.svg?type=shield)](https://app.fossa.com/projects/git%2Bgithub.com%2Fchairemobilite%2Ftransition?ref=badge_shield)

Transition is a modern new approach to transit planning. This repo is a Node/React web application to model, simulate and plan public transit and alternative transportation.

See http://transition.city/


[Definitions and symbols used in the code and in the interface](https://www.overleaf.com/read/dtxfhttxgjrx)

For Ubuntu users: [complete step-by-step development environment setup procedure](docs/setupDevEnvironmentUbuntu20.04.md)

## Stand alone Desktop installation

For users only interested in running Transition, without manually installing all the dependencies, follow these [step-by-step instructions to set up Transition using Docker Desktop](docs/runWithDocker.md).

## Non-Node Dependencies

* [PostgreSQL](https://www.postgresql.org/) 10+ with [PostGIS](https://postgis.net/)
* [OSRM](https://github.com/Project-OSRM/osrm-backend/): It is the routing engine used by Transition, to calculate the routes for various modes: for example walking, cycling, driving, bus in urban setting, suburban bus, etc.
* [trRouting](https://github.com/chairemobilite/trRouting/): An open source routing engine to calculate the route between an origin and a destination, or to calculate accessibility from/to a point, using public transit network. It is the main engine used for public transit simulations.
* yarn: [debian/ubuntu](https://classic.yarnpkg.com/en/docs/install/#debian-stable) or [macOS](https://classic.yarnpkg.com/en/docs/install/#mac-stable)
* [Rust](https://www.rust-lang.org/): It is used to run the json2capnp cache service which makes the application much faster if there's a lot of transit data.

## Installation

* Install dependencies:

For Ubuntu 20.04 or 22.04 users, use:
```
sudo apt-get install postgresql postgis lua5.3 liblua5.3-dev \
capnproto libcapnp-dev postgresql-postgis postgresql-postgis-scripts rustc cargo
```
* Create a `.env` file in the project root directory (you can copy the `.env.example` file) and setup the project
* `yarn install` or just `yarn`: Will download the packages required by the application
* `yarn compile`: Convert the typescript files to javascript
* `yarn setup`: Run this command to setup the database for the current project
* `yarn migrate`: Update the database schema with latest changes. This can be run whenever the source code is updated
* Optionally `yarn create-user`: Run this task to create a new user in the database. The user will be able to login to the web interface. This command can be run entirely in a non-interactive mode with the following parameters: `yarn create-user --username <username> --email <email> --password <clearTextPassword> [--first_name <firstName> --last_name <lastName> --[no-]admin --[no-]valid --[no-]confirmed --prefs <jsonStringOfPreferences>]`. For example, to create and administrator user with the english language as preference, run the following command `yarn create-user --username admin --email admin@example.org --password MyAdminPassword --admin --prefs '{ ""lang"": ""en"" }'`

## Getting started

**An example configuration and geographical area can be found in [the examples](examples/) directory.**

### Create a config file

Create a `config.js` file with the project's configuration. See the [config file in the examples directory](examples/config.js) for an example configuration.

The main options to configure are the `mapDefaultCenter` which is usually around the center of the area that will be served by the instance of Transition and the `projectDirectory`, which is the local path where runtime files, user data, local osrm files, log files, etc. will be stored.

The example config file contains preferences to run the `osrm` servers for each mode locally. They are started when Transition starts. To use external osrm server, the configuration can be updated as follows, for example for the walking mode:

```
[...]
walking: {
    port: 5001,
    host: https://external.osrm-server,
    autoStart: false,
    enabled: true
[...]
```

### Download and prepare the road network

Route calculations for transit route, walking access or egress to transit stops, etc. require a routing engine (`osrm`), which itself requires the road network from OpenStreetMap. The following commands will download and prepare the road network data for use with osrm. 

But first, a GeoJSON polygon file is required to specify the area for which to download and process the road network. To easily create a polygon, [geojson.io](https://geojson.io) can be used, which can then be copy-pasted to a file.

```shell
yarn node --max-old-space-size=4096 packages/chaire-lib-backend/lib/scripts/osrm/downloadOsmNetworkData.task.js --polygon-file examples/polygon_rtl_area.geojson

yarn node --max-old-space-size=4096 packages/chaire-lib-backend/lib/scripts/osrm/prepareOsmNetworkData.task.js
```

### Prepare the environment file

Transition relies on a few environment variables, that can either be set on the system, or contained in a .env file. First, copy the example .env file and edit the variables.

```
cp .env.example .env
```

* Change `PG_CONNECTION_STRING_PREFIX=postgres://postgres:@localhost:5432/` to `PG_CONNECTION_STRING_PREFIX=postgres://postgres:YOUR_POSTGRES_PASSWORD@localhost:5432/`
* Change `EXPRESS_SESSION_SECRET_KEY` to a random string with no space.
* Change `PROJECT_CONFIG` to point to your project's configuration file. The default is an example configuration file that can be copied and configured for your own need.

### Get a Mapbox access token
* Go to [Mapbox](http://mapbox.com) and sign up
* Go to your account dashboard, then generate a new access token
* Open the `.env` file
* Copy this access token to `.env` file: `MAPBOX_ACCESS_TOKEN=YOUR_TOKEN`
* If you have a custom mapbox style, put your username and style id in `MAPBOX_USER_ID` and `MAPBOX_STYLE_ID`

### Create the client application

Run `yarn build:dev` or `yarn build:prod` to create the html client application that will be run on the browser. 

The `prod` version is minified, while the `dev` version has greater size but allows to more easily debug the application.

*Note: If running with node version 18, webpack may return an error. In that case, run `export NODE_OPTIONS=--openssl-legacy-provider` before.*

### Start the json2capnp cache server

*Optional*

Run `yarn start:json2capnp -- 2000 /absolute/path/to/cache/directory/` to start the rust server to run the json2capnp cache service. 

This is required if the `defaultPreferences:json2capnp:enabled` preference is set to `true` in the `config.js` file (`true` is the default, to not use the rust server, set the value to `false` under the default preferences).

### Start the Node.js server

Use one of these alternative start command:

* `yarn start`: Start the server, with normal operation
* `yarn start:debug`: Start the server with extra debugging information
* `yarn start:tracing` Start the Node.js server with an OpenTelemetry config defined in a `tracing.js` file (placed in the root directory). See https://github.com/open-telemetry/opentelemetry-js/blob/main/getting-started/README.md#initialize-a-global-tracer for an example. 

### Open the application

Open your browser and navigate to `http://localhost:8080` to access the Transition login page.


## Using Docker
You can easily launch the whole transition system using Docker and thus not having to install all the dependencies directly.

### Building the image
`docker build -t testtransition .`
(You can replace testtransition with your prefered image name. Don't forget to update any other command and compose file if you do so)
To run the application directly, you'll need to add a `.env` as previously described, either by editing the `.env.docker` file before building the image, or by adding a `.env` file and pointing to it when running.

**Warning**: The project directory is assumed to be in `/app/examples/runtime` with a project name of `demo_transition`. The cache server starts with a cache at this location. If it is not the case, update line 68 of the `Dockerfile` to fine-tune the cache directory as second argument to `json2capnp`.

### Running using docker-compose
An example docker-compose.yml file is available in the repository. If used, it will spin up a container for the transition 
front-end and for dependent services like the postgis database.

*The `docker-compose.yml` file contains customisation suggestions.*

* `docker-compose up -d`

On the first run, you'll need to run the the DB setup commands. See the Installation section of this document for the full details. As a short-hand:
* `docker exec transition_transition-www_1 yarn setup`
* `docker exec transition_transition-www_1 yarn migrate`
* `docker exec -it transition_transition-www_1 yarn create-user`
* `docker-compose restart`

To load OSRM Data:
Copy a GeoJSON polygon.

#TODO Maybe the whole projects directory should be in a volume
```shell
docker cp /path/to/my/random_polygon.geojson transition_transition-www_1:/app/examples/runtime/imports/polygon.geojson

docker exec -it transition_transition-www_1 yarn node --max-old-space-size=4096 /app/packages/chaire-lib-backend/lib/scripts/osrm/downloadOsmNetworkData.task.js --polygon-file /app/examples/runtime/imports/polygon.geojson

docker exec -it transition_transition-www_1 yarn node --max-old-space-size=4096 /app/packages/chaire-lib-backend/lib/scripts/osrm/prepareOsmNetworkData.task.js
```

### Running development commands
During development, you can run commands in the docker image and use your local code.
For example, to run yarn test in the chaire-lib backend:
`docker run -a STDOUT -it -v ""${PWD}:/home/project"" -w=/home/project/transition-app/chaire-lib/backend/ testtransition yarn test`
You can also run the app this way with:
`docker run -a STDOUT -it -v ""${PWD}:/home/project"" -w=/home/project/ testtransition yarn start`

## Contributing

See [CONTRIBUTING.md](CONTRIBUTING.md)

## License
[![FOSSA Status](https://app.fossa.com/api/projects/git%2Bgithub.com%2Fchairemobilite%2Ftransition.svg?type=large)](https://app.fossa.com/projects/git%2Bgithub.com%2Fchairemobilite%2Ftransition?ref=badge_large)",14,14,6,507,transportation,"[transit, transportation, transportation-planning]",00000
83,MMM-vvsDeparture,niklaskappler,N/A,https://github.com/niklaskappler/MMM-vvsDeparture,https://api.github.com/repos/niklaskappler/MMM-vvsDeparture,"A MagicMirror² (https://magicmirror.builders) Module for public transport in Stuttgart, Germany","# MMM-vvsDeparture
A MagicMirror2 Module to display information about public transport in Stuttgart, Germany.

The `MMM-vvsDeparture` module is a module designed to display the departures times as stations along the Stuttgart public transportation system.
 It is configurable based on the stations to get destination times for, destinations to exclude and other options.

It also will show any delays, based on the real time information provided by VVS.

Example:

![Full](example1.png)


## Installation
Run these commands at the root of your magic mirror install.

```shell
cd modules
git clone https://github.com/niklaskappler/MMM-vvsDeparture
```

## Using the module
To use this module, add the following configuration block to the modules array in the `config/config.js` file:
```js
var config = {
    modules: [
        {
            module: 'MMM-vvsDeparture',
            position: ""top_right"",
            config: {
                station_id: '<YOUR_STATION_ID_HERE>',
                // See below for more configurable options
            }
        }
    ]
}
```

Note that a `position` setting is not required.

## Configuration options
The following properties can be configured:

<table width=""100%"">
	<thead>
		<tr>
			<th>Option</th>
			<th width=""100%"">Description</th>
		</tr>
	<thead>
	<tbody>
		<tr>
			<td><code>station_id</code></td>
			<td>A value which represents the station id of the station. The id is combined of the area prefix <code>de:08111</code> and the unique station id e.g <code>6112</code> which result to <code>de:08111:2201</code>. Here is a full list of all station with 
				corespnding ids within the VVS public transport network, to find your station (<a href=""https://www.openvvs.de/dataset/1f7ec4c1-b590-4751-a25b-57ef988c14b6/resource/d87d1f01-5c14-4d08-8452-e405a6472ab4/download/vvs_haltestellen.csv"">https://www.openvvs.de/dataset/1f7ec4c1-b590-4751-a25b-57ef988c14b6/resource/d87d1f01-5c14-4d08-8452-e405a6472ab4/download/vvs_haltestellen.csv</a>).   
				<br><br><b>Possible values:</b> <code>integer</code>
				<br><b>Default value:</b> <code>de:08111:6112</code>
			</td>
		</tr>
		<tr>
			<td><code>station_name</code></td>
			<td>The displayed name for your station.
				<br><br><b>Possible values:</b> <code>string</code>
				<br><b>Default value:</b> <code>undefined</code>
			</td>
		</tr>
		<tr>
			<td><code>maximumEntries</code></td>
      		<td>Number of departure entries which will be shown.
				<br><br><b>Possible values:</b> <code>integer</code>
				<br><b>Default value:</b> <code>6</code>
			</td>
		</tr>
		<tr>
			<td>
			    <code>reloadInterval</code>
			</td>
     		 <td>The refresh rate departure entries will be updated in milliseconds. 
      			<br><br><b>Possible values:</b> <code>integer</code>
				<br><b>Default value:</b> <code>1 * 60 * 1000</code> e.q. one minute
			</td>
		</tr>
		<tr>
			<td>
			    <code>colorDelay</code>
			</td>
     		 <td>Define if the delay value should be colorized.
      			<br><br><b>Possible values:</b> <code>boolean</code>
				<br><b>Default value:</b> <code>true</code>
			</td>
		</tr>
		<tr>
			<td>
			    <code>colorNoDelay</code>
			</td>
     		 <td>Define if the no delay value should be colorized.
      			<br><br><b>Possible values:</b> <code>boolean</code>
				<br><b>Default value:</b> <code>true</code>
			</td>
		</tr>
		<tr>
			<td>
			    <code>number</code>
			</td>
     		 <td>Define the lane number which should be displayed. With this you can hide numbers you don't want to see.
      			<br><br><b>Possible values:</b> <code>String</code> / <code>Array</code> / <code>Function</code> 
				<br><b>Default value:</b> <code>undefined</code>
			</td>
		</tr>
		<tr>
			<td>
			    <code>direction</code>
			</td>
     		 <td>Define the lane direction which should be displayed. With this you can hide numbers you don't wont to see.
      			<br><br><b>Possible values:</b> <code>String</code> / <code>Array</code> / <code>Function</code> 
				<br><b>Default value:</b> <code>undefined</code>
			</td>
		</tr>
		<tr>
			<td>
			    <code>offset</code>
			</td>
     		 <td>Define the offset in minutes. Show connections only starting in the offset minutes.
      			<br><br><b>Possible values:</b> <code>integer</code>
				<br><b>Default value:</b> <code>undefined</code>
			</td>
		</tr>
	</tbody>
</table>

",14,14,6,6,transportation,"[magic-mirror, magic-mirror-modules, stuttgart, transportation, vvs, vvs-api]",00000
84,bus_arrival_prediction,JoshuaW1990,N/A,https://github.com/JoshuaW1990/bus_arrival_prediction,https://api.github.com/repos/JoshuaW1990/bus_arrival_prediction,Project on using ML to implement bus arrival time prediction,"{'message': 'Not Found', 'documentation_url': 'https://docs.github.com/rest/repos/contents#get-repository-content'}",14,14,2,1,transportation,"[bus-arrival, machine-learning, preprocess, python, transportation]",00000
85,ai-transportation,sash-ko,N/A,https://github.com/sash-ko/ai-transportation,https://api.github.com/repos/sash-ko/ai-transportation,Artificial Intelligence in Transportation,"## Artificial Intelligence in Transportation

A collection of AI in transportation research papers with implementations inspired by:
* [Artificial Intelligence in Transportation KDD 2018 Tutorial, London, U.K](https://outreach.didichuxing.com/tutorial/kdd2018/)
* [Deep Reinforcement Learning with Applications in Transportation](https://outreach.didichuxing.com/tutorial/AAAI2019/)

### Simulator and benchmarks

[simobility](https://github.com/sash-ko/simobility) - a light-weight mobility simulation framework.


### Papers

* [T. Oda and C. Joe-Wong, ""Movi: A model-free approach to dynamic fleet management"". 2018](https://arxiv.org/pdf/1804.04758.pdf)

* [A. Alabbasi, A. Ghosh, and V. Aggarwal, ""DeepPool: Distributed model-free algorithm for ride-sharing using deep reinforcement learning"", IEEETrans. Intelligent Transportation Systems (to appear). 2019](https://arxiv.org/pdf/1903.03882)

* [J. Ke, F. Xiao, H. Yang, and J. Ye. Optimizing online matching for ride-sourcing services with multi-agent deep reinforcement learning. 2019](https://arxiv.org/abs/1902.06228)
",14,14,4,1,transportation,"[ai, convolutional-neural-networks, deep-reinforcement-learning, mobility, papers, pytorch, research, simulations, transportation]",00000
86,calculate-accessibility,davidsvale,N/A,https://github.com/davidsvale/calculate-accessibility,https://api.github.com/repos/davidsvale/calculate-accessibility,Calculate accessibility from OD matrix on Python,"# calculate-accessibility (version 2.0, Jan 2020)
Python script to calculate accessibility (gravity-based, cumulative opportunities, gaussian and cumulative-gaussian) from an origin-destination matrix.

## A bit of theory
   The literature contains several definitions of accessibility. The first comes from Hansen (1959, p. 73), which sees it as “the potential of opportunities for interaction”. Handy and Niemeier (1997, p. 1175) expand on the definition, noting that this potential is “determined by the spatial distribution of potential destinations, the ease of reaching each destination, and the magnitude, quality, and character of the activities found there”. Accessibility, therefore, reflects land use patterns that determine the spatial distribution of activities and the transport system; these, in turn, determine the ease of reaching a destination.
   
   We follow a place-based accessibility framework, in particular the designated gravity-based measures: opportunities are weighted as a function of their distance (physical or relative) from the origin following an impedance function. With the script is also possible to calculate cumulative opportunities measures, which are a special case of gravity-based measures. The latter adopt the same theoretical and methodological framework as the former, but assume a regular impedance function – specifically, opportunities located within a certain threshold are counted while others, beyond the threshold, are not. Although these measures are very sensitive to the threshold value, they are much easier to understand and explain, making them very important for planners and decision-makers.

### Formula used
In this script we calculate accessibility of place *i* as:

<a href=""https://www.codecogs.com/eqnedit.php?latex=A{i}&space;=&space;\sum_{j=1}^n&space;O_jf(C_i_j)"" target=""_blank""><img src=""https://latex.codecogs.com/gif.latex?A{i}&space;=&space;\sum_{j=1}^n&space;O_jf(C_i_j)"" title=""A{i} = \sum_{j=1}^n O_jf(C_i_j)"" /></a>

For a deeper understanding of methodologies to calculate accessibility, we refer you to:

Vale, D. S., Saraiva, M., & Pereira, M. (2015). Active accessibility: A review of operational measures of walking and cycling accessibility. Journal of Transport and Land Use, 9(1). https://doi.org/10.5198/jtlu.2015.593 (Open Access)

For a deeper understanding of the impedance functions used, and its impact on pedestrian accessibility:

Vale, D. S., & Pereira, M. (2017). The influence of the impedance function on gravity-based pedestrian accessibility measures: A comparative analysis. Environment and Planning B: Urban Analytics and City Science, 44(4), 740–763. https://doi.org/https://doi.org/10.1177/0265813516641685


## Requirements:
### Input files
1) OD Matrix, with three columns: Origin, Destination, CostofTravel (column names are irrelevant, as long as they are in this order)
2) Data for opportunities found at destination (e.g. jobs at each location)

### Impendance function
With this script, we calculate:
1) an exponential function
2) a rectangular function
3) a Gaussian function
4) a cumulative-Gaussian function

You need to set the paramteres of these funcions, namely:
1) the value for the beta for the exponential function (default value is -0.0384)
2) the value for delta for the rectangular function (the threshold, default value = 30)
3) the value for v for the Gaussian function (default value = 324.60614)
4) the value for a and v for the cumulative-Gaussian function (default values a= 30, v = 324.60614)

We are providing two scripts, exactly the same, but one has these parameters set for pedestian accessibility calculations, assuming that the OD matrix has been calculated as walking distance between origins and destinations.

You can alter the parameters in both files (`AccFromODMatrix_v2.py` and `AccFromODMatrix_Walk.py`), but we recomend you to use `AccFromODMatrix_Walk.py` if you are calculating pedestrian accessibility.

### Output file
Results will be written to a csv file, which contains as many rows as the number of origins in your OD Matrix. 


# Files available to test the script
Please copy all files to the same directory and run the script `AccFromODMatrix_v2.py`

## Input files
`OD_Matrix.csv` : file with OD matrix (1054 Origins x 1054 Destinations)
Please note this file is zipped, so you need to unzippit first.
(If you are using `AccFromODMatrix_Walk.py`, you should use `OD_Matrix_Walk.csv`)

`DestinationData.csv`: file with data for opportunities found at destinations (in this example residents at each destination)

## Output files
`AccResults.csv` : file with the results for the 1054 origins with four columns: 'Acc_exponential', 'Acc_cumulative', 'Acc_Gaussian' and 'Acc_CumGaussian' 
By running the script you should get exactly the same file.


# Citation
If you have used this script in your work and you would like to cite it, you can use the following reference:
Vale, David (2020) Calculate accessibility from an OD matrix on python (version 2.0).  Retrieved from: https://github.com/davidsvale/calculate-accessibility

# References
Hansen, W.G., 1959. How accessibility shapes land use. Journal of the Am. Instute of Planners 25, 73–76.
Handy, S., Niemeier, D.A., 1997. Measuring accessibility: an exploration of issues and alternatives. Environment and Planning A 29, 1175–1194.
",14,14,1,0,transportation,"[accessibility, landuse, od-matrix, transportation]",00000
87,Bus-Route-Finder,janithl,N/A,https://github.com/janithl/Bus-Route-Finder,https://api.github.com/repos/janithl/Bus-Route-Finder,Just a simple site that lets you find buses from A to B in Colombo. Find a newer JS version here: https://github.com/janithl/BusRouteJS,"{'message': 'Not Found', 'documentation_url': 'https://docs.github.com/rest/repos/contents#get-repository-content'}",14,14,4,1,transportation,"[bus, buses, php, public-transportation, shortest-paths, sri-lanka, transportation]",00000
88,container-optimization,samirsaci,N/A,https://github.com/samirsaci/container-optimization,https://api.github.com/repos/samirsaci/container-optimization,Containers Loading Optimization with Python,"## Containers Loading Optimization with Python 📦
*How can we use heuristic algorithms to find the right strategy to load a maximum number of pallets in a sea container?*


<p align=""center"">
  <img align=""center"" src=""https://miro.medium.com/max/1400/1*CkTDHr6ptOwBM12bLPiW1A.png"">
</p>

### Youtube Video
Find in the link below a short animated explained video to understand the concept behind this solution
<div align=""center"">
  <a href=""https://www.youtube.com/watch?v=P1kSt3tedI4""><img src=""https://github.com/samirsaci/container-optimization/blob/main/thumbnail.webp"" alt=""Explainer Video Link""></a>
</div>

### Article
In this [Article](https://www.samirsaci.com/containers-loading-optimization-with-python/), we will build a container loading optimization 
model using a heuristic method from a Python library.


### Experiment
#### Scenario
You need to load in a 40' Container
- 20 European Pallets 80 x 120 (cm)
- 4 North American Pallets 100 x 120 (cm)
#### Tentative 1: The Intuitive solution
![This is an image](https://miro.medium.com/max/700/1*VV3FCo5v75EmtDEgyhpKJg.png)
> Results: 20/20 Euro Pallets loaded, 2/4 American pallets loaded. You need another container for the two remaining pallets.
#### Tentative 2: The Optimization Algorithm Result
![This is an image](https://miro.medium.com/max/700/1*QvEfxDGR8KiENh9Fp7LD9w.png)
> Results: 20/20 Euro Pallets loaded, 4/4 American pallets loaded. You don’t need another container.


## Code
This repository code you will find all the code used to explain the concepts presented in the article.

## About me 🤓
Senior Supply Chain Engineer with an international experience working on Logistics and Transportation operations. \
Have a look at my portfolio: [Data Science for Supply Chain Portfolio](https://samirsaci.com) \
Data Science for Warehousing📦, Transportation 🚚 and Demand Forecasting 📈 
",14,14,1,1,transportation,"[container-loading-problem, python, supply-chain, supply-chain-management, transportation]",00000
89,transam_core,camsys,camsys,https://github.com/camsys/transam_core,https://api.github.com/repos/camsys/transam_core,Core Rails engine for the TransAM open source software platform for managing transportation assets.,"# TransAM Core

TransAM is a fully open source software platform for managing transportation assets. As an open
source solution, TransAM provides a low-cost, license-free alternative to proprietary asset management
systems. Specifically designed to address the unique challenges of asset management within public
transportation agencies, the platform is feature rich, including a variety of industry-standard models
to forecast asset condition and replacement cycles, quantify capital needs, and
develop and implement state-of-good-repair policies. TransAM accommodates all types of transportation-related
assets, including rolling stock, rail, facilities, shelters, signage and other infrastructure,
maintenance equipment, communications equipment, and computers and software.

TransAM functionality is decomposed into a set of Rails Engines, which can be incorporated into a Rails application framework 
to build a fully functional TransAM application. The Core engine provides the foundation for all other engines and TransAM applications.

## Installation

Add this line to your application's Gemfile:

    gem 'transam_core'

And then execute:

    $ bundle

Or install it yourself as:

    $ gem install transam_core

## Usage

TODO: Write usage instructions here

## Contributing

1. Fork it
2. Create your feature branch (`git checkout -b my-new-feature`)
3. Commit your changes (`git commit -am 'Add some feature'`)
4. Push to the branch (`git push origin my-new-feature`)
5. Create new Pull Request

## Engines Build Status

#### transam_core
[![Build Status](https://api.travis-ci.com/camsys/transam_core.svg)](https://travis-ci.com/camsys/transam_core)

---

#### [transam_accounting](https://github.com/camsys/transam_accounting)
[![Build Status](https://api.travis-ci.com/camsys/transam_accounting.svg)](https://travis-ci.com/camsys/transam_accounting)

#### [transam_audit](https://github.com/camsys/transam_audit)
[![Build Status](https://api.travis-ci.com/camsys/transam_audit.svg)](https://travis-ci.com/camsys/transam_audit)

#### [transam_cpt](https://github.com/camsys/transam_cpt)
[![Build Status](https://api.travis-ci.com/camsys/transam_cpt.svg)](https://travis-ci.com/camsys/transam_cpt)

#### [transam_funding](https://github.com/camsys/transam_funding)
[![Build Status](https://api.travis-ci.com/camsys/transam_funding.svg)](https://travis-ci.com/camsys/transam_funding)

#### [transam_reporting](https://github.com/camsys/transam_reporting)
[![Build Status](https://api.travis-ci.com/camsys/transam_reporting.svg)](https://travis-ci.com/camsys/transam_reporting)

#### [transam_spatial](https://github.com/camsys/transam_spatial)
[![Build Status](https://api.travis-ci.com/camsys/transam_spatial.svg)](https://travis-ci.com/camsys/transam_spatial)

#### [transam_transit](https://github.com/camsys/transam_transit)
[![Build Status](https://api.travis-ci.com/camsys/transam_transit.svg)](https://travis-ci.com/camsys/transam_transit)

#### [transam_highway](https://github.com/camsys/transam_highway)
[![Build Status](https://api.travis-ci.com/camsys/transam_highway.svg)](https://travis-ci.com/camsys/transam_highway)

             
",13,13,11,1,transportation,"[rails-engine, ruby, transportation]",00000
90,atd-data-publishing,cityofaustin,cityofaustin,https://github.com/cityofaustin/atd-data-publishing,https://api.github.com/repos/cityofaustin/atd-data-publishing,Python scripts for Austin Transportation's ETL tasks,"# transportation-data-publishing

This repo houses ETL scripts for Austin Transportation's data integration projects. They're written in Python. 

## Quick Start

1. Clone this repository to your host: `git clone https://github.com/cityofaustin/transportation-data-publishing`
 
2. Create your `secrets.py` and drop it into `transportation-data-publishing/config` following the template in [fake-secrets.py](https://github.com/cityofaustin/transportation-data-publishing/blob/master/config/fake_secrets.py)

3. If setting up ESB inegration add certificates to `transportation-data-publishing/config/esb`

4. Run scripts as needed, or deploy to a Docker host with [transportation-data-deploy](http://github.com/cityofaustin/transportation-data-deploy)

## About the Repo Structure

#### [bcycle](https://github.com/cityofaustin/transportation-data-publishing/tree/master/transportation-data-publishing/bcycle)

These scripts load B-Cycle tripe data from an Austin B-Cycle Dropbox folder to [data.austintexas.gov](http://data.austintexas.gov).

#### [config](https://github.com/cityofaustin/transportation-data-publishing/tree/master/transportation-data-publishing/config)

Config holds configuration files needed for the various scripts. `secrets.py` belongs here -- see `fake_secrets.py` as a reference.

#### [data_tracker](https://github.com/cityofaustin/transportation-data-publishing/tree/master/transportation-data-publishing/data_tracker)

These scripts modify data in our Data Tracker application, and support its integration with other applications.

#### [open_data](https://github.com/cityofaustin/transportation-data-publishing/tree/master/transportation-data-publishing/open_data)

These scripts publish transportation data to [data.austintexas.gov](http://data.austintexas.gov) and the City's ArcGIS Online organization site.

#### [traffic_study](https://github.com/cityofaustin/transportation-data-publishing/tree/master/transportation-data-publishing/traffic_study)

These are the dedicated files for publishing traffic study data, as described [in the wiki](https://github.com/cityofaustin/transportation-data-publishing/wiki/Traffic-Count-Data-Publishing).

## Contributing

Public contributions are welcome! Assign pull requests to [@johnclary](http://github.com/johnclary).

## Deployment Pipeline

We are currently using CircleCI to automatically rebuild the container on every update to this repo, and autonomously deploy that image to Docker-hub. When working in the production or master branches, there are some considerations to keep in mind:

- You will need someone to review your changes for Production or Master branches.
- The production branch is tagged as `latest` in dockerhub, which means it will be the default image and ""source of truth"".
- Ideally you will want to merge to master, which will cause CircleCI to create a `master` tag in dockerhub, which can be used for additional testing or troubleshooting.
- Any code merged to production, should be production-worthy already. Test thoroughly in master or any other branch before merging in any additional code.

### Development

Feel free to create a new branch, and commit/push as many times as you need. The pipeline will create a new docker image (if it does not exist), or update the existing image in dockerhub. *Your branch name will be used as the identifying tag in docker hub.*

**For example:**

Say you create a branch with the name `123-atd-updatedcode`, as soon as the branch is created CircleCI will begin building the docker image, and tag it as `atddocker/atd-data-publishing:123-atd-updatedcode` , then it will upload it to Docker hub. If there is already an image with that tag, it will simply update it.



## License

As a work of the City of Austin, this project is in the public domain within the United States.

Additionally, we waive copyright and related rights in the work worldwide through the [CC0 1.0 Universal public domain dedication](https://creativecommons.org/publicdomain/zero/1.0/).


",13,13,12,0,transportation,"[bcycle, docker, intelligent-transportation-systems, mobility, open-data, python, transportation]",00000
91,taui,conveyal,conveyal,https://github.com/conveyal/taui,https://api.github.com/repos/conveyal/taui,Serverless dynamic personalized transit accessibility,"# Taui

[![NPM version][npm-image]][npm-url]
[![Build status][travis-image]][travis-url]

![Taui screenshot](screenshot.png?raw=true ""Taui screenshot"")

## Running

Clone the repository and with [yarn](https://yarnpkg.com/en/) and [node v10](https://nodejs.org/en/) installed run `yarn run dev`. Taui is built and run with [next.js](https://nextjs.org) and [now](https://now.js).

## Configuration

Copy the `empty-store.json` file to `store.json`. This file populates the data used for running a Taui.

**Key fields:**

* `allowChangeConfig` -- Set to `false` when deploying a site for a user.
* `map.accessToken` -- A [Mapbox](https://mapbox.com) access token is required for Mapbox GL maps and Mapbox Geocoding to work.
* `grids` -- Point sets or opportunities can be set here.
* `networks` -- A url to an S3 bucket containing the results of regional analysis generated from R5.
* `poiUrl` -- URL to a GeoJSON file that contains a `FeatureCollection` of `Points` to be shown on the map. Add a `label` to the `properties` field of each point.

## Deployment

[![Deploy to now](https://deploy.now.sh/static/button.svg)](https://deploy.now.sh/?repo=https://github.com/conveyal/taui)

[npm-image]: https://img.shields.io/npm/v/@conveyal/taui.svg?maxAge=2592000&style=flat-square
[npm-url]: https://www.npmjs.com/package/@conveyal/taui
[travis-image]: https://img.shields.io/travis/conveyal/taui.svg?style=flat-square
[travis-url]: https://travis-ci.org/conveyal/taui
",13,13,7,2,transportation,"[data-visualization, geospatial, transportation]",00000
92,Rome-in-transit,ivandorte,N/A,https://github.com/ivandorte/Rome-in-transit,https://api.github.com/repos/ivandorte/Rome-in-transit,"This dashboard displays the near real-time position of any bus, tram, or train (ATAC and Roma TPL operators) within the Metropolitan City of Rome Capital.","# :trolleybus: Rome in Transit (GTFS-RT)

![img](https://raw.githubusercontent.com/ivandorte/Rome-in-transit/main/assets/dashboard.png)

[![License: CC BY-SA 4.0](https://img.shields.io/badge/License-CC%20BY--SA%204.0-lightgrey.svg)](https://creativecommons.org/licenses/by/4.0/)

## Description

This dashboard displays the near real-time position of any bus, tram, or train (ATAC and Roma TPL operators) within the Metropolitan City of Rome Capital. The stream layers automatically updates every 10 seconds through a **periodic callback** with new data retrieved from the GTFS-RealTime ([Overview](https://developers.google.com/transit/gtfs-realtime)) feed provided and mantained by Roma Mobilità ([website](https://romamobilita.it/))

Hugging Face: https://huggingface.co/spaces/ivn888/Rome-in-transit

GitHub Pages: https://ivandorte.github.io/Rome-in-transit/gtfs-rt/app.html

## Components

Two stream layers (maps):

1. The ""Vehicle status"" map shows, as the name implies, the current status of the vehicle:
   - $\textcolor{#0077BB}{\rm \textbf{In\ transit}}$ 
   - $\textcolor{#EE7733}{\rm \textbf{Stopped}}$

2. The ""Delays map"" displays whether a vehicle is on time (ahead + on time) or behind schedule (late)
3. :
   - $\textcolor{#009988}{\rm \textbf{On\ time}}$
   - $\textcolor{#CC3311}{\rm \textbf{Late}}$

N.B.: The value of the delay field (in minutes) will be zero if the vehicle is on time (A), negative if ahead of schedule (B) or positive if late (C).

![img](https://raw.githubusercontent.com/ivandorte/Rome-in-transit/main/assets/delay.png)

Five number indicators showing:

- The number of currently active vehicles (fleet) divided between in transit or stopped;

- The number of vehicles on time or behind schedule;

## Data 

- Public transport data from [Roma Mobilità](https://romamobilita.it/it/tecnologie);

- Administrative boundaries from [ISTAT (2022)](https://www.istat.it/it/archivio/222527);

## ToDo

- [ ] Add alerts feed;
- [ ] Add routes, stops, etc...;

## Known problems:

- If you view a blank page in HF restart the Space;

- The periodic callback may suddenly stop working (I don't know why) and the data will not be updated, simply refresh the application page;

## Deployment on GitHub pages

1. Loaded my custom Python modules from GitHub:

https://github.com/ivandorte/Rome-in-transit/blob/52a790cecf2663c0289b3e54664a57c1ba3985c1/docs/gtfs-rt/app.js#L42-L52

2. Loaded protobuf and gtfs-realtime-bindings wheels from a [CDN URL](https://cdn.jsdelivr.net):

   - protobuf is available on pypi: https://pypi.org/project/protobuf/#files

   - gtfs-realtime-bindings (https://pypi.org/project/gtfs-realtime-bindings/#files) was compiled via: `python setup.py bdist_wheel`

3. How I partially solved the CORS problem?

   - Used [corsproxy.io](https://corsproxy.io/) to bypass CORS errors on HTTP requests;

   - Used XMLHttpRequest (js) to make HTTP requests of binary data;

https://github.com/ivandorte/Rome-in-transit/blob/52a790cecf2663c0289b3e54664a57c1ba3985c1/modules_pyodide/rome_gtfs_rt.py#L51-L66

## Deployment on HF

Just read this [Medium article](https://towardsdatascience.com/how-to-deploy-a-panel-app-to-hugging-face-using-docker-6189e3789718) written by Sophia Yang, Ph.D.

## References

- [GTFS Realtime Overview](https://developers.google.com/transit/gtfs-realtime)

- [Loading custom Python code](https://pyodide.org/en/stable/usage/loading-custom-python-code.html)

- [How to deploy a Panel app to Hugging Face using Docker](https://towardsdatascience.com/how-to-deploy-a-panel-app-to-hugging-face-using-docker-6189e3789718)

- [Converting Panel applications](https://panel.holoviz.org/how_to/wasm/convert.html)

- [corsproxy.io](https://corsproxy.io/)

- [Pyodide requests shim: Binary requests are working!](https://bartbroere.eu/2022/04/25/pyodide-requests-binary-works-update/)

- [PyViz Topics Examples](https://examples.pyviz.org/index.html)

- [Panel Sharing Gallery](https://awesome-panel.org/sharing_gallery)

- [Panel Discourse 4825](https://awesome-panel.org/sharing?app=MarcSkovMadsen%2Fdiscourse-4825-streaming-data)

- [Markdown Badges](https://github.com/Ileriayo/markdown-badges)

- Dashboard logo from [Material Symbols - Google](https://fonts.google.com/icons)

### Authors

- Ivan D'Ortenzio

[![Twitter](https://img.shields.io/badge/Twitter-%231DA1F2.svg?style=for-the-badge&logo=Twitter&logoColor=white)](https://twitter.com/ivanziogeo)

[![LinkedIn](https://img.shields.io/badge/linkedin-%230077B5.svg?style=for-the-badge&logo=linkedin&logoColor=white)](https://www.linkedin.com/in/ivan-d-ortenzio/)
",13,13,1,0,transportation,"[dataapps, geospatial, geospatial-visualization, gis, google, gtfs, gtfs-realtime, holoviz, pandas, panel, protobuf, pyodide, pyproj, python, rome, stream, transportation]",00000
93,sete,marcosroriz,N/A,https://github.com/marcosroriz/sete,https://api.github.com/repos/marcosroriz/sete,Sistema Eletrônico de Gestão do Transporte Escolar,"# SETE
<a href=""#"">
<img src=""https://files.cercomp.ufg.br/weby/up/767/o/setepretoPrancheta_1_4x.png"" alt=""SETE Logo"" width=""400"">
</a>


[![Build status](https://ci.appveyor.com/api/projects/status/3b989hf236b2i47d?svg=true)](https://ci.appveyor.com/project/marcosroriz/sete)


O Sistema Eletrônico de Gestão do Transporte Escolar (SETE) é um software de _e-governança_ desenvolvido pelo [CECATE UFG](https://transportes.fct.ufg.br/p/31447-apresentacao-do-cecate-ufg) voltado a auxiliar na gestão do transporte escolar dos municípios brasileiros considerados suas singularidades.  O sistema foi projeto com intuito de não depender de nenhum software proprietário, desta forma é possível utilizá-lo sem ter de licenciar programas dependentes.

O SETE possui versões para web, desktop e móvel (em andamento). A versão desktop possibilita que o mesmo seja utilizado para operar em municípios que possuem acesso restrito à Internet sendo resiliente o suficiente para continuar operando mesmo na ausência de acesso à Internet. A versão web e a versão desktop são aproximadamente idênticas. A diferença é que a versão web não inclui as ferramentas de sugestões de rotas.

## Baixando o Sete
Para baixar o _software_, basta clicar na versão abaixo do seu sistema operacional.

<a href=""https://github.com/marcosroriz/sete/releases/download/v2.1.0/sete-2.1.0.msi"">  <img src=""https://files.cercomp.ufg.br/weby/up/767/o/baixarwindows.png"" alt=""baixar sete para windows"" width=""200"" height=""81"" /></a>&nbsp; &nbsp; &nbsp;&nbsp;<a href=""https://github.com/marcosroriz/sete/releases/download/v2.1.0/sete-2.1.0.dmg""><img src=""https://files.cercomp.ufg.br/weby/up/767/o/baixarmac.png"" alt=""baixar sete para mac"" width=""200"" height=""81"" /></a>&nbsp; &nbsp; &nbsp;&nbsp;<a href=""https://github.com/marcosroriz/sete/releases/download/v2.1.0/sete_2.1.0_amd64.deb""><img src=""https://files.cercomp.ufg.br/weby/up/767/o/baixarlinux.png"" alt=""baixar sete para linux"" width=""200"" height=""81"" /></a></p>


## Construindo (*building*) o SETE

O SETE é construído em cima do *framework*  [Electron](https://github.com/electron/electron), um arcabouço para codificação de aplicações desktop modernas baseado no ecosistema Node.js. 

O SETE utiliza bibliotecas nativas, a saber o SQLite, para possibilitar o uso e armazenamento de informações de forma *offline*. 

Considerando estes fatores, para construir o **SETE** assume-se as seguintes dependências básicas:
* Node.js v12 LTS (*e.g.*, Node.js v12.18.3)
* Yarn v1.22. (utilizado pelo electron para empacotar os binários)
* Python 2.7 (muitos módulos nativos ainda usam o Python 2)
* fakeroot, dpkg e rpm para compilar pacotes para GNU/Linux
* [windows-build-tools](https://github.com/felixrieseberg/windows-build-tools) (para compilação dos módulos no Windows)
* [Wix Toolset](https://wixtoolset.org) (para gerar binários .msi e .exe para o Windows)

Para compilar o código execute os seguintes passos.

### 1: Instalação das dependências básicas
Instale o NodeJS v12. Você pode utilizar os binários disponbilizados no site [nodejs.org](nodejs.org) ou utilizar uma ferramenta de versionamento para instalação (_e.g._, [Node Version Manager - NVM](https://github.com/nvm-sh/nvm)).

Semelhantemente, instale o gerenciador de pacotes Yarn v1.22. Você pode utilizar os binários disponiblizados no site [https://yarnpkg.com/](https://yarnpkg.com/). O yarn é utilizado pelo electron-forge para gerar os binários.

Caso queira compilar para GNU/Linux, instale os pacotes `fakeroot`, `dpkg` e `rpm`. 
Por exemplo, no Ubuntu 18.04, você deve executar o seguinte comando:
```sh
sudo apt-get install fakeroot dpkg rpm
```

Caso queira compilar para o Windows, instale o Wix Toolset e coloque o diretório `bin` do mesmo na variável PATH. Por exemplo, adicionando `C:\Program Files (x86)\WiX Toolset v3.11\bin` a variável de ambiente PATH.

No caso da plataforma Windows ainda é necessário instalar o pacote global [windows-build-tools](https://github.com/felixrieseberg/windows-build-tools) para compilação dos módulos nativos. Como administrador instale este pacote executando o seguinte comando:
```sh
npm install --global windows-build-tools
```

Por fim, o Windows ainda requer que o `npm` especifique a versão do compilador do Visual Studio, no caso 2017, e o caminho do binário do Python (instalado pelo `windows-build-tools`). Por exemplo, os comando abaixos especificam a versão 2017 e um caminho do Python (modifique para ser condizente com sua máquina). 

```sh
npm config set msvs_version ""2017""
npm config set python ""C:\\Python27-x64\\pythonw.exe""
```

### 2: Baixe o código fonte

```sh
git clone https://github.com/marcosroriz/sete/
```

Depois instale as dependência:

```sh
npm install
```

Por fim, recompile a dependência nativa.
```sh
npm install sqlite3 --build-from-source --runtime=electron --target=8.5.2 --dist-url=https://electronjs.org/headers
```

### 3: Executando o projeto

Para executar o projeto basta utilizar o seguinte comando:
```sh
npm run start
```

### 4: Geração de Binários

A geração de binários é feita utilizando o utilitário `electron-forge`. Especificamente, para gerar os binários, que ficarão na pasta `out`, execute o seguinte comando:

```sh
npm run make
```

## Licença de Uso
O sistema é distribuído gratuitamente sob a licença de software livre [MIT](https://github.com/marcosroriz/sete/blob/master/LICENSE) que possibilita o compartilhamento e modificação do código do mesmo por terceiros, por exemplo, por agências públicas, empresas e equipes tecnológicas dos municípios.
",13,13,7,56,transportation,"[e-government, electron, rural-communities, school-education, transportation]",00000
94,calgary-traffic-collision,smohiudd,N/A,https://github.com/smohiudd/calgary-traffic-collision,https://api.github.com/repos/smohiudd/calgary-traffic-collision,Predict traffic collisions in Calgary using Keras and Tensorflow.js. Visualization with React and Mapbox.,"<h1>Predict and Visualize Traffic Collisions using Keras and tensorflow.js</h1>

Working example: https://smohiudd.github.io/calgary-traffic-collision/
Read the blog post here: https://saadiqm.com/2018/09/26/traffic-incident-prediction-with-machine-learning.html

![closeness centrality](https://nodalscapes.files.wordpress.com/2018/09/incident_screenshot3.png?w=739&h=545)
",13,13,1,0,transportation,"[keras, mapbox-gl-js, reactjs, tensorflow-js, transportation, urban-data-science]",00000
95,mobility,mobility-team,mobility-team,https://github.com/mobility-team/mobility,https://api.github.com/repos/mobility-team/mobility,"Mobility, an open-source library for mobility modelisation","[![codecov](https://codecov.io/github/mobility-team/mobility/branch/main/graph/badge.svg?token=D31X32AZ43)](https://codecov.io/github/mobility-team/mobility)
[![Python package](https://github.com/mobility-team/mobility/actions/workflows/python-package.yml/badge.svg?branch=main)](https://github.com/mobility-team/mobility/actions/workflows/python-package.yml)
[![Code style: black][black-badge]][black-link]
[![Documentation Status][rtd-badge]][rtd-link]

# Mobility, an open-source library for mobility modelisation
Mobility is an open-source solution to compute the carbon emissions due to the mobility of a local population.

It is developed mainly by [AREP](https://arep.fr) and [Elioth](https://elioth.com/) with [ADEME](https://wiki.resilience-territoire.ademe.fr/wiki/Mobility) support, but anyone can join us!
For now, it is mainly focused on French territories.

[Documentation on mobility.readthedocs.io](https://mobility.readthedocs.io/en/latest/)

Find more infos (in French) on [Mobility website](https://mobility-team.github.io/)

# Mobility, une librairie open source pour la modélisation de la mobilité
Mobility est une solution open source servant à calculer l'empreinte carbone liée à la mobilité d'une population locale.


L'outil est principalement développé par [AREP](https://arep.fr) et [Elioth](https://elioth.com/) avec le soutien de l'[ADEME](https://wiki.resilience-territoire.ademe.fr/wiki/Mobility), mais toute personne peut nous rejoindre !
Pour l'instant, la solution est centrée sur les territoires et les données françaises.

[Documentation sur mobility.readthedocs.io](https://mobility.readthedocs.io/en/latest/)

Plus d'infos sur [le site web](https://mobility-team.github.io/) !

# Contributeur·ices
| Entreprise/école  | Participant·es |
| :------------- | :------------- |
| AREP  | Capucine-Marin Dubroca-Voisin <br> Antoine Gauchot <br> Félix Pouchain |
| Elioth  | Louise Gontier <br> Arthur Haulon  |
| École Centrale de Lyon | Anas Lahmar <br> Ayoub Foundou <br> Charles Pequignot <br> Lyes Kaya  <br> Zakariaa El Mhassani |

# Utilisations
| Utilisateur  | Date | Projet |
| :------------- | :------------- | :------------- |
| AREP  | 2020-2022 | [Luxembourg in Transition]([url](https://www.arep.fr/nos-projets/luxembourg-in-transition-paysage-capital/)) |
| AREP | En cours (2022) | Étude pour le [Grand Annecy]([url](https://www.arep.fr/nos-projets/grand-annecy/)) |

# Comment utiliser Mobility ?
_En cours de rédaction_

# Comment contribuer ?
* Vous pouvez regarder nos [issues](https://github.com/mobility-team/mobility/issues), particulièrement celles marquées comme [good-first-issue](https://github.com/mobility-team/mobility/issues?q=is%3Aissue+is%3Aopen+label%3A%22good+first+issue%22), et proposer d'y contribuer.
* Tester l'outil et nous indiquer là où la documentation peut être améliorée est très utile ! Que ce soit pour une suggestion ou une issue, n'hésitez pas à [ouvrir une issue](https://github.com/mobility-team/mobility/issues/new).
* Nous espérons que vous pourrez utiliser Mobility pour vos travaux de recherche et de conseil ! Nous comptons sur vous pour partager le code que vous avez utilisé.
* Nous suivons PEP8 pour notre code Python. Pour d'autres bonnes pratiques, [suivez le guide](https://github.com/mobility-team/mobility/tree/main/mobility) !

[rtd-badge]: https://readthedocs.org/projects/mobility/badge/?version=latest
[rtd-link]: https://mobility.readthedocs.io/en/latest/?badge=latest
[black-badge]: https://img.shields.io/badge/code%20style-black-000000.svg
[black-link]: https://github.com/ambv/black
",12,12,5,21,transportation,"[carbon, carbon-footprint, mobility, open-source, transport, transportation]",00000
96,sao_paulo,eqasim-org,eqasim-org,https://github.com/eqasim-org/sao_paulo,https://api.github.com/repos/eqasim-org/sao_paulo,An open synthetic population of Sao Paulo Metropolitan region for agent-based transport simulation,"# An open synthetic population of Sao Paulo Metropolitan Region

![Via Sao-Paulo](docs/via.png ""Via Sao-Paulo"")

This repository contains the code to create an open data synthetic population
of the Sao Paulo Metropolitan region. It can also be used to
create scenarios for other regions in Brasil, given that an appropriate household 
travel survey is available.

- [How to use this pipeline to create your own scenario](docs/howto.md)
- [How to run a MATSim transport simulation for Sao Paulo Metropolitan Region](docs/howto.md)

## Scenario download

In case you wish to use the generated synthetic travel demand or agent-based scenario directly, they are available here:

- [Synthetic travel demand](https://polybox.ethz.ch/index.php/s/wQs55iomiIz5q5j) The files contain a 1pct synthetic travel demand.
- [Runnable eqasim Scenario](https://polybox.ethz.ch/index.php/s/CH7koBnqLDSVqYb) The files can be used to run a 1pct scenario using the [RunSimulation](https://github.com/eqasim-org/eqasim-java/blob/develop/sao_paulo/src/main/java/org/eqasim/sao_paulo/RunSimulation.java) script.

To run the simulation directly with the provided scenario you need to use the eqasim environment. The main class requiring only the config file as an input is available [here](https://github.com/eqasim-org/eqasim-java/blob/develop/sao_paulo/src/main/java/org/eqasim/sao_paulo/RunSimulation.java).

The scenario is created using this repository with the version 1.1.

## Main reference

The main research reference for the general pipeline methodology is:
> Hörl, S. and M. Balac (2020) [Reproducible scenarios for agent-based transport simulation: A case study for Paris and Île-​de-France](https://www.researchgate.net/publication/341131284_Reproducible_scenarios_for_agent-based_transport_simulation_A_case_study_for_Paris_and_Ile-de-France), Arbeitsberichte Verkehrs-und Raumplanung, 1499, IVT, ETH Zurich, Zurich.

The main research reference for the Sao Paulo synthetic population is:
> Sallard, A., M. Balac and S. Hörl (2021) [An open data-driven approach for travel demand synthesis: an application to São Paulo](https://www.tandfonline.com/doi/full/10.1080/21681376.2021.1968941), Regional Studies, Regional Science, 8(1), 371-386.

## What is this?

This repository contains the code to create an open data synthetic population
of the Sao Paulo Metropolitan region.
It takes as input several publicly
available data sources to create a data set that closely represents the
socio-demographic attributes of persons and households in the region, as well
as their daily mobility patterns. Those mobility patterns consist of activities
which are performed at certain locations (like work, education, shopping, ...)
and which are connected by trips with a certain mode of transport. It is known
when and where these activities happen.

Such a synthetic population is useful for many research and planning applications.
Most notably, such a synthetic population serves as input to agent-based
**transport simulations**, which simulate the daily mobility behaviour of people
on a spatially and temporally detailed scale. Moreover, such data has been used
to study the **spreading of diseases**, or the **placement of services** and facilities.

The synthetic population for Sao Paulo can be generated from scratch by
everybody who has basic knowledge in using Python. Detailed [instructions
on how to generate a synthetic population with this repository](docs/howto.md) are available.

Although the synthetic population is independent of the downstream application
or simulation tool, we provide the means to create an input population for the
agent- and activity-based transport simulation framework [MATSim](https://matsim.org/).

This pipeline has been adapted to many other regions and cities around the world
and is under constant development. It is released under the GPL license, so feel free
to make adaptations, contributions or forks as long as you keep your code open
as well!

## Publications
- Sallard, A., M. Balac and S. Hörl (2020) [An agent-based scenario for the Sao Paulo Metropolitan Region](), Arbeitsberichte Verkehrs-und Raumplanung, xxx, IVT, ETH Zurich, Zurich.
- Hörl, S. and M. Balac (2020) [Reproducible scenarios for agent-based transport simulation: A case study for Paris and Île-de-France](https://www.researchgate.net/publication/341131284_Reproducible_scenarios_for_agent-based_transport_simulation_A_case_study_for_Paris_and_Ile-de-France), Preprint, IVT, ETH Zurich, Zurich.
- Hörl, S., Balac, M. and Axhausen, K.W. (2019) [Dynamic demand estimation for an AMoD system in Paris](https://ieeexplore.ieee.org/document/8814051),
paper presented at the 30th IEEE Intelligent Vehicles Symposium, Paris, June 2019.
",12,12,2,3,transportation,"[agent-based, brasil, sao-paulo, scenario, transportation]",00000
97,isonoi,isonoi,isonoi,https://github.com/isonoi/isonoi,https://api.github.com/repos/isonoi/isonoi,Calculate voronoi-style polygons based on route distances / durations,"
<!-- README.md is generated from README.Rmd. Please edit that file -->

# isonoi

<!-- badges: start -->

[![R-CMD-check](https://github.com/isonoi/isonoi/actions/workflows/R-CMD-check.yaml/badge.svg)](https://github.com/isonoi/isonoi/actions/workflows/R-CMD-check.yaml)
<!-- badges: end -->

The goal of isonoi is to provide example data and functions to
demonstrate the concept of ‘iso voronoi’ polygons.

It is designed to be a prototype implementation of ideas outlined and
demonstrated with example data and reproducible code in
<https://github.com/isonoi/isonoi>

Give it a spin with the reproducible examples shown below.

``` r
remotes::install_github(""isonoi/isonoi"")
```

``` r
# TODO: remove this and keep only library call
devtools::load_all()
#> ℹ Loading isonoi
# library(isonoi)
library(sf)
x = net_oldenburg_raw
points = points_oldenburg
grid = iso_grid(x)
plot(grid, border = ""grey"")
plot(sf::st_geometry(x), add = TRUE)
plot(points, col = ""red"", add = TRUE, pch = 18, cex = 2)
#> Warning in plot.sf(points, col = ""red"", add = TRUE, pch = 18, cex = 2):
#> ignoring all but the first attribute
```

![](README_files/figure-gfm/inputs-1.png)<!-- -->

The 3 figures below show outputs from the packages next to the standard
voronoi diagram.

``` r
library(tmap)
poly = sf::st_convex_hull(sf::st_union(x))
vnoi = iso_vnoi(points, poly)
#> Warning in st_voronoi.sfc(sf::st_union(points), poly): st_voronoi does not
#> correctly triangulate longitude/latitude data
#> Warning: attribute variables are assumed to be spatially constant throughout
#> all geometries
vgrid = iso_vgrid(points, grid)
#> lon-lat points
net = sfnetworks::as_sfnetwork(x)
vsfn = iso_sfn(points, net, grid)
#> lon-lat points
#> lon-lat points
#> Warning: st_centroid assumes attributes are constant over geometries
#> lon-lat points
#> Warning in shortest_paths(x, from, to, weights = weights, output = ""both"", : At
#> core/paths/dijkstra.c:446 : Couldn't reach some vertices.
#> lon-lat points
#> Warning in shortest_paths(x, from, to, weights = weights, output = ""both"", : At
#> core/paths/dijkstra.c:446 : Couldn't reach some vertices.
#> lon-lat points
#> Warning in shortest_paths(x, from, to, weights = weights, output = ""both"", : At
#> core/paths/dijkstra.c:446 : Couldn't reach some vertices.
#> lon-lat points
#> Warning in shortest_paths(x, from, to, weights = weights, output = ""both"", : At
#> core/paths/dijkstra.c:446 : Couldn't reach some vertices.
#> lon-lat points
#> Warning in shortest_paths(x, from, to, weights = weights, output = ""both"", : At
#> core/paths/dijkstra.c:446 : Couldn't reach some vertices.
#> lon-lat points
#> Warning in shortest_paths(x, from, to, weights = weights, output = ""both"", : At
#> core/paths/dijkstra.c:446 : Couldn't reach some vertices.
#> lon-lat points
#> Warning in shortest_paths(x, from, to, weights = weights, output = ""both"", : At
#> core/paths/dijkstra.c:446 : Couldn't reach some vertices.
#> lon-lat points
#> Warning in shortest_paths(x, from, to, weights = weights, output = ""both"", : At
#> core/paths/dijkstra.c:446 : Couldn't reach some vertices.
#> lon-lat points
#> Warning in shortest_paths(x, from, to, weights = weights, output = ""both"", : At
#> core/paths/dijkstra.c:446 : Couldn't reach some vertices.
#> lon-lat points
#> Warning in shortest_paths(x, from, to, weights = weights, output = ""both"", : At
#> core/paths/dijkstra.c:446 : Couldn't reach some vertices.
#> lon-lat points
#> Warning in shortest_paths(x, from, to, weights = weights, output = ""both"", : At
#> core/paths/dijkstra.c:446 : Couldn't reach some vertices.
#> lon-lat points
#> Warning in shortest_paths(x, from, to, weights = weights, output = ""both"", : At
#> core/paths/dijkstra.c:446 : Couldn't reach some vertices.
#> lon-lat points
#> Warning in shortest_paths(x, from, to, weights = weights, output = ""both"", : At
#> core/paths/dijkstra.c:446 : Couldn't reach some vertices.
#> lon-lat points
#> Warning in shortest_paths(x, from, to, weights = weights, output = ""both"", : At
#> core/paths/dijkstra.c:446 : Couldn't reach some vertices.
#> lon-lat points
#> Warning in shortest_paths(x, from, to, weights = weights, output = ""both"", : At
#> core/paths/dijkstra.c:446 : Couldn't reach some vertices.
#> lon-lat points
#> Warning in shortest_paths(x, from, to, weights = weights, output = ""both"", : At
#> core/paths/dijkstra.c:446 : Couldn't reach some vertices.
#> lon-lat points
#> Warning in shortest_paths(x, from, to, weights = weights, output = ""both"", : At
#> core/paths/dijkstra.c:446 : Couldn't reach some vertices.
#> lon-lat points
#> Warning in shortest_paths(x, from, to, weights = weights, output = ""both"", : At
#> core/paths/dijkstra.c:446 : Couldn't reach some vertices.
#> lon-lat points
#> Warning in shortest_paths(x, from, to, weights = weights, output = ""both"", : At
#> core/paths/dijkstra.c:446 : Couldn't reach some vertices.
#> Joining with `by = join_by(name)`
m1 = tm_shape(vnoi) + tm_fill(""name"")
m2 = tm_shape(vgrid) + tm_fill(""name"")
m3 = tm_shape(vsfn) + tm_fill(""name"")
tmap_arrange(m1, m2, m3, nrow = 1)
#> Some legend labels were too wide. These labels have been resized to 0.24, 0.62, 0.29. Increase legend.width (argument of tm_layout) to make the legend wider and therefore the labels larger.
#> Some legend labels were too wide. These labels have been resized to 0.24, 0.62, 0.29. Increase legend.width (argument of tm_layout) to make the legend wider and therefore the labels larger.
#> Some legend labels were too wide. These labels have been resized to 0.24, 0.62, 0.29. Increase legend.width (argument of tm_layout) to make the legend wider and therefore the labels larger.
```

![](README_files/figure-gfm/outputs-1.png)<!-- -->
",12,12,1,3,transportation,"[economics, geospatial, route-network, transportation, transportation-planning, voronoi, voronoi-diagram]",00000
98,cepta,bptlab,bptlab,https://github.com/bptlab/cepta,https://api.github.com/repos/bptlab/cepta,CEPTA - Complex Event Processing Transportation Analysis,"<p align=""center"">
  <img style=""display:inline-block"" width=""400px"" src=""https://user-images.githubusercontent.com/19370911/80150874-706f2e80-85b9-11ea-92e8-2a4bf79c0314.png"">
</p>

CEPTA - Complex Event Processing Transportation Analysis

[![Build Status](https://travis-ci.com/bptlab/cepta.svg?branch=master)](https://travis-ci.com/bptlab/cepta)
![GitHub](https://img.shields.io/github/license/bptlab/cepta)
[![Release](https://img.shields.io/github/release/bptlab/cepta)](https://github.com/bptlab/cepta/releases/latest)

The open-source *CEPTA* project aims to examine the applicability of
modern (complex) event processing 
techniques in the context of intermodal transportation.
The project is under active development and will regularly 
push updates to the [demo instance](https://bpt-lab.org/cepta).

For more information, see [bptlab.github.io/cepta/](https://bptlab.github.io/cepta/).

![Screenshot](web/images/screenshot-light.png)

#### Building
To build all executables of the entire project:
```bash
bazel build //:cepta
```
To build only a specific module or executable:
```bash
bazel build //auxiliary/producers/replayer  # Example
```

#### Running
To run a specific executable:
```bash
bazel run //auxiliary/producers/replayer -- --port 8080  # Example
```
To run mutiple specific executables (prevents locking) use run.sh instead of bazel run:
```bash
./run.sh //auxiliary/producers/replayer -- --port 8080  # Example
```



#### Testing
```bash
bazel test :all
bazel test //core:core-tests  # Only test core
``` 

#### Deployment
The project uses `docker` and `docker-compose` for deployment.
For instructions see `docs/deployment/dev.md` or `docs/deployment/prod.md` respectively.

Summary: 
To run the latest production version, run 
```bash
CEPTA_VERSION=""v0.5.0"" docker-compose -f deployment/prod/docker-compose.yml up
```

To build and run the latest development version, run 
```bash
BUILD=1 ./deployment/dev/devenv.sh up
```

To run specific containers (single or multiple) run:
```bash
./deployment/dev/devenv.sh up args...
```

The containers that can be used as args can be found in /deployment/dev/compose for example: envoy

Have you never build the docker images before than run following instead:
```
BUILD=1 ./deployment/dev/devenv.sh up args...
```

#### Deployment on Mac
Seeing an error like this while starting the docker container:  
`standard_init_linux.go:211: exec user process caused ""exec format error""`

MacOs needs a slight configuration to the build stage. The docker images that are build with bazel have to be build for linux to run in the docker environment. Therefore you have to build the images like this: 

```
bazel run //osiris/usermgmt:build-image --platforms=@io_bazel_rules_go//go/toolchain:linux_amd64
```
",12,12,7,29,transportation,"[cep, flink, kafka, monitoring, real-time, transportation]",00000
99,rdt-infoplus-dvs,rijdendetreinen,rijdendetreinen,https://github.com/rijdendetreinen/rdt-infoplus-dvs,https://api.github.com/repos/rijdendetreinen/rdt-infoplus-dvs,Backend for departure times in InfoPlus DVS (Dutch standard),"# This project has been abandonded, switch to [GoTrain](https://github.com/rijdendetreinen/gotrain)

### This project has been abandonded. Please switch to [GoTrain](https://github.com/rijdendetreinen/gotrain) for a modern implementation in Go which processes InfoPlus data, including arrivals and service details (RITinfo)

InfoPlus DVS daemon
===================

This is a Python daemon for receiving and parsing InfoPlus DVS messages. InfoPlus DVS is a message service from the [Dutch Railways](http://www.ns.nl/) containing live departure times. This application is for now only available in Dutch, therefore the rest of this this document will also be in Dutch. Feel free to request more information if you are interested in this project.

----

Dit is een Python daemon voor het ontvangen en verwerken van InfoPlus DVS-berichten. InfoPlus DVS is een dienst van [NS](http://www.ns.nl/) met berichten voor actuele vertrektijden. De borden met actuele vertrektijden op de stations gebruiken dezelfde brongegevens die met deze applicatie verwerkt kunnen worden.

Deze applicatie wordt sinds december 2013 stabiel gebruikt door de app en website van [Rijden de Treinen](http://www.rijdendetreinen.nl/) (zie voor een implementatie op basis van deze daemon de [actuele vertrektijden](http://vertrektijden.rijdendetreinen.nl/)).

Deze applicatie kan gekoppeld worden aan [rdt-serviceinfo](https://github.com/geertw/rdt-serviceinfo): het kan injecties ontvangen om bussen en buitenlandse treinen
toe te voegen aan de feed, en de http-interface van rdt-infoplus-dvs kan de route van een trein verrijken met aankomst- en vertrektijden uit rdt-serviceinfo.

InfoPlus DVS
------------

**InfoPlus** is een project van NS voor het verbeteren van digitale reisinformatie. **DVS** staat voor Dynamische Vertrek Staten. DVS-berichten zijn uitgebreide XML-documenten met daarin per trein de vertrektijd, eindbestemming, tussenstations, eventuele vertraging, wijzigingen, en meer belangrijke informatie. De uitgebreide specificatie van deze berichten is te vinden op de website van het NDOV-loket: [InfoPlus DVS-standaard](https://ndovloket.nl/helpdesk/kb/31/).

Je kunt een aansluiting krijgen op InfoPlus DVS via het [NDOV-loket](https://www.ndovloket.nl/). Meer informatie hierover is te vinden op de website van het NDOV-loket, een aansluiting geeft meteen ook toegang tot veel meer actuele ov-informatie in Nederland.

Het NDOV-loket ontsluit de gegevens via [ZeroMQ](http://zeromq.org/). Je kunt de DVS daemon rechtstreeks aansluiten op de ZMQ-server van het NDOV-loket of via de [universal sub-pubsub proxy](https://github.com/StichtingOpenGeo/universal); het laatste wordt aanbevolen. Door DVS worden dagelijks ca. 170.000 berichten afgeleverd; een eigen sub-pubsub maakt het mogelijk om efficiënt en binnen je eigen netwerk deze data te distribueren.

Installatie en werking
======================

Deze daemon is getest op Debian en Ubuntu.  
Requirements:

* Python 2
* python-bottle (HTTP interface)
* python-isodate
* python-lxml
* python-tz
* python-yaml
* python-zmq


Docker
------

In deze repository zijn twee Dockerfiles aanwezig, één voor de DVS server en één voor de HTTP API (deze bevindt zich in Dockerfile.api). In de Docker containers worden alle vereiste libraries automatisch geïnstalleerd.

Installatie
-----------

1. Clone deze repository (directory naar keuze)
2. Kopieer in config/ het bestand `dvs-server.yaml.dist` naar `dvs-server.yaml`, en `http.yaml.dist` naar `http.yaml`.
3. Pas de instellingen in deze bestanden aan
4. Start de DVS daemon met `./dvs-daemon.py`

Iedere minuut wordt de systeemstatus op de terminal gelogd. In deze logmelding wordt tevens het aantal treinen gelogd. Dit aantal zou na het opstarten steeds verder op moeten lopen.

### Configuratie

Standaard bevat dvs-server.yaml de volgende elementen:

```
---
bindings:
    dvs_server: tcp://12.34.56.78:8100
    client_server: tcp://0.0.0.0:8120
    injector_server: tcp://0.0.0.0:8140

logging:
    log_config: config/logging.yaml
...

```

Belangrijk is dat hier de juiste gegevens worden ingevuld:

* **dvs_server:** De ZeroMQ-bronserver (van NDOVloket of eigen pub-subpub server)
* **client_server:** lokale ip-adres en poortnummer voor de dvs-daemon.  
  Deze interface wordt aangesproken door dvs_http.py/wsgi en dvs_dump.py.  
  0.0.0.0 betekent alle interfaces op het systeem.
* **injector_server:** lokale ip-adres en poortnummer van de injector interface.
  De injectorinterface is voor het injecteren van extra trein/busritten (bijvoorbeeld van treinvervangend vervoer bij werkzaamheden). De module om deze informatie uit de statische NS-dienstregeling te lezen en te injecteren is nog niet open-source. 

De interface die je bij `client_server` instelt is ook de interface waar andere tools zoals dvs_dump.py verbinding mee maken.

Gebruik
-------

Wanneer de daemon actief is kan deze rechtstreeks via ZMQ bevraagd worden. Zowel een commandline tool (dvs-dump.py) als een HTTP interface zijn standaard beschikbaar in dit project.

Om vertrektijden uit te kunnen lezen moet je het volgende doen:

1. Start de dvs-daemon.py om vertrektijden te ontvangen en te verwerken.
2. Controleer via de console-output of de logfiles of dvs-daemon berichten ontvangt. Iedere minuut wordt de systeemstatus gelogd.
3. Met dvs-dump.py kun je via de CLI de dvs-daemon bevragen (zie hieronder). Met dvs-http.py start je een HTTP webserver die een REST interface aanbiedt en JSON teruggeeft (zie hieronder).

Houd er rekening mee dat de database met vertrektijden zich langzaam vult na het starten: pas na 70 minuten is de database volledig geladen voor alle stations.

### dvs-dump.py

Met de tool `dvs-dump.py` kan de systeemstatus bevraagd worden en kunnen opdrachten naar de DVS server verstuurd worden. Enkele voorbeelden:

**Status opvragen**

```
$ ./dvs-dump.py status
DVS server: tcp://127.0.0.1:8120
Opdracht:   status
------------------

{   'down_since': datetime.datetime(2014, 4, 21, 23, 28, 34, 956069),
    'recovering_since': None,
    'status': 'UNKNOWN'}
Opdracht uitgevoerd binnen 0.0s
```

**Aantal verwerkte berichten**

```
$ ./dvs-dump.py count/msg
DVS server: tcp://127.0.0.1:8120
Opdracht:   count/msg
---------------------

86
Opdracht uitgevoerd binnen 0.0s
```

**Vertrektijden voor een station**

```
$ ./dvs-dump.py station/ns
DVS server: tcp://127.0.0.1:8120
Opdracht:   station/ns
----------------------

{   'data': {   '5683': <Trein SPR   5683 v2014-04-21 23:47:00+02:00 +0:05:29 NS   [1] -- [<station ZL Zwolle>]>},
    'status': {   'down_since': datetime.datetime(2014, 4, 21, 23, 28, 34, 956069),
                  'recovering_since': None,
                  'status': 'UNKNOWN'}}
Opdracht uitgevoerd binnen 0.03s
```

**Alle vertrektijden opvragen**

```
$ ./dvs-dump.py store/station
DVS server: tcp://127.0.0.1:8120
Opdracht:   store/station
-------------------------

{   'AH': {   '3083': <Trein IC    3083 v2014-04-21 23:34:00+02:00 +0:00:00 AH   [8] -- [<station NM Nijmegen>]>},
    'EDC': {   '31372': <Trein ST   31372 v2014-04-21 23:29:00+02:00 +0:00:00 EDC  [1] -- [<station AMF Amersfoort>]>},
    'NS': {   '5683': <Trein SPR   5683 v2014-04-21 23:47:00+02:00 +0:05:29 NS   [1] -- [<station ZL Zwolle>]>},
    'PT': {   '5683': <Trein SPR   5683 v2014-04-21 23:30:00+02:00 +0:06:50 PT   [1] -- [<station ZL Zwolle>]>},
    'SOG': {   '32083': <Trein ST   32083 v2014-04-21 23:27:00+02:00 +0:00:00 SOG  [1] -- [<station KRD Kerkrade Centrum>]>},
    'SWD': {   '37677': <Trein ST   37677 v2014-04-21 23:33:00+02:00 +0:01:07 SWD  [2] -- [<station RD Roodeschool>]>,
               '37790': <Trein ST   37790 v2014-04-21 23:27:00+02:00 +0:00:00 SWD  [1] -- [<station GN Groningen>]>},
    'VST': {   '5789': <Trein SPR   5789 v2014-04-21 23:27:00+02:00 +0:00:00 VST  [4] -- [<station WP Weesp>]>},
    'WZ': {   '5683': <Trein SPR   5683 v2014-04-21 23:59:00+02:00 +0:04:33 WZ   [1] -- [<station ZL Zwolle>]>}}
Opdracht uitgevoerd binnen 0.02s
```

Het is mogelijk om de host en poort aan te passen met de parameters `--server` en `--port`.

### HTTP interface

RDT infoplus-dvs biedt een REST API aan voor het opvragen van vertrektijden en ritdetails. De API is beschreven in het document [HTTP interface](doc/http-interface.md) en in de [OpenAPI definitie](doc/http-interface.yaml).

De HTTP interface kan voor ontwikkeldoeleinden gestart worden met de tool `dvs-http.py`. Deze tool start een [Bottle](http://bottlepy.org/docs/dev/index.html) ontwikkelserver op http://localhost:8080/ (of optioneel op een andere host/poort-combinatie). Voor productiedoeleinden kun je de WSGI-koppeling in `dvs-http.wsgi` gebruiken.

De HTTP-interface kan op een andere server draaien dan de daemon zelf. Optioneel kan de HTTP-interface gekoppeld worden aan [rdt-serviceinfo](https://github.com/geertw/rdt-serviceinfo) voor het verrijken van de routestops met vertrek- en aankomsttijden, en voor het opvragen van ritten die niet (meer) in DVS zitten.

Aandachtspunten
---------------

Na de eerste keer opstarten zal het systeem de eerste ~80 minuten rapporteren dat het systeem niet UP is. De eerste tien minuten wordt informatie verzameld voor downtime-detectie, na tien minuten zal het systeem vaststellen dat het aan het herstellen is van downtime (status RECOVERING). Aangezien binnen DVS een tijdvenster van 70 minuten wordt aangehouden duurt het op dat moment nog 70 minuten totdat het systeem zichzelf als ongestoord meldt (status UP).

Het is mogelijk om het systeem op te starten met de gegevens die in het geheugen geladen waren tijdens het afsluiten. Start dan met:  
`dvs-daemon.py --lt --ls`

Het geheugengebruik kan, afhankelijk van het aantal DVS-berichten en het aantal requests, oplopen tot ca. 500 MB.

In de directory /logs/ worden logfiles bijgehouden. De logfiles worden automatisch gerotate worden wanneer ze groter dan 10MB groeien.

Koppeling met Munin en/of Nagios als monitoringsysteem is mogelijk; zie de directory /contrib/ voor een aantal voorbeelchecks.

Ontwikkeling
============

Deze applicatie is ontwikkeld in Python. Verbeteringen of uitbreidingen zijn van harte welkom! Ook wanneer je niet mee wilt ontwikkelen, maar in het gebruik wel bugs of andere problemen ervaart, kun je meehelpen door een issue aan te maken. Zie het document [Contributing](CONTRIBUTING.md) voor meer informatie.

Licentie
========

Deze applicatie wordt vrij verspreid op basis van de GNU General Publice License (GPL) versie 3.

Een belangrijke voorwaarde van de GNU GPL-licentie is dat je de broncode van de applicatie deelt
wanneer je wijzigingen of toevoegingen maakt op basis van deze applicatie.
Zie het bestand LICENSE.txt voor de volledige versie van deze licentie.

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.

Contact
=======

Voor vragen of opmerkingen:

Geert Wirken  
info@rijdendetreinen.nl  
http://www.rijdendetreinen.nl/  
http://twitter.com/djiwie
",12,12,3,0,transportation,"[open-data, python, transportation, zeromq]",00000
100,maas.guide,maas-alliance,maas-alliance,https://github.com/maas-alliance/maas.guide,https://api.github.com/repos/maas-alliance/maas.guide,Guidebook to help Mobility as a Service providers.,"# MaaS Guide _\(alpha\)_

Guidebook to help Mobility as a Service \(MaaS\) providers.

One of the principle goals of the Mobility as a Service movement is to build a **unified marketplace** of transportation options, so that people can travel freely while experiencing a **simple and consistent user experience**.

It is the **user oriented approach** that distinguishes MaaS from other related concepts, such as multi-modality.

## Goal

This guide is intended as a high-level overview of the key aspects needed to sustain a MaaS ecosystem. Each key concept is outlined on 1-2 pages, in plain language with links for further reading.

## Intended audience

This book is intended for stakeholders in transportation and MaaS providers. It offers a conceptual and practical framework that can be shared by managers, planners, developers, and even end users of transportation and mobility services.

## Attribution

This work is provided by the [MaaS Alliance](https://maas-alliance.eu/), a public-private partnership creating the foundations for a common approach to MaaS, unlocking the economies of scale needed for successful implementation and take-up of MaaS in Europe and beyond. MaaS Guidebook is built and maintained on voluntary basis by MaaS Alliance's working group Technology and standards. The Guidebook is currently in very early phase.

",12,12,7,4,transportation,"[bus, car-rental, car-sharing, mobility, mobility-as-a-service, mobility-concepts, public-transport, public-transportation, subway, taxi, train, tram, transport, transportation]",00000
101,home-assistant-resrobot,TekniskSupport,N/A,https://github.com/TekniskSupport/home-assistant-resrobot,https://api.github.com/repos/TekniskSupport/home-assistant-resrobot,Get departure times for swedish public transportation,"# home-assistant-resrobot

[![hacs_badge](https://img.shields.io/badge/HACS-Default-orange.svg?style=for-the-badge)](https://github.com/hacs/integration)

For inscructions see [info.md](info.md)
",12,12,1,2,transportation,"[bus, ferry, hacs, homeassistant, iesus, integration, public, sweden, train, tram, transportation]",00000
102,dpd,davidbailey,N/A,https://github.com/davidbailey/dpd,https://api.github.com/repos/davidbailey/dpd,A Python Transportation Toolkit,"# dpd

[![Build Status](https://github.com/davidbailey/dpd/actions/workflows/main.yml/badge.svg)](https://github.com/davidbailey/dpd/actions/workflows/main.yml)
[![Coverage Status](https://coveralls.io/repos/github/davidbailey/dpd/badge.svg?branch=trunk)](https://coveralls.io/github/davidbailey/dpd?branch=trunk)
[![Documentation Status](https://readthedocs.org/projects/dpd/badge/?version=latest)](https://dpd.readthedocs.io/en/latest/?badge=latest)
[![Code style: black](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/psf/black)

dpd is a growing library of transportation-related tools sorted into submodules. Please let me know if you find these tools useful or interesting.

* Analysis - The starting point is a decision - made up of one or more alternatives (e.g. Should we build a train, bus, bike path, or nothing?). Each alternative is made up of one or mote activities (e.g. design, build, operations, maintenance) which each have a start time, end time, cost, and benefit. The alternative class has the ability to compute a benefit-cost ratio, plot cash flow diagrams and create timelines. The decision class compares alternatives via multiple-criteria analysis. These tools show the relative merits (pros and cons) for each alternative. E.g. [Analysis](https://dpd.readthedocs.io/en/latest/notebooks/analysis.html)

The two primary sources for cost/benefit information are Driving and Modeling.

* Driving - Driving includes a route class to describe the physical geometry a transportation route (air, sea, road, or rail). A route has stops which can be used to calculate accessibility. A route can be driven to generate a trip (a time-indexed geometric series). A trip can be expanded to create a schedule. All of these classes relate closely to GTFS data structures. As mentioned, routes, trips, schedules, etc. all have design/build/operations/maintenance costs/benefits/timelines. The general idea is the user should be able to click on a few points, select a vehicle, and the class should output a cost estimate and timetable. E.g. [Driving](https://dpd.readthedocs.io/en/latest/notebooks/driving.html)

* Modeling - Modeling contains an Agent-based Transportation Model and a Four-step Transportation Model. These models should be able to answer questions about transportation supply and demand. They should also be able to answer second level questions about safety, equity, pollution, etc. E.g. [Agent-based Transportation Model](https://dpd.readthedocs.io/en/latest/notebooks/agent-based_transportation_model.html), [Four-step Transportation Model](https://dpd.readthedocs.io/en/latest/notebooks/four_step_transportation_model.html), and [Gravity Model](https://dpd.readthedocs.io/en/latest/notebooks/gravity_model.html)

There are also several supporting submodules that can be used by the above modules and can be used on their own.

* Folium - an example [Folium Flask App](https://dpd.readthedocs.io/en/latest/notebooks/folium_flask_app.html)
* Geometry - functions for computing geometric operations and classes for storing geometric objects: [Geometry](https://dpd.readthedocs.io/en/latest/notebooks/geometry.html)
* Mechanics - a class for modeling a kinematic body - this is used by both Driving and Modeling
* Geopandas - functions for working with geopandas GeoDataFrames
* Mapping - classes for creating a map. E.g. [Agent-based Transportation Model](https://dpd.readthedocs.io/en/latest/notebooks/agent-based_transportation_model.html)
* Open Source Routing Machine (OSRM) - functions to interact with an OSRM server
* OpenStreetMap (OSM) - a class for downloading relations, ways, and nodes from OpenStreetMap and a class for creating a map object.
* Shapely - functions for working with shapely geometries
* US Census -  functions for gathering data from the US Census. E.g. [Density and public transportation](https://dpd.readthedocs.io/en/latest/notebooks/density_and_public_transportation.html) and [Four-step Transportation Model](https://dpd.readthedocs.io/en/latest/notebooks/four_step_transportation_model.html)
* Utils - utility functions used by other submodules
* Werkzeug - a class to run a Werkzeug server in a thread.
* Wikipedia - functions for gathering data from Wikipedia. E.g. [Wikipedia](https://dpd.readthedocs.io/en/latest/notebooks/wikipedia.html)

Installation
--------

```bash
sudo apt install python3-dev libproj-dev proj-data proj-bin libgeos-dev gdal-bin libgdal-dev
pip install git+https://github.com/davidbailey/dpd.git
```

Documentation
--------

Documentation is available at https://dpd.readthedocs.io/en/latest/.
",12,12,5,2,transportation,"[census-api, folium, geopandas, gtfs, openstreetmap, osrm, overpass, pandas, python, transportation]",00000
103,TMoneyCardBalanceChecker,happybono,N/A,https://github.com/happybono/TMoneyCardBalanceChecker,https://api.github.com/repos/happybono/TMoneyCardBalanceChecker,"Tapping the 'Tmoney' card to the NFC module displays the remaining balance on the OLED screen, offers the most intuitive way to check the balance on the card.","# TMoneyCardBalanceChecker (후불 교통 카드 잔액 확인기)
Tapping the '[Tmoney](https://www.tmoney.co.kr/aeb/main/main/readMain.dev)' card to the NFC module displays the remaining balance on the OLED screen, offers the most intuitive way to check the balance on the card.
<br>
<div align=""center"">
<img alt=""GitHub Last Commit"" src=""https://img.shields.io/github/last-commit/happybono/TMoneyCardBalanceChecker""> 
<img alt=""GitHub Repo Size"" src=""https://img.shields.io/github/repo-size/happybono/TMoneyCardBalanceChecker"">
<img alt=""GitHub Repo Languages"" src=""https://img.shields.io/github/languages/count/happybono/TMoneyCardBalanceChecker"">
<img alt=""GitHub Top Languages"" src=""https://img.shields.io/github/languages/top/HappyBono/TMoneyCardBalanceChecker"">
</div>

## What's New
<details>
<summary>Click to Expand</summary>
  
### v1.0
#### January 03, 2021
>[Initial release.](https://github.com/happybono/TMoneyCardBalanceChecker/commit/fec9bfa518c8a4e4afe6bc7d3de6c8143084da48)

#### January 05, 2021
>[Added README.md](https://github.com/happybono/TMoneyCardBalanceChecker/commit/ea930c71896c7cd582c2e9f4dfeed69acf5db815) </br> </br>
>[Comments have added to each function in the source code.](https://github.com/happybono/TMoneyCardBalanceChecker/commit/74afa73fddc93052ed60340b95d96530603bea3d#diff-87f942957af3e245df937cc59e8e84242eb4c3a3b22ce052b06e2693e99a277e)

#### January 11, 2021
>[Updated README.md](https://github.com/happybono/TMoneyCardBalanceChecker/commit/187703a582d8e7e7d24195178be22c34e3c03d52)

### v2.0
#### January 19, 2021
>[Displays more information (Serial number, Date issued, Card type) on the OLED Screen.](https://github.com/happybono/TMoneyCardBalanceChecker/blob/main/K-TransitCardBalance.ino)

#### December 16, 2021
>[Bugs fixed related to the classification of cards.](https://github.com/happybono/TMoneyCardBalanceChecker/blob/main/K-TransitCardBalance.ino)

### v3.0
#### February 3, 2022
> [Supports beep sound using the piezo buzzer.](https://github.com/happybono/TMoneyCardBalanceChecker/blob/main/K-TransitCardBalance.ino)</br> </br>
> [Supports notification lights using the dedicated LED on the ESP8266 chipset.](https://github.com/happybono/TMoneyCardBalanceChecker/blob/main/K-TransitCardBalance.ino)</br> </br>
> [Displays error messages about undetectable cards on the OLED display.](https://github.com/happybono/TMoneyCardBalanceChecker/blob/main/K-TransitCardBalance.ino)</br>

#### February 8, 2022
> [Bugs fixed.](https://github.com/happybono/TMoneyCardBalanceChecker/blob/main/K-TransitCardBalance.ino)</br>
</details>

## Specifications
### Scenarios
- Tapping the card to the NFC module displays the remaining balance and other information retrieved from it on the OLED screen.

![Tmoney.png](TMoney.png) <br><br><br><br>
![GIT_TMoneyBalCkr_Screenshots.png](GIT_TMoneyBalCkr_Screenshots.png)

### Cards Supported 
- T-Money Cards
- EB Card (Cash-Bee) Cards

### Cards Not Supported
- RailPlus Cards
- Hanpay Cards

### Connections
- 1 x Micro-USB

### Wireless
#### Wi-Fi
- IEEE 802.11 b/g/n Wi-Fi technology.
- **Not required to use the Wi-Fi capability** for this project.

#### NFC (Near Field Communication)
- MIFARE 1k, 4k, Ultra light, and DESFIRE cards, **ISO/IEC 14443-4 cards such as CD97BX**, CD light, DESFIRE, P5CN072 (SMX),  INNOVISION Jewel cards such as IRT5001 card, FELICA cards such as RCS_860 and RCS_854
- **Built-in PCB Antenna, with 5 cm to 7 cm communication distance.**
- Host communication : **SPI Interface**
- Operating temperature : **-30ºC to +85ºC**
- **Contactless communication at 13.56MHz**


### Battery life 
* **Up to 9.5 hours (9 hours and 30 minutes)** of typical device usage.
* Testing consisted of **full-time active use** until complete battery discharge. 
* **Wi-Fi** was **not connected to any network**.
* **Dedicated LED indicators on the ESP8266 chipset have been disabled** until the battery is completely exhausted.
* Battery life may vary significantly with settings, usage and other factors.

## Schematics
![TMoney-Checker-Schematics.png](GIT_TMoneyBalCkr_SCHEM.png)

## Apparatus (Equipment)
### Platform
* NodeMCU ESP8266-12E

### PN532 NFC / RFID Controller
* Soldering required.
* Connection Type : SPI
* D4 : SS of PN532
* D5 : TX of PN532
* D6 : MISO of PN532
* D7 : MOSI of PN532
* GND : GND of PN532
* VIN : VCC of PN532

### 0.96"" SSD1306 I2C OLED Display 
* Soldering required
* D2 : Data, D1 : Clock

### A-song Y25 Portable Battery
* USB Port : Power
* Micro-USB : Charging Port
* Dimension : 63.3 mm (W) × 90.7 mm (D) × 13.0 mm (H)
* Input : DC-5V / 2A (Micro 5-pin)
* Output : DC-5V / 2A (2 USB ports)
* Capacity : 5,000 mAh

## Features
* Tapping the 'Tmoney' card to the NFC module displays the remaining balance on the OLED screen.
> The 'Tmoney' card is a rechargeable smart card that can be used to pay public transit fares in the Seoul-Gyeonggi areas as well in other cities around Korea (bus, underground/metro, taxi) as well as purchases in designated areas. The 'Tmoney' card can be used to pay subway and bus and taxi travel.

<div align=""center"">
<img src=""https://github.com/happybono/TMoneyCardBalanceChecker/blob/main/CI_Eng_H_Color_G.jpg"" width=17% height=17%>
</div>

## Outcome Demonstration
[![Demonstration Video for the TMoneyCard Balance Checking Device.](https://videoapi-muybridge.vimeocdn.com/animated-thumbnails/image/be0ed0fa-f45e-481f-8d3a-3d58d6cc6ff8.gif?ClientID=vimeo-core-prod&Date=1643800587&Signature=637a870c4dee1dccfcde7f0df2b821409c6d74a8)](https://vimeo.com/672699790 ""Outcome Demonstration - Click to Watch!"")

## Libraries Used
### Adafruit-PN532
This is a library for the Adafruit-PN532 NFC / RFID breakout boards This library works with the Adafruit NFC breakout.
https://github.com/adafruit/Adafruit-PN532

### SSD1306 (0.96"") OLED Display
This is a driver for SSD1306 128x64, 128x32, 64x48 and 64x32 OLED displays running on the Arduino/ESP8266 & ESP32 and mbed-os platforms. Can be used with either the I2C or SPI version of the display.
https://www.github.com/ThingPulse/esp8266-oled-ssd1306

## Copyright / End User License
### Copyright
Copyright ⓒ HappyBono 2021 - 2023. All rights Reserved.

### MIT License
Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the ""Software""), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

## Contact Information
[Jaewoong Mun](mailto:happybono@outlook.com)

## References
* Hyunwoo Nam, Byunggeun Jang, Youngwook Park, 2012, A Design of Card Processing Method based on Script File for AFC Terminal, KoreaScience, Journal of The Korea Society of Computer and Information (JKSCI), viewed 5 January 2021, https://www.koreascience.or.kr/article/CFKO201202135240043.pdf.


* Chaeum Co., Ltd. (주식회사 채움씨앤아이), 2014, A study on adding the function of a national compatible transportation card to the Book Yieum Pass (Public Library Cards), Ministry of Culture, Sports and Tourism, 공공누리 자료집, viewed 7 January 2021, http://www.codil.or.kr/filebank/original/RK/OTKCRK170036/OTKCRK170036.pdf.
",11,11,1,0,transportation,"[arduino, bus, cardbalance, cplusplus, esp12-e, esp12e, esp8266-esp-12e, iot-platform, metrocard, nfc, pn532, rfid, ssd1306, ssd1306-oled, subway, tmoney-card, transportation]",00000
104,PublicTransportNetworks,FOR2083,FOR2083,https://github.com/FOR2083/PublicTransportNetworks,https://api.github.com/repos/FOR2083/PublicTransportNetworks,"The grid dataset, provided by DFG research unit FOR2083","# Public Transport Networks
Public Transport Networks is a networks repository for public transport research. It provides networks as test instances for the following types of problems:
  - Public transport network design problem (NDP)
  - Public transport vehicle and crew scheduling
  - Public transport networks with disturbances
  - Public transport assignment
  - Handling of ridesharing trips

# How the Data is Organized

Each individual network and related files is stored in a separate folder. Each folder contains the following subfolders:
  - Input: provides data describing the transport supply (nodes, stops, links, running times)  and data describing the travel demand (traffic zones, trips between traffic zones)
  - Solution_NDP_Summary: Overview of all solutions for the Network Design Problem
  -	Solution_NDP_Name: Description of a particular solution for the Network Design Problem 
  
# License 

The current data sets are a result of the research project ""[FOR 2083: Integrated Planning For Public Transportation](https://for2083.math.uni-goettingen.de/en/project)"" funded by the German Research Association DFG. Data sets are for academic research purposes only. Users are fully responsible for any results or conclusions obtained by using these data sets. Users must indicate the source of any dataset they are using in any publication that relies 
on any of the datasets provided in this web site.  The Research Group FOR 2083 is not responsible for the content of the data sets. Agencies, organizations, institutions and individuals acknowledged in this web site for their contribution to the datasets are not responsible for the content or the correctness of the datasets.

# Summary of Networks

| Network                                            | Zones | Links  | Nodes  | Stops  |
| ---                                                | ---   | ---    | ---    | ---    |
| Grid 5x5                                           |    25 |     80 |     25 |     25 |
| Grid 21x21                                         |   100 |   1680 |    441 |    341 |
| Ring 8x11                                          |   161 |    640 |    161 |    161 |
| Ring 16x22                                         |   672 |   6720 |   2689 |    673 |
| SiouxFalls                                         |    24 |     76 |     24 |     74 |
| Erding											                       |    52 |    146 |     52 |     52 |
| Stuttgart                                          |   588 |   1436 |    577 |    577 |

# Formats
The  data is provided in the following formats
  - text-format [LimTim](https://lintim.math.uni-goettingen.de/index.php?go=main.php&lang=en)
  - text-format [VISUM](http://vision-traffic.ptvgroup.com/en-us/products/ptv-visum/)
  - spreadsheet-format (.xls)
  - binary-format [VISUM](http://vision-traffic.ptvgroup.com/en-us/products/ptv-visum/)
  

# Other Related Projects
- [LinTim](https://lintim.net/)
- [Transportation Networks](https://github.com/bstabler/TransportationNetworks)
",11,11,2,0,transportation,"[dataset, lintim, public-transport, public-transportation, transportation, transportation-network, visum]",00000
105,fahrpreis-plotter,thigg,N/A,https://github.com/thigg/fahrpreis-plotter,https://api.github.com/repos/thigg/fahrpreis-plotter,Plot fahrpreise of Deutsche Bahn over time for a connection,"{'message': 'Not Found', 'documentation_url': 'https://docs.github.com/rest/repos/contents#get-repository-content'}",11,11,1,1,transportation,"[api, deutsche-bahn, plot, transit, transport, transportation]",00000
106,driving-time-heatmap,liddiard,N/A,https://github.com/liddiard/driving-time-heatmap,https://api.github.com/repos/liddiard/driving-time-heatmap,"Input an origin point, generate a heatmap of driving times to surrounding areas at different times of day. 🚗 ⏱ 🔥 🗺","# driving-time-heatmap

## Examples

From next to San Jose airport on a late morning weekday

![San Jose](public/examples/bay_area_late_morning_weekday.png)

From Bellevue on an early morning weekday

![Bellevue](public/examples/bellevue_weekday_early_afternoon.png)

From the suburbs of Melbourne on a Saturday morning

![Melbourne](public/examples/melborne_suburbs_saturday_morning.png)",10,10,2,0,transportation,"[commute, driving, google-maps, heatmap, mapping, react, traffic, transportation]",00000
107,TransportSim,davidbailey,N/A,https://github.com/davidbailey/TransportSim,https://api.github.com/repos/davidbailey/TransportSim,Version two of TransportSim. See dpd/agent-based_transportation_model for the current version. ,"# TransportSim: A transportation simulation. #

[![Build Status](https://travis-ci.org/davidbailey/TransportSim.svg?branch=master)](https://travis-ci.org/davidbailey/TransportSim)
[![Coverage Status](https://coveralls.io/repos/davidbailey/TransportSim/badge.svg?branch=master&service=github)](https://coveralls.io/github/davidbailey/TransportSim?branch=master)

![TransportSim](https://raw.githubusercontent.com/davidbailey/TransportSim/master/TransportSim.gif ""TransportSim"")

## Architecture ##

1. python/peopleModel   - generates people (origins and destinations)
2. python/routeModel    - generates a route for each person (polylines)
3. python/simulation     - simulates people (polylines) moving; sends views to redis
4. python/view          - view the models and simulations from redis (openlayers + bottle REST API)

## Documentation ##
Time is always in seconds.
Distances have their own class and can be feet or meters.

## Install ##

```
git clone https://github.com/davidbailey/TransportSim.git

pip install pandas geopandas shapely requests bottle redis

# osrm-backend
brew install osrm-backend
wget http://download.geofabrik.de/north-america/us/california-latest.osm.pbf
./osrm-extract california-latest.osm.pbf
./osrm-prepare california-latest.osrm
./osrm-routed california-latest.osrm

# download osm
cd var
wget https://s3.amazonaws.com/metro-extracts.mapzen.com/los-angeles_california.osm.bz2
bunzip2 los-angeles_california.osm.bz2

# redis 
brew install redis 
redis-server

# TransportSim
cd TransportSim
python src/view.py
python src/simulation.py
Launch a browser and open http://localhost:8080/
```
",10,10,4,0,transportation,"[python, simulation, transportation, transportation-simulation]",00000
108,divvy-data,chrisluedtke,N/A,https://github.com/chrisluedtke/divvy-data,https://api.github.com/repos/chrisluedtke/divvy-data,Python API and analysis of Chicago's bikeshare,"<div align=""center"">
  <h1> Divvy Data</h1>
  <a href=""https://github.com/chrisluedtke/divvy-data/blob/master/LICENSE""><img alt=""MIT"" src=""https://img.shields.io/github/license/chrisluedtke/divvy-data.svg""></a>
  <a href=""https://travis-ci.com/chrisluedtke/divvy-data""><img alt=""Travis"" src=""https://img.shields.io/travis/com/chrisluedtke/divvy-data.svg""></a>
  <a href=""https://pypi.python.org/pypi/divvy-data""><img alt=""PyPI"" src=""https://img.shields.io/pypi/v/divvy-data.svg""></a>
  <a href=""https://www.youtube.com/embed/SVueGQPpz14?modestbranding=1&loop=1&rel=0"">
    <img src=""https://github.com/chrisluedtke/divvy-data/blob/master/img/divvy_day.gif?raw=true"" alt=""View on YouTube"">
  </a>
</div>

## About

Divvy Data is a package to access historical and live Chicago bikeshare data.

I used this data to blog about [Chicago  biking and data visualization](https://chrisluedtke.github.io/divvy-data.html). See my analysis notebook on [nbviewer](https://nbviewer.jupyter.org/github/chrisluedtke/divvy-data-analysis/blob/master/notebook.ipynb).

## Set up
```
pip install divvy-data
```

## Usage
### Historical Data
```python
import divvydata

# gather historical data over all years
rides, stations = divvydata.get_historical_data(
    years=[str(yr) for yr in range(2013,2019)],
    rides=True,
    stations=True
)
```

### Live Data
```python
import divvydata

sf = divvydata.StationsFeed()
df = sf.monitor_event_history(runtime_sec=60)  # also saves to sf.event_history attribute

# filter to stations that received interactions
df = df.loc[df['id'].duplicated(keep=False)]
```

### Data Usage Limitations

This package does not host or directly provide data, except as cited in analysis notebooks. When using Divvy data, follow [Divvy's Data License Agreement](https://www.divvybikes.com/data-license-agreement).
",10,10,2,6,transportation,"[bikeshare, transportation]",00000
109,Transportation_Problem,sichkar-valentyn,N/A,https://github.com/sichkar-valentyn/Transportation_Problem,https://api.github.com/repos/sichkar-valentyn/Transportation_Problem,Transportation Model for an optimal strategy for distributing a commodity from a group of supply centers to various receiving centers. Solved in C# Windows Form Application,"# Transportation Problem
Transportation Model for an optimal strategy for distributing a commodity from a group of supply centers to various receiving centers. Solved in C# Windows Form Application.

### Reference to:
[1] Valentyn N Sichkar. Transportation Model for an optimal strategy for distributing a commodity from a group of supply centers to various receiving centers. Solved in C# Windows Form // GitHub platform [Electronic resource]. URL: https://github.com/sichkar-valentyn/Transportation_Problem (date of access: XX.XX.XXXX)

## Description
The general transportation problem is concerned with determining an optimal strategy for distributing a commodity from a group of supply centers, such as factories, called sources, to various receiving centers, such as warehouses, called destinations, in such a way as to minimize total distribution costs.

Each source is able to supply a fixed number of units of the product, usually called the capacity or availability, and each destination has a fixed demand, often called the requirement.

Transportation models can also be used when a company is trying to decide where to locate a new facility. Good financial decisions concerning facility location also attempt to minimize total transportation and production costs for the entire system.

## Task
There are 4 warehouse containing some number of units of the same type of product (see table 1), there is also 5 consumers depend on a certain amount of these products (see table 2). When shipping one unit from warehouse i to consumer j costs Pij arise. The magnitude of the costs is shown in the Table 3.

For the transportation K units from warehouse i to consumer j the total transportation cost is K*Pij.* The task is to find a transportation plan in which the total transportation cost of all products to all consumers will be minimal.


## Task for Transportation Problem
![Task](images/Task_for_Transportation_Problem.png)

## Checking for the balance
![Result](images/Checking_for_the_balance.png)

## Finding the Initial Plan
![Result](images/Finding_the_Initial_Plan.png)

## Finding the Initial Plan - Iteration 2
![Result](images/Finding_the_Initial_Plan_Iteration_2.png)

## Finding the Initial Plan - Iteration 3
![Result](images/Finding_the_Initial_Plan_Iteration_3.png)

## Finding the Initial Plan - Iteration 4
![Result](images/Finding_the_Initial_Plan_Iteration_4.png)

## Finding the Initial Plan - Iteration 5
![Result](images/Finding_the_Initial_Plan_Iteration_5.png)

## Finding the Initial Plan - Iteration 6
![Result](images/Finding_the_Initial_Plan_Iteration_6.png)

## Finding the Initial Plan - Iteration 7
![Result](images/Finding_the_Initial_Plan_Iteration_7.png)

## Finding the Initial Plan - Iteration 8
![Result](images/Finding_the_Initial_Plan_Iteration_8.png)

## Finding the Initial Plan - Found.png
![Result](images/Finding_the_Initial_Plan-Found.png)

## Checking for the Non Empty Condition
![Result](images/Checking_for_the_Non_Empty_Condition.png)

## The Whole Cost of the delivery
![Result](images/The_Whole_Cost_of_the_delivery.png)

## Improving the Initial Plan
![Result](images/Improving_the_Initial_Plan.png)

## Improving the Initial Plan Creating helper column and row
![Result](images/Improving_the_Initial_Plan_Creating_helper_column_and_row.png)

## Improving the Initial Plan Calculating evaluations for the rest empty cells
![Result](images/Improving_the_Initial_Plan_Calculating_evaluations_for_the_rest_empty_cells.png)

## Improving the Initial Plan Finding the largest value among the negative
![Result](images/Improving_the_Initial_Plan_Finding_the_largest_value_among_the_negative.png)

## Improving the Initial Plan Building circle
![Result](images/Improving_the_Initial_Plan_Building_circle.png)

## Improving the Initial Plan Finding minimum
![Result](images/Improving_the_Initial_Plan_Finding_minimum.png)

## Building new Initial Plan
![Result](images/Building_new_Initial_Plan.png)

## To Find the Optimal Final Plan
![Result](images/To_Find_the_Optimal_Final_Plan.png)

## Optimal Final Plan-Found
![Result](images/Optimal_Final_Plan-Found.png)

## Results and Conclusions
![Result](images/Results_and_Conclusions.png)

## MIT License
## Copyright (c) 2017 Valentyn N Sichkar
## github.com/sichkar-valentyn
### Reference to:
[1] Valentyn N Sichkar. Transportation Model for an optimal strategy for distributing a commodity from a group of supply centers to various receiving centers. Solved in C# Windows Form // GitHub platform [Electronic resource]. URL: https://github.com/sichkar-valentyn/Transportation_Problem (date of access: XX.XX.XXXX)
",10,10,1,0,transportation,"[commodity, consumer, cost, cost-estimation, cost-model, optimal-control, optimal-route, optimal-trajectories, optimal-transport, optimization, optimization-algorithms, optimization-methods, optimization-problem, receiving-centers, supply-centers, supply-tracker, transportation, transportation-model, transportation-problem, warehouse]",00000
110,zephyr-directory,ZephyrTransport,ZephyrTransport,https://github.com/ZephyrTransport/zephyr-directory,https://api.github.com/repos/ZephyrTransport/zephyr-directory,A directory of useful open source software for the transportation analysis community.,"# zephyr-directory
A directory of useful open source software for the transportation analysis community.

### Related Projects
This website is built in [Jekyll for GitHub Pages](https://jekyllrb.com/docs/github-pages/).  

The design utilizes [Bootstrap 4](https://v4-alpha.getbootstrap.com/) which depends on [Normalize.css](https://necolas.github.io/normalize.css/) and [JQuery](https://jquery.com/)

## Getting Started - If you want to clone and us
These instructions will get you a copy of the project up and running on your local machine for development, testing, and use purposes. 

### Prerequisities
If you want to test the website locally, you will need to install Ruby, Jekyll, and Github Pages.  GitHub has [good instructions on this](https://help.github.com/articles/setting-up-your-github-pages-site-locally-with-jekyll/). 

### Running Locally

From the directory...
```
> jekyll build
> jekyll serve
```

### Serving your own site using Github Pages
Instructions on [GitHub](https://jekyllrb.com/docs/github-pages/)

## Contributing
Please feel free to submit any requests via the issue tracker.  You can also submit pull requests for issues that are marked ""todo"".

## Versioning
We will be purposefully not versioning this site for now.

## Credits
* **Elizabeh Sall, UrbanLabs LLC** - *Initial work* - 

See also the list of [contributors](https://github.com/your/project/contributors) who participated in this project.

## License
This project is licensed under the MIT License - see the [LICENSE.md](LICENSE.md) file for details

## Acknowledgments
* Produced with support from Ohio DOT
",10,10,10,15,transportation,"[analysis, open-source-community, transport, transportation, transportation-simulation]",00000
111,shriveling_world,theworldisnotflat,N/A,https://github.com/theworldisnotflat/shriveling_world,https://api.github.com/repos/theworldisnotflat/shriveling_world,"The ""shriveling_world"" project aims at producing images of the global geographical time-space, using the third dimension, as in time-space relief maps. The word ""shriveling"" was introduced by Waldo Tobler in his comments of Mathis-L'Hostis time-space relief image, in order to describe the complex contraction process suggested by the model.","# Shriveling world

The __shriveling world__ project aims at producing images of _geographical time-space_, using the third dimension. The word _shriveling_ was introduced by Waldo Tobler in [his analysis](https://people.geog.ucsb.edu/~tobler/presentations/The-shriveling-world.pdf) of Mathis-L'Hostis time-space relief images, to describe the complex contraction process suggested by the model. The project consists in:

- A [scientific blog](https://timespace.hypotheses.org/) containing principles, reflections, references and images related to the project
- An [__application__ with documentation](https://theworldisnotflat.github.io/shriveling_world/marks/index)
- A [users forum](https://github.com/theworldisnotflat/shriveling_world/discussions)

For citation please refer to [L’Hostis, A.; Abdou, F. _What is the Shape of Geographical Time-Space? A Three Dimensional Model made of Curves and Cones_. Int. J. Geo-Inf. 2021, 10(5), 340](https://doi.org/10.3390/ijgi10050340).

<img alt=""Chinese geographical time space in 2014"" src=""https://neocarto.hypotheses.org/files/2021/04/f_Chine_v06.png"" width=""800"">

This is the first representation of _geographical time-space_ with cones and curves, produced by the application __Shriveling world__ with post-treatments in [Blender](https://www.blender.org), applied to China and Taiwan.

# Road map

-   The project has a [roadmap maintained up to date](https://github.com/theworldisnotflat/shriveling_world/wiki)
-   Development is [organised for the coming release](https://github.com/theworldisnotflat/shriveling_world/projects)
-   The first pre-release v0.9-alpha can be refered to as: [![DOI](https://zenodo.org/badge/66025665.svg)](https://zenodo.org/badge/latestdoi/66025665)


# Licence

As an open science initiative the project follows the [GNU General Public License v3.0](https://github.com/theworldisnotflat/shriveling_world/blob/master/LICENSE) rules. Contributions are welcome!
",9,9,4,34,transportation,"[geography, timespace, transportation, waldo-tobler]",00000
112,wsdot-ios-app,WSDOT,WSDOT,https://github.com/WSDOT/wsdot-ios-app,https://api.github.com/repos/WSDOT/wsdot-ios-app,Source code for the WSDOT iOS application,"# WSDOT iOS App #

Version 5
-------------

Washington State Traveler information provide by The Washington State Department of Transportation.

* Written in Swift 5
* Developed with Xcode 14.3.1

Features - [View on the App Store](https://itunes.apple.com/us/app/wsdot/id387209224?mt=8)
----------------------------------
* Traffic Map with statewide traffic cameras and travel alerts.
* Ferry schedules, alerts, and real-time ferry locations.
* Mountain pass conditions and weather reports.
* Washington State toll rates.
* Northbound Canadian Border Waits.
* Amtrak Cascades Train Schedules.

Setup
-----
This project uses [CocoaPods](https://cocoapods.org/) for dependency management.

* Run `pod install` in the project directory to set up the workspace.
* Open the `WSDOT.xcworkspace` project in Xcode to get the CocoaPods workspace. 
* You will need to add a GoogleService-Info.plist file and add API keys to ApiKeys.swift.

Dependencies
------------
* [Firebase/Core](https://firebase.google.com/docs/ios/setup)
* [Firebase/AdMob](https://firebase.google.com/docs/admob/)
* [GoogleMaps](https://developers.google.com/maps/documentation/ios-sdk/)
* [Google Maps iOS Utils](https://github.com/googlemaps/google-maps-ios-utils)
* [GoogleAnalytics](https://developers.google.com/analytics/devguides/collection/ios/v3/?ver=swift)
* [Alamofire](https://github.com/Alamofire/Alamofire)
* [SwiftyJSON](https://github.com/SwiftyJSON/SwiftyJSON)
* [RealmSwift](https://realm.io/docs/swift/latest/)
* [SDWebImage](https://github.com/rs/SDWebImage)
* [EasyTipView](https://github.com/teodorpatras/EasyTipView)
* [NotificationBannerSwift](https://github.com/Daltron/NotificationBanner)

Contributing
------------

Find a bug? Got an idea? Send us a pull request or open an issue and we'll take a look.

License
-------

Copyright (c) 2023 Washington State Department of Transportation

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>
",9,9,4,29,transportation,"[swift, transportation]",00000
113,tum,davidbailey,N/A,https://github.com/davidbailey/tum,https://api.github.com/repos/davidbailey/tum,"papers, presentation, notes, references","# TUM | Master of Science in Transportation Systems

[![Build Status](https://travis-ci.org/davidbailey/tum.svg?branch=master)](https://travis-ci.org/davidbailey/tum)

",9,9,5,0,transportation,"[cycling, deutsche-bahn, germany, los-angeles, munich, railway-infrastructure, traffic, transportation, tum, walking]",00000
114,cfr-iris-scraper,FlashWebIT,FlashWebIT,https://github.com/FlashWebIT/cfr-iris-scraper,https://api.github.com/repos/FlashWebIT/cfr-iris-scraper,Live train information: scrape-powered API with JSON endpoints for the Romanian national railway infrastructure company CFR S.A's realtime information web interface IRIS (built by state-railway IT company InfoFer).,"# CFR IRIS Scraper: Romanian Railways API

![Screenshot](screen.png)

CFR S.A., the Romanian national railway infrastructure administration company offers an online live information service
(based on ASPX forms with postback viewstate sending and event validation) for getting **near real-time data** about
departures, arrivals and platforms where trains arrive in stations and trip delays and updates. At the time, this whole
 system lacks and API or even a decent, easy to use and easy to find interface for end users. 

This Flask based API extracts data from the CFR webapp as requested in the URL API Endpoint and outputs reusable JSON data.
The program scrapes all its information from ASP.Net's __VIEWSTATE variable.

## Installation & Requirments
- You need Python 3.6+ and Pipenv installed on your system.
```sh
$ apt install python3 python3-pip
$ pip3 install pipenv
```
- Clone the repository and install the module dependencies:
```sh
$ git clone https://github.com/BodoMinea/cfr-iris-scraper.git
$ cd cfr-iris-scraper
$ pipenv install
```
- Run the API server as specified in the [Flask Documentation](https://flask.palletsprojects.com/en/1.1.x/cli/).
```sh
$ pipenv run flask run
```
### Notes
- You may need to edit the Pipfile to match your local Python version in order to successfully install
```Pipfile
python_version = ""3.6.9""
```
- Flask listens by default only to local requests. It's advisable to keep it like this and install a reverse proxy for larger deployments, but to access your test machine from LAN, run with:
```sh
$ pipenv run flask run --host 0.0.0.0
```
This will bind on all available interfaces.

## Usage
### Station information
Now you can point your browser to http://localhost:5000/station/ID to see the magic. ID is the unique station-unit code;
a list is provided by the http://localhost:5000/get-stations/ endpoint.

For example, to get a JSON object with the current departure/arrival board & delay information for the Bucharest North
railway station (the main & biggest one in our country), you would point your browser or the URL variable for whatever
app you are consuming the data with to: http://localhost:5000/station/10017.

### Train information
In the same way you can get the current trains in a certain railway station, you can get the current information for a
certain train. CFR provides information such as delays, the last station the train has passed (with a 7-minute delay),
the next station and other useful information.

Just point your browser to http://localhost:5000/train/ID, where ID is the train's unique number. You can get these IDs
from the station information feed. For example, you can retrieve the information for train IR 1651 from Bucharest North
to Suceava North (valid as of April 2017) by accessing http://localhost:5000/train/1651.

### Web GUI (JS Client)
There is also a web client included with the API. Head to http://localhost:5000/static/station.html, http://localhost:5000/static/train.html or http://localhost:5000/static/train.html?tren=9351 (predefined train number) to see it.

## Ideas
While the official apps themselves work but may not look so great, romanian developers did their best to create some
really cool open source projects and online services related to transportation and infrastructure.
See [this live map](http://cfr.webgis.ro/), [this proprietary to GTFS converter](https://github.com/vasile/data.gov.ro-gtfs-exporter),
[this trip planner](https://www.acceleratul.ro), etc.

Using this API and other public resources, you may create your own style of station departure board, delay-notification
service, cool looking mobile app, while learning how to program and work with structured data?

## License, disclaimer and known limitations
This is a completely open source project, built on open source modules and libraries and licensed under
[Do What the Fuck You Want to Public License Version 2](http://www.wtfpl.net/).

Also, you are completely responsible for what you do with it - keep in mind that CFR S.A. and InfoFer
(the state-railway owned IT firm which builds their software) are not particularly transparent or third party developer
friendly. If you do mass-scraping or develop some publicly accessible service that generates loads of traffic from the
same server to them or clones their data to a database for various reasons, you may run into some trouble,
[as this fellow enthusiast did while making a web trip-planner using CFR Calatori's timetable from their website](http://legi-internet.ro/blogs/index.php/cfr-crede-ca-are-monopol-pe-mersul-trenurilor-pe-internet).

But for tinkering, playing around and working with real-time data that clearly can't confuse anyone if the error is not
from CFR themselves, you should be fine and on the right side of the law, at least from my experience. Maybe they'll
offer their own API with proper rules and licensing at some point.

#### Known limitations:
- Requests are not authenticated and no rate limiting is implemented, so it's in no way ready to be exposed on the web.
- This is not particularly fast, because the CFR Webpage isn't either. You'll probably want background requests and
caching. ~~After the initial request is made, it'll wait 8 seconds before parsing the data. If data hasn't been displayed
on the webpage, it will wait an additional 20 seconds. After this, the API will output a blank object - this may mean
that the scraped web service is down, it is really slow to respond or there are really no current trips stopping at that
particular station (at night or at a small stop, for example).~~ Fixed: if the API is down you'll get a 5xx error status. 
- This is scraping and parsing, so any structural update to the CFR webpage, while highly unlikely in the near future
may break this.
- ~~The train information feed does not provide the details regarding the train's delays and other useful information that
Infofer offers with their service. This will be updated in the future.~~ Fixed: all public IRIS information is outputted on this API.

Public information web-service provided by CFR S.A. through Informatica Feroviara:
http://appiris.infofer.ro/SosPlcRO.aspx, http://appiris.infofer.ro/MyTrainRO.aspx,
http://appiris.infofer.ro/MersTrenRo.aspx. This is information from infrastructure administration and not a specific
passenger carrier. Official passenger timetables are found here: http://mersultrenurilor.infofer.ro,
and static XML data source with timetables updated at the end of each year:
http://data.gov.ro/organization/sc-informatica-feroviara-sa
",9,9,4,3,transportation,"[romania, scraping, train-delays, trains-information, transportation]",00000
115,BPInfo,ofalvai,N/A,https://github.com/ofalvai/BPInfo,https://api.github.com/repos/ofalvai/BPInfo,BKK Futár Info API + Material Design,"# BPInfo

[![CircleCI](https://circleci.com/gh/ofalvai/BPInfo.svg?style=svg)](https://circleci.com/gh/ofalvai/BPInfo)

Budapest public transport info app based on public transport APIs.

[<img src=""https://user-images.githubusercontent.com/1694986/111364968-24a0fa00-864f-11eb-88aa-4b4127d8e012.png?width=100"" width=""200""></img>](https://play.google.com/store/apps/details?id=com.ofalvai.bpinfo)

![Screenshot](/screenshots.png?raw=true)

## Features

- real time public transport info
- push notifications
- current and planned traffic changes
- filter vehicle types
- small, optimized APK size (currently ~1.75 MB)


## Project

This app is also a demo project to try new technologies, libraries, architectures.

Technologies and libraries used:

- [Kotlin](https://kotlinlang.org)
- androidx.*
    - [ConstraintLayout](https://developer.android.com/training/constraint-layout)
    - [LiveData](https://developer.android.com/topic/libraries/architecture/livedata), [ViewModel](https://developer.android.com/topic/libraries/architecture/viewmodel)
- [Koin](https://insert-koin.io/) for dependency injection
- Firebase
    - [Cloud Messaging](https://firebase.google.com/docs/cloud-messaging/)
    - [Crashlytics](https://firebase.google.com/docs/crashlytics/)
    - [Performance](https://firebase.google.com/docs/perf-mon/)
- [WorkManager](https://developer.android.com/topic/libraries/architecture/workmanager)
- [ThreeTenABP](https://github.com/JakeWharton/ThreeTenABP)
- [LeakCanary](https://github.com/square/leakcanary)
- [Android App Bundle](https://developer.android.com/platform/technology/app-bundle/)

Libraries intentionally not used:

- [RxJava](https://github.com/ReactiveX/RxJava): would be overkill for such simple use cases
- [GSON](https://github.com/google/gson): the API responses require a lot of custom parsing and mapping that I decided to parse with custom code


Future plans:

- Kotlin coroutines
- Jetpack Navigation
- More tests
",9,9,2,0,transportation,"[android, android-app, android-application, api, transportation]",00000
116,geodata,bennyistanto,N/A,https://github.com/bennyistanto/geodata,https://api.github.com/repos/bennyistanto/geodata,Geodata repository,"# Data Repository

Data and information play an important role in decision making. Furthermore I specifically talk about the geographical data related to place and position on the earth. In spite of the limited availability of geographical data in the internet, this data is considerably important for visualisation, planning and decision support system in all administrative level in Indonesia. 

The data are compiled from various sources, especially Indonesia Geoportal node and categorized into Boundaries (bnd), Climate (cli), Hydrographic (hyd), Natural Hazards (nhr), Physical (phy), Point of Interests (poi), Settlements (pop), Transportation (trs) and Utilities (uti). Also there are numeric data categorized into Tabular data and Others.

Vector data comes in GeoJSON and ESRI shapefile format, raster data comes in TIFF format  and sometimes with a TFW world file. All data use the Geographic coordinate system (projection) [EPSG:4326](https://epsg.io/4326), WGS84 datum `+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs`.

I am not responsible for any problems relating to accuracy, content, design, and how it is used. If you find an error or omission, please report it for future updates.
",9,9,2,0,transportation,"[boundary, climate, hydrology, market-price, natural-hazard, point-of-interest, population, tabular, transportation, utilities]",00000
117,sitp_scraper,cansadadeserfeliz,N/A,https://github.com/cansadadeserfeliz/sitp_scraper,https://api.github.com/repos/cansadadeserfeliz/sitp_scraper,Scraper for SITP routes,"## :robot: Telegram Bot

[@sitp_bot](https://web.telegram.org/#/im?p=@sitp_bot)


## :busstop: Installation

    $ apt-get install postgis
    $ createdb  <db name>
    $ psql <db name>
    > CREATE EXTENSION postgis;

    $ cp sitp_scraper/local_settings.example.py sitp_scraper/local_settings.py

    $ mkvirtualenv sitp_scraper
    $ pip install -r requirements.txt

## :bus: Usage

Run scrapy spider to get new SITP stations and routes from www.sitp.gov.co website:

    scrapy crawl sitp

or

    python manage.py start_scraper

to run it from Django.

Run Django project:

    python manage.py runserver

### Get coordinates for bus stations from Google maps API:

    python manage.py get_station_coordinates_google

### Get coordinates for bus stations from Civico:

    python manage.py get_station_coordinates_civico

### Get pair stations form www.sitp.gov.co website

""Pair stations"" are stations that are located really close so we can count them as one.

    python manage.py get_pair_stations

## :oncoming_bus: Idea

The idea is to make a map with all bus routes that would be easy to print.

For example:

* City transport map for Moscow: http://transportmap.ru/moscowtransport_en.html
* City transport map for Saint-Petersburg: http://transportmap.ru/transport-spb_en.html
* Milan: http://img3.arrivo.ru/cfcd/91/2395/0/Shema-dvizheniya-avtobusov-milan.jpg
* Atlas that you can buy in Moscow ""Атлас городского транспорта"": http://avtoliteratura.ru/files/gortransp_1_resize.jpg
* More atlas examples: https://www.google.com.co/search?q=%D0%90%D1%82%D0%BB%D0%B0%D1%81+%D0%B3%D0%BE%D1%80%D0%BE%D0%B4%D1%81%D0%BA%D0%BE%D0%B3%D0%BE+%D1%82%D1%80%D0%B0%D0%BD%D1%81%D0%BF%D0%BE%D1%80%D1%82%D0%B0&tbm=isch&sa=Xbiw=1410

## :trolleybus: Deployment

    $ git pull
    $ workon sitp_scraper
    $ pip install requirements.txt
    $ ./manage.py migrate
    $ ./manage.py collectstatic
    # Restart the uwsgi process

## :fire_engine: Links:

* Google geocoding: https://developers.google.com/maps/documentation/geocoding/intro?hl=ru
",8,8,4,6,transportation,"[bogota, bus-station, colombia, public-transportation, site, telegram-bot, transport, transportation]",00000
118,ROTI,FlashWebIT,FlashWebIT,https://github.com/FlashWebIT/ROTI,https://api.github.com/repos/FlashWebIT/ROTI,"Romanian Open Transit Initiative - repository of official, reverse engineered and converted transit resources which give you programmatic access to static (scheduled) or real-time data (positions, updates etc.)","# 🚇🚞🚌 Romanian Open Transit Initiative 🚋🚈🚡
## 📝 Project and resource list

1. ### 📎 Data sources
####  _(structured / processable data) There has to be a starting point :)_
* [Passenger railway operators static timetable, published anually, XML format](https://data.gov.ro/organization/sc-informatica-feroviara-sa)
* [Iași urban transit: GPS positions in real-time, JSON](https://gps.sctpiasi.ro/json)
* [Bucharest urban transit: lines, stations, departures in real time, timetables, GPS positions](https://info.stbsa.ro/rp/api/lines/)
<details>
  <summary>Details</summary>
  
  ```
  https://info.stbsa.ro/rp/api/lines/
  https://info.stbsa.ro/rp/api/lines/:line_id/
  https://info.stbsa.ro/rp/api/lines/:line_id/direction/:direction_id
  https://info.stbsa.ro/rp/api/lines/:line_id/stops/:stop_id?lang=:lang_code
  https://info.stbsa.ro/rp/api/lines/:line_id/vehicles/:direction_id
  https://info.stbsa.ro/rp/api/notifications
  ```
  
  segment_path line shape is to be decoded with https://github.com/jieter/Leaflet.encoded
</details>

  * [Constanța urban transit: lines, stations, departures in real time, timetables, GPS positions](https://info.ctbus.ro/rp/api/lines/)

<details>
  <summary>Details</summary>
  
  ```
  https://info.ctbus.ro/rp/api/lines/
  https://info.ctbus.ro/rp/api/lines/:line_id/
  https://info.ctbus.ro/rp/api/lines/:line_id/direction/:direction_id
  https://info.ctbus.ro/rp/api/lines/:line_id/stops/:stop_id?lang=:lang_code
  https://info.ctbus.ro/rp/api/lines/:line_id/vehicles/:direction_id
  https://info.ctbus.ro/rp/api/notifications
  ```
  
  segment_path line shape is to be decoded with https://github.com/jieter/Leaflet.encoded
</details>

* [Sibiu local urban transit operator GTFS (Official)](https://www.tursib.ro/trasee/gtfs)

---
2. ### ⚙️ Data converters
#### _(exporters, processors etc.) From proprietary to standard/open formats_
* [Railway XML data to GTFS, Ruby](https://github.com/vasile/data.gov.ro-gtfs-exporter) - also includes a very handy [GeoJSON file of all Romanian railway stations with names and GPS positions](https://raw.githubusercontent.com/vasile/data.gov.ro-gtfs-exporter/master/cfr.webgis.ro/stops.geojson)
* [Real time railway data (train departures, delays, platform numbers updated minutely) to JSON API and WebUI - Python](https://github.com/FlashWebIT/cfr-iris-scraper)
* ~~[Generate up-to-date GTFS files from custom local transit API used by Bucharest & Constanța]~~ Follow the link below
* [GTFS Realtime protocol buffer vehicle positions converter for Iași](https://github.com/FlashWebIT/Iasi-GTFS-Realtime-Vehicle-Positions)
* [GTFS Realtime protocol buffer vehicle positions converter for ~~Bucharest~~ (find official GTFS portal below) & Constanța](https://github.com/FlashWebIT/Bucharest-Constanta-GTFS-Realtime-Vehicle-Positions)
* _[Static GTFS exporter for Iași](https://github.com/FlashWebIT/Iasi-GTFS-exporter)_ - This is still a work in progress and **currently only exports frequency-based  routes and is buggy**.

---
3. ### 🗺️ Data visualizers
#### _(maps, apps etc.) Make it beautiful_
* [GTFS transit-map simulation](https://github.com/vasile/transit-map) - static webapp, also needs [GTFS-viz Ruby converter to GeoJSON](https://github.com/vasile/GTFS-viz)
* [Real time train information - Cordova Android app](https://github.com/BodoMinea/InfoTren)

---

### ⁉️ WTF Zone - We don't know what this is but it belongs here
* [Some attempt at an GTFS backend by GovITHub](https://web.archive.org/web/20200911162006/https://github.com/gov-ithub/infotranspub-backend)
<details>
  <summary>Historical?</summary>
  Not relevant as data or install guides anymore, but interesting study materials on past projects:
  * https://github.com/cnicules/OTP-Buh/wiki (also check the code!)
</details>

### 📥 Download center
#### 🚍 Grab some ready-made GTFS Files
* National Railway (converted): [Download here](https://github.com/vasile/data.gov.ro-gtfs-exporter/tree/master/gtfs-out)
* Local transit, Bucharest (official): [Download here](https://gtfs.tpbi.ro/regional)
* Local transit, Constanța (generated): [Download here](https://external.gtfs.ro/constanta/)
* Local transit, Iași (generated): [Download here](https://github.com/FlashWebIT/Iasi-GTFS-Exporter/tree/master/output)
* Local transit, Sibiu (official): [Download here](https://www.tursib.ro/trasee/gtfs)

### 🕬 Contribute
By [pull request](CONTRIBUTING.md) or by [opening an issue](https://github.com/FlashWebIT/ROTI/issues/new).

### 📧 Get in touch
Email the maintainer at bogdan@transportpublic.ro

### 📅 Milestones
- [ ] Get a few other developers onboard (2-3 for this year)
- [ ] [Roll out](https://digitransit.fi/en/developers/) our own instance of the beautiful [Digitransit](https://github.com/HSLdevcom/digitransit/blob/master/Installation.md) trip-planning webapp, fully open source Finnish software which [works for them in production](https://reittiopas.hsl.fi/) and also [at nation-level](https://opas.matka.fi/)
<details>
  <summary>Get a sneak peek</summary>  

![Screenshot](https://github.com/FlashWebIT/Bucharest-GTFS-Exporter/raw/master/OTP.png ""Screenshot"")
![Screenshot](https://github.com/FlashWebIT/Bucharest-GTFS-Exporter/raw/master/OTP2.png ""Screenshot"")
</details>
",8,8,3,3,transportation,"[awesome-list, gtfs, gtfs-feed, gtfs-generator, gtfs-realtime, gtfs-static, open-data, romania, transportation]",00000
119,aspettami-bot,acifani,N/A,https://github.com/acifani/aspettami-bot,https://api.github.com/repos/acifani/aspettami-bot,🚌 Telegram bot to fetch real-time status and wait time of Milan's ATM bus and tram lines,"# aspettami-bot

Telegram bot to fetch real-time status and wait time
of Milan's ATM bus and tram lines.

[Try it live](https://t.me/aspettaMI_bot)

## Run it yourself

```shell
$ docker-compose build
$ TELEGRAM_TOKEN=<your_tg_token> docker-compose up
```
",8,8,3,0,transportation,"[milano, python, telegram-bot, transportation]",00000
120,bkk-stop-card,amaximus,N/A,https://github.com/amaximus/bkk-stop-card,https://api.github.com/repos/amaximus/bkk-stop-card,Custom Lovelace card for Budapest Public Transportation custom component,"[![hacs_badge](https://img.shields.io/badge/HACS-Default-orange.svg)](https://github.com/hacs/integration)

<p><a href=""https://www.buymeacoffee.com/6rF5cQl"" rel=""nofollow"" target=""_blank""><img src=""https://camo.githubusercontent.com/c070316e7fb193354999ef4c93df4bd8e21522fa/68747470733a2f2f696d672e736869656c64732e696f2f7374617469632f76312e7376673f6c6162656c3d4275792532306d6525323061253230636f66666565266d6573736167653d25463025394625413525413826636f6c6f723d626c61636b266c6f676f3d6275792532306d6525323061253230636f66666565266c6f676f436f6c6f723d7768697465266c6162656c436f6c6f723d366634653337"" alt=""Buy me a coffee"" data-canonical-src=""https://img.shields.io/static/v1.svg?label=Buy%20me%20a%20coffee&amp;message=%F0%9F%A5%A8&amp;color=black&amp;logo=buy%20me%20a%20coffee&amp;logoColor=white&amp;labelColor=b0c4de"" style=""max-width:100%;""></a></p>

# Lovelace custom card for BKK Stop Information

This Lovelace custom card displays Budapest Public Transportation (BKK)
line information departing in the near future from a configurable stop.<p>
This custom card depends on the BKK Stop Information custom component that you may find at
[https://github.com/amaximus/bkk_stop](https://github.com/amaximus/bkk_stop/).

Lovelace UI does not support platform attributes natively.<br />
Inspired by [entity-attributes-card](https://github.com/custom-cards/entity-attributes-card)
on handling attributes in Lovelace, a Lovelace custom card was a dept and now made available for BKK Stop.

#### Installation
The easiest way to install it is through [HACS (Home Assistant Community Store)](https://github.com/hacs/frontend),
search for <i>bkk</i> and select BKK Stop Card from Plugins.<br />
If you are not using HACS, you may download bkk-stop-card.js and put it into $homeassistant_config_dir/www.<br />

#### Lovelace UI configuration

Configuration parameters:<br />

---
| Name | Optional | `Default` | Description |
| :---- | :---- | :------- | :----------- |
| entity | **N** | - | name of the sensor of bkk_stop platform|
| hide_in_mins | **Y** | `false` | Hide in_minutes information|
| hide_at_time | **Y** | `true` | Hide at_time information|
| hide_predicted_at_time | **Y** | `true` | If set to false, this will show predicted times with an '(est.)' suffix, when estimated arrival times are available, otherwise it will show the time according to schedule |
| max_items | **Y** | `0` | Number of items to show. 0: no limit |
| name | **Y** | `` | If specified it will overwrite the card title/station name |
| layout_bpgo | **Y** | `false` | Use Budapest GO layout |
---

For yaml mode Lovelace dashboard add the lines below to your ui-lovelace.yaml. For non-yaml dashboard use: overview → edit dashboard → 3 dot again → raw edit and add the card info there.
The entity should be the sensor of bkk_stop platform you defined.
```
resources:
  - {type: module, url: '/www/community/bkk-stop-card/bkk-stop-card.js'}

    cards:
      - type: custom:bkk-stop-card
        entity: sensor.bkk7u
        hide_in_mins: false # it makes sense to set this to false if hide_predicted_at_time is true, as in_mins is calculated from ""scheduled"" times
        hide_at_time: false
        hide_predicted_at_time: true
      - type: custom:bkk-stop-card
        entity: sensor.bkkxu
        hide_in_mins: true
        hide_at_time: true
        hide_predicted_at_time: false

```

Lovelace UI:<br />
![bkk_stop Lovelace example](bkk_lovelace.jpg)
",7,7,4,0,transportation,"[bkk, budapest, homeassistant, lovelace-custom-card, lovelace-ui, transportation]",00000
121,1R_ShipmentTracking,DrPhilippBillion,N/A,https://github.com/DrPhilippBillion/1R_ShipmentTracking,https://api.github.com/repos/DrPhilippBillion/1R_ShipmentTracking,This repository contains information on the requirements and implementation of the ONE Record shipment tracking API.,"# 1R_ShipmentTracking
This repository contains information on the requirements and implementation of the ONE Record shipment tracking API. It is basis for the Air Cargo industry commitment on ONE Record, Level 1, which is presumably to be implemented in late 2023.

This README-file contains meta-information on the repository, while the requirements and implementation material can be found in the file

> **1R_ShipmentTracking.md**

### Objective 

In 2022, major stakeholders of the supply chain decided to aim for a renewed data sharing infrastructure for the supply chain by 2026. This process was initiated and is moderated by the International Air Transportation Association (IATA). As a first step towards a holistics ONE Record-based eco-system, some parties agreed to implement an open shipment tracking API in 2023 (exact date tbd.). Thus, the purpose of this document is to provide a Good Practice for a shipment tracking API in the IATA ONE Record-based data eco-system for the supply chain. 

""Shipment"" is defined as pieces under one contract, and not limited to the Master- or House-AWB. As ONE Record aims for multi-modality, this document should also find use in other modes of transportation beyond air freight only.

### Target audience
This document can be used by any party with the interest in the topic. 

### Geographical coverage
As there are no legal or operational restrictions, the solution can be used world wide.

### Creators
This document is the outcome of the work of the ""Joint ONE Record piloting and transition working group // technical part"" at IATA. It was orchestrated by Arnaud Lambert of IATA as Secretary, with Philipp Billion of Lufthansa Cargo as Chairman. 

Major contributions were made by:

* Lufthansa Cargo, Dr. Philipp Billion
* Lufthansa Industry Solutions, Dr. Daniel A. Döppner
* Air Canada, Josh Priebe
* Riege Software, Martin Skopp
* IATA, Arnaud Lambert
* DHL, Mary Stradling
* Air France / KLM, Bilel Chakroun
* GLS HKG, Keith Lam
* Nexshore Technologies, Pramod Rao
* British Telecom, Mark Belliss
* Qatar Airways, Ajay Manoharan
* Colog AG, Matthias Hurst
* MDF Solutions, Martin Fowler

A special thanks to Niclas Scheiber, Frankfurt University of applied sciences for preparing version 3.0 of the business ontology of ONE Record in coordination with the IATA ONE Record data model focus group.

### Continous development and availability

This document is to be used and continously developed, even if the current major stakeholders should move to other topics. Thus a ""handover"" of this document in Github is planned if responsibilities should shift.

### Use and reference

This Good Practice is free to access and use. If you use it, please refer to this document explicitly plus provide a link to the Github repository as source. This will ensure know-how-transfer and transparency.
",7,7,4,0,transportation,"[aircargo, logistics, onerecord, transportation]",00000
122,traveltimeHMM,melmasri,N/A,https://github.com/melmasri/traveltimeHMM,https://api.github.com/repos/melmasri/traveltimeHMM,Travel time prediction from GPS observations using an HMM,"
# traveltimeHMM

`traveltimeHMM` package implements a Hidden Markov Model (HMM) with a
random trip effect to estimate the distribution of travel time. The HMM
is used to capture dependency on hidden congestion states. The trip
effect is used to capture dependency on driver behaviour. Variations of
those two types of dependencies leads to four models to estimate the
distribution of travel time. Prediction methods for each model is
provided.

[Package website](https://melmasri.github.io/traveltimeHMM/)

## Installation

The package is still under development in the Beta stage.

Install from [GitHub](https://github.com/melmasri/traveltimeHMM) with:

``` r
# install.packages(""devtools"")
devtools::install_github(""melmasri/traveltimeHMM"")
```

## Example

This package includes a small data set (`tripset`) that aggregates
map-matched anonymized mobile phone GPS data collected in Quebec city in
2014 using the Mon Trajet smartphone application developed by [Brisk
Synergies Inc](https://brisksynergies.com/). The precise duration of the
time period is kept confidential.

View the data with:

``` r
library(traveltimeHMM)
data(tripset)
head(tripset)
#>   tripID linkID timeBin logspeed traveltime    length                time
#> 1   2700  10469 Weekday 1.692292  13.000000  70.61488 2014-04-28 06:07:27
#> 2   2700  10444 Weekday 2.221321  18.927792 174.50487 2014-04-28 06:07:41
#> 3   2700  10460 Weekday 2.203074   8.589937  77.76295 2014-04-28 06:07:58
#> 4   2700  10462 Weekday 1.924290  14.619859 100.15015 2014-04-28 06:08:07
#> 5   2700  10512 Weekday 1.804293   5.071986  30.81574 2014-04-28 06:08:21
#> 6   2700   5890 Weekday 2.376925  31.585355 340.22893 2014-04-28 06:08:26
```

To fit a simple `HMM` model use the following code

``` r
fit <- traveltimeHMM(data = tripset,nQ = 2,max.it = 20, model = ""HMM"")
```

Predict for a single trip with:

``` r
single_trip <- subset(tripset, tripID==2700)
pred <- predict(object = fit,
               tripdata = single_trip,
               starttime = single_trip$time[1],
               n = 1000)
hist(pred, freq = FALSE)
```

## Bugs

This is a work in progress. For bugs and features, please refer to
[here](https://github.com/melmasri/traveltimeHMM/issues).

## References

Woodard, D., Nogin, G., Koch, P., Racz, D., Goldszmidt, M., Horvitz, E.,
2017. “Predicting travel time reliability using mobile phone GPS data”.
*Transportation Research Part C*, 75, 30-44.
<http://dx.doi.org/10.1016/j.trc.2016.10.011>
",7,7,1,2,transportation,"[arrival-times, bayesian, eta, gps, hidden-markov-models, hmm, routing, transportation, transportation-network, travel-time, uncertainty-quantification]",00000
123,btp-industry-use-cases,SAP-samples,N/A,N/A,https://api.github.com/repos/SAP-samples/btp-industry-use-cases,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1B9:505E:710A8C:E8FAFA:65223D60.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,transportation,"[N, /, A]",00000
124,rrsrr,ITSLeeds,ITSLeeds,https://github.com/ITSLeeds/rrsrr,https://api.github.com/repos/ITSLeeds/rrsrr,Reproducible road safety research with R: a practical user manual,"
<!-- README.md is generated from README.Rmd. Please edit that file -->

# rrsrr

<!-- badges: start -->
<!-- badges: end -->

To reproduce the contents of the book,
[download](https://github.com/ITSLeeds/rrsrr/archive/master.zip) the
source code from GitHub, open the file RStudio project file
`rrsrr.Rproj` and run the following commands:

``` r
install.packages(""remotes"")
remotes::install_github(""itsleeds/rrsrr"")
install.packages(""servr"")
bookdown::serve_book()
```
",7,7,5,1,transportation,"[crash-reporting, data-science, road-safety, stats19, transportation, transportation-planning]",00000
125,bikeshareTO_analysis,chaddling,N/A,https://github.com/chaddling/bikeshareTO_analysis,https://api.github.com/repos/chaddling/bikeshareTO_analysis,Clustering Bike Share Toronto time series data to identify temporal behavioural motifs.,"# Bike Share Toronto Data Analysis

In this repository, I'll explore the use of clustering to learn the features of bike share time series data, which I had [obtained and cleaned](http://github.com/chaddling/https://github.com/chaddling/bikeshareTO_data). 

The goal of this project is for me to learn about some unsupservised learning techniques on real data sets. The Bike Share Toronto data set contains individual trips taken between 291 stations on record, including trip dates/times and departure/arrival stations. This allows us to calculate the total number of bikes arriving and leaving a station during any hour on record.

Some <u><b>questions</u></b> to think about based on the data:

- What are the prominent features of the groups of stations within each cluster?
- Given the setting of the analysis, what is a rigorous way to score the clustered results? We are not testing the classification of new data, but on how ""well-defined"" the clusters are based on some measure (i.e. silhouette coefficient).
- We can see if clustering on the feature vectors imply some sort of clustering in spatial coordinates of the stations. 

A proxy for measuring usage
---------------------------
An ideal measure of station usage as a function of time, would be the fraction of availability, calculated as the number of available bikes at a station divided by the total capacity of the station.

While this information is live and [available](https://tor.publicbikesystem.net/ube/gbfs/v1/en/station_status) (TBD), it has not been mined and extracted for analysis (TBD).

Instead, I'll define a proxy for usage based on available data.

``< traffic >(hr) = (< num_arrival >(hr) - < num_departure >(hr)) / capacity``

where hr = [0,1,..23]. The above formula denotes the average amount of ""traffic"", defined as the difference in the total number of bikes at the station during each hour, averaged over the number of days on record (averaging is denoted by angular brackets ``<...>``).

Exploratory analysis
====================
Exploratory clustering using k-means
-----------------------------------
With the k-means clustering algorithm, while labelled data is unnecessary, we have to provide beforehand the number of clusters we want to the data to be segmented into.

On ``n_clusters = 3``, the centroid for each cluster, which is a time series representative of the cluster are shown in the following plot:

![](https://raw.githubusercontent.com/chaddling/bikeshareTO_analysis/master/figures/kmeans_clusters_3.png)

We can see some interesting features: the largest cluster (comprises > 60% of the stations) are characterized by low traffic behaviour. The other two centroids show opposite ""rush hour"" behaviours, They distinguish groups of stations which have:

- Peaks during morning rush/noon, troughs during evening rush/nighttime.
- Troughs during morning rush/noon and peaks during evening rush/nighttime.

Scoring k-means clustering
--------------------------
While the above plot has nice interpretation, I try to see if the cluster memberships are well-classified, depending on the number of clusters chosen for k-means. To do this, I computed the [<u><b>silhouette coefficient</b></u>](https://en.wikipedia.org/wiki/Silhouette_(clustering)) averaged over all data points, as a function of the number of clusters.

The silhouette coefficient for a point is a value in [-1, 1] that measures (based on Euclidean distance) how well separated the point is to other clusters. It is depends on its intra-cluster distances to all other points within its cluster, and inter-cluster distances to points in other clusters. Silhouette coefficients (as these values are referred to as) near 1 indicate that the sample is far away from the neighboring clusters. A value of 0 indicates that the sample is on or very close to the decision boundary between two neighboring clusters and negative values indicate that those samples might have been assigned to the wrong cluster [1](https://scikit-learn.org/stable/auto_examples/cluster/plot_kmeans_silhouette_analysis.html).

![](https://raw.githubusercontent.com/chaddling/bikeshareTO_analysis/master/figures/silhouette_score.png)

From the plot, we see that ``n_clusters >= 5`` score poorer. while ``n_clusters = 2`` scores the best, we have to analyze further to see if the cluster members are well-represented by this scoring method (TBD). Below are some plots for these cluster sizes:

![](https://raw.githubusercontent.com/chaddling/bikeshareTO_analysis/master/figures/kmeans_clusters_2.png)

I am weary of this result since the ``n_clusters = 3`` plot shows that the ""rush hour"" clusters are roughly the same in magnitude in their means and fluctuations. So, while forcing one of them to be clustered with the low-usage cluster results in a higher scoring, the scoring method is Euclidean distance-based just like the clustering method so some bias can be introduced...

Seasonal usage
--------------
The aggregating the total number of trips per hour, conditioned on the season, we can see something interesting: that in the Summer+Fall seasons peak bike usages occur at morning/evening rush hours, while in the Winter+Spring seasons the peak usages occur at noon/nighttime. 

![](https://raw.githubusercontent.com/chaddling/bikeshareTO_analysis/master/figures/seasonal.png)

Further separating the rush hour clusters
-----------------------------------------
Based on the above observation, I tried clustering again the Winter+Spring and Summer+Fall subsets of data. We can indeed separate the the rush hour and nighttime usage behaviours:

![](https://raw.githubusercontent.com/chaddling/bikeshareTO_analysis/master/figures/kmeans_clusters_3_winter_spring.png)

![](https://raw.githubusercontent.com/chaddling/bikeshareTO_analysis/master/figures/kmeans_clusters_3_summer_fall.png)

Silhouette scoring from above rules out ``n_clusters >= 5``. Again, ``n_clusters = 2`` gives the best scoring. The scoring for 3 to 4 clusters however ranges from ~ 0.44-0.5.

Extra plots not shown here are collected in the ``figures`` folder.

Summary and future work
=======================
- Further analyze the quality of cluster assignments (bootstrapping?) and scoring metric (TBD).
- The <u>main insight</u> of this analysis shows that difference in seasonal usage accounts for a change in behaviour of the traffic in heavily-used bike share stations.
- By using the full time series (rather than taking averages), the feature vectors will encode the seasonal differences. This can allow us to see if some stations change their behaviours (from rush hour peak traffic to nighttime peak traffic) depending on the time of the year. Of course, this means that the feature vector will be much higher dimension...
- Does clustering in temporal behaviour translate to clustering in space? i.e. stations that are belong in the same clusters are also located close to each other in the city.

",6,6,1,0,transportation,"[bike-share, kmeans-clustering, time-series-clustering, transportation]",00000
126,documentation,tictactrip,N/A,N/A,https://api.github.com/repos/tictactrip/documentation,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C1D4:8AF9:706ABD:E86C66:6522427D.'}",N/A,N/A,N/A,N/A,transportation,"[N, /, A]",00000
127,navitia,govitia,N/A,N/A,https://api.github.com/repos/govitia/navitia,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C14C:2319:694BE0:DA1252:6522427E.'}",N/A,N/A,N/A,N/A,transportation,"[N, /, A]",00000
128,nptscot.github.io,nptscot,N/A,N/A,https://api.github.com/repos/nptscot/nptscot.github.io,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C117:7B5B:72DDFE:ECDD08:6522427E.'}",N/A,N/A,N/A,N/A,transportation,"[N, /, A]",00000
129,ADO,thomasleplus,N/A,N/A,https://api.github.com/repos/thomasleplus/ADO,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C137:6A74:1A32755:35F4CBD:6522427F.'}",N/A,N/A,N/A,N/A,transportation,"[N, /, A]",00000
130,intermodal-domain,Contargo,N/A,N/A,https://api.github.com/repos/Contargo/intermodal-domain,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C1FA:37E7:2D12819:5C4CE3C:6522427F.'}",N/A,N/A,N/A,N/A,transportation,"[N, /, A]",00000
131,Case-Study_Large-Scale-Vehicle-Routing-Problem-Optimization-VRP,Aniket-Thopte,N/A,N/A,https://api.github.com/repos/Aniket-Thopte/Case-Study_Large-Scale-Vehicle-Routing-Problem-Optimization-VRP,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C1FE:4D66:6C816C:E0963A:65224280.'}",N/A,N/A,N/A,N/A,transportation,"[N, /, A]",00000
132,transportation-user-group,cncf,N/A,N/A,https://api.github.com/repos/cncf/transportation-user-group,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C1A1:4179:2DEAF4D:5DF8A53:65224280.'}",N/A,N/A,N/A,N/A,transportation,"[N, /, A]",00000
133,barttraffic,aaroncohen,N/A,N/A,https://api.github.com/repos/aaroncohen/barttraffic,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C18C:178A:2C9D491:5B566E1:65224281.'}",N/A,N/A,N/A,N/A,transportation,"[N, /, A]",00000
134,road2citygml3,tum-gis,N/A,N/A,https://api.github.com/repos/tum-gis/road2citygml3,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C1CD:5F41:6F6E1E:E6611D:65224282.'}",N/A,N/A,N/A,N/A,transportation,"[N, /, A]",00000
135,bart-passenger-heatmap,jlperona,N/A,N/A,https://api.github.com/repos/jlperona/bart-passenger-heatmap,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C15A:5934:285FACB:5304A8B:65224282.'}",N/A,N/A,N/A,N/A,transportation,"[N, /, A]",00000
136,Find-Your-Team,MobilityHackLisbon,N/A,N/A,https://api.github.com/repos/MobilityHackLisbon/Find-Your-Team,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C144:5934:285FB50:5304BA9:65224283.'}",N/A,N/A,N/A,N/A,transportation,"[N, /, A]",00000
137,transilien,abulte,N/A,N/A,https://api.github.com/repos/abulte/transilien,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C120:6EE6:6E4F5A:E417DD:65224283.'}",N/A,N/A,N/A,N/A,transportation,"[N, /, A]",00000
138,Wasselni,mohamedebrahim96,N/A,N/A,https://api.github.com/repos/mohamedebrahim96/Wasselni,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C196:2115:70112A:E7BBC3:65224284.'}",N/A,N/A,N/A,N/A,transportation,"[N, /, A]",00000
139,EthTransport,etmdb,N/A,N/A,https://api.github.com/repos/etmdb/EthTransport,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C1BB:7AEF:2DD3491:5DB5504:65224284.'}",N/A,N/A,N/A,N/A,transportation,"[N, /, A]",00000
140,Accessibility-Sobi-Hamilton,paezha,N/A,N/A,https://api.github.com/repos/paezha/Accessibility-Sobi-Hamilton,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C118:0C72:723C72:EBFBCC:65224283.'}",N/A,N/A,N/A,N/A,transportation,"[N, /, A]",00000
141,trapos,ibarraespinosa,N/A,N/A,https://api.github.com/repos/ibarraespinosa/trapos,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C1EB:4F4C:7230B4:EBA828:65224285.'}",N/A,N/A,N/A,N/A,transportation,"[N, /, A]",00000
142,skywaybridgestatus,iannerney,N/A,N/A,https://api.github.com/repos/iannerney/skywaybridgestatus,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C121:41B1:70DB3F:E98142:65224286.'}",N/A,N/A,N/A,N/A,transportation,"[N, /, A]",00000
143,logistics-podcasts,bennobo,N/A,https://github.com/bennobo/logistics-podcasts,https://api.github.com/repos/bennobo/logistics-podcasts,A collection of podcasts on Supply Chain and Logistics.,"# Supply Chain and Logistics Podcasts

A collection of podcasts on Supply Chain and Logistics.

| Cover | Title | Website |
| :--- |:---| :--- |
| ![Aborn & Co](cover/aborn-and-co.png) | Aborn & Co | https://abornandcompany.podbean.com |
| ![BVL.digital](cover/bvl-digital.png) | BVL.digital | https://bvl-digital.de/podcast/ |
| ![Cargoholic](cover/cargoholic.png) | Cargoholic | https://itunes.apple.com/us/podcast/cargoholic-the-ultimate-logistics-podcast/id1269441609 |
| ![Containers](cover/containers.png) | Containers | https://soundcloud.com/containersfmg |
| ![DVZ Der Podcast](cover/dvz.png) | DVZ Der Podcast | https://www.dvz.de/rubriken/logistik/detail/news/dvz-der-podcast.html |
| ![ETA.fm](cover/eta-fm.png) | ETA.fm | https://eta.fm |
| ![FlyingTalkers ](cover/flyingtalkers.png) | FlyingTalkers  | https://www.stitcher.com/podcast/anchor-podcasts/flying-typers-cargo-talks |
| ![ICC Logistics](cover/icc-logistics.png) | ICC Logistics | https://itunes.apple.com/us/podcast/icc-logistics/id1021736846 |
| ![Inbound Logistics](cover/inbound-logistics.png) | Inbound Logistics | http://www.inboundlogistics.com/cms/podcast |
| ![ISM Podcasts](cover/ism-podcasts.png) | ISM Podcasts | https://www.instituteforsupplymanagement.org/Podcasts |
| ![JOC.com ](cover/joc.png) | JOC.com  | https://soundcloud.com/the-journal-of-commerce |
| ![Leaders in Supply Chain and Logistics](cover/leaders-in-supply-chain-and-logistics.png) | Leaders in Supply Chain and Logistics | https://www.alcottglobal.com/podcast/leaders-in-supply-chain-podcast/ |
| ![Let‘s Talk Supply Chain](cover/lets-talk-supplychain.png) | Let‘s Talk Supply Chain | https://www.letstalksupplychain.com |
| ![Living Logistics ](cover/living-logistics.png) | Living Logistics | https://www.dpdhl.com/de/presse/podcast.html  |
| ![LOGISTICS VIEWPOINTS](cover/logistics-viewpoints.png) | LOGISTICS VIEWPOINTS | https://logisticsviewpoints.com/resources/webcasts/ |
| ![Next Level Purchasing Association Podcast](cover/next-level-purchasing-association-podcast.png) | Next Level Purchasing Association Podcast | https://www.nextlevelpurchasing.com/supply-management-podcast |
| ![Manufacturing Talk Radio](cover/manufacturing-talk-radio.png) | Manufacturing Talk Radio | http://mfgtalkradio.com |
| ![Max und die SupplyChainHelden](cover/max-und-die-supply-chain-helden.png) | Max und die SupplyChainHelden | https://supplychainhelden.de/ |
| ![Profiles by Chain.io](cover/profiles.png) | Profiles by Chain.io | https://itunes.apple.com/us/podcast/profiles/id1440600547 |
| ![Rates & Lanes](cover/rates-and-lanes.png) | Rates & Lanes | http://www.blogtalkradio.com/rates |
| ![Shipping Podcast](cover/shipping-podcast.png) | Shipping Podcast | http://shippingpodcast.com |
| ![Square One Supply Chain Podcast](cover/square-one-supply-chain-podcast.png) | Square One Supply Chain Podcast | http://calgaryregion.libsyn.com/podcast |
| ![Straight Talk With Supply Chain Insights](cover/straight-talk-with-supply-chain-insights.png) | Straight Talk With Supply Chain Insights | https://itunes.apple.com/us/podcast/straight-talk-supply-chain/id664901377 |
| ![Supply Chain and Logistics Management](cover/supply-chain-and-logistics-management.png) | Supply Chain and Logistics Management | https://itunes.apple.com/itunes-u/supply-chain-logistics-management/id447339850 |
| ![Supply Chain Radio](cover/supply-chain-radio.png) | Supply Chain Radio | https://itunes.apple.com/de/podcast/supply-chain-radio/id983423048 |
| ![Supply Chain Secrets](cover/supply-chain-secrets.png) | Supply Chain Secrets | http://www.logisticsbureau.com/podcasts/ |
| ![SupplyChainBrain](cover/supplychainbrain.png) | SupplyChainBrain | https://itunes.apple.com/us/podcast/the-supplychainbrain-podcast/id898142329 |
| ![Talking Logistics](cover/talking-logistics.png) | Talking Logistics | https://talkinglogistics.com |
| ![The Loadstar](cover/the-loadstar.png) | The Loadstar | https://soundcloud.com/the-loadstar |
| ![The Logistics Podcast](cover/the-logistics-podcast.png) | The Logistics Podcast | https://www.shdlogistics.com/podcast |
| ![The Shipping Pod](cover/the-shipping-pod.png) | The Shipping Pod | http://theshippingpod.libsyn.com |
| ![The Logistics Tribe](cover/the-logistics-tribe.png) | The Logistics Tribe | https://logisticstribe.podigee.io/ |
| ![Triskele Logistics - CMI Podcast](cover/triskele-logistics.png) | Triskele Logistics - CMI Podcast | https://soundcloud.com/user-380624060 |
| ![What The Truck?!?](cover/what-the-truck.png) | What The Truck?!? | https://www.freightwaves.com/podcasts |
| ![XPO Logistics Less-Than-Truckload](cover/xpo-logistics.png) | XPO Logistics Less-Than-Truckload | https://player.fm/series/xpo-logistics-less-than-truckload |

## Single Episodes
* 2018/08/30: [Ryan Petersen on Building Flexport, a Modern Freight Forwarder (Y Combinator)](https://blog.ycombinator.com/ryan-petersen-on-building-flexport-a-modern-freight-forwarder/)
* 2018/06/06: [Logistics Of War, Podcast 40 (Imperial War Museums)](http://www.iwm.org.uk/history/podcasts/voices-of-the-first-world-war/podcast-40-logistics-of-war)
* 2017/07/17: [With $50M Raised, He’s Leading Cargo Container Software Space (Nathan Latka)](http://nathanlatka.com/thetop733)  
* 2017/06/08: [The Empire Strikes Back (Asymcar by Horace Dediu, Epsiode #34)](http://5by5.tv/asymcar/34)  
* 2013/10: [Inside the secret shipping industry (Rose George, TED Talks)](https://www.ted.com/talks/rose_george_inside_the_secret_shipping_industry)  

## Credits

<a href=""https://www.riege.com"" title=""Riege Software""><img src=""riege-software.png"" width=""200"" height=""46"" alt=""Riege Software""></a>",5,5,0,0,transportation,"[freight, logistic, logistics, logistics-podcasts, podcast, supply-chain, transport, transportation]",00000
144,sp,cb-cities,cb-cities,https://github.com/cb-cities/sp,https://api.github.com/repos/cb-cities/sp,Shortest Path,"# Dijkstra Prioriy Queue
> CB-Cities

[![License](https://img.shields.io/badge/license-MIT-blue.svg)](https://raw.githubusercontent.com/cb-cities/sp/develop/license.md)
[![Developer docs](https://img.shields.io/badge/developer-docs-blue.svg)](http://cb-cities.github.io/sp)
[![CircleCI](https://circleci.com/gh/cb-cities/sp.svg?style=svg)](https://circleci.com/gh/cb-cities/sp)
[![codecov](https://codecov.io/gh/cb-cities/sp/branch/develop/graph/badge.svg)](https://codecov.io/gh/cb-cities/sp)
[![](https://img.shields.io/github/issues-raw/cb-cities/sp.svg)](https://github.com/cb-cities/sp/issues)
[![Project management](https://img.shields.io/badge/projects-view-ff69b4.svg)](https://github.com/cb-cities/sp/projects/)


## Compile

* Run `mkdir build && cd build && cmake -DCMAKE_BUILD_TYPE=Release /path/to/CMakeLists.txt`.

* Run `make clean && make -jN` (where N is the number of cores).

## Run 

* To run the dijkstra shortest path `./sp ../sf.mtx`, because the executable `sp` would be generated inside the build directory. 

* Running just `./sp` will run the shortest path for the sample graph whose output is:

```
5 dist 21.2
4 dist 20.7
6 dist 11.5
3 dist 9.1
1 dist 0
2 dist 7.5
```

### Run tests

* Run `./sptest -s` (for a verbose output) or `ctest -VV`.

* Run `./sptest -l` to see available test options

### Run python interface
> Requires Python3

* Create a virtual environment: `virtualenv env` and activate: `source env/bin/activate`
* Install dependencies: `pip3 install -r requirements.txt` or `pip install -r requirements.txt`
* Benchmark Dijkstra PQ vs iGraph: `python3 ./interface.py`

### Run python benchmarks
> Requires Python3

* Create a virtual environment: `virtualenv env` and activate: `source env/bin/activate`
* Install dependencies: `pip3 install -r requirements.txt` or `pip install -r requirements.txt`
* Benchmark Dijkstra PQ vs iGraph: `python3 ./benchmark_dijkstra.py`


",5,5,3,3,transportation,[transportation],00000
145,ConnectedPedestrian,DenverConnectedVehicle,DenverConnectedVehicle,https://github.com/DenverConnectedVehicle/ConnectedPedestrian,https://api.github.com/repos/DenverConnectedVehicle/ConnectedPedestrian,Technical specifications for pedestrian detection as part of Denver's Connected Pedestrian project,"# Connected Pedestrian
## Advanced Transportation Congestion Management Technology Deployment (ATCMTD)
### Department of Public Works
### City and County of Denver, Colorado

This repository seeks comments on the technical specifications for Pedestrian Detection and Advance Warning Sign technologies ahead of procurement.

## Background
In 2018, the City and County of Denver (CCD) kicked off the Advanced Transportation and Congestion Management Technologies Deployment Program (ATCMTD) grant, awarded by the U.S. Department of Transportation. 

ATCMTD funds cutting-edge transportation technologies to reduce congestion and improve the safety of our transportation system. This is a four-year, $12M effort. Denver is testing and demonstrating connected vehicle (CV) and infrastructure technology for improvements to congestion and safety for Denver residents and businesses.

The ATCMTD program is comprised of three projects: Connected Freight, Connected TMC and Fleet, and Connected Pedestrian. The program as a whole, as well as the projects underneath it, are designed to test the feasibility and value of using new technology to reduce congestion and improve safety. The aim of the project is to demonstrate the impact of the technology at a systems-level and build out the corresponding technology infrastructure necessary for the City to scale after the program concludes. 

### Vision Statement

The goal of this project is to provide individuals accessing our city system of sidewalks with a safer way to cross the roadway. CCD will deploy adaptive pedestrian crossing technology, at select mid-block locations, that can adapt and respond to real-time conditions and alert oncoming vehicles to pedestrians ahead in the crosswalk to prevent traffic injuries and lower the potential risk of a crash. This project will provide real-time alerts to drivers, making crossing the street safer for all members of the public.

<img width=""563"" alt=""Rendering of a future Connected Pedestrian system"" src=""https://user-images.githubusercontent.com/15271211/58514333-a882ad00-816f-11e9-9b43-c957547d0ce8.png"">

_Rendering of a future connected pedestrian system_

ATCMTD serves as the leading-edge transportation technology deployment grant for Denver. Many other Intelligent Transportation System (ITS) and public works projects are looking to this program to identify viable pedestrian detection and advance warning signs that meet a broader set of city needs. Technologies that meet Denver's needs here have the potential to scale across many city projects and programs. Additional funding is being sought to expand this deployment.

The initial deployment locations will be at four HAWK crossings:
* East 29th Ave and Gelena Street
* Martin Luther King Jr. Blvd and Gelena Street
* Morrison Road and Raleigh Street
* Green Valley Ranch Blvd and Walden Street

<img width=""563"" alt=""Deployment Locations"" src=""https://github.com/DenverConnectedVehicle/ConnectedPedestrian/blob/master/ConnectedPedLocations.png"">

## Requests for Comment and Information

Denver seeks feedback and comments on technical specifications for two of the technologies being deployed by the Connected Pedestrian project: Automated Pedestrian Detection and Advance Warning Signs.

*  [Automated Pedestrian Detection](/PedDetection.md) 
*  [Advance Warning Sign](/AdvanceWarningSign.md)

### Process for commenting

Please use one of the two following methods for providing feedback on these technology specifications:

1. Submit a pull request with direct changes in either specification. Please utilize commit comments to provide context for your recommended edits.
1. Submit a ticket for broader recommendations, or non-specific edits.

Denver will review pull requests to ensure that edits don't favor a specific vendor or technology. If the first version of our specifications inadvertently closes off solutions you believe we should be considering, please create a ticket to note that for us.
",5,5,8,1,transportation,"[congestion-management, denver, safety, technical-specifications, technology, transportation]",00000
146,isuelogit,pabloguarda,N/A,https://github.com/pabloguarda/isuelogit,https://api.github.com/repos/pabloguarda/isuelogit,Inverse Stochastic User Equilibrium with LOGIT assignment ,"# Inverse Stochastic User Equilibrium with LOGIT assignment (isuelogit)

Stochastic user equilibrium with logit assignment (`sue-logit`) outputs an assignment of travelers in a transportation network where no individual believes that he can unilaterally improve his utility by choosing an alternative path. A key limitation of `sue-logit` is that it requires knowing the parameters of the traveler's utility function beforehand. 

The `isuelogit` package addresses the aforementioned limitation by using the output of `sue-logit` to solve an inverse problem, namely, estimating the parameters of the travelers' utility function using traffic counts.

To understand the theory behind the algorithms and the use cases of this package, please review the preprint available in this [link](https://arxiv.org/abs/2204.10964)

## Development setup

1. Clone the repository
2. Create virtual environment: `python3 -m venv venv-isuelogit`
3. Activate virtual environment: `source venv-isuelogit/bin/activate`
4. Install the package: `pip install -e .`
5. Install the development dependencies: `pip install -r requirements/dev.txt`
6. Run the tests: `pytest`

## Jupyter notebooks
1. Install jupyter lab: `pip install jupyter notebook`
2. Install ipython kernel for jupyter: `pip install ipykernel`
3. Add your virtual environment to Jupyter:  `python3 -m ipykernel install --user --name=venv-isuelogit`
4. Open any of the notebooks included in the folder `notebooks` 
5. Choose kernel `venv-isuelogit` before running the notebook

## Collaboration
For any questions or interest in collaborating on this project, please contact pabloguarda@cmu.edu. This package was developed under the guidance of Prof. Sean Qian. 
",5,5,0,0,transportation,"[choice-modeling, network-analysis, python, simulation-modeling, transportation]",00000
147,FetchMuniTimes,thomasleplus,N/A,https://github.com/thomasleplus/FetchMuniTimes,https://api.github.com/repos/thomasleplus/FetchMuniTimes,Deployment package for an AWS Lamba returning the next SFMTA Muni times,"# FetchMuniTimes

Deployment package for an AWS Lamba returning the next times at a selection of stations.

[![Flake8](https://github.com/thomasleplus/FetchMuniTimes/workflows/Flake8/badge.svg)](https://github.com/thomasleplus/FetchMuniTimes/actions?query=workflow:""Flake8"")
[![CodeQL](https://github.com/thomasleplus/FetchMuniTimes/workflows/CodeQL/badge.svg)](https://github.com/thomasleplus/FetchMuniTimes/actions?query=workflow:""CodeQL"")

This Python Lambda can be mapped to an AWS API Gateway GET Resource with 3 URL parameters:
* uuid: the UUID of a Transit Tracker created at https://511.org/transit/tracker/overview beforehand
* min: the minimum time to display (in minutes, default is 0)
* max: the maximum time to display (in minutes, default is 99)
",5,5,2,0,transportation,"[aws, aws-lambda, aws-lambda-python, awslambda, commute, commute-times, commuting, lambda, muni, python, san-francisco, sanfrancisco, sfmta, transportation, transportation-network, transportation-planning]",00000
148,ntcip,mnit-rtmc,mnit-rtmc,https://github.com/mnit-rtmc/ntcip,https://api.github.com/repos/mnit-rtmc/ntcip,Rust NTCIP support library,"# NTCIP

Rust library for National Transportation Communications for ITS (Intelligent
Transportation Systems) Protocol.  [NTCIP] is a set of standards for traffic
control devices, such as _dynamic message signs_, _ramp meters_ and _traffic
signals_.

This library is in an early stage, with suppport for DMS rendering using
_MULTI_.

[Docs]


[Docs]: https://docs.rs/ntcip
[NTCIP]: https://www.ntcip.org
",5,5,6,0,transportation,"[road, road-signs, road-traffic, rust, transport, transportation]",00000
149,traffic-sensor,cityofaustin,cityofaustin,https://github.com/cityofaustin/traffic-sensor,https://api.github.com/repos/cityofaustin/traffic-sensor,A City of Austin initative to create a network of traffic sensors built with commodity hardware and open-source software,"# ATX Traffic Data Collection Network

This is a City of Austin initative to create a network of traffic sensors built with commodity hardware and open-source software. We're kicking off this project at the [2017 ATX Hack for Change](http://atxhackforchange.org/) and are sponsoring it as part of the [GigaTECHs App Competition](https://herox.com/GigaTECHSATX/guidelines).

 * [Vision](#vision)
 * [Project Tasks](#project-tasks)
 * [Hardware](#hardware)
 * [Talk to Us](#talk-to-us)

## Vision

<img src=""/media/cabinet_pi_sm.jpg"" align=""left"" alt=""A Raspberry Pi in a traffic signal cabinet."" height=""275px""> 

Our goal is to create a network of traffic sensors built with commodity hardware and open-source software. We intend to make the sensor software and collected data publicly available so that research institutions, private companies, and the general public can help us derive new insights about Austin’s transportation system. 

We do not have the IT resources to take on this project by ourselves, and commercial data collection solutions are prohibitively expensive. That’s why we’re seeking help from Austin’s incredible community of civic-minded technologists to help us achieve our goal. We believe strongly that, if successful, this project will lead to tangible improvements in Austin’s transportation system, and will represent a truly innovative approach to the deployment of community-driven smart city technologies.

<br>

## Project Tasks

### Data Collection 

Write a data collection program to run on an SBC (single board computer) such as a Raspberry Pi, an Arduino, or an Edison. The program can use WiFi, Bluetooth, environmental data, and/or any other sensor technology that the SBC supports. The software should:
 * Produce data that can be easily consumed for processing and analysis.
 * Anonymize MAC addresses, ESSIDs, IP addresses, or any other potentially sensitive data

### Traffic Data Processing

Create a tool which which processes collected WiFi, Bluetooth, and other data to derive meaninful information about traffic conditions. Outputs might include:
  * Travel Time
  * Traffic Volume
  * Roadway user classification (motorized vehicle, pedestrian, etc.)

### Device Management

Write a program that manages the traffic sensors remotely. The application should allow the end-user to:
 * Retrieve information about installed sensors, including device status, device location, memory usage, etc.
 * Configure and deploy a new traffic sensor
 * Remotely push software updates to sensors

### Visual Analysis
 Create a web-application to visualize the Austin transportation network in a way that incorporates the traffic sensor data. The application might display:
 * Real-Time Traffic Conditions
 * How Traffic Conditions Change by day of week and time of day
 * Origin-Destination Analysis


## Hardware

We'll have the following equipment on-hand during the ATX Hack for Change:
 * [Raspbery Pi 3](https://www.raspberrypi.org/products/raspberry-pi-3-model-b/)'s running Raspbian installed via [NOOBS](https://www.raspberrypi.org/downloads/noobs/). SSH is enabled with the [default user login](https://www.raspberrypi.org/documentation/linux/usage/users.md).
 * [External WiFi USB adapters](https://www.amazon.com/gp/product/B00H95C0A2/ref=oh_aui_detailpage_o01_s00?ie=UTF8&psc=1) which use the RT5370 chipset.
 * [DHT22 Digital Temperature and Humidity Sensors](https://www.amazon.com/gp/product/B01K1Q6DEO/ref=oh_aui_detailpage_o03_s01?ie=UTF8&psc=1)
 * [Class 1 Bluetooth 4.0 USB adapters](https://www.amazon.com/gp/product/B012EVAME6/ref=oh_aui_detailpage_o04_s01?ie=UTF8&psc=1)


## Talk to Us
 * Slack (details TBD)
 * Email <a href=""mailto:HackTheTraffic@austintexas.gov"" target=""_top"">HackTheTraffic@austintexas.gov</a>
 
",5,5,7,0,transportation,"[commodity-hardware, open-source, single-board-computers, traffic-data, transportation]",00000
150,logistics-podcasts,bennobo,N/A,https://github.com/bennobo/logistics-podcasts,https://api.github.com/repos/bennobo/logistics-podcasts,A collection of podcasts on Supply Chain and Logistics.,"# Supply Chain and Logistics Podcasts

A collection of podcasts on Supply Chain and Logistics.

| Cover | Title | Website |
| :--- |:---| :--- |
| ![Aborn & Co](cover/aborn-and-co.png) | Aborn & Co | https://abornandcompany.podbean.com |
| ![BVL.digital](cover/bvl-digital.png) | BVL.digital | https://bvl-digital.de/podcast/ |
| ![Cargoholic](cover/cargoholic.png) | Cargoholic | https://itunes.apple.com/us/podcast/cargoholic-the-ultimate-logistics-podcast/id1269441609 |
| ![Containers](cover/containers.png) | Containers | https://soundcloud.com/containersfmg |
| ![DVZ Der Podcast](cover/dvz.png) | DVZ Der Podcast | https://www.dvz.de/rubriken/logistik/detail/news/dvz-der-podcast.html |
| ![ETA.fm](cover/eta-fm.png) | ETA.fm | https://eta.fm |
| ![FlyingTalkers ](cover/flyingtalkers.png) | FlyingTalkers  | https://www.stitcher.com/podcast/anchor-podcasts/flying-typers-cargo-talks |
| ![ICC Logistics](cover/icc-logistics.png) | ICC Logistics | https://itunes.apple.com/us/podcast/icc-logistics/id1021736846 |
| ![Inbound Logistics](cover/inbound-logistics.png) | Inbound Logistics | http://www.inboundlogistics.com/cms/podcast |
| ![ISM Podcasts](cover/ism-podcasts.png) | ISM Podcasts | https://www.instituteforsupplymanagement.org/Podcasts |
| ![JOC.com ](cover/joc.png) | JOC.com  | https://soundcloud.com/the-journal-of-commerce |
| ![Leaders in Supply Chain and Logistics](cover/leaders-in-supply-chain-and-logistics.png) | Leaders in Supply Chain and Logistics | https://www.alcottglobal.com/podcast/leaders-in-supply-chain-podcast/ |
| ![Let‘s Talk Supply Chain](cover/lets-talk-supplychain.png) | Let‘s Talk Supply Chain | https://www.letstalksupplychain.com |
| ![Living Logistics ](cover/living-logistics.png) | Living Logistics | https://www.dpdhl.com/de/presse/podcast.html  |
| ![LOGISTICS VIEWPOINTS](cover/logistics-viewpoints.png) | LOGISTICS VIEWPOINTS | https://logisticsviewpoints.com/resources/webcasts/ |
| ![Next Level Purchasing Association Podcast](cover/next-level-purchasing-association-podcast.png) | Next Level Purchasing Association Podcast | https://www.nextlevelpurchasing.com/supply-management-podcast |
| ![Manufacturing Talk Radio](cover/manufacturing-talk-radio.png) | Manufacturing Talk Radio | http://mfgtalkradio.com |
| ![Max und die SupplyChainHelden](cover/max-und-die-supply-chain-helden.png) | Max und die SupplyChainHelden | https://supplychainhelden.de/ |
| ![Profiles by Chain.io](cover/profiles.png) | Profiles by Chain.io | https://itunes.apple.com/us/podcast/profiles/id1440600547 |
| ![Rates & Lanes](cover/rates-and-lanes.png) | Rates & Lanes | http://www.blogtalkradio.com/rates |
| ![Shipping Podcast](cover/shipping-podcast.png) | Shipping Podcast | http://shippingpodcast.com |
| ![Square One Supply Chain Podcast](cover/square-one-supply-chain-podcast.png) | Square One Supply Chain Podcast | http://calgaryregion.libsyn.com/podcast |
| ![Straight Talk With Supply Chain Insights](cover/straight-talk-with-supply-chain-insights.png) | Straight Talk With Supply Chain Insights | https://itunes.apple.com/us/podcast/straight-talk-supply-chain/id664901377 |
| ![Supply Chain and Logistics Management](cover/supply-chain-and-logistics-management.png) | Supply Chain and Logistics Management | https://itunes.apple.com/itunes-u/supply-chain-logistics-management/id447339850 |
| ![Supply Chain Radio](cover/supply-chain-radio.png) | Supply Chain Radio | https://itunes.apple.com/de/podcast/supply-chain-radio/id983423048 |
| ![Supply Chain Secrets](cover/supply-chain-secrets.png) | Supply Chain Secrets | http://www.logisticsbureau.com/podcasts/ |
| ![SupplyChainBrain](cover/supplychainbrain.png) | SupplyChainBrain | https://itunes.apple.com/us/podcast/the-supplychainbrain-podcast/id898142329 |
| ![Talking Logistics](cover/talking-logistics.png) | Talking Logistics | https://talkinglogistics.com |
| ![The Loadstar](cover/the-loadstar.png) | The Loadstar | https://soundcloud.com/the-loadstar |
| ![The Logistics Podcast](cover/the-logistics-podcast.png) | The Logistics Podcast | https://www.shdlogistics.com/podcast |
| ![The Shipping Pod](cover/the-shipping-pod.png) | The Shipping Pod | http://theshippingpod.libsyn.com |
| ![The Logistics Tribe](cover/the-logistics-tribe.png) | The Logistics Tribe | https://logisticstribe.podigee.io/ |
| ![Triskele Logistics - CMI Podcast](cover/triskele-logistics.png) | Triskele Logistics - CMI Podcast | https://soundcloud.com/user-380624060 |
| ![What The Truck?!?](cover/what-the-truck.png) | What The Truck?!? | https://www.freightwaves.com/podcasts |
| ![XPO Logistics Less-Than-Truckload](cover/xpo-logistics.png) | XPO Logistics Less-Than-Truckload | https://player.fm/series/xpo-logistics-less-than-truckload |

## Single Episodes
* 2018/08/30: [Ryan Petersen on Building Flexport, a Modern Freight Forwarder (Y Combinator)](https://blog.ycombinator.com/ryan-petersen-on-building-flexport-a-modern-freight-forwarder/)
* 2018/06/06: [Logistics Of War, Podcast 40 (Imperial War Museums)](http://www.iwm.org.uk/history/podcasts/voices-of-the-first-world-war/podcast-40-logistics-of-war)
* 2017/07/17: [With $50M Raised, He’s Leading Cargo Container Software Space (Nathan Latka)](http://nathanlatka.com/thetop733)  
* 2017/06/08: [The Empire Strikes Back (Asymcar by Horace Dediu, Epsiode #34)](http://5by5.tv/asymcar/34)  
* 2013/10: [Inside the secret shipping industry (Rose George, TED Talks)](https://www.ted.com/talks/rose_george_inside_the_secret_shipping_industry)  

## Credits

<a href=""https://www.riege.com"" title=""Riege Software""><img src=""riege-software.png"" width=""200"" height=""46"" alt=""Riege Software""></a>",5,5,0,0,transportation,"[freight, logistic, logistics, logistics-podcasts, podcast, supply-chain, transport, transportation]",00000
151,sp,cb-cities,cb-cities,https://github.com/cb-cities/sp,https://api.github.com/repos/cb-cities/sp,Shortest Path,"# Dijkstra Prioriy Queue
> CB-Cities

[![License](https://img.shields.io/badge/license-MIT-blue.svg)](https://raw.githubusercontent.com/cb-cities/sp/develop/license.md)
[![Developer docs](https://img.shields.io/badge/developer-docs-blue.svg)](http://cb-cities.github.io/sp)
[![CircleCI](https://circleci.com/gh/cb-cities/sp.svg?style=svg)](https://circleci.com/gh/cb-cities/sp)
[![codecov](https://codecov.io/gh/cb-cities/sp/branch/develop/graph/badge.svg)](https://codecov.io/gh/cb-cities/sp)
[![](https://img.shields.io/github/issues-raw/cb-cities/sp.svg)](https://github.com/cb-cities/sp/issues)
[![Project management](https://img.shields.io/badge/projects-view-ff69b4.svg)](https://github.com/cb-cities/sp/projects/)


## Compile

* Run `mkdir build && cd build && cmake -DCMAKE_BUILD_TYPE=Release /path/to/CMakeLists.txt`.

* Run `make clean && make -jN` (where N is the number of cores).

## Run 

* To run the dijkstra shortest path `./sp ../sf.mtx`, because the executable `sp` would be generated inside the build directory. 

* Running just `./sp` will run the shortest path for the sample graph whose output is:

```
5 dist 21.2
4 dist 20.7
6 dist 11.5
3 dist 9.1
1 dist 0
2 dist 7.5
```

### Run tests

* Run `./sptest -s` (for a verbose output) or `ctest -VV`.

* Run `./sptest -l` to see available test options

### Run python interface
> Requires Python3

* Create a virtual environment: `virtualenv env` and activate: `source env/bin/activate`
* Install dependencies: `pip3 install -r requirements.txt` or `pip install -r requirements.txt`
* Benchmark Dijkstra PQ vs iGraph: `python3 ./interface.py`

### Run python benchmarks
> Requires Python3

* Create a virtual environment: `virtualenv env` and activate: `source env/bin/activate`
* Install dependencies: `pip3 install -r requirements.txt` or `pip install -r requirements.txt`
* Benchmark Dijkstra PQ vs iGraph: `python3 ./benchmark_dijkstra.py`


",5,5,3,3,transportation,[transportation],00000
152,ConnectedPedestrian,DenverConnectedVehicle,DenverConnectedVehicle,https://github.com/DenverConnectedVehicle/ConnectedPedestrian,https://api.github.com/repos/DenverConnectedVehicle/ConnectedPedestrian,Technical specifications for pedestrian detection as part of Denver's Connected Pedestrian project,"# Connected Pedestrian
## Advanced Transportation Congestion Management Technology Deployment (ATCMTD)
### Department of Public Works
### City and County of Denver, Colorado

This repository seeks comments on the technical specifications for Pedestrian Detection and Advance Warning Sign technologies ahead of procurement.

## Background
In 2018, the City and County of Denver (CCD) kicked off the Advanced Transportation and Congestion Management Technologies Deployment Program (ATCMTD) grant, awarded by the U.S. Department of Transportation. 

ATCMTD funds cutting-edge transportation technologies to reduce congestion and improve the safety of our transportation system. This is a four-year, $12M effort. Denver is testing and demonstrating connected vehicle (CV) and infrastructure technology for improvements to congestion and safety for Denver residents and businesses.

The ATCMTD program is comprised of three projects: Connected Freight, Connected TMC and Fleet, and Connected Pedestrian. The program as a whole, as well as the projects underneath it, are designed to test the feasibility and value of using new technology to reduce congestion and improve safety. The aim of the project is to demonstrate the impact of the technology at a systems-level and build out the corresponding technology infrastructure necessary for the City to scale after the program concludes. 

### Vision Statement

The goal of this project is to provide individuals accessing our city system of sidewalks with a safer way to cross the roadway. CCD will deploy adaptive pedestrian crossing technology, at select mid-block locations, that can adapt and respond to real-time conditions and alert oncoming vehicles to pedestrians ahead in the crosswalk to prevent traffic injuries and lower the potential risk of a crash. This project will provide real-time alerts to drivers, making crossing the street safer for all members of the public.

<img width=""563"" alt=""Rendering of a future Connected Pedestrian system"" src=""https://user-images.githubusercontent.com/15271211/58514333-a882ad00-816f-11e9-9b43-c957547d0ce8.png"">

_Rendering of a future connected pedestrian system_

ATCMTD serves as the leading-edge transportation technology deployment grant for Denver. Many other Intelligent Transportation System (ITS) and public works projects are looking to this program to identify viable pedestrian detection and advance warning signs that meet a broader set of city needs. Technologies that meet Denver's needs here have the potential to scale across many city projects and programs. Additional funding is being sought to expand this deployment.

The initial deployment locations will be at four HAWK crossings:
* East 29th Ave and Gelena Street
* Martin Luther King Jr. Blvd and Gelena Street
* Morrison Road and Raleigh Street
* Green Valley Ranch Blvd and Walden Street

<img width=""563"" alt=""Deployment Locations"" src=""https://github.com/DenverConnectedVehicle/ConnectedPedestrian/blob/master/ConnectedPedLocations.png"">

## Requests for Comment and Information

Denver seeks feedback and comments on technical specifications for two of the technologies being deployed by the Connected Pedestrian project: Automated Pedestrian Detection and Advance Warning Signs.

*  [Automated Pedestrian Detection](/PedDetection.md) 
*  [Advance Warning Sign](/AdvanceWarningSign.md)

### Process for commenting

Please use one of the two following methods for providing feedback on these technology specifications:

1. Submit a pull request with direct changes in either specification. Please utilize commit comments to provide context for your recommended edits.
1. Submit a ticket for broader recommendations, or non-specific edits.

Denver will review pull requests to ensure that edits don't favor a specific vendor or technology. If the first version of our specifications inadvertently closes off solutions you believe we should be considering, please create a ticket to note that for us.
",5,5,8,1,transportation,"[congestion-management, denver, safety, technical-specifications, technology, transportation]",00000
153,isuelogit,pabloguarda,N/A,https://github.com/pabloguarda/isuelogit,https://api.github.com/repos/pabloguarda/isuelogit,Inverse Stochastic User Equilibrium with LOGIT assignment ,"# Inverse Stochastic User Equilibrium with LOGIT assignment (isuelogit)

Stochastic user equilibrium with logit assignment (`sue-logit`) outputs an assignment of travelers in a transportation network where no individual believes that he can unilaterally improve his utility by choosing an alternative path. A key limitation of `sue-logit` is that it requires knowing the parameters of the traveler's utility function beforehand. 

The `isuelogit` package addresses the aforementioned limitation by using the output of `sue-logit` to solve an inverse problem, namely, estimating the parameters of the travelers' utility function using traffic counts.

To understand the theory behind the algorithms and the use cases of this package, please review the preprint available in this [link](https://arxiv.org/abs/2204.10964)

## Development setup

1. Clone the repository
2. Create virtual environment: `python3 -m venv venv-isuelogit`
3. Activate virtual environment: `source venv-isuelogit/bin/activate`
4. Install the package: `pip install -e .`
5. Install the development dependencies: `pip install -r requirements/dev.txt`
6. Run the tests: `pytest`

## Jupyter notebooks
1. Install jupyter lab: `pip install jupyter notebook`
2. Install ipython kernel for jupyter: `pip install ipykernel`
3. Add your virtual environment to Jupyter:  `python3 -m ipykernel install --user --name=venv-isuelogit`
4. Open any of the notebooks included in the folder `notebooks` 
5. Choose kernel `venv-isuelogit` before running the notebook

## Collaboration
For any questions or interest in collaborating on this project, please contact pabloguarda@cmu.edu. This package was developed under the guidance of Prof. Sean Qian. 
",5,5,0,0,transportation,"[choice-modeling, network-analysis, python, simulation-modeling, transportation]",00000
154,gtfs2nx,ai4up,ai4up,https://github.com/ai4up/gtfs2nx,https://api.github.com/repos/ai4up/gtfs2nx,"Convert GTFS feeds to realistic, routable NetworkX graph.","# gtfs2nx

Create routable [NetworkX](https://github.com/networkx/networkx) graph with realistic transfer times from [GTFS](https://developers.google.com/transit/gtfs/) feeds. 🚌 🚆 🚡 


## How
* Cleaning & preprocessing
    * Remove trips with unrealistic travel times and speeds
    * Fix trips contradictory stop sequences and departure times
* Enable routability
    * Ensure each node belongs only to single route
    * Calculate average segment travel times
    * Calculate average stop headway and service frequency
    * Add edges for walking transfer between routes with realistic transfer time (walking time + headway / 2)


## Install
```bash
pip install git+https://github.com/ai4up/gtfs2nx@v0.2.0
```

## Usage
```Python
import gtfs2nx as gx

G = gx.transit_graph('path/to/GTFS-feed.zip')
```

Customize transit network:
```Python
G = gx.transit_graph(
    gtfs_paths='path/to/GTFS-feed.zip',
    time_window=('06:00', '08:00'),
    route_types=[700], # only buses
    walk_transfer_max_distance=400, # allow transfers with long walking distance
)
```

See the [API docs](./docs/api.md) for more details and the [getting-started notebook](./docs/getting_started.ipynb) for a small demo.


## Exemplary NetworkX analysis
```Python
import networkx as nx

# access precomputed stop characteristics
frequency = nx.get_node_attributes(G, 'frequency')

# routing
route = nx.shortest_path(G, from_stop, to_stop, weight='weight')

# travel time to other stops
travel_times = nx.single_source_dijkstra_path_length(G, source=from_stop, weight='weight')

# centrality analysis
centrality = nx.closeness_centrality(G, distance='weight')
```

## Further use cases

* [Using graph neural networks to classify missing GTFS route types](https://gist.github.com/FlorianNachtigall/9df1c9f7417aa512220756a35c36b45f)
* [Validating NetworkX transit graph: Comparing routes and travel times to Google Maps](https://gist.github.com/FlorianNachtigall/3e0d2f5e4fa8b2e893a29445a99dfb4f)


## Development
Build from source using [poetry](https://python-poetry.org/):
```
poetry build
pip install dist/gtfs2nx-*.whl
```

Configure post-checkout hook for branch specific .gitignore files:
```
git config --local core.hooksPath .githooks/
```
",5,5,1,0,transportation,"[gis, gtfs, network-analysis, networkx, routing, transit, transportation]",00000
155,FetchMuniTimes,thomasleplus,N/A,https://github.com/thomasleplus/FetchMuniTimes,https://api.github.com/repos/thomasleplus/FetchMuniTimes,Deployment package for an AWS Lamba returning the next SFMTA Muni times,"# FetchMuniTimes

Deployment package for an AWS Lamba returning the next times at a selection of stations.

[![Flake8](https://github.com/thomasleplus/FetchMuniTimes/workflows/Flake8/badge.svg)](https://github.com/thomasleplus/FetchMuniTimes/actions?query=workflow:""Flake8"")
[![CodeQL](https://github.com/thomasleplus/FetchMuniTimes/workflows/CodeQL/badge.svg)](https://github.com/thomasleplus/FetchMuniTimes/actions?query=workflow:""CodeQL"")

This Python Lambda can be mapped to an AWS API Gateway GET Resource with 3 URL parameters:
* uuid: the UUID of a Transit Tracker created at https://511.org/transit/tracker/overview beforehand
* min: the minimum time to display (in minutes, default is 0)
* max: the maximum time to display (in minutes, default is 99)
",5,5,2,0,transportation,"[aws, aws-lambda, aws-lambda-python, awslambda, commute, commute-times, commuting, lambda, muni, python, san-francisco, sanfrancisco, sfmta, transportation, transportation-network, transportation-planning]",00000
156,ntcip,mnit-rtmc,mnit-rtmc,https://github.com/mnit-rtmc/ntcip,https://api.github.com/repos/mnit-rtmc/ntcip,Rust NTCIP support library,"# NTCIP

Rust library for National Transportation Communications for ITS (Intelligent
Transportation Systems) Protocol.  [NTCIP] is a set of standards for traffic
control devices, such as _dynamic message signs_, _ramp meters_ and _traffic
signals_.

This library is in an early stage, with suppport for DMS rendering using
_MULTI_.

[Docs]


[Docs]: https://docs.rs/ntcip
[NTCIP]: https://www.ntcip.org
",5,5,6,0,transportation,"[road, road-signs, road-traffic, rust, transport, transportation]",00000
157,traffic-sensor,cityofaustin,cityofaustin,https://github.com/cityofaustin/traffic-sensor,https://api.github.com/repos/cityofaustin/traffic-sensor,A City of Austin initative to create a network of traffic sensors built with commodity hardware and open-source software,"# ATX Traffic Data Collection Network

This is a City of Austin initative to create a network of traffic sensors built with commodity hardware and open-source software. We're kicking off this project at the [2017 ATX Hack for Change](http://atxhackforchange.org/) and are sponsoring it as part of the [GigaTECHs App Competition](https://herox.com/GigaTECHSATX/guidelines).

 * [Vision](#vision)
 * [Project Tasks](#project-tasks)
 * [Hardware](#hardware)
 * [Talk to Us](#talk-to-us)

## Vision

<img src=""/media/cabinet_pi_sm.jpg"" align=""left"" alt=""A Raspberry Pi in a traffic signal cabinet."" height=""275px""> 

Our goal is to create a network of traffic sensors built with commodity hardware and open-source software. We intend to make the sensor software and collected data publicly available so that research institutions, private companies, and the general public can help us derive new insights about Austin’s transportation system. 

We do not have the IT resources to take on this project by ourselves, and commercial data collection solutions are prohibitively expensive. That’s why we’re seeking help from Austin’s incredible community of civic-minded technologists to help us achieve our goal. We believe strongly that, if successful, this project will lead to tangible improvements in Austin’s transportation system, and will represent a truly innovative approach to the deployment of community-driven smart city technologies.

<br>

## Project Tasks

### Data Collection 

Write a data collection program to run on an SBC (single board computer) such as a Raspberry Pi, an Arduino, or an Edison. The program can use WiFi, Bluetooth, environmental data, and/or any other sensor technology that the SBC supports. The software should:
 * Produce data that can be easily consumed for processing and analysis.
 * Anonymize MAC addresses, ESSIDs, IP addresses, or any other potentially sensitive data

### Traffic Data Processing

Create a tool which which processes collected WiFi, Bluetooth, and other data to derive meaninful information about traffic conditions. Outputs might include:
  * Travel Time
  * Traffic Volume
  * Roadway user classification (motorized vehicle, pedestrian, etc.)

### Device Management

Write a program that manages the traffic sensors remotely. The application should allow the end-user to:
 * Retrieve information about installed sensors, including device status, device location, memory usage, etc.
 * Configure and deploy a new traffic sensor
 * Remotely push software updates to sensors

### Visual Analysis
 Create a web-application to visualize the Austin transportation network in a way that incorporates the traffic sensor data. The application might display:
 * Real-Time Traffic Conditions
 * How Traffic Conditions Change by day of week and time of day
 * Origin-Destination Analysis


## Hardware

We'll have the following equipment on-hand during the ATX Hack for Change:
 * [Raspbery Pi 3](https://www.raspberrypi.org/products/raspberry-pi-3-model-b/)'s running Raspbian installed via [NOOBS](https://www.raspberrypi.org/downloads/noobs/). SSH is enabled with the [default user login](https://www.raspberrypi.org/documentation/linux/usage/users.md).
 * [External WiFi USB adapters](https://www.amazon.com/gp/product/B00H95C0A2/ref=oh_aui_detailpage_o01_s00?ie=UTF8&psc=1) which use the RT5370 chipset.
 * [DHT22 Digital Temperature and Humidity Sensors](https://www.amazon.com/gp/product/B01K1Q6DEO/ref=oh_aui_detailpage_o03_s01?ie=UTF8&psc=1)
 * [Class 1 Bluetooth 4.0 USB adapters](https://www.amazon.com/gp/product/B012EVAME6/ref=oh_aui_detailpage_o04_s01?ie=UTF8&psc=1)


## Talk to Us
 * Slack (details TBD)
 * Email <a href=""mailto:HackTheTraffic@austintexas.gov"" target=""_top"">HackTheTraffic@austintexas.gov</a>
 
",5,5,7,0,transportation,"[commodity-hardware, open-source, single-board-computers, traffic-data, transportation]",00000
158,Transportation-Order-Management-System,EfthymiosChatziathanasiadis,N/A,https://github.com/EfthymiosChatziathanasiadis/Transportation-Order-Management-System,https://api.github.com/repos/EfthymiosChatziathanasiadis/Transportation-Order-Management-System,Optimal routing of transport orders with Dijkstra and scheduling,"{'message': 'Not Found', 'documentation_url': 'https://docs.github.com/rest/repos/contents#get-repository-content'}",5,5,1,0,transportation,"[css, dijkstra-shortest-path, intermodal, java, javafx-desktop-apps, routing-algorithm, scheduling-problem, sqlite-database, sqlite3, transportation, transportation-planning]",00000
159,sierra-charlie,cb-cities,cb-cities,https://github.com/cb-cities/sierra-charlie,https://api.github.com/repos/cb-cities/sierra-charlie,Browser based interactive graph visualisation ,"# _sierra-charlie_

[![License](https://img.shields.io/badge/license-MIT-blue.svg)](https://github.com/cb-cities/sierra-charlie/blob/master/LICENSE.md)
[![CLA assistant](https://cla-assistant.io/readme/badge/cb-cities/sierra-charlie)](https://cla-assistant.io/cb-cities/sierra-charlie)
[![CircleCI](https://circleci.com/gh/cb-cities/sierra-charlie.svg?style=svg&circle-token=11d612a668f402164098ac05ff503a248ed8a59a)](https://circleci.com/gh/cb-cities/sierra-charlie)
[![Dependencies status](https://david-dm.org/cb-cities/sierra-charlie/status.svg)](https://david-dm.org/cb-cities/sierra-charlie)

### Usage

This project does not include input files. These input files describe the network you wish to visualise, i.e. the roads and junctions. These are required inside the `json` folder.
The schema for these files is found in the `json-schema` directory.

### Easy way - build and run with Docker

This projects come with a Dockerfile which enables the automation of image creation. 

`cd sierra-charlie`

`docker build -t ""sierra-charlie:latest"" .`

`docker run -ti -p 3000:3000 ""sierra-charlie:latest"" /bin/bash`

`$npm start`

Point your browser to `localhost:3000`

### Hard way - installing dependencies

Portions of the code are written in [PureScript](http://www.purescript.org/) and [Elm](http://elm-lang.org/).  Compilers for both languages and the [Node.js](https://nodejs.org/) runtime must be installed on the local machine.

The project is developed on OS X, but may support other UNIX platforms.  On OS X, system-level dependencies should be installed with the [`brew`](http://brew.sh/) tool.

```
brew install node purescript
```

[Webpack](https://webpack.github.io/) is used to structure the project, supporting development and production mode builds.  ES2015 syntax is translated to JavaScript using [Babel](http://babeljs.io/).  Code quality is monitored using [JSHint](http://jshint.com/).

Use [`yarn`](https://yarnpkg.com/lang/en/) tool to install project-level dependencies.

This project was built for elm version `0.16`. `yarn` may be used to install this

```
yarn add elm@0.16.0
```

Use `yarn` to install packages. If you don't have `yarn`, install it using `npm install -g yarn`.

```
yarn install
```

You will also need to increase the kernel limits on OS X.

```
sudo bash -c 'echo ""kern.maxfiles=65536"" >>/etc/sysctl.conf'
sudo bash -c 'echo ""kern.maxfilesperproc=65536"" >>/etc/sysctl.conf'
echo ""ulimit -n 65536"" >>~/.bash_profile
```

This may require you to restart your computer.


### Building the project

The same `npm` tool is also used to build the project, and to simplify other project-related tasks.

To build the project, give the following command:

```
npm run build
```

If the build is successful, the project is ready to run.  In one session, start a local CORS proxy:

```
npm run start-proxy
```

In another session, start a local HTTP server:

```
npm start
```

Finally, navigate to the following address in a web browser:

[http://localhost:3000](http://localhost:3000)
",4,4,3,5,transportation,"[city-scale, transportation, visualisation]",00000
160,covoitmetzlux,jonathan-jean,N/A,https://github.com/jonathan-jean/covoitmetzlux,https://api.github.com/repos/jonathan-jean/covoitmetzlux,CoVoitMetzLux site,"{'message': 'Not Found', 'documentation_url': 'https://docs.github.com/rest/repos/contents#get-repository-content'}",4,4,2,1,transportation,"[transport, transportation]",00000
161,MiamiTrolleyInfo,qtrandev,N/A,https://github.com/qtrandev/MiamiTrolleyInfo,https://api.github.com/repos/qtrandev/MiamiTrolleyInfo,Information repository for all information related to Miami-Dade area trolley and transit systems,"# MiamiTrolleyInfo
Information repository for all information related to Miami-Dade area trolley and transit systems

## Transit Agencies

Information on all transit agencies in Miami-Dade, Broward, and South Florida.  

https://github.com/qtrandev/OneBusAway/wiki/Transit-Agencies  

A similar resource is at https://github.com/cscape/miamitransit-docs/blob/master/MDT%20Documentation.md  

![](https://github.com/qtrandev/MiamiTrolleyInfo/blob/master/screenshot1.png)

## React Native Trolley Tracker By Code For Miami

Android and iOS React Native phone apps to display City of Miami trolley system. Currently broken at the moment due to City of Miami changing trolley provider in 2017. The code here is still useful and is a basis for how to develop React Native apps with remote cloud content push.  

https://github.com/wkrause13/miamiTrolleyTracker  

For more information on React Native, go to https://www.reddit.com/r/reactnative/.  

![](https://raw.githubusercontent.com/wkrause13/miamiTrolleyTracker/master/fastlane/screenshots/dualscreens.png)  

More React Native resources/demos can be found with a different React Native iOS App (along with video demos) at: https://github.com/qtrandev/local-visa-market-app

## Leaflet Transit

Web app using Leaflet Javascript mapping library to show all transportation services in Miami-Dade County on a map.  
City of Miami trolley system no longer appears due to a new provider.  
Note that this is a heavy app that will make many requests so wait for the data to load.  
Click Refresh to see data change live.  
This is a good project to learn how to access various data sources in Miami-Dade County.  
Inspect the code in Chrome debugger and see the index.js file and the requests made.  

https://github.com/Code-for-Miami/LeafletTransit  

Informal updates are made at https://github.com/qtrandev/LeafletTransit and http://qtrandev.github.io/LeafletTransit  

![](https://github.com/qtrandev/MiamiTrolleyInfo/blob/master/screenshot2.png)  

## Miami Trolley React Native Expo

Newest project pulling data from City of Miami new trolley data provider TSO Mobile. Work in progress.  
This is a React Native app that can be loaded on Android or iOS.  Expo also has a phone emulator on the website.

https://github.com/qtrandev/MiamiTrolleyReactNativeExpo  

![](https://github.com/qtrandev/MiamiTrolleyReactNativeExpo/blob/master/screenshot.png)  

<img src=""https://github.com/qtrandev/MiamiTrolleyReactNativeExpo/blob/master/screenshot3.png"" width=""350"">  

## Bus Tracking GPS (Inactive)

Shows how to build a GPS Tracker using an Arduino board for tracking trolley buses.  Information here is still useful to build a tracker though, but getting a data plan is not maintainable.  
This project is now inactive since Quyen Tran went on a personal hiatus and data plan costs $30 a month to maintain.  
Code For Miami partnered with City of Sweetwater for a pilot but this became inactive. Hardware is still at Sweetwater Transportation Department, which needs to be retrieved since this project ended.  

https://github.com/herrdragon/busTrackingGps  
https://github.com/Code-for-Miami/SweetwaterTrolley (Related)  

![](https://github.com/qtrandev/busTrackingGps/raw/master/images/GPS-Tracker1.jpg)  

## Fort Lauderdale Sun Trolley

GTFS data created for the Fort Lauderdale Sun Trolley.  
This data format is the national standard used by Google Maps.  
View the data txt files to see how it's done.  

https://github.com/qtrandev/suntrolleygtfs  

This data is the foundation for the Sun Trolley map made by Code For Fort Lauderdale.  
http://suntrolley.herokuapp.com/map  
https://github.com/eorroe/suntrolley/wiki  

![](https://github.com/qtrandev/MiamiTrolleyInfo/blob/master/screenshot3.png)

## GTFS Data

Very important GTFS data created for the Miami-Dade trolley services created by Quyen Tran and Code For Miami.  
This is the foundation for transit mapping services such as Google Maps Transit.  
This data should be compared with Miami-Dade County GTFS data provided to Google Maps to update Miami-Dade data.  
Note that City of Miami data is old and invalid since they have a new trolley provider for 2017.

https://github.com/qtrandev/OneBusAway/tree/master/GTFS  

Miami-Dade County GTFS data provided to Google Maps:  
http://transitfeeds.com/p/miami-dade-county-transit/48/latest  
http://transitfeeds.com/p/miami-dade-county-transit/48/latest/routes  

![](https://github.com/qtrandev/MiamiTrolleyInfo/blob/master/screenshot4.png)

## Popular Transit Online Tracking Maps

### City of Miami

http://app.tsomobile.com/publictransportation/driverroute.htm?tkn=81E39EC9-D773-447E-BE29-D7F30AB177BC&lan=en  

### City of Miami Beach

http://app.tsomobile.com/publictransportation/driverroute.htm?tkn=825894C5-2B5F-402D-A055-88F2297AF99A  

### City of Doral

http://app.tsomobile.com/publictransportation/driverroute.htm?tkn=582EB861-9C13-4C89-B491-15F0AFBF9F47  

### City of Fort Lauderdale Sun Trolley

http://www.suntrolley.com/routes-schedules-fares/desktop-tracker/  

### Miami-Dade County Transit

http://www.miamidade.gov/transit/bustracker.asp?RouteID=123&Dir=Clockwise&StopID=746&Sequence=1  

### Broward County Transit

http://www.broward.org/bct/myride/Pages/default.aspx  

### Palm Beach County Palm Tran

http://www.pbcgov.com/igo  

### Tri-Rail

http://trirailpublic.etaspot.net  

See https://github.com/qtrandev/OneBusAway/wiki/Transit-Agencies for all the agencies.  
",4,4,2,0,transportation,"[civic, civic-tech, gtfs, miami, transit, transportation, trolley]",00000
162,traffic,ryanrudes,N/A,https://github.com/ryanrudes/traffic,https://api.github.com/repos/ryanrudes/traffic,NYS DOT Python API,"# New York State Department of Transportation API

[![PyPI download month](https://img.shields.io/pypi/dm/nysdotapi.svg)](https://pypi.python.org/pypi/nysdotapi/)
[![PyPI - Status](https://img.shields.io/pypi/status/nysdotapi)](https://pypi.python.org/pypi/nysdotapi/)
[![PyPI](https://img.shields.io/pypi/v/nysdotapi)](https://pypi.python.org/pypi/nysdotapi/)
![GitHub](https://img.shields.io/github/license/ryanrudes/traffic)

## Installation
```bash
pip install nysdotapi
```

## Authentication
1. Visit the 511 NY [website](https://511ny.org/my511/register) and create a new account
2. Login to your account and request an API key [here](https://511ny.org/developers/help)

## Example
The following code cycles through live feeds of various traffic cameras at random.

```python
from traffic import API

import random
import cv2

api = API(""<insert-api-key>"")

cameras = api.get_cameras()
print(""Cameras:"", len(cameras))

while True:
    camera = random.choice(cameras)
    
    try:
        with camera.get_stream() as stream:
            title = ""LIVE: "" + camera.roadway if camera.roadway else ""LIVE""
                
            for i in range(100):
                frame = next(stream)
                
                cv2.imshow(title, frame)
                cv2.waitKey(1)
                
            cv2.destroyAllWindows()
    except KeyboardInterrupt:
        raise
    except StopIteration:
        pass
```",4,4,1,0,transportation,"[camera, department-of-transportation, feed, live, ny, road, stream, street, traffic, transportation, video]",00000
163,NYC-Taxi-Trip-Carpooling-Assistant,LiutongZhou,N/A,https://github.com/LiutongZhou/NYC-Taxi-Trip-Carpooling-Assistant,https://api.github.com/repos/LiutongZhou/NYC-Taxi-Trip-Carpooling-Assistant,Mining NYC Taxi Data and Maximize the number of Carpooled Trips,"{'message': 'Not Found', 'documentation_url': 'https://docs.github.com/rest/repos/contents#get-repository-content'}",4,4,3,0,transportation,"[optimization, transportation]",00000
164,transitime-docker,open-austin,open-austin,https://github.com/open-austin/transitime-docker,https://api.github.com/repos/open-austin/transitime-docker,Dockerfile for transitime. Don't use this! Its just an experiment.,"# transitime-db

http://transitime-host.cloudapp.net/api/v1/key/f18a8240/agency/cap-metro/command/predictions?rs=803%7C4830

Things to make transitime go:

- Ubuntu
- sudo apt-get install git
- git clone https://github.com/walkeriniraq/transitime-db.git
- curl -sSL https://get.docker.com/ | sh  (i.e. install docker)
- ./go.sh

The go script will build the transitime container (takes a long time), start the postgres db, create the tables,
push the cap metro data into the db, create a default API key (f18a8240) and then start the server, connecting
it to the server's port 80.

If you want to run an instance of the transitime app, you can call:
./run_to_bash.sh

",4,4,10,5,transportation,[transportation],00000
165,Glider-ELK,immobiliare,immobiliare,https://github.com/immobiliare/Glider-ELK,https://api.github.com/repos/immobiliare/Glider-ELK,A logging transport for Glider that sends logging messages to Logstash (eg. the ELK stack),"<p align=""center"">
<picture>
  <source media=""(prefers-color-scheme: dark)"" srcset=""./Documentation/assets/glider-elk-dark.png"" width=""350"">
  <img alt=""logo-library"" src=""./Documentation/assets/glider-elk-light.png"" width=""350"">
</picture>
</p>

[![Swift](https://img.shields.io/badge/Swift-5.1_5.3_5.4_5.5_5.6_5.7-orange?style=flat-square)](https://img.shields.io/badge/Swift-5.1_5.3_5.4_5.5_5.6_5.7-Orange?style=flat-square)
[![Platform](https://img.shields.io/badge/Platforms-iOS%20%7C%20macOS%20%7C%20watchOS%20%7C%20tvOS%20%7C%20Linux-4E4E4E.svg?colorA=28a745)](#installation)
[![Swift Package Manager](https://img.shields.io/badge/Swift_Package_Manager-compatible-orange?style=flat-square)](https://img.shields.io/badge/Swift_Package_Manager-compatible-orange?style=flat-square)

# Glider

**Glider is the logger for just about everything!**

It's designed to be:
- **SIMPLE**: with a modular & extensible architecture, fully documented
- **PERFORMANT**: you can use Glider without the worry of impacting your app performances
- **UNIVERSAL**: it supports 14+ transports to satisfy every need; you can create your transport too!

See the [project's page on GitHub for more informations](https://github.com/immobiliare/Glider).

# Glider-ELK

Glider-ELK is a logging trasnport for Glider Logging Framework.

The log entries are properly formatted, cached, and then uploaded via HTTP/HTTPS to elastic/logstash, which allows for further processing in its pipeline. The logs can then be stored in elastic/elasticsearch and visualized in elastic/kibana.

- Uploads the log data automatically to Logstash (e.g. the ELK stack)
- Caches the created log entries and sends them via HTTP either periodically or when exceeding a certain configurable memory threshold to Logstash
- Converts the logging metadata to a JSON representation, which allows querying after those values (e.g. filter after a specific parameter in Kibana)
- Logs itself via a background activity logger (including protection against a possible infinite recursion)

```swift
let elkTransport = try GliderELKTransport(hostname: ""127.0.0.1"", port: 5000, delegate: self) {
    $0.uploadInterval = TimeAmount.seconds(10)
}
        
let logger = Log {
    $0.subsystem = ""com.myapp""
    $0.category = ""network""
    $0.level = .info
    $0.transports = [elkTransport]
}
```

# Install

This package require the Core Library of Glider you [can found here](https://github.com/immobiliare/Glider).  
Package is distributed both as CocoaPods dependency and SPM dependency.

## Swift Package Manager

The Swift Package Manager is a tool for automating the distribution of Swift code and is integrated into the swift compiler. It is in early development, but Glider does support its use on supported platforms.

Once you have your Swift package set up, adding Glider as a dependency is as easy as adding it to the dependencies value of your `Package.swift`.

```swift
dependencies: [
    .package(url: ""https://github.com/immobiliare/Glider-ELK.git"")
]
```

## CocoaPods

CocoaPods is a dependency manager for Cocoa projects.  
To integrate Glider into your project, specify it in your Podfile:

```ruby
source 'https://github.com/CocoaPods/Specs.git'
use_frameworks!

pod 'GliderELK'
```

## Requirements

Minimum requirements are:
- Swift 5.4
- iOS 13+, macOS 10.15+

## Support & Contribute

Made with ❤️ by [ImmobiliareLabs](https://github.com/orgs/immobiliare) & [Contributors](https://github.com/immobiliare/Glider/graphs/contributors)

We'd love for you to contribute to Glider!  
If you have questions on using Glider, bugs, and enhancement, please feel free to reach out by opening a [GitHub Issue](https://github.com/immobiliare/Glider/issues).

<a href=""http://labs.immobiliare.it""><img src=""./Documentation/assets/immobiliarelabs.png"" alt=""Indomio"" width=""200""/></a>",4,4,6,0,transportation,"[elk, elk-stack, logging, transportation]",00000
166,LoginAuthFramework-Android,Mobile-Telematics,Mobile-Telematics,https://github.com/Mobile-Telematics/LoginAuthFramework-Android,https://api.github.com/repos/Mobile-Telematics/LoginAuthFramework-Android,Telematics SDK Login and authentication framework for Android apps,"# LoginAuth Framework for Android

## Description

This library is created by DATA MOTION PTE. LTD. and allows you to integrate with our UserService API in a few steps.

LoginAuth Framework main functions:
1. Register `deviceToken` for each new Telematics SDK user.
2. Refresh the `accessToken (JWT)` when it is expired.
3. Authorize existing SDK user
4. Get authorized user profile info
5. Update authorized user profile info


## Credentials

Before you start using the framework, make sure you registered a company account in [DataHub](https://app.damoov.com/) and obtained `InstanceID` and`InstanceKEY`. If you are new, please refer to the [documentation](https://docs.telematicssdk.com/docs/setting-up-the-company-account) and register your company account in DataHub. [Sing Up](https://app.damoov.com/user/registration)


## Basic concepts

`deviceToken` - is the main individual SDK user identifier for your app. This identifier is used as a key across all our services.

`accessToken` - or JSON Web Token (JWT) is the main UserService API key, that allows you to get user individual statistics and user scoring by UserService APIs calls.

`refreshToken` - is a secret key that allows you to refresh the `accessToken` when it expires.


## Setup

Here you can find a short video guide, how to add LoginAuth Framework to your Android app:

[![Watch the video](https://github.com/Mobile-Telematics/LoginAuthFramework-Android/blob/master/Android%20LoginAuth%20Framework.png)](https://www.youtube.com/watch?v=jpdLDzMdCuw&ab)




1. Add our maven-repository to your `build.gradle` file:
``` groovy
maven {
    url ""https://s3.us-east-2.amazonaws.com/android.telematics.sdk.production/""
}
```
2. Import library:
``` groovy
dependencies {
    implementation ""com.telematicssdk:auth:1.1.0""
}
```

3. If you are using R8 or ProGuard add this line to options:
```
-keep public class com.telematicssdk.auth.** {*;}
```

## Methods
### Create DeviceToken

Each SDK user has to have a `Devicetoken` and be associated with the app users. To create `DeviceToken` please use the method below. To complete a call, you are required to provide `instanceId` & `instanceKey`. If you still have quiestions on how to obtain the credentails, please refer to the [documentation](https://docs.telematicssdk.com/docs/datahub#user-group-credentials)
    
``` kotlin
    TelematicsAuth.createDeviceToken(
        instanceId = ""<your instanceId>"",
        instanceKey = ""<your instanceKey>""
     )
        .onSuccess {
            it.deviceToken
            it.accessToken
            it.refreshToken
        }
        .onError { e ->
            e.printStackTrace()
        }
```



Once user is registered, you will receive the user credentails. make sure you pass the `Devicetoken` to your server and store it against a user profile, then pass it to your App - this is the main user detials that you will use for our services.

Additionally, you can create a user's `deviceToken` and get the necessary keys (`accessToken`, `refreshToken`) with additional parameters. This is not a required method, it just allows you to store the user profile in a different way. You can specify the below given parameters when creating a user's deviceToken:

- email
- phone
- firstName
- lastName
- address
- birthday
- gender
- maritalStatus
- childrenCount
- clientId

``` kotlin
    TelematicsAuth.createDeviceToken(
            instanceId = ""<your instanceId>"",
            instanceKey = ""<your instanceKey>""
            email = ""mail@mail.mail"",
            phone = ""+10000000000"",
            clientId = ""idOptional"",
            firstName = ""TELEMATICS_USERNAME"",
            lastName = ""TELEMATICS_LASTNAME"",
            birthDay = ""1970-01-01"",
            maritalStatus = MaritalStatus.Married,
            childrenCount = 0,
            address = ""CITY"",
            gender = Gender.Male
        )
            .onSuccess {
                it.deviceToken
                it.accessToken
                it.refreshToken
            }
            .onError { e ->
                e.printStackTrace()                
            }
```

### Refresh Access Token

Each `accessToken` has a limited lifetime and in a certain period of time it is expired. As a result, when you call our API using invalid `accessToken` you will receive an Error `Unauthorized 401`.
**Error 401** indicates that the user's `accessToken` has been expired. If so, as the first step, you have to update the `accessToken`.

To update the `accessToken`, you are required to provide the latest `accessToken` & `refreshToken` to the method below.


``` kotlin
    TelematicsAuth.refreshToken(
        instanceId = ""<your instanceId>"",
        instanceKey = ""<your instanceKey>"",
        accessToken = ""<your accessToken>"",
        refreshToken = ""<your refreshToken>""
    )
        .onSuccess {
            it.accessToken
            it.refreshToken
        }
        .onError {e ->
            e.printStackTrace()
        }
```

In response, you will receive a new `accessToken` and `refreshToken`.


### Get Access Token for existing SDK users

During the app usage, there may be several scenarios when the app loses `accessToken`, for example if the a user changes a smartphone or logs out. BTW, that is a reason why we strongly recommend you to store the `deviceToken` on your backend side. `deviceToken` cannot be restored if it is lost!

We provide you with a simple re-authorization, a method that you can use to get a valid `accessToken` for a particular user throught providing `DeviceToken`
To use this method, you need `deviceToken`, `instanceId`, and `instanceKey` of which group the user belongs. in this case, `Devicetoken` works as a login, `instancekey` as a password. Then you can re-login the user and get a valid `accessToken` & `refreshToken`.

``` kotlin
    TelematicsAuth.login(
       instanceId = ""<your instanceId>"",
       instanceKey = ""<your instanceKey>"",
       deviceToken = ""<your deviceToken>"" 
    )
        .onSuccess {
            it.accessToken
            it.refreshToken~~~~
        }
        .onError {e ->
            e.printStackTrace()           
        }
```

In response, you will receive a new `accessToken` and `refreshToken`.

### Refresh Access Token or Login

Refreshes `accessToken` when it expires or authorises user using `instanceId`, `instanceKey` and `deviceToken` when `refreshToken` expires.

``` kotlin
    TelematicsAuth.refreshTokenOrLogin(
        instanceId = ""<your instanceId>"",
        instanceKey = ""<your instanceKey>"",
        deviceToken = ""<your deviceToken>"" ,
        accessToken = ""<your accessToken>"",
        refreshToken = ""<your refreshToken>""
    )
        .onSuccess {
            it.accessToken
            it.refreshToken
        }
        .onError {e ->
            e.printStackTrace()
        }
```

In response, you will receive a new `accessToken` and `refreshToken`.

## Additional methods

### Get User Profile
You can always request information about the user profile anytime:

``` kotlin
    TelematicsAuth.getUserProfile(
        instanceId = ""<your instanceId>"",
        instanceKey = ""<your instanceKey>"",
        accessToken = ""<your accessToken>""
    )
        .onSuccess {user ->
            user
        }
        .onError {{e ->
            e.printStackTrace()    
        }
```
    
### Update User

``` kotlin 
    TelematicsAuth.updateUserProfile(
       instanceId = ""<your instanceId>"",
       instanceKey = ""<your instanceKey>"",
       deviceToken = ""<your deviceToken>"",
       accessToken = ""<your accessToken>"",
       email = ""mail@mail.mail"",
       phone = ""+10000000000"",
       clientId = ""idOptional"",
       firstName = ""TELEMATICS_USERNAME"",
       lastName = ""TELEMATICS_LASTNAME"",
       birthDay = ""1970-01-01"",
       maritalStatus = MaritalStatus.Married,
       childrenCount = 0,
       address = ""CITY"",
       gender = Gender.Male
    )
        .onSuccess {

        }
        .onError {

        }
```

That's it! Now you are ready to use our authorization library. 

Also you can check [references in our doc](https://mobile-telematics.github.io/LoginAuthFramework-Android/).

Happy coding!


## Links

[Official product Web-page](https://app.damoov.com/)

[Official API services web-page](https://www.damoov.com/telematics-api/)

[Official API references](https://docs.telematicssdk.com/reference)

[Official ZenRoad web-page](https://www.damoov.com/telematics-app/)

[Official ZenRoad app for iOS](https://apps.apple.com/jo/app/zenroad/id1563218393)

[Official ZenRoad app for Android](https://play.google.com/store/apps/details?id=com.telematicssdk.zenroad&hl=en&gl=US)

[Official ZenRoad app for Huawei](https://appgallery.huawei.com/#/app/C104163115)

###### Copyright © 2020-2021 DATA MOTION PTE. LTD. All rights reserved.


",4,4,4,0,transportation,"[android, api-driven, behavior-analysis, driving-behavior, embedded, safe-driving, sdk, telematics-api, telematics-sdk, tracking, tracking-app, transportation, usage-based-insurance]",00000
167,MMM-TFL-Status,emanuele-albini,N/A,https://github.com/emanuele-albini/MMM-TFL-Status,https://api.github.com/repos/emanuele-albini/MMM-TFL-Status,MagicMirror2 module for TFL (Transport for London) Lines Status,"# MMM-TFL-Status 
## Magic Mirror Module for Trasport For London Status

![](https://img.shields.io/badge/status-active-brightgreen)
![Issues](
https://img.shields.io/github/issues/emanuele-albini/MMM-TFL-Status)
![Pull](
https://img.shields.io/github/issues-pr/emanuele-albini/MMM-TFL-Status)
[![Maintaner](https://img.shields.io/badge/maintainer-Emanuele-blue)](https://www.emanuelealbini.com)
[![GitHub license](https://img.shields.io/github/license/Naereen/StrapDown.js.svg)](https://github.com/emanuele-albini/qualtrutils/blob/master/LICENSE)

This is a module for the [MagicMirror](https://github.com/MichMich/MagicMirror).  

This module shows the status of the Transport for London (TFL) lines including:
- Tube
- Elizabeth Line
- DLR
- Overground
- Tram
- Bus
- River Coach

<img src=""tube.png"" width=""300""/>

## Installation
Navigate into your MagicMirror's `modules` folder and execute `git clone https://github.com/emanuele-albini/MMM-TFL-Status`. 
A new folder `MMM-TFL-Status` will appear, navigate into it.

The package does not require any additional dependency and thus does not contains any `package.json`.

*If you encounter any issuses with the package, please submit an issue here on GitHub.*

## Configuration
The entry in `config.js` can include the following options. *All arguments are optional*.

|Option|Description|
|---|---|
|`interval`| How often the TFL status is updated.<br><br>**Type:** `integer`<br>**Default value:** `600000 // 10 minutes`|
|`modes`| Modes for which to gather the status from TFL API.<br>Check [https://api.tfl.gov.uk/line/meta/modes](https://api.tfl.gov.uk/line/meta/modes) for a list of valid modes. <br><br>**Type:** `array` of `string` <br>**Default value:** `['tube', 'elizabeth_line', 'dlr', 'overground']`|
|`ignore_good`| This determines if the module display hides lines that have good service (`true`) or shows all of the lines (`false`). If this is used and all lines have good service then only a single line indicates this. <br><br>**Type:** `boolean`<br>**Default value:** `false`|
|`lines`| Array of lines to visualise (among those in the selected modes).<br>Check [https://api.tfl.gov.uk/line/mode/<mode>](https://api.tfl.gov.uk/line/mode/tube) for a list of all the lines in a certain mode.<br><br>**Type:** `array` of `string` (lines id, or name, in lower-case) <br>**Default value:** `null` (all)|
|`lines_always_show`| Array of lines to always show (even if `hide_good = true`).<br><br>**Type:** `array` of `string` (lines id, or name, in lower-case) <br>**Default value:** `null` (none)|
|`lines_order`| Order in which to visualise the lines. The lines listed here will be visualised first (in the order specified). <br><br>**Type:** `array` of `string`  <br>**Default value:** `null` (random order)|
|`blacklistLines`| If `true`, `lines` will act as a balcklist (all the lines but those specified will be visualised). <br><br>**Type:** `boolean` <br>**Default value:** `false`|
|`names`| A line ID-name mapping to override the default names that TFL gives to lines. This is useful for lines that have inexplicably long names in TFL API (e.g., `London Overground` or `Elizabeth line`) <br><br>**Type:** `object/dictionary` line ids as keys and line names as values <br>**Default value:** `{ 'london-overground': 'Overground', 'elizabeth': 'Elizabeth' }`|

Here is an example of an entry in `config.js`
```
{
    module:     'MMM-TFL-Status',
    position:   'top_left',
    config:		{
        ignore_good: true,
        lines_always_show: ['elizabeth'],
        interval: 15 * 60 * 1000, // 15 minutes
    }
},
```

### TFL API

For more informations on the TFL API check out their [website](https://api.tfl.gov.uk/).

Note that this plugin does not require any API key because TFL grants 50 requests/minute under anonymous access at the time of writing.

## Credits
This module is based and considerably extends [Nigel Daniels](https://github.com/nigel-daniels/)'s module [MMM-Tube-Status](https://github.com/nigel-daniels/MMM-Tube-Status).

This module extends it by allowing the user to:
- show also additional TFL lines (and not only Tube lines);
- use a blacklist of lines instead of a whitelist.
- sort the lines in a custom order;
- select some lines to always show even if the `hide_good` option is set.
- Removing the dependency from the `request` package.
",4,4,1,0,transportation,"[dlr, elizabeth-line, london, magic-mirror-modules, magicmirror, magicmirror-module, magicmirror2, magicmirror2-module, mmm, overground, tfl, tfl-status, tram, transportation, transportforlondon, tube]",00000
168,bdit_king_pilot_dashboard,CityofToronto,CityofToronto,https://github.com/CityofToronto/bdit_king_pilot_dashboard,https://api.github.com/repos/CityofToronto/bdit_king_pilot_dashboard,Dashboard for King St Pilot,"# King St. Pilot Dashboard
Dashboard for King St Pilot


## NOTE
D3 users commit to the `gh-pages` branch.",4,4,12,48,transportation,"[d3js, dash, dashboard, transportation]",00000
169,EtaAtHK,huikaihoo,N/A,https://github.com/huikaihoo/EtaAtHK,https://api.github.com/repos/huikaihoo/EtaAtHK,ETA@HK - Android App to show ETA of public transport in Hong Kong,"{'message': 'Not Found', 'documentation_url': 'https://docs.github.com/rest/repos/contents#get-repository-content'}",4,4,3,1,transportation,"[android-app, bus, eta, hongkong, mtr, public-transport, public-transportation, tram, transport, transportation]",00000
170,bikeandwalk,code4sac,code4sac,https://github.com/code4sac/bikeandwalk,https://api.github.com/repos/code4sac/bikeandwalk,Bike and Ped traffic counting web app,"# The Bike and Walk Project

The goal of this project is to create an on-line traffic counting tool to aid groups promoting 
active transportation in their communities. We hope that it will provide a convenient way 
to collect, store and share traffic count information.

All of the count data is centrally stored and is immediately available via the internet for viewing,
download and analysis by anyone. The count data is geocoded so it is possible to compare data from different 
locations and to compare the information collected by the organizations that are using the system.

The whole system is web based and so requires no download. The ""client"" application is designed
primarily for use on a smart phone or tablet but ought to work fine with any (modern) device that can connect
to the internet. 

An internet connection is _**not**_ required when counting. Users who may be counting in remote locations can
do so without a connection to the internet. Later, when a connection is available, their count data will be uploaded 
to the central data bank. (For the technically inclined, we're using localStorage for this.)

## A Little Help Here...
The instructions on [using the system for counting](http://bikeandwalk.org/help/counting/) may give you a
better idea of how it works from the stand point of the people in the field.

## Take it for a Spin
If you'd like to try it out yourself, the link that follows will let you play around with it. 
[test.bikeandwalk.org/count/test/](http://test.bikeandwalk.org/count/test/)

## Administration
Administration of the system and its data is divided into two components. System administration is handled by the
core team. Count Administration is handled by the local organizations.

The roles are as follows:

### System Administration
* Creating and maintaining the records related to the Organizations using the system
* Creating and maintaining the ""Traveler"" records.  
Travelers are what we call the things that we count.
A Traveler can represent a number of aspects of the person being counted. For example:
	* A Traveler may represent a person riding a bike or a person walking. 
	* Travelers may also represent behaviors such as wrong way riding or walking in the roadway. 
	* Each organization participating in the system is free to choose whichever Travelers they are interested
	in documenting for their count. 
	* If an organization would like to count something for which there isn't a Traveler type, the system admins
	will collaborate with them to create one. 
	
### Count Administration
* The actual counting activity is carried out by the various organizations that use the system. Count Administrators
determine:
	* When the count will be held.
	* Where the counters will be stationed.
	* Who will be counting and at which location.
	* Communication with counters to ensure that all counts are completed and uploaded to the data bank.
	
Additional information on the project is available at [BikeAndWalk.org](http://bikeandwalk.org/).

## Technical Details

This is an open source project written primarily in Python with the Flask web framework.

Additional dependencies include:

* SQLAlchemy
* Flask Mail
* WTForms
* Leaflet.js
* jQuery (of course)",4,4,10,21,transportation,"[javascript, python, transportation]",00000
171,ILUTE,TravelModellingGroup,TravelModellingGroup,https://github.com/TravelModellingGroup/ILUTE,https://api.github.com/repos/TravelModellingGroup/ILUTE,"TMG's Integrated Land Use, Transportation, Environment","# ILUTE
TMG's Integrated Land Use, Transportation, Environment

This project will host the plug-in for XTMF to support the custom components required to build TMG's ILUTE and ILUTE-like model systems.
",4,4,5,0,transportation,"[landuse, transportation, xtmf]",00000
172,CurbSpec,jfh01,N/A,https://github.com/jfh01/CurbSpec,https://api.github.com/repos/jfh01/CurbSpec,An open data standard for urban curb regulations,"<img src=""images/cover_image.png"">

# CurbLR and CurbSpec
_June 2019:_ The team at [SharedStreets](http://sharedstreets.io) has taken CurbSpec and substantially evolved it to create [CurbLR](https://github.com/sharedstreets/CurbLR). This work addresses many of the deficiences and gaps in CurbSpec, implements thoughtful design improvements, and offers a robust path forward towards a more practically deployable data standard for curb regulation. Before attempting to implement CurbSpec, you should consider using [CurbLR](https://github.com/sharedstreets/CurbLR) instead.

# What is CurbSpec?
CurbSpec is a data standard for describing urban curb regulations. It exists to help government effectively manage and regulate the curb and to support public and private users of city streets.

CurbSpec is a common language on which many things can be built, including rules engines, query APIs, consumer notification services, mapping tools, and analytic models.

# Design Principles
1. ***Machine-readable:*** From navigation apps to connected cars, urban mobility is increasingly digital. CurbSpec helps computers understand the curb, whether that's answering real-time questions like ""where's the nearest place to drop off a passenger?"" or modeling parking allocation scenarios for an entire neighborhood.

1. ***Human-oriented:*** Curbs are managed and used by people, so CurbSpec must be useful to humans not just machines. CurbSpec is designed to be directly readable and writable by people with technical training, and to support tools that make it accessible to the non-technical.

1. ***Reversible:*** Most curb management is not digitized today and this won't change overnight. To ease this transition, it must be possible to take existing signs and translate them into CurbSpec, and to use CurbSpec to generate a hypothetical physical signage plan.

1. ***Adaptable:*** No two cities manage their curb in exactly the same way. CurbSpec is built to support many types of regulations and management practices. A city should not have to change its curb regulations to use CurbSpec.

1. ***Future-friendly:*** How we use the curb is changing. Cities are adjusting parking prices based on demand, new transportation services are arriving on our streets, and vehicles without humans behind the wheel will one day deliver people and goods to the curb. CurbSpec exists to help make these futures a reality and will grow and adapt as urban mobility evolves.

# Examples
The pages below show real world curb regulations translated into CurbSpec.

| | |
| :---- | :---- |
| [Examples of Simple Regulations](examples/simple_examples.md) | Simple regulatory scenarios typically involving one or two basic rules  |
| [Examples of Complex Regulations](examples/complex_examples.md) | Complex scenarios that address multiple user classes, complicated expressions of time, and overlapping regulations |

# Data Model
| Object | Description |
| :--- | :--- |
| ***[Regulation](Regulation.md)*** | A given location or segment of curb may have one or more regulations that determine what is allowed or forbidden during a particular period of time |
| ***[Rule](Rule.md)*** | A [Regulation](Regulation.md) may have one or more rules that define what particular curb users can and cannot do when the [Regulation](Regulaton.md) is in effect |
| ***[Timespan](TimeSpan.md)*** | Defines the time period when a [Regulation](Regulation.md) is in effect. |
| ***[UserClass](UserClass.md)*** | Defines a category of curb user. Can be used to denote permit holders, vehicle types, or vehicle function. |

# About Location
CurbSpec provides a mechanism to describe curb regulation, but it does not specify how to talk about location (e.g. how to identify a specific stretch of curb). Location is highly context dependent and CurbSpec is designed to work with various approaches and use cases, rather than to prescribe a one-size-fits-all solution.

For example, a company might develop an API that takes a point location (lat/lon) and returns the applicable CurbSpec that applies to the stretch of curb on which the point falls. In this case, no external location referencing system is needed.

Alternatively, a City might apply CurbSpec on top of its proprietary linear referencing system to keep an internal database of signage and regulations.

However, it will be hard to unlock the full potential of digitizing urban curb regulation without a standard referencing system that works across jurisdictions. The [SharedStreets Reference System](https://github.com/sharedstreets/sharedstreets-ref-system) provides an open, non-proprietary method for identifying street segments and integrating multiple underlying basemaps into a single shared referencing system. CurbSpec can be used in conjunction with Shared Streets References to provide a truly common way to talk about both a place on the curb and the rules that apply in that place.

# Future Enhancements
* **External referencing for designated periods**: Extend [TimeSpan](TimeSpan.md) to allow arbitrarily designated periods (e.g. ""Snow Emergency"" or ""School Days"") to be specifically defined via a static or dynamic (API) referencing system.

* **Enhanced payment definition**: A schema to define payment requirements for a given use. Could support the publishing of dynamic parking pricing or complex fee structures such as peak period ride share pickup / drop-off fees.

* **Cross-jurisdictional allowed use mapping**: A mechanism to translate [Rules](Rule.md) (which are locally defined in their meaning) into a standardized, cross-jurisdictional list of activities. This would, for example, allow automated interpretation of local rules to determine where activities like passenger loading could take place.
",4,4,1,0,transportation,"[curb, open-data, regulations-gov, transportation, transportation-planning]",00000
173,aquidneck-island-transport,paulopperman,N/A,https://github.com/paulopperman/aquidneck-island-transport,https://api.github.com/repos/paulopperman/aquidneck-island-transport,A SUMO model of Aquidneck Island for transportation simulation,"# Aquidneck Island Transport Model
This repository contains a network model around Aquidneck Island for use in [SUMO](https://sumo.dlr.de/wiki/Simulation_of_Urban_MObility_-_Wiki) simulations.

![network overview](images/netedit_overview_map.png)

![Creative Commons License](https://i.creativecommons.org/l/by-sa/4.0/88x31.png)  This work is licensed under a [Creative Commons Attribution-ShareAlike 4.0 International License](http://creativecommons.org/licenses/by-sa/4.0/).


## Model Features
The Aquidneck Island Transport Model is a microsimulation model including a model of the transportation network and 
calibrated user demand scenarios built from the Rhode Island Statewide Model and state traffic counter data.  The model
includes accurate lane behaviors, and work is ongoing to accurately model the traffic signal programs.  The model also includes
specific local features, such as routing restrictions and gate behaviors at Naval Station Newport, and shoulder passing on certain streets.

### Planned Updates
This model is under continual development to incorporate more features to realistically model traffic on the island. Some planned future features include:
* Public transportation routes
* Pedestrian user demand and multi-modal trips
* Parking and parking-searching traffic demand

## Running a Simulation
*Model currently working in SUMO v1.11.0*  
Before running the calibrated Aquidneck Island Traffic Model scenarios, the trip and route files need to be generated.
In `demand/scripts/` run `aitm_tripgen.py` to generate the intermediate files for simulation. 
Once the files have been computed, the simulation can be run using one of the configuration files in the scenario directory.
General simulation results are written by default, but additional data can be obtained by modifying the configuration file per the SUMO [documentation](https://sumo.dlr.de/docs/sumo.html).

### Using Docker
From this folder, run 
```docker run -it --name aquidneck --mount type=bind,source=""$(pwd),target=/model paulopperman/sumo-docker:latest```
and use the command line interface to run the desired simulation.

## Street Network Source Data

The bounding box for the network model is `[-71.4022,41.4471,-71.1742,41.6578]`.  

The network is built from OpenStreetMap data accessed with the overpass api from the following address: [https://overpass-api.de/api/map?bbox=-71.4022,41.4471,-71.1742,41.6578
](https://overpass-api.de/api/map?bbox=-71.4022,41.4471,-71.1742,41.6578
).  Additional detail and corrections have been made directly to the network file.



",4,4,2,12,transportation,"[openstreetmap-data, sumo, sumo-model, traffic-simulation, transportation, urban-planning]",00000
174,rfars,s87jackson,N/A,https://github.com/s87jackson/rfars,https://api.github.com/repos/s87jackson/rfars,Download raw data from the Fatality Analysis Reporting System and prepare it for research.,"
<!-- README.md is generated from README.Rmd. Please edit that file -->

# rfars <img src=""man/figures/logo.svg"" align=""right"" alt="""" width=""120"" />

<!-- badges: start -->

[![CRAN_Status_Badge](https://www.r-pkg.org/badges/version/rfars)](https://cran.r-project.org/package=rfars)
[![R CMD
Check](https://github.com/s87jackson/rfars/actions/workflows/R-CMD-check.yaml/badge.svg)](https://github.com/s87jackson/rfars/actions/workflows/R-CMD-check.yaml)
[![](https://cranlogs.r-pkg.org/badges/grand-total/rfars)](https://CRAN.R-project.org/package=rfars)
<!-- badges: end -->

The goal of `rfars` is to facilitate transportation safety analysis by
simplifying the process of extracting data from official crash
databases. The [National Highway Traffic Safety
Administration](https://www.nhtsa.gov/) collects and publishes a census
of fatal crashes in the [Fatality Analysis Reporting
System](https://www.nhtsa.gov/research-data/fatality-analysis-reporting-system-fars)
and a sample of fatal and non-fatal crashes in the [Crash Report
Sampling
System](https://www.nhtsa.gov/crash-data-systems/crash-report-sampling-system)
(an evolution of the [General Estimates
System](https://www.nhtsa.gov/national-automotive-sampling-system/nass-general-estimates-system)).
The [Fatality and Injury Reporting System
Tool](https://cdan.dot.gov/query) allows users to query these databases,
and can produce simple tables and graphs. This suffices for simple
analysis, but often leaves researchers wanting more. Digging any deeper,
however, involves a time-consuming process of downloading annual ZIP
files and attempting to stitch them together - after first combing
through immense data dictionaries to determine the required variables
and table names.

`rfars` allows users to download FARS and GES/CRSS data back to 2011
with just one line of code. The result is a full, rich dataset ready for
mapping, modeling, and other downstream analysis. Helper functions are
also provided to produce common counts and comparisons.

## Installation

You can install the latest version of `rfars` from
[GitHub](https://github.com/) with:

``` r
# install.packages(""devtools"")
devtools::install_github(""s87jackson/rfars"")
```

or the CRAN stable release with:

``` r
install.packages(""rfars"")
```

Then load rfars and some helpful packages:

``` r
library(rfars)
library(dplyr)
library(ggplot2)
library(leaflet)
library(leaflet.extras)
```

## Getting and Using FARS Data

Use the `get_fars()` function to bring FARS data into the current
environment and optionally save an RDS file for future use (faster than
downloading anew). This is done by (a) downloading the data to a
temporary directory, (b) downloading to a permanent directory, or (c)
importing from a permanent directory. After data is downloaded to a
permanent directory, the function will look there rather than
downloading the data again. If a year of data is requested but not
found, R will ask your permission to download the missing data.

Here we get three years of data for Virginia:

``` r
myFARS <- get_fars(years = 2019:2021, states = ""VA"")
```

This returns a ‘FARS’ object: a list with six tibbles: `flat`,
`multi_acc`, `multi_veh`, `multi_per`, `events`, and `codebook`.

The `flat` tibble contains all variables for which there is just one
value per crash (“accident”), vehicle, or person (e.g., weather
conditions, travel speed, age). Each row corresponds to a person
involved in a crash. As there may be multiple people and/or vehicles
involved in one crash, some variable-values are repeated within a crash
or vehicle. Each crash is uniquely identified with `id`, which is a
combination of `year` and `st_case`. Note that `st_case` is not unique
across years, for example, `st_case` 510001 will appear in each year.
The `id` variable attempts to avoid this issue.

Please review the [FARS Analytical User’s
Manual](https://crashstats.nhtsa.dot.gov/Api/Public/ViewPublication/813417)
for more information.

``` r
glimpse(myFARS$flat)
#> Rows: 5,465
#> Columns: 199
#> $ year          <dbl> 2019, 2019, 2019, 2019, 2019, 2019, 2019, 2019, 2019, 20…
#> $ state         <chr> ""Virginia"", ""Virginia"", ""Virginia"", ""Virginia"", ""Virgini…
#> $ st_case       <dbl> 510001, 510001, 510002, 510002, 510003, 510003, 510004, …
#> $ id            <dbl> 2019510001, 2019510001, 2019510002, 2019510002, 20195100…
#> $ veh_no        <dbl> 0, 1, 1, 2, 1, 1, 0, 1, 1, 1, 2, 0, 1, 1, 1, 2, 0, 1, 1,…
#> $ per_no        <dbl> 1, 1, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 1, 1, 2, 1, 1, 1, 1,…
#> $ county        <dbl> 760, 760, 137, 137, 53, 53, 107, 107, 175, 175, 175, 157…
#> $ city          <dbl> 2060, 2060, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 19…
#> $ lon           <dbl> -77.48444, -77.48444, -77.94240, -77.94240, -77.66604, -…
#> $ lat           <dbl> 37.50924, 37.50924, 38.19840, 38.19840, 37.00784, 37.007…
#> $ acc_type      <chr> NA, ""C13-Single Driver-Forward Impact-Pedestrian/ Animal…
#> $ age           <chr> ""17 Years"", ""42 Years"", ""83 Years"", ""44 Years"", ""50 Year…
#> $ air_bag       <chr> ""Not a Motor Vehicle Occupant"", ""Reported as Deployment …
#> $ alc_det       <chr> ""Not Reported"", ""Not Reported"", ""Not Reported"", ""Not Rep…
#> $ alc_res       <chr> ""0.000 % BAC"", ""Test Not Given"", ""0.000 % BAC"", ""Test No…
#> $ alc_status    <chr> ""Test Given"", ""Test Not Given"", ""Test Given"", ""Test Not …
#> $ arr_hour      <chr> ""Unknown EMS Scene Arrival Hour"", ""Unknown EMS Scene Arr…
#> $ arr_min       <chr> ""Unknown EMS Scene Arrival Minutes"", ""Unknown EMS Scene …
#> $ atst_typ      <chr> ""Blood"", ""Test Not Given"", ""Blood"", ""Test Not Given"", ""T…
#> $ bikecgp       <chr> ""Not a Cyclist"", NA, NA, NA, NA, NA, ""Not a Cyclist"", NA…
#> $ bikectype     <chr> ""Not a Cyclist"", NA, NA, NA, NA, NA, ""Not a Cyclist"", NA…
#> $ bikedir       <chr> ""Not a Cyclist"", NA, NA, NA, NA, NA, ""Not a Cyclist"", NA…
#> $ bikeloc       <chr> ""Not a Cyclist"", NA, NA, NA, NA, NA, ""Not a Cyclist"", NA…
#> $ bikepos       <chr> ""Not a Cyclist"", NA, NA, NA, NA, NA, ""Not a Cyclist"", NA…
#> $ body_typ      <chr> NA, ""4-door sedan, hardtop"", ""2-door sedan,hardtop,coupe…
#> $ bus_use       <chr> NA, ""Not a Bus"", ""Not a Bus"", ""Not a Bus"", ""Not a Bus"", …
#> $ cargo_bt      <chr> NA, ""Not Applicable (N/A)"", ""Not Applicable (N/A)"", ""Not…
#> $ cdl_stat      <chr> NA, ""No (CDL)"", ""No (CDL)"", ""No (CDL)"", ""No (CDL)"", ""No …
#> $ cityname      <chr> ""RICHMOND"", ""RICHMOND"", ""NOT APPLICABLE"", ""NOT APPLICABL…
#> $ countyname    <chr> ""RICHMOND (760)"", ""RICHMOND (760)"", ""ORANGE (137)"", ""ORA…
#> $ day           <dbl> 1, 1, 2, 2, 3, 3, 4, 4, 7, 7, 7, 6, 6, 6, 6, 6, 7, 7, 6,…
#> $ day_week      <chr> ""Tuesday"", ""Tuesday"", ""Wednesday"", ""Wednesday"", ""Thursda…
#> $ death_da      <chr> ""1"", ""Not Applicable (Non-Fatal)"", ""2"", ""Not Applicable …
#> $ death_hr      <chr> ""6:00-6:59"", ""Not Applicable (Non-fatal)"", ""15:00-15:59""…
#> $ death_mn      <chr> ""32"", ""Not Applicable (Non-fatal)"", ""35"", ""Not Applicabl…
#> $ death_mo      <chr> ""January"", ""Not Applicable (Non-Fatal)"", ""January"", ""Not…
#> $ death_tm      <chr> NA, ""Not Applicable (Non-fatal)"", NA, ""Not Applicable (N…
#> $ death_yr      <chr> ""2019"", ""Not Applicable (Non-fatal)"", ""2019"", ""Not Appli…
#> $ deaths        <dbl> NA, 0, 1, 0, 1, 1, NA, 0, 1, 1, 0, NA, 0, 1, 1, 0, NA, 0…
#> $ deformed      <chr> NA, ""Reported as Unknown"", ""Disabling Damage"", ""Disablin…
#> $ doa           <chr> ""Not Applicable"", ""Not Applicable"", ""Died at Scene"", ""No…
#> $ dr_drink      <chr> NA, ""No"", ""No"", ""No"", ""No"", ""No"", NA, ""Yes"", ""No"", ""No"",…
#> $ dr_hgt        <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …
#> $ dr_pres       <chr> NA, ""Yes"", ""Yes"", ""Yes"", ""Yes"", ""Yes"", NA, ""Yes"", ""Yes"",…
#> $ dr_wgt        <chr> NA, ""160 lbs."", ""220 lbs."", ""220 lbs."", ""170 lbs."", ""170…
#> $ dr_zip        <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …
#> $ drinking      <chr> ""Not Reported"", ""Reported as Unknown"", ""No (Alcohol Not …
#> $ drug_det      <chr> ""Not Reported"", ""Not Reported"", ""Not Reported"", ""Not Rep…
#> $ drugs         <chr> ""Reported as Unknown"", ""Reported as Unknown"", ""No (drugs…
#> $ drunk_dr      <dbl> 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,…
#> $ dstatus       <chr> ""Test Given"", ""Test Not Given"", ""Test Given"", ""Test Not …
#> $ ej_path       <chr> ""Ejection Path Not Applicable"", ""Ejection Path Not Appli…
#> $ ejection      <chr> ""Not Applicable"", ""Not Ejected"", ""Not Ejected"", ""Not Eje…
#> $ emer_use      <chr> NA, ""Not Applicable"", ""Not Applicable"", ""Not Applicable""…
#> $ extricat      <chr> ""Not Extricated or Not Applicable"", ""Not Extricated or N…
#> $ fatals        <dbl> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,…
#> $ fire_exp      <chr> NA, ""No or Not Reported"", ""No or Not Reported"", ""No or N…
#> $ first_mo      <chr> NA, ""October"", ""No Record"", ""No Record"", ""No Record"", ""N…
#> $ first_yr      <chr> NA, ""2016"", ""No Record"", ""No Record"", ""No Record"", ""No R…
#> $ func_sys      <chr> ""Principal Arterial - Other"", ""Principal Arterial - Othe…
#> $ gvwr          <chr> NA, ""Not Applicable"", ""Not Applicable"", ""Not Applicable""…
#> $ harm_ev       <chr> ""Pedestrian"", ""Pedestrian"", ""Motor Vehicle In-Transport""…
#> $ haz_cno       <chr> NA, ""Not Applicable"", ""Not Applicable"", ""Not Applicable""…
#> $ haz_id        <chr> NA, ""Not Applicable"", ""Not Applicable"", ""Not Applicable""…
#> $ haz_inv       <chr> NA, ""No"", ""No"", ""No"", ""No"", ""No"", NA, ""No"", ""No"", ""No"", …
#> $ haz_plac      <chr> NA, ""Not Applicable"", ""Not Applicable"", ""Not Applicable""…
#> $ haz_rel       <chr> NA, ""Not Applicable"", ""Not Applicable"", ""Not Applicable""…
#> $ helm_mis      <chr> ""Not a Motor Vehicle Occupant"", ""None Used/Not Applicabl…
#> $ helm_use      <chr> ""Not a Motor Vehicle Occupant"", ""Not Applicable"", ""Not A…
#> $ hispanic      <chr> ""Non-Hispanic"", ""Not A Fatality (not Applicable)"", ""Non-…
#> $ hit_run       <chr> NA, ""Yes"", ""No"", ""No"", ""No"", ""No"", NA, ""No"", ""No"", ""No"",…
#> $ hosp_hr       <chr> ""Unknown"", ""Unknown"", ""Unknown"", ""Unknown"", ""Unknown"", ""…
#> $ hosp_mn       <chr> ""Unknown EMS Hospital Arrival Time"", ""Unknown EMS Hospit…
#> $ hospital      <chr> ""EMS Unknown Mode"", ""Not Transported"", ""Not Transported""…
#> $ hour          <chr> ""5:00am-5:59am"", ""5:00am-5:59am"", ""3:00pm-3:59pm"", ""3:00…
#> $ impact1       <chr> NA, ""12 Clock Point"", ""12 Clock Point"", ""12 Clock Point""…
#> $ inj_sev       <chr> ""Fatal Injury (K)"", ""No Apparent Injury (O)"", ""Fatal Inj…
#> $ j_knife       <chr> NA, ""Not an Articulated Vehicle"", ""Not an Articulated Ve…
#> $ l_compl       <chr> NA, ""Valid license for this class vehicle"", ""Valid licen…
#> $ l_endors      <chr> NA, ""No Endorsements required for this vehicle"", ""No End…
#> $ l_restri      <chr> NA, ""Restrictions, Compliance Unknown"", ""No Restrictions…
#> $ l_state       <chr> NA, ""Virginia"", ""Virginia"", ""Virginia"", ""Virginia"", ""Vir…
#> $ l_status      <chr> NA, ""Valid"", ""Valid"", ""Valid"", ""Valid"", ""Valid"", NA, ""Va…
#> $ l_type        <chr> NA, ""Full Driver License"", ""Full Driver License"", ""Full …
#> $ lag_hrs       <chr> NA, ""Unknown"", NA, ""Unknown"", ""Unknown"", NA, NA, ""Unknow…
#> $ lag_mins      <chr> NA, ""Unknown"", NA, ""Unknown"", ""Unknown"", NA, NA, ""Unknow…
#> $ last_mo       <chr> NA, ""March"", ""No Record"", ""No Record"", ""No Record"", ""No …
#> $ last_yr       <chr> NA, ""2018"", ""No Record"", ""No Record"", ""No Record"", ""No R…
#> $ lgt_cond      <chr> ""Dark - Lighted"", ""Dark - Lighted"", ""Daylight"", ""Dayligh…
#> $ location      <chr> ""Not at Intersection - On Roadway, Not in Marked Crosswa…
#> $ m_harm        <chr> NA, ""Pedestrian"", ""Motor Vehicle In-Transport"", ""Motor V…
#> $ mak_mod       <chr> NA, ""Chevrolet Malibu/Malibu Maxx"", ""Pontiac Grand AM"", …
#> $ make          <chr> NA, ""Chevrolet"", ""Pontiac"", ""Toyota"", ""Chevrolet"", ""Chev…
#> $ man_coll      <chr> ""The First Harmful Event was Not a Collision with a Moto…
#> $ mcarr_i1      <chr> NA, ""Not Applicable"", ""Not Applicable"", ""Not Applicable""…
#> $ mcarr_i2      <chr> NA, ""Not Applicable"", ""Not Applicable"", ""Not Applicable""…
#> $ mcarr_id      <chr> NA, ""Not Applicable"", ""Not Applicable"", ""Not Applicable""…
#> $ milept        <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …
#> $ minute        <dbl> 48, 48, 35, 35, 5, 5, 30, 30, 47, 47, 47, 5, 5, 36, 36, …
#> $ mod_year      <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …
#> $ model         <dbl> NA, 37, 18, 46, 473, 473, NA, 402, 471, 471, 482, NA, 40…
#> $ month         <chr> ""January"", ""January"", ""January"", ""January"", ""January"", ""…
#> $ motdir        <chr> ""Not Applicable"", NA, NA, NA, NA, NA, ""Not Applicable"", …
#> $ motman        <chr> ""Not Applicable"", NA, NA, NA, NA, NA, ""Not Applicable"", …
#> $ nhs           <chr> ""This section IS ON the NHS"", ""This section IS ON the NH…
#> $ nmhelmet      <chr> ""Not Reported"", NA, NA, NA, NA, NA, ""Not Reported"", NA, …
#> $ nmlight       <chr> ""Not Reported"", NA, NA, NA, NA, NA, ""Not Reported"", NA, …
#> $ nmothpre      <chr> ""Not Reported"", NA, NA, NA, NA, NA, ""Not Reported"", NA, …
#> $ nmothpro      <chr> ""Not Reported"", NA, NA, NA, NA, NA, ""Not Reported"", NA, …
#> $ nmpropad      <chr> ""Not Reported"", NA, NA, NA, NA, NA, ""Not Reported"", NA, …
#> $ nmrefclo      <chr> ""Not Reported"", NA, NA, NA, NA, NA, ""Not Reported"", NA, …
#> $ not_hour      <chr> ""Unknown"", ""Unknown"", ""Unknown"", ""Unknown"", ""Unknown"", ""…
#> $ not_min       <chr> ""Unknown"", ""Unknown"", ""Unknown"", ""Unknown"", ""Unknown"", ""…
#> $ numoccs       <chr> NA, ""Unknown"", ""01"", ""01"", ""02"", ""02"", NA, ""01"", ""02"", ""…
#> $ owner         <chr> NA, ""Driver (in this crash) was  Registered Owner"", ""Dri…
#> $ p_crash1      <chr> NA, ""Going Straight"", ""Going Straight"", ""Going Straight""…
#> $ p_crash2      <chr> NA, ""Pedestrian in road"", ""Over the lane line on left si…
#> $ p_crash3      <chr> NA, ""Unknown/Not Reported"", ""No Avoidance Maneuver"", ""No…
#> $ pbcwalk       <chr> ""None Noted"", NA, NA, NA, NA, NA, ""None Noted"", NA, NA, …
#> $ pbswalk       <chr> ""None Noted"", NA, NA, NA, NA, NA, ""None Noted"", NA, NA, …
#> $ pbszone       <chr> ""None Noted"", NA, NA, NA, NA, NA, ""None Noted"", NA, NA, …
#> $ pcrash4       <chr> NA, ""Tracking"", ""Tracking"", ""Tracking"", ""Skidding latera…
#> $ pcrash5       <chr> NA, ""Stayed in original travel lane"", ""Stayed on roadway…
#> $ pedcgp        <chr> ""Pedestrian in Roadway - Circumstances Unknown"", NA, NA,…
#> $ pedctype      <chr> ""Lying in Roadway"", NA, NA, NA, NA, NA, ""Walking/Running…
#> $ peddir        <chr> ""Not Applicable"", NA, NA, NA, NA, NA, ""Not Applicable"", …
#> $ pedleg        <chr> ""Not Applicable"", NA, NA, NA, NA, NA, ""Not Applicable"", …
#> $ pedloc        <chr> ""Not At Intersection"", NA, NA, NA, NA, NA, ""Not At Inter…
#> $ pedpos        <chr> ""Travel Lane"", NA, NA, NA, NA, NA, ""Travel Lane"", NA, NA…
#> $ peds          <dbl> 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0,…
#> $ pedsnr        <chr> ""Not Applicable"", NA, NA, NA, NA, NA, ""Not Applicable"", …
#> $ per_typ       <chr> ""Pedestrian"", ""Driver of a Motor Vehicle In-Transport"", …
#> $ permvit       <dbl> 1, 1, 2, 2, 2, 2, 1, 1, 3, 3, 3, 1, 1, 3, 3, 3, 1, 1, 1,…
#> $ pernotmvit    <dbl> 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0,…
#> $ persons       <dbl> 1, 1, 2, 2, 2, 2, 1, 1, 3, 3, 3, 1, 1, 3, 3, 3, 1, 1, 1,…
#> $ prev_acc      <chr> NA, ""1"", ""None"", ""None"", ""None"", ""None"", NA, ""None"", ""No…
#> $ prev_dwi      <chr> NA, ""None"", ""None"", ""None"", ""None"", ""None"", NA, ""None"", …
#> $ prev_oth      <chr> NA, ""None"", ""None"", ""None"", ""None"", ""None"", NA, ""None"", …
#> $ prev_spd      <chr> NA, ""1"", ""None"", ""None"", ""None"", ""None"", NA, ""None"", ""No…
#> $ prev_sus1     <chr> NA, ""None"", ""None"", ""None"", ""None"", ""None"", NA, ""None"", …
#> $ prev_sus2     <chr> NA, ""None"", ""None"", ""None"", ""None"", ""None"", NA, ""None"", …
#> $ prev_sus3     <chr> NA, ""1"", ""None"", ""None"", ""None"", ""None"", NA, ""None"", ""No…
#> $ pvh_invl      <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,…
#> $ rail          <chr> ""Not Applicable"", ""Not Applicable"", ""Not Applicable"", ""N…
#> $ rd_owner      <chr> ""City or Municipal Highway Agency"", ""City or Municipal H…
#> $ reg_stat      <chr> NA, ""Virginia"", ""Virginia"", ""Virginia"", ""Virginia"", ""Vir…
#> $ rel_road      <chr> ""On Roadway"", ""On Roadway"", ""On Roadway"", ""On Roadway"", …
#> $ reljct1       <chr> ""No"", ""No"", ""No"", ""No"", ""No"", ""No"", ""No"", ""No"", ""No"", ""N…
#> $ reljct2       <chr> ""Non-Junction"", ""Non-Junction"", ""Non-Junction"", ""Non-Jun…
#> $ rest_mis      <chr> ""Not a Motor Vehicle Occupant"", ""None Used/Not Applicabl…
#> $ rest_use      <chr> ""Not a Motor Vehicle Occupant"", ""None Used/Not Applicabl…
#> $ rolinloc      <chr> NA, ""No Rollover"", ""No Rollover"", ""No Rollover"", ""On Med…
#> $ rollover      <chr> NA, ""No Rollover"", ""No Rollover"", ""No Rollover"", ""Rollov…
#> $ route         <chr> ""U.S. Highway"", ""U.S. Highway"", ""U.S. Highway"", ""U.S. Hi…
#> $ rur_urb       <chr> ""Urban"", ""Urban"", ""Rural"", ""Rural"", ""Rural"", ""Rural"", ""R…
#> $ sch_bus       <chr> ""No"", ""No"", ""No"", ""No"", ""No"", ""No"", ""No"", ""No"", ""No"", ""N…
#> $ seat_pos      <chr> ""Not a Motor Vehicle Occupant"", ""Front Seat, Left Side"",…
#> $ sex           <chr> ""Female"", ""Female"", ""Male"", ""Male"", ""Male"", ""Male"", ""Fem…
#> $ sp_jur        <chr> ""No Special Jurisdiction"", ""No Special Jurisdiction"", ""N…
#> $ spec_use      <chr> NA, ""No Special Use"", ""No Special Use"", ""No Special Use""…
#> $ speedrel      <chr> NA, ""No"", ""No"", ""No"", ""No"", ""No"", NA, ""No"", ""No"", ""No"", …
#> $ statename     <chr> ""Virginia"", ""Virginia"", ""Virginia"", ""Virginia"", ""Virgini…
#> $ str_veh       <dbl> 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0,…
#> $ tow_veh       <chr> NA, ""No Trailing Units"", ""No Trailing Units"", ""No Traili…
#> $ towed         <chr> NA, ""Not Towed"", ""Towed Due to Disabling Damage"", ""Towed…
#> $ trav_sp       <chr> NA, ""Not Reported"", ""055 MPH"", ""055 MPH"", ""073 MPH"", ""07…
#> $ trlr1vin      <chr> NA, ""No Trailing Units"", ""No Trailing Units"", ""No Traili…
#> $ trlr2vin      <chr> NA, ""No Trailing Units"", ""No Trailing Units"", ""No Traili…
#> $ trlr3vin      <chr> NA, ""No Trailing Units"", ""No Trailing Units"", ""No Traili…
#> $ tway_id       <chr> ""US-60"", ""US-60"", ""US-522"", ""US-522"", ""I-85"", ""I-85"", ""C…
#> $ tway_id2      <chr> NA, NA, NA, NA, NA, NA, NA, NA, ""TUCKER SWAMP RD"", ""TUCK…
#> $ typ_int       <chr> ""Not an Intersection"", ""Not an Intersection"", ""Not an In…
#> $ underide      <chr> NA, ""No Underride or Override Noted"", ""No Underride or O…
#> $ unittype      <chr> NA, ""Motor Vehicle In-Transport (Inside or Outside the T…
#> $ v_config      <chr> NA, ""Not Applicable"", ""Not Applicable"", ""Not Applicable""…
#> $ valign        <chr> NA, ""Straight"", ""Straight"", ""Straight"", ""Straight"", ""Str…
#> $ ve_forms      <dbl> 1, 1, 2, 2, 1, 1, 1, 1, 2, 2, 2, 1, 1, 2, 2, 2, 1, 1, 1,…
#> $ ve_total      <dbl> 1, 1, 2, 2, 1, 1, 1, 1, 2, 2, 2, 1, 1, 2, 2, 2, 1, 1, 1,…
#> $ vin           <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …
#> $ vnum_lan      <chr> NA, ""Two lanes"", ""Two lanes"", ""Two lanes"", ""Two lanes"", …
#> $ vpavetyp      <chr> NA, ""Blacktop, Bituminous, or Asphalt"", ""Blacktop, Bitum…
#> $ vprofile      <chr> NA, ""Level"", ""Grade, Unknown Slope"", ""Grade, Unknown Slo…
#> $ vspd_lim      <chr> NA, ""35 MPH"", ""55 MPH"", ""55 MPH"", ""70 MPH"", ""70 MPH"", NA…
#> $ vsurcond      <chr> NA, ""Dry"", ""Dry"", ""Dry"", ""Wet"", ""Wet"", NA, ""Dry"", ""Dry"",…
#> $ vtcont_f      <chr> NA, ""No Controls"", ""No Controls"", ""No Controls"", ""No Con…
#> $ vtrafcon      <chr> NA, ""No Controls"", ""No Controls"", ""No Controls"", ""No Con…
#> $ vtrafway      <chr> NA, ""Two-Way,  Divided, Positive  Median Barrier"", ""Two-…
#> $ work_inj      <chr> ""No"", ""Not Applicable (not a fatality)"", ""No"", ""Not Appl…
#> $ wrk_zone      <chr> ""None"", ""None"", ""None"", ""None"", ""None"", ""None"", ""None"", …
#> $ gvwr_from     <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …
#> $ gvwr_to       <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …
#> $ icfinalbody   <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …
#> $ trlr1gvwr     <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …
#> $ trlr2gvwr     <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …
#> $ trlr3gvwr     <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …
#> $ vpicbodyclass <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …
#> $ vpicmake      <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …
#> $ vpicmodel     <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …
#> $ underoverride <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …
```

The `multi_` tibbles contain those variables for which there may be a
varying number of values for any entity (e.g., driver impairments,
vehicle events, weather conditions at time of crash). Each tibble has
the requisite data elements corresponding to the entity: `multi_acc`
includes `st_case` and `year`, `multi_veh` adds `veh_no` (vehicle
number), and `multi_per` adds `per_no` (person number).

The top name-value pairs of each tibble are shown below.

``` r
bind_rows(
  
  myFARS$multi_acc %>% filter(!is.na(value)) %>% group_by(name, value) %>% summarize(n=n(), .groups = ""drop"") %>% arrange(desc(n)) %>% slice(1:10) %>% mutate(table = ""multi_acc""),
  myFARS$multi_veh %>% filter(!is.na(value)) %>% group_by(name, value) %>% summarize(n=n(), .groups = ""drop"") %>% arrange(desc(n)) %>% slice(1:10) %>% mutate(table = ""multi_veh""),
  myFARS$multi_per %>% filter(!is.na(value)) %>% group_by(name, value) %>% summarize(n=n(), .groups = ""drop"") %>% arrange(desc(n)) %>% slice(1:10) %>% mutate(table = ""multi_per""),
  
) %>%
  
  select(table, name, value, n)
#> # A tibble: 30 × 4
#>    table     name     value                                                    n
#>    <chr>     <chr>    <chr>                                                <int>
#>  1 multi_acc weather  Rain                                                   182
#>  2 multi_acc weather1 Rain                                                    78
#>  3 multi_acc crashrf  Police Pursuit Involved                                 39
#>  4 multi_acc crashrf  Motor Vehicle struck by falling cargo,or something …    38
#>  5 multi_acc weather  Fog, Smog, Smoke                                        18
#>  6 multi_acc cf1      Police Pursuit Involved                                 17
#>  7 multi_acc crashrf  Indication of a Stalled/Disabled Vehicle                15
#>  8 multi_acc crashrf  Recent/Previous Crash scene Nearby                      15
#>  9 multi_acc weather  Clear                                                   13
#> 10 multi_acc weather1 Fog, Smog, Smoke                                        10
#> # ℹ 20 more rows
```

The `events` tibble provides a sequence of numbered events for each
vehicle in each crash.

``` r
head(myFARS$events, 10)
#>       state st_case veh_no               aoi                        soe
#> 1  Virginia  510001      1    12 Clock Point                 Pedestrian
#> 2  Virginia  510002      1 Non-Harmful Event           Cross Centerline
#> 3  Virginia  510002      1    12 Clock Point Motor Vehicle In-Transport
#> 4  Virginia  510002      2    12 Clock Point Motor Vehicle In-Transport
#> 5  Virginia  510003      1 Non-Harmful Event     Ran Off Roadway - Left
#> 6  Virginia  510003      1 Non-Harmful Event        Re-entering Roadway
#> 7  Virginia  510003      1 Non-Harmful Event     Ran Off Roadway - Left
#> 8  Virginia  510003      1    12 Clock Point                 Embankment
#> 9  Virginia  510003      1     Non-Collision          Rollover/Overturn
#> 10 Virginia  510004      1    12 Clock Point                 Pedestrian
#>    veventnum year
#> 1          1 2019
#> 2          1 2019
#> 3          2 2019
#> 4          1 2019
#> 5          1 2019
#> 6          2 2019
#> 7          3 2019
#> 8          4 2019
#> 9          5 2019
#> 10         1 2019
```

The `codebook` tibble provides a searchable codebook for the data,
useful if you know what concept you’re looking for but not the variable
that describes it.

``` r
# View(myFARS$codebook)

myFARS$codebook %>%
  filter(name_rfars == ""lgt_cond"") %>% distinct() %>% head(10)
#>    source year     file name_ncsa name_rfars           label value
#> 1    FARS 2019 accident  LGT_COND   lgt_cond Light Condition     1
#> 2    FARS 2019 accident  LGT_COND   lgt_cond Light Condition     2
#> 3    FARS 2019 accident  LGT_COND   lgt_cond Light Condition     3
#> 4    FARS 2019 accident  LGT_COND   lgt_cond Light Condition     4
#> 5    FARS 2019 accident  LGT_COND   lgt_cond Light Condition     5
#> 6    FARS 2019 accident  LGT_COND   lgt_cond Light Condition     6
#> 7    FARS 2019 accident  LGT_COND   lgt_cond Light Condition     7
#> 8    FARS 2019 accident  LGT_COND   lgt_cond Light Condition     8
#> 9    FARS 2019 accident  LGT_COND   lgt_cond Light Condition     9
#> 10   FARS 2020 accident  LGT_COND   lgt_cond Light Condition     1
#>                value_label
#> 1                 Daylight
#> 2       Dark - Not Lighted
#> 3           Dark - Lighted
#> 4                     Dawn
#> 5                     Dusk
#> 6  Dark - Unknown Lighting
#> 7                    Other
#> 8             Not Reported
#> 9      Reported as Unknown
#> 10                Daylight
```

### Counts

A first step in many transportation safety analyses involves counting
the number of relevant crashes, fatalities, or people involved.
`counts()` lets users specify *what* to count, *where* to count them
(rural/urban and/or in specified states or regions), *who* to include,
the *interval* over which to count (annually or monthly), and factors
*involved* in the crashes. It returns a simple tibble that can be easily
piped into `ggplot()` to quickly visualize counts.

``` r
my_counts <- counts(
  myFARS,
  what = ""crashes"",
  interval = c(""year"")
  ) 

head(my_counts)
#> # A tibble: 3 × 8
#> # Groups:   year [3]
#>    year date           n what    states region urb   who  
#>   <dbl> <date>     <int> <chr>   <chr>  <chr>  <chr> <chr>
#> 1  2019 2019-01-01   774 crashes all    all    all   all  
#> 2  2020 2020-01-01   796 crashes all    all    all   all  
#> 3  2021 2021-01-01   906 crashes all    all    all   all

my_counts %>%
  ggplot(aes(x=date, y=n, label=scales::comma(n))) + 
    geom_col() + 
    geom_label(vjust=1.2) +
    labs(x=NULL, y=NULL, title = ""Fatal Crashes in Virginia"")
```

<img src=""man/figures/README-unnamed-chunk-8-1.png"" width=""80%"" style=""display: block; margin: auto;"" />

``` r
counts(
  myFARS,
  what = ""fatalities"",
  interval = c(""year"")
  ) %>%
  ggplot(aes(x=date, y=n, label=scales::comma(n))) + 
    geom_col() + 
    geom_label(vjust=1.2) +
    labs(x=NULL, y=NULL, title = ""Fatalities in Virginia"")
```

<img src=""man/figures/README-unnamed-chunk-9-1.png"" width=""80%"" style=""display: block; margin: auto;"" />

``` r
counts(myFARS,
       what = ""fatalities"",
       where = list(urb=""rural""),
       interval = c(""year"")
       ) %>%
  ggplot(aes(x=date, y=n, label=scales::comma(n))) + 
    geom_col() + 
    geom_label(vjust=1.2) +
    labs(x=NULL, y=NULL, title = ""Rural Fatalities in Virginia"")
```

<img src=""man/figures/README-unnamed-chunk-10-1.png"" width=""80%"" style=""display: block; margin: auto;"" />

``` r
counts(myFARS,
       what = ""fatalities"",
       where = list(urb=""rural""),
       interval = c(""year""),
       involved = ""speeding""
       ) %>%
  ggplot(aes(x=date, y=n, label=scales::comma(n))) + 
    geom_col() + 
    geom_label(vjust=1.2) +
    labs(x=NULL, y=NULL, title = ""Speeding-Related Fatalities in Rural Virginia"")
```

<img src=""man/figures/README-unnamed-chunk-11-1.png"" width=""80%"" style=""display: block; margin: auto;"" />

We can combine two `counts()` results to make a comparison. Here we
compare the number of speeding-related fatalities in rural and urban
Virginia:

``` r
compare_counts(
  df = myFARS,
  involved = ""speeding"",
  what = ""fatalities"",
  where = list(urb=""rural""),
  where2 = list(urb=""urban"")
  ) %>%
  ggplot(aes(x=date, y=n, label=scales::comma(n))) + 
    geom_col() + 
    geom_label(vjust=1.2) +
    facet_wrap(.~urb) +
    labs(x=NULL, y=NULL, title = ""Speeding-Related Fatalities in Virginia"", fill=NULL)
```

<img src=""man/figures/README-unnamed-chunk-12-1.png"" width=""80%"" style=""display: block; margin: auto;"" />

### Mapping

We can take advantage of having access to the full data with maps. Here
we map pedestrian and bicyclist fatalities in Virginia:

``` r
counts(
  myFARS, 
  what = ""crashes"", 
  involved = ""pedbike"", 
  filterOnly = TRUE
  ) %>% 
leaflet() %>%
  addTiles() %>%
  addHeatmap(group = ""Heatmap"", radius=10, blur=20, minOpacity = .01, max = .2, cellSize = 1) %>%
  addCircleMarkers(
    radius = 1,
    color = ""red"",
    stroke = FALSE,
    fillOpacity = 0.7, group = ""Crash Locations"") 
#> Assuming ""lon"" and ""lat"" are longitude and latitude, respectively
#> Assuming ""lon"" and ""lat"" are longitude and latitude, respectively
```

<img src=""man/figures/README-unnamed-chunk-13-1.png"" width=""80%"" style=""display: block; margin: auto;"" />

Drug-related crashes:

``` r
counts(
  myFARS, 
  what = ""crashes"", 
  involved = ""drugs"", 
  filterOnly = TRUE
  ) %>%
  filter(!is.na(lat), !is.na(lon)) %>%
  filter(lat < 90, lon < 900) %>%
leaflet() %>%
  addTiles() %>%
  addHeatmap(group = ""Heatmap"", radius=10, blur=20, minOpacity = .01, max = .2, cellSize = 1) %>%
  addCircleMarkers(
    radius = 1,
    color = ""red"",
    stroke = FALSE,
    fillOpacity = 0.7, group = ""Crash Locations"") 
#> Assuming ""lon"" and ""lat"" are longitude and latitude, respectively
#> Assuming ""lon"" and ""lat"" are longitude and latitude, respectively
```

<img src=""man/figures/README-unnamed-chunk-14-1.png"" width=""80%"" style=""display: block; margin: auto;"" />

Young drivers:

``` r
counts(
  myFARS, 
  what = ""crashes"", 
  involved = ""young driver"", 
  filterOnly = TRUE
  ) %>%
  filter(!is.na(lat), !is.na(lon)) %>%
  filter(lat < 90, lon < 900) %>%
leaflet() %>%
  addTiles() %>%
  addHeatmap(group = ""Heatmap"", radius=10, blur=20, minOpacity = .01, max = .2, cellSize = 1) %>%
  addCircleMarkers(
    radius = 1,
    color = ""red"",
    stroke = FALSE,
    fillOpacity = 0.7, group = ""Crash Locations"") 
#> Assuming ""lon"" and ""lat"" are longitude and latitude, respectively
#> Assuming ""lon"" and ""lat"" are longitude and latitude, respectively
```

<img src=""man/figures/README-unnamed-chunk-15-1.png"" width=""80%"" style=""display: block; margin: auto;"" />

### Modeling

Having access to the full dataset also allows us to develop statistical
models. Here we fit a simple model of injury severity as a function of
age and restraint use. The results indicate that injury severity
increases with age, and when seat belts are not used properly.

``` r
# table(myFARS$flat$inj_sev)
# table(myFARS$flat$rest_use, useNA = ""ifany"")
# table(myFARS$flat$per_typ, useNA = ""ifany"")

model_data <-
  myFARS$flat %>%
  filter(rest_use %in% c(""Lap Belt Only Used"",
                         ""Shoulder Belt Only Used"",
                         ""None Used / Not Applicable"",
                         ""None Used/Not Applicable"",
                         ""Shoulder and Lap Belt Used""),
         per_typ %in% c(""Driver of a Motor Vehicle In-Transport"",
                        ""Passenger of a Motor Vehicle In-Transport"")
         ) %>%
  mutate(
    rest_use = case_when(
      rest_use %in% c(""Lap Belt Only Used"", ""Shoulder Belt Only Used"") ~ ""Partial"",
      rest_use %in% c(""None Used / Not Applicable"", ""None Used/Not Applicable"") ~ ""None"",
      rest_use %in% c(""Shoulder and Lap Belt Used"") ~ ""Full"",
      TRUE ~ ""Unknown""
      ) %>%
      as.factor() %>%
      relevel(ref = ""Full""),
    kabco = case_when(
      inj_sev == ""Fatal Injury (K)"" ~ 4,
      inj_sev %in% c(""Suspected Serious Injury (A)"", 
                     ""Suspected Serious Injury(A)"") ~ 3,
      inj_sev %in% c(""Suspected Minor Injury (B)"", 
                     ""Suspected Minor Injury(B)"") ~ 2,
      inj_sev == ""Possible Injury (C)"" ~ 1,
      inj_sev == ""No Apparent Injury (O)"" ~ 0,
      TRUE ~ as.numeric(NA)
      ),
    age_n = gsub(""\\D+"","""", age) %>% as.numeric()) 

my_model <- lm(kabco ~ age_n + rest_use, data = model_data) 

stargazer::stargazer(my_model, type = ""html"")
```

<table style=""text-align:center"">
<tr>
<td colspan=""2"" style=""border-bottom: 1px solid black"">
</td>
</tr>
<tr>
<td style=""text-align:left"">
</td>
<td>
<em>Dependent variable:</em>
</td>
</tr>
<tr>
<td>
</td>
<td colspan=""1"" style=""border-bottom: 1px solid black"">
</td>
</tr>
<tr>
<td style=""text-align:left"">
</td>
<td>
kabco
</td>
</tr>
<tr>
<td colspan=""2"" style=""border-bottom: 1px solid black"">
</td>
</tr>
<tr>
<td style=""text-align:left"">
age_n
</td>
<td>
0.009<sup>\*\*\*</sup>
</td>
</tr>
<tr>
<td style=""text-align:left"">
</td>
<td>
(0.001)
</td>
</tr>
<tr>
<td style=""text-align:left"">
</td>
<td>
</td>
</tr>
<tr>
<td style=""text-align:left"">
rest_useNone
</td>
<td>
1.442<sup>\*\*\*</sup>
</td>
</tr>
<tr>
<td style=""text-align:left"">
</td>
<td>
(0.040)
</td>
</tr>
<tr>
<td style=""text-align:left"">
</td>
<td>
</td>
</tr>
<tr>
<td style=""text-align:left"">
rest_usePartial
</td>
<td>
0.453<sup>\*\*</sup>
</td>
</tr>
<tr>
<td style=""text-align:left"">
</td>
<td>
(0.211)
</td>
</tr>
<tr>
<td style=""text-align:left"">
</td>
<td>
</td>
</tr>
<tr>
<td style=""text-align:left"">
Constant
</td>
<td>
1.759<sup>\*\*\*</sup>
</td>
</tr>
<tr>
<td style=""text-align:left"">
</td>
<td>
(0.051)
</td>
</tr>
<tr>
<td style=""text-align:left"">
</td>
<td>
</td>
</tr>
<tr>
<td colspan=""2"" style=""border-bottom: 1px solid black"">
</td>
</tr>
<tr>
<td style=""text-align:left"">
Observations
</td>
<td>
4,583
</td>
</tr>
<tr>
<td style=""text-align:left"">
R<sup>2</sup>
</td>
<td>
0.222
</td>
</tr>
<tr>
<td style=""text-align:left"">
Adjusted R<sup>2</sup>
</td>
<td>
0.222
</td>
</tr>
<tr>
<td style=""text-align:left"">
Residual Std. Error
</td>
<td>
1.324 (df = 4579)
</td>
</tr>
<tr>
<td style=""text-align:left"">
F Statistic
</td>
<td>
436.515<sup>\*\*\*</sup> (df = 3; 4579)
</td>
</tr>
<tr>
<td colspan=""2"" style=""border-bottom: 1px solid black"">
</td>
</tr>
<tr>
<td style=""text-align:left"">
<em>Note:</em>
</td>
<td style=""text-align:right"">
<sup>*</sup>p\<0.1; <sup>**</sup>p\<0.05; <sup>***</sup>p\<0.01
</td>
</tr>
</table>

``` r
new_data <- expand.grid(
  age_n = c(20, 60),
  rest_use = factor(c(""Full"", ""Partial"", ""None""), levels = c(""Full"", ""Partial"", ""None""), ordered = TRUE) )

new_data %>%
  mutate(pred = predict(my_model, newdata = new_data),
         age = paste0(age_n, "" yrs"")) %>%
  ggplot(aes(x=rest_use, y=pred)) +
    geom_col() +
    facet_wrap(.~age) +
    scale_y_continuous(
      limits = c(0,4), breaks = 0:4, labels = c(""O"", ""C"", ""B"", ""A"", ""K""), expand = expansion()) +
    theme(panel.grid = element_blank(),
          panel.grid.major.y = element_line(c(""black"")),
          axis.ticks = element_blank()) +
    labs(x="""", y="""", title = ""Predicted Injury Severity by Age and Restraint Use"",
         caption = ""Full = correctly used seatbelt, partial = partially correctly used, none = no seatbelt."")
```

<img src=""man/figures/README-unnamed-chunk-17-1.png"" width=""80%"" style=""display: block; margin: auto;"" />

## Getting and Using GES/CRSS Data

Use the `get_grscrss()` function to bring GES/CRSS data into the current
environment and optionally save an RDS file for future use (faster than
downloading anew). This is done by (a) downloading the data to a
temporary directory, (b) downloading to a permanent directory, or (c)
importing from a permanent directory. After data is downloaded to a
permanent directory, the function will look there rather than
downloading the data again. If a year of data is requested but not
found, R will ask your permission to download the missing data.

Here we get three years of data. We do not specify a region so that we
can confirm the results with official data.

``` r
myGESCRSS <- get_gescrss(years = 2019:2021)
#> Warning in dir.create(paste0(dest_raw_y, ""/format-32"")):
#> 'C:\Users\s87ja\AppData\Local\Temp\RtmpEnDbQ6\GESCRSS data\raw\2020\format-32'
#> already exists
#> Warning in dir.create(paste0(dest_raw_y, ""/format-64"")):
#> 'C:\Users\s87ja\AppData\Local\Temp\RtmpEnDbQ6\GESCRSS data\raw\2020\format-64'
#> already exists
#> 
#> ── Column specification ────────────────────────────────────────────────────────
#> cols(
#>   .default = col_character(),
#>   year = col_double(),
#>   psu = col_double(),
#>   psustrat = col_double(),
#>   casenum = col_double(),
#>   weight = col_double(),
#>   id = col_double(),
#>   veh_no = col_double(),
#>   per_no = col_double(),
#>   minute = col_double(),
#>   mod_year = col_logical(),
#>   model = col_double(),
#>   peds = col_double(),
#>   permvit = col_double(),
#>   pernotmvit = col_double(),
#>   psu_var = col_double(),
#>   pvh_invl = col_double(),
#>   str_veh = col_double(),
#>   ve_forms = col_double(),
#>   ve_total = col_double()
#> )
#> ℹ Use `spec()` for the full column specifications.
```

This returns a ‘GESCRSS’ object: a list with six tibbles: `flat`,
`multi_acc`, `multi_veh`, `multi_per`, `events`, and `codebook`.

The `flat` tibble contains all variables for which there is just one
value per crash (“accident”), vehicle, or person (e.g., weather
conditions, travel speed, age). Each row corresponds to a person
involved in a crash. As there may be multiple people and/or vehicles
involved in one crash, some variable-values are repeated within a crash
or vehicle. Each crash is uniquely identified with `id`, which is a
combination of `year` and `casenum`.

Please review the [CRSS Analytical User’s
Manual](https://crashstats.nhtsa.dot.gov/Api/Public/ViewPublication/813436)
for more information.

``` r
glimpse(myGESCRSS$flat)
#> Rows: 401,162
#> Columns: 144
#> $ year           <dbl> 2019, 2019, 2019, 2019, 2019, 2019, 2019, 2019, 2019, 2…
#> $ region         <chr> ""South (MD, DE, DC, WV, VA, KY, TN, NC, SC, GA, FL, AL,…
#> $ psu            <dbl> 75, 63, 63, 63, 63, 63, 63, 65, 65, 12, 12, 12, 12, 75,…
#> $ psustrat       <dbl> 19, 16, 16, 16, 16, 16, 16, 13, 13, 12, 12, 12, 12, 19,…
#> $ casenum        <dbl> 201901174219, 201901176655, 201901176655, 201901176655,…
#> $ weight         <dbl> 203.66512, 59.07346, 59.07346, 59.07346, 59.07346, 59.0…
#> $ id             <dbl> 2.019202e+15, 2.019202e+15, 2.019202e+15, 2.019202e+15,…
#> $ veh_no         <dbl> 1, 1, 1, 1, 1, 2, 2, 1, 2, 1, 1, 2, 2, 1, 2, 0, 1, 1, 1…
#> $ per_no         <dbl> 1, 1, 2, 3, 4, 1, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 2…
#> $ acc_type       <chr> ""B7-Single Driver-Left Roadside Departure-Control/Tract…
#> $ age            <chr> ""39 Years"", ""20 Years"", ""19 Years"", ""47 Years"", ""39 Yea…
#> $ air_bag        <chr> ""Not Deployed"", ""Not Deployed"", ""Not Deployed"", ""Not De…
#> $ alc_res        <chr> ""Test Not Given"", ""Test Not Given"", ""Test Not Given"", ""…
#> $ alc_status     <chr> ""Test Not Given"", ""Test Not Given"", ""Test Not Given"", ""…
#> $ alcohol        <chr> ""No Alcohol Involved"", ""No Alcohol Involved"", ""No Alcoh…
#> $ atst_typ       <chr> ""Test Not Given"", ""Test Not Given"", ""Test Not Given"", ""…
#> $ bikecgp        <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…
#> $ bikectype      <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…
#> $ bikedir        <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…
#> $ bikeloc        <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…
#> $ bikepos        <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…
#> $ body_typ       <chr> ""Light Pickup"", ""4-door sedan, hardtop"", ""4-door sedan,…
#> $ bus_use        <chr> ""Not a Bus"", ""Not a Bus"", ""Not a Bus"", ""Not a Bus"", ""No…
#> $ cargo_bt       <chr> ""Not Applicable (N/A)"", ""Not Applicable (N/A)"", ""Not Ap…
#> $ day_week       <chr> ""3"", ""3"", ""3"", ""3"", ""3"", ""3"", ""3"", ""3"", ""3"", ""3"", ""3"", …
#> $ deformed       <chr> ""Disabling Damage"", ""Functional Damage"", ""Functional Da…
#> $ dr_pres        <chr> ""Yes"", ""Yes"", ""Yes"", ""Yes"", ""Yes"", ""Yes"", ""Yes"", ""Yes"",…
#> $ dr_zip         <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…
#> $ drinking       <chr> ""No (Alcohol Not Involved)"", ""No (Alcohol Not Involved)…
#> $ drugs          <chr> ""No (drugs not involved)"", ""Not Reported"", ""Not Reporte…
#> $ ejection       <chr> ""Not Ejected"", ""Not Ejected"", ""Not Ejected"", ""Not Eject…
#> $ emer_use       <chr> ""Not Applicable"", ""Not Applicable"", ""Not Applicable"", ""…
#> $ fire_exp       <chr> ""No or Not Reported"", ""No or Not Reported"", ""No or Not …
#> $ gvwr           <chr> ""Not Applicable"", ""Not Applicable"", ""Not Applicable"", ""…
#> $ harm_ev        <chr> ""Curb"", ""Motor Vehicle In-Transport"", ""Motor Vehicle In…
#> $ haz_cno        <chr> ""Not Applicable"", ""Not Applicable"", ""Not Applicable"", ""…
#> $ haz_id         <chr> ""Not Applicable"", ""Not Applicable"", ""Not Applicable"", ""…
#> $ haz_inv        <chr> ""No"", ""No"", ""No"", ""No"", ""No"", ""No"", ""No"", ""No"", ""No"", ""…
#> $ haz_plac       <chr> ""Not Applicable"", ""Not Applicable"", ""Not Applicable"", ""…
#> $ haz_rel        <chr> ""Not Applicable"", ""Not Applicable"", ""Not Applicable"", ""…
#> $ helm_mis       <chr> ""None Used/Not Applicable"", ""None Used/Not Applicable"",…
#> $ helm_use       <chr> ""Not Applicable"", ""Not Applicable"", ""Not Applicable"", ""…
#> $ hit_run        <chr> ""No"", ""No"", ""No"", ""No"", ""No"", ""No"", ""No"", ""No"", ""No"", ""…
#> $ hospital       <chr> ""Not Transported"", ""Not Transported"", ""Other"", ""Not Tra…
#> $ hour           <chr> ""8:00am-8:59am"", ""2:00am-2:59am"", ""2:00am-2:59am"", ""2:0…
#> $ impact1        <chr> ""3 Clock Point"", ""Right"", ""Right"", ""Right"", ""Right"", ""1…
#> $ inj_sev        <chr> ""No Apparent Injury (O)"", ""No Apparent Injury (O)"", ""Po…
#> $ int_hwy        <chr> ""No"", ""No"", ""No"", ""No"", ""No"", ""No"", ""No"", ""No"", ""No"", ""…
#> $ j_knife        <chr> ""Not an Articulated Vehicle"", ""Not an Articulated Vehic…
#> $ lgt_cond       <chr> ""Daylight"", ""Dark - Lighted"", ""Dark - Lighted"", ""Dark -…
#> $ location       <chr> ""Occupant of a Motor Vehicle"", ""Occupant of a Motor Veh…
#> $ m_harm         <chr> ""Rollover/Overturn"", ""Motor Vehicle In-Transport"", ""Mot…
#> $ mak_mod        <chr> ""Ford Ranger"", ""Dodge Dart (2013 on. See model 001 for …
#> $ make           <chr> ""Ford"", ""Dodge"", ""Dodge"", ""Dodge"", ""Dodge"", ""Honda"", ""H…
#> $ man_coll       <chr> ""The First Harmful Event was Not a Collision with a Mot…
#> $ max_sev        <chr> ""No Apparent Injury (O)"", ""Possible Injury (C)"", ""Possi…
#> $ max_vsev       <chr> ""No Apparent Injury (O)"", ""Possible Injury (C)"", ""Possi…
#> $ mcarr_i1       <chr> ""Not Applicable"", ""Not Applicable"", ""Not Applicable"", ""…
#> $ mcarr_i2       <chr> ""Not Applicable"", ""Not Applicable"", ""Not Applicable"", ""…
#> $ mcarr_id       <chr> ""Not Applicable"", ""Not Applicable"", ""Not Applicable"", ""…
#> $ minute         <dbl> 6, 12, 12, 12, 12, 12, 12, 33, 33, 8, 41, 41, 41, 42, 4…
#> $ mod_year       <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…
#> $ model          <dbl> 471, 29, 29, 29, 29, 402, 402, 402, 481, 51, 422, 32, 3…
#> $ month          <chr> ""January"", ""January"", ""January"", ""January"", ""January"", …
#> $ motdir         <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…
#> $ motman         <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…
#> $ nmhelmet       <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…
#> $ nmlight        <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…
#> $ nmothpre       <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…
#> $ nmothpro       <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…
#> $ nmpropad       <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…
#> $ nmrefclo       <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…
#> $ num_inj        <chr> ""No Person Injured/Property Damage Only Crash"", NA, NA,…
#> $ num_injv       <chr> ""No Person Injured in Vehicle"", NA, NA, NA, NA, NA, NA,…
#> $ numoccs        <chr> ""01"", ""04"", ""04"", ""04"", ""04"", ""02"", ""02"", ""01"", ""01"", ""…
#> $ p_crash1       <chr> ""Accelerating in Road"", ""Going Straight"", ""Going Straig…
#> $ p_crash2       <chr> ""Traveling too fast for conditions or Road Configuratio…
#> $ p_crash3       <chr> ""Unknown/Not Reported"", ""Unknown/Not Reported"", ""Unknow…
#> $ pbcwalk        <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…
#> $ pbptype        <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…
#> $ pbswalk        <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…
#> $ pbszone        <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…
#> $ pcrash4        <chr> ""Skidding Laterally, Rotation Direction Unknown"", ""Trac…
#> $ pcrash5        <chr> ""Departed roadway"", ""Stayed in original travel lane"", ""…
#> $ pedcgp         <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…
#> $ pedctype       <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…
#> $ peddir         <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…
#> $ pedleg         <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…
#> $ pedloc         <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…
#> $ pedpos         <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…
#> $ peds           <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0…
#> $ pedsnr         <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…
#> $ per_typ        <chr> ""Driver of a Motor Vehicle In-Transport"", ""Driver of a …
#> $ permvit        <dbl> 1, 6, 6, 6, 6, 6, 6, 2, 2, 1, 3, 3, 3, 2, 2, 1, 1, 3, 3…
#> $ pernotmvit     <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0…
#> $ psu_var        <dbl> 75, 63, 63, 63, 63, 63, 63, 65, 65, 12, 12, 12, 12, 75,…
#> $ pvh_invl       <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…
#> $ rel_road       <chr> ""On Median"", ""On Roadway"", ""On Roadway"", ""On Roadway"", …
#> $ reljct1        <chr> ""Yes"", ""Not Reported"", ""Not Reported"", ""Not Reported"", …
#> $ reljct2        <chr> ""Entrance/Exit Ramp Related"", ""Intersection"", ""Intersec…
#> $ rest_mis       <chr> ""No Indication of Mis-Use"", ""No Indication of Mis-Use"",…
#> $ rest_use       <chr> ""Shoulder and Lap Belt Used"", ""Shoulder and Lap Belt Us…
#> $ rolinloc       <chr> ""On Median/Separator"", ""No Rollover"", ""No Rollover"", ""N…
#> $ rollover       <chr> ""Rollover, Tripped by Object/Vehicle"", ""No Rollover"", ""…
#> $ sch_bus        <chr> ""No"", ""No"", ""No"", ""No"", ""No"", ""No"", ""No"", ""No"", ""No"", ""…
#> $ seat_pos       <chr> ""Front Seat, Left Side"", ""Front Seat, Left Side"", ""Fron…
#> $ sex            <chr> ""Male"", ""Male"", ""Male"", ""Male"", ""Male"", ""Female"", ""Male…
#> $ spec_use       <chr> ""No Special Use"", ""No Special Use"", ""No Special Use"", ""…
#> $ speedrel       <chr> ""Yes, Too Fast for Conditions"", ""No"", ""No"", ""No"", ""No"",…
#> $ str_veh        <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0…
#> $ tow_veh        <chr> ""No Trailing Units"", ""No Trailing Units"", ""No Trailing …
#> $ towed          <chr> ""Towed Due to Disabling Damage"", ""Towed Not Due to Disa…
#> $ trav_sp        <chr> ""Not Reported"", ""Not Reported"", ""Not Reported"", ""Not Re…
#> $ typ_int        <chr> ""Not an Intersection"", ""Four-Way Intersection"", ""Four-W…
#> $ unittype       <chr> ""Motor Vehicle In-Transport (Inside or Outside the Traf…
#> $ urbanicity     <chr> ""Rural Area"", ""Rural Area"", ""Rural Area"", ""Rural Area"",…
#> $ v_config       <chr> ""Not Applicable"", ""Not Applicable"", ""Not Applicable"", ""…
#> $ valign         <chr> ""Curve - Right"", ""Straight"", ""Straight"", ""Straight"", ""S…
#> $ ve_forms       <dbl> 1, 2, 2, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 1, 1, 2, 2…
#> $ ve_total       <dbl> 1, 2, 2, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 1, 1, 2, 2…
#> $ veh_alch       <chr> ""No Alcohol Involved"", ""No Alcohol Involved"", ""No Alcoh…
#> $ vnum_lan       <chr> ""Not Reported"", ""Six lanes"", ""Six lanes"", ""Six lanes"", …
#> $ vprofile       <chr> ""Level"", ""Grade, Unknown Slope"", ""Grade, Unknown Slope""…
#> $ vspd_lim       <chr> ""35 MPH"", ""40 MPH"", ""40 MPH"", ""40 MPH"", ""40 MPH"", ""Not …
#> $ vsurcond       <chr> ""Wet"", ""Dry"", ""Dry"", ""Dry"", ""Dry"", ""Dry"", ""Dry"", ""Dry"",…
#> $ vtcont_f       <chr> ""Device Functioning Properly"", ""Device Functioning Prop…
#> $ vtrafcon       <chr> ""Yield Sign"", ""Flashing Traffic Control Signal"", ""Flash…
#> $ vtrafway       <chr> ""Entrance/Exit Ramp"", ""Two-Way, Not Divided"", ""Two-Way,…
#> $ wrk_zone       <chr> ""None"", ""None"", ""None"", ""None"", ""None"", ""None"", ""None"",…
#> $ gvwr_from      <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…
#> $ gvwr_to        <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…
#> $ ic_final_body  <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…
#> $ icfinalbody    <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…
#> $ reljct1_im     <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…
#> $ trlr1gvwr      <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…
#> $ trlr2gvwr      <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…
#> $ trlr3gvwr      <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…
#> $ v_picbodyclass <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…
#> $ v_picmake      <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…
#> $ v_picmodel     <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…
#> $ vpicbodyclass  <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…
#> $ vpicmake       <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…
#> $ vpicmodel      <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…
#> $ underoverride  <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…
```

The `multi_` tibbles contain those variables for which there may be a
varying number of values for any entity (e.g., driver impairments,
vehicle events, weather conditions at time of crash). Each tibble has
the requisite data elements corresponding to the entity: `multi_acc`
includes `st_case` and `year`, `multi_veh` adds `veh_no` (vehicle
number), and `multi_per` adds `per_no` (person number).

The top three name-value pairs of each tibble are shown below.

``` r
myGESCRSS$multi_acc %>% group_by(name, value) %>% summarize(n=n()) %>% 
  arrange(name, desc(n)) %>% mutate(rank=row_number()) %>%
  filter(rank<=3) %>%
  select(-rank)
#> `summarise()` has grouped output by 'name'. You can override using the
#> `.groups` argument.
#> # A tibble: 44 × 3
#> # Groups:   name [15]
#>    name    value                                                               n
#>    <chr>   <chr>                                                           <int>
#>  1 cf1     Motor Vehicle struck by falling cargo,or something that came l…   540
#>  2 cf1     Regular Congestion                                                433
#>  3 cf1     Non-occupant struck vehicle                                       255
#>  4 cf2     Indication of a Stalled/Disabled Vehicle                           47
#>  5 cf2     Recent/Previous Crash scene Nearby                                 24
#>  6 cf2     Motor Vehicle struck by falling cargo,or something that came l…    15
#>  7 cf3     Reported as Unknown                                                 7
#>  8 cf3     Backup Due to Prior Crash                                           1
#>  9 cf3     Indication of a Stalled/Disabled Vehicle                            1
#> 10 crashrf Motor Vehicle struck by falling cargo,or something that came l…  1290
#> # ℹ 34 more rows

myGESCRSS$multi_veh %>% group_by(name, value) %>% summarize(n=n()) %>% 
  arrange(name, desc(n)) %>% mutate(rank=row_number()) %>%
  filter(rank<=3) %>%
  select(-rank)
#> `summarise()` has grouped output by 'name'. You can override using the
#> `.groups` argument.
#> # A tibble: 62 × 3
#> # Groups:   name [21]
#>    name   value                                                                n
#>    <chr>  <chr>                                                            <int>
#>  1 damage 12 Clock Value                                                   98421
#>  2 damage 6 Clock Value                                                    42402
#>  3 damage 11 Clock Value                                                   39565
#>  4 dr_sf1 Careless Driving                                                  7341
#>  5 dr_sf1 Looked But Did Not See                                            1313
#>  6 dr_sf1 Reported as Unknown                                               1072
#>  7 dr_sf2 Operating the Vehicle in an Erratic, Reckless or Negligent Mann…  1966
#>  8 dr_sf2 Reported as Unknown                                               1072
#>  9 dr_sf2 Careless Driving                                                   226
#> 10 dr_sf3 Reported as Unknown                                               1072
#> # ℹ 52 more rows

myGESCRSS$multi_per %>% group_by(name, value) %>% summarize(n=n()) %>% 
  arrange(name, desc(n)) %>% mutate(rank=row_number()) %>%
  filter(rank<=3) %>%
  select(-rank)
#> `summarise()` has grouped output by 'name'. You can override using the
#> `.groups` argument.
#> # A tibble: 29 × 3
#> # Groups:   name [10]
#>    name     value                                                              n
#>    <chr>    <chr>                                                          <int>
#>  1 mnmdstrd Not Distracted                                                  1650
#>  2 mnmdstrd Inattention (Inattentive), Details Unknown                       124
#>  3 mnmdstrd Reported as Unknown if Distracted                                 73
#>  4 mpr_act  Crossing Roadway                                                3421
#>  5 mpr_act  Movement Along Roadway with Traffic (In or Adjacent to Travel…   565
#>  6 mpr_act  In Roadway - Other (Working, Playing, Etc.)                      229
#>  7 mtm_crsh None Noted                                                      2621
#>  8 mtm_crsh Failure to Yield Right-Of-Way                                   1145
#>  9 mtm_crsh Improper Crossing of Roadway or Intersection (Jaywalking)        383
#> 10 nmaction Crossing Roadway                                                6886
#> # ℹ 19 more rows
```

The `events` tibble provides a sequence of numbered events for each
vehicle in each crash.

``` r
head(myGESCRSS$events, 10)
#>         casenum veh_no               aoi                        soe veventnum
#> 1  201901174219      1 Non-Harmful Event     Ran Off Roadway - Left         1
#> 2  201901174219      1     3 Clock Point                       Curb         2
#> 3  201901174219      1     Non-Collision          Rollover/Overturn         3
#> 4  201901176655      1             Right Motor Vehicle In-Transport         1
#> 5  201901176655      2    12 Clock Point Motor Vehicle In-Transport         1
#> 6  201901176667      1    12 Clock Point Motor Vehicle In-Transport         1
#> 7  201901176667      2     4 Clock Point Motor Vehicle In-Transport         1
#> 8  201901176694      1 Non-Harmful Event              End Departure         1
#> 9  201901176694      1    12 Clock Point       Traffic Sign Support         2
#> 10 201901176694      1    12 Clock Point       Tree (Standing Only)         3
#>    year
#> 1  2019
#> 2  2019
#> 3  2019
#> 4  2019
#> 5  2019
#> 6  2019
#> 7  2019
#> 8  2019
#> 9  2019
#> 10 2019
```

The `codebook` tibble provides a searchable codebook for the data,
useful if you know what concept you’re looking for but not the variable
that describes it.

``` r
# View(myGESCRSS$codebook)

myGESCRSS$codebook %>%
  filter(name_rfars == ""lgt_cond"") %>% distinct() %>% head(10)
#>     source year     file name_ncsa name_rfars           label value
#> 1  GESCRSS 2019 accident  LGT_COND   lgt_cond Light Condition     1
#> 2  GESCRSS 2019 accident  LGT_COND   lgt_cond Light Condition     2
#> 3  GESCRSS 2019 accident  LGT_COND   lgt_cond Light Condition     3
#> 4  GESCRSS 2019 accident  LGT_COND   lgt_cond Light Condition     4
#> 5  GESCRSS 2019 accident  LGT_COND   lgt_cond Light Condition     5
#> 6  GESCRSS 2019 accident  LGT_COND   lgt_cond Light Condition     6
#> 7  GESCRSS 2019 accident  LGT_COND   lgt_cond Light Condition     7
#> 8  GESCRSS 2019 accident  LGT_COND   lgt_cond Light Condition     8
#> 9  GESCRSS 2019 accident  LGT_COND   lgt_cond Light Condition     9
#> 10 GESCRSS 2020 accident  LGT_COND   lgt_cond Light Condition     1
#>                value_label
#> 1                 Daylight
#> 2       Dark - Not Lighted
#> 3           Dark - Lighted
#> 4                     Dawn
#> 5                     Dusk
#> 6  Dark - Unknown Lighting
#> 7                    Other
#> 8             Not Reported
#> 9      Reported as Unknown
#> 10                Daylight
```

### Counts

A first step in many transportation safety analyses involves counting
the number of relevant crashes, fatalities, or people involved.
`counts()` lets users specify *what* to count, *where* to count them
(rural/urban and/or in specified states or regions), *who* to include,
which *years* and an aggregation *interval* (annually or monthly), and
factors *involved* in the crash. It returns a simple tibble that can be
easily piped into `ggplot()` to quickly visualize counts.

``` r
my_counts <- counts(
  myGESCRSS,
  what = ""crashes"",
  interval = c(""year"")
  ) 

head(my_counts)
#> # A tibble: 3 × 8
#> # Groups:   year [3]
#>    year date              n what    states region urb   who  
#>   <dbl> <date>        <dbl> <chr>   <chr>  <chr>  <chr> <chr>
#> 1  2019 2019-01-01 6755841. crashes all    all    all   all  
#> 2  2020 2020-01-01 5250837. crashes all    all    all   all  
#> 3  2021 2021-01-01 6102936. crashes all    all    all   all

my_counts %>%
  ggplot(aes(x=date, y=n, label=scales::comma(n))) + 
    geom_col() + 
    geom_label(vjust=1.2) +
    labs(x=NULL, y=NULL, title = ""Total Estimated Crashes"")
```

<img src=""man/figures/README-unnamed-chunk-24-1.png"" width=""80%"" style=""display: block; margin: auto;"" />

``` r
counts(
  myGESCRSS,
  where = list(region=""s""),
  what = ""injuries"",
  interval = c(""year"")
  ) %>%
  ggplot(aes(x=date, y=n, label=scales::comma(n))) + 
    geom_col() + 
    geom_label(vjust=1.2) +
    labs(x=NULL, y=NULL, title = ""Injuries in the South"")
```

<img src=""man/figures/README-unnamed-chunk-25-1.png"" width=""80%"" style=""display: block; margin: auto;"" />

``` r
compare_counts(
  df = myGESCRSS,
  what = ""injuries"",
  where = list(region=""s""),
  where2 = list(region=""ne"")
  ) %>%
  ggplot(aes(x=date, y=n, label=scales::comma(n))) + 
    geom_col() + 
    geom_label(vjust=1.2) +
    facet_wrap(.~region) +
    labs(x=NULL, y=NULL, title = ""Injuries in the South and Northeast"", fill=NULL)
```

<img src=""man/figures/README-unnamed-chunk-26-1.png"" width=""80%"" style=""display: block; margin: auto;"" />

### Mapping

GES/CRSS is not very friendly to mapping. It does not provide lat/lon
coordinates or States. Regions are composed of several States and
require extra steps to generate mappable data.

### Modeling

Having access to the full dataset also allows us to develop statistical
models. Here we fit a simple model of injury severity as a function of
age and restraint use. The results indicate that injury severity
increases with age, and when seat belts are not used properly.

``` r
# table(myFARS$flat$inj_sev)
# table(myFARS$flat$rest_use, useNA = ""ifany"")
# table(myFARS$flat$per_typ, useNA = ""ifany"")

model_data <-
  myGESCRSS$flat %>%
  filter(rest_use %in% c(""Lap Belt Only Used"",
                         ""Shoulder Belt Only Used"",
                         ""None Used / Not Applicable"",
                         ""None Used/Not Applicable"",
                         ""Shoulder and Lap Belt Used""),
         per_typ %in% c(""Driver of a Motor Vehicle In-Transport"",
                        ""Passenger of a Motor Vehicle In-Transport"")
         ) %>%
  mutate(
    rest_use = case_when(
      rest_use %in% c(""Lap Belt Only Used"", ""Shoulder Belt Only Used"") ~ ""Partial"",
      rest_use %in% c(""None Used / Not Applicable"", ""None Used/Not Applicable"") ~ ""None"",
      rest_use %in% c(""Shoulder and Lap Belt Used"") ~ ""Full"",
      TRUE ~ ""Unknown""
      ) %>%
      as.factor() %>%
      relevel(ref = ""Full""),
    kabco = case_when(
      inj_sev == ""Fatal Injury (K)"" ~ 4,
      inj_sev %in% c(""Suspected Serious Injury (A)"", 
                     ""Suspected Serious Injury(A)"") ~ 3,
      inj_sev %in% c(""Suspected Minor Injury (B)"", 
                     ""Suspected Minor Injury(B)"") ~ 2,
      inj_sev == ""Possible Injury (C)"" ~ 1,
      inj_sev == ""No Apparent Injury (O)"" ~ 0,
      TRUE ~ as.numeric(NA)
      ),
    age_n = gsub(""\\D+"","""", age) %>% as.numeric(),
    speed_n = gsub(""\\D+"","""", trav_sp) %>% as.numeric()
    ) 

my_model <- lm(kabco ~ age_n + rest_use + speed_n, data = model_data) 

stargazer::stargazer(my_model, type = ""html"")
```

<table style=""text-align:center"">
<tr>
<td colspan=""2"" style=""border-bottom: 1px solid black"">
</td>
</tr>
<tr>
<td style=""text-align:left"">
</td>
<td>
<em>Dependent variable:</em>
</td>
</tr>
<tr>
<td>
</td>
<td colspan=""1"" style=""border-bottom: 1px solid black"">
</td>
</tr>
<tr>
<td style=""text-align:left"">
</td>
<td>
kabco
</td>
</tr>
<tr>
<td colspan=""2"" style=""border-bottom: 1px solid black"">
</td>
</tr>
<tr>
<td style=""text-align:left"">
age_n
</td>
<td>
0.003<sup>\*\*\*</sup>
</td>
</tr>
<tr>
<td style=""text-align:left"">
</td>
<td>
(0.0001)
</td>
</tr>
<tr>
<td style=""text-align:left"">
</td>
<td>
</td>
</tr>
<tr>
<td style=""text-align:left"">
rest_useNone
</td>
<td>
1.320<sup>\*\*\*</sup>
</td>
</tr>
<tr>
<td style=""text-align:left"">
</td>
<td>
(0.009)
</td>
</tr>
<tr>
<td style=""text-align:left"">
</td>
<td>
</td>
</tr>
<tr>
<td style=""text-align:left"">
rest_usePartial
</td>
<td>
0.075<sup>\*\*\*</sup>
</td>
</tr>
<tr>
<td style=""text-align:left"">
</td>
<td>
(0.022)
</td>
</tr>
<tr>
<td style=""text-align:left"">
</td>
<td>
</td>
</tr>
<tr>
<td style=""text-align:left"">
speed_n
</td>
<td>
0.010<sup>\*\*\*</sup>
</td>
</tr>
<tr>
<td style=""text-align:left"">
</td>
<td>
(0.0001)
</td>
</tr>
<tr>
<td style=""text-align:left"">
</td>
<td>
</td>
</tr>
<tr>
<td style=""text-align:left"">
Constant
</td>
<td>
0.030<sup>\*\*\*</sup>
</td>
</tr>
<tr>
<td style=""text-align:left"">
</td>
<td>
(0.007)
</td>
</tr>
<tr>
<td style=""text-align:left"">
</td>
<td>
</td>
</tr>
<tr>
<td colspan=""2"" style=""border-bottom: 1px solid black"">
</td>
</tr>
<tr>
<td style=""text-align:left"">
Observations
</td>
<td>
122,164
</td>
</tr>
<tr>
<td style=""text-align:left"">
R<sup>2</sup>
</td>
<td>
0.199
</td>
</tr>
<tr>
<td style=""text-align:left"">
Adjusted R<sup>2</sup>
</td>
<td>
0.199
</td>
</tr>
<tr>
<td style=""text-align:left"">
Residual Std. Error
</td>
<td>
0.846 (df = 122159)
</td>
</tr>
<tr>
<td style=""text-align:left"">
F Statistic
</td>
<td>
7,592.222<sup>\*\*\*</sup> (df = 4; 122159)
</td>
</tr>
<tr>
<td colspan=""2"" style=""border-bottom: 1px solid black"">
</td>
</tr>
<tr>
<td style=""text-align:left"">
<em>Note:</em>
</td>
<td style=""text-align:right"">
<sup>*</sup>p\<0.1; <sup>**</sup>p\<0.05; <sup>***</sup>p\<0.01
</td>
</tr>
</table>

``` r
new_data <- expand.grid(
  age_n = c(20, 60),
  speed_n = seq(10, 60, 10),
  rest_use = factor(c(""Full"", ""Partial"", ""None""), levels = c(""Full"", ""Partial"", ""None""), ordered = TRUE) )

new_data %>%
  mutate(pred = predict(my_model, newdata = new_data),
         age = paste0(age_n, "" yrs"")) %>%
  ggplot(aes(x=speed_n, y=pred, fill=age)) +
    geom_col(position = position_dodge()) +
    facet_wrap(.~rest_use) +
    scale_y_continuous(
      limits = c(0,4), breaks = 0:4, labels = c(""O"", ""C"", ""B"", ""A"", ""K""), expand = expansion()) +
    theme(panel.grid = element_blank(),
          panel.grid.major.y = element_line(c(""black"")),
          axis.ticks = element_blank()) +
    labs(x=""Travel Speed (mph)"", y="""", title = ""Predicted Injury Severity by Age, Restraint Use, and Travel Speed"",
         fill=""Age"",
         caption = ""Full = correctly used seatbelt, partial = partially correctly used, none = no seatbelt."")
```

<img src=""man/figures/README-unnamed-chunk-28-1.png"" width=""80%"" style=""display: block; margin: auto;"" />
",4,4,2,4,transportation,"[crash, fatalities, official-statistics, r, transportation]",00000
175,aidaat-conference,AIDA-AT,AIDA-AT,https://github.com/AIDA-AT/aidaat-conference,https://api.github.com/repos/AIDA-AT/aidaat-conference,The 1st conference on Artificial Intelligence and Data Analytics for Air Transportation (AIDA-AT 2020) will provide an excellent interdisciplinary forum for researchers to present and discuss latest advances in research work and applications of Artificial Intelligence and Data Analytics in the field of Air Transportation. ,"Dear researchers,

Wellcome to AIDAAT Conference,

Here is the simple tutorial how you public your source-code to AIDA-AT, after your paper have been accepted.

# *** Requirements ***

1. Knowlegde in Git.
2. Github account. 
3. Git was installed on your machine.

Watch these video to get overview about git and github : 

https://www.youtube.com/watch?v=sz6zfrQpCQg (What is Git | What is GitHub | Git Tutorial | GitHub Tutorial | Devops Tutorial | Edureka)

https://www.youtube.com/watch?v=xuB1Id2Wxak (GitHub Learning Lab: Introduction to GitHub Walkthrough)

You can explore more from reference resources:
- https://www.datacamp.com/courses/introduction-to-git-for-data-science
- https://lab.github.com/githubtraining/introduction-to-github
- google for more :-D


# Step by step

Example: Suppose that the reseacher Tan have paper accepted `000` from AIDA-AT and his GitHub account is `tanthml`, he will follow step by step below to public his code to AIDA-AT GitHub.

1. Go to AIDA-AT Conference GitHub repo : https://github.com/AIDA-AT/aidaat-conference

2. Fork it to your GitHub account.
In this example, it will be forked to `tanthml` located at : https://github.com/tanthml/aidaat-conference

![alt text](./img/forked_aidaat_repo.png)

3. Clone the forked git repo to your local machine:
    For example, suppose this is my forked-repo from AIDA-AT, I will clone it to local machine:
    Open Terminal (Mac/Linux), if you are using Windows, you can download this tool: https://git-scm.com/downloads
    
    ``` cd ~ ```  # go to home directory, or your working space.
    
    ``` git clone https://github.com/<your-git-account>/aidaat-conference.git ```
    In this example: ```git clone https://github.com/tanthml/aidaat-conference.git```
    ![alt text](./img/git_clone_forked_repo.png)
    
4. Go to the clone repo directory, add your working results (source-code, pictures, documenation for reproduce experiments):
    
    ``` cd aidaat-conference/AIDA-AT2020 ```
    ![alt text](./img/cd_to_AIDA-AT2020.png)    
    
    ``` git pull origin master ``` # make sure you get the latest updates.
    
    ### create a new branch for your work
    
    ``` git checkout -b your-branch-name ```
    
    `<your-branch-name>` should be short, clear and informative, follow this pattern `aida-at-2020-paper-id-xxx`, where xxx is your accepted paper ID.
    
    In my case, it will be: ``` git checkout -b aida-at-2020-paper-id-000 ```
    
    ### using a File explorer go to AIDA-AT2020 `aidaat-conference/AIDA-AT2020`
    ### copy all your source code, sample data, experiment result to your paper id folder, for example in this case: `PID_000`
    ![alt text](./img/sample_code_structure.png)  
    Use `git status` to view changes in `aidaat-conference/AIDA-AT2020`
    ![alt text](./img/git_checkout_new_branch_and_status.png)  
    
    `BE NOTICED THAT: YOU MUST WORK INSIDE YOUR FOLDER BELONG TO YOUR PAPER ID ONLY, DO NOT CHANGE ANYTHING OUTSIDE YOUR PAPER ID FOLDER`
    
    ### add and commit your works
    ``` git add PID_000/ ```
    
    ``` git commit -m ""aida-at-2020-paper-id-xxx"" ```
    In this case: ``` git commit -m ""aida-at-2020-paper-id-000""```
    ![alt text](./img/git_add_and_commit_message.png) 
    
    ``` git push origin your-branch-name ```
    In this case: ``` git push origin aida-at-2020-paper-id-000 ```
    ![alt text](./img/git_push_to_forked_repo.png) 
    
5. Goto your working branches from forked repo on Github via the https://github.com/your-git-account/aidaat-conference/branches
(In my example, it is : https://github.com/tanthml/aidaat-conference/branches)
    ![alt text](./img/git_branch_of_forked_repo.png)
    and create the pull-request to AIDA-AT follow these pictures below:
    ![alt text](./img/git_create_pull_request_to_master_aidaat-conference.png)
    
    ![alt text](./img/git_after_create_pull_request.png)
    
6. Wait for reviews & feedbacks from AIDA-AT staffs, then it will be merged to AIDA-AT repo.

- AIDA-AT members will review and feedbacks,
    ![alt text](./img/git_aidaat_review_and_comment.png)
- After review, your pull request will be approved,
    ![alt text](./img/git_aidaat_approve_your_pull_request.png)

Thank for your contributions!
",4,4,2,1,transportation,"[air-traffic-control, air-traffic-data, air-traffic-management, data-science, deep-learning, machine-learning, multi-agent-systems, predictive-analytics, transportation]",00000
176,MetroViz,fandu,N/A,https://github.com/fandu/MetroViz,https://api.github.com/repos/fandu/MetroViz,How well do buses stick to schedules? We answered this question by visualizing a bus fare dataset.,"# MetroViz
MetroViz is an interactive visual analysis tool that helps users explore public transportation data and evaluate how well the public transportation system is serving the public.

![Screenshot](http://i.imgur.com/PGDZESE.png)

### Usage
* Running MetroViz requires python2 or python3 with cherrypy installed and the following database file (too large to be included directly in the git repo): [Metroviz.zip](https://drive.google.com/open?id=0By7ubmCnVyC6ck1FaDVWZlJuQjA)
* Git clone the project to obtain the source code and place the Metroviz.db file in the root (MetroViz) directory.
* To start MetroViz, execute webserver6.py (runs under python2 or python3) and *either* webserver2 or webserver3 (depending on your version of python). Then, point your browser at:
`localhost:8000/app`
* To shutdown MetroViz, kill the two server processes.

### Paper
* [MetroViz: Visual Analysis of Public Transportation Data](https://arxiv.org/abs/1507.05215)
```
@article{du2015metroviz,
  title={Metroviz: Visual analysis of public transportation data},
  author={Du, Fan and Brul{\'e}, Joshua and Enns, Peter and Manjunatha, Varun and Segev, Yoav},
  journal={arXiv preprint arXiv:1507.05215},
  year={2015}
}
```
",4,4,6,1,transportation,"[d3, data-visualization, javascript, python, transportation, visual-analysis]",00000
177,Beep-App,bnussman,N/A,https://github.com/bnussman/Beep-App,https://api.github.com/repos/bnussman/Beep-App,"An affordable ride-sharing app for people to get around App State and Boone, NC.","<p align=""center"">
  <a href=""https://github.com/bnussman/Beep"">
    <img src=""https://ridebeep.app/favicon.png"" alt=""Logo"" width=""50"" height=""50"">
  </a>

  <h1 align=""center"">Ride Beep App</h1>

  <p align=""center"">
    A simple way to get a ride at Appalachian State University. A product by students for students.
</p>

<p align=""center"">
    <img src=""https://ridebeep.app/white.png"" alt=""Screenshot"" height=""400"">
</p>

In Boone, many years ago, students started a system called ""Beeping"" as a Facebook group that allows them to make posts to find rides with other students. This Facebook page has been run and administered for years but a small team and I took on the task of making a native app that is intended to replace the Facebook page system of finding rides in Boone. Our goal with this app is to replace this inefficient Facebook system and streamline ride-sharing in small college towns. You can consider this app an Uber clone, but with a more niche audience and feature set. 

## Related Beep App Repos
* [Beep-API-v3](https://gitlab.nussman.us/beep-app/Beep-API-v3)
* [Beep-Socket](https://gitlab.nussman.us/beep-app/Beep-Socket)
* [Beep-Website](https://github.com/bnussman/Beep-Website)


## Getting Started
### Prerequisites

* [Expo](https://expo.io)

### Installation

1. Clone the repo
```sh
git clone https://github.com/bnussman/Beep.git
```
2. Install NPM packages
```sh
expo install
```
3. Start the Expo development server
```JS
expo start
```

## Help us imporove the Beep App

See the [open issues](https://github.com/bnussman/Beep/issues) for a list of proposed features and known issues

## License

Please don't take our code and use it to make a competing app

## Contact

Banks Nussman - [@bnussman](https://twitter.com/bnussman) - banks@nussman.us
",4,4,2,2,transportation,"[appalachian, college, transportation, university]",00000
178,Bikestream,Ledgerback,Ledgerback,https://github.com/Ledgerback/Bikestream,https://api.github.com/repos/Ledgerback/Bikestream,Repo for the Bikestream project (aka Databike Pilot Project),"# Bikestream
Repo for the Bikestream project (aka Databike Pilot Project).

Bikestream is an applied research project in the transportation sector, specifically micromobility, for developing alternative (open source, democratized, and decentralized) approaches to data governance (sourcing, collecting, storing, sharing, etc.) and mobility autonomy (e.g., open design of electric-assisted bicycles (""e-bikes"")).

To put our approaches into action, we develop proof-of-concepts (PoCs) to showcase the use of our approaches, so that our approaches may be replicated and adapted to fit the needs of local communities, researchers, cyclists, organizations, and many more. Through our PoCs, we also get a chance to develop busienss cases for the Bikestream project as commercialization opprortunties for our contributors and partners. 

Our main theme for Bikestream is developing approaches that rely on relatively low-cost physical parts and open source software and designs, with an emphasis on utilizing emerging technologies in the Web3 space for such purposes. 

Our first PoC is the Databike Zeta 001 (DBZ-001), a PoC to convert a traditional bicycle into an e-bike, and then add on-board computers (Cycle Analyst 3 and Raspberry Pi 3 B+) to log, manipulate, and share geolocation data and electrical part data (""databike"") with a blockchain-based data sharing services, in this case being Streamr. 

Through the project, we hope to connect with other researchers and organizations who share similar views and missions, and to educate others about the importance of data (i.e., data literacy) and the uses of e-bikes, especially in a citizen science context. 

We have successfully developed the DBZ-001 and are excited about the prospects of the future of this project. 

For more information, please read the [slidedeck](https://docs.google.com/presentation/d/1rRAxiwdAZD8dzrfPTdBN7PWBHJ3g2lZ1ic6fQXoWC-A/edit?usp=sharing).

# Team

- Charles Adjovu, LedgerbackØDCRC 
- Gavin Hansen

If you would like to join the team, please fill out the [***form***](https://forms.gle/mGYNiSnUbQTJrRgW9).

# Introductory Slidedeck

- [Slidedeck](https://docs.google.com/presentation/d/1rRAxiwdAZD8dzrfPTdBN7PWBHJ3g2lZ1ic6fQXoWC-A/edit?usp=sharing)

# Chat

Come talk with us on [Discord](https://discord.gg/YuMSjWP) or [Slack](https://join.slack.com/t/ledgerback/shared_invite/zt-6kef18dv-gqFTrvM9xvINkO~v5ltgYw).

# Alternative to?

- Goal: Populus.ai 

# How to contribute
## DIY e-bikes

1. Make your own databike based on the databike report and customize it to meet your own needs
2. Make your own databike based on the databike report but at a cheaper price than we our databike
3. Make an open source rame design with BikeCAD or databikes

## Data Cooperative

1. Create a stream on Streamr and add your stream to the Mobility Data Cyclist's Union product on the Streamr Marketplace. 
2. Help us create a multi-stakeholder model or databikes and mobility data in general that tracks the liecycle o a databike.

## Citizen Science

1. Expand the databike by also adding a vibration sensor to the Raspberry Pi 3 B+ or using the vibration sensor on your smartphone or mobile phone to report on road conditions in your local area and stream the data on Streamr or provide the data to civil engineers and transportation proessionals in your area. 
2. Help us create educational materials on _DIY e-bikes_, _mobility data_, _e-bike market_, _sensor data_, _geolocation data_, _riding bicycles_, _bicycle maintenance_, and much more. 

## Data Analytics

1. Help us develop a machine learning model to help optimize cyclist perormance so that e-bike parts can last longer while improving the cyclist's human power. 
2. Help us make a visualization o geolocation data (i.e., geomap) with Lealet.js

## Events

1. Attend (and/or share with your riends) one o our inormational events on the Bikestream project

## Parts

1. Help us by donating below to purchase new parts or the databike such as a _smart-lock_ or _PAS sensor_

## Applications

1. Help us develop or ind an open source mobile application or tracking or renting databikes in real-time (like Lime).
2. Help us connect a smart-lock to a Raspberry Pi 3 B+
3. Help us develop an Ethereum DApp that records smart-lock events  
4. Help us ix/troubleshoot the errors in our Python program. 

## Issues
1. Send us your thoughts on issues plaguing mobility data, micro-mobility industry, cycling, location data, or other related areas

## Donation

1. You can donate to us to help pay some o the costs o the project via the link below. 

<a target=""_blank"" href=""https://donorbox.org/ledgerback-digital-commons-research-cooperative-community-funding-initiative?default_interval=o""><img src=""https://d1iczxrky3cnb2.cloudfront.net/button-medium-blue.png"" /></a>


",4,4,1,0,transportation,"[bicycle-model, bikesharing, blockchain, citizenscience, data-governance, databike, ebike, electric-bicycle, intelligent-transportation, internetofthings, micromobility, mobility-as-a-service, mobility-data, shared-mobility, streamr, sustainability, transportation]",00000
179,atd-product,cityofaustin,cityofaustin,https://github.com/cityofaustin/atd-product,https://api.github.com/repos/cityofaustin/atd-product,A website about ATD's Data & Technology Services team,"# atd-product

A website about ATD's Data & Technology Services team.

![architecture diagram](arch-diagram.png)

## Get it running

Local development requires `git` and `npm`.

Clone this repo

```
$ git clone git@github.com:cityofaustin/atd-product.git
```

Install packages

```
$ npm install
```

Start server

```
$ npm run dev
```

### Icon attributions

- [Change](https://thenounproject.com/search/?q=alternate&i=3026571)
- [Grow](https://thenounproject.com/term/grow/204852/)
- [Unlock](https://thenounproject.com/term/unlock/10608/)
- [Empower](https://thenounproject.com/term/astronaut/2527039/)
- [Heart](https://thenounproject.com/term/heart-user/327074/)

## Migration to Next.js

<!-- TABLE OF CONTENTS -->
<details open=""open"">
  <summary>Table of Contents</summary>
  <ol>
    <li>
      <a href=""#about-nextjs"">About Next.js</a>
    </li>
    <li>
      <a href=""#project-status"">Project Status</a>
    </li>
    <li>
        <a href=""#changes"">Changes</a>
        <ul>
        <li><a href=""#project-file-structure"">Project File Structure</a></li>
        <li><a href=""#code-changes"">Code Changes</a></li>
      </ul>
    </li>
    <li>
      <a href=""#whats-next"">What's Next</a>
    </li>
  </ol>
</details>

### About Next.js

Next.js is a JavaScript framework created by Zeit. It lets you build server-side rendering and static web applications using React. It’s a great tool to build your next website. It has many great features and advantages, which can make Nextjs your first option for building your next web application.

### Project Status

This Next.js version contains all the functionalities of it's create react app counterpart. With that being said, there are still some work to do to optimize and refactor code (See <a href=""#whats-next"">**What's Next**</a> section below).

### Project File Structure

This app contains both create react app and next.js file structures. The app, however, is configured to run next.js and this can be seen in the scripts property of the package.json. I decided to intentionally leave the create react app architecture so components and file structure can be compared while making the migration. The create react app file structure can be found in the `/craSrc` folder.

Some differences between the 2 file structures

- The component views in original `/src/views` are located in the `/pages` folder (I tried to copy the name structure, but Next.js uses the folder name as the route. So I translated the name `nView.jsx` -> `n.js` where `n` is the component name)
- The landing page is located in `/pages/index.js` file.
- The contexts and head tags (this was the head html in the `index.html` file) are located in the file `/pages/_app.js` file. This file is analagous to the `App.js` file rom `create react app` except there are no routes. It also contains an import for the `custom.scss` file (If you want to import global css, you need to import the file here).
- Folder names are routes and folders that have the name `[n]` are routes for params. EX: `/products/[issue_number]` -> `/products/307`
- The styles folder contains the `custom.scss` file.
- The components associated with the views (or pages in this case), wrappers, and shared components are located in `/components`.
- Context files are located in `/contexts`.

### Code Changes

- Replaced `react-router-dom` and it's affiliated code with Next.js's option for routing (Next.js does not use `react-router-dom`).
- Removed conditional render for `<BackLink/>` in `<IndexIssueDetails />` (Spoke with Mateo and was decided to always show `<BackLink />`).
  [This was partly done due to Next.js not able to send state through `history.push` and `history.replace`.](https://github.com/vercel/next.js/discussions/23991)

### What's Next

- Add Service worker code to Next.js.
- Add Catch all route (Page).
- [Look at differences between Server Side Rendering and Static Generation.](https://nextjs.org/docs/basic-features/pages)
- [Check out Preview mode.](https://nextjs.org/docs/advanced-features/preview-mode)

",4,4,10,2,transportation,"[government, mobility, open-data, product-managment, transportation]",00000
180,patco-today,davidp799,N/A,https://github.com/davidp799/patco-today,https://api.github.com/repos/davidp799/patco-today,Android application which utilizes Google Transit Feed Specifications (GTFS) to show most recent schedule information for PATCO Transit,"# Patco Today

<img src=""/readme/PatcoToday-logo.png"" align=""left""
width=""200"" hspace=""10"" vspace=""10"">

Patco Today is a free, open-source transit app for Android. Primarily utilizing the Google Transit Feed Specification (GTFS) API, it provides the most up-to-date scheduling information for PATCO Transit.

Patco Today is (soon to be) available on the Google Play Store and F-Droid.

<p align=""left"">
	<a href=""https://play.google.com/store/apps/NOT_YET"">
	    <img alt=""Get it on Google Play""
		height=""80""
		src=""https://play.google.com/intl/en_us/badges/images/generic/en_badge_web_generic.png"" />
	</a>  
	<a href=""https://f-droid.org/app/NOT_YET"">
	    <img alt=""Get it on F-Droid""
		height=""80""
		src=""https://f-droid.org/badge/get-it-on.png"" />
	</a>
</p>
        
## Features

Current features of Patco Today include the following:
- Plan transit trips between PATCO Stations ahead of time.
- Up-to-date transit schedules at runtime.
- Automatic updates for special schedules.
- Caching of files for offline viewing.
- Support for android 5.1 or higher.
- An ad-free experience.
- Application theming:
	* Light, Dark, and System Modes
	* Support for Material 3 Dynamic Colors
	* Now supports Monet (12+) Monochrome App Icon

Coming Soon:
- Ability to change date for schedule viewing.
- Seamless implementaiton of special schedules.
- Ability to toggle automatic commuter mode.
- Late arrival notifications.

## Screenshots

<p float=""middle"">
	<img src=""/readme/PatcoTodayFramed1.png"" width=""18%""/>
	<img src=""/readme/PatcoTodayFramed2.png"" width=""18%"" /> 
	<img src=""/readme/PatcoTodayFramed3.png"" width=""18%"" />
	<img src=""/readme/PatcoTodayFramed4.png"" width=""18%"" /> 
	<img src=""/readme/PatcoTodayFramed5.png"" width=""18%"" />
</p>

## Permissions

On Android versions following Android 5.1, Patco Today requires the following permissions:
- Full Network Access.
- View Network Connections.

The network access permissions are used to download scheduling data.

## Contribute code

Whether you’ve fixed a bug or introduced a new feature, pull requests are welcome! To help translate Patco Today, please see “[Translate](#translate).”

You can use Git to clone this repository:

```
git clone --recursive https://github.com/Davidp799/patco-today.git
```

Here are a few contribution tips:

- You can use either Java or, preferably, Kotlin.

- Make sure your code is logical and well formatted. If using Kotlin, see the [Google Kotlin Style Guide](https://developer.android.com/kotlin/style-guide).

## Translate

You can help translate Patco Today [on Crowdin](https://crowdin.com/project/patco-today). Here are a few tips:

- When using quotation marks, insert the symbols specific to the target language, as listed in [this table](https://en.wikipedia.org/wiki/Quotation_mark#Summary_table).

- Patco Today uses title case for some English UI text. Title case isn’t used in other languages; opt for sentence case instead.

- Some English terminology may have no commonly used equivalents in other languages. In such cases, use short descriptive phrases—for example, the equivalent of _bottom row_ for _dock_.

## Privacy Policy

You should have received a copy of the [Privacy Policy](privacy-policy.md) along with this program. If not, find it [here](https://www.termsfeed.com/live/7267d0fc-3b09-435a-bf45-71ead0cc1494).

## Terms and Conditions

You should have received a copy of the [Terms and Conditions](terms-conditions.md) along with this program. If not, find it [here](https://www.termsfeed.com/live/e56e7ea1-704d-45cf-9b6c-36c786290c1b).

## License
Patco Today is licensed under the GNU General Public License, version 3 (GPLv3) and is distributed free of charge.
    
  This program is free software: you can redistribute it and/or modify
  it under the terms of the GNU General Public License as published by
  the Free Software Foundation, either version 3 of the License, or
  (at your option) any later version.

  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU General Public License for more details.

  You should have received a [copy of the GNU General Public License](license.md)
  along with this program.  If not, see <https://www.gnu.org/licenses/>.
",4,4,3,1,transportation,"[android, android-application, java, transit, transportation]",00000
181,paris-subway-api,greeeg,N/A,https://github.com/greeeg/paris-subway-api,https://api.github.com/repos/greeeg/paris-subway-api,🧑‍🔬 GraphQL layer for Paris Transportation Authority's real-time API,"[github-actions-badge]: https://github.com/greeeg/paris-subway-api/workflows/Test/badge.svg
[typescript]: https://www.typescriptlang.org
[graphql-yoga]: https://github.com/prisma-labs/graphql-yoga
[soap]: https://github.com/vpulim/node-soap
[prettier]: https://prettier.io/
[lintstaged]: https://github.com/okonet/lint-staged
[storybook]: https://storybook.js.org/

# Paris Subway API

> GraphQL layer for Paris Transportation Authority's [real-time API](https://dataratp.opendatasoft.com/page/temps-reel/)

```graphql
query {
  lines(reseau: ""metro"") {
    name
    code
    stations {
      name
    }
  }
}
```

## Requirements

- Node.js version `10.15.3` or above
- Yarn version `1.17.0` or above

## Stack

- [TypeScript][typescript] as programming language
- [GraphQL Yoga][graphql-yoga] as GraphQL server
- [SOAP][soap] to communicate with RATP's webservice
- [Prettier][prettier] and [Lint-staged][lintstaged] as code formatting and linting tools

## Getting started

```sh
# Clone the repository
git clone git@github.com:greeeg/paris-subway-api.git

cd paris-subway-api

# Install dependencies
yarn install

# Start a development server locally
yarn run dev
```

## Scripts

The following scripts are embedded with the package:

| Name             | Description                                          |
| ---------------- | ---------------------------------------------------- |
| `dev`            | Runs the project locally                             |
| `build`          | Transpiles Typescript files to Javascript files      |
| `generate:types` | Generates Typescript definitions from GraphQL schema |

## Building for deployment

> Please note that the Paris Transportation Authority (RATP) currently has an IP address whitelisting policy in order to use their real-time API. You can request access by using [this form](https://data.ratp.fr/api/datasets/1.0/horaires-temps-reel/attachments/fo_inscription_pdf/)

```sh
# Build a Docker image for the project
docker build -t paris-subway-api .

# Run image locally
docker run --init -p 4000:4000 paris-subway-api
```
",3,3,1,10,transportation,"[graphql, graphql-server, transportation]",00000
182,telematicsSDK-demoapp-Android-java,Mobile-Telematics,Mobile-Telematics,https://github.com/Mobile-Telematics/telematicsSDK-demoapp-Android-java,https://api.github.com/repos/Mobile-Telematics/telematicsSDK-demoapp-Android-java,"This is an app that demonstrates using of the Telematics SDK and walks you through the integration. The SDK tracks user location and driving behavior such as speeding, cornering, braking, distracted driving, and other parameters.","# Mobile Telematics demo app JAVA

This is an app that demonstrates using of the [Telematics SDK](https://www.telematicssdk.com/telematics-sdk/) and walks you through the integration. The SDK tracks user location and driving behavior such as speeding, cornering, braking, distracted driving, and other parameters.
## Installation
* Create a company account in [Datahub](https://userdatahub.com/)
* Obtain [credentials](https://docs.telematicssdk.com/docs/datahub#user-service-credentials)
* [Create a test user](https://docs.telematicssdk.com/docs/register-a-new-sdk-user) to obtain ```DeviceToken```
***
* Clone this repository to local folder
* Open project with Android Studio
* Open MainActivity.kt file and setup ```YOUR_TOKEN``` with your real *Devicetoken*
    ```
    private static final String YOUR_TOKEN = """";
    ```   
* build project and run
* Click on `START PERMISSIONS WIZARD` or `START PERMISSIONS DIALOG` and grant all required permissions
* Click on `ENABLE SDK` and you are ready to go!

## Use the app
* Make a trip
* Check your trip in the [Datahub](https://userdatahub.com/)

## Telematics SDK
* [Telematics SDK for iOS apps](https://docs.telematicssdk.com/docs/-download-the-sdk-and-install-it-in-your-environment)
* [Telemmatics SDK for Android apps](https://docs.telematicssdk.com/docs/add-the-sdk-to-your-app-android)
* [Telematics SDK for Flutter apps](https://docs.telematicssdk.com/docs/sdk-for-flutter-app)
* [Telematics SDK for ReactNative](https://docs.telematicssdk.com/docs/react-native)

## More details on Mobile telematics
* [Telematics product page](https://telematicssdk.com)
* [Documentations](https://docs.telematicssdk.comm)
* [Telematics API reference](https://docs.telematicssdk.com/reference)
* [Telematics postman collection](https://postman.telematicssdk.com)
* [Open-source telematics app](https://www.telematicssdk.com/telematics-app/)
* [Pricing](https://www.telematicssdk.com/pricing/)
* [Contacts](https://www.telematicssdk.com/contact/)
",3,3,3,0,transportation,"[demo-apps, driving-app, driving-behavior, driving-data, driving-datasets, driving-school, driving-style, drivingapp, free-apps, mobile-app-api, mobile-telematics, telematics, telematics-api, telematics-position-service, telematics-sdk, telemetry, telemetry-data, telemetry-provider, transportation, ubi]",00000
183,ai-transportation-services,amirisback,N/A,https://github.com/amirisback/ai-transportation-services,https://api.github.com/repos/amirisback/ai-transportation-services,Task 4 Artificial Intelligence,"## ai-transportation-services
Task 4 Artificial Intelligence

## Colaborator
- Muhammad Faisal Amir  (1301198497)

## University
- Telkom University
- Informatics Engineering 2019
- IFX - 43 - 02

## About This Project
Transportation Service Management

## Result - Screen Shot App

## Link Task
https://github.com/amirisback/Artificial-intelligence-transportation-services/blob/master/docs/task/task_4_transportation_service_management.docx

## Link Report

## Attention !!!
Please enjoy and don't forget fork and give a star
",3,3,2,0,transportation,"[artificial-intelligence, services, transportation]",00000
184,streetlightR,Metropolitan-Council,Metropolitan-Council,https://github.com/Metropolitan-Council/streetlightR,https://api.github.com/repos/Metropolitan-Council/streetlightR,R wrapper for StreetLight InSight® API,"
# streetlightR

<!-- badges: start -->

[![R build
status](https://github.com/Metropolitan-Council/streetlightR/workflows/R-CMD-check/badge.svg)](https://github.com/Metropolitan-Council/streetlightR/actions)
<!-- badges: end -->

streetlightR is an R wrapper for [StreetLight
Data’s](https://www.streetlightdata.com/) InSight® API that makes it
easier for users to create analyses, upload zone sets, fetch results,
and more.

To get a sense for what you can do with this package, see our
[presentation](https://github.com/Metropolitan-Council/streetlightR/blob/main/inst/2022.11-StL-API.pdf)
to the StreetLight API users group in November 2022.

## Installation

``` r
remotes::install_github(""Metropolitan-Council/streetlightR"")
```

## StreetLight API

StreetLight Data offers a limited-feature API for subscribers. Contact
StreetLight [support](mailto:support@streetlightdata.com) to request an
API key and documentation access.

### API key management

Contact StreetLight Data support to request an API key. Then, use
`streetlight_api_key()` to save the key for future use.

``` r
library(streetlightR)
streetlight_api_key(key = ""9999999"", install = TRUE)
```

## Contributing

We welcome contributions!

Please review our [CONTRIBUTING](.github/CONTRIBUTING.md) guide before
making a contribution.

Thanks everyone who has contributed one way or another:
[@ehesch](https://github.com/ehesch),
[@ravenmcknight](https://github.com/ravenmcknight), and
[@eroten](https://github.com/eroten).

## Notes

This package is not affiliated with nor maintained by [StreetLight
Data](https://www.streetlightdata.com/). This package is tool for
StreetLight API users authored by StreetLight API users.

<a href=""https://metrocouncil.org"" target=""_blank""><img src=""man/figures/main-logo.png"" style=""margin-left: 50%;margin-right: 50%;"">

<div>

</div>

</a>
",3,3,3,6,transportation,"[api, pkgdown, r-package, rstats, streetlight-data, transportation]",00000
185,Accessibility-Food-Banks-Hamilton,paezha,N/A,https://github.com/paezha/Accessibility-Food-Banks-Hamilton,https://api.github.com/repos/paezha/Accessibility-Food-Banks-Hamilton,"Higgins, C.D., Páez, A., Kim, G., Wang, J. (2021) Changes in accessibility to emergency and community food services during COVID-19 and implications for low income populations in Hamilton, Ontario. Social Science and Medicine, 291:114442","
<!-- README.md is generated from README.Rmd. Please edit that file -->

# Changes in accessibility to emergency and community food services during COVID-19 and implications for low income populations in Hamilton, Ontario

<!-- badges: start -->
<!-- badges: end -->

Christopher D. Higgins (University of Toronto Scarborough)  
Antonio Páez (McMaster University)  
Gyoorie Kim (University of Toronto Mississauga)  
Jue Wang (University of Toronto Mississauga)

Social Science and Medicine (2021)
<https://doi.org/10.1016/j.socscimed.2021.114442>

## Abstract

In this paper we analyze the changes in accessibility to emergency and
community food services before and during the COVID-19 pandemic in the
City of Hamilton, Ontario. Many of these food services are the last line
of support for households facing food insecurity; as such, their
relevance cannot be ignored in the midst of the economic upheaval caused
by the pandemic. Our analysis is based on the application of balanced
floating catchment areas and concentrates on households with lower
incomes (&lt;CAD40,000, approximately the Low Income Cutoff Value for a
city of Hamilton’s size). We find that accessibility was low to begin
with in suburban and exurban parts of the city; furthermore, about 14%
of locations originally available in Hamilton closed during the
pandemic, further reducing accessibility. The impact of closures on the
level of service of the remaining facilities, and on accessibility, was
disproportionate, with system-wide losses exceeding 40%. Those losses
were geographically and demographically uneven. While every part of the
city faced a reduction in accessibility, inner suburbs fared worse in
terms of loss of accessibility. As well, children (age
![\\le 18](https://latex.codecogs.com/png.latex?%5Cle%2018 ""\le 18""))
appear to have been impacted the most.

## Keywords

-   Food insecurity  
-   Emergency food services  
-   Community food services  
-   Food banks  
-   Accessibility  
-   Balanced Floating Catchment Areas  
-   COVID-19  
-   Hamilton  
-   Ontario
-   Reproducible research

# Introduction

Food insecurity is defined as an “inadequate or uncertain access to a
sufficient quantity and/or adequate quality of food” due to a
household’s financial limitations (Enns et al. 2020). This condition has
been associated with reductions in nutritional outcomes (Bhattacharya,
Currie, and Haider 2004; Kirkpatrick and Tarasuk 2008; Olson 1999) and
negative physical and mental health impacts in children and adults
(Elgar et al. 2021; Jones 2017; Ramsey et al. 2011; Seligman, Laraia,
and Kushel 2010; Stuff et al. 2004). Over at least the past four decades
food banks and related services have become an essential line of defense
against food insecurity in Canadian communities (Riches 2002; Holmes et
al. 2018; Black and Seto 2020; Tarasuk, Fafard St-Germain, and Loopstra
2020). In this respect, Canada is not unlike numerous other wealthy
countries where a systematic dismantling of the welfare state took place
in the intervening period (Tarasuk, Dachner, and Loopstra 2014).

The emergence of COVID-19, the worst public health crisis since the 1918
flu pandemic, has exposed important social and economic fault lines, and
pre-existing patterns of inequality appear to have been exacerbated.
Along several other dimensions of stress (e.g., accessibility to health
care facilities, Ghorbanzadeh et al. 2021; Pereira, Braga, et al. 2021),
this seems to be the case for food insecurity as well (Laborde, Martin,
and Vos 2020). According to Statistics Canada (2020b), in the early
stages of the pandemic almost 15% of individuals reported living in a
household that faced food insecurity; the risk of food insecurity was
substantially higher for households with children. The difference
between households with and without children was significant, and 11.7%
of households with children indicated that “food didn’t last and \[there
was\] no money to get more” sometimes or often, compared to 7.3% of
households without children; likewise, 13% of households with children
indicated that they “\[c\]ouldn’t afford balanced meals” sometimes or
often, compared to 8.8% of households without children. Additionally,
Men and Tarasuk (2021) report that about 25% of individuals who
experienced job insecurity (a relatively common occurrence during the
pandemic) also experienced food insecurity associated with COVID-related
disruptions to employment, financial hardship, and use of food charity.

The impacts of food insecurity during the pandemic are alarming, since
diet-related diseases, such as obesity, heart-disease, and diabetes,
were already critical public health concerns in Canada prior to COVID-19
(Boucher et al. 2017). While emergency food services are not necessarily
a stable solution to food insecurity and in fact may encourage a
retrenchment of neoliberal policy (Wakefield et al. 2013), in reality
provide a resource of last instance to households in precarious
situations (Bazerghi, McKay, and Dunn 2016). As a mid-size city
grappling with deindustrialization, Hamilton exhibits high rates of
poverty and use of emergency food services. As recently as 2019, the
Hamilton Hunger Report (HFS 2019) noted that food banks in the city
recorded the highest number of visitors in the past 29 years; a rate of
increase greater than population growth. Most troubling, approximately
40% of all visitors were children.

It is known that urban food environments, within which people make their
daily food choices, are essential in influencing eating behaviours and
health outcomes, based on factors such as food availability, ease of
geographic accessibility and socio-demographic variations (A. Paez et
al. 2010; Vanderlee and L’Abbé 2017; Widener 2018). However, while there
is a wealth of literature that has examined the topic of geographic
accessibility to healthy food through the “food desert” concept, there
has been little research into accessibility to emergency and community
food services. Previous work has explored differences in *accessing*
food banks, such as how some households utilize food banks over short
periods of time while others regularly utilize food banks as longer-term
resource (e.g., Enns et al. 2020). In addition, transportation and
locational considerations have been raised as key issues in food bank
accessibility in previous qualitative research (Smith-Carrier et al.
2017). However, we are not aware of any research that has focused on
estimating or capturing this geographic component of accessibility.

The study of place-based geographic accessibility is concerned with
capturing the potential to reach destinations of value using the
transportation network (Páez, Scott, and Morency 2012). Indeed, the
Government of Canada’s recent Food Policy (Agriculture and Canada 2019)
has made “access” to healthy food a priority for Canadian communities
and previous research suggests that such accessibility plays a key role
in user satisfaction with food bank service delivery (Holmes et al.
2018). However, as with research into the prevalence of food deserts,
accessibility to food banks is unlikely to be evenly distributed, and
variation throughout a city can be expected due to transportation
network characteristics and the spatial distribution of service
locations and the population they are meant to serve. Furthermore,
policy responses to the COVID-19 pandemic likely have added to the
distress of vulnerable households. Non-pharmaceutical interventions
during the pandemic involving restrictions in mobility have increased
the friction of travel, in particular by transit on which low income
populations are more reliant (e.g., DeWeese et al. 2020). At the same
time, the pandemic has created additional stress for the operators of
food banks through disruptions in the supply chain (e.g., McKay,
Bastian, and Lindberg 2021) as well as concerns surrounding the delivery
of service in safe conditions and possible cancellation of food service
programs.

For this study, we aim to look at how the landscape of emergency food
and related services (e.g. low-cost or free meal service providers)
available in Hamilton, Ontario, changed during the pandemic. Did the
number of open services diminish? If so, what was the accessibility to
emergency and community food services before the pandemic from the
perspective of low income households, and how has it changed during the
pandemic with respect to geographic access and congestion at remaining
sites? And finally, who are most likely to have been impacted by changes
in the accessibility landscape? This paper first looks at the
distribution of emergency and community food services before and during
the pandemic. Then, we use the balanced floating catchment area approach
of Paez et al. (2019) to investigate the accessibility situation. For
this, we adopt a fully disaggregated approach based on parcel-level
data. Socio-economic and demographic data are drawn from the latest
Census of Canada (2016), whereas travel information is from the most
recent regional travel survey from 2016. This paper follows reproducible
research recommendations (see Brunsdon and Comber 2020), and the
research was conducted using open source tools for transportation
analysis (Lovelace 2021). The data and code needed to reproduce the
analysis are available in a [public
repository](https://github.com/paezha/Accessibility-Food-Banks-Hamilton).

# Food Insecurity and Emergency and Communal Food Services in Canada

Food insecurity is the inability to acquire and consume an adequate
amount or good quality food, leading to inadequate nutrient intake
(Kirkpatrick and Tarasuk 2008) and poorer physical and mental health
outcomes (Ramsey et al. 2011; Seligman, Laraia, and Kushel 2010; Stuff
et al. 2004). In this regard, food insecurity is a major population
health concern, particularly among Canadians at socio-economic
disadvantage (Bazerghi, McKay, and Dunn 2016). Official government
surveys such as the Household Food Security Survey Module (HFSSM), the
Canadian Community Health Surveys (CCHS), the Longitudinal and
International Study of Adults (LISA), and official classifications
determined by Health Canada in relation to socio-demographic variables
offer some insight into food insecurity in Canada (Kirkpatrick and
Tarasuk 2008; Tarasuk and Vogt 2009; Gundersen et al. 2018).

Nationally, analysis of the 2011-2012 CCHS has previously revealed that
food insecurity impacts approximately 12.3% of Canadian households
(Tarasuk, Dachner, and Loopstra 2014). Using the same data, Tarasuk et
al. (2019) found higher odds of food insecurity amongst households
relying on social assistance, those without a university degree or with
children under the age of 18, and individuals that lived alone, renters,
and those identifying as Aboriginal. While surveys revealed that only 20
to 30 percent of those experiencing food insecurity were found to
frequent food banks in Canada (Tarasuk, Dachner, and Loopstra 2014),
pre-pandemic research from Ottawa (Enns et al. 2020) and Vancouver
(Black and Seto 2020) suggests that long-term users tend to be older,
have health or mobility challenges, live in large households, and are
less likely to have employment income. In terms of geography, previous
research conducted at the provincial scale using data from the 2011-2012
CCHS found that the prevalence of food insecurity ranged across the
country from 11.8% of households in Ontario to 41% of households in
Nunavut (Tarasuk, Fafard St-Germain, and Mitchell 2019).

Food banks - sometimes also referred to as ‘food pantries’ and ‘food
shelves’ - originated as a community response to aid those with
inadequate food by voluntarily offering them meals and ingredients
(Riches 2002; Loopstra and Tarasuk 2012). Although in their origin food
banks were meant to provide a temporary solution to accommodate those in
hunger due to job retrenchments and economic downfalls since the 1980s,
over time many have evolved into a community practice to secure food
supplies for those in need (Loopstra and Tarasuk 2012; Wakefield et al.
2013). In Canada, the number of food banks has steadily increased in the
past few decades (Wakefield et al. 2013). The largest database of food
banks and their use comes from the non-profit association Food Banks
Canada (FBC), which conducts an annual assessment through its affiliated
members. FBC’s 2018 Hunger Count report (FBC 2018) (the most recent
available) listed 1,830 member food banks across the country, and found
that Canadians visited food banks 1.1 million times in March of 2018. Of
those accessing food banks, certain population characteristics tend to
be over-represented compared to national totals from the 2016 Canadian
Census of Population. According to FBC’s 2018 data, single-adult
households represent 45% of those utilizing food banks despite making up
28% of Canada’s population, 19% are single-parent households (compared
to 10% nationally), and 35% of those using food bank services are
children aged 0-18 even though their share of Canada’s national
population is approximately 20%. In addition, 59% of households
accessing food banks list social or disability assistance as their
primary source of income.

The COVID-19 pandemic has led to an increase in the number of households
living in food insecurity in Canada. Survey results from Statistics
Canada from May of 2020 suggest that 14.7% of the population was living
in food insecurity in the past 30 days, up from 10.5% in 2017-2018
(Statistics Canada 2020b). Recent data from FBC (FBC 2020) showed that
52% of member food banks reported an increase in usage in March of 2020
when initial lockdown restrictions were put in place across much of the
country. The pandemic also created significant staffing issues with 42%
of food banks reporting a reduction in volunteers. However, 53% of food
banks later reported a decrease in use into the summer of 2020 which FBC
members attributed to emergency financial support programs from the
federal government. Nevertheless, some of these benefit programs were
temporary. Although more recent statistics on food bank use in Hamilton
in 2020 and 2021 are not yet available, data from the Daily Bread Food
Bank (DBFB 2020) in neighbouring Toronto for August 2020 shows visits
climbing 51% year-over-year in that city, which suggests that many
households in Hamilton are likely to turn to food bank services to meet
their needs.

Beyond traditional conceptualizations of food banks as providers of
emergency food assistance, other community food services also play an
important role in decreasing food insecurity. The scope and objectives
of food banks can vary by region and by country, and these organizations
can include not only prepared meals and aliments for emergency food
supply, but also shared spaces to connect in community gardens and
community kitchens (Wakefield et al. 2013). However, the efficacy of
these programs in reducing food insecurity differs by the type of
service offered. For example, previous qualitative research in the
Toronto region has questioned the capacity of community kitchens to
improve the food security of low-income households due to their limited
scale of operations, and un-subsidized kitchens were found to be
particularly inaccessible to to families living in severe poverty
(Tarasuk and Reynolds 1999). However, other food access options such as
no-cost or low-cost meals provided through community meals or congregate
dining play an important role in decreasing food insecurity. Research in
Minnesota found that seniors experiencing food insecurity valued
congregate dining for providing affordable meals and a space for social
gathering (Oemichen and Smith 2016). Furthermore, because seniors paid
for the meal, there was no stigma attached to the use of these services
compared to traditional food-purchasing assistance such as the
Supplemental Nutrition Assistance Program.

While previous research has examined the characteristics of individuals
and households accessing emergency and community food services, the
locational or transportation accessibility aspect of food bank access is
not well understood. A wealth of literature examining the food desert
concept suggests that, in addition to socio-economic and demographic
factors, location and transportation networks play a key role in a
household’s accessibility to healthy foods (A. Paez et al. 2010;
Vanderlee and L’Abbé 2017; Widener 2018). For food banks specifically,
previous qualitative research in Ontario by Smith-Carrier et al. (2017)
has noted that “transportation can be challenging, particularly if the
food bank is situated in a remote location” (p. 32). Particularly, it
appears that participants experience challenges with the “inordinate
amount of time necessary to obtain food, and difficulties associated
with transportation” (p. 39). Users of food banks, according to this
research, rely on a variety of modes of transportation to access
services. Consequently, the location of facilities matters; in the words
of an interviewee: “I wish it \[the food bank\] was a little more
centrally located. Because if I didn’t have a bike I’d have to walk it
all the way out there and back. I wonder about people who don’t”
(p. 39).

To offer greater insight into the role of transportation and location in
food bank accessibility, this research examines how geographic
accessibility to food banks and food services changed in Hamilton during
the COVID-19 pandemic.

# Methods and Materials

## Methods

For the research in this paper we adopt the balanced floating catchment
area approach of Paez et al. (2019). This method for estimating
accessibility is a form of the widely-used two-stage floating catchment
area method (Radke and Mu 2000; Luo and Wang 2003). Floating catchment
areas are used to estimate accessibility when there are potential
congestion effects, and operate by calculating first the *demand* for
spatially distributed services. The demand (usually the number of people
who require a service) is used to calculate a level of service. In a
second step, the level of service is allocated back to the population.
Demand and level of service are allocated using some form of
distance-decay to embody the geographical principle that, given a
choice, people prefer to travel less than more when reaching
destinations.

More formally, the first step of this method is as follows:

![
L\_j = \\frac{S\_j}{\\sum\_{i=1}^nP\_iw\_{ij}}
](https://latex.codecogs.com/png.latex?%0AL_j%20%3D%20%5Cfrac%7BS_j%7D%7B%5Csum_%7Bi%3D1%7D%5EnP_iw_%7Bij%7D%7D%0A ""
L_j = \frac{S_j}{\sum_{i=1}^nP_iw_{ij}}
"")

where ![S\_j](https://latex.codecogs.com/png.latex?S_j ""S_j"") is the
level of supply at location
![j](https://latex.codecogs.com/png.latex?j ""j""), in simplest terms
whether a service point is present (i.e.,
![S\_j=1](https://latex.codecogs.com/png.latex?S_j%3D1 ""S_j=1"")) or not
(i.e., ![S\_j=0](https://latex.codecogs.com/png.latex?S_j%3D0 ""S_j=0""));
![P\_i](https://latex.codecogs.com/png.latex?P_i ""P_i"") is the
population at location ![i](https://latex.codecogs.com/png.latex?i ""i"")
that demands the service; and
![w\_{ij}](https://latex.codecogs.com/png.latex?w_%7Bij%7D ""w_{ij}"") is
a weight, typically a function of the distance between locations
![i](https://latex.codecogs.com/png.latex?i ""i"") and
![j](https://latex.codecogs.com/png.latex?j ""j"").
![L\_j](https://latex.codecogs.com/png.latex?L_j ""L_j"") is the level of
service at location ![j](https://latex.codecogs.com/png.latex?j ""j"") and
it is the inverse of the number of people that need to be serviced.

The second step in this process is then summing the level of service
that each population unit can reach, according to the distance-decay
weight:

![
A\_i = \\sum\_{j=1}^JL\_jw\_{ji}
](https://latex.codecogs.com/png.latex?%0AA_i%20%3D%20%5Csum_%7Bj%3D1%7D%5EJL_jw_%7Bji%7D%0A ""
A_i = \sum_{j=1}^JL_jw_{ji}
"")

where ![A\_i](https://latex.codecogs.com/png.latex?A_i ""A_i"") is the
accessibility to the service, which is in the same units as the level of
service: as the inverse of the population being serviced. When the
population being serviced is low accessibility is high (i.e., there is
little competition for the service), and viceversa.

Floating catchment area methods are prone to overestimation of the
population and the level of service due to multiple-counting. The
population at ![P\_i](https://latex.codecogs.com/png.latex?P_i ""P_i"") is
allocated to *every* service point
![j](https://latex.codecogs.com/png.latex?j ""j"") for which
![w\_{ij}&gt;0](https://latex.codecogs.com/png.latex?w_%7Bij%7D%3E0 ""w_{ij}>0"").
Similarly, the level of service at
![LOS\_j](https://latex.codecogs.com/png.latex?LOS_j ""LOS_j"") is
allocated to *every* population point for which
![w\_{ji}&gt;0](https://latex.codecogs.com/png.latex?w_%7Bji%7D%3E0 ""w_{ji}>0"").
This inflation effect has been known for several years, and several
modifications have been proposed to mitigate it (e.g., Wan, Zou, and
Sternberg 2012; Delamater 2013). A definitive solution to this issue was
presented by Paez et al. (2019). In order to avoid the multiple-counting
in the summations, the population and the level of service need to be
allocated *proportionally*. This is achieved by standardizing the
weights as follows:

![
w\_{ij}^i = \\frac{w\_{ij}}{\\sum\_{i=1}^nw\_{ij}}
](https://latex.codecogs.com/png.latex?%0Aw_%7Bij%7D%5Ei%20%3D%20%5Cfrac%7Bw_%7Bij%7D%7D%7B%5Csum_%7Bi%3D1%7D%5Enw_%7Bij%7D%7D%0A ""
w_{ij}^i = \frac{w_{ij}}{\sum_{i=1}^nw_{ij}}
"")

and:

![
w\_{ij}^j = \\frac{w\_{ij}}{\\sum\_{j=1}^Jw\_{ij}}
](https://latex.codecogs.com/png.latex?%0Aw_%7Bij%7D%5Ej%20%3D%20%5Cfrac%7Bw_%7Bij%7D%7D%7B%5Csum_%7Bj%3D1%7D%5EJw_%7Bij%7D%7D%0A ""
w_{ij}^j = \frac{w_{ij}}{\sum_{j=1}^Jw_{ij}}
"")

The standardized weights satisfy the following conditions:

![
\\sum\_{i=1}^nw\_{ij}^i=1
](https://latex.codecogs.com/png.latex?%0A%5Csum_%7Bi%3D1%7D%5Enw_%7Bij%7D%5Ei%3D1%0A ""
\sum_{i=1}^nw_{ij}^i=1
"")

and:

![
\\sum\_{j=1}^Jw\_{ij}^j=1
](https://latex.codecogs.com/png.latex?%0A%5Csum_%7Bj%3D1%7D%5EJw_%7Bij%7D%5Ej%3D1%0A ""
\sum_{j=1}^Jw_{ij}^j=1
"")

Since the population is allocated proportionally, its value is
preserved:

![
\\sum\_{i=1}^nP\_iw\_{ij}^i=P\_i
](https://latex.codecogs.com/png.latex?%0A%5Csum_%7Bi%3D1%7D%5EnP_iw_%7Bij%7D%5Ei%3DP_i%0A ""
\sum_{i=1}^nP_iw_{ij}^i=P_i
"")

as is the level of service:

![
\\sum\_{j=1}^JL\_jw\_{ij}^j=L\_j
](https://latex.codecogs.com/png.latex?%0A%5Csum_%7Bj%3D1%7D%5EJL_jw_%7Bij%7D%5Ej%3DL_j%0A ""
\sum_{j=1}^JL_jw_{ij}^j=L_j
"")

## Study Area

With a population of around 540,000, the City of Hamilton is the fourth
largest city in Ontario. It has historically been home to major
manufacturing industries but de-industrialization that has occurred over
the past several decades has led Hamilton to become one of the most
highly divided cities in Ontario, with a significant proportion of its
residents living at or below Canada’s poverty level (DeLuca, Buist, and
Johnston 2012; Jakar and Dunn 2019; Latham and Moffat 2007). The
Hamilton Community Foundation (HCF 2018) reported that based on the
Low-Income Cut-Off, Hamilton recorded a poverty rate of 16.7% in 2016,
which was well above the average rate of Ontario (13.7%) and the average
national rate (12.8%). According to data from Hamilton Food Share (HFS
2019), approximately 23,000 individuals accessed food banks in the city
in March of 2019. Within this total is 9,125 visits by children (minors
up to 18 years old), up from 8,278 the year before. Feed Ontario, the
province’s largest collective of hunger-relief organizations, found that
on a per-capita basis, the level of need in the inner core of central
Hamilton was second highest in Ontario (FO 2019).

Geographically, the “old” City of Hamilton was amalgamated with several
of its surrounding municipalities in 2001, with the city now featuring a
mix of urban, suburban, exurban, and rural areas. Lower-cost housing
proximate to the city’s industrial north end has traditionally attracted
immigrants and less-affluent residents compared to the city’s wealthier
suburbs. However, the decentralization of population from the inner core
has led to challenges in transit connectivity to amenities and services
and the proportion of auto users compared to transit users remains very
high (Behan, Maoh, and Kanaroglou 2008; Topalovic et al. 2012). In
addition, the city is separated geographically by the Niagara
Escarpment. With sections of rocky cliff that approach 100m in height,
the escarpment presents a significant challenge for promoting active
travel and transport connections between “mountain” and “lower city”
neighbourhoods. Taken together, the high level of food need, population
locations, and transportation network characteristics combine to inform
spatial accessibility to food banks and food services in the city.

## Data

Data have been prepared for sharing in the form of an open data product
(see Arribas-Bel et al. 2021) available in a [public
repository](https://github.com/paezha/Accessibility-Food-Banks-Hamilton).
The contents of the data package are described next.

### Statistics Canada

Population and income statistics for 2016 were retrieved at the level of
Dissemination Areas (DAs) using the package `cancensus` (von Bergmann,
Shkolnik, and Jacobs 2021). DAs are the smallest publicly available
census geography in Canada. Income data corresponds to the count of
households by different total income groupings.

### Origins: Residential parcels

We converted all recorded residential land parcels in the City of
Hamilton to points on the road network. Each point includes information
about the number of residential units in the parcel. Next, we define
low-income households as those having a total income of less than
CAD40,000, which is approximately the mid-point of the low income
cut-off (LICOs) for families in Canadian cities with populations greater
than 500,000 in 2016, to match other Census data (Statistics Canada
2020a). We then “populate” each residential unit with the probability of
being a low-income household based on the counts of households by income
groups in the DA in which the parcel is located. While this method
assumes a constant probability of low-income household status for all
residential units in a DA, the parcel-level analysis affords a high
level of spatial disaggregation for the accessibility analysis.

### Destinations: Food Banks and Food Service Locations

The locations of emergency and community food services were obtained
from the Hamilton Public Library’s Food Access Guide (HPL 2021). The
guide was updated in April of 2021 to indicate any change affected on
the services due to the pandemic. This includes modified business hours,
a need to make reservations before frequenting, and locations that have
completely shut down in consequence. Table 1 defines each service type
and the number of locations pre- and during the COVID-19 pandemic. While
some food bank services have a specific target population, such as
prioritizing families with young children aged between 0 and 3 or
accepting only those providing proof of low-income status through
housing and utility statements, all the food services indicated below
are designed to accommodate those in need of food at zero to low cost.
With our focus on food banks and food services that offer free or
low-cost meals at particular locations, we first removed services such
as Meals on Wheels and other food access services such as food box,
community kitchens, student nutrition programs, and shopping and
transportation. With some providers offering different food services at
the same location (e.g. food bank with free and community meal
services), and some of these services closing after the onset of the
COVID-19 pandemic, we opted to geocode based on the service type. On the
other hand, two free meal services held on different days at the same
location were collapsed into a single service point for the
accessibility analysis. Additional details on the operations of
individual facilities is not publicly available and with the changes in
operations it proved unfeasible to collect it. For this reason, the
analysis to follow is of accessibility to the location of food banks and
services, but not to specific services (e.g., breakfasts vs. food
boxes).

<table class=""table"" style=""margin-left: auto; margin-right: auto;"">
<caption>
foodbank and Food Service Information.
</caption>
<thead>
<tr>
<th style=""text-align:center;"">
Type
</th>
<th style=""text-align:center;"">
Description
</th>
<th style=""text-align:center;"">
Locations Pre-COVID
</th>
<th style=""text-align:center;"">
Locations During COVID
</th>
<th style=""text-align:center;"">
Additional Notes
</th>
</tr>
</thead>
<tbody>
<tr>
<td style=""text-align:center;"">
Congregate Dining
</td>
<td style=""text-align:center;width: 15em; "">
Congregate and dining programs provide low-cost meals that are enjoyed
in a community setting. Transportation may be provided
</td>
<td style=""text-align:center;"">
7
</td>
<td style=""text-align:center;"">
2
</td>
<td style=""text-align:center;width: 15em; "">
One remaining location reduced hours during COVID
</td>
</tr>
<tr>
<td style=""text-align:center;"">
Community Meals
</td>
<td style=""text-align:center;width: 15em; "">
No-cost programs often run by volunteers that organize suppers, lunches
or other get-togethers that give community residents an opportunity to
meet one another in a friendly and informal atmosphere while sharing a
meal
</td>
<td style=""text-align:center;"">
11
</td>
<td style=""text-align:center;"">
9
</td>
<td style=""text-align:center;width: 15em; "">
NA
</td>
</tr>
<tr>
<td style=""text-align:center;"">
Food Banks
</td>
<td style=""text-align:center;width: 15em; "">
Food Banks and Emergency Food programs provide individuals and families
with grocery items free of charge
</td>
<td style=""text-align:center;"">
26
</td>
<td style=""text-align:center;"">
25
</td>
<td style=""text-align:center;width: 15em; "">
One remaining location reduced hours during COVID while 4 others moved
to appointment only
</td>
</tr>
<tr>
<td style=""text-align:center;"">
Free Meals
</td>
<td style=""text-align:center;width: 15em; "">
Meals are provided free of charge in the community through volunteer
labour and donations
</td>
<td style=""text-align:center;"">
9
</td>
<td style=""text-align:center;"">
5
</td>
<td style=""text-align:center;width: 15em; "">
One remaining location reduced hours during COVID
</td>
</tr>
<tr>
<td style=""text-align:center;"">
Low-Cost Meals
</td>
<td style=""text-align:center;width: 15em; "">
Restaurants, cafeterias and other eating establishments operated by
hospitals, senior centers or other organizations which provide
reduced-cost meals for low-income people, older adults or other targeted
individuals.
</td>
<td style=""text-align:center;"">
2
</td>
<td style=""text-align:center;"">
1
</td>
<td style=""text-align:center;width: 15em; "">
The remaining location reduced hours during COVID
</td>
</tr>
</tbody>
</table>

### Routing and travel time tables

Travel time tables for three modes (car, transit, walking) were computed
using the parcels as the origins and the locations of the community and
emergency food service locations as the destinations. For routing, the
package `r5r` (Pereira, Saraiva, et al. 2021) was used with a network
extract for the City of Hamilton from OpenStreetMaps and the General
Transit Feed Specification (GTFS) files for the Hamilton Street Railway,
the local transit operator, as well as for Burlington Transit, which
operates some service in the city. For transit routing purposes we used
maximum travel time values of 300 min and a 2,000 m cap on walking
distance: any destination that exceeded these thresholds was ignored.
The departure time used for routing was 8:00AM on March 30, 2021 to
reflect transit service around the morning service peak on a typical
Tuesday.

### Transportation Tomorrow Survey

We used the Data Retrieval System of the Transportation Tomorrow Survey
(TTS) to download cross-tabulations of: 1) primary mode of travel per
trip by income by place of residence; and 2) age by income by place of
residence. These data are from the 2016 Survey (the most recent
available). The data are geocoded at the level of Traffic Analysis Zones
(TAZ) using the most recent zoning system from 2006 and expansion
factors are applied to weight the trips . Each parcel point is populated
with the proportion of trips by three modes of travel: car (as driver or
passenger), transit, and walk.

### Expected Travel Times

Once we obtained travel time tables with population (number of
households) and proportion of trips by mode, we calculated the expected
travel time ![ett](https://latex.codecogs.com/png.latex?ett ""ett"") from
each parcel ![i](https://latex.codecogs.com/png.latex?i ""i"") to a food
bank or food service location
![j](https://latex.codecogs.com/png.latex?j ""j"") as follows:

![
ett\_{ij} = p^c\_i\\cdot tt^c\_{ij} + p^t\_i\\cdot tt^t\_{ij} + p^w\_i\\cdot tt^w\_{ij}
](https://latex.codecogs.com/png.latex?%0Aett_%7Bij%7D%20%3D%20p%5Ec_i%5Ccdot%20tt%5Ec_%7Bij%7D%20%2B%20p%5Et_i%5Ccdot%20tt%5Et_%7Bij%7D%20%2B%20p%5Ew_i%5Ccdot%20tt%5Ew_%7Bij%7D%0A ""
ett_{ij} = p^c_i\cdot tt^c_{ij} + p^t_i\cdot tt^t_{ij} + p^w_i\cdot tt^w_{ij}
"")

where ![p^k\_i](https://latex.codecogs.com/png.latex?p%5Ek_i ""p^k_i"") is
the proportion of trips by mode
![k](https://latex.codecogs.com/png.latex?k ""k"") in the TAZ of parcel
![i](https://latex.codecogs.com/png.latex?i ""i""), and
![tt^k\_{ij}](https://latex.codecogs.com/png.latex?tt%5Ek_%7Bij%7D ""tt^k_{ij}"")
is the travel time from parcel
![i](https://latex.codecogs.com/png.latex?i ""i"") to the food bank. In
other words, the expected travel time reflects the weighted average of
travel times to the food bank, with the weights given by the expected
modal split of trips made by low-income households in the TAZ per the
TTS data.

# Results and Discussion

Figure shows the location of food banks and services in the City of
Hamilton and their status. Before the pandemic there were 58 of which 14
(24.14%) closed during the pandemic. As shown in the figure, food
services tend to be predominantly located in the central parts of the
city. This is not surprising: population density is high there, and it
is also the part of the city where lower income households are more
numerous in absolute and relative terms (see Figure ). Alas, this is
also the part of the city where most of the closures during the pandemic
happened.

<div class=""figure"">

<img src=""README_files/figure-gfm/plot-location-foodbanks-1.png"" alt=""\label{fig:foodbanks}Location of food banks/services and operation status; the dotted box is an inset of the central part of the City of Hamilton"" width=""100%"" />
<p class=""caption"">
Location of food banks/services and operation status; the dotted box is
an inset of the central part of the City of Hamilton
</p>

</div>

<div class=""figure"">

<img src=""README_files/figure-gfm/plot-low-income-households-1.png"" alt=""\label{fig:low-income-households}Number and proportion of households with incomes less than CAD40,000."" width=""100%"" />
<p class=""caption"">
Number and proportion of households with incomes less than CAD40,000.
</p>

</div>

To implement the accessibility calculations, we must select a
distance-decay function. In this task we find limited support in the
literature, which is mostly silent on the travel patterns of people who
visit food banks and community food services. For this reason, we opt
for a simple cumulative opportunities function as follows:

![
w\_{ij}=
\\begin{cases}
1 & \\text{ if } ett\_{ij}\\le \\delta\\\\
0 & \\text{ otherwise}
\\end{cases}
](https://latex.codecogs.com/png.latex?%0Aw_%7Bij%7D%3D%0A%5Cbegin%7Bcases%7D%0A1%20%26%20%5Ctext%7B%20if%20%7D%20ett_%7Bij%7D%5Cle%20%5Cdelta%5C%5C%0A0%20%26%20%5Ctext%7B%20otherwise%7D%0A%5Cend%7Bcases%7D%0A ""
w_{ij}=
\begin{cases}
1 & \text{ if } ett_{ij}\le \delta\\
0 & \text{ otherwise}
\end{cases}
"")

where
![ett\_{ij}](https://latex.codecogs.com/png.latex?ett_%7Bij%7D ""ett_{ij}"")
is the multimodal expected travel time as described previously, and
![\\delta](https://latex.codecogs.com/png.latex?%5Cdelta ""\delta"") is a
travel threshold. When the expected travel time exceeds this threshold,
a facility is no longer considered accessible. Moreover, the weights are
standardized for the balanced floating catchment area approach.

Figure shows the results of conducting a sensitivity analysis of the
system-wide accessibility as we vary the threshold (considering the
situation before the pandemic). There is a clear pattern whereby more
strict values of
![\\delta](https://latex.codecogs.com/png.latex?%5Cdelta ""\delta"") are
associated with higher levels of system-wide accessibility: while
increases in accessibility that result from decreases in the travel time
window might seem counter-intuitive, this is a result of lower
*congestion*, since fewer households are serviced and thus competition
for the same resources is more limited. System-wide accessibility
declines with higher values of
![\\delta](https://latex.codecogs.com/png.latex?%5Cdelta ""\delta""): as
more households are serviced, congestion grows and the level of service
declines, although this happens at a declining rate. We are not aware of
any research that explains how long people are expected to travel for
food banks, but we note that in developing countries, accessible sources
of drinking water are those that can be reached in less than 30 minutes
(round trip, see UNICEF-WHO 2019). There is no reason why people in
affluent countries should be expected to spend more time travelling for
a basic necessity such as food. Accordingly, we adopt a 15-minute
threshold for the analysis (representing a one-way trip). This threshold
is also approximately where the rate of change in accessibility slows
down.

<div class=""figure"">

<img src=""README_files/figure-gfm/plot-results-sensitivity-analysis-1.png"" alt=""\label{fig:sensitivity-analysis}Accessibility as a function of threshold"" width=""60%"" />
<p class=""caption"">
Accessibility as a function of threshold
</p>

</div>

Using the 15-minute threshold, we find that the system-wide
accessibility was 0.078 (food banks/service locations per low income
household in the city) before COVID-19, but declined to 0.048 during the
pandemic. It is striking that although almost 76% of facilities remained
in operation during the pandemic, there was a loss of accessibility
greater than 39%, suggesting the location of emergency and community
food services plays an important role in serving those in need.

Turning to the location of individual facilities, the levels of service
offered before and during the pandemic are shown in Figure . The level
of service is functionally the inverse of the number of low-income
households in the travel-mode weighted travel time catchment area of the
facilities (this is because
![S\_j=1 \\forall j](https://latex.codecogs.com/png.latex?S_j%3D1%20%5Cforall%20j ""S_j=1 \forall j""),
i.e., each location represents a “capacity” of 1). Higher values mean
that a facility is expected to service fewer households. Conversely,
lower values indicate greater congestion.

The general pattern of the levels of service is similar before and
during the pandemic, with lower values in the center of the city where
low-income households exhibit multimodal trip patterns that favour
proximate service locations. Three more peripheral facilities towards
the south of the city have moderate levels of service, presumably
because they are expected to service relatively suburban/exurban
populations generally reliant on automobiles for travel. During the
pandemic, however, the levels of service dropped, in some cases quite
substantially. The pattern of the losses in level of service, moreover,
is not uniform. The upper pane of Figure shows that the peripheral
facilities in the suburban/exurban parts of the city saw major declines
during the pandemic as more urban locations closed and demand increased
for the remaining locations. Further, the inset map shows that the
levels of service also deteriorated in the central part of the city.
However, the loss of level of service was not as large in the core
(where most of the food banks/services are found), but instead was more
marked in the inner ring around the core, where facilities may have
faced greater demand from both central city and suburban populations
after the closure of service locations during the pandemic.

<div class=""figure"">

<img src=""README_files/figure-gfm/plot-levels-of-service-1.png"" alt=""\label{fig:levels-of-service}Levels of service at each facility pre-COVID-19 (top panel) and during COVID-19 (bottom panel)."" width=""100%"" />
<p class=""caption"">
Levels of service at each facility pre-COVID-19 (top panel) and during
COVID-19 (bottom panel).
</p>

</div>

<div class=""figure"">

<img src=""README_files/figure-gfm/plot-levels-of-service-changes-1.png"" alt=""\label{fig:levels-of-service-changes}Changes in levels of service at each facility from pre-COVID-19 to during COVID-19."" width=""100%"" />
<p class=""caption"">
Changes in levels of service at each facility from pre-COVID-19 to
during COVID-19.
</p>

</div>

To further elucidate this issue, we now turn to the results of the
accessibility analysis. As with the level of service of individual
facilities, the general pattern of accessibility before and during the
pandemic is similar. Figure reveals that, compared with the outer rural
zones, the more urban zones of the city generally exhibit higher
accessibility to food banks and food service locations. However, the
pattern is not particularly smooth - this is largely attributable to the
weighting of travel times by mode of transportation according to the
trip patterns of low-income household respondents captured by the TTS.
For example, in zones where low-income households make a high proportion
of trips by walking, access to food bank locations by walking is
afforded a concomitantly high weight in our calculations of travel time
compared to transit or car travel. From this, highly-accessible
locations result from a mix of characteristics: low-income households in
locations where travel options that align with zonal modal split are
available to connect them to food bank locations with high levels of
service within 15 minutes. This seems to track with the experience of
some users of these services, as reported by Smith-Carrier et al.
(2017).

<div class=""figure"" style=""text-align: center"">

<img src=""README_files/figure-gfm/plot-accessibility-1.png"" alt=""\label{fig:accessibility}Accessibility by traffic analysis zone pre-COVID-19 (top panel) and during COVID-19 (bottom panel)."" width=""100%"" />
<p class=""caption"">
Accessibility by traffic analysis zone pre-COVID-19 (top panel) and
during COVID-19 (bottom panel).
</p>

</div>

We find that the accessibility landscape deteriorated substantially
during the pandemic, with accessibility dropping on average by almost
38%, but with large variations: some zones experienced changes in
accessibility of only about 8%, whereas the most affected zone saw a
loss of accessibility of almost 96%. Figure shows the changes in
accessibility. Every zone is worse off after the closure of facilities
during the pandemic, but some parts of the city seem to have been
particularly affected. To better highlight these changes, we used a
local indicator of spatial autocorrelation (Anselin 1995) to explore the
pattern of change in accessibility. Twenty-four TAZs are flagged as
having significantly large losses of accessibility (at
![p\\le 0.10](https://latex.codecogs.com/png.latex?p%5Cle%200.10 ""p\le 0.10""),
without correcting for multiple comparisons). Those zones are
highlighted in the figure, where it can be seen that they form more or
less compact neighborhoods. Remarkably, the largest significant drops in
accessibility are not downtown, but located in two cases in the
industrial north of the city, in one case in an inner suburb above the
escarpment, and lastly in a more suburban/exurban region in the
south-west.

<div class=""figure"" style=""text-align: center"">

<img src=""README_files/figure-gfm/plot-accessibility-changes-1.png"" alt=""\label{fig:accessibility-changes}Changes in accessibility from pre-COVID-19 to during COVID-19."" width=""100%"" />
<p class=""caption"">
Changes in accessibility from pre-COVID-19 to during COVID-19.
</p>

</div>

<div class=""figure"">

<img src=""README_files/figure-gfm/plot-local-i-1.png"" alt=""\label{fig:accessibility-changes-with-local-i}Changes in accessibility from pre-COVID-19 to during COVID-19. Highlighted areas had significantly large changes in accessibility according to Local Moran's I."" width=""100%"" />
<p class=""caption"">
Changes in accessibility from pre-COVID-19 to during COVID-19.
Highlighted areas had significantly large changes in accessibility
according to Local Moran’s I.
</p>

</div>

For the more suburban clusters of zones, the decrease in accessibility
is derived from the closure of locations throughout the city reachable
by car. In the cluster of central suburban zones for example, low-income
households in the outer ring of zones that exhibit medium to high
decreases in accessibility within this cluster appear to be largely
auto-dependent in their tripmaking, which each each exhibiting between
85-100% of their modal split for car trips. This results in the parcels
within these zones having a large number of potentially accessible
locations in the travel time matrix. But by extension, the change in
accessibility over the pre- and during-COVID-19 time periods is affected
not only by the closure of service locations proximate to the zones, but
also the locations in the central city. The zone with the greatest
decrease in accessibility within this cluster (-0.0009) has a high rate
of car trips and connects to the most facility locations in total as
well as those that stayed open or closed.

In the cluster to the south-west, the decrease in accessibility is
predominately driven by the closure of a high level-of-service Community
Meals provider. However, like the more central suburban zones,
low-income households within this cluster are also between 90% to 100%
auto-dependent in their trip-making in the TTS. The story is similar for
the zone located in the north-west that exhibits the greatest decrease
in accessibility. Here, low-income households responding to the TTS
conducted 100% of their trips by car and, as a result, dwellings within
this zone have access to the second-highest number of food bank and
service locations within 15 minutes. However, this also means zonal
accessibilities are greatly affected by the number of closures
throughout the city. Finally, in the city’s north end and north-east
zones, low-income households exhibit a mixture of tripmaking behaviour
in the TTS. Households in some zones take transit more often and one
zone in particular has 100% of its trips by walking. For these zones,
the decrease in accessibility tends to be a product of the closure of
several inner-city food bank and service locations reachable by multiple
modes.

Just as the effects of the closures appear to have been uneven in space,
they also seem to have had different impacts on various population
segments. Using data on low income individuals by age drawn from the
TTS, Table shows the estimated number of people in each age group by
their level of accessibility before and during the pandemic. Here, it is
important to note that the quartiles are relative: people in the top 25%
of accessibility still have lower accessibility during the pandemic than
before. In reality, every population group is worse off during the
pandemic in terms of their accessibility to food banks and services in
the City of Hamilton. However, some age groups were affected more. In
terms of changes within the quartiles, the largest change for adults
appears to be those moving from the first to the second quartile of
accessibility during the pandemic. The story is generally similar for
seniors, a greater number of whom are now in the second and third
quartiles due to seniors facing a worse accessibility situation. Among
those aged 18 and less, the largest change is in the number of children
who were in the first and third quartiles before the pandemic and found
themselves in the second accessibility class during the pandemic.
However, when we compare the total population serviced before and during
the pandemic, we see that a large number of children, adults, and
seniors were no longer in the catchment areas of service locations (last
row of Table ). This accounts for the loss of population in the fourth
quartiles for the different age groups during the pandemic. It is
remarkable that despite the loss of population serviced, accessibility
still declined for those still within the catchment regions of these
services.

These results suggest that, through a combination of the typical modes
of transportation of lower income households and the spatial
distribution of the population, the closure of emergency and communal
food locations had a differential impact that more greatly affected the
youngest and oldest among the population in low income households.

<table class=""table"" style=""margin-left: auto; margin-right: auto;border-bottom: 0;"">
<caption>
Population at each accessibility level by age group among members
households with incomes less than CAD40,000.
</caption>
<thead>
<tr>
<th style=""empty-cells: hide;border-bottom:hidden;"" colspan=""1"">
</th>
<th style=""border-bottom:hidden;padding-bottom:0; padding-left:3px;padding-right:3px;text-align: center; "" colspan=""3"">

<div style=""border-bottom: 1px solid #ddd; padding-bottom: 5px; "">

Pre-COVID-19

</div>

</th>
<th style=""border-bottom:hidden;padding-bottom:0; padding-left:3px;padding-right:3px;text-align: center; "" colspan=""3"">

<div style=""border-bottom: 1px solid #ddd; padding-bottom: 5px; "">

During COVID-19

</div>

</th>
</tr>
<tr>
<th style=""text-align:left;"">
Accessibility Quartile
</th>
<th style=""text-align:center;"">
Children (age ![\\le](https://latex.codecogs.com/png.latex?%5Cle ""\le"")
18)
</th>
<th style=""text-align:center;"">
Adults (19-64)
</th>
<th style=""text-align:center;"">
Seniors (age ![\\ge](https://latex.codecogs.com/png.latex?%5Cge ""\ge"")
65)
</th>
<th style=""text-align:center;"">
Children (age ![\\le](https://latex.codecogs.com/png.latex?%5Cle ""\le"")
18)
</th>
<th style=""text-align:center;"">
Adults (19-64)
</th>
<th style=""text-align:center;"">
Seniors (age ![\\ge](https://latex.codecogs.com/png.latex?%5Cge ""\ge"")
65)
</th>
</tr>
</thead>
<tbody>
<tr>
<td style=""text-align:left;"">
Top 25%
</td>
<td style=""text-align:center;"">
2,048
</td>
<td style=""text-align:center;"">
7,031
</td>
<td style=""text-align:center;"">
3,632
</td>
<td style=""text-align:center;"">
1,956 (-4.49%)
</td>
<td style=""text-align:center;"">
6,138 (-12.7%)
</td>
<td style=""text-align:center;"">
3,338 (-8.09%)
</td>
</tr>
<tr>
<td style=""text-align:left;"">
Second 25%
</td>
<td style=""text-align:center;"">
2,190
</td>
<td style=""text-align:center;"">
9,631
</td>
<td style=""text-align:center;"">
5,023
</td>
<td style=""text-align:center;"">
2,365 (7.99%)
</td>
<td style=""text-align:center;"">
10,833 (12.48%)
</td>
<td style=""text-align:center;"">
5,400 (7.51%)
</td>
</tr>
<tr>
<td style=""text-align:left;"">
Third 25%
</td>
<td style=""text-align:center;"">
3,239
</td>
<td style=""text-align:center;"">
12,694
</td>
<td style=""text-align:center;"">
6,875
</td>
<td style=""text-align:center;"">
3,082 (-4.85%)
</td>
<td style=""text-align:center;"">
12,612 (-0.65%)
</td>
<td style=""text-align:center;"">
7,064 (2.75%)
</td>
</tr>
<tr>
<td style=""text-align:left;"">
Bottom 25%
</td>
<td style=""text-align:center;"">
3,711
</td>
<td style=""text-align:center;"">
13,220
</td>
<td style=""text-align:center;"">
7,648
</td>
<td style=""text-align:center;"">
3,038 (-18.14%)
</td>
<td style=""text-align:center;"">
11,811 (-10.66%)
</td>
<td style=""text-align:center;"">
6,308 (-17.52%)
</td>
</tr>
<tr>
<td style=""text-align:left;"">
Total population
</td>
<td style=""text-align:center;"">
11,189
</td>
<td style=""text-align:center;"">
42,576
</td>
<td style=""text-align:center;"">
23,178
</td>
<td style=""text-align:center;"">
10,441 (-6.69%)
</td>
<td style=""text-align:center;"">
41,395 (-2.77%)
</td>
<td style=""text-align:center;"">
22,110 (-4.61%)
</td>
</tr>
</tbody>
<tfoot>
<tr>
<td style=""padding: 0; "" colspan=""100%"">
<span style=""font-style: italic;"">Note: </span>
</td>
</tr>
<tr>
<td style=""padding: 0; "" colspan=""100%"">
<sup></sup> Population values have been rounded.
</td>
</tr>
<tr>
<td style=""padding: 0; "" colspan=""100%"">
<sup></sup> The values in brackets for population during COVID-19 are
the changes from before the pandemic.
</td>
</tr>
</tfoot>
</table>

# Conclusions

Food insecurity is a significant issue for many Canadian households and
while emergency and community food services can provide some relief, the
COVID-19 pandemic has in all probability increased food insecurity for
many households. To compound matters, the pandemic has also resulted in
major disruptions, including to employment, mobility alternatives, and
to emergency and community food services. In response, this research has
sought to better understand accessibility to food banks and food service
locations, as well as how the closure of some locations over the pre-
and during-COVID time periods affected the potential for low-income
households to reach these amenities.

Previous work has noted the important role of geography alongside other
socio-economic and demographic indicators in household access to healthy
food. The present papers is, to the best of our knowledge, among the
first studies to focus on the geographic component of accessibility to
emergency food services (Allen and Farber 2021). Using the balanced
floating catchment area method to account for population demand and
congestion effects at service points, we estimated multi-modal
accessibility to emergency and community food service locations for
low-income households. The weighting of travel time estimates by the
modal split in different zonal geographies tailors the results to
patterns of travel behaviour captured in the regional travel survey.
Moreover, our parcel-level analysis presents a disaggregate approach to
estimating accessibility based on the locations of residential parcels
and dwellings. Beyond accounting for the inflation of demand that occurs
in traditional floating catchment area methods, our application of the
balanced floating catchment area approach offers a novel analysis of
accessibility to emergency and community food services that is sensitive
to the locations of low-income households, information on their age
distributions and typical trip-making behaviour, the locations of
services, their operations over time, and the characteristics of the
city’s multi-modal transportation network.

Our results show that while accessibility levels were lower in the
city’s more car-oriented suburban and rural areas to begin with, the
closure of 14% of the city’s emergency and community food service
locations during the pandemic resulted in an overall decrease in
accessibility across the city. However, these effects were not uniform
over space or for different population groups. Since the balanced
floating catchment area method takes into account changes in demand and
congestion for service providers, the closure of some services
reverberates throughout the catchment areas of the whole city. For some
suburban zones, the closure of a relatively high level-of-service
location results in the remaining services being spread over a larger
population. In others, high auto dependence for trips leads to decreases
in accessibility that accumulate due to the loss of several locations
initially reachable within 15 minutes by car. Reductions in
accessibility in the city’s more urban north end, where low-income
households conduct higher proportions of trips by transit and walking,
emphasize the importance of geographic proximity in the potential to
reach service locations for these residents. Beyond geography, the
results also highlight the differential impact of closures during
COVID-19 on population groups, with seniors and children being the two
most impacted groups.

It is important to note that the degree to which our low-income cut-off
of CAD$40,000 reflects food insecurity in the different zones of the
study area is not known. We also consider all emergency and community
food service locations equally. Information on differential capacities
at food provider locations is currently not collected, and given the
closure of facilities was not possible to obtain. Data on services, such
as the number of meals served, could be used to refine the analysis in
the future. Moreover, while the travel survey allows us to model
multi-modal accessibilities that align with travel behaviour observed in
the travel survey and capture differences in accessibility by age
categories, the use of travel survey data for modelling food insecurity
also has its limitations. Research into the population weighting methods
used in the TTS note that the survey may under-count the lowest- and
highest-income households in the survey study region, although the
magnitude of this under-counting is unknown, and approximately 20% of
respondents to the 2016 survey did not report their income (Rose 2018).
In that regard, the modal splits of low-income households observed
through the TTS data may not accurately reflect the travel behaviours of
food insecure populations, and our estimates might in fact be somewhat
conservative if those households who do not report income rely more on
walking and/or transit for their mobility needs.

In the absence of information regarding how food insecure households
travel to food banks and related services, we examined accessibility to
food banks using a 15 minutes (one-way) travel time threshold. The fact
that we must rely on a standard created for accessible drinking water in
the developing world only serves to highlight the tragedy of food
insecurity in an affluent country like Canada. More broadly, it points
to the absurd need to understand how a bad situation was made worse by
the pandemic: in effect, the analysis reveals that disparities in the
need for emergency and community food services predated the pandemic,
that the pandemic contributed to the deterioration of these services,
and that populations already in distress, particularly children, ended
up in an even more adverse state. How much worse, it is impossible to
say, mainly because there is also a dearth of information, let alone
standards, regarding *acceptable* or *sufficient* level of service when
it comes to emergency food services.

While on the one hand this work suggests that inequities in the
accessibility to emergency and community food services could be improved
through accessibility standards that promote changes in the geographic
distribution of service locations and transportation network
characteristics, in fact, we would argue that the standard should be
that no household faced food insecurity. As others have noted (e.g.,
Poppendieck 1999; Men and Tarasuk 2021) the root of food insecurity is
income poverty and unless it is eliminated, there will continue to be a
place for emergency food and community food services. In addition to
providing food, these services satisfy social needs by offering a social
setting for seniors or by helping to connect households in need with
longer term supports. From a food security perspective, on the other
hand, these services should work only as a short term solution, and not
as a semi-permanent feature of life for some of our fellow human beings.
From a human rights perspective, long-term reliance on emergency food
services should be as unacceptable in Canada as lack of clean drinking
water within 30 minutes is elsewhere. Thus, while our analysis is
valuable to map the suffering caused by food insecurity, from a policy
perspective, maintaining a robust social safety net that includes
Employment Insurance and paid sick days are better tools to reduce this
suffering than increasing the accessibility of emergency food services
for food insecure populations.

# References

<div id=""refs"" class=""references csl-bib-body hanging-indent"">

<div id=""ref-foodpolicy2019"" class=""csl-entry"">

Agriculture, and Agri-Food Canada. 2019. “Food Policy for Canada.”
Government of Canada.
<https://agriculture.canada.ca/sites/default/files/legacy/pack/pdf/fpc_20190614-en.pdf>.

</div>

<div id=""ref-allen2021Changes"" class=""csl-entry"">

Allen, Jeff, and Steven Farber. 2021. “Changes in Transit Accessibility
to Food Banks in Toronto During COVID-19.” *Findings*, May.
<https://doi.org/10.32866/001c.24072>.

</div>

<div id=""ref-anselin1995local"" class=""csl-entry"">

Anselin, Luc. 1995. “Local Indicators of Spatial Association - LISA.”
Journal Article. *Geographical Analysis* 27: 93–115.

</div>

<div id=""ref-arribas2021open"" class=""csl-entry"">

Arribas-Bel, Daniel, Mark Green, Francisco Rowe, and Alex Singleton.
2021. “Open Data Products: A Framework for Creating Valuable
Analysis-Ready Data.” *Journal of Geographical Systems*.
<https://doi.org/10.1007/s10109-021-00361-7>.

</div>

<div id=""ref-bazerghi2016role"" class=""csl-entry"">

Bazerghi, Chantelle, Fiona H McKay, and Matthew Dunn. 2016. “The Role of
Food Banks in Addressing Food Insecurity: A Systematic Review.” Journal
Article. *Journal of Community Health* 41 (4): 732–40.

</div>

<div id=""ref-behan2008smart"" class=""csl-entry"">

Behan, Kevin, Hanna Maoh, and Pavlos Kanaroglou. 2008. “Smart Growth
Strategies, Transportation and Urban Sprawl: Simulated Futures for
Hamilton, Ontario.” *The Canadian Geographer/Le Géographe Canadien* 52
(3): 291–308.
https://doi.org/<https://doi.org/10.1111/j.1541-0064.2008.00214.x>.

</div>

<div id=""ref-bhattacharya2004poverty"" class=""csl-entry"">

Bhattacharya, Jayanta, Janet Currie, and Steven Haider. 2004. “Poverty,
Food Insecurity, and Nutritional Outcomes in Children and Adults.”
*Journal of Health Economics* 23 (4): 839–62.
https://doi.org/<https://doi.org/10.1016/j.jhealeco.2003.12.008>.

</div>

<div id=""ref-black2020examining"" class=""csl-entry"">

Black, Jennifer L, and Darlene Seto. 2020. “Examining Patterns of Food
Bank Use over Twenty-Five Years in Vancouver, Canada.” Journal Article.
*VOLUNTAS: International Journal of Voluntary and Nonprofit
Organizations* 31: 853–69.
https://doi.org/<https://doi.org/10.1007/s11266-018-0039-2>.

</div>

<div id=""ref-boucher2017ontario"" class=""csl-entry"">

Boucher, Beatrice A., Elizabeth Manafò, Meaghan R. Boddy, Lynn Roblin,
and Rebecca Truscott. 2017. “The Ontario Food and Nutrition Strategy:
Identifying Indicators of Food Access and Food Literacy for Early
Monitoring of the Food Environment.” Journal Article. *Health Promotion
and Chronic Disease Prevention in Canada : Research, Policy and
Practice* 37 (9): 313–19. <https://doi.org/10.24095/hpcdp.37.9.06>.

</div>

<div id=""ref-brunsdon2020opening"" class=""csl-entry"">

Brunsdon, Chris, and Alexis Comber. 2020. “Opening Practice: Supporting
Reproducibility and Critical Spatial Data Science.” *Journal of
Geographical Systems*, 1–20.
<https://doi.org/10.1007/s10109-020-00334-2>.

</div>

<div id=""ref-dbfb2020"" class=""csl-entry"">

DBFB. 2020. “Who’s Hungry 2020.” Daily Bread Food Bank.
<https://www.dailybread.ca/wp-content/uploads/2020/11/Whos-Hungry-Report-2020.pdf>.

</div>

<div id=""ref-delamater2013spatial"" class=""csl-entry"">

Delamater, P. L. 2013. “Spatial Accessibility in Suboptimally Configured
Health Care Systems: A Modified Two-Step Floating Catchment Area
(M2sfca) Metric.” Journal Article. *Health & Place* 24: 30–43.
https://doi.org/<https://doi.org/10.1016/j.healthplace.2013.07.012>.

</div>

<div id=""ref-deluca2012code"" class=""csl-entry"">

DeLuca, Patrick F, Steve Buist, and Neil Johnston. 2012. “The Code Red
Project: Engaging Communities in Health System Change in Hamilton,
Canada.” *Social Indicators Research* 108 (2): 317–27.
https://doi.org/<https://doi.org/10.1007/s11205-012-0068-y>.

</div>

<div id=""ref-deweese2020tale"" class=""csl-entry"">

DeWeese, James, Leila Hawa, Hanna Demyk, Zane Davey, Anastasia Belikow,
and Ahmed El-geneidy. 2020. “A Tale of 40 Cities: A Preliminary Analysis
of Equity Impacts of COVID-19 Service Adjustments Across North America.”
*Findings*, June. <https://doi.org/10.32866/001c.13395>.

</div>

<div id=""ref-elgar2021relative"" class=""csl-entry"">

Elgar, Frank J, William Pickett, Timo-Kolja Pförtner, Geneviève Gariépy,
David Gordon, Kathy Georgiades, Colleen Davison, et al. 2021. “Relative
Food Insecurity, Mental Health and Wellbeing in 160 Countries.” *Social
Science & Medicine* 268: 113556.
https://doi.org/<https://doi.org/10.1016/j.socscimed.2020.113556>.

</div>

<div id=""ref-enns2020experiences"" class=""csl-entry"">

Enns, Aganeta, Anita Rizvi, Stéphanie Quinn, and Elizabeth Kristjansson.
2020. “Experiences of Food Bank Access and Food Insecurity in Ottawa,
Canada.” *Journal of Hunger & Environmental Nutrition* 15 (4): 456–72.
https://doi.org/<https://doi.org/10.1080/19320248.2020.1761502>.

</div>

<div id=""ref-fbc2018"" class=""csl-entry"">

FBC. 2018. “HungerCount 2018.” Food Banks Canada.
<https://foodbankscanada.ca/getmedia/241fb659-05f5-44a2-9cef-56f5f51db523/HungerCount-2018_FINAL_EN.pdf.aspx?ext=.pdf>.

</div>

<div id=""ref-fbc2020"" class=""csl-entry"">

———. 2020. “A Snapshot of Food Banks in Canada and the COVID-19 Crisis.”
Food Banks Canada.
<https://www.foodbankscanada.ca/FoodBanks/MediaLibrary/COVID-Report_2020/A-Snapshot-of-Food-Banks-in-Canada-and-the-COVID-19-Crisis_EN.pdf>.

</div>

<div id=""ref-feedontario2019"" class=""csl-entry"">

FO. 2019. “Report: Hunger Map.” Feed Ontario.
<https://feedontario.ca/research/report-hunger-map/>.

</div>

<div id=""ref-ghorbanzadeh2021spatial"" class=""csl-entry"">

Ghorbanzadeh, Mahyar, Kyusik Kim, Eren Erman Ozguven, and Mark W.
Horner. 2021. “Spatial Accessibility Assessment of COVID-19 Patients to
Healthcare Facilities: A Case Study of Florida.” Journal Article.
*Travel Behaviour and Society* 24: 95–101.
https://doi.org/<https://doi.org/10.1016/j.tbs.2021.03.004>.

</div>

<div id=""ref-gundersen2018food"" class=""csl-entry"">

Gundersen, Craig, Valerie Tarasuk, Joyce Cheng, Claire De Oliveira, and
Paul Kurdyak. 2018. “Food Insecurity Status and Mortality Among Adults
in Ontario, Canada.” Journal Article. *PloS One* 13 (8): e0202642.

</div>

<div id=""ref-hcf2018"" class=""csl-entry"">

HCF. 2018. “Vital Signs: A Reflection of Hamilton.” Hamilton Community
Foundation.
<https://hamiltoncommunityfoundation.ca/vs2018/low-income-2018/>.

</div>

<div id=""ref-hfs2019"" class=""csl-entry"">

HFS. 2019. “Hamilton Hunger Report 2019.” Hamilton Food Share.
<https://www.hamiltonfoodshare.org/wp-content/uploads/Hamilton-Food-Share-Hunger-Report-2019.pdf>.

</div>

<div id=""ref-holmes2018nothing"" class=""csl-entry"">

Holmes, Eleanor, Jennifer L Black, Amber Heckelman, Scott A Lear,
Darlene Seto, Adeleke Fowokan, and Hannah Wittman. 2018. “‘Nothing Is
Going to Change Three Months from Now’: A Mixed Methods Characterization
of Food Bank Use in Greater Vancouver.” *Social Science & Medicine* 200:
129–36.
https://doi.org/<https://doi.org/10.1016/j.socscimed.2018.01.029>.

</div>

<div id=""ref-hpl2021"" class=""csl-entry"">

HPL. 2021. “Food Access Guide.” Hamilton Public Library.
<http://foodaccessguide.ca/sites/default/files/partnersites/pdf/foodaccessguide.pdf>.

</div>

<div id=""ref-jakar2019turning"" class=""csl-entry"">

Jakar, Gidon S, and James R Dunn. 2019. “(Turning Rust into Gold?)
Hamilton, Ontario and a Canadian Perspective of Shrinking and Declining
Cities.” *Cities* 94: 1–10.
https://doi.org/<https://doi.org/10.1016/j.cities.2019.05.016>.

</div>

<div id=""ref-jones2017food"" class=""csl-entry"">

Jones, Andrew D. 2017. “Food Insecurity and Mental Health Status: A
Global Analysis of 149 Countries.” *American Journal of Preventive
Medicine* 53 (2): 264–73.
https://doi.org/<https://doi.org/10.1016/j.amepre.2017.04.008>.

</div>

<div id=""ref-kirkpatrick2008food"" class=""csl-entry"">

Kirkpatrick, Sharon I, and Valerie Tarasuk. 2008. “Food Insecurity Is
Associated with Nutrient Inadequacies Among Canadian Adults and
Adolescents.” *The Journal of Nutrition* 138 (3): 604–12.
https://doi.org/<https://doi.org/10.1093/jn/138.7.1399>.

</div>

<div id=""ref-laborde2020poverty"" class=""csl-entry"">

Laborde, David, William Martin, and Rob Vos. 2020. “Poverty and Food
Insecurity Could Grow Dramatically as COVID-19 Spreads.” Journal
Article. *International Food Policy Research Institute (IFPRI),
Washington, DC*.

</div>

<div id=""ref-latham2007determinants"" class=""csl-entry"">

Latham, Jim, and Tina Moffat. 2007. “Determinants of Variation in Food
Cost and Availability in Two Socioeconomically Contrasting
Neighbourhoods of Hamilton, Ontario, Canada.” Journal Article. *Health &
Place* 13 (1): 273–87.
https://doi.org/<https://doi.org/10.1016/j.healthplace.2006.01.006>.

</div>

<div id=""ref-loopstra2012relationship"" class=""csl-entry"">

Loopstra, Rachel, and Valerie Tarasuk. 2012. “The Relationship Between
Food Banks and Household Food Insecurity Among Low-Income Toronto
Families.” Journal Article. *Canadian Public Policy* 38 (4): 497–514.
<https://doi.org/10.3138/cpp.38.4.497>.

</div>

<div id=""ref-lovelace2021open"" class=""csl-entry"">

Lovelace, Robin. 2021. “Open Source Tools for Geographic Analysis in
Transport Planning.” Journal Article. *Journal of Geographical Systems*.
<https://doi.org/10.1007/s10109-020-00342-2>.

</div>

<div id=""ref-luo2003measures"" class=""csl-entry"">

Luo, W., and F. H. Wang. 2003. “Measures of Spatial Accessibility to
Health Care in a GIS Environment: Synthesis and a Case Study in the
Chicago Region.” Journal Article. *Environment and Planning B-Planning &
Design* 30 (6): 865–84. [ISI:000187989500005
C:/Papers/Environment and Planning B/EPB (2003) 30 (6) 865-885.pdf](https://ISI:000187989500005
C:/Papers/Environment and Planning B/EPB (2003) 30 (6) 865-885.pdf).

</div>

<div id=""ref-mckay2021exploring"" class=""csl-entry"">

McKay, Fiona H., Amber Bastian, and Rebecca Lindberg. 2021. “Exploring
the Response of the Victorian Emergency and Community Food Sector to the
COVID-19 Pandemic.” Journal Article. *Journal of Hunger & Environmental
Nutrition*, 1–15. <https://doi.org/10.1080/19320248.2021.1900974>.

</div>

<div id=""ref-men2021food"" class=""csl-entry"">

Men, Fei, and Valarie Tarasuk. 2021. “Food Insecurity Amid the COVID-19
Pandemic: Food Charity, Government Assistance and Employment.” Journal
Article. *Canadian Public Policy* COVID-19: e2021001.
<https://doi.org/10.3138/cpp.2021-001>.

</div>

<div id=""ref-oemichen2016investigation"" class=""csl-entry"">

Oemichen, Megan, and Chery Smith. 2016. “Investigation of the Food
Choice, Promoters and Barriers to Food Access Issues, and Food
Insecurity Among Low-Income, Free-Living Minnesotan Seniors.” *Journal
of Nutrition Education and Behavior* 48 (6): 397–404.

</div>

<div id=""ref-olson1999nutrition"" class=""csl-entry"">

Olson, Christine M. 1999. “Nutrition and Health Outcomes Associated with
Food Insecurity and Hunger.” *The Journal of Nutrition* 129 (2):
521S–524S. https://doi.org/<https://doi.org/10.1093/jn/129.2.521S>.

</div>

<div id=""ref-paez2010relative"" class=""csl-entry"">

Paez, A., R. G. Mercado, S. Farber, C. Morency, and M. Roorda. 2010.
“Relative Accessibility Deprivation Indicators for Urban Settings:
Definitions and Application to Food Deserts in Montreal.” Journal
Article. *Urban Studies* 47 (7): 1415–38.
<https://doi.org/10.1177/0042098009353626>.

</div>

<div id=""ref-paez2019demand"" class=""csl-entry"">

Paez, Antonio, Christopher D. Higgins, and Salvatore F. Vivona. 2019.
“Demand and Level of Service Inflation in Floating Catchment Area (FCA)
Methods.” Journal Article. *PloS One* 14 (6): e0218773.
<https://doi.org/10.1371/journal.pone.0218773>.

</div>

<div id=""ref-paez2012measuring"" class=""csl-entry"">

Páez, Antonio, Darren M Scott, and Catherine Morency. 2012. “Measuring
Accessibility: Positive and Normative Implementations of Various
Accessibility Indicators.” *Journal of Transport Geography* 25: 141–53.
https://doi.org/<https://doi.org/10.1016/j.jtrangeo.2012.03.016>.

</div>

<div id=""ref-pereira2021geographic"" class=""csl-entry"">

Pereira, Rafael H. M., Carlos Kauê Vieira Braga, Luciana Mendes Servo,
Bernardo Serra, Pedro Amaral, Nelson Gouveia, and Antonio Paez. 2021.
“Geographic Access to COVID-19 Healthcare in Brazil Using a Balanced
Float Catchment Area Approach.” Journal Article. *Social Science &
Medicine* 273: 113773.
https://doi.org/<https://doi.org/10.1016/j.socscimed.2021.113773>.

</div>

<div id=""ref-pereira2021r5r"" class=""csl-entry"">

Pereira, Rafael H. M., Marcus Saraiva, Daniel Herszenhut, Carlos Kaue
Vieira Braga, and Matthew Wigginton Conway. 2021. “R5r: Rapid Realistic
Routing on Multimodal Transport Networks with r<sup>5</sup> in r.”
*Findings*, March. <https://doi.org/10.32866/001c.21262>.

</div>

<div id=""ref-poppendieck1999sweet"" class=""csl-entry"">

Poppendieck, Janet. 1999. *Sweet Charity?: Emergency Food and the End of
Entitlement*. Penguin.

</div>

<div id=""ref-radke2000spatial"" class=""csl-entry"">

Radke, J., and L. Mu. 2000. “Spatial Decomposition, Modeling and Mapping
Service Regions to Predict Access to Social Programs.” Journal Article.
*Annals of Geographic Information Sciences* 6 (2): 105–12.

</div>

<div id=""ref-ramsey2011food"" class=""csl-entry"">

Ramsey, Rebecca, Katrina Giskes, Gavin Turrell, and Danielle Gallegos.
2011. “Food Insecurity Among Australian Children: Potential
Determinants, Health and Developmental Consequences.” *Journal of Child
Health Care* 15 (4): 401–16.
https://doi.org/<https://doi.org/10.1177%2F1367493511423854>.

</div>

<div id=""ref-riches2002food"" class=""csl-entry"">

Riches, Graham. 2002. “Food Banks and Food Security: Welfare Reform,
Human Rights and Social Policy. Lessons from Canada?” *Social Policy &
Administration* 36 (6): 648–63.

</div>

<div id=""ref-rose2018transportation"" class=""csl-entry"">

Rose, Andreas. 2018. “Transportation Tomorrow Survey 2016: Data
Expansion and Validation.” *Data Management Group, Department of Civil
Engineering, University of Toronty, Malatest & Associates*.

</div>

<div id=""ref-seligman2010food"" class=""csl-entry"">

Seligman, Hilary K, Barbara A Laraia, and Margot B Kushel. 2010. “Food
Insecurity Is Associated with Chronic Disease Among Low-Income NHANES
Participants.” *The Journal of Nutrition* 140 (2): 304–10.

</div>

<div id=""ref-smith2017food"" class=""csl-entry"">

Smith-Carrier, Tracy, Karen Ross, Jennifer Kirkham, and Barbara Decker
Pierce. 2017. “‘Food Is a Right… Nobody Should Be Starving on Our
Streets’: Perceptions of Food Bank Usage in a Mid-Sized City in Ontario,
Canada.” *Journal of Human Rights Practice* 9 (1): 29–49.

</div>

<div id=""ref-statisticscanada2020licos"" class=""csl-entry"">

Statistics Canada. 2020a. “Table 11-10-0241-01 Low Income Cut-Offs
(LICOs) Before and After Tax by Community Size and Family Size, in
Current Dollars.”
https://doi.org/<https://doi.org/10.25318/1110024101-eng>.

</div>

<div id=""ref-statisticscanada2020food"" class=""csl-entry"">

———. 2020b. “Food Insecurity During the COVID-19 Pandemic.” Catalogue
no. 45280001.
<https://www150.statcan.gc.ca/n1/pub/45-28-0001/2020001/article/00039-eng.htm>.

</div>

<div id=""ref-stuff2004household"" class=""csl-entry"">

Stuff, Janice E, Patrick H Casey, Kitty L Szeto, Jeffrey M Gossett,
James M Robbins, Pippa M Simpson, Carol Connell, and Margaret L Bogle.
2004. “Household Food Insecurity Is Associated with Adult Health
Status.” *The Journal of Nutrition* 134 (9): 2330–35.
[https://doi.org/Oxford University Press](https://doi.org/Oxford University Press).

</div>

<div id=""ref-tarasuk2014food"" class=""csl-entry"">

Tarasuk, Valerie, Naomi Dachner, and Rachel Loopstra. 2014. “Food Banks,
Welfare, and Food Insecurity in Canada.” Journal Article. *British Food
Journal*.

</div>

<div id=""ref-tarasuk2020relationship"" class=""csl-entry"">

Tarasuk, Valerie, Andrée-Anne Fafard St-Germain, and Rachel Loopstra.
2020. “The Relationship Between Food Banks and Food Insecurity: Insights
from Canada.” Journal Article. *VOLUNTAS: International Journal of
Voluntary and Nonprofit Organizations* 31 (5): 841–52.
<https://doi.org/10.1007/s11266-019-00092-w>.

</div>

<div id=""ref-tarasuk2019geographic"" class=""csl-entry"">

Tarasuk, Valerie, Andrée-Anne Fafard St-Germain, and Andrew Mitchell.
2019. “Geographic and Socio-Demographic Predictors of Household Food
Insecurity in Canada, 2011–12.” Journal Article. *BMC Public Health* 19
(1): 12. <https://doi.org/10.1186/s12889-018-6344-2>.

</div>

<div id=""ref-tarasuk1999qualitative"" class=""csl-entry"">

Tarasuk, Valerie, and Randi Reynolds. 1999. “A Qualitative Study of
Community Kitchens as a Response to Income-Related Food Insecurity.”
*Canadian Journal of Dietetic Practice and Research* 60 (1): 11.

</div>

<div id=""ref-tarasuk2009household"" class=""csl-entry"">

Tarasuk, Valerie, and Janet Vogt. 2009. “Household Food Insecurity in
Ontario.” Journal Article. *Canadian Journal of Public Health* 100 (3):
184–88. <https://doi.org/10.1007/BF03405537>.

</div>

<div id=""ref-topalovic2012light"" class=""csl-entry"">

Topalovic, P, J Carter, M Topalovic, and G Krantzberg. 2012. “Light Rail
Transit in Hamilton: Health, Environmental and Economic Impact
Analysis.” *Social Indicators Research* 108 (2): 329–50.
https://doi.org/<https://doi.org/10.1007/s11205-012-0069-x>.

</div>

<div id=""ref-world2019progress"" class=""csl-entry"">

UNICEF-WHO. 2019. “Progress on Household Drinking Water, Sanitation and
Hygiene 2000–2017. Special Focus on Inequalities.”

</div>

<div id=""ref-vanderlee2017food"" class=""csl-entry"">

Vanderlee, Lana, and Mary L’Abbé. 2017. “Food for Thought on Food
Environments in Canada.” Journal Article. *Health Promotion and Chronic
Disease Prevention in Canada : Research, Policy and Practice* 37 (9):
263–65. <https://doi.org/10.24095/hpcdp.37.9.01>.

</div>

<div id=""ref-vonBergmann2021cancensus"" class=""csl-entry"">

von Bergmann, Jens, Dmitry Shkolnik, and Aaron Jacobs. 2021. *Cancensus:
R Package to Access, Retrieve, and Work with Canadian Census Data and
Geography*. <https://mountainmath.github.io/cancensus/>.

</div>

<div id=""ref-wakefield2013sweet"" class=""csl-entry"">

Wakefield, Sarah, Julie Fleming, Carla Klassen, and Ana Skinner. 2013.
“Sweet Charity, Revisited: Organizational Responses to Food Insecurity
in Hamilton and Toronto, Canada.” Journal Article. *Critical Social
Policy* 33 (3): 427–50.

</div>

<div id=""ref-wan2012three"" class=""csl-entry"">

Wan, N., B. Zou, and T. Sternberg. 2012. “A Three-Step Floating
Catchment Area Method for Analyzing Spatial Access to Health Services.”
Journal Article. *International Journal of Geographical Information
Science* 26 (6): 1073–89.
<https://doi.org/10.1080/13658816.2011.624987>.

</div>

<div id=""ref-widener2018spatial"" class=""csl-entry"">

Widener, Michael J. 2018. “Spatial Access to Food: Retiring the Food
Desert Metaphor.” Journal Article. *Physiology & Behavior* 193: 257–60.
https://doi.org/<https://doi.org/10.1016/j.physbeh.2018.02.032>.

</div>

</div>
",3,3,2,0,transportation,"[accessibility, canada, covid-19, emergency-food-services, food-banks, open-science, spatial-analysis, transportation]",00000
186,Spatial-Availability-Measure,soukhova,N/A,https://github.com/soukhova/Spatial-Availability-Measure,https://api.github.com/repos/soukhova/Spatial-Availability-Measure,"Soukhov A, Páez A, Higgins CD, Mohamed M (2023) Introducing spatial availability, a singly-constrained measure of competitive accessibility. PLOS ONE 18(1): e0278468. https://doi.org/10.1371/journal.pone.0278468","
<!-- README.md is generated from README.Rmd. Please edit that file -->

# Introducing spatial availability, a singly-constrained competitive-access accessibility measure

Anastasia Soukhov (School of Earth, Environment and Society, McMaster
University, Canada) Antonio Paez (School of Earth, Environment and
Society, McMaster University, Canada) Christopher D. Higgins (Department
of Geography & Planning, University of Toronto Scarborough, Canada)
Moataz Mohamed (Department of Civil Engineering, McMaster University,
Canada)

Soukhov A, Páez A, Higgins CD, Mohamed M (2023) Introducing spatial
availability, a singly-constrained measure of competitive accessibility.
PLOS ONE 18(1): e0278468. <https://doi.org/10.1371/journal.pone.0278468>

<!-- badges: start -->
<!-- badges: end -->

# Abstract

Accessibility measures are widely used in transportation, urban and
healthcare planning, among other applications. These measures are
weighted sums of the opportunities that can be reached given the cost of
movement and are interpreted to represent the potential for spatial
interaction. Though these measures are useful in understanding spatial
structure, their methodologies count available opportunities multiple
times. This leads to interpretability issues, as noted in recent
research on balanced floating catchment areas (BFCA) and competitive
measures of accessibility. In this paper, we respond to the limitations
of the accessibility measure by proposing a new measure of *spatial
availability* which is calculated by imposing a single constraint on the
conventional gravity-based accessibility. Similar to the gravity model
from which spatial availability is derived, a single constraint ensures
that the marginals at the destination are met and thus the number of
opportunities are preserved. Through examples, we detail the formulation
of the proposed measure. Further, we use data from the 2016
Transportation Tomorrow Survey of the Greater Golden Horseshoe area in
southern Ontario, Canada, to contrast how the conventional accessibility
measure tends to overestimate and underestimate the number of jobs
*available* to workers. We conclude with some discussion of the possible
uses of spatial availability and argue that, compared to conventional
measures of accessibility, it can offer a more meaningful and
interpretable measure of opportunity access. All data and code used in
this research are openly available.

# Keywords

- Spatial availability
- Accessibility
- Gravity model
- Transportation
- TTS
",3,3,1,0,transportation,"[accessibility, gravity-model, spatial-availability, transportation, tts]",00000
187,sounds-of-transport,umutto,N/A,https://github.com/umutto/sounds-of-transport,https://api.github.com/repos/umutto/sounds-of-transport,A fun web app where a musical loop can be created using shapes and the intricate train system of Tokyo. (Tokyo ODPT challenge entry),"<p align=""center"">
  <img style=""max-width:700px; height:auto;"" src=""public/logo.png"">
</p>

# sounds-of-transport

<p align=""center"">
  <b>This project has been selected for the INIAD Special Award!!!🎉</b>
  <br>
  You can take a look at the award ceromony and other projects that have received awards using the link below
  <br>
  <a href=""https://tokyochallenge.odpt.org/2019/award/07.html#v"">Tokyo ODPT Challenge 2019 Awards</a>
</p>

## TODO

- 🗹 Support touch events! (hacked to open the edit menu on leaflet draw for now)
- 🗹 Add explanations to settings menu
- 🗹 Add a clock to main page or details on train popups so the time travel makes sense? (did train popups instead of a clock, seemed cleaner, use a popover on time setting instead of a clock)
- 🗹 Info button (show readme in a modal)
- 🗹 Github button (link to repository)
- 🗹 Clean unused libraries
- ☐ Clean unused, commented code.
- ☐ Dynamic fps detection and filtering for performance?
- ☐ Combine live data with timetables (just update the timetable for that train and continue using that data)
- ☐ Add new receivers with different quirks
- ☐ Add more sound loops
- 🗹 Add a way to save and recover creations
- ☐ Add a way to upload (or at least link) custom audio

- ☐ Add an audio visualizer.

- ☐ Finalize periodic redraws (update trains in trainref instead of redrawing)

- 🗹 Also clean the shapes and audios when reset. (currently breaking all)
- 🗹 Volume is not working when the audio element is not initialized yet.

- 🗹 Add corner cases for audios also the base functionality (when audio is changed from dropdow, when it's deleted, stop etc..)
- 🗹 Clear audio elements when a shape is deleted
- 🗹 Add a mute button.
- 🗹 Create a settings menu (modal) with options to filter trains (initially by the amount of stations, maybe later by location etc..), set time and date to a specific value, set the general volume, adjustable stuff you can find, probably also a good place to put the save/recover functionality.

- ☐ Fix Line offsetting, it seems like it fails after 2 intersections. For reference check Kanda station for Keihin tohoku and Chuo rapid line.
- 🗹 Put all stations to the map (don't filter out the repetitions) and instead combine their circles with polygons and lines (just make a thick round line from one to another? or combine them into a polygon?)

## How to use

Check out the [introduction.md](INTRODUCTION.md) for more details on how it works, and how to use.

[![Watch the introduction on Youtube](https://img.youtube.com/vi/PETzwgZVYRE/0.jpg)](https://youtu.be/PETzwgZVYRE ""Watch the introduction on Youtube"")

## Audio references

Audio used in this app is downloaded from following sources, thanks to all artists for sharing!

- [Funk loop 1](https://www.looperman.com/loops/detail/49460/west-coast-wah-funk-riff-by-mchn-free-90bpm-hip-hop-electric-guitar-loop)
- [Funk loop 2](https://www.looperman.com/loops/detail/189996/funky-floor-140-140bpm-trap-electric-guitar-loop)
- [Jazz loop 1](https://www.looperman.com/loops/detail/103595/jazz-sweep-guitar-lick-by-zacwilkins-free-90bpm-jazz-electric-guitar-loop)
- [Jazz loop 2](https://www.looperman.com/loops/detail/103705/common-swing-jazz-progression-86bpm-jazz-electric-guitar-loop)
- [Groovy loop 1](https://www.looperman.com/loops/detail/414/omar-phased-guitar-groove-1-by-omar_s-free-120bpm-funk-electric-guitar-loop)
- [Metal loop 1](https://www.looperman.com/loops/detail/1681/rei-hammer-03-d-140-by-rei4real-free-140bpm-heavy-metal-electric-guitar-loop)
- [Metal loop 2](https://www.looperman.com/loops/detail/80668/sinthetic-metal-guitar-riff-2-stereo-150-by-sintheticrecords-free-150bpm-heavy-metal-electric-guitar-loop)
- [Drum effects](http://free-loops.com/)
",3,3,2,0,transportation,"[audio, challenge, interactive, interactive-map, leafletjs, mapbox, polygons, tokyo, transportation, visualization]",00000
188,rdt-serviceinfo,rijdendetreinen,rijdendetreinen,https://github.com/rijdendetreinen/rdt-serviceinfo,https://api.github.com/repos/rijdendetreinen/rdt-serviceinfo,HTTP interface for train schedules,"# This project has been abandonded, switch to [GoTrain](https://github.com/rijdendetreinen/gotrain)

### This project has been abandonded, as AR-NU has been discontinued as a data source by NS. Please switch to [GoTrain](https://github.com/rijdendetreinen/gotrain) for a modern implementation in Go which processes InfoPlus data

RDT Serviceinfo
===============

[![GitHub release](https://img.shields.io/github/release/geertw/rdt-serviceinfo.svg)](https://github.com/geertw/rdt-serviceinfo/releases)
[![Build Status](https://travis-ci.org/geertw/rdt-serviceinfo.svg?branch=master)](https://travis-ci.org/geertw/rdt-serviceinfo)
[![codecov.io](https://codecov.io/github/geertw/rdt-serviceinfo/coverage.svg?branch=master)](https://codecov.io/github/geertw/rdt-serviceinfo?branch=master)
[![Code Climate](https://codeclimate.com/github/geertw/rdt-serviceinfo/badges/gpa.svg)](https://codeclimate.com/github/geertw/rdt-serviceinfo)
[![Scrutinizer Code Quality](https://scrutinizer-ci.com/g/geertw/rdt-serviceinfo/badges/quality-score.png?b=master)](https://scrutinizer-ci.com/g/geertw/rdt-serviceinfo/?branch=master)

RDT Serviceinfo is a tool for parsing and distributing information about
transport services, both scheduled information and real-time information.

This tool is developed for open data provided by the Dutch Railways ([NS](http://www.ns.nl/)).
RDT Serviceinfo has the following features:

* Provides HTTP interface to query the actual transport schedule
* Load a schedule into Redis
* Parse real-time service updates
* Support for complex service types (combined trains)

RDT Serviceinfo can be used as a source for feeding departure boards, to provide
additional information about train services, to fill historical archives, and more.

Status
------

RDT Serviceinfo is used by [Rijden de Treinen.nl](http://www.rijdendetreinen.nl/) to supplement
real-time departure information with additional information. It is being used by thousands of
travellers each day and running in production since July 2015.

The current release of RDT Serviceinfo is stable.

Installation
------------

This software is tested on Debian and Ubuntu Linux, but it should work on any Linux distribution.

You'll need a MySQL server and a Redis instance (not necessarily installed on the same machine).
A MySQL database is used to store the complete schedule (called the IFF dataset).
The Redis instance is used to lookup today's schedule and to store real-time updates about train services.

To install, run through the following steps:

0. Install the required Python modules. For Debian and Ubuntu, run:  
   `apt-get install python-argparse python-bottle python-isodate python-lxml python-mysqldb python-redis python-tz python-zmq`
0. Download or clone this repository to a directory of your choice, `git clone git@github.com:geertw/rdt-serviceinfo.git`.
0. Copy the .dist files in the [config](config) directory and edit them to match your details.
   At least, you need to configure the MySQL and Redis connection details.
0. Download the IFF files and unpack them, the default folder in the converter script is `cache/dataset`
0. Convert the IFF files by running `iff-converter.py`
0. Create the database and import the IFF dataset by running `iff-loader.py --create_tables`
0. Load the current schedule by running `scheduler.py`.
0. Receive status updates by running `arnu-listener.py` (in the background, if working correctly).
0. Provide an HTTP interface by running `http-server.py` (for testing/debugging usage),
   or by configuring a WSGI server like [uWSGI](https://github.com/unbit/uwsgi) (for production usage).
   Set it up to serve `http.wsgi`.

### Keeping the schedule up-to-date

0. Set up cronjobs to run `cleanup.py` and `scheduler.py` regularly. Both should run once a day.
    - `cleanup.py` removes old schedules from your Redis database.
    - `scheduler.py` loads the schedule for today in your Redis database.
0. Refresh your IFF dataset at least weekly.
    - Make sure the MySQL user in your configuration file has permissions to truncate tables and insert data.
    - Use the script in `contrib/ndov/new-iff.sh` to download and process IFF datasets from NDOVloket.
    - The script automatically updates your MySQL database when a new IFF dataset is detected.

### Access to static and realtime schedules

Note that you'll need access to both the static schedule and a ZeroMQ server
distributing service updates. You can get a free subscription by signing up
with [NDOVloket](https://www.ndovloket.nl/).

From NDOVloket, you need:

- The [NS IFF dataset](https://ndovloket.nl/documentatie.html), which contains the (static) train schedule for the whole year.  
  NDOVloket provides the IFF dataset as a zip file containing all required source files.
- [AR-NU Ritinfo](https://ndovloket.nl/documentatie.html). AR-NU provides you with realtime updates about delayed trains, cancelled trains, etc.  
  NDOVloket provides the AR-NU message feed via ZeroMQ.

It is recommended to not connect directly to NDOVloket's ZeroMQ server, but
use some middleware instead called [universal-sub-pubsub](https://github.com/StichtingOpenGeo/universal).

License
-------

Copyright (c) 2015-2016 Geert Wirken

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.
",3,3,3,0,transportation,"[open-data, python, train-schedule, transportation, zeromq]",00000
189,HowToGo,2pow4,2pow4,https://github.com/2pow4/HowToGo,https://api.github.com/repos/2pow4/HowToGo,Transportation All in one search Platform,"# HowToGo

*Transportation **All In One** Search Platform* :)

> ## Feature

- 버스, 기차, 비행기 광역 이동 한번에 검색 가능
- 소요 시간별, 가격별, 이동 수단별 정렬로 여행 루트 추천
- 해당 예약 사이트로 리다이렉트  

> ## How To Run  

서비스를 먼저 빌드해 봅시다.  

### Source Code Build  

1. 소스를 다운로드하거나, 직접 git repository를 clone 해옵니다.

    ```bash
    $ git clone https://github.com/2pow4/HowToGo.git  
    $ cd HowToGo
    ```

2. 의존 라이브러리를 설치합니다.

    ```bash
    // `yarn`을 사용하여도 됩니다.
    $ npm install
    ```

3. `.jsx` 코드를 컴파일 합니다.

    ```bash
    $ npm run build
    ```

개발을 위해서는 로컬 개발 서버를 이용해야 합니다. 로컬 개발 서버를 세팅하여 React 파일을 배포합시다.

### Run `bundle.js` in Development Server

1. `main.js`에서 사용할 Port 번호를 설명합니다.

    ```javascript
    const port = process.env.PORT || 3000
    ```

2. 서버를 실행합니다.

    ```bash
    $ npm run start
    ```

3. 웹페이지에 접속합니다.  

    ```bash
    http://localhost:3000
    ```

> ## Development Environment  

TBD?",3,3,4,24,transportation,"[frontend, react, react-router, transportation]",00000
190,chicagoteam_quanggang,marcosvppfernandes,N/A,https://github.com/marcosvppfernandes/chicagoteam_quanggang,https://api.github.com/repos/marcosvppfernandes/chicagoteam_quanggang,Prediction of severity of Car Crashes using Machine Learning,"# Chicago, IL : Car Crash Analysis & Predictive Modeling


## *Predicting severity of car crashes with Machine Learning Models*

#### Authors:
[Christos Maglaras](mailto:Christo111M@gmail.com), 
[Marcos Panyagua](mailto:marcosvppfernandes@gmail.com), 
[Jamie Dowat](mailto:jamie_dowat44@yahoo.com)

Date: 3/12/2021

![chicago](img/chicago_night_drive.jpg)


## Contents
* `notebooks`: Contains personal contributor notebooks
* `final_notebook.ipynb` : Contains more detailed analysis and walks through modeling process.
* `src` : Contains source code for `final_notebook.ipynb`.
* `data` : Contains csv files used for modeling (See below for description and links).
* `presentation.pdf` : Slide deck for non-technical presentation

## Data: [Chicago City Data Portal](https://data.cityofchicago.org/)

![ccdp](img/chicagocitydataportal.jpg)

##### 1. [Crashes](https://data.cityofchicago.org/Transportation/Traffic-Crashes-Crashes/85ca-t3if):

* Number of Rows: 482,866

* *Shows crash data from crash from the Chicago Police Department's **E-Crash** system*

* **""All crashes are recorded as per the format specified in the Traffic Crash Report, SR1050, of the Illinois Department of Transportation.""**

##### 2. [People](https://data.cityofchicago.org/Transportation/Traffic-Crashes-People/u6pd-qa9d):

* Number of Rows: 1,068,637

* *Information about people involved in a crash and if any injuries were sustained.*

##### 3. [Vehicles](https://data.cityofchicago.org/Transportation/Traffic-Crashes-Vehicles/68nd-jvt3):

* Number of Rows: 987,148

* *Information about vehicles (""units"") involved in a traffic crash.*

*********

## Stakeholder: Chicago Department of Transportation

*Click [here](https://www.chicago.gov/city/en/depts/cdot.html) to check out their website!*

![cdot](img/cdot.png)

### Business Understanding

Just a week ago, the **National Security Coundil** released a [report](https://www.nsc.org/newsroom/motor-vehicle-deaths-2020-estimated-to-be-highest) containing some disturbing statistics from 2020. The first paragraph begins as follows:
> ""For the first time since 2007, preliminary data from the National Safety Council shows that as many as 42,060 people are estimated to have died in motor vehicle crashes in 2020. That marks an 8% increase over 2019 in a year where people drove significantly less frequently because of the pandemic.""

According to their data, the US hasn't seen an increase like this since **1924**.

Following this trend, the **Governor's Highway Safety Association** reported that [*pedestrian* fatality rate](https://www.smartcitiesdive.com/news/ghsa-projects-highest-pedestrian-death-rate-since-1988/573203/) has reached a **30-year high**, with nighttime pedestrian fatalities having increased by 67%, and a 16% increase in daytime fatalities, highlighting the need for *safer road crossings* and increased efforts to make pedestrians and vehicles more *visible*.

Narrowing our focus even further, in **Illinois**, around **1000** people were KILLED in motor vehicle crashes in **2019** alone. 

**Advocates for Highway and Auto Safety** have scored all US states against their [Roadmap for State Highway Safety Laws](https://saferoads.org/wp-content/uploads/2020/01/Advocates-for-Highway-and-Auto-Safety-2020-Roadmap-of-State-Highway-Safety-Laws.pdf), a set of 16 laws that cover occupant protection (selt belt, helmet laws), child protection, and teen driving. 

![scoring](img/scoringsafety.png)

When Illinois is [scored](https://saferoads.org/state/illinois/) against this Roadmap, it has been given a yellow rating (Caution), since it still lacks the following safety laws:

* All-Rider Motorcycle Helmet Law
* Booster Seat Law
* GDL (Graduated Driver's License) – Minimum Age 16 for Learner’s Permit
* GDL – Stronger Nighttime Restriction Provision
* GDL- Stronger Passenger Restriction Provision
* GDL- Age 18 for Unrestricted License

Currently, the Chicago Department of Transportation is working with the city's new initiative, **Vision Zero**, to reduce accidents on the road. In Vision Zero's [report](https://8gq.ef1.myftpupload.com/wp-content/uploads/2016/05/17_0612-VZ-Action-Plan_FOR-WEB.pdf) and action plan, they used crash data to identify high crash corridors in the city as well as other important trends to guide education, road safety improvements, and more.

Bearing all of this in mind, we had these current safety movements and road safety problems guide our exploration and modeling of this data. 

Even more importantly, this business understanding was the sole influencer of our target choice, *severity of crash based on injury*.

******

## Predictive Modeling Preview

In terms of business problems, we found one of the ways a predictive model could most help with this business problem is to determine how different factors of the crash determine the severity of injuries in the crash.

We compared results from *Logistic Regression, K-Nearest Neighbors, Decision Tree, Naive Bayes, and Random Forest Classifier* models, before settling on our final model produced by a **Bayesian-Optimized XGBoost Classifier**.

We experimented with both a BINARY classification and a TERNARY, with our final model using as TERNARY classification. The targets are defined as follows, using the MOST_SEVERE_INJURY column in the Crashes dataset:

* BINARY:
    * Class 0: No Injury
    * Class 1: Injury
    
* TERNARY
    * Class 0: No Injury
    * Class 1: NON-INCAPACITATING injuries
    * Class 2: INCAPACITATING or FATAL injuries


*******

## EDA

![topcrashsites](img/topcrashsites.png)


![driveraction](img/driveraction.png)

#### Showcasing Class Imbalance
![classimbalance](img/classimbalance.png)

*******

## Major Modeling Takeaways

##### 1st Priority Metric: RECALL
*We focused first and foremost on improve RECALL, since the most damaging false predictions would be **false negatives** (predicting no injury, when there was actually injury).*

********
### First Simple Model

**Recall**: 22%

![fsm](img/fsm.png)


### FINAL MODEL

**Recall**: 85%

![test](img/finalmodeltestcm.png)

#### Top 5 Features - Final Model (by Gain Metric)

* `UNIT_TYPE` - DISABLED VEHICLE (810)
* `DRIVER_ACTION` - DISTRACTION - FROM OUTSIDE VEHICLE (181)
* `PERSON_TYPE` - DRIVER (11)
* `VEHICLE_DEFECT` - ENGINE/MOTOR (8.71)
* `VEHICLE_DEFECT` - WHEELS (8.4)


To access all of our sources, or for more details about our process, see `final_notebook.ipynb` or `presentation.pdf`.

### Repository Structure
```
├── data 
....├── traffic_crashes_chicago.csv
....├── traffic_crashes_people.csv
....└── traffic_crashes_vehicles.csv
├── img
....├── cdot.png
....├── chicago_night_drive.jpg
....├── chicagocitydataportal.jpg
....├── finalmodeleltestcm.png
....├── finalmodeltraincm.png
....├── scoringsafety.png
....└── visionzeroquotes.png
├── notebooks
....├── Christos_notebook.ipynb
....├── jamie_notebook.ipynb
....└── marcos_eda.ipynb
├── src
....├── __init__.py
....├── data_cleaning.py
....├── eda.py
....└── models.py
├──presentation.pdf
├── final_notebook.ipynb
└── README.md
```",3,3,2,0,transportation,"[car-crashes, chicago-department, crash, crash-data, flatiron, flatiron-school, flatiron-school-project, illinois, injury, machine-learning, machine-learning-algorithms, motor-vehicle-crashes, traffic-crash, transportation, vehicle, xgboost-algorithm]",00000
191,atupp,akazukin5151,N/A,https://github.com/akazukin5151/atupp,https://api.github.com/repos/akazukin5151/atupp,atupp - Analysing transportation using population points,"# atupp - Analysing transportation using population points

Based on [my paper here](https://github.com/akazukin5151/papers/blob/main/6SSG3077_CW2_1931393.pdf)

At that time I wasn't able to deal with datasets that are too large, so I resorted to randomly sampling population points for analysis. It was a failure that constantly nagged me, so I decided to tackle it again.

Python couldn't handle it so I used Rust. But I again reached a point where using a naive algorithm is too slow because of asymptotic complexity. The most significant change was to use a proper spatial data structure, the R\* tree, to efficiently search for points. Python still couldn't handle plotting large amounts of data, so I used [plotters](https://docs.rs/plotters/latest/plotters/) instead.

## Gallery

![props](examples/props.png)

Proportion of city population that is within a certain distance from at least one train station. Read: around 30% of London's population is within 1100 meters of a station, compared to around 43% for Tokyo.

![london_box](examples/london_box.png)

London: Box plot of number of stations that are within a certain distance from a population point.

![tokyo_box](examples/tokyo_box.png)

Tokyo: Box plot of number of stations that are within a certain distance from a population point.

For both cities, most population points have zero stations near it. The minority that do, mostly has two stations near it. There is a very small number of points that has a lot of stations near it.

![london_quadrant](examples/london_quadrant.png)

London: Scatterplot of the number of stations that are within 1400m of a population point, and its population.

There are two lines dividing the plot. The vertical line represents the 3rd quartile of the population of the points. The horizontal line represents the 3rd quartile of the number of stations, which is 1 station at 1400 meters. The points are coloured based on their quadrant. Red points are those with a ""normal"" population but high number of stations near it. Orange points are those with high population but low number of stations near it. Blue points are those with both high population and high number of stations near it. Green points are those with both low population and low number of stations near it.

![tokyo_quadrant](examples/tokyo_quadrant.png)

Tokyo: Scatterplot of the number of stations that are within 1400m of a population point, and its population

![london_quadrants_map](examples/london_quadrants_map.png)

London: map of the population points coloured by its quadrants in the scatterplot above. The red points closely follow the tube stations. There is not a lot of people that live 1400m within a station, so it is low population but ""high"" number of stations near it. The blue points also follow tube stations but closer to the city center, which makes sense as the population are higher nearer the center. Most of London is yellow or green - that is, with few stations close by, regardless of population. Yellow is for high population and green is for low population, which is why yellow points are tend to be more central than green, which is properly ""rural"".

![tokyo_quadrants_map](examples/tokyo_quadrants_map.png)

Tokyo: map of the population points coloured by its quadrants in the scatterplot above. The red points also closely matches the train stations, except for central Tokyo. The red quadrant indicates points with normal population, which excludes the high population points in the urban center. The other differentiator is ""high"" number of stations near it, so it obviously will coalesce around train stations. Green points are also normal population but without stations nearby, which is everywhere else except for the urban center. There is one exemption for the red points - the imperial residence in the center of the city. Both yellow and blue points indicate high population. The blue points are more concentrated in the urban center, which has higher population, and is roughly Tokyo Prefecture, Kanagawa Prefecture, and some cities in Chiba and Saitama Prefectures. The yellow points are the ""suburban"" places, including more of Saitama and the northern portion of the Kanto Plain.

# Data sources

## data/pp/jpn_population_2020.csv
https://data.humdata.org/dataset/japan-high-resolution-population-density-maps-demographic-estimates

CRS: WGS84, EPSG:4326

## data/pp/population_gbr_2019-07-01.csv
https://data.humdata.org/dataset/united-kingdom-high-resolution-population-density-maps-demographic-estimates

CRS: WGS84, EPSG:4326

## data/tokyo boundaries/gadm
https://gadm.org/download_country_v3.html

CRS: WGS84, EPSG:4326

## data/london boundaries/statistical-gis-boundaries-london
https://data.london.gov.uk/dataset/statistical-gis-boundary-files-london

**CRS: British National Grid, EPSG:27700**

## London station coordinates

[TfL public API](https://api.tfl.gov.uk)

## Tokyo station coordinates

[https://www.odpt.org/](https://www.odpt.org/)

Note: it's better to use OpenStreetMap data, because they are complete. This API has a lot of missing coordinates, but I used this because at that time I was exploring the uses of the API.

# Download the data

## London station data

### Fetch London lines data

```sh
cd data/london_trains/lines/
curl ""https://api.tfl.gov.uk/Line/Mode/tube/Route"" > tube_lines.json
```

### Get London stations

```sh
cd data/london_trains/lines/
jq '.[].id' tube_lines.json > line_ids.txt
```

This command selects all `id` values in every train line. The output is every train line separated by newline. You can avoid installing `jq` by writing a python script or similar. 

### Fetch London station coordinates

```sh
python python/london stations/get_stations.py
```

This command queries the TfL API. For every train line found in the above step, it queries every station on that line.

### Combine London station coordinates

```sh
python python/london stations/station_coords.py
```

## Tokyo station data

Note: it's better to use OpenStreetMap data, because they are complete. This API has a lot of missing coordinate

### Fetch Tokyo Lines data

The Tokyo data is from [https://www.odpt.org/](https://www.odpt.org/). Go to [https://developer-dc.odpt.org/en/info](https://developer-dc.odpt.org/en/info) and create an account. Get your consumer key and export it as an environment variable, then make a query for stations.

```sh
export CONSUMERKEY=""your consumer key""
curl -X GET https://api.odpt.org/api/v4/odpt:Station?acl:consumerKey=$CONSUMERKEY
```

### Fix the data

TODO

# Data preprocessing

## Convert London boundaries to WGS84, EPSG:4326

Use QGIS, export it as GeoJSON

## Extract Tokyo boundaries from the Japan boundaries

In QGIS, select the prefectures Tokyo, Saitama, Chiba, Kanagawa, Tochigi, Ibaraki, Gunma. Export it as GeoJSON

This is a pretty wide definition of ""Greater Tokyo"", but the Japanese government uses ""Capital ring"" (首都圏), which includes even Yamanashi.

## Clip the national population points to its cities

```sh
cd rust
cargo b --release --bin clip_pp
# Usage: target/release/clip_pp [city]
target/release/clip_pp london > ../data/london_pp.csv
target/release/clip_pp tokyo > ../data/tokyo_pp.csv
```

It reads the entire population point file into memory, then splits up the file to process the chunks in parallel across multiple CPUs. To avoid accumulating a potentially huge result, it writes the results immediately after calculating it. To simplify things, writing is done by printing to stdout instead of writing to a file. Use a UNIX pipe to divert stdout to a file. Rust already uses a mutex when writing to stdout, so there are no race conditions.

This is the first step that takes significant time (10 minutes for London, 28 minutes for Tokyo). Technically the city boundaries are multi-polygons so every polygon is compared, but in practice the number of population points dominates and it is always possible to dissolve the multi-polygons into one.

## Reproject stations and population points into WGS84, Pseudo-Mercator, EPSG:3857

```sh
python python/reproj_to_meters.py london_trains
python python/reproj_to_meters.py tokyo_trains
python python/reproj_to_meters.py london_pp
python python/reproj_to_meters.py tokyo_pp
```

Calculating distances requires the coordinates to be in meters rather than lat/long.

# Analysis

## Barplot: cumulative population within a certain distance of a train station

```sh
cd rust
cargo b --release --bin cumulative_props
# Usage: target/release/cumulative_props [city]
target/release/cumulative_props london > ../data/london_props.csv
target/release/cumulative_props tokyo > ../data/tokyo_props.csv
cd ..
python python/plot_props.py
```

## Boxplot: stations within population points

```sh
cd rust
cargo b --release --bin stations_within_pp
# Usage: target/release/stations_within_pp [city]
target/release/stations_within_pp london
target/release/stations_within_pp tokyo
```

A brute force search has time complexity O(n\*m), where n is the number of stations and m is the number of population points. There are millions to billions of population points so asymptotic growth is really important here.

This program uses a R\* tree, which is O(log(n)) for searching, and O(n\*log(n)) for insertion. If we only insert the stations (Tokyo has only ~1000), then insertion time is negligible. Bulk loading the stations will also reduce tree building time.

There are m population points, so searching for the nearest station for every population point is O(m\*log(n)). The number of population points m >>> number of stations n, m >>> log(n), so it's basically O(m). This is significantly faster than O(n\*m).

## Scatterplot with quadrants: Population points and number of stations within X meters of the points

We choose 1400 meters here because this is the closest distance where the Q3 of number of stations within 1400 meters is higher than 1, for both cities

```sh
cd rust
cargo b --release --bin quadrants
# Usage: target/release/quadrant [X meters]
target/release/quadrants 1400
```

## Map of all population points, colored by their quadrant

```sh
cd rust
target/release/quadrant_coords london 1400 red > ../data/london_reds.csv
target/release/quadrant_coords london 1400 orange > ../data/london_oranges.csv
target/release/quadrant_coords london 1400 blue > ../data/london_blues.csv
target/release/quadrant_coords london 1400 green > ../data/london_greens.csv

target/release/quadrant_coords tokyo 1400 red > ../data/tokyo_reds.csv
target/release/quadrant_coords tokyo 1400 orange > ../data/tokyo_oranges.csv
target/release/quadrant_coords tokyo 1400 blue > ../data/tokyo_blues.csv
target/release/quadrant_coords tokyo 1400 green > ../data/tokyo_greens.csv

cd ..
python python/plot_quadrants_map.py london
python python/plot_quadrants_map.py tokyo
```

The individual quadrants can be mapped alone as well:

```sh
cargo b --release --bin quadrant_coords
# Usage: target/release/quadrant_coords [city] [X meters] [point_type]
target/release/quadrant_coords london 1400 red > ../data/london_reds.csv
target/release/quadrant_coords tokyo 1400 red > ../data/tokyo_reds.csv

cd ..
python python/plot_significant_quadrants_map.py london reds
python python/plot_significant_quadrants_map.py tokyo reds
```

Replace `reds` with `oranges`/`blues`/`greens`
",3,3,1,0,transportation,"[gis, openstreetmap, transportation, urban-data-science]",00000
192,TDM,ACMCMC,N/A,https://github.com/ACMCMC/TDM,https://api.github.com/repos/ACMCMC/TDM,App de transporte de TDM en Android,"# Mi Ruta TDM
La app Mi Ruta TDM permite realizar el cálculo de rutas entre las distintas estaciones de la red de Transportes de Mitron (TDM).
TDM está compuesta por varios servicios distintos. Actualmente la app trabaja con los servicios de Subterráneos, Media Distancia, Largos y Tram, pero no incluye los servicios de TDM IRTA, Bus, TMR y RTA.
",3,3,3,4,transportation,"[android, dijkstra-algorithm, navigation, nfc-card-reader, route-planner, transportation]",00000
193,abm,cb-cities,cb-cities,https://github.com/cb-cities/abm,https://api.github.com/repos/cb-cities/abm,City-Scale Agent Based Modelling,"# City-Scale Agent Based Modelling
> CB-Cities

[![License](https://img.shields.io/badge/license-MIT-blue.svg)](https://raw.githubusercontent.com/cb-cities/abm/develop/license.md)
[![Developer docs](https://img.shields.io/badge/developer-docs-blue.svg)](http://cb-cities.github.io/abm)
[![CircleCI](https://circleci.com/gh/cb-cities/abm.svg?style=svg)](https://circleci.com/gh/cb-cities/abm)
[![codecov](https://codecov.io/gh/cb-cities/abm/branch/develop/graph/badge.svg)](https://codecov.io/gh/cb-cities/abm)
[![](https://img.shields.io/github/issues-raw/cb-cities/abm.svg)](https://github.com/cb-cities/abm/issues)
[![Project management](https://img.shields.io/badge/projects-view-ff69b4.svg)](https://github.com/cb-cities/abm/projects/)


## Compile

* Run `mkdir build && cd build && cmake -DCMAKE_BUILD_TYPE=Release /path/to/CMakeLists.txt`.

* Run `make clean && make -jN` (where N is the number of cores).

## Run 

* To run the abm from build directory, `./abm ../network.mtx ../sf-od-50k.csv`. 


### Run tests

* Run `./abmtest -s` (for a verbose output) or `ctest -VV`.

* Run `./abmtest -l` to see available test options
",3,3,3,4,transportation,"[agent-based-modeling, modelling, transportation]",00000
194,Tawny,seifoueslati,N/A,https://github.com/seifoueslati/Tawny,https://api.github.com/repos/seifoueslati/Tawny,IoT Smart Parcel and assets Tracking,"<p align=""center""><img src=""https://github.com/seifoueslati/Tawny/blob/main/images/Logo_tawny.png?"" width=""430""></p>
<h1><p align=""center"">
TAWNY
</p></h1>

## General info
Tawny is my end of study project (6months) , this project will be available on github soon ... 
## Problematic
It can be really disappointing when someone waits a very long time for an item to arrive and when it
does arrive the package is damaged.
Customers always expect their items to look brand new with no dents, rips or holes.
Poor delivery quality can often result in the item being damaged as nobody wants to take care of it.
Even retailer are not able to see what happens when a package leaves the warehouse.
The most popular issue has consistently been irresponsible driver behavior, meaning many people are
concerned that delivery drivers are the reason behind their damaged parcels.
Parcel damage has increased in recent years, although slightly improved in 2021 compared to last year.
It is important to ensure damage is minimized as this can result in a negative delivery experience for
the customer.
Calling them dissatised customers is an understatement, as 11% said they struggled with customer
service during the delivery process, 15% said they missed work while waiting for a delivery, and 13%
said of keeping an item because of an overly complicated report and return process.
With no evidence to blame anyone, especially the drivers, they will, as always, get away with it.
More like letting the fate of the packages and the company reputation at the mercy of the drivers.
Frankly speaking , if the driver doesn't feel like it, is having a bad day, or even has some personal task
to do after work so he needs to get the job done as soon as possible, the packages get destroyed...
Also, some packages suddenly disappear without a trace or any sign of existence.
Added to this are the costs for the excessive use of the work vehicle for private purposes at the expense
of the company.
Review provider StellaService reported that 1 in 10 e-commerce packages arrived damaged. And it
turns out that some of the largest and oldest carriers are the ones with high damage rates.
UPS delivered the highest percentage of damaged packages at 11 percent, followed by Aramex at 10
percent and FedEx at seven percent.

The key issues that all these businesses have in common are insuficient driver,parcels and vehicle
visibility, which leads to a poor understanding of the state of the shipments and contributes to their
high damage rate.
Another issue that the clients found to be particularly frustrating is that the ""tracking"" application that
they provide only displays the names of the stations or, occasionally, the countries, without providing
any more data like location or real-time data on a map.
The majority of the time, there is nothing that can be done in the case of a problem, such as receiving
a damaged package or one that completely disappears, as each company has a weak and nearly
nonexistent customer support department, and they are unable to take any action, which is to be
expected given that they have no knowledge of the delivery process and no data.
To make the matter even worse , as a result of the poor visibility the drivers also uses the work vehicle
in unauthorized and personal activities at the cost of the company.

## WHAT CAN TAWNY DO?
Tawny  is a standalone project which any company can use,which consists of :
- A device installed in every car that gathers and stores all the necessary information, including
real-time vehicle data including speed, vibration, door openings, geolocation,the list of packages
currently inside the vehicle,a full car diagnostic data like the fuel level, the engine load,the
oxygen sensors data , the board gauges ,the car's faulty messages and the coolant temperature,
and uploads it to the cloud in real-time.
- A web application dedicated to the company which displays real-time data on a large screens in
the control room.
- Another web application also dedicated to the company contains all the stored data where all
the reports submitted by the users can be found and processed either by checking the reports
and any abnormalities linked to delivery or by chatting with the customer directly.
- A mobile application that gives the user the ability to track the package in real time, report
damaged packages and facilitate communication between them and customer service.
## TECHNOLOGIES 

<p align=""center""><img src=""https://github.com/seifoueslati/Tawny/blob/main/images/technologies.png"" width=""1000""></p>
<p align=""center""><img src=""https://github.com/seifoueslati/Tawny/blob/main/images/Screenshot%202022-12-10%20235023.png"" width=""1000""></p>

## REALIZATION 
### DEVICE
https://user-images.githubusercontent.com/47242130/206878648-faa34b89-fbcd-499c-be74-1a9a77f93bd1.mp4

### WEB APPS
https://user-images.githubusercontent.com/47242130/206878845-7fa9b06a-5b09-4a9c-8555-e72f55783646.mp4

#### LIVE APP
<p align=""center""><img src=""https://github.com/seifoueslati/Tawny/blob/main/images/Liveapp%20display.jpg"" width=""1000""></p>

#### CONTROL APP
<p align=""center""><img src=""https://github.com/seifoueslati/Tawny/blob/main/images/tawnywebapplication.png"" width=""1000""></p>

### MOBILE APP

![Tawny MOBILE APP](https://github.com/seifoueslati/Tawny/blob/main/images/mobilemock.jpg?raw=true)

## EXPLAINER VIDEO
https://user-images.githubusercontent.com/47242130/206879260-24d1b756-9538-416a-9314-3eb9562e8217.mp4
",3,3,1,0,transportation,"[device, embedded, iot, mobile, tracking, transportation, web]",00000
195,mbrl-route,jjalcaraz-upct,N/A,https://github.com/jjalcaraz-upct/mbrl-route,https://api.github.com/repos/jjalcaraz-upct/mbrl-route,Reinforcement learning algorithm for making decisions in long distance routes regarding the duration of driving and rest periods.,"# Model-based RL for decision-making in long distance routes

## Description

Source code of the paper ""[Online Model-Based Reinforcement Learning for Decision-Making in Long Distance Routes](https://authors.elsevier.com/sd/article/S1366-5545(22)00179-X)"" published on Elsevier's Transportation Research Part E. The code includes a simulator environment that generates the successive stages in a long-distance transport route with time windows. At each stage, a decision regarding driving and rest periods must be made within the options allowed by the European driving regulations (EC Regulation 561/2006): e.g. take a full break, take a split break, make a split rest, extend daily driving time, reduce daily rest time, etc. The goal is to arrive at each customer within its delivery time window while complying with European regulations on driving hours and rest periods.

<img src=""img/route_example.png"" align=""center"" width=""40%""/>

To make these en-route decisions we propose a novel model-based reinforcement learning strategy combining model predictive control, rollout, and Monte Carlo tree search. A DQN agent is also provided for comparison.

<img src=""img/rollout.png"" align=""center"" width=""40%""/>

## Acknowledgements

This work was supported by Consejeria de Desarrollo Economico, Turismo y Empleo, Region de Murcia, under the RIS3Mur project grant SiSPERT (ref. 2I16SAE00023) and by Grant PID2020-116329GB-C22 funded by MCIN / AEI / 10.13039/501100011033  

<img src=""img/MICINN_Gob_Web_AEI_2.jpg"" align=""right"" width=""40%""/>

## How to use it

### Requirements

The environment and the rollout agent have been tested in Python 3.5 and 3.6. No specific instalation instructions are required. The only required package is:

scipy 1.5.4

To generate and represent the performance results the following packages are required

numpy 1.19.1  
matplotlib 3.3.4  

To run the DQN agent, Keras is required. The tested version is:
Keras 2.2.1

### Experiment scripts

There are 2 scripts for launching simulation experiments:

- experiments_RL.py: runs the experiments with the proposed rollout agent and the baseline policy
- experiments_DQN.py: runs the experiments with the DDQN agent

The experiments run on 6 specific routes using predefined parameter configuration. Other routes and configurations can be tested by modifiying the scripts. 200 simulation runs per route are executed. 

And a jupyter notebook for plotting results:  

- RL_results.ipynb: plots the histograms comparing the results of each agent (rollout, baseline, DQN) in the 200 simulation runs of each route (figure 4 of the paper).

<img src=""img/histograms.png"" align=""center"" width=""80%""/>  


## Project structure

The environment is implemented in:  

- route_environment.py

A modified version for DQN is provided

- route_environment_q.py

The following files provide auxiliary methods:

- serialize.py  
- switch_function.py

The rollout agent is implemented in 
- rollout_agent.py  

The DQN agent is implemented in

- ddqn_keras.py  

The ```routes``` directory contains the data files with the description of each route. These routes are based on real-life examples. The ```results``` store the results of the simulation experiments.

## How to cite this work

The code of this repository:

@misc{mbrl_decisions,  
    title={Model-based RL for decision-making in long distance routes},
    author={Juan J. Alcaraz},  
    howpublished = {\url{https://github.com/jjalcaraz-upct/mbrl-route/}},  
    year={2022}  
}

The paper where the rollout algorithm was presented:

@misc{alcaraz2022,
  author = {Alcaraz, Juan J. and Losilla, F. and Caballero-Arnaldos, Luis},  
  title = {Online Model-Based Reinforcement Learning for Decision-Making in Long Distance Routes},  
  year = {2022},  
  publisher = {Elsevier},  
  journal = {Transportation Research part E},  
  note = {accepted for publication},  
}

## Licensing information

This code is released under the MIT lisence.
",3,3,1,0,transportation,"[model-predictive-control, monte-carlo-tree-search, reinforcement-learning, reinforcement-learning-environments, transportation]",00000
196,Map_a_Nap,felivalencia3,N/A,https://github.com/felivalencia3/Map_a_Nap,https://api.github.com/repos/felivalencia3/Map_a_Nap,"An IOS and Android GPS-powered alarm app “built for those who just can’t seem to avoid taking a nap on the subway (and missing their stop)”. The app automatically plays an alarm when you’ve arrived at your subway/bus stop, or any other destination chosen by dropping a pin on a map or by searching with the Google Maps algorithm.","# Map_a_Nap
An IOS and Android GPS-powered alarm app “built for those who just can’t seem to avoid taking a nap on the subway (and missing their stop)”. 
The app automatically plays an alarm when you’ve arrived at your subway/bus stop, or any other destination chosen by dropping a pin on a map or by searching with the Google Maps algorithm.

# Features
- Set an alarm for your destination using Google Maps
- Choose your destination by dropping a pin on the map or by searching with the Google Maps algorithm
- See the estimated time and distance to your destination
- Adjust the alarm radius and sound
- Snooze or dismiss the alarm when it goes off
- See your current location and speed on the map
- Share your destination with your friends via iMessage, WhatsApp, or other apps
# Requirements
- iOS 13.0 or later / Android 5.0 or later
- Xcode 11.0 or later / Android Studio 4.0 or later
- Swift 5.0 or later / Kotlin 1.4 or later
- A Google API key with Maps and Geolocation enabled
# Installation
- Clone or download this repository
- Open the project in Xcode / Android Studio
- Replace the placeholder API key in the AppDelegate.swift / MainActivity.kt file with your own
- Run the app on a device or simulator that supports location services
# Usage
- Grant location permissions when prompted
- Tap the map to see nearby places or search for a place using the Google Maps algorithm
- Tap a place marker to see its name and address
- Tap the set alarm button to set an alarm for the place
- Tap the settings button to adjust the alarm radius and sound
- Tap the share button to share your destination with your friends via iMessage, WhatsApp, or other apps
- Enjoy your nap and wake up when you arrive at your destination
# Credits
This app was created by Felipe Valencia as a personal project. It uses the following third-party libraries:

- GoogleMaps API by Google: A framework for displaying maps and adding interactivity.
- GooglePlaces API by Google: A framework for finding places and getting information about them.
- GoogleGeolocation API by Google: A service for getting the location of a device based on GPS, cell towers, and WiFi access points.
",3,3,2,15,transportation,"[gps-location, ios, mobile-app, transportation]",00000
197,DriveMe,KhaledAshrafH,N/A,https://github.com/KhaledAshrafH/DriveMe,https://api.github.com/repos/KhaledAshrafH/DriveMe,"DriveMe is a Java application that helps users to communicate with car drivers to transport users to any area. It uses SOLID principles, software engineering, and OOP concepts to implement the functionality and design of the application. The application has two versions: one with web service in Spring Boot and another with console.","# DriveMe

DriveMe is a Java application that helps users to communicate with car drivers to transport users to any area. It uses SOLID principles, software engineering, and OOP concepts to implement the functionality and design of the application. The application has two versions: one with web service in Spring Boot and another with console.

## Features

The application has the following features:

- **User registration**: The user can register to the system by providing username, mobile number, email (optional), and password. If the user wants to register as a driver, the driving license and national id should also be provided.
- **Driver verification**: The admin user can verify driver registration by listing all pending driver registrations and verifying any of them.
- **Ride request**: The user can request a ride by entering the source area's name and the destination area's name.
- **Ride notification**: The driver can add some areas to get notification when any ride is requested and one of these areas is added as the source area.
- **Ride offer**: The driver can list all rides with source area within one of the driver's favorite areas. The driver can suggest a price to this ride and notify the user with this price. Each price suggestion is called an ""offer"".
- **Account suspension**: The admin can suspend any driver/user account. By suspending an account, the corresponding user cannot login into the application.
- **Driver rating**: The user can rate any driver by providing a star rating from 1 to 5 (1 worst, 5 best).
- **Rating list**: The driver can list user ratings. All user ratings are visible to the driver.
- **Rating average**: The user can check the average rating for the driver. The driver's information includes the average user rating.
- **Data persistence**: Data from the above features are persisted using a database.

The web service version of the application also has the following additional features:

- **Web service**: The application exposes all features as web services using Spring Boot framework.
- **Design patterns**: The application applies design patterns to all features as needed within sprint 1 and sprint 2 requirements.
- **Event logging**: The admin can show the events that happened on a specific ride. These include captain putting a price, user accepting the price, captain arriving to user location, captain arriving to user destination. Each event has a name, a time, and the involved parties.
- **Area discount**: The admin can add discounts on specific areas. If any ride is going to that area, a 10% discount is applied to the ride price. This discount does not affect the price that the captain suggests. The ride price is added with no discount to the captain balance once completing the ride, but the discount is applied to what the user pays for this ride.
- **Booking refactoring**: The booking ride logic is refactored to add a new way to book a ride. Only the drivers within the ride source area and available to handle a new request are notified. The user can also specify the number of passengers in this ride.
- **Discount chain**: Various discounts are applied to the ride price. So what the user pays passes by some discounts, if they should be applied then the ride price is reduced accordingly.

## Installation

To install and run the console version of the application, you need to have Java Development Kit (JDK) installed on your machine. You can download JDK from [here](https://www.oracle.com/java/technologies/javase/jdk17-archive-downloads.html). 

To install and run the web service version of the application, you need to have Maven installed on your machine. You can download Maven from [here](https://maven.apache.org/download.cgi). 

You also need to have Spring Boot installed on your machine. You can download Spring Boot from [here](https://spring.io/projects/spring-framework/).

To clone the project repo, you can use the following command:
```
git clone https://github.com/KhaledAshrafH/DriveMe.git
```

## Usage

To use the application, you need to register as either a user or a driver. You can then login with your credentials and access the features according to your role.

If you are a user, you can request a ride by entering your source and destination areas. You will then receive offers from drivers who are interested in your ride. You can accept any offer and start your ride. You can also rate your driver after completing your ride. You can also check your driver’s average rating before accepting their offer.

If you are a driver, you can add some areas to get notified when a ride is requested in those areas. You can then make an offer for any ride that matches your preferences. You will then wait for the user to accept your offer and start your ride. You can also check your ratings from users who have rated you.

If you are an admin, you can verify driver registrations by approving or rejecting them. You can also suspend any user or driver account if they violate the rules. You can also add discounts to specific areas to attract more users. You can also view the events that happened on any ride.

To run the console version of the application, you need to navigate to the project directory and execute the following command:
```
java -jar TransportationApp.jar
```

To run the web service version of the application, you need to navigate to the project directory and execute the following command:
```
mvn spring-boot:run
```


The web service will run on port 8080 by default. You can use any REST client tool such as Postman or curl to test the web service endpoints.


## Contributing

The project is open for contributions. If you want to contribute to this project, please follow these steps:

- Fork the project repo
- Create a new branch for your feature
- Commit and push your changes to your branch
- Create a pull request to the main branch
- Wait for review and feedback


## Team

The project is developed by a team of four students from the Faculty of Computers and Artificial Intelligence, Cairo University . The team members are:

- [Khaled Ashraf](https://github.com/KhaledAshrafH).
- [Ahmed Sayed](https://github.com/AhmedSayed117).
- [Ebrahim Mohammed](https://github.com/EbrahimHeggy).
- [Zeyad Maher](https://github.com/ZeyadMaher).


## Contact

If you have any questions, suggestions, or feedback, please feel free to contact me at 5aleda4rf@gmail.com.

## License

The project is licensed under MIT License. See [LICENSE] file for more details.

",3,3,1,0,transportation,"[driver, oop, passenger, software-engineering, solid-principles, transportation, uber]",00000
198,trace,drolx,drolx,https://github.com/drolx/trace,https://api.github.com/repos/drolx/trace,"An end to end logistics B2C platform, licensed under Business Source License 1.1 (BSL 1.1)","# Trace [Experimental]

Trace is an end to end logistics B2C platform, for handling all processes in the logistics process,
manages the entire logistics cycle from procurement and distribution to transport,
delivery to the customer and ending with return logistics.

## License

Trace is license under the [Business Source License 1.1](./LICENSE.md) [![Business Source License 1.1](https://img.shields.io/badge/license-BSL--1.1-blue.svg?style=flat-square)](./LICENSE.md)

- Agboola Solomon ([agboolas@outlook.com](mailto:agboolas@outlook.com))
- Godwin peter .O ([me@godwin.dev](mailto:me@godwin.dev))

| | |
|---|---|
| Licensor: | drolx Techonologies. |
| Licensed Work: | The Licensed Work is (c) 2023 drolx Tecnologies. |
| Additional Use Grant: | You may make production use of the Licensed Work, provided such use does not include offering the Licensed Work to third parties on a hosted or embedded basis which is competitive with drolx's products |
| Change Date: | Four years from the date a Licensed version is published |
| Change License: | Reciprocal Public License (RPL-1.5) |

## Goals
* Unify all logistics data source
* Single client UI for logistics processes
* Combine multiple map data to handle order routing


## Status
This is an experimental platform; however the logic and ideas have been previously tested
in different forms of disjointed applications.



## Features

Some of the available features include:

- Real-time GPS tracking

## Modules

There are a some modules supported. Most of them are configurable via the web
interface or mobile app. A few of them are:

- [ ] Asset
- [ ] Beacon (GPS, RFID, Radio, etc)
- [ ] Branch
- [ ] Contact
- [ ] Customer
- [ ] Dashboard
- [ ] Document
- [ ] Driver
- [ ] Driver Group
- [ ] Employee
- [ ] Event
- [ ] Expense
- [ ] Form
- [ ] Insurance
- [ ] Invoice
- [ ] Location
- [ ] Maintenance
- [ ] Order
- [ ] Payment
- [ ] Product
- [ ] Route
- [ ] Schedule
- [ ] Shipment
- [ ] Shortage
- [ ] Stock
- [ ] Stock Store
- [ ] Suppliers
- [ ] Support
- [ ] Tags
- [ ] Tasks
- [ ] Templates
- [ ] Tenant
- [ ] Trailer
- [ ] Trip Pass
- [ ] Vehicle
- [ ] Warehouse
- [ ] Waybill


## Support

To get free support, use github issue tab.

## Prerequisites

In order to run Trace, you need the following configured, secured  and
working Basic Operating System (Linux).

The project uses Docker, dotnet, PostgreSQL, vueJs and leaflet.

## Contributing

Interested in contributing? check out the [contributing guide](./CONTRIBUTING.md).


",3,3,2,0,transportation,"[b2c, gps, hacktoberfest, hacktoberfest-accepted, logistics, rpl-license, shiping, tracker, tracking, transport, transportation]",00000
199,MVGLive,serhuey,N/A,https://github.com/serhuey/MVGLive,https://api.github.com/repos/serhuey/MVGLive,Fully customizable WPF-based application intended to display timetables for up to four stations of the Munich public transportation system.,"# MVGLive v.2.0.1
<img src=""https://raw.githubusercontent.com/serhuey/MVGLive/master/GraphicsSource/AppIcon.svg?sanitize=true"" height=""64"">

Small WPF-based application to display a live schedule of public transport in Munich.

![Screenshot v.2.0.0](https://raw.githubusercontent.com/serhuey/MVGLive/master/Images/Screenshot_1.png)

## Some features:

- The settings window opens at startup.

![Settings v.2.0.1](https://raw.githubusercontent.com/serhuey/MVGLive/master/Images/SettingsWindow_0.png)


- The application is capable of displaying one to four schedules simultaneously.
- You can also adjust the colors, size and typeface of the fonts.
- To prevent the settings window from opening, for example, when the application has to start automatically at system startup and all settings have already been made, you need to use the command line option ""-ns"".

```
MVGLive.exe -ns
```

- The application blocks the screen saver and sleep mode after startup and restores them after its completion.
- All data about the schedule and current arrival of transport are taken from the official site mvg.de.
- In version 2.0, a local database with station identifiers has been added to reduce traffic to the official website.
- Special icons for U-Bahn and S-Bahn marks in destination string instead of the letters ""U"" and ""S"".

![Aditional U-S icons v.2.0.1](https://raw.githubusercontent.com/serhuey/MVGLive/master/Images/3d_AdditionalDestinationUSIcons.png)


- There are ""First cars/Last cars"" icons for branching routes such as S1 direction Flughafen/Freising.

![Aditional First-Last icons v.2.0.1](https://raw.githubusercontent.com/serhuey/MVGLive/master/Images/ForkedLines.png)


- Special small icons for delayed routes.

![Aditional delay icons v.2.0.1](https://raw.githubusercontent.com/serhuey/MVGLive/master/Images/DelayIcon.png)


- Some multi-platform stations show special icons with platform number. The shape of platform's icon depends on the route type.

![Multi-platform icons Tram v.2.0.1](https://raw.githubusercontent.com/serhuey/MVGLive/master/Images/HstIcon.png)

![Multi-platform icons S v.2.0.1](https://raw.githubusercontent.com/serhuey/MVGLive/master/Images/GleisIcon.png)


- Added a procedure that eliminates duplication of identical routes in one table. Sometimes mvg.de sends up to four identical routes for one request.
- Cancelled routes are no longer displayed.
- The application correctly handles short network or remote server shutdowns using previously obtained data to display.
- Tram route icons now use the color assigned to them on official maps.
- Added and modified original Express Bus icon for presentation on low screen resolutions displays.

![Express Bus icon S v.2.0.1](https://raw.githubusercontent.com/serhuey/MVGLive/master/Images/ExpressBusIcon.png)


- All icons are stored in Svg format. There is no more quality loss after changing the scale factor. The colour of some icons changes programmatically with the colour of the font to which they relate. This is not a problem for vector icons.

![SVG icons v.2.0.1](https://raw.githubusercontent.com/serhuey/MVGLive/master/Images/6_SVG_Example.png)

- The default PT Sans font is stored as an internal resource and does not require installation on the system.
- All operations to receive data from the server are asynchronous.

## Prerequisites

- .NET Framework 4.6.1

## Built With

* [Microsoft Visual Studio Community 2019, v.16.4.6] (https://visualstudio.microsoft.com/)
* [AutoCompleteTextBox, v.1.1.0] (https://github.com/quicoli/WPF-AutoComplete-TextBox)
* [ColorPickerWPF, v.1.0.9] (https://github.com/drogoganor/ColorPickerWPF)
* [WriteableBitmapEx v.1.5.1] (https://github.com/reneschulte/WriteableBitmapEx)
* [Newtonsoft.Json v.13.0.2] (https://www.nuget.org/packages/Newtonsoft.Json) - Parsing the mvg.de response
* [Svg v.3.0.102] (https://github.com/vvvv/SVG) - Work with SVG graphics
* [Fizzler v.1.2.0] (https://github.com/atifaziz/Fizzler)
* [PT Sans font] (https://fonts.google.com/specimen/PT+Sans)
* [Gudea font] (https://fonts.google.com/specimen/Gudea)
* [Xara Photo & Graphic Designer v.16.3.0.57723] (https://www.magix.com/gb/photo-graphic/xara-photo-graphic-designer) - Vector icons drawing

## Authors

* **Sergei Grigorev** 

## Binaries

You can download the zipped install package here: 
(https://github.com/serhuey/MVGLive/blob/master/Deploy/MVGLiveSetup_2.0.1.7.zip)

## License

This project is licensed under the MIT License - see the [LICENSE](LICENSE) file for details

",3,3,2,0,transportation,"[munich, mvg, mvv, time-table, transportation]",00000
200,NjMetro-Price,NN708,N/A,https://github.com/NN708/NjMetro-Price,https://api.github.com/repos/NN708/NjMetro-Price,自动获取南京地铁各站点之间价格（票价表） Get Nanjing Metro fare table,"# NjMetro-Price
获取南京地铁各站点之间票价

## 使用方法
1. 下载并安装 **[Python 3](https://www.python.org/downloads/)**；
2. 安装 Python Requests 插件：
```command
pip install requests
```
3. 下载并运行 `price.py`：
```command
python price.py
```
4. 等待程序运行结束，票价表将以 CSV 格式保存在 `njmetro_price.csv` 中。",3,3,1,0,transportation,"[metro, nanjing, nanjing-metro, public-transport, public-transportation, subway, transit, transport, transportation]",00000
201,SanDaan,baddddddddd,N/A,https://github.com/baddddddddd/SanDaan,https://api.github.com/repos/baddddddddd/SanDaan,"🚌 An online navigation app for Android. Made for commuters, by commuters.","<div align=""center"">
  <a href=""https://raw.githubusercontent.com/baddddddddd/bourgeoisie/main/images/logo1_anim.gif"">
    <img src=""images/logo.png"" alt=""Logo"" width=""240"" height=""240"">
  </a>

  <h1 align=""center"">San Daan?</h1>

  <h3 align=""center"">
    🚕 A mobile app for commuters, by commuters. 🚕
  </h3>
  <p align=""center"">
    <b>CS-1202</b> <br>
    <a href=""https://github.com/VinnRe"">Capinpin, Kobe Andrew</a> <br>
    <a href=""https://github.com/oocim"">Cuarto, Mico Raphael</a> <br>
    <a href=""https://github.com/baddddddddd"">Jocson, Vladimir</a> <br>
    <a href=""https://github.com/Exuille"">Penuliar, Alexander Guile</a>
  </p>
  <br>
</div>

<details>
  <summary>Table of Contents</summary>
  <ol>
    <li>
      <a href=""#-introduction"">Introduction</a>
    </li>
    <li>
      <a href=""#-problem-statement"">Problem Statement</a>
    </li>
    <li><a href=""#-purpose"">Purpose</a></li>
    <li><a href=""#-objectives"">Objectives</a></li>
    <li><a href=""#-significance"">Significance</a></li>
    <li><a href=""#-features"">Features</a></li>
    <li><a href=""#-technical-requirements"">Technical Requirements</a></li>
    <li><a href=""#-scope-of-the-project"">Scope of the Project</a></li>
    <li><a href=""#uml-diagram"">UML Diagram</a></li>
    <li><a href=""#presentation"">Presentation</a></li>
    <li><a href=""#running-the-app"">Developer Section</a></li>
  </ol>
</details>

<br>

<hr class=""w-48 h-1 mx-auto my-4 bg-gray-100 border-0 rounded md:my-10 dark:bg-gray-700"">

## 🔍 Introduction

Commuting can be a stressful and time-consuming process, with traffic conditions and other unforeseen events often causing delays and frustration. Additionally, the transportation sector is a significant contributor to greenhouse gas emissions that contribute to climate change. To address these challenges, a navigation app for commuters will be developed.

This project aims to develop an app-based navigation system that will help commuters in Batangas City to travel efficiently. The app will provide accurate and up-to-date information on transportation schedules, traffic conditions, and directions, making it easier for users to plan their journeys and promoting sustainable transportation solutions.

Furthermore, the app-based navigation system can contribute to achieving the Sustainable Development Goals (SDGs), particularly SDG 11, which aims to make cities and human settlements more inclusive, safe, resilient, and sustainable, and SDG 13, which seeks to take urgent action to combat climate change and its impacts. By promoting sustainable transportation solutions and reducing greenhouse gas emissions, the app-based navigation system can make a valuable contribution towards achieving these global goals.

<hr class=""w-48 h-1 mx-auto my-4 bg-gray-100 border-0 rounded md:my-10 dark:bg-gray-700"">

## 🌏 Problem Statement

Despite the rapid advancement of technology and the information we have access to, many people still lack accessible information about sustainable transportation. Public transit remains the primary means of transportation for many, making it crucial to provide easily accessible information on options that support SDGs 11 and 13.

<br>
<a href=""https://sdgs.un.org/goals/goal11"">
  <img src=""images/xjirn7s3.png"" alt=""SDG 11"">
</a>

SDG 11 emphasizes the need for more inclusive and sustainable cities and communities, with a focus on enhancing the accessibility, security, and environmental friendliness of transportation systems. Sustainable transportation is key to achieving this goal, as it can help reduce traffic congestion, air pollution, and greenhouse gas emissions, while also improving citizens' quality of life and public health.

<br>
<a href=""https://sdgs.un.org/goals/goal13"">
  <img src=""images/y9zrlhaf.png"" alt=""SDG 13"">
</a>

SDG 13 aims to tackle climate change and its effects as soon as possible. Transportation is a significant source of greenhouse gas emissions, making the shift to more environmentally friendly means of transportation crucial to achieving this goal. Promoting sustainable transportation options can reduce the carbon footprint of transportation systems and mitigate the effects of climate change.

Currently, there is a lack of tools that use information about the schedules, routes, and usage of public transportation to offer environmentally friendly options to users. This restricts people from making informed decisions that align with global sustainable development goals. A technology that can effectively compile information on available public transportation options, analyze it, and offer consumers personalized recommendations for more environmentally friendly solutions is needed to address this problem. Such a tool would support the global effort to attain SDGs 11 and 13 by promoting environmentally friendly transportation and reducing carbon emissions.

<hr class=""w-48 h-1 mx-auto my-4 bg-gray-100 border-0 rounded md:my-10 dark:bg-gray-700"">

## 🌱 Purpose

The primary objective of this project is to help people with the developed mobile-based application that promotes the use of efficient and environmentally-friendly public transportation routes. This will be accomplished by providing accurate and real-time information on public transportation schedules, routes, and various options available to commuters. The app will enable users to easily search for transportation options based on their location, destination, and travel time preferences. Additionally, a community-driven system will be incorporated into the app, allowing users to share their preferred routes based on previous travels and preferences, and make them accessible to other users.

This system makes public transportation more accessible and efficient for users but also encourage more individuals to contribute to this feature and keep the project relevant over an extended period. By promoting sustainable transportation options, the project will contribute towards achieving the Sustainable Development Goals (SDGs), particularly SDG 11, which emphasizes making cities and human settlements more inclusive, safe, resilient, and sustainable. Ultimately, the mobile application will help people choose the best transportation options, reduce travel time and cost, and minimize the environmental impact of public transportation.

<hr class=""w-48 h-1 mx-auto my-4 bg-gray-100 border-0 rounded md:my-10 dark:bg-gray-700"">

## 🎯 Objectives

* 💽 Develop a data scraper that can collect and analyze data on public transportation schedules and routes from various sources.

* 📲 Integrate the collected data into a user-friendly mobile-based application that allows users to easily search for transportation options based on their current location, destination, and preferred travel time.

* 🗣️ Conduct user testing and feedback sessions to ensure that the platform is user-friendly and provides accurate and helpful information to users.

* ✔️ Continuously update the platform with the latest data on public transportation schedules and routes to ensure the accuracy of the recommendations provided to users. This will involve utilizing data from the users as well.

<hr class=""w-48 h-1 mx-auto my-4 bg-gray-100 border-0 rounded md:my-10 dark:bg-gray-700"">

## 👨‍👨‍👦‍👦 Significance

* 🎓 **Students**: Since they often rely on public transportation to get to school or college, making access to sustainable transportation options is especially critical. This program will serve to aid students in selecting environmentally responsible transportation options, identifying the most efficient routes, and reducing their carbon footprint by providing information on sustainable transportation choices. 

* 🚌 **Commuters**: They are significant contributors to carbon emissions, and providing them with information on environmentally friendly transportation options can help to mitigate their environmental impact. Additionally, commuting can be a stressful experience, and this program can alleviate some of that stress by offering personalized and efficient transit options.

* 🛫 **Tourists**: In unfamiliar cities, tourists frequently rely on public transportation to get around and may need to be made aware of more environmentally friendly options. This resource can assist tourists in choosing the most effective mode of transportation to get them to where they're going and minimize the impact of their travels on the environment.

* 🚕 **Public Transportation Drivers**: By providing recommendations for more efficient routes or forms of transportation, this program can also help public transportation drivers. They can help create more sustainable transportation systems by conserving fuel and optimizing their routes more efficiently.

<hr class=""w-48 h-1 mx-auto my-4 bg-gray-100 border-0 rounded md:my-10 dark:bg-gray-700"">

## 📋 Features

The mobile app have features that mainly aim to make commuting more convenient for commuters. Specifically, the app will have the following features:

* 📱 Available on Android devices

* 🛰️ Realtime location tracking using GPS

* 🗺️ Interactive map where users can mark destinations and check places

* ↗️ Route suggestions using only public transport such as jeepneys and buses

* 🚌 Contains information on transport vehicle routes and schedules

* 👨‍👩‍👧‍👦 Users can share transport routes and update transport vehicle schedules for other users to see

<hr class=""w-48 h-1 mx-auto my-4 bg-gray-100 border-0 rounded md:my-10 dark:bg-gray-700"">

## 💻 Technical Requirements

To speed up and improve the development of the mobile application, the developers will use various tools. These include:

* [**Python**](https://www.python.org/) - a high-level, general-purpose programming language. This is used to program the logic for the application.

* [**Kivy**](https://kivy.org/) - a cross-platform Python application development framework. This is used to create an application that can run in android.

* [**Flask**](https://flask.palletsprojects.com/) - a python web framework for developing static web pages. This is used to create the RESTful API for the project to handle all computation-heavy tasks.

* [**OpenStreetMap**](https://www.openstreetmap.org/) - a free, open geographic database updated and maintained by a community of volunteers via open collaboration. This is used to obtain map data such as names of places and routes through its API.

* [**MySQL**](https://www.mysql.com/) - an open-source relational database management system. This is used to store the information about the routes and places as well as the transport schedules shared by users.

* [**Docker**](https://www.docker.com/) - a software platform that allows developers to build, test, and deploy applications quickly. It ensures that the application running in one machine will run on all the other machines. This is used to containerize the API application so that the developers can deploy it to the server online.

* [**Linux**](https://www.linux.org/) - a family of open-source Unix-like operating systems based on the Linux kernel, an operating system kernel. This is used to run the API server locally and natively as well as for building the Android app from source.

* [**GitHub**](https://github.com/) - an Internet hosting service for software development and version control using Git. This is used to make collaboration more convenient for the developers of the project.

<hr class=""w-48 h-1 mx-auto my-4 bg-gray-100 border-0 rounded md:my-10 dark:bg-gray-700"">

## 🔭 Scope of the Project

The aim of the project is to develop an app-based navigation system to help commuters in Batangas City access real-time information on public transportation schedules, traffic conditions, and alternative route suggestions. The app will be accessible to both public and private transportation users and will feature a community-powered planning feature for users to customize their own transport route based on their preferences.

However, the accuracy of the data in the app, such as traffic and transportation schedules, is dependent on the reliability of the data sources. The app will only be available on Android devices, limiting the accessibility for some users who may not have access to this technology. Additionally, features such as lane guidance, street view, and voice command will not be included in the initial release of the app. These limitations will be taken into account during the development process, and efforts will be made to ensure the app is as reliable and accessible as possible.

<hr class=""w-48 h-1 mx-auto my-4 bg-gray-100 border-0 rounded md:my-10 dark:bg-gray-700"">

## UML Diagram
![UML Diagram](https://raw.githubusercontent.com/baddddddddd/bourgeoisie/main/images/UML-Diagram.png)

<hr class=""w-48 h-1 mx-auto my-4 bg-gray-100 border-0 rounded md:my-10 dark:bg-gray-700"">

## Presentation

Video Presentation YouTube Link: https://www.youtube.com/watch?v=4sIvN9gS_E4

<hr class=""w-48 h-1 mx-auto my-4 bg-gray-100 border-0 rounded md:my-10 dark:bg-gray-700"">

## Running the App
### Windows and Linux
1. Clone the repository in your machine
```sh
git clone https://github.com/baddddddddd/SanDaan.git
cd SanDaan
```
2. Download all the dependencies (we recommend using a virtual environment before proceeding to this step)
```sh
pip install -r requirements.txt
```
3. Run the app
```sh
python src/app/main.py -- --online
```
### Android 11 and older
1. Download the .apk file from our releases page. Check out our [latest release](https://github.com/baddddddddd/SanDaan/releases/latest).
2. Allow installation from unknown sources in your android device then install the .apk.
3. Open the app once to allow requested permissions then close.
4. Open the app again and enjoy :D

**Disclaimers**

* Android 12 and newer versions of Android is currently not supported by the latest release.
* The app is also not supported for Android devices that do not have GPS Location Tracking.
* If the app closes automatically or is stuck in the loading screen, this means that the server is turned off or sleeping. Please contact the developers to turn on or wake up the server. Additionally, you can wake the server up yourself by visiting [this link](https://sandaan-api.onrender.com/ping) and wait for the page to load.

## Waking up the server
If the app is stuck in the loading screen, chances are the server is turned off due to limited resources or is sleeping. 
Visit [this link](https://sandaan-api.onrender.com/ping) and wait for the page to load to wake up the server. 
If the page still failed to respond, the server is turned off. Please contact the developers in case this happens.

## Hosting the API server locally
Optionally, you can host the API server locally in your machine.

**Disclaimer**

Running the server requires having the environment variables to connect to our database. In order to obtain these environment variables, please contact the developers. Optionally, you can host your own database
with the database schema (src/api/db_schema.sql) that we provided.

### Linux
1. Clone the repository in your machine
```sh
git clone https://github.com/baddddddddd/SanDaan.git
```
2. Navigate to the API folder
```sh
cd SanDaan/src/api
```
3. Download all the dependencies (we recommend using a virtual environment before proceeding to this step)
```sh
pip install -r requirements.txt
```
4. Run the server using gunicorn
```sh
gunicorn api:app -b 0.0.0.0:5000 --timeout 300
```
### Docker and Non-Linux Machines
1. Download and install Docker in your machine.
2. Create the docker image.
```sh
docker build -t sandaan-api .
```
3. Run the docker image.
```sh
docker run -p 5000:5000 sandaan-api
```
### Connecting the app to the locally hosted server
1. Repeat the steps from [Running the App](#running-the-app) section except for the last step.
2. Run the app without the ""--online"" argument.
```sh
python src/app/main.py
```

## Building the Android app from source
Building the app from source is only supported on linux machines.
1. Download and install ""buildozer"" in your linux machine as well as all of its dependencies.
2. Build the .apk using buildozer
```sh
buildozer android debug
```
3. Navigate to the ""bin"" directory to find the .apk
",3,3,2,4,transportation,"[android, community, flask, kivy, mobile-app, navigation, online, python, transportation, travel]",00000
202,gotas,wasandev,N/A,https://github.com/wasandev/gotas,https://api.github.com/repos/wasandev/gotas,,"{'message': 'Not Found', 'documentation_url': 'https://docs.github.com/rest/repos/contents#get-repository-content'}",3,3,2,52,transportation,"[application, saas, service, thailand, tms, transportation]",00000
203,bike-sharing-analysis,manuelinfosec,N/A,https://github.com/manuelinfosec/bike-sharing-analysis,https://api.github.com/repos/manuelinfosec/bike-sharing-analysis,"analysis from bike-sharing services and identifying usage patterns, depending on multivariate conditions; hypothetical testing, visual and time series analysis are also applied.","# Bike Sharing Analysis

Bike sharing is a fundamental service, commonly used in the urban mobility sector. it is easily accessible (as no driving license is required to ride a bike), cheaper than normal car sharing service (since bike maintenance and insurance are substantially cheaper than automobile ones), and, finally, is often a fast way to commute within the city. Therefore, understanding the driving factors of bike sharing requests is essential for both companies and users.

From a company's perspective, identifying the expected bike demand in a specific area, within a specific time frame, can significantly increase revenue and customer satisfaction. Moreover, bike relocation can be optimized to further reduce operational costs. From a user's perspective, probable the most important factor is bike availability in the shortest wait time, which is obviously in alignment with the company's interests.

## Project Objective
In this project, I will analyze bike sharing data from Capital Bikeshare Washington, D.C., USA, for the period between January 1, 2011, and December 21, 2012. The data is aggregated on an hourly basis. This means that no initial and final locations of the individual rides are available, but only the total number of rides per hour. Nevertheless, additional meteorological information is available in the data, which could serve as a driving factor for identifying the total number of requests for a specific time frame (bad weather conditions could have a substantial impact on bike sharing demand).

Although the conducted analysis is related to bike sharing, the provided techniques could be easily transferred to other types of sharing business models, such as car or scooter sharing.

## Dataset
The original dataset is available at https://archive.ics.uci.edu/ml/datasets/Bike+Sharing+Dataset#.

According to the description of the original data, provided in the [Readme.txt](data/README.txt), the columns can be split into three main groups:
- **temporal features**: This contains information about the time at which the record was registered. This group contains the **dteday, season, yr, mnth, hr, holiday, weekday** and **workingday** columns.
- **weather related features**: This contains information about the weather conditions. The **weathersit, temp, atemp, hum** and **windspeed** columns are included in this group.
- **record related features**: This contains information about the number of records for the specific hour and date. This group included the **casual, registered** and **cnt** columns.

> Note: **instant** wasn't included in any of the aforementioned groups. The reason for this is that it is an index column and will be exluded from the analysis, as it does not contain any information relevant to this analysis.

### Preprocessing Details
1. `seasons`: each of the four divisions of the year
    - `1`: Winter
    - `2`: Spring
    - `3`: Summer
    - `4`: Fall.

2. `yr`: year
    - `0`: 2011
    - `1`: 2012

3. `weekday`: day of the week
    - `0`: Sunday
    - `1`: Monday
    - `2`: Tuesday
    - `3`: Wednesday
    - `4`: Thursday
    - `5`: Friday
    - `6`: Saturday

4. `hum`: humidity percentage
    - `0` - `100`

5. `windspeed`: registered windspeed
    - `0` - `67`

6. `weathersit`: currnet weather conditions
    - `1`: clear
    - `2`: cloudy
    - `3`: light snow or rain
    - `4`: heavy snow or rain


## Univariate Analysis
### REGISTERED VS. CASUAL USE ANALYSIS

![](figs/rides_distribution.png)
<p align=""center""><sub>Distribution of registered versus casual rides per hour</sub</p>

- Registered users perform way more rides than casual ones.
- Both distributions are skewed to the right, meaning for most of the entries in the data, zero or a small number of rides were registered.
- Every entry has quite a large number of rides (that is, higher than 800).


![](figs/rides_daily.png)<p align=""center""><sub>Number of rides daily for registered and casual customers</sub</p>

- The number of registered rides is always significantly higher than the number of casual rides per day.
- During the winter, the overal number of rides decreases (as bad weather and low tempreatures have a negative impact on ride sharing services)
- With the lot of variance in the time series above, it's necessary to smooth out the curves by taking the rolling mean and standard deviation of the two time series and plot those instead.

![](figs/rides_aggregated.png)
<p align=""center""><sub>Rolling mean and standard deviation of rides</sub</p>

- This way, visualisation is now possible for the average number of rides for a specific time period (also known as a **window**) but also the expected deviation from the mean.
- The values of the rolling mean and standard deviation at certain time instance is only computed from the last *window* entries in the time series (in our case, this is 7), and not from the entries of the whole series.

![](figs/weekday_hour_distributions.png)
<p align=""center"">Distribution of rides on a daily and hourly basis<sub></sub></p>

Working days:
- The highest number of rides for registered users takes place around 8 AM and 6PM. This is totally expected, as it is likely that most registered users use the bike sharing service for commuting.
- The casual usage of bike sharing services on working days is quite limited, as the plot shows.

Weekends:
- The distribution changes for both casual and registered users.
- The registered rides still outnumber the casual ones.
- Both distributions are almost uniformly distributed betwen the time interval of 11 AM to 6 PM.

It can be claimed that most of the usage of bike sharing services occurs during working days, right before and right after the standard working time (that is, 9 to 5).

### SEASONAL IMPACT ON RIDES
![](figs/season_hour_distributions.png)
<p align=""center""><sub>Distribution of rides on a seasonal level (hours of the day)</sub></p>

- Each season has a similar graph shape.
- There are fewer rides (registered and casual) during the winter. This makes sense, as fewer rides are likely to occur when the weather conditions are poor.

![](figs/season_weekday_distributions.png)
<p align=""center""><sub>Distribution of rides on a seasonal level (days of the week)</sub></p>

- There is a decreasing number of registered rides over the weekend (compared to the rest of the week), while the number of casual rides increases.

This could enforce an initial **hypothesis**, that is, that registered customers mostly use the bike sharing service for commuting (which could be the reason for the decreasing number of registered rides over the weeekend)

## Hypothetical Testing
This section performs a general conclusion about a population in the dataset based on analysis and measurements performed on a sample. In essence, it tries to address the question, *""Is a certain hypothetical value in line with the value obtained by direct measurements or not?""*

### HYPTOTHESIS TESTING ON REGISTERED RIDES
1. Formulate the null hyptotheis. 
  
    > Is there a significant difference between registered rides during working days and the weekend?

    Therefore, the null hypothesis is that the average number of rides for registered uses during the working days is same as the average number of rides during the weekdend. In other words:

    $ H_0 $: average registered rides over the weekday - average registered rides over weekends = 0.

    $ H_a $: average registered rides over the weekday - average registered rides over weekends $\neq$ 0.

2. After null and alternative hypothesis is established, collect data for the two groups. 

3. Perform the two-sample t-tests.

With a standard critical value of 0.05 (5% significant level), the p-value from the test returns 0.000 which is far below the critical value. As conclusion, the null hyptothesis can be rejected and initial observation (there is a statistically significan difference between the number of rides performed during the working days and weekends) is correct.

4. Plot the distribution of two samples:

![](figs/registered_rides_distribution.png)
<p align=""center""><sub>Registered Rides Distribution: workdays vs weekends</sub></p>

5. Perform the same type of hypothesis testing to validate the second assumption from the last section -- that is, casual users perform more rides during the weekend. 
    
    > Is the average number of rides during the working days the sasame as the average number of rides during the weekend, for casual users?

    Therefore, the alternative hypothesis will then result in a statistically significant difference in the average number of rides between the two groups.

After running tests, the p-value returned 0, which is strong evidence against the null hypothesis. Hence, casual customers also behave differently over the weekend (in this case, they bike sharing service more) as seen in the plot.

![](figs/casual_rides_distribution.png)
<p align=""center""><sub>Casual Rides Distribution: workdays vs weekends</sub></p>

## Correlation Testing
### ANALYSIS OF WEATHER-RELATED FEATURES

In this section, I'll focus on analysis of the group of features representing the weather conditions. My expectation is to observe a strong dependency of those features on the current number of rides, as bad weather can significantly influence bike sharing services. 

As most of the weather features seem to be continously distributed, the first and most common way to measure the relationship between two different continous variable is to measure their correlation.

Correlation is a statistic that measures the degree to which two variables move in relation to each other. It provides a numerical measure between -1 and 1.

![](figs/correlation_temp.png)
<p align=""center""><sub>Correlation between rides and temp</sub></p>


![](figs/correlation_atemp.png)
<p align=""center""><sub>Correlation between rides and atemp</sub></p>

Plotting **hum** and **windspeed** seperately:

![](figs/correlation_hum.png)
<p align=""center""><sub>Correlation between rides and hum</sub></p>

![](figs/correlation_windspeed.png)
<p align=""center""><sub>Correlation between rides and windspeed</sub></p>

It is observable that higher tempreatures have a positive impact on the number of rides. Note  that as the values in the **registered** colum are widely spread with respect to the different values in **temp**, there is a lower correlation compared to the **casual** column. The same pattern is observed in the **hum** visuals where the humidity level has a negative correlation with both types of rides.

This means that with a high level of humidity (mist or rain), customers will tend not to use the bike sharing service. Lastly, there is a minimal correlation between the number of rides and the weind speed (weak positive correlation).

![](figs/correlation_matrix.png)
<p align=""center""><sub>Correlation matrix between continous weather features and rides</sub></p>

## Time Series Analysis
### Stationarity
When studying time series, an important concept is the notion of stationarity. A time series is said to be *strongly stationary* if all aspects of its behavior do not change in time. It is possible to have a time a time series that is *weakly stationary*, that is, its mean, standaard deviation, and covariance are stationary with respect to time.

The **Augumented Dickey-Fuller stationarity test** can be used to identify stationarity in a time series. This is a statistical test in which the null hypothesis is that the time series is nonstationary. Hence when performing the test, a small p-value would be strong evidence against the time series being non-stationary.

![](figs/stationarity_test_registered.png)
<p align=""center""><sub>Stationarity test results for aggregated daily registered rides</sub></p>

![](figs/stationarity_test_casual.png)
<p align=""center""><sub>Stationarity test results for aggregated daily casual rides</sub></p>

From the performed tests, it is obvious that neither the moving average nor standard deviations are stationary. Furthermore, the Dickey-Fuller test returns values of 0.355 and 0.372 for **registered** and **casual** users, respectively. This is strong evidence that the time series is not stationary, and we need to process them in order to obtain a stationary one.

### Detrending a Time Series
A common way to detrend a time series and make it stationary is to subtract either its rolling mean or its last value, or to decompose it into a component that will contain its trend, seasonality, and resudial components.

![](figs/daily_registered_diff.png)
<p align=""center""><sub>Stationarity test results for aggregated daily registered rides (after detrend) </sub></p>

![](figs/daily_casual_diff.png)
<p align=""center""><sub>Stationarity test results for aggregated daily casual rides (after detrend) </sub></p>

Both techniques (rolling mean and last value shifting) returned a time sereies, which is stationary, according to the Dickey-Fuller test (0.00). Note that an interesting pattern occurs in the casual series: a rolling standard deviation exhibits a clustering effect, that is, periods in which the standard deviation is higher and periods which it is lower.

This effect is also commmon in certain fields (finance, for instance) and is also known as **volatility clustering**.

*A possible interpretation, relative to the data, is that the number of casual rides increses during the summer periods and drops during the winter.*


#### Time Series Decomposition

Another technique for detrending time series is a previously mentioned technique, **time series decomposition**. This involves breaking the time series into seperate components.

- *Trend component*: This component represents a long-term progression of the series. A trend component is present when there is a persistent increase or decrease in the series.

- *Seasonal component*: This component represents seasonality patterns in the data. A seasonal component persists when the data is influenced by certain seasonal factors  (for exxample, monthly, quarterly or yearly factors).

- *Residual component*: This componnet represents an irregular or noisy component. This component describes random fluctuation in the data, which are not captured by the other components. In general, this is the residual of the time series, that is, once the other components have bee removed.

The decomposition is *additive* if the following holds:

<img src=""https://latex.codecogs.com/gif.latex?Y_t%20%3D%20T_t%20&plus;%20S_t%20&plus;%20R_t"" />

The decomposition is *multiplicative* if,

<img src=""https://latex.codecogs.com/gif.latex?Y_t%20%3D%20T_t%20%5Ccdot%20S_t%20%5Ccdot%20R_t "" /> 

![](figs/registered_decomposition.png)
<p align=""center""><sub>Decomposition for registered rides</sub></p>

![](figs/casual_decomposition.png)
<p align=""center""><sub>Decomposition for casual rides</sub></p>

Testing residual for stationarity:

![](figs/registered_resid.png)
<p align=""center""><sub>Testing residuals for stationarity for registered rides</sub></p>

![](figs/casual_resid.png)
<p align=""center""><sub>Testing residuals for stationarity for casual rides</sub></p>

The residuals still satisfy the stationarity tests.

### Modelling Time Series

A common approach to modelling a time series is to assume that past observations somehow influence future ones. For instnace, customers who are satisfied by using the bike sharing service will more likely recommend it, producing, in this way, a positive impact on the service and a higher number of customers (any negative feedback has the opposite effect, reducing the number of customers). 

Hence, increasing the number of customers and the quality of the service increases the number of recommendations and, therefore, then number of new customers. In this way, a positive feedback loop is created, in which the current number of rides correlates with its past values.

#### ARIMA MODELS
**Autoregressive Integrated Moving Average (ARIMA)** models are a class of statistical models that try to explain the behaviour of a time series using its own past values. 

Being a class of models, ARIMA models are defined by a set of parameters **(p,d,q)** each one corresponsding to a different component of the ARIMA model.

<...snip...>

In practice, the ACF measures the complete correlation between the current entry, **{ $Y_t$ }** and its past entries, lagged by **k**. Note that when computing the ACF(k), the correlation between **$Y_t$** with all intermediate values (**$Y_{t-1},...,Y_{t-k}$)**, the PACF is often referred to, which only measures the impact of **$Y_{t-k}$** on $Y_t$

ACF and PACF are, in general, used to determin the order of integration when modelling a time series with an ARIMA model. For each lag, the correlation coefficient and level of significance are computed. In general, we aim at an integrated series, in which only the first few lags have correlation greater than the level of significance.",3,3,2,0,transportation,"[business-analytics, business-intelligence, data-analysis, data-science, exploratory-data-analysis, jupyter-notebook, python, transportation]",00000
204,Kuruyo,JohnnyLinnert,N/A,https://github.com/JohnnyLinnert/Kuruyo,https://api.github.com/repos/JohnnyLinnert/Kuruyo,Kuruyo is a little app that lets you know when your bus is coming.,"# Kuruyo
Kuruyo is a little app that lets you know when your bus is coming.


## Installation instructions

### Install Cocoapods
1. $ sudo gem install cocoapods
2. pod install (You may want to check your dependencies and see if they have a newer version you can add to your podfile)
",3,3,1,0,transportation,"[bus, ios-swift, transportation]",00000
205,cac-tripplanner-android,azavea,azavea,https://github.com/azavea/cac-tripplanner-android,https://api.github.com/repos/azavea/cac-tripplanner-android,GoPhillyGo Android app,"# cac-tripplanner-android

GoPhillyGo Android app

## Build status

[![CircleCI](https://circleci.com/gh/azavea/cac-tripplanner-android.svg?style=svg)](https://circleci.com/gh/azavea/cac-tripplanner-android)

## Setup

Copy API keys file for debug and release builds:

- `cp example/api_keys.xml app/src/debug/res/values/api_keys.xml`
- `cp example/api_keys.xml app/src/release/res/values/api_keys.xml`

Edit each to set the Android Maps key for both build flavors: release values can be found in 1Password; see the comments in the example file for directions on how to create a debug key.

Also edit to set the server API key for posting user flags.

Configure Firebase for the crash reporting plugin to function. The Firebase configuration file can be found under the [Firebase console](https://console.firebase.google.com) or 1Password. Copy the `google-services.json` Firebase configuration file to the `app` directory.

## Testing in Android Studio

**Setting up Your Emulators**

Emulators require an SDK and virtual device to run. To install a new SDK:

- Select the SDK Manager (the icon that looks like a box with a downward arrow) from the menu in the upper righthand corner of Android Studio
- Look to see that your target SDK version is installed; if not, check it and select ""apply"" then ""ok""

To create a new device:

- Select the Device Manager (the icon that shows the phone with the Android robot) next to the SDK Manager icon
- Select which device you would like to test, then click ""Next""
- Look for and download your targt API level as necessary, paying attention to any warnings that appear in the bottom righthand corner of the popup, then click ""Next""
- Verify the configuration and then select ""Finish""

Configure at least 3 emulators for the target, lowest supported, and most recent API levels of your release.

**Debugging**

- To run the app in debug mode, select Build&#8594;Select Build Variant and set the Active Build Variant to debug
- Select your desired emulator and then click the ""Play"" button in the top righthand menu to start the app
- If the app closes instead of starting, select the Debug icon in the top righthand menu. It will attempt to start the app itself and print out errors in the debug log in the bottom lefthand corner of the screen
- Once debugging is running, you can click around to see other errors
- You can view linting errors by selecting Code&#8594;Inspect Code and selecting the desire scope of inspection. The output from this inspection will appear in the ""Problems"" log in the bottom lefthand corner of the screen.
- After making changes to the code, you can select ""Apply Code Changes and Restart Activity"" (the icon with an arrow arching over the letter A) in the upper right menu

## Release

**Starting a Release**

- Run `git checkout master && git pull` and `git checkout develop && git pull`, then from `develop`, start a release branch with `git flow release start [version number]`
- If you haven't already, replace the values in `app/src/release/res/values/api_keys.xml` with the values from 1Password.
- Download the keystore file from the GoPhillyGo Android Upload Key entry in 1Password and move it into `app/`
- Copy and set the values in the `release.properties` and `fabric.properties` files to those in 1Password:
  - `cp example/release.properties app/release.properties`
  - `cp example/fabric.properties app/fabric.properties`
- Bump the version numbers in `versionCode` and `versionName` in `app/build.gradle`

**Signing the App Bundle**

- From inside Android Studio, select Build&#8594;Generate Signed Bundle/APK
- Select that you'd like to generate an Android App Bundle, then click next
- For the keystore path, select ""Choose existing"" and select the downloaded keystore file. Set the keystore password, key alias, and key (alias) password with the values from `release.properties`
- Uncheck ""export encrypted key for enrolling published apps in Google Play App Signing"" if necessary
- Select release for the destination folder, then select finish
- You can view the output of this process via the Event Log, which you can toggle in the bottom righthand corner

**Testing**

- Once the App Bundle has finished building, in Android Studio select Build&#8594;Select Build Variant
- Change the Active Build Variant in the left panel from debug to release and then click run
  - _Note:_ If you followed the Debugging instructions above, you'll need to uninstall the debug version of the app on the emulator before you can run the release version. Otherwise, you'll see ""inconsistent certificates"" errors.
- Test the app and make sure it works as expected, including exploring the map, saving an event to your calendar, getting directions to a place or event, and liking an event

**Releasing to Google Play for Testing**

- View the Google Play console from the AzaveaDev Google account and select Testing&#8594;Open testing from the left menu
- If the testing track is marked paused, start it, and then create a new release, otherwise just create a new release
- Upload the signed App Bundle and add the reason for the release in the release notes field, then click review
- Review to make sure everything looks good, then select start roll out. It will take a while (about 3-4 hours) for the test version to be ready; this will be reflected when the release status switches from ""In review"" to ""Available to unlimited testers""
- Invite users to test by sending them one of the links from Open testing&#8594;Testers&#8594;How testers join your test. They should open the link with the Google Account of their phone's Google Play account.

**Finishing the Release**

- Once the app has been throughly tested, from the open testing page, select Promote release&#8594;Production, review, and then select Start Rollout
- Use `git flow release finish [version number]` to merge the release branch back to master and delete the release branch. Add the reason for the release to the tag commit.
- Be sure to push the `master` and `develop` branches and `git push --tags`
- From the GitHub release page, click to 'Draft new release'
- Enter the tag for the new release and a description of what changed, then click publish
",3,3,13,16,transportation,"[android, bicycle, geofencing, philadelphia, transportation]",00000
206,macbar-next-bus,dbradleyfl,N/A,https://github.com/dbradleyfl/macbar-next-bus,https://api.github.com/repos/dbradleyfl/macbar-next-bus,Menubar app for monitoring bus arrivals :trolleybus: :point_right:,"![Bitmoji waiting for bus](https://render.bitstrips.com/v2/cpanel/10216977-112513564_19-s1-v1.png?transparent=1&palette=1)

# Macbar Next Bus
An electron menubar application for monitoring a specified transit stop from the [RestBus.info API](http://restbus.info/)

## Available Agencies
* AC Transit
* APL
* Asheville Redefines Transit
* Atlanta Streetcar - Beta
* Brockton Area Transit Authority
* Camarillo Area (CAT)
* Cape Cod Regional Transit Authority
* Chapel Hill Transit
* Charles River TMA - EZRide
* Charm City Circulator
* City College NYC
* City of Oxford
* City of West Hollywood
* Config Stuff
* CyRide
* DC Circulator
* DC Streetcar
* 2Downtown Connection
* Dumbarton Express
* East Carolina University
* Escalon eTrans
* Fairfax (CUE)
* Foothill Transit
* Fort Worth The T
* Glendale Beeline
* Gold Coast Transit
* Indianapolis International Airport
* Jacksonville Transportation Authority
* Los Angeles Metro
* Los Angeles Rail
* MBTA
* Massachusetts Institute of Technology
* Moorpark Transit
* Nova Southeastern University
* Omnitrans
* Palos Verdes Transit
* Pensacola Beach (SRIA)
* Portland Streetcar
* Prince Georges County
* RTC RIDE, Reno
* Radford Transit
* Roosevelt Island
* Rutgers Univ. Newark College Town Shuttle
* Rutgers University
* SEPTA
* San Francisco Muni
* Seattle Streetcar
* Simi Valley (SVT)
* Societe de transport de Laval
* Sonoma County Transit
* Thousand Oaks Transit (TOT)
* Toronto Transit Commission
* Unitrans ASUCD/City of Davis
* University of California San Francisco
* University of Maryland
* Ventura Intercity (VCTC)
* Western Kentucky University
* Winston-Salem
* York College

## Setup ""open on Mac startup""
* Open settins
* Click ""Users & Groups""
* Click ""Login Items""
* Click ""+""
* Select ""Macbar Next Bus"" and click ""Add""
* Macbar Next Bus will be in your menubar every startup
",2,2,3,1,transportation,"[electron, menubar, photonkit, react, transportation]",00000
207,bikelanes.wtf,uncompiled,N/A,https://github.com/uncompiled/bikelanes.wtf,https://api.github.com/repos/uncompiled/bikelanes.wtf,Bike lanes are for 🚲and not for 🚘,"# bikelanes.wtf

> Bike lanes are not for cars.

This is a progressive web app that lets users notify the municipal government
(and other people) about cars (and other things) parked in bike lanes.

## client

This front-end is a client-side React app, so this can be deployed anywhere
you'd deploy a static website.

To run the front-end locally:

- `npm install` to install dependencies
- `npm start` to run the app on http://localhost:3000

## server

The backend is a JavaScript function that runs via Node / Serverless.

To run the backend locally:

- `npm install` to install dependencies
- `serverless offline start` to run the backend on http://localhost:4000

### Configuring Environment Variables

To use the Twitter & LocationIQ integration, you'll have to store some keys in AWS SSM.

You'll need to configure the following keys:

- CONSUMER_KEY
- CONSUMER_SECRET
- ACCESS_TOKEN_KEY
- ACCESS_TOKEN_SECRET
- LOCATIONIQ_TOKEN

You can do this using the `aws` CLI:

```
aws ssm put-parameter --name /bikelanes.wtf/<KEY> --type String --value <VALUE>
```

### Local Development

For local development, you'll need to set some environment variables.

I recommend using [`direnv`](https://github.com/direnv/direnv).

To use direnv, create a `.envrc` file in the root which contains the following:

```
export CONSUMER_KEY=<YOUR CONSUMER KEY>
export CONSUMER_SECRET=<YOUR CONSUMER SECRET>
export ACCESS_TOKEN_KEY=<YOUR ACCESS TOKEN KEY>
export ACCESS_TOKEN_SECRET=<YOUR ACCESS TOKEN SECRET>
export LOCATIONIQ_TOKEN=<YOUR LOCATIONIQ TOKEN>
```

Run `direnv allow` to allow direnv to automatically set these environment variables
when you're in this working directory.

# License

The MIT License
",2,2,2,25,transportation,"[bicycle-infrastructure, bicycles, bicycling, transportation]",00000
208,Torino-Lione,pitmonticone,N/A,https://github.com/pitmonticone/Torino-Lione,https://api.github.com/repos/pitmonticone/Torino-Lione,A website aggregating of the most important Torino-Lione references. ,"[![DOI](https://zenodo.org/badge/200910255.svg)](https://zenodo.org/badge/latestdoi/200910255)

## TAV Torino-Lione

Visit the [website](https://pitmonticone.github.io/Torino-Lione/).

<br><br>

**Copyright 2020 Pietro Monticone**

[![License](https://img.shields.io/badge/License-Apache%202.0-blue.svg)](https://opensource.org/licenses/Apache-2.0)

Licensed under the Apache License, Version 2.0 (the ""License"");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an ""AS IS"" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
",2,2,3,0,transportation,"[cba, cost-benefit, economics, hsr, transportation]",00000
209,Eco-Wheel,Vasanthakumar95,N/A,https://github.com/Vasanthakumar95/Eco-Wheel,https://api.github.com/repos/Vasanthakumar95/Eco-Wheel,Simple e-hailing Android app using: -Android studio -PHP/MySql & Slim framework Api -Amazon AWS-ec2 instance for hosting,"# Eco-Wheel
- Simple e-hailing Android app using
- Android studio 
- PHP & MySql
- Slim framework Api 
- Amazon AWS-ec2 instance for hosting

# Driver UI
<img src = ""app%20screen%20shot/driver/1.png"" width =""200"" /> <img src = ""app%20screen%20shot/driver/notavailablefortrip.png"" width =""200"" /> <img src = ""app%20screen%20shot/driver/availablefortrip.png"" width =""200"" /> <img src = ""app%20screen%20shot/driver/trip_found.png"" width =""200"" /> <img src = ""app%20screen%20shot/driver/picked_up_passenger.png"" width =""200"" /> <img src = ""app%20screen%20shot/driver/enroute_destination.png"" width =""200"" />

# Passenger UI
<img src = ""app%20screen%20shot/passenger/1.png"" width =""200"" /> <img src = ""app%20screen%20shot/passenger/available%20drivers.png"" width =""200"" /> <img src = ""app%20screen%20shot/passenger/search_destination.png"" width =""200"" /> <img src = ""app%20screen%20shot/passenger/destination_pinnned.png"" width =""200"" /> <img src = ""app%20screen%20shot/passenger/enroute_destination.png"" width =""200"" /> <img src = ""app%20screen%20shot/passenger/driver_found.png"" width =""200"" />
",2,2,0,0,transportation,"[amazon-ec2-instance, android-application, android-studio, e-hailing, google-maps-api, java, php, restful-api, slim-framework, transportation]",00000
210,Torino-Lione,pitmonticone,N/A,https://github.com/pitmonticone/Torino-Lione,https://api.github.com/repos/pitmonticone/Torino-Lione,A website aggregating of the most important Torino-Lione references. ,"[![DOI](https://zenodo.org/badge/200910255.svg)](https://zenodo.org/badge/latestdoi/200910255)

## TAV Torino-Lione

Visit the [website](https://pitmonticone.github.io/Torino-Lione/).

<br><br>

**Copyright 2020 Pietro Monticone**

[![License](https://img.shields.io/badge/License-Apache%202.0-blue.svg)](https://opensource.org/licenses/Apache-2.0)

Licensed under the Apache License, Version 2.0 (the ""License"");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an ""AS IS"" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
",2,2,3,0,transportation,"[cba, cost-benefit, economics, hsr, transportation]",00000
211,Eco-Wheel,Vasanthakumar95,N/A,https://github.com/Vasanthakumar95/Eco-Wheel,https://api.github.com/repos/Vasanthakumar95/Eco-Wheel,Simple e-hailing Android app using: -Android studio -PHP/MySql & Slim framework Api -Amazon AWS-ec2 instance for hosting,"# Eco-Wheel
- Simple e-hailing Android app using
- Android studio 
- PHP & MySql
- Slim framework Api 
- Amazon AWS-ec2 instance for hosting

# Driver UI
<img src = ""app%20screen%20shot/driver/1.png"" width =""200"" /> <img src = ""app%20screen%20shot/driver/notavailablefortrip.png"" width =""200"" /> <img src = ""app%20screen%20shot/driver/availablefortrip.png"" width =""200"" /> <img src = ""app%20screen%20shot/driver/trip_found.png"" width =""200"" /> <img src = ""app%20screen%20shot/driver/picked_up_passenger.png"" width =""200"" /> <img src = ""app%20screen%20shot/driver/enroute_destination.png"" width =""200"" />

# Passenger UI
<img src = ""app%20screen%20shot/passenger/1.png"" width =""200"" /> <img src = ""app%20screen%20shot/passenger/available%20drivers.png"" width =""200"" /> <img src = ""app%20screen%20shot/passenger/search_destination.png"" width =""200"" /> <img src = ""app%20screen%20shot/passenger/destination_pinnned.png"" width =""200"" /> <img src = ""app%20screen%20shot/passenger/enroute_destination.png"" width =""200"" /> <img src = ""app%20screen%20shot/passenger/driver_found.png"" width =""200"" />
",2,2,0,0,transportation,"[amazon-ec2-instance, android-application, android-studio, e-hailing, google-maps-api, java, php, restful-api, slim-framework, transportation]",00000
212,blekingetrafiken,AlexGustafsson,N/A,https://github.com/AlexGustafsson/blekingetrafiken,https://api.github.com/repos/AlexGustafsson/blekingetrafiken,"A fully async API written in ES6 for retrieval of public transport information, schedules and routes in Blekinge","# Blekingetrafiken API for NodeJS
### A fully async API written in ES6 for retrieval of public transport information, schedules and routes in Blekinge
***
![npm badge](https://img.shields.io/npm/v/blekingetrafiken.svg)

### Setting up

##### Installing

```
npm install blekingetrafiken
```

##### Quickstart

```JavaScript
const api = require('blekingetrafiken');

// Fetch departures
api.fetchDepartures()
.then(departures => {
  const departure = departures[0];
  console.log(`A transportation of type '${departure.type}' (line ${departure.name}) is departing ${departure.onSchedule ? 'on schedule' : 'later than planned'} from stop point ${departure.stopPoint}`);
});
```

```
> A transportation of type 'Stadsbuss' (line 6) is departing on schedule from stop point A
```

### Documentation

##### API

```JavaScript
  const api = require('blekingetrafiken');
  api.fetchDepartures(from);
  api.searchJourneys(from, to, options);
  api.searchPoints(query);
  api.searchStops(query);
  api.fetchInfo();
  api.searchTimetable(line);
```

###### `fetchDepartures`

```JavaScript
  const from = 'Kungsmarken';
  const departures = await api.fetchDepartures(from);
  console.log(departures);
```

```
[
  {
    name: '1',                           // The name of the bus (line)
    run: 26,                             // The current run the bus is on
    type: 'Stadsbuss',                   // The type of transportation - see below
    modeId: NaN,                         // The transportation mode - see below
    modeName: 'Stadsbuss/tätortstrafik', // Mode name
    trainNumber: 0,                      // Similar to name, applicable to trains
    towards: 'Lyckeby',                  // The current direction of the bus
    operatorId: 13,                      // The id of the current operator
    operatorName: null,                  // The operator name (usually Bergkvarabuss)
    onSchedule: true,                    // Whether or not the transportation is on schedule
    stopPoint: 'B',                      // At what point the bus will stop. Usually A or B
    realTime: {
      deviation: NaN,                    // Amount of delay in minutes
      effect: null                       // The effect of the delay - see below
    }
  }
  ...
]
```

###### Transportation types

```
  Stad (Stadsbuss)
  Land (Regionbuss),
  K-buss (Kustbussen),
  Ö-Tåg (Öresundståg),
  Båt,
  P-Tåg(Pågatåg),
  Tåg(Krösatåg)
```

###### Transportation modes

Some sort of yet to be determined bitmask of selected transportation modes (biking / walking / taking the bus).

Known values:

* 1, stadsbuss
* 2, regionbuss
* 4095, every possible transportation mode

###### Realtime effects

Known values:

* 'NONE', the usual effect. No delay
* 'PASSED', the transportation has passed the stop
* 'CRITICAL', the transportation is heavily delayed
* '', no known effect

##### `searchJourneys`

```JavaScript
  const from = 'Kungsmarken';
  const to = 'Kungsplan';
  const journeys = await api.fetchJourneys(from);
  console.log(departures);
```

```
[
  {
    departure: '2017-10-31T20:12:00',
    arrival: '2017-10-31T20:24:00',
    walkDistance: { departure: 0, arrival: 0 },
    changes: 0,
    zones: 1,
    zoneName: 'Karlskrona tätort',
    guaranteed: true,
    co2Factor: 10,
    co2Value: 0,
    prices: { adult: 24, youth: 14, family: 43 },
    discountedPrices: { adult: 19.2, youth: 11.2, family: 34.4 },
    routeLinks: [],
    distance: 5389,
    from:
    { id: '10001067',
    name: 'Kungsmarken A-huset',
    type: 'stop',
    coordinates: [Object],
    distance: NaN },
    to:
    {
      id: '10001001',
      name: 'Kungsplan Karlskrona',
      type: 'stop',
      coordinates: [Object],
      distance: NaN
    }
  }
]
```

##### `searchPoints`

```JavaScript
  const query = 'Park';
  const filter = ['point of interest']
  const points = await api.searchPoints(query, { filter });
  console.log(points);
```

```
[
  {
    id: '10001601',
    name: 'Karlskrona centrum Parkgatan',
    type: 'stop',
    coordinates: {
      latitude: 6226117,
      longitude: 1486398
    },
    distance: NaN
  },
  {
    id: '10001149',
    name: 'Parkvägen Jämjö',
    type: 'stop',
    coordinates: {
      latitude: 6229271,
      longitude: 1502720
    },
    distance: NaN
  }
  ...
]
```

##### `searchStops`

```JavaScript
  const query = 'Campus Gräsvik';
  const stops = await api.searchStops(query);
  console.log(stops);
```

```
[
  {
    id: '10001927',
    name: 'Campus Gräsvik',
    type: 'stop',
    coordinates: {
      latitude: 6228063,
      longitude: 1486813
    },
    distance: NaN
  }
]
```

##### `fetchInfo`

```JavaScript
  const info = await api.fetchInfo();
  console.log(info);
```

```
Vägarbete på väg 22
```

##### `searchTimetable`

```JavaScript
  const query = '1';
  const timetables = await api.searchTimetable(query);
  console.log(timetables);
```

```
[
  {
    type: 'Stad',
    name: '2',
    header: 'Jämjö - Lyckeby - Centrum',
    validFrom: '2017-08-21',
    validTo: '2018-06-17',
    url: '[removed url to pdf file]'
  },
  ...
]
```

### Contributing

Any contribution is welcome. If you're not able to code it yourself, perhaps someone else is - so post an issue if there's anything on your mind.

###### Development

Clone the repository:
```
git clone https://github.com/AlexGustafsson/blekingetrafiken.git && cd blekingetrafiken
```

Set up for development:
```
npm install
```

Follow the conventions enforced:
```
npm test
npm run-script lint
npm run-script coverage
npm run-script check-duplicate-code
```

### Disclaimer

_Although the project is very capable, it is not built with production in mind. Therefore there might be complications when trying to use the API for large-scale projects meant for the public. The API was created to easily fetch public transport information, schedules and routes in Blekinge programmatically and as such it might not promote best practices nor be performant. This project is not in any way affiliated with Blekingetrafiken or Blekinge._
",2,2,2,7,transportation,"[api, api-client, blekinge, blekingetrafiken, node, transport-information, transportation]",00000
213,fuzzy-highway-bottleneck-python,tisljaricleo,N/A,https://github.com/tisljaricleo/fuzzy-highway-bottleneck-python,https://api.github.com/repos/tisljaricleo/fuzzy-highway-bottleneck-python,Python-based code for estimation of highway bottleneck probability using speed transition matrices. ,"# fuzzy-highway-bottleneck-python :articulated_lorry:
Python-based code for estimation of highway bottleneck probability using speed transition matrices.  
**Full paper with detailed explanation will be available soon!** 

## Info
Bottlenecks on the highways are caused by two types of congestion: 1) recurrent ones, which happens in the rush-hours due to a large number of commuters, and 2) non-recurrent ones that happen after some unexpected event like a traffic accident or sudden breaks. Bottlenecks are formally defined as a decrease in the capacity of the highway due to a congestion event.  
This code implements the fuzzy method for estimation of the highway bottleneck probability occurrence using a novel traffic data model called [Speed Transition Matrix (STM)](https://medium.com/analytics-vidhya/speed-transition-matrix-novel-road-traffic-data-modeling-technique-d37bd82398d1). The method is based on a Python package for fuzzy inference systems [simpful](https://github.com/aresio/simpful) and implemented class for STM computation.  
The data is proveded in the file `TrafData.pkl`. It contains the routes of the vehicles on a highway simulated in the [SUMO simulator](https://www.eclipse.org/sumo/). 

## Requirements
1. Install Python (3.8 recommended) [Download link](https://www.python.org/downloads/).
2. Install required packages from `requirenments.txt` using [virtual environment](https://docs.python.org/3/tutorial/venv.html).

## More info
Medium article [https://towardsdatascience.com/using-fuzzy-logic-for-road-traffic-congestion-index-estimation-b649f8ddede1](https://towardsdatascience.com/using-fuzzy-logic-for-road-traffic-congestion-index-estimation-b649f8ddede1).

## Cite as
Text:  
Tišljarić, Leo, Filip Vrbanić, Edouard Ivanjko, and Tonči Carić. 2022. ""Motorway Bottleneck Probability Estimation in Connected Vehicles Environment Using Speed Transition Matrices"" Sensors 22, no. 7: 2807. https://doi.org/10.3390/s22072807

.bib:  
@Article{s22072807,
AUTHOR = {Tišljarić, Leo and Vrbanić, Filip and Ivanjko, Edouard and Carić, Tonči},
TITLE = {Motorway Bottleneck Probability Estimation in Connected Vehicles Environment Using Speed Transition Matrices},
JOURNAL = {Sensors},
VOLUME = {22},
YEAR = {2022},
NUMBER = {7},
ARTICLE-NUMBER = {2807},
URL = {https://www.mdpi.com/1424-8220/22/7/2807},
PubMedID = {35408421},
ISSN = {1424-8220},
DOI = {10.3390/s22072807}
}

## Contact and connect
[Leo Tisljaric](https://www.linkedin.com/in/leo-tisljaric-28a56b123/)

",2,2,1,0,transportation,"[bottleneck, congestion-detection, fuzzy-logic, highway-network, python, traffic-bottleneck, transportation]",00000
214,12740-Ridecomfort-Pittsburgh,korawichkavee,N/A,https://github.com/korawichkavee/12740-Ridecomfort-Pittsburgh,https://api.github.com/repos/korawichkavee/12740-Ridecomfort-Pittsburgh,Ride comfort of different modes of transportation in Pittsburgh,"# 12740-Ridecomfort-Pittsburgh

Bus Ride Comfort 

Ride Comfort of different modes of transportation in Pittsburgh
You can click this link to the report page
https://korawichkavee.github.io/12740-Ridecomfort-Pittsburgh/ (Figures might not displayed properly)

OR
https://github.com/korawichkavee/12740-Ridecomfort-Pittsburgh/blob/gh-pages/index.md
(Figures are shown)

*THIS IS NOT THE GH-PAGE*

**THERE ARE 2 BRANCHES**

List of member.

Albin Wells /EESS - Rounce

Guillermo Montero /MMC - Pozzi

Jacobo Kirsch Tornell /EESS - Samaras

Korawich Kavee  /AIS - Finger

",2,2,1,1,transportation,"[carnegie-mellon-university, civil-engineering, comfortable-motion, raspberry-pi, transportation]",00000
215,gotem,soumildatta,N/A,https://github.com/soumildatta/gotem,https://api.github.com/repos/soumildatta/gotem,A medical transportation web app built with ReactJS and Firebase ,"<!-- # Getting Started with Create React App -->
# Gotem
Gotem is a medical transportation system servicing the Oxford, Mississippi area. It is a convenient and accessible application that allows users to receive efficient transportation specialized for hospital and clinical visits. The vision of this app, Gotem, is to make it possible for people who are not able to make such trips on their own to be able to gain access to medical services, which many consider a basic human right. <br/><br/>
This website is hosted at this link → [Gotem](https://project-4cb84.web.app/)

## Development Environment
This project is tested to work on Windows, Linux, and MacOS operating systems that has NodeJS installed. To install NodeJS, proceed to [this link](https://nodejs.org/en/) and download the package for your OS. <br/> The developers of this web app utilized the Visual Studio Code editor for development, and Google Chrome for viewing and testing.

## Run Gotem on your local machine
The steps to set up this web application to run on your local machine is simple:
1. Install Node.js from [this link](https://nodejs.org/en/) for your computer
2. Clone this repository to your local machine. To do this, run this command on your terminal:
##### `git clone https://git.cs.olemiss.edu/387remote/gotem.git`
3. Enter the project directory through a terminal to run the next command.
4. Install the dependencies for this app with:
##### `npm install`

5. After this, you are ready to run the application on your computer with this command (in the project directory):
##### `npm start`  <br/>
Open [http://localhost:3000](http://localhost:3000) to then view it in the browser. <br/>
**Note**: This project is meant to be run on Google Chrome or Mozilla Firefox browsers.
<br/><br/>
This project was completed as a group semester assignment for CSCI 387 (Software Development)
",2,2,2,0,transportation,"[medical, transportation]",00000
216,train-times,benbristow,N/A,https://github.com/benbristow/train-times,https://api.github.com/repos/benbristow/train-times,CLI (Ruby) script to read National Rail train arrivals/departures,"# Train Times

[![Build Status](https://travis-ci.org/benbristow/train-times.svg?branch=master)](https://travis-ci.org/benbristow/train-times)

![image](https://user-images.githubusercontent.com/1159378/36936548-f60a8ae0-1efe-11e8-8cec-afec838605c9.png)

```
➜  train-times git:(master) ✗ tt departures pyg glc
+-------+-----------+-------+-------------------------+-----------------------+--------------------------+
| Time  | Estimated | Plat. | Origin                  | Destination           | ID                       |
+-------+-----------+-------+-------------------------+-----------------------+--------------------------+
| 17:41 | On time   | 3     | Ayr (AYR)               | Glasgow Central (GLC) | +OU53q+tcoD3unG+zNC/Fg== |
| 17:43 | On time   | 1     | Gourock (GRK)           | Glasgow Central (GLC) | RHYNXEhUBkZTytzQIhXqpA== |
| 17:52 | On time   | 1     | Gourock (GRK)           | Glasgow Central (GLC) | h+ZNl7DkOyPK0Xh0uW5Nog== |
| 17:55 | On time   | 3     | Ayr (AYR)               | Glasgow Central (GLC) | mMgeaMkpVrMbrj27nYA82Q== |
| 17:59 | On time   | 3     | Ardrossan Harbour (ADS) | Glasgow Central (GLC) | 3WA6yAC7OCVOcHEp39a/Sg== |
| 18:06 | On time   | 3     | Ayr (AYR)               | Glasgow Central (GLC) | 5UZrjQvfBjnOJKzwMcLh7A== |
| 18:18 | On time   | 1     | Gourock (GRK)           | Glasgow Central (GLC) | OKjbKQuaFc31q81Lxajg2w== |
| 18:25 | On time   | N/S   | Largs (LAR)             | Glasgow Central (GLC) | P136FWkdE5FC2DyPlvQtLQ== |
| 18:31 | On time   | N/S   | Ayr (AYR)               | Glasgow Central (GLC) | uyRcHyoQYn/pbEtToAVk2w== |
| 18:34 | On time   | N/S   | Wemyss Bay (WMS)        | Glasgow Central (GLC) | noxFjTZI3yPyhjCP3AWk1w== |
| 18:40 | On time   | N/S   | Ardrossan Harbour (ADS) | Glasgow Central (GLC) | bF6dDmjLsW3zRVOFaZlV6w== |
| 18:43 | On time   | N/S   | Gourock (GRK)           | Glasgow Central (GLC) | PREao7qK2Bn2WGhdhZwB8Q== |
| 18:52 | On time   | N/S   | Gourock (GRK)           | Glasgow Central (GLC) | St/sxPjHFSrikKCiHktmyg== |
| 18:55 | On time   | N/S   | Ayr (AYR)               | Glasgow Central (GLC) | 1dfvdfXuPUsOg3kAi4s/nw== |
| 19:01 | On time   | N/S   | Ayr (AYR)               | Glasgow Central (GLC) | doTivelgvl9tpA1vIkp+Ww== |
+-------+-----------+-------+-------------------------+-----------------------+--------------------------+
```

```
➜  train-times git:(master) ✗ tt details noxFjTZI3yPyhjCP3AWk1w==
+------------------------------+-----------+-----------+
| Station                      | Scheduled | Estimated |
+------------------------------+-----------+-----------+
| Wemyss Bay (WMS)             | 17:51     | 17:51     |
| Inverkip (INP)               | 17:55     | 17:55     |
| IBM (IBM)                    | 18:05     | 18:05     |
| Branchton (BCN)              | 18:08     | 18:08     |
| Drumfrochar (DFR)            | 18:10     | 18:10     |
| Whinhill (WNL)               | 18:13     | 18:13     |
| Port Glasgow (PTG)           | 18:18     | 18:18     |
| Bishopton (BPT)              | 18:27     | 18:27     |
| Paisley Gilmour Street (PYG) | 18:33     | 18:33     |
| Glasgow Central (GLC)        | 18:44     | 18:44     |
+------------------------------+-----------+-----------+
```

## What?

CLI (Ruby) script to read National Rail train arrivals/departures.

Made this for myself, but putting it on here for anyone who finds this sort of thing fun/useful.

Also a basic demonstration of using the rather confusing OpenLDBW SOAP API with Ruby.

## Get Started

You need an OpenLDBW token from National Rail, register here:

https://realtime.nationalrail.co.uk/OpenLDBWSRegistration/Registration

You should have a new version of Ruby (2.5.0 recommended) and Bundler installed.

```
git clone https://github.com/benbristow/train-times.git
cd train-times
echo ""NATIONAL_RAIL_TOKEN=your-token-here"" > .env
bundle install
chmod +x main.rb
./main.rb
```

## Usage

For all stations you'll need to know the corresponding CRS code (3 letter character code for the station). You can find these easily on something like https://www.trainline.com.

e.g.

GLC = Glasgow Central
PYG = Paisley Gilmour Street

### Departures

```
./main.rb departures ORIGIN [DESTINATION]
```

* ORIGIN: Where the train is departing from

* DESTINATION (optional - leave blank for anywhere): Where the train is going - this can be anywhere the train stops down the line

* `-t --terminating` - Show only trains that are terminating at the destination.

### Arrivals

```
./main.rb arrivals ARRIVING [FROM]
```

* ARRIVING: Where the train is arriving at

* FROM (optional - leave blank for all): Where the train is coming from before it arrives - this can also be anywhere the train stops down the line

### Service details

```
./main.rb details SERVICE_ID
```

* SERVICE_ID: The ID of the service. This can be retrieved from departures/arrivals.

### Help

```
./main.rb --help
```

## Run from anywhere

Easiest way to run this script from any directory is to create an alias. Add an alias to your `.bashrc` or `.zshrc` like:

```
alias tt=""ruby ~/scripts/train-times/main.rb""
```

Then restart your terminal. You should then be able to do:

```
tt departures GLC PYG
```

Cool, huh?

## Running Tests

Tests use Rspec as a framework. To run the tests run:

```
rspec
```

from the root folder
",2,2,2,1,transportation,"[command-line, ruby, trains, transportation, united-kingdom]",00000
217,Bucharest-Constanta-GTFS-Realtime-Vehicle-Positions,FlashWebIT,FlashWebIT,https://github.com/FlashWebIT/Bucharest-Constanta-GTFS-Realtime-Vehicle-Positions,https://api.github.com/repos/FlashWebIT/Bucharest-Constanta-GTFS-Realtime-Vehicle-Positions,Convert public GPS data for the București or Constanța cities to industry-standard GTFS-Realtime protocol buffer,"# Bucharest & Constanța GTFS Realtime Vehicle Positions
Convert public GPS data for the Iași city to industry-standard GTFS-Realtime protocol buffer

1. Clone and change directory
```
git clone https://github.com/FlashWebIT/Bucharest-Constanta-GTFS-Realtime-Vehicle-Positions.git
cd Iasi-GTFS-Realtime-Vehicle-Positions
```
2. Install deps
```
npm install
```
3. Run
```
node .
```
4. Test
```
node tester.js
```
5. Daemonize? Use forever, nodemon or screen to run in background.

Protocol buffer GTFS Realtime feed is accessible at http://localhost:3000/positions

![Screenshot](screen.png ""Screenshot"")

You can plug your favourite transit app to that - OpenTripPlanner, etc.

### To do
- [ ] Calculate speed between requests to complete missing field
",2,2,2,1,transportation,"[bucharest, constanta, gtfs-realtime, gtfs-realtime-data, open-data, protocol-buffer, transportation]",00000
218,airline-ranking,aruntom,N/A,https://github.com/aruntom/airline-ranking,https://api.github.com/repos/aruntom/airline-ranking,This is a brief Insights on causes of flight delay based on Viz and implementation of Airline carrier ranking system based on data of flights to and from Texas ( Bureau of Transportation ) during Jan 2017. Using PandaSQL ( SQL+ Python),"# Airline Ranking - TEXAS Jan 2017

Insights on causes of flight delays and implementation of Airline carrier ranking (quality of service) system based

on data on Domestic flights to and from Texas from Bureau of Transportation during Jan 2017.

Using Python, Pandas, PandaSQL, Geoplotlib, Matplotlib, Seaborn, etc.

This is a primitive study on the topic for academic purpose.

[Goto Code folder for SQL Queries and visualization in Python](code)

## DATASET AND ATTRIBUTES

Our dataset includes 80 fields spanning over 11 categories which are,

- Time Period
- Airline
- Origin
- Destination
- Departure Performance
- Arrival Performance
- Cancellation and Diversion
- Flight Summaries
- Cause of delay
- Gate return information at origin airport
- Diverted airport information

From the original Data set, we have extracted data that are significant for our analysis,

after that the reduced data set contained, 80988 Rows and 26 Fields.

## FIELDS

<table align=""center"">
	<tr align=""center"">
		<td>Attribute Name</td>
		<td>Description</td>
	</tr>
	<tr align=""center"">
		<td>FL_DATE</td>
		<td>Flight Date (MM/DD/YYYY)</td>
	</tr>
	<tr align=""center"">
		<td>CARRIER</td>
		<td>Code assigned by IATA and commonly used to identify a carrier. As the same code may have been assigned to different carriers over time, the code is not always unique. For analysis, use the Unique Carrier Code.</td>
	</tr>
	<tr align=""center"">
		<td>FL_NUM</td>
		<td>Flight Number</td>
	</tr>
	<tr align=""center"">
		<td>ORIGIN</td>
		<td>Origin Airport</td>
	</tr>
	<tr align=""center"">
		<td>ORIGIN_CITY</td>
		<td>Origin City</td>
	</tr>
	<tr align=""center"">
		<td>ORIGIN_CITY_NAME</td>
		<td>Origin Airport, City Name</td>
	</tr>
	<tr align=""center"">
		<td>DEST</td>
		<td>Destination Airport</td>
	</tr>
	<tr align=""center"">
		<td>DEST_CITY_NAME</td>
		<td>Destination Airport, City Name</td>
	</tr>
	<tr align=""center"">
		<td>DEP_TIME</td>
		<td>Actual Departure Time (local time: hhmm)</td>
	</tr>
	<tr align=""center"">
		<td>DEP_DELAY</td>
		<td>Difference in minutes between scheduled and actual departure time. Early departures show negative numbers</td>
	</tr>
	<tr align=""center"">
		<td>ARR_TIME</td>
		<td>Actual Arrival Time (local time: hhmm).</td>
	</tr>
	<tr align=""center"">
		<td>ARR_DELAY</td>
		<td>Difference in minutes between scheduled and actual arrival time. Early arrivals show negative numbers.</td>
	</tr>
	<tr align=""center"">
		<td>CANCELLED</td>
		<td>Cancelled Flight Indicator (1=Yes)</td>
	</tr>
	<tr align=""center"">
		<td>CANCELLATION_CODE</td>
		<td>Specifies the Reason For Cancellation</td>
	</tr>
	<tr align=""center"">
		<td>DIVERTED</td>
		<td>Diverted Flight Indicator (1=Yes)</td>
	</tr>
	<tr align=""center"">
		<td>CRS_ELAPSED_TIME</td>
		<td>CRS Elapsed Time of Flight, in Minutes</td>
	</tr>
	<tr align=""center"">
		<td>ACTUAL_ELAPSED_TIME</td>
		<td>Elapsed Time of Flight, in Minutes</td>
	</tr>
	<tr align=""center"">
		<td>AIR_TIME</td>
		<td>Flight Time, in Minutes</td>
	</tr>
	<tr align=""center"">
		<td>DISTANCE</td>
		<td>Distance between airports (miles)</td>
	</tr>
	<tr align=""center"">
		<td>TAXI_IN</td>
		<td>Taxi In Time, in Minutes</td>
	</tr>
	<tr align=""center"">
		<td>TAXI_OUT</td>
		<td>Taxi Out Time, in Minutes</td>
	</tr>
	<tr align=""center"">
		<td>CARRIER_DELAY</td>
		<td>Carrier Delay, in Minutes</td>
	</tr>
	<tr align=""center"">
		<td>WEATHER_DELAY</td>
		<td>Weather Delay, in Minutes</td>
	</tr>
	<tr align=""center"">
		<td>NAS_DELAY</td>
		<td>National Air System Delay, in Minutes</td>
	</tr>
	<tr align=""center"">
		<td>SECURITY_DELAY</td>
		<td>Security Delay, in Minutes</td>
	</tr>
	<tr align=""center"">
		<td>LATE_AIRCRAFT_DELAY</td>
		<td>Late Aircraft Delay, in Minutes</td>
	</tr>
</table>

## TYPES OF DELAY

ASPM records minutes of delay for five possible causes of flight arrival delays: carrier, weather,
NAS, security, and late arrival. The data are provided by the Bureau of Transportation Statistics(BTS)
for  ASQP  flights  only.  These  causes  of  delay  were  determined  by  the  Department  of
Transportation.

### CARRIER DELAY
Carrier  delay  is  within  the  control  of  the  air  carrier.  Examples  of  occurrences  that  may
determine  carrier  delay  are:  aircraft  cleaning,  aircraft  damage,  awaiting  the  arrival  of
connecting passengers or crew, baggage, bird strike, cargo loading, catering, computer, outage
carrier  equipment,  crew  legality  (pilot  or  attendant  rest),  damage  by  hazardous  goods,
engineering  inspection,  fueling,  handling  disabled  passengers,  late  crew,  lavatory  servicing,
maintenance, oversales, potable water servicing, removal of unruly passenger, slow boarding
or seating, stowing carryon baggage, weight and balance delays.

### LATE ARRIVAL DELAY
Arrival delay at an airport due to the late arrival of the same aircraft at a previous airport. The
ripple effect of an earlier delay at downstream airports is referred to as delay propagation.

### NAS DELAY
Delay that is within the control of the National Airspace System (NAS) may include: nonextreme
weather conditions, airport operations, heavy traffic volume, air traffic control, etc. Delays that
occur after Actual Gate Out are usually attributed to the NAS and are also reported through
OPSNET.

### SECURITY DELAY
Security  delay  is  caused  by  evacuation  of  a  terminal  or  concourse,  reboarding  of  aircraft
because of security breach, inoperative screening equipment and/or long lines more than 29
minutes at screening areas.

### WEATHER DELAY
Weather delay is caused by extreme or hazardous weather conditions that are forecasted or
manifest themselves on point of departure, enroute, or on point of arrival.

![Image24](vizl/contrib_delay.png)

The above pie chart depicts the effect of each type of delays in our data set. Based onthe  above analysis, the late aircraft delay (38.6%), the  Carrier delay (34%)  and NASdelay  (22.6%)  consists  of  most  of  the  delays.  It  is  important  that  the  delays  due  toweather  conditions  is  4.8%  which  is  significantly  less.  Both  Late  Aircraft  delay  andCarrier delays are directly connected to the performance of carrier, so it is evident thatthis  analysis  can  provide  insights  for  the  evaluation  of  carrier  and  can  be  used  forfurther improvement.

## RANKING SYSTEM

To obtain a meaningful and efficient ranking (quality of service) system the following data were considered:

-  Number of airlines for each carrier (flight volume).
-  Speed of the aircrafts in mph.
-  Ratio between operated flights and scheduled flights.
-  Taxi in and Taxi out time (time to leave and enter the gate).
-  The average arrival delay.

We have not included avg. departure delay because usually it depends on the departure airport.
The above data was used to obtain a ratio which indicated a score for the aircrafts rankings. The
aircrafts  airtime  was  used  to obtain  the  speed  of  flight.  After  analyzing  the  speed  of  all  the
aircrafts,  we  found  their  averages  to  be  between  400  and  500  mph.  The  distance  between
source  and  destinations  were  plotted  using  the  arrival  delay  and  departure  delays.  As  an
inference, we came to understand that delay was comparatively higher during short distance
travels. Long distance flights experienced shorter delays. To an extent distance did not affect
the flight delay.
After analyzing the causes of delay -weather delays were almost 4.8% and was the least. The
maximum  delays  were  caused  by  late  aircraft  delay  and  carrier  delay  (due  to  aircraft
maintenance) and was near to 70% together.
All  the  values  were  rescaled  and  normalized  using min_max  scaler  and  thus  all  values  were
between 0 and 1. Due to properties of our ranking system we rescaled between 1 and 2. To
obtain the final ranking, we used a score variable comparing 6 variables which was in turn used
to check the ranking status. I.e. a higher score would lead to a higher ranking which means the
scheduled flight was operated correctly without any delays.
 Score= a /(1+b)
where a is the product of operated flights, total volume of flights and the flight speed and b is
the product of arrival delay, average taxi in and taxi out times. The values of variable a were
directly proportional to Score and the values of b were inversely proportional to score.

## INSIGHTS AND ANALYSIS

### PLOTTING AIRLINE ROUTE OF ENTIRE DATASET
![Image31](vizl/fullmap.png)

### PLOTTING OF ROUTES WITH NO DELAYS
![Image32](vizl/no_delay.png)

### DISTANCE AGAINST ARRIVAL AND DEPRATURE DELAYS
![Image40](vizl/delaydist.png)

From the graph, it is evident that distance of flight doesn’t have much impact on the delays, even 
though lower distance flight shows relatively higher delay. There for, we can assume that longer
flights might have makeup the delayed minutes during flight.

### SCHEDULED VS ELAPSED TIME OF FLIGHT
![Image43](vizl/elapsed.png)

From the Graph, we can see that all carriers have completed the flight before scheduled time.

### TOTAL SCHEDULED VS CANCELLED
![Image46](vizl/cancellation.png)

Expresjet Airline and Frontier Airlines has the highest rate of cancellation, which later going to effect
on their rank. From the graph, we can see that American Airlines and Southwest have significant
amount of flights and very less cancellation. From these we can say that their service quality is high
and they will be securing high ranks.

### DELAY CATEGORIES OF EACH CARRIER

From the above bar chart, in each category of delay; American Airlines, Alaskan Airlines, United Airlines
and Southwest airlines has scored very less delays. Fortier Airlines has very high late aircraft delay,
which should be handled and Spirit Airlines has the peek NAS delay which is very less for all other
carriers (they must have investigated on this issue).
![Image49](vizl/delay vs car.png)

From the below graph, it is evident that Fortier airlines has the highest sum of average of all delays.
And Alaskan Airlines and southwest airlines has lowest.
![Image50](vizl/delaybycar.png)

### PERFORMANCE BASED ON ARRIVAL DELAY
![Image53](vizl/performance.png)

Above, performance graph show that Delta Airlines, united airlines have higher percentage of on
time or early arrival with around 70%. Forntier airlines and skywest Airlines are the low scorers with
around 50% of on time or early arrival.

### FLIGHT VOLUME / TOTAL NUMBER OF FLIGHTS FROM EACH CARRIER
![Image56](vizl/flightvolume.png)

We can see that American Airlines (30.4%) and Southwest airlines (28.3 %) together have the  lion
share of flights to and from TEXAS. Frontier Airlines and JetBlue Airways have the least number of
flights.

### FLIGHT SPEED
![Image59](vizl/flyspeed.png)

Based on the violin plot, we can see that in average, most flying speed across airlines are close to
400~450 miles per hour; with the ExpressJet Airlines Inc. is the slowest airline and large variation (by
simply looking at the data shape distribution). The fastest service is offered by Alaskan Airlines.
It is interesting to see that, in some rare cases, an aircraft can go as high as 800 miles per hour in
average during a flight trip.

### AVERAGE ARRIVAL DELAY VS DEPARTURE DELAY
![Image62](vizl/arrvsdep.png)

Based on this analysis, we can see that all the lines have longer departure delays than arrival delays,
Frontier Airlines have both delays equal and high. We can say that the flights can adjust speed to
catch up time while departure delay sometimes are out of control.
Skywest Airlines and Frontier Airlines are among the longest arrival and departure delay airlines. It is
worth noting that Alaska Airlines is the only airline among all to arrive the destination earlier than
scheduled in average.

### RATIO OF OPERATED AND SCHEDULED FLIGHTS
![Image65](vizl/ratio_sch_op.png)

From the graph, we can see that about 98% of scheduled flights are operated, with Expressjet Airlines
with the lowest and Alaskan Airlines with the highest.

### MEAN TAXI IN AND TAXI OUT
![Image68](vizl/taxi.png)

Interestingly, we can see that overall taxi in time is less than taxi out time for all the airlines. All airlines
have an average taxi_in time less than 10 minutes except Frontier Airlines, while all taxi out time are
greater than 10 minutes. Also, it seems Southwest has the shortest taxi-in and taxi-out.

## ANALYSIS RESULT

We have 6 variables which decide  score. The score is proportional to a subset (a) of the variables
whereas being inversely proportional to a different subset (b) of the variables. We used the following
formula for calculating score on normalized data which we scaled between 1 and 2.

<table align=""center"">
	<tr align=""left"">
		<td>CARRIER</td>
		<td>RATIO_OP _SCH</td>
		<td>FLIGHT_S PEED</td>
		<td>ARRIVAL_D ELAY</td>
		<td>FLIGHTS_VOL UME</td>
		<td>TAXI_IN</td>
		<td>TAXI_OUT</td>
	</tr>
	<tr align=""center"">
		<td>Alaska Airlines Inc.</td>
		<td>2</td>
		<td>2</td>
		<td>1</td>
		<td>1.003223673</td>
		<td>1.469513 821</td>
		<td>1.508629 329</td>
	</tr>
	<tr align=""center"">
		<td>American Airlines Inc.</td>
		<td>1.6572814 63</td>
		<td>1.6413807 91</td>
		<td>1.46460773 9</td>
		<td>2</td>
		<td>1.718027 285</td>
		<td>1.652870 336</td>
	</tr>
	<tr align=""center"">
		<td>Delta Air Lines Inc.</td>
		<td>1.6917944 26</td>
		<td>1.5749009 06</td>
		<td>1.34913284 5</td>
		<td>1.114151099</td>
		<td>1.442462 476</td>
		<td>1.484923 569</td>
	</tr>
	<tr align=""center"">
		<td>ExpressJet Airlines Inc.</td>
		<td>1</td>
		<td>1</td>
		<td>1.54974805 5</td>
		<td>1.45404199</td>
		<td>1.344297 793</td>
		<td>1.528606 601</td>
	</tr>
	<tr align=""center"">
		<td>Frontier Airlines Inc.</td>
		<td>1.1495483 13</td>
		<td>1.7011098 17</td>
		<td>2</td>
		<td>1</td>
		<td>2</td>
		<td>1.514635 009</td>
	</tr>
	<tr align=""center"">
		<td>JetBlue Airways</td>
		<td>1.2628047 43</td>
		<td>1.7806857 14</td>
		<td>1.52541105 9</td>
		<td>1.006406018</td>
		<td>1</td>
		<td>1.490665 621</td>
	</tr>
	<tr align=""center"">
		<td>SkyWest Airlines Inc.</td>
		<td>1.4743255 37</td>
		<td>1.5598484 63</td>
		<td>1.79949787</td>
		<td>1.132087948</td>
		<td>1.467007 869</td>
		<td>2</td>
	</tr>
	<tr align=""center"">
		<td>Southwest Airlines Co.</td>
		<td>1.5492443 28</td>
		<td>1.5073759 97</td>
		<td>1.48646221 4</td>
		<td>1.929285832</td>
		<td>1.069609 378</td>
		<td>1</td>
	</tr>
	<tr align=""center"">
		<td></td>
		<td>1.3210552 48</td>
		<td>1.7085169 05</td>
		<td>1.61392884 3</td>
		<td>1.063192263</td>
		<td>1.661401 389</td>
		<td>1.385209 54</td>
	</tr>
	<tr align=""center"">
		<td>United Air Lines Inc.</td>
		<td>1.9785571 95</td>
		<td>1.7848266 35</td>
		<td>1.24498746</td>
		<td>1.423499752</td>
		<td>1.495306 105</td>
		<td>1.554886 169</td>
	</tr>
	<tr align=""center"">
		<td>Virgin America</td>
		<td>1.9278500 85</td>
		<td>1.8004096 7</td>
		<td>1.58163733 5</td>
		<td>1.019796661</td>
		<td>1.493109 681</td>
		<td>1.323942 818</td>
	</tr>
</table>

Where,

 `a = (RATIO_OP_SCH) * (FLIGHT_SPEED) * (FLIGHTS_VOLUME)` and

`b = (ARRIVAL_DELAY) * (TAXI_IN) * (TAXI_OUT)`

#### `Score = a/(1+b)`

A higher score indicates a better rank.

### RANKING

Based on the score, below are our ranking (quality of service) of Carriers, to and from Texas, Operated during Jan 2017.

- 1. Southwest Airlines Co.
- 2. United Air Lines Inc.
- 3. Alaska Airlines Inc.
- 4. American Airlines Inc.
- 5. Virgin America
- 6. Delta Air Lines Inc.
- 7. JetBlue Airways
- 8. Spirit Air Lines
- 9. SkyWest Airlines Inc.
- 10. ExpressJet Airlines Inc.
- 11. Frontier Airlines Inc.

![Image75](vizl/rank.png)

Based on the data, Analysis and visualization we concluded that Southwest Airlines outperformed all
other carriers and secured rank 1.

This lower scored carrier can improve their performance based on this insight and increase quality of
service and thereby gain customer satisfaction.

",2,2,2,0,transportation,"[aircraft, airline, airline-ranking, arrival-delay, bureau, carrier, carrier-delay, departure, flight, flight-delays, insights, pandas, pandas-dataframe, pandasql, python, python-script, ranking, taxi, texas, transportation]",00000
219,KARtoken,onecarpayment,N/A,https://github.com/onecarpayment/KARtoken,https://api.github.com/repos/onecarpayment/KARtoken,"KARtoken - is our version of Bitcoin but designed for the automotive space!! We developed our own coin / token to help anyone, who wants to own any car or truck they want to own. Think of it has a bank, insurance and car maintenance rolled into one company, and providing these services in one simple payment per month. ","# KARtoken
KARtoken- is a utility digital instrument used to facilitate transactions, records, documentation between OCP, it's members and it's market members either public or private of products or services rendered. The transactions are defined as the transportation of documents and/or digital assets in a secure matter either by means of encryption or non-encryption methods and also by definition as digital code between one party and another party accepting/receiving the code.

KARtokens are also used to facilitate debt purchases, document exchange, transportation and/or future services for products and/or services rendered to it's OCP members and/or public or private parties. KARtoken[s] can been held for definite period of time. The value of KaARtoken[s] may decrease/ increase over a period of time, that value may come at an unknown point in time.

********************************************
OneCarPayment.com Token sale info:

Token Name: ""KARt"" Short/ Ticker, ""KARtoken"" Long
________________________________________________________________________________________
Pre-Sale Info:

Pre-Sale Date: In-progress

Pre-Sale Length: 12 Hr/TBD [2019]

Presale: 20,000,000,000 KAR [Whitelist]
________________________________________________________________________________________
Public Sale Info:

Public Sale: Remaing balance from presale token sale

Public Sale Date: TBD [2019]

Public Sale Length: 90 Days [2019]
________________________________________________________________________________________
Investor / KYC Info:

investor at onecarpayment dot com

****************************************

OCP Master KT Wallet: <Release_TBD>

OCP Development Fund Public Wallet: 0xB7eaf7697b07586a4A1eE6eF4ed02B4B213D0fd1 <Not part of the token sale>

",2,2,1,1,transportation,"[automotive, autonomous-vehicles, blockchain, cars, consumer, consumer-driven-contracts, crypto, encryption, engine, insurance, maintenance, ocp, oil-change, payments, purchase, tires, transportation, truck, vehicle, wallet]",00000
220,RouteOptimizer,Denta-ai,N/A,https://github.com/Denta-ai/RouteOptimizer,https://api.github.com/repos/Denta-ai/RouteOptimizer,"the route planner that generate an optimized route that covers all the desired locations, suggesting the best sequence to follow","<h1>Route Optimizer</h1>
<p>This repository contains code for a Route Optimizer that implements Dijkstra's algorithm to find the shortest path 
  between nodes in a graph and generates visualizations of the graph.</p>

<h2>Introduction</h2>
<p>The Route Optimizer project aims to optimize routes and find the shortest path between nodes in a graph. 
  It provides functionality to load input data, generate graphs, calculate weights, and visualize the resulting graph.</p>

<h2>Installation</h2>
<p>To use the Route Optimizer, follow these steps:</p>
<ol>
  <li>Install the gnuplot based on your operation system here: http://www.gnuplot.info/download.html and follow the instruction</li>
  <li>Clone the repository:</li>
  <pre>
    <code>$ git clone &lt;repository_url&gt;
    $ cd &lt;repository_directory&gt; // look for where main.exe file located to </code></pre>
  <li>Build the project (if required) using your preferred build system.</li>
  <li>Run the program:</li>
  <pre>    <code>$ ./main.exe</code></pre>
</ol>
<p><bold>Note</bold>: if you can't run the program. Remember to check the directory path for the files.</p>

<h2>Features</h2>
<ul>
  <li>
    <strong>Shortest Path Calculation:</strong> 
    The <code>algorithm.cpp</code> file contains an implementation of Dijkstra's algorithm, which can find the shortest path between nodes in a graph.
  </li>
  <li>
    <strong>Graph Generation:</strong> 
    The <code>graph.cpp</code> file provides functionality to generate a graph based on input data and save it as an image file.
  </li>
</ul>

<h2>Usage</h2>
<p>To find the shortest path between nodes:</p>
<ol>
  <li>Modify the input data in the appropriate files (<code>pnts.txt</code> and <code>edges.txt</code>) to represent your graph.</li>
  <li>Compile and run the program.</li>
  <li>The program will calculate and display the shortest path between nodes using Dijkstra's algorithm.</li>
</ol>

<p>To generate a graph:</p>
<ol>
  <li>Modify the input data in the appropriate files (<code>pnts.txt</code> and <code>edges.txt</code>) to represent your graph.</li>
  <li>Compile and run the program.</li>
  <li>The program will generate a visualization of the graph and save it as an image file (<code>graph.png</code>).</li>
</ol>

<h2>File Structure</h2>
<ul>
  <li><strong>algorithm.cpp:</strong> Contains the implementation of Dijkstra's algorithm to find the shortest path.</li>
  <li><strong>graph.cpp:</strong> Provides functionality to generate a graph and visualize it.</li>
  <li><strong>pnts.txt:</strong> Input file containing the coordinates and labels of the graph's nodes.</li>
  <li><strong>edges.txt:</strong> Input file containing the edges of the graph.</li>
</ul>

<h2>Contributing</h2>
<p>Contributions to this project are welcome! If you'd like to contribute, please follow these steps:</p>
<ol>
  <li>Fork the repository.</li>
  <li>Create a new branch for your feature or bug fix.</li>
  <li>Make your changes and test them thoroughly.</li>
  <li>Commit your changes and push them to your forked repository.</li>
  <li>Submit a pull request, describing the changes you've made.</li>
</ol>

<h2>License</h2>
<p>This project is licensed under the MIT License. See the <a href=""LICENSE"">LICENSE</a> file for more information.</p>

<h2>Contact</h2>
<p>If you have any questions or suggestions regarding this project, feel free to contact me:</p>
<ul>
  <li>Email: <a href=""mailto:your_email@example.com"">dentacoy@example.com</a></li>
</ul>
",2,2,1,0,transportation,"[algorithms, cplusplus, cpp, djikstra, djikstra-algorithm, gnuplot, gnuplot-cpp, gnuplot-graphs, graph, logistics, pathfinding, route-planning, routing, shortest-path, shortest-path-algorithm, shortest-paths, transportation, travel-optimization, vehicle-routing, visualization]",00000
221,bps-simulated-data,data-mechanics,data-mechanics,https://github.com/data-mechanics/bps-simulated-data,https://api.github.com/repos/data-mechanics/bps-simulated-data,Tool for automatically generating simulated datasets of Boston Public School students and their school assignments.,"# Simulated Student and Bus Route Data for Boston Public Schools
Tool for automatically generating simulated data sets of Boston Public Schools students, their school assignments, their bus stop assignments, and bus routes.

## Usage

To install all requirements:

    python -m pip install --upgrade --no-cache-dir -r requirements.txt

To execute the script and generate individual data sets (placed in the `output` subdirectory by default):

    python generate-bus-data.py
    python generate-student-data.py
    python generate-stop-data.py
    python generate-route-data.py

To generate an Excel workbook that assembles all the generated data (appropriate for submission to the [bps-challenge-score](https://github.com/Data-Mechanics/bps-challenge-score) scoring tool):

    python generate-assembled-data.py

## Example Output

Once the student data has been generated, load `output/students.html` in any browser to view a rendering that uses the [Leaflet](http://leafletjs.com/) library. 
Likewise, once the route data has been generated you can view it at `output/routes.html`.

| ![Visualization of generated student data using Leaflet](students.png)  | ![Visualization of generated route data using Leaflet](routes.png) |
|:---:|:---:|

## Data Sources

* [Public Schools](https://data.boston.gov/dataset/public-schools) from [Analyze Boston](https://data.boston.gov/)
* [Boston Street Segments](http://bostonopendata-boston.opendata.arcgis.com/datasets/cfd1740c2e4b49389f47a9ce2dd236cc_8) (GeoJSON format) from [Analyze Boston](https://data.boston.gov/)
* [Property Assessment 2014](https://data.cityofboston.gov/dataset/Property-Assessment-2014/qz7u-kb7x) from [Analyze Boston](https://data.boston.gov/)
* [Zip codes](http://www.mass.gov/anf/research-and-tech/it-serv-and-support/application-serv/office-of-geographic-information-massgis/datalayers/zipcodes.html) from [Mass.gov](http://www.mass.gov/anf/)
* [Boston family household data](https://www.bostonplans.org/getattachment/caf0d3fb-951d-4b0a-9181-9b41cdf59cf8) from [Boston Planning & Development Agency (BPDA)](bostonplans.org)
* [Boston Census Blocks](http://worldmap.harvard.edu/data/geonode:c_bra_bl) from [Harvard WorldMap](https://worldmap.harvard.edu)
* [Children per household](https://nces.ed.gov/programs/digest/d15/tables/dt15_102.10.asp?current=yes) from [National Center for Education Statistics](https://nces.ed.gov/)
",2,2,4,0,transportation,"[boston, boston-university, data-science, public-transportation, real-world, schools, transportation, transportation-simulation]",00000
222,bdit_incidents,CityofToronto,CityofToronto,https://github.com/CityofToronto/bdit_incidents,https://api.github.com/repos/CityofToronto/bdit_incidents,Analyzing impacts of traffic incidents on road congestion,"# BigDataInnovationTeam: Incidents
*Analyzing impacts of traffic incidents on road congestion*

## Goal
Processing useful information from the City's incident logs to quantify traffic delays from incidents

### 1. Transforming incident data
Ultimately we want the following information:  
 - [x] start time
 - [x] end time
 - [x] geographic location
 - [x] type of incident
 - [x] lane closures
 - [x] vehicle-hours of delay due to incidents
 - [ ] updates for finer-grained analyses of impacts
 
### 2. Comparing with Traffic Speeds
By matching incident location and time to traffic data from 3rd party vendors and bluetooth we want to estimate 
the delay from loss of capacity due to an incident. This requires merging the incident data with traffic speed 
data as well as volume data to understand the aggregate vehicle-delay. Ideally we will be able to isolate the delay due to incidents alone. 

## Contents 

### Python
- CSV Wrangling: Extracts infromation from EventDescription column and creates new columns for this information
- Plotting: Initial visualization project for Jesse's presentations
- Incident Delay: Isolating delay due to incidents

### SQL
- Tags incidents to closest TMC so INRIX data can be used

### R
- Previous student's code

## Tables in `incidents` schema
### bt
- Associates TMCs with bluetooth segments
### mvp_2016
- Incidents table from RESCU used in `quantify_delay_2016.py`
### volumes
 - Volume data for each bluetooth segment created using Sunny's programs

## Current workflow
1. Import CSV to python as pandas dataframe and run `clean_csv.py`
2. Remove any unnecessary columns (ex: individual date and time columns bc there is a single datetime column)
3. Convert lat/long to postGIS point and tag incident to closest TMC and corresponding bluetooth segment
4. Establish volume profiles for each bluetooth segment (with Sunny's help)
5. Run `quantify_delay_2016.py`

## Key Innovations
- `df['column'] = df.apply(lambda x: function(x), axis=1)`: by far the fastest way to apply functions to whole dataframes 
- Using `ST_DISTANCE()` combined with `DISTINCT ON` and `ORDER BY` to find the closest segment to each incident

## Next Steps
- Decide on how to best represent this data
",2,2,16,6,transportation,"[analyzing-impacts, delay, impacts, incident, incident-data, traffic-data, traffic-incidents, traffic-speeds, transportation]",00000
223,DriverGo,yashjshah,N/A,https://github.com/yashjshah/DriverGo,https://api.github.com/repos/yashjshah/DriverGo,Complete package one needs for a transporter to deal with all day to day operations,"# DriverGo
The project is all about transportation of goods from one place to another. It is a complete package one needs for a transporter to deal with all day to day operations. Driver create their profile and post their offer. Client can subscribe to specific offers they want to and let the driver know they are interested. Driver can accept it to move forward with the transportation from one location to another. This system is very flexible and easy to use platform. The main features have been described below:-

o	Drive Go is all about transportation of goods from one place to another. It is a complete package one needs for a transporter to deal with all day to day operations. 
o	Driver creates their profile and post their offer. Client can subscribe to specific offers they want to and let the driver know they are interested. 
o	Driver can accept it to move forward with the transportation from one location to another. 
o	This system is very flexible and easy to use platform. This application can be accessed by Driver and Client.  


This application can be accessed by only two users as given below. 

•	Driver -User

Driver is the first user who create an account and post their respective offers in the application. They will get request from the client for specific offers. Driver can either accept or reject the client’s request depending on the location. Once accepted, driver can call the client and meet them to complete the process of transportation of goods.
 
•	Client- User

Client can create new account and view all the transportation offers posted by the drivers. They can also respond to the offers by subscribing them if they like. Client can also call the driver if they need more information. 

ACIVITIES FOR DRIVE GO USERS
•	Driver: 
	Login / Signup / Google Sign In 
	Edit profile
	Post offers
	View my profile
	View all the requests by the clients
	View all the offers created
	View all the followers
	Logout 
•	Client: 
	Login / Signup / Google Sign In 
	Edit profile
	View Transportation offers
	View my profile
	View all the subscription done
	View all the follows
	Subscribe using location A and location B
	Logout 

 
API USED FOR DRIVE GO 

	Google Maps API
	Google login API
	Firebase API
	Interesting UI libraries. 

 
FEATURES USED FOR DRIVE GO APP

	Driver and Client can make account.
	Uploading profile picture
	Drive have profile and can add offers. 
	The home activity has all the drivers and the client can choose and register. Then the driver can accept or not. 
	The client has all the offers they have registered. 
	The client can also make the driver favorite. 
	The client can call the Driver. 
	Google maps to get the location of the user. 
	Notification between the user and the driver. 
	Google sign In. 

 

",2,2,0,0,transportation,"[android, android-app, android-application, drivego, driver, google-maps-api, google-plus-api, google-plus-auth, google-plus-login, java, kenburnsview, notifications, offer, recyclerview, splashscreen, subscriptions, transportation, xml]",00000
224,social-transit,adam-rumpf,N/A,https://github.com/adam-rumpf/social-transit,https://api.github.com/repos/adam-rumpf/social-transit,Home page for my research project dealing with public transit design with social access objectives.,"# Public Transit Optimization with Social Access Objectives

This repository is meant to act as a home page linking to the various programs related to the research project:

> A. Rumpf and H. Kaul. A public transit network optimization model for equitable access to social services. In _Equity and Access in Algorithms, Mechanisms, and Optimization (EAAMO’21)_, October 5–9, 2021. Association for Computing Machinery, New York, NY, doi: [10.1145/3465416.3483288](https://doi.org/10.1145/3465416.3483288).

The data associated with this project can be found at Mendeley Data:

> A. Rumpf and H. Kaul. A public transit network optimization model for equitable access to social services. Mendeley Data, 2021, doi: [10.17632/pv2jvghs9b](https://doi.org/10.17632/pv2jvghs9b).

I would not expect these programs to be of much use to anyone outside of our research group, but they are provided here for anyone interested. The sections below include links to the repositories related to this project as well as brief explanations of how they fit into the study. The READMEs of the individual repositories explain their functions in greater detail.

## Chicago Data Preprocessing

[social-transit-preprocessor](https://github.com/adam-rumpf/social-transit-preprocessor) is a Python script written to perform preprocessing on various City of Chicago and CTA data sets in order to construct the underlying network for our main case study.

## Procedural Artificial Network Generation

[social-transit-example](https://github.com/adam-rumpf/social-transit-example) is a Mathematica script written for procedurally generating artificial networks for use in testing our main solution algorithm.

## Main Solver Preprocessing

[social-transit-solver-single](https://github.com/adam-rumpf/social-transit-solver-single) is a C++ program used for conducting the preprocessing necessary to generate the input files for the main solver [social-transit-solver](https://github.com/adam-rumpf/social-transit-solver).

## Main Solver

[social-transit-solver](https://github.com/adam-rumpf/social-transit-solver) is a C++ implementation of our main hybrid tabu search/simulated annealing solution algorithm.

## Computational Trial Driver

[social-transit-trial-driver](https://github.com/adam-rumpf/social-transit-trial-driver) is a C++ program that calls the main solver [social-transit-solver](https://github.com/adam-rumpf/social-transit-solver) repeatedly to solve a set of problem instances.

## Miscellaneous

[social-transit-network-analysis](https://github.com/adam-rumpf/social-transit-network-analysis) is a collection of miscellaneous C++, Python, and Mathematica utilities used to perform various result analysis and file editing tasks throughout the computational trial process.
",2,2,2,0,transportation,"[math, mathematics, operations-research, optimization, research, research-paper, research-project, simulated-annealing, tabu-search, transit, transportation, urban-planning]",00000
225,drivehack,m2d-team,m2d-team,https://github.com/m2d-team/drivehack,https://api.github.com/repos/m2d-team/drivehack,"Проект для DriveHack, хакатон от МосГорТранса 26.08.22","# drivehack

проект для хакатона DriveHack (24.08.22-26.08.22, кибершкола мск)

потом я здесь еще инфу добавлю по проекту

краткая версия - тулза для застройщиков/мосгортранса чтобы предсказывать загрузку дорог и другой транспортной инфраструктуры при стройке новых зданий 

",2,2,2,0,transportation,"[django, mapbox, python, transportation, transportation-planning]",00000
226,European-Green-Deal-Tracker,dw-data,N/A,N/A,https://api.github.com/repos/dw-data/European-Green-Deal-Tracker,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C174:5831:2B96888:59524B8:65224071.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,transportation,"[N, /, A]",00000
227,city,ckevar,N/A,https://github.com/ckevar/city,https://api.github.com/repos/ckevar/city,,"# City
Assigned Project for Real-Time Systems course 2018/2019 at Scuola Superiore Sant'Anna

Simulation of a urban area with a number of crossing streets with traffic lights managed by a single traffic control task. Cars are randomly generated to enter and exit the area. Each car is autonomous and is controlled by a periodic task on local sensors (no global information must be used)
## Prerequisites
- allegro 4.4.2
* pthread
",2,2,2,0,transportation,"[allegro4, car, city, control, controller, linux, pi, pthread, pthreads, real-time, realtime, simulation, transportation, transportation-simulation, ubuntu]",00000
228,LoTLan,iml130,iml130,https://github.com/iml130/LoTLan,https://api.github.com/repos/iml130/LoTLan,"A simple, but powerful approach to describe intralogistic materialflow transport logic","[![Documentation Status](https://readthedocs.org/projects/lotlan/badge/?version=latest)](https://lotlan.readthedocs.io/en/latest/?badge=latest)


# LoTLan - A Logistc Task Language for Cyber-Physical Production Systems

The Logistic Task Language *(LoTLan)* is a simple, but powerful approach to describe your intralogistic materialflow logic, focusing on cyber-phyiscal production systems (CPPS), in a declarativ manner. LoTLan describes of *what* needs to be done rather than *how* or *who*. Job shop schedulars handling the assignment of tasks to an executing entity.

In our context a materialflow represents a transport, carrying goods from one location (pickup) to another (delivery). 

<center><img src=""docs/img/LoTLan.png"" alt=""LoTLan Logo"" width=""200""/><br />
Figure 1: Logo of LoTLan.
</center>

## Official :books: [Documentation](https://lotlan.readthedocs.io).

## Example HelloTransport

The simplest transportation task in *LoTLan* just describes, from which position a container/bin should be picked up and moved to another location. All location as mentioned in the example refer to Figure 1.

```
Location unloadEmptyPallet
    name = ""production_goodspallet""     # actuall real name in the warehouse
    type = ""Pallet""                     # what type of bin is located at this location
End

Location warehousePos1
    name = ""warehouse_pallet_position1"" # actuall real name in the warehouse
    type = ""Pallet""                     # what type of bin is located at this location    
End

TransportOrderStep loadEmptyPallet
    Location    warehousePos1 
End

TransportOrderStep unloadEmptyPallet
    Location    goodsPallet 
End

Task transportGoodsPallet
    Transport
    From        loadGoodsPallet
    To          unloadGoodsPallet
End
```

<center><img src=""docs/img/transportGoodsPallet.png"" alt=""Simple Floorplan for HellTransport"" width=""800""/></center>

Figure 2: Example of LoTlan transportation task called 'transportGoodsPallet', defining a transport from *goodsPallet* to *warehousePos1* in a CPPS.


## Features
LoTLan also supports few more features next to a simple transportation:

- Serial, parallel and concurrent definition of tasks
- Conditional events, e.g. starting a task when a specific event occured
- Concatenation of tasks, also including infinite loops
- Parameterizable actions
- Constraints definition


Further examples can be found in the :books: [documentation](https://lotlan.readthedocs.io). It also describes how an automatic or manual load/unload action can be done, utilizing events.


# License

LoTLan is licensed under Apache 2.0.


# Contributors
[Peter Detzner](https://www.github.com/ptrdtznr), [Maximilian Hoerstrup](https://github.com/max-coding), [Dominik Lux](https://github.com/Luxxii)


# Conference

P. Detzner, T. Kirks and J. Jost, ""[A Novel Task Language for Natural Interaction in Human-Robot Systems for Warehouse Logistics](https://ieeexplore.ieee.org/document/8845336)"", 2019 14th International Conference on Computer Science & Education (ICCSE), Toronto, ON, Canada, 2019, pp. 725-730.",2,2,3,0,transportation,"[cpps, domain-specific-language, dsl, logistics, robotic-control, robotics, transportation]",00000
229,grapharray,Geb-algebra,N/A,https://github.com/Geb-algebra/grapharray,https://api.github.com/repos/Geb-algebra/grapharray,A python package that allows you to handle network link/node attributes as Numpy arrays.,"# GraphArray

[![PyPI version](https://img.shields.io/pypi/v/grapharray)](https://pypi.org/project/grapharray/)
[![PyPI downloads](https://img.shields.io/pypi/dm/grapharray?color=blue&label=pypi%20downloads)](https://pypi.org/project/grapharray/)
[![Conda version](https://img.shields.io/conda/vn/conda-forge/grapharray.svg)](https://anaconda.org/conda-forge/grapharray/)
[![Conda downloads](https://img.shields.io/conda/dn/conda-forge/grapharray?label=conda-forge%20downloads)](https://anaconda.org/conda-forge/grapharray/)

GraphArray is a class of arrays defined on a network, which allows for 
fast computation and easy visualization.

When you plan to code some algorithms on networks, using GraphArray as the class
of control variables provide you easier debugging and summarization of the result
while keeping your calculation fast.

* [Documentation](https://geb-algebra.github.io/grapharray/)

# Simple Example

## Define a graph

```
>>> import grapharray as ga
>>> BG = ga.BaseGraph([(""A"", ""B""), (""B"", ""C""), (""C"", ""A"")])
>>> BG.freeze()
```

## Arrays for nodes
```
>>> a = ga.NodeArray(BG, init_val=1)   # Define
>>> a
index   value
A       1.0
B       1.0
C       1.0

>>> a[""B""]  # Get a specific element using a node index
1.0
>>> a[""B""] = 10  # Modify
>>> a
index   value
A       1.0
B       10.0
C       1.0

>>> b = ga.NodeArray(BG, init_val=2)
>>> a+b  # Mathematical operations
index   value
A       3.0
B       12.0
C       3.0
```

## Array for edges
```
>>> a = ga.EdgeArray(BG, init_val=5)   # Define
>>> a
index   value
('A', 'B')      5.0
('B', 'C')      5.0
('C', 'A')      5.0

>>> a[""A"", ""B""]  # You can get and...
5.0
>>> a[""A"", ""B""] = 100  # modify elements with edge indexes
>>> a
index   value
('A', 'B')      100.0
('B', 'C')      5.0
('C', 'A')      5.0

```
Mathematical operations can be done as arrays for nodes.

# Installation

From pypi:
```
pip install grapharray
```
or from conda:
```
conda install -c conda-forge grapharray
```

",2,2,1,0,transportation,"[array, graph, graph-algorithms, network, traffic, transportation]",00000
230,EventParking-API,cforlando,cforlando,https://github.com/cforlando/EventParking-API,https://api.github.com/repos/cforlando/EventParking-API,,"{'message': 'Not Found', 'documentation_url': 'https://docs.github.com/rest/repos/contents#get-repository-content'}",2,2,5,6,transportation,"[code-for-america, code-for-orlando, event-parking, inactive, transportation]",00000
231,Vitrapp,jenni,N/A,https://github.com/jenni/Vitrapp,https://api.github.com/repos/jenni/Vitrapp,A simple and restful JavaScript wrap of Vitrasa soap api - :construction:,"# A JavaScript wrap of Vitrasa wsdl api.

:construction: under construction :construction:

:bus: VITRASA - Public transportation in Vigo

## Endpoints

* [Get all stops](#get-all-stops)
* [Get stops nearby](#get-stops-nearby)
* [Get stop estimations](#get-stop-estimations)
* [Get estimations by coordinates](#get-estimations-by-coordinates)

### Get all stops

``` http
GET /stops
```

Example:

``` http
GET /stops/all

{
    ""id"": 280,
    ""name"": ""Arquitecto Antonio Cominges, 38"",
    ""location"": {
        ""lng"": -8.80731148602987,
        ""lat"": 42.1897563491201
    }
},
{
    ""id"": 290,
    ""name"": ""Arquitecto Gomez Roman, 35"",
    ""location"": {
        ""lng"": -8.8038689924564,
        ""lat"": 42.1899936938779
    }
},
...

```

### Get stops nearby

``` http
GET /stops/nearby/:latitude/:longitude
```

Example:

``` http
GET /stops/nearby/42.215625/-8.747444/

[
    {
        ""_attributes"": {
            ""idparada"": ""1320"",
            ""nombre"": ""Avda. Castelao- 87"",
            ""distancia"": ""532.5505"",
            ""latitud"": ""42.2173022236201"",
            ""longitud"": ""-8.75110475205119""
        }
    },
    {
        ""_attributes"": {
            ""idparada"": ""1310"",
            ""nombre"": ""Avda. Castelao- 73"",
            ""distancia"": ""348.73"",
            ""latitud"": ""42.2177055282635"",
            ""longitud"": ""-8.74775332453754""
        }
    }
]
```

### Get stop estimations

``` http
GET stops/:id/estimations
```

Example:

``` http
GET /stops/14901/estimations

[
    {
        ""line"": ""10"",
        ""route"": ""cemiterio de teis"",
        ""minutes"": ""1"",
        ""distance"": ""624""
    },
    {
        ""line"": ""15A"",
        ""route"": ""r. nieto - cabral"",
        ""minutes"": ""10"",
        ""distance"": ""2748""
    }
]
```

### Get estimations by coordinates

``` http
GET /stops/location/:lat/:lng/estimations
```

Example:

``` http
GET /stops/location/42.2346052506693/-8.6711950590708/estimations

[
    {
        ""line"": ""9A"",
        ""route"": ""peinador - aeroporto"",
        ""minutes"": ""4"",
        ""distance"": ""2383""
    },
    {
        ""line"": ""9B"",
        ""route"": ""rabadeira por rinxela"",
        ""minutes"": ""23"",
        ""distance"": ""5938""
    }
]
```

For a python implementation visit --> [Time for Vbus API](https://github.com/abdonrd/time-for-vbus-api)",2,2,2,0,transportation,"[transportation, transportation-routes, vigo, vitrasa]",00000
232,linref,tariqshihadah,N/A,https://github.com/tariqshihadah/linref,https://api.github.com/repos/tariqshihadah/linref,An optimized set of tools built on tabular and geospatial libraries to implement powerful features for linearly referenced data through the EventsCollection and related object classes.,"{'message': 'Not Found', 'documentation_url': 'https://docs.github.com/rest/repos/contents#get-repository-content'}",2,2,3,1,transportation,"[asset-management, data-science, engineering, geospatial, linear-referencing, transportation]",00000
233,data-api-docs,Perbadanan-Pengangkutan-Awam-Johor,Perbadanan-Pengangkutan-Awam-Johor,https://github.com/Perbadanan-Pengangkutan-Awam-Johor/data-api-docs,https://api.github.com/repos/Perbadanan-Pengangkutan-Awam-Johor/data-api-docs,Perbadanan Penangkutan Awam Johor (PAJ) Open Data Api,"# PAJ Data API Documentation
![Paj banner](/images/data-api-banner.png)

<p align=""center"">
<a title=""version"" href=""""><img src=""https://img.shields.io/badge/version-1.0.0-green""></a>
<a title=""version"" href=""""><img src=""https://img.shields.io/badge/Status-Release-green""></a>
<a title=""version"" href=""""><img src=""https://img.shields.io/badge/Copyright-PAJ-blue""></a>
<a title=""version"" href=""""><img src=""https://img.shields.io/badge/License-GNU v3.0-blue""></a>
<a title=""version"" href=""""><img src=""https://img.shields.io/badge/Server-Up-green""></a>

</p>

## Overview
The documentation to assist you with on how to use PAJ Data API to intergrate it with you apps. 

Perbadanan Pengangkutan Awam Johor provides an open API service to any third parties whose need it. These data can be used as tools such as data analysis, creating reporting and understanding vehicle workflow.

Most of available open API provided is related to Bas Muafakat Johor (BMJ) which is bus services working directly under Perbadanan Pengangkutan Awam Johor.

## Contact

If you have any questions regarding our guides or suggestion, please contact PAJ Support at official@paj.com.my.

## Available API

Below are available API options that available by public users

- [Bus Route](/netverify/netverify-web-v4.md)
- [Route GeoJson](/netverify/performNetverify.md)
- [Route Schedule](/netverify/performNetverify.md)
- [Operator List](/netverify/performNetverify.md)
- [Bus Live Data](/netverify/performNetverify.md)
- [Terminal, Stops and Pole](/netverify/performNetverify.md)
- [Bus List](/netverify/performNetverify.md)
- [Bus History](/netverify/performNetverify.md)
- [Bus Report Calendar](/netverify/performNetverify.md)


## Get Your API Key

You can get your key from [https://dataapi.paj.com.my](https://dataapi.paj.com.my/key). A valid account are needed to get the key.

## Using API Key

1. Get your API Key [here](https://dataapi.paj.com.my/key)

2. To get the response, you will need to pass 'api-key' header with the given key. Same key can be use to make consicutive request from the server.

Request example using Python:
```python
import requests

api_key = 'YOUR_API_KEY'
headers = {'api-key': api_key}
response = requests.get('https://dataapi.paj.com.my/api/v1/route/name/P101', headers=headers)
if response.status_code == 200:
    print(response.json())
else:
    print('Error:', response.status_code)
```

Example of success response:
```json
{
    ""status"": ""success"",
    ""data"": [
        {
            ""name"": ""P101"",
            ""bus_vendor_id"": 1,
            ""distance"": 21.5,
            ""special_Line"": 0,
            ""total_trip"": 33,
            ""active"": 1
        }
    ]
}
```

Example of error response:
```json
{
    ""status"": ""error"",
    ""message"": ""Invalid API Key""
}
```

## Rate Limit
- There is a limit of 6 request per minute for a single key and IP address.

## Error Message

In case you get an error message, below is description why it is happening

| Error Message     | Description                                                  |
| ----------------  | ------------------------------------------------------------ |
| API Key Required  | No header with 'api-key' detected |
| Invalid API Key   | There is no such api-key exist in data api database        |
| Invalid parameter or endpoint | Make sure that your url endpoint is correct or make sure that url parameter is correct |
| Rate limit reach | Reach 1 minute request call. You will need to wait another 1 minute for a cooldown |

## Empty Valid Response
In the case of zero data available for particular reponse. The system will simply reply with an empty array like example below
```json
{
    ""status"": ""success"",
    ""data"": []
}
```
## Acknowledgement

|   |   |
|---|---|
| <img src=""/images/logo-paj-sm.png"" height=""50"" />  | Thanks for support from Perbadanan Pengangkutan Awam Johor for making this public API possible |


# License

The patches published as part of the PAJ Data API are released under [GNU GPL v3](./LICENSE).

",2,2,0,0,transportation,"[johor, malaysia, open-data, transportation, vehicle, vehicle-tracking]",00000
234,Traveler,stachurski2,N/A,https://github.com/stachurski2/Traveler,https://api.github.com/repos/stachurski2/Traveler,iOS Travel Planner - app created to use e-podroznik service by iphone,"# Traveler

Own-made ios app to use e-podroznik.pl service on iPhone, written in swift.

Disclaimer:
Usage of app could be illegal according to e-podroznik.pl regulations. 
I've written the app on educational purposes. 
",2,2,0,0,transportation,"[bus, poland, railway, train, transportation]",00000
235,transitdash,wqi,N/A,https://github.com/wqi/transitdash,https://api.github.com/repos/wqi/transitdash,GIS tool for user-friendly visualization of transportation availability,"# Transit Dashboard
This public transportation dashboard was developed as part of the [Data Science for Social Good](https://dsi.ubc.ca/data-science-social-good-dssg-program) program at the University of British Columbia. It provides a layered interface for visualization of public transportation networks and service availability, with options to explore how transportation and socioeconomic factors interact within a region. 

Although the default implementation is configured for the City of Surrey, BC, the dashboard is designed to be region agnostic and can be easily reconfigured for any other region by swapping out the data files and default map boundaries.

![screenshot](https://i.imgur.com/QDnk3Xa.jpg)

## Setup
1. Ensure that Node.js 6.10.x or later is installed.
2. Run ```npm install``` in the root of the repository.
3. Run ```npm start``` to launch the application.

## Config
1. Swap out the appropriate data files in .geojson format in the /dist/data directory and update filenames in /src/index.js.
2. Update default map view boundaries in /src/index.js.
",2,2,1,0,transportation,"[dashboard, transportation, transportation-network]",00000
236,Simulation,vahidnourbakhsh,N/A,N/A,https://api.github.com/repos/vahidnourbakhsh/Simulation,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C172:2772:28ED71B:5431601:652242C1.'}",N/A,N/A,N/A,N/A,transportation,"[N, /, A]",00000
237,Truck-transport-industry,Tymoteush,N/A,N/A,https://api.github.com/repos/Tymoteush/Truck-transport-industry,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C110:458F:2C63BA4:5B0858F:652242C1.'}",N/A,N/A,N/A,N/A,transportation,"[N, /, A]",00000
238,Last-Mile-Delivery,Pergamono,N/A,N/A,https://api.github.com/repos/Pergamono/Last-Mile-Delivery,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C11B:4776:2D6C8D:5E4FD4:652242C2.'}",N/A,N/A,N/A,N/A,transportation,"[N, /, A]",00000
239,chase-center-calendar,albertyw,N/A,N/A,https://api.github.com/repos/albertyw/chase-center-calendar,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C159:1CC6:2A55B88:56E4A82:652242C2.'}",N/A,N/A,N/A,N/A,transportation,"[N, /, A]",00000
240,xsharing-services-router,RWTH-i5-IDSG,N/A,N/A,https://api.github.com/repos/RWTH-i5-IDSG/xsharing-services-router,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C1FC:5A71:3066B56:6303ABC:652242C3.'}",N/A,N/A,N/A,N/A,transportation,"[N, /, A]",00000
241,RiderPickup,ribsthakkar,N/A,N/A,https://api.github.com/repos/ribsthakkar/RiderPickup,N/A,"# Avicena

### Problem Description

Avicena is an application that solves the patient pickup and dropoff
problem. Below is a rough description of the problem's attributes:

* There are some number of patients that must be transported from one
  location to one or more other locations through out the day, and there
  are some number of drivers available to complete the trips.
* For each leg of their trip a patient must be picked up from their
  starting location within a time window of the scheduled pickup time,
  and they must be dropped off no later than a short time interval after
  the scheduled dropoff time.
* Some trips known as ""merge"" trips mean that a patient has two back to
  back trips. These trips often indicate short visits to the pharmacy to
  pick up prescriptions. Therefore, the same driver must complete both
  legs.
* Some patients require wheelchair support in their vehicles, which only
  a subset of the drivers can provide. Drivers can only transport
  patients for which their vehicle is equipped.
* All drivers should receive approximately the same compensation, and
  all wheelchair drivers should receive a approximately the same number
  of wheelchair bound trips.
* Drivers are split into two groups. A group that begins before a
  designated ""early day time"" on Mondays, Wednesdays, and Fridays and
  another group that begins before the ""early day time"" on Tuesdays,
  Thursdays, and Saturdays. If there is a day where all drivers are from
  the same group, a part of the drivers will be randomly selected to
  temporarily be part of the second group.
* The goal is to minimize the total amount of time spent traveling on
  the road while ensuring to meet all of driver fairness requirements
  and trip scheduling requirements.

In general, the patient pickup and dropoff problem is a special case of
the Vehicle Routing with Time Windows problem. However, here we have
additional constraints that take into account the preferences and
fairness attributes for the drivers.

### Prepare Environment

Make sure IBM CPLEX Solver is installed. Use the following link:
[CPLEX](https://www.ibm.com/support/knowledgecenter/SSSA5P_12.7.1/ilog.odms.cplex.help/CPLEX/GettingStarted/topics/set_up/setup_synopsis.html)
Follow the instructions on the website to prepare the CPLEX
Installation with usage for Python. Make sure you do not re-install
CPLEX using PIP or it will overwrite the licensed version from IBM.
However, if you are unable to obtain a CPLEX license, PIP will
install a community version of CPLEX. (Warning: the community version
will likely only support on the order of 2 drivers and 7-10 trips)

Setup prerequisites

```
cd ~/Downloads
chmod 755 cplex_studio1210.linux-x86-64.bin
./cplex_studio1210.linux-x86-64.bin

sudo apt-get install postgresql postgresql-server-dev-all
sudo -u postgres createuser -P -d -r -s pickup
sudo -u postgres createdb -O pickup pickup
```

Setup python app

```
git clone https://github.com/ribsthakkar/RiderPickup
cd RiderPickup/
python3 -m virtualenv ~/.riderpickup
source ~/.riderpickup/bin/activate
python3 -m pip install -r requirements.txt
python setup.py develop
python /opt/ibm/ILOG/CPLEX_Studio1210/python/setup.py install
```

### Setup

#### Application Configuration

`config/sample_app_config.yaml` provides an example configuration YAML.
A configuration file of this format must be placed at the path
`config/app_config.yaml` to run the application. Below is a glossary of
the application configuration parameters.

*Note the ""."" syntax below just indicates that the field after the "".""
is a child parameter of the field before the ""."" See the
`config/sample_app_config.yaml` for proper format.*

| Parameter                   | Type    | Details                                                                                                                                   |
|-----------------------------|---------|-------------------------------------------------------------------------------------------------------------------------------------------|
| database.enabled            | Boolean | True if input data such as revenue table, merge addresses, driver table will come from database. Otherwise it uses CSVs with paths below |
| database.url                | String  | URL to PostgreSQL database. Ignored if database.enabled is False                                                                        |
| geocoder_key                | String  | API Key for geocoding. Currently only support [OpenCage Geocoder](https://opencagedata.com/api)                                     |
| trips_parser                | String  | Parser used to read the incoming trips file. See more [here](./avicena/parsers/README.md)                                                                                   |
| optimizer                   | String  | Model used to calculate and assign trips. See more details below.                                                                                                  |
| seed                        | Integer | Sets the Python random seed.                                                                                                             |
| merge_address_table_path    | String  | Path to CSV representation of merge_address_table. Ignored if database.enabled is True.                                              |
| revenue_table_path          | String  | Path to CSV representation of revenue rate. Ignored if database.enabled is True.                                                       |
| driver_table_path           | String  | Path to CSV representation of drivers table. Ignored if database.enabled is True.                                                      |
| output_directory            | String  | Path to directory where the generated files are stored. These include the one or more parsed trips file (depending on parser), the resulting CSV with the solution, and an HTML page that provides a visualization of the solution.                                          |

In addition to the `app_config.yaml`, you will need to provide a
`config/optimizer_config.yaml`. This configuration file provides the
configuration for optimizer model (specified in the `app_config.yaml`)
used to solve the problem. Below is a list of supported optimizers and
their configuration definitions. Samples are also provided in the
`config/` folder.

| Optimizer           | Configuration Details  | Comments                                                                                                                                                                                                                        |
|---------------------|------------------------|---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
| GeneralOptimizer    | [Glossary](./avicena/optimizers/README.md#GeneralOptimizer) | Self Developed Formulation to Solve Problem |
| PDWTWOptimizer      | [Glossary](./avicena/optimizers/README.md#PDWTWOptimizer)   | (Not working in non-experimental mode yet) Formulation from following paper with additional fairness constraints integrated [here]() |

Finally, the app will need a `log_config.yaml` with details about how
and what kind of logging we expect from the application. Information
about how to setup the log config can be found at Python's *logging*
module [documentation](https://docs.python.org/3/howto/logging.html).
For simplicity, a copy of the `sample_log_config.yaml` will suffice.

#### Database Setup (optional)

The command-line application supports interfacing with a PostgreSQL
database. We assume you have a PostgreSQL server hosted somewhere with a
configured username and login. If in the database section in your
`config/app_config.yaml` the ""enabled"" flag is set to True, Avicena will
poll inputs such as the merge address table, the revenue rates table,
and the drivers table from the database. Therefore it is assumed that
the data is already in your database. Follow the instructions below to
setup the database

The database is versioned by alembic. In order to generate the initial
tables in your database, make a copy of `sample_alembic.ini` in the same
directory and name it `alembic.ini`. Modify the line in the file
starting with `sqlalchemy.url = <fake_url>` and replace `<fake_url>` the
URL to connect to your database. Be sure that the URL of the database
will be the same one used in the `app_config.yaml`.

Run the command:

```
alembic upgrade head
```

After that, the database tables should be created.

Once the tables are created, the *revenue_rate*, *merge_details*, and
*driver* tables must be populated with data. In order to help populate
your database with the required inputs, a script
`avi-import` is provided. It can be run as follows:

```
usage: avi-import [-h] -r REVENUE_TABLE_FILE -m MERGE_DETAILS_FILE -d
                           DRIVER_DETAILS_FILE

Populate Database with Base Information needed including Revenue Table, Merge
Address Details, and Driver Details.

optional arguments:
  -h, --help            show this help message and exit

required arguments:
  -r REVENUE_TABLE_FILE, --revenue-table-csv REVENUE_TABLE_FILE
                        Path to revenue table CSV
  -m MERGE_DETAILS_FILE, --merge-details-csv MERGE_DETAILS_FILE
                        Path to merge details CSV
  -d DRIVER_DETAILS_FILE, --driver-details-csv DRIVER_DETAILS_FILE
                        Path to driver details CSV
```

The three input CSV files must follow the same format and header as
shown by `sample_data/sample_rev_table.csv`,
`sample_data/sample_merge_details.csv`, and
`sample_data/sample_drivers.csv`.

### How to Run

Avicena is run through the command line by simply following the format
below. If the database is enabled in the application configuration, then
the resulting dispatch ""Assignment"" and its driver specific solutions
""DriverAssignment"", will be stored in the database. In the output
directory you will find any files generated during the model's running.
At the least, they include `parsed_trips.csv` with the basic trip
details standarized and parsed from the original trips file,
`solution.csv` with the final dispatch assignments, `visualization.html`
which provides a visual representation of the final solution.

```
usage: avi-cli [-h] [-n NAME] [-s SPEED] [-d DATE] [-t TRIPS_FILE]
              [-i DRIVER_IDS [DRIVER_IDS ...]]

Run the Patient Dispatch Model

optional arguments:
  -h, --help            show this help message and exit

required arguments:
  -n NAME, --name NAME  Name of Model
  -s SPEED, --speed SPEED
                        Assumed Traveling Speed in MPH
  -d DATE, --date DATE  Date in MM-DD-YYYY format
  -t TRIPS_FILE, --trips-file TRIPS_FILE
                        Path to Trips File
  -i DRIVER_IDS [DRIVER_IDS ...], --driver-ids DRIVER_IDS [DRIVER_IDS ...]
                        List of driver IDs separated by spaces
```
",N/A,N/A,N/A,N/A,transportation,"[N, /, A]",00000
242,Bus-Nusantara,shashwatkansal,N/A,https://github.com/shashwatkansal/Bus-Nusantara,https://api.github.com/repos/shashwatkansal/Bus-Nusantara,Bus Nusantara aims to make intercity bus travel across Indonesia faster and better by reducing travel times for passengers and bus drivers,"[![BusNusantara Pull Request & Master CI](https://github.com/SenseiSoni/busnusantara-android/actions/workflows/android-master.yml/badge.svg)](https://github.com/SenseiSoni/busnusantara-android/actions/workflows/android-master.yml)
# Bus Nusantara
Bus Nusantara is an Android mobile app that aims to make intercity bus travel across Indonesia faster and better by reducing travel times for passengers and bus drivers. 

It is the 2nd Prize winner for the 2021 DRP Group Project by the Department of Computing at Imperial College London.

## Why was Bus Nusantara made?

Bus passengers, bus drivers as well as bus station ticket agents often found it extremely difficult to gauge the timings of bus arrivals, since there is no formal mechanism in place especially in the case of intercity buses. What could be an hour's wait often could easily transform into a 2 or 3 hour wait for a passenger, due to unforeseen stops, traffic and other issues leading to a severe pain point for bus passengers. This is on top of an already double-digit travel time purely due to distance, as well as time for meal breaks, toilet stops, as well as detours to stations that may not even have passengers waiting for the buses causing further delay.

In fact, after liaising with over 185 bus passengers and 53 bus drivers, we found:
- 45.9% complained the bus timings to be extremely unreliable
- 32.4% complained the duration of the journey too long
- 15.7% complained of having too many stops in the middle of the journey
- Average bus waiting time was 50 minutes

After making this app, over 45 minutes were saved per passenger's journey. Projecting using the intercity bus passenger count of 23 million just during the time of Idul Fitri, over 17.25 million hours collectively could have been saved in journey time.

## What does Bus Nusantara do?

The people we researched with informed us that they would really appreciate being about to know:
- the location of the bus at present
- it's estimated time of arrival
- knowing the journey duration

This is what Bus Nusantara aimed for since its beginning. The app allows bus passengers to scan their bought tickets and are made aware of their bus's location, time of arrival, the stops it will take (at present calculation) and the amenities available on the bus, as well as some other additional information. This is important so the bus passengers know when they need to arrive at the bus stop to board the bus.

Bus drivers have a larger screen for tablets to accommodate for built-in dashboards on the bus. They can easily view bus stops, the route, expected time of arrivals, current number of passengers waiting at the bus stops, and whether any currently onboarded passenger would like to request a stop. These are important to make the bus journey more comfortable for the bus driver without passengers interfering, and avoid bus stops that are not required if there are no passengers waiting.

<!-- ![Bus Driver View of Bus Nusantara](https://user-images.githubusercontent.com/26791244/138616127-33ce03b4-770e-4af4-b099-d1891c2dbaf3.png)
![image](https://user-images.githubusercontent.com/26791244/138616234-703274f0-d207-4cce-970f-d2aac7b4beb6.png) -->

<p float=""middle"">
  <img src=""https://user-images.githubusercontent.com/26791244/138616127-33ce03b4-770e-4af4-b099-d1891c2dbaf3.png"" width=""600"" />
  <img src=""https://user-images.githubusercontent.com/26791244/138616234-703274f0-d207-4cce-970f-d2aac7b4beb6.png"" width=""300"" /> 
</p>


## Engineerings

Bus Nusantara is an Kotlin-based android app built on Android Studio with dual language functionality in English and Bahasa Indonesia. It leverages Firebase as its backend due to its seamless integrations, NoSQL database, scalability and extensive testing support. Additionally, Google Cloud APIs are used using the Distance Matrix API to calculate distances between locations on Google Maps and Directions API to calculate the optimal route between any two given locations. Phones locations are tracked the user locations representing the bus driver to calculate the required information from the bus to the passenger or bus stop. Data is synced quickly between different phones due to concurrency to reduce power wastage and cellular data usage on phones, and event listeners attached to important database collections.


",2,2,2,0,transportation,"[bus, indonesia, intercity, logistics, transportation, travel]",00000
243,Forsinka,Ellipog,N/A,https://github.com/Ellipog/Forsinka,https://api.github.com/repos/Ellipog/Forsinka,Forsinka is a web application that displays all delayed arrivals to Ski Stasjon. ,"# Forsinka

### What does it do?
Forsinka is a web application that displays all delayed arrivals to Ski Stasjon. <br>
The app was mainly made as a learning opportunity, and to explore ReactJS, GraphQL, and the EnTur API.<br><br>

### How does it work? 
It uses the EnTur API to pull aimedArrivals, expectedArrivals, ID's, vehicle names and more. <br>
After all the data needed is pulled from the API it matches the aimedArrivals and expectedArrivals to see what arrivals were late. <br>
These late arrivals are then sent to a Mongoose database which stores all the data for later use. <br>
The data is then sent to the client where it is displayed on the page. <br>
Before it gets displayed it uses math to figure out how delayed the vehicle's arrival was, and parses the time of arrival into a more readable format. <br><br>
",2,2,1,0,transportation,"[api, css, html, js, reactjs, ruter-api, transportation]",00000
244,lss-chi-squared,samirsaci,N/A,https://github.com/samirsaci/lss-chi-squared,https://api.github.com/repos/samirsaci/lss-chi-squared,Lean Six Sigma with Python — Chi-Squared Test,"## Lean Six Sigma with Python — Chi-Squared Test 👷
*How to replace Minitab with Python to perform a Chi-Squared Test to explain a shortage of drivers impacting your transportation network*

<p align=""center"">
  <img align=""center"" src=""https://miro.medium.com/max/1280/1*2I7ueCDR39ZEw6jy3F4CTg.png"">
</p>

Lean Six Sigma (LSS) is a method based on a stepwise approach to process improvements.This approach usually follows 5 steps 
(Define, Measure, Analyze, Improve and Control) for improving existing process problems with unknown causes.

### Youtube Video
Find in the link below a short animated explained video to understand the concept behind this solution
<div align=""center"">
  <a href=""https://www.youtube.com/watch?v=GAvo3BaCvso""><img src=""https://github.com/samirsaci/lss-chi-squared/blob/main/thumbnail.webp"" alt=""Explainer Video Link""></a>
</div>

### Article
In this [Article](https://www.samirsaci.com/lean-six-sigma-with-python-chi-squared-test/), we will explore how Python can 
replace Minitab (Software widely used by LSS experts) in the Analysis step to test hypotheses and 
understand what could improve the performance metrics of a specific process.

### Scenario
You are the Inbound Transportation Manager of a small factory in the United States.
Your transportation network is simple, you have two routes:
- Route 1: coming from your northern regional hub (with difficult road conditions and busy traffic)
- Route 2: coming from your southern regional hub (with no traffic and a beautiful modern road)

Transportation is managed by an external service provider with a fleet of three trucks (with three different drivers: D1, D2, D3).

<p align=""center"">
  <img align=""center"" src=""https://miro.medium.com/max/640/1*cT0KZNU1zZzab1SyvU6taw.png"">
</p>

#### Problem
When an order is allocated to the northern regional hub the lead time to get the request accepted is 35% higher than the southern hub.
#### Question
Are there drivers avoiding as much as possible to be allocated to the north route?
#### Experiment
We have analyzed the shipments of the last **18 months** to build a **sample of 269 records**.

## Code
This repository code you will find all the code used to explain the concepts presented in the article.

## About me 🤓
Senior Supply Chain Engineer with an international experience working on Logistics and Transportation operations. \
Have a look at my portfolio: [Data Science for Supply Chain Portfolio](https://samirsaci.com) \
Data Science for Warehousing📦, Transportation 🚚 and Demand Forecasting 📈 
",2,2,1,0,transportation,"[chi-square-test, continuous-improvement, lean-six-sigma, logistics, supply-chain, supply-chain-management, transportation]",00000
245,SimTransHyperpath,momodupi,N/A,https://github.com/momodupi/SimTransHyperpath,https://api.github.com/repos/momodupi/SimTransHyperpath,A transportation simulator,"# SimTrans

## Install
* Python3
* numpy
* matplotlib

## Usage
| Modules |Description | Arguments | Return |
| -- |-------- | -------- | -- |
|  **SimTrans_Graph** |
| `add_node(n)` | add n as a new node | `n`: node | N/A |
| `add_edge(n1,n2)` | add a new edge between n1 and n2 | `n1`: start node <br> `n2`: end node | N/A |
| `add_w_edge(n1,n2,w)` | add a new edge between n1 and n2 with weight w | `n1`: start node <br> `n2`: end node <br> `w`: edge weight | N/A |
| `update_w_edge(n1,n2,w)` | update weight to the edge (n1,n2) if exists | `n1`: start node <br> `n2`: end node <br> `w`: edge weight | N/A |
| `update_w_all_edges(m_f,m_t,m_c)` | update all edges weight with matrices | `mf`: flow matrix <br> `mt`: cost matrix <br> `mc`: cost matrix | N/A |
| `update_flow(n1,n2,f)` | update flow f for edge (n1,n2) | `n1`: start node <br> `n2`: end node <br> `f`: edge flow | N/A |
| `get_all_nodes()` | return all nodes in the graph | N/A | list of all nodes |
| `get_all_edges()` | return all edges | N/A | list of all edges |
| `get_all_paths(n1,n2)` | get all path from n1 to n2 | `n1`: start node <br> `n2`: end node | list of all paths |
| `get_paths_cost(n1,n2)` | get the cost for each path from n1 to n2 | `n1`: start node <br> `n2`: end node | list of all path cost |
| `get_flow(n1,n2)` | get flow from n1 to n2 | `n1`: start node <br> `n2`: end node | flow of (n1,n2) |
| `remove_node(n)` | remove node n with corresponding edges | N/A | N/A |
| `remove_edge(n1,n2)` | remove edge (n1,n2) if exists | N/A | N/A |
| `print_graph()` | print the entire graph | `n1`: start node <br> `n2`: end node | N/A |
| `create_graph(M)` | create a graph with matrix M | `M`: edge matrix | N/A |
| `create_random_graph(ms)` | create a random graph with size | `ms`: number of nodes | N/A |
| **SimTrans_Passenger** |
| `get_decision(n1, n2)` | get passenger decision from n1 to n2 | `n1`: start node <br> `n2`: end node | list of probability distribution over all paths |
| `get_path()` | get the path of this passenger | N/A | selected path |
| `track_position(t)` | track the position of this passenger at time t | `t`: current time | current position |
| **SimTrans_Simulator** |
| `set_mode(mode)` | set the simulator mode | `'normal'`: simulator in normal mode with transfer time, no nomalized flow <br> `'notranstime'`: simulator without transfer time, no nomalized flow <br> `'wardrop'`: simulator without transfer time, nomalized flow for wardrop | N/A |
| `run_once(s,e,in,sn)` | run simulator one time | `s`: start time <br> `e`: end time <br> `in`: initial number of passengers <br> `sn`: number of passengers at each step | N/A |
| `run_sensitivity(s,e,mf,mt,mc,el,mtr,mcr)` | simulate sensitivity of equilibrium to each edge | `s`: start time <br> `e`: end time <br> `mf`: flow matrix <br> `mt`: cost matrix <br> `mc`: cost matrix <br> `el`: list of edge <br> `mtr`: list of `mt` <br> `mcr`: range of `mc`  | N/A |
| `plot_edge_flow(n1,n2,s,e)` | plot flow for edge (n1, n2) from time s to e | `n1`: start node <br> `n2`: end node <br> `s`: start time <br> `e`: end time | N/A |
| `plot_all_edges_flow(s,e)` | plot flow for each edges from s_time to e_time | `s`: start time <br> `e`: end time | N/A |
| `plot_all_paths_cost(s,e)` | plot cost of each path from time s to e | `s`: start time <br> `e`: end time | N/A |
| `plot_all_paths_decision(s,e)` | plot decision of each path from time s to e | `s`: start time <br> `e`: end time | N/A |
| `plot_show()` | display all plotted figure | N/A | N/A |



## An example
A simple simulator for a city with 6 nodes and 3 transportation modes.

```python
# Import all required package
from SimTrans_Graph import SimTrans_Graph
from SimTrans_Simulator import SimTrans_Simulator
import numpy as np
```

```python
# Generate graph
g = SimTrans_Graph()

# a graph with original 0 and destination 6
g_m = np.array([
    [0,1,1,0,0,0,1],
    [0,0,1,1,0,0,0],
    [0,1,0,0,0,1,0],
    [0,0,0,0,1,0,0],
    [0,0,0,0,0,1,1],
    [0,0,0,0,1,0,1],
    [0,0,0,0,0,0,0]
])

# initial flow
m_f = np.zeros((7,7))

# time consumption
m_t = np.array([
    [0,20,5,0,0,0,10],#0
    [0,0,5,20,0,0,0],#1
    [0,5,0,0,0,7,0],#2
    [0,0,0,15,0,0],#3
    [0,0,0,0,0,5,15],#4
    [0,0,0,0,5,0,2],#5
    [0,0,0,0,0,0,0]#6
])

# pecuniary consumption
m_c = np.array([
    [0,2,8,0,0,0,30],#0
    [0,0,0,2,0,0,0],#1
    [0,0,0,0,0,7,0],#2
    [0,0,0,0,2,0,0],#3
    [0,0,0,0,0,0,2],#4
    [0,0,0,0,0,0,8],#5
    [0,0,0,0,0,0,0]#6
])

# create a graph
g.create_graph(g_m)

# update the flow and cost
g.update_w_all_edges(m_f, m_t, m_c)

# set the simulator with graph 
m = SimTrans_Simulator(g, 0, 6)

# initial passengers: 5
# arriving passengers at each time: 5
# running time: 3600
start_time = 0
end_time = 3600
m.set_mode('normal')
m.run(start_time, end_time, 5, 1)

# plot the flow of edges and cost of paths
m.plot_all_edges_flow(start_time, end_time)
m.plot_all_paths_cost(start_time, end_time)
m.plot_all_paths_decision(start_time, end_time)
m.plot_show()
```


",2,2,2,0,transportation,"[python, simulation, simulator, transportation]",00000
246,Bus-Tracking-System,API-AutoFlow,API-AutoFlow,https://github.com/API-AutoFlow/Bus-Tracking-System,https://api.github.com/repos/API-AutoFlow/Bus-Tracking-System,🧩 Solution for tracking bus location around New York City,"# transportation-postgres
Summary

    This is a use case for transportation system.
    Postgres is used to manage database. 

    - First Video Demo for Developers:
        https://www.youtube.com/embed/kyrjl85Oo6Q
        in this video, I introduced our problem and the fundamentals of the solution.
        And created two first features: (1)get-buses (2)insert-bus
        then I used some basic actions:
            - JSON / Decode
            - String / Join
            - Postgres / Query
        
    - Second Video Demo for Developers:
        https://www.youtube.com/watch?v=ZTPNEC3iTRQ
        using new actions: 
            - Iteration / For-Each 
            - Array / Insert-at 
            - Array / Sort 
            - Data / Set 

        Also, to do similar actions in API AutoFlow, we used "" Copy / Paste "".
        
     - Third Video Demo for Developers:
        https://youtu.be/CRXFtCQYdGo
        in this video we presented:
            - Timers
            - Files
            - Flows
            - integration with Slack Webhook
 
            
      - New features after ""Third Video"":
            - EndPoint: /insert-bus-route : to insert/update bus route
                request-body: bus_id & station_id[]
            - EndPoint: /update-timers : turns timers on/off
                request-body: {""update"":""on/off"",""check"":""on/off"",""clean"":""on/off""}
                                ""update"" = ""update bus position""        timer
                                ""check""  = ""check bus situation""        timer
                                ""clean""  = ""clean bus_position table""   timer
            - EndPoint: /simulate-position: this is a GET method to resieve different positions for bus_1
                                            every GET request recieves different Lat&Long
",2,2,4,0,transportation,"[postgres, transportation]",00000
247,Fare-Prediction,neel-ds,N/A,https://github.com/neel-ds/Fare-Prediction,https://api.github.com/repos/neel-ds/Fare-Prediction,Developed end-to-end taxi fare prediction using big data NYC Taxi Fare on Azure portal and achieved best performance by ensemble methods.,"# Fare Prediction
The transportation industry is thriving in the hotspot city. Such 
companies 
are providing ridesharing services from door to door using algorithms or 
chunks of data to leverage the customers at a valuable price. Generally, 
those fares are dynamic and estimated considering the distance but the 
target fare should not be dependent only on trip distance. It must 
consider 
significant features like the demands, traffic, and potential area based 
on 
data from past years. So, the approach considers the service provider and 
customer to get a relative benefit over the competition. Likewise, the 
proposed method will include end-to-end development for real-world usage.

**Evaluation and Conclusion**
| Model Name | RMSE | R2 Score |
| :-----: | :-----: | :-----: |
| Linear Regression | 6.64 | 54.94% |
| Decision Tree | 5.20 | 71.86% |
| Random Forest | 5.26 | 71.49% |
| Gradient Boosting | 4.80 | 76.22% |

The purpose of this project is to estimate those fare calculations, with a 
machine learning approach that could be fast enough to utilize while 
providing services to the real-time customer. The results of the 
regression 
showed that the proposed method has potential as far as different known 
quality metrics. Furthermore, I implemented feature scaling and the 
performance improved. In the deployment, the Gradient Boosting model performed well with 4.47 RMSE & R2 score of 79.22%. The model has been 
registered in the MLflow so it can be served in real-time as a REST 
endpoint which allows HTTPS requests and gives the output based on the 
input request by the client. Later models can be more robust and precise 
by utilizing real-time traffic data. To sum up, test evaluation and 
outright insights can be implemented in the food delivery chain or other 
product delivery services strategically as per the requirement and domain 
expertise.

Kindly read the project [documentation 
file](https://github.com/neel-ds/Fare-Prediction/blob/main/Fare%20Prediction%20-%20Docs.pdf) for getting started. For 
more details of the project, refer the detailed [report 
file](https://github.com/neel-ds/Fare-Prediction/blob/main/Fare%20Prediction%20-%20Report.pdf). To download the dataset 
[here](https://www.kaggle.com/competitions/new-york-city-taxi-fare-prediction/data).

Copyrights © 2022 by Neel Patel.
All rights are reserved.
",2,2,1,0,transportation,"[apache-spark, azure, big-data, big-data-analytics, databricks, delivery-service, hacktoberfest, hacktoberfest-accepted, hacktoberfest2022, machine-learning, mlflow, mlops, prediction, taxi-service, transportation]",00000
248,analysis-ui,conveyal,conveyal,https://github.com/conveyal/analysis-ui,https://api.github.com/repos/conveyal/analysis-ui,Front-end for Conveyal Analysis. Model and analyze transport scenarios.,"# Analysis UI

This is the user interface component of [Conveyal Analysis](https://conveyal.com), which allows users to create public transport scenarios and evaluate them in terms of cumulative opportunities accessibility indicators.

Please note that **Conveyal does not provide technical support for third-party deployments of Analysis**. We provide paid subscriptions to a cloud-based deployment of this system which performs these complex calculations hundreds of times faster using a compute cluster. This project is open source primarily to ensure transparency and reproducibility in public planning and decision making processes, and in hopes that it may help researchers, students, and potential collaborators to understand and build upon our methodology.

## [R5 v6.4](https://github.com/conveyal/r5/releases/tag/v6.4)

The UI requires R5 version v6.4. Later versions of R5 no longer work with this repository.
",2,2,3,1,transportation,"[analysis, modeling, transportation]",00000
249,Model_Ogolny_Miejskiej_Mobilnosci,RafalKucharskiPK,N/A,https://github.com/RafalKucharskiPK/Model_Ogolny_Miejskiej_Mobilnosci,https://api.github.com/repos/RafalKucharskiPK/Model_Ogolny_Miejskiej_Mobilnosci,"Model ogólny mobilności miejskiej dla miast małych i średnich - do celów dydaktycznych, badawczych i innych (c) Rafal Kucharski, Politechnika Krakowska, 2018","# Model_Ogolny_Miejskiej_Mobilnosci
Ogólny model mobilności miejskiej dla miast małych i średnich zapisany w formie zbioru plików edytowalnych, oraz skompilowanych dla modelu mobilności zapisane w programie PTV VISUM (ver. 17.01-05) www.ptvgroup.com/pl

Do celów dydaktycznych, edukacyjnych, rozwojowych, badawczych i innych.

Zawiera:
* model dla miasta średniego w formie pliku .ver w wersji [pustej](https://github.com/RafalKucharskiPK/Model_Ogolny_Miejskiej_Mobilnosci/blob/master/MOMM_pusty.ver) , oraz z przykładowym modelem dla [Gniezna](https://github.com/RafalKucharskiPK/Model_Ogolny_Miejskiej_Mobilnosci/blob/master/MOMM.ver), 
* [menadżer scenariuszy](https://github.com/RafalKucharskiPK/Model_Ogolny_Miejskiej_Mobilnosci/tree/master/MOMM) dla modelu Gniezna
* [zbiór](github.com/RafalKucharskiPK/Model_Ogolny_Miejskiej_Mobilnosci/tree/master/Dydaktyka/) materiałów dydaktycznych
* [zbiór](https://github.com/RafalKucharskiPK/Model_Ogolny_Miejskiej_Mobilnosci/tree/master/dane) edytowalnych otwartych plików z parametrami sieci, UDAs, procedurami, formułami modelu popytu, dla innych modeli (Kraków, Małopolska, Warszawa i inne)

## Ogólny sposób użycia

*Najprostszy* klikamy zielony przycisk `Clone or Download` i potem `Download ZIP` - mamy repozytorium na naszym komputerze, możemy go używać.
*Najlpeszy* Jest ot repozytorium github które pozwala na zarządzanie wersjami, pracę wspólną i ciągłą aktualizacje. Dla chcących poznać podstawy github [polecam](https://guides.github.com/activities/hello-world/), dla nieprogramistów polecam [GitHubDesktop](https://desktop.github.com)
*Jeszcze lepszy* Dla chcących dołączyć do tego pojektu (*collaborator*), dodawać, poprawiać i edytować pliki zapraszam. Proszę o kontakt mailowy rkucharski@pk.edu.pl, lub po prostu o: *stworzenie brancha wraz z commitami i opisem a potem pull request na merge do master* (wprost przepiękna polszczyzna :D)

# Zawartość


## Plik MOMM.ver
Plik MOMM.ver zawiera plik programu PTV VISUM możliwy do otwarcia przy użyciu wersji akademickiej porgramu do pobrania ze strony http://cgi.ptvgroup.com/php/lng/vision_student_download.php?lng=en

Model ten zawiera bazową sieć drogową dla:
* wybranego miasta (Gniezno), 
* sparametryzowaną zgodnie z typami odcinków określonymi w [link_types.net](https://github.com/RafalKucharskiPK/Model_Ogolny_Miejskiej_Mobilnosci/blob/master/dane/srednie/link_types.net)
* z funkcjami oporu BPR3 dla wszystkich odcinków, zgodnie z [proecdures.xml](https://github.com/RafalKucharskiPK/Model_Ogolny_Miejskiej_Mobilnosci/blob/master/dane/srednie/procedures.xml)
* z modelem popytu określonym w [dmd.dmd](https://github.com/RafalKucharskiPK/Model_Ogolny_Miejskiej_Mobilnosci/blob/master/dane/srednie/dmd.dmd)
* o 9 motywacjach podróży 
```
D-P-D, D-I-P, D-N-D, D-U-D, D-I-D, NZD
```
* liczbie podróży określanej na podstawie zmiennych objaśniających rejonów 
```
LICZBA_MIEJSC_PRACY_OGOLEM
LICZBA_MIESZKANCOW
MIEJCA_PRACY_W_USLUGACH
MIEJSCA_NA_UCZELNIACH
MIEJSCA_PRACY_W_PRZEMYSLE
MIEJSCA_W_SZKOLACH
```
* parametrach modelu popytu określonych na poziomie `DemandStrata'

```
 | CODE | NAME | D_RUCHLIWOSC_DOBOWA | D_ASC | U_KZ | D_URANO | D_UPOPO | D_WSPNAPELNIENIA | D_MNOZNIKSEZONOWY |
| 01 D-P | Dom - Praca | 0.40 | 10 | 0.45 | 0.30 | 0.01 | 1.30 | 1.00 |
| 02 P-D | Praca - Dom | 0.35 | 10 | 0.45 | 0.00 | 0.32 | 1.30 | 1.00 |
| 03 D-N | Dom - Nauka | 0.10 | 10 | 0.80 | 0.15 | 0.01 | 1.30 | 1.00 |
 | 04 N-D | Nauka - Dom | 0.10 | 10 | 0.80 | 0.00 | 0.10 | 1.30 | 1.00 |
| 05 D-U | Dom - Uczelnia | 0.05 | 10 | 0.70 | 0.10 | 0.01 | 1.30 | 1.00 |
| 06 U-D | Uczelnia - Dom | 0.05 | 10 | 0.70 | 0.00 | 0.10 | 1.30 | 1.00 |
| 07 D-I | Dom - Inne | 0.20 | 10 | 0.30 | 0.10 | 0.10 | 1.30 | 1.00 |
 | 08 I-D | Inne - Dom | 0.25 | 10 | 0.30 | 0.00 | 0.15 | 1.30 | 1.00 |
 | 09 NZD | Nie związane z domem | 0.00 | 10 | 0.40 | 0.05 | 0.15 | 1.30 | 1.00 |
```

* zestawie procedur określonym w [proecdures.xml](https://github.com/RafalKucharskiPK/Model_Ogolny_Miejskiej_Mobilnosci/blob/master/dane/srednie/procedures.xml)


## Folder MOMM - manadżer scenariuszy

W folderze tym znajduje się manadżer scenariuszy otwierany poprzez [MOMM.vpdbx](https://github.com/RafalKucharskiPK/Model_Ogolny_Miejskiej_Mobilnosci/blob/master/MOMM/MOMM.vpdbx) 
base version to MOMM.ver (opisany powyżej).
* Podstawowe wskaźniki: 'PojKm, PojH, VŚrednia`
* Jedna modyfikacja zmiany w liczbie ludności
* Jedna modyfikacja zmiany w sieci (inwestycja drogowa)
* Trzy modyfikacje dla szczytu porannego, popołudniowego i doby
* Cztery scenariusze: bazowy, więcej ludności, nowa inwestycja, nowa inwestycja plus więcej ludności.

## Folder **dane**

Dane w formie edytowalnej (`link_types.net, procedures.xml, dmd.dmd`), w miarę dostępności z opisami  dla modeli:
* Opisanego powyżej
* Krakowa (2013)
* Warszawy (MTAW 2015)
* Regionalnego Modelu Ruchu (w ramach RID)
* zapraszam do dodawania swoich (po uprzednim upewnieniu się, że nie pójdziemy za to do więzienia)

## Folder dydaktyka

Z materiałami dydaktycznymi - opisy w odpowiednich folderach.
* Prognozowanie Ruchu
* [Miejski Transport Zbiorowy - studia podyplomowe](https://github.com/RafalKucharskiPK/Model_Ogolny_Miejskiej_Mobilnosci/blob/master/Dydaktyka/Miejski%20Transport%20Zbiorowy/TUTORIAL.MD)

# Błędy i wnioski racjonalizatorskie

Zgodnie z przyjętą na github praktyką błędy proszę zgłaszać w formie `issues` z opisem czego dotyczą (dla zalogowanych, dla bardzo niechcących się logować proszę o zgłaszanie błędów mailowo).

# Autorzy
Materiał powstawał w Katedrze Systemów Transportowych Politechniki Krakowskiej od czasów prof. Andrzeja Rudnickiego aktualnie kierowanej przez dr hab. inż. Andrzeja Szaratę kierownika większości projektów w ramach których powstał ten materiał, budowany głównie siłami dr inż. Tomasza Kulpy, mgr inż. Arkadiusza Drabickiego, moimi oraz wielu studentów którzy nam pomagali.

Przy wykorzystaniu (zarówno w pracach komercyjnych, artykułach naukowych, czy materiałach dydaktycznych) proszę cytować jako: *Rafał Kucharski. (2018, March 27). RafalKucharskiPK/Model_Ogolny_Miejskiej_Mobilnosci: First release (Version 0.0.1). Zenodo. http://doi.org/10.5281/zenodo.1208635* [![DOI](https://zenodo.org/badge/126968926.svg)](https://zenodo.org/badge/latestdoi/126968926) 

#  Licencja 

Szczegółowe zapisy licencji: [licence](https://github.com/RafalKucharskiPK/Model_Ogolny_Miejskiej_Mobilnosci/blob/master/LICENSE)
, w skrócie można używać, zmieniać, poprawiać, korzystać i zarabiać, ale trzeba podawać źródło. Można wykrozystać do tworzenia własnych materiałów dydaktycznych, ale proszę o udostępnienie ich dla innych w folderze [Dydaktyka](github.com/RafalKucharskiPK/Model_Ogolny_Miejskiej_Mobilnosci/tree/master/Dydaktyka/)






",2,2,3,0,transportation,"[demand-forecasting, ptv, transport, transportation, transportation-network]",00000
250,feeds.planar.network,planarnetwork,planarnetwork,https://github.com/planarnetwork/feeds.planar.network,https://api.github.com/repos/planarnetwork/feeds.planar.network,"GTFS feeds for bus, train and plane","<meta http-equiv=""refresh"" content=""0; URL='https://planar.network/projects/feeds'"" />

# GTFS Feeds  

Planar Network maintain a [number of tools](https://www.github.com/planarnetwork) for converting various industry standards to GTFS. Where possible we maintain a public version of the feed itself on [transitfeeds.com](http://transitfeeds.com).

## Rail

Data is supplied and licensed by [Rail Delivery Group](https://www.raildeliverygroup.com/) and is available directly through their [data portal](http://data.atoc.org/).

Download the latest GTFS feed: [gb-rail-latest.zip](https://s3.eu-west-2.amazonaws.com/feeds.planar.network/gb-rail-latest.zip)

## Bus

Coming soon.

## Flights

We have an [open source tool](https://github.com/planarnetwork/ssim2gtfs) to convert SSIM flight schedules to GTFS but no data with a license to public the data in GTFS format. If you would like us to host any feeds please [get in touch](mailto:info@planar.network).
",2,2,4,0,transportation,"[data, feeds, gtfs, transit, transportation]",00000
251,atam,atam-analytics,atam-analytics,https://github.com/atam-analytics/atam,https://api.github.com/repos/atam-analytics/atam,strategic transport modelling framework for Active Transport (i.e. cycling and walking modes) as well as emerging micro-mobility modes ,"# {ATAM} Active Transport Analytics Model
**Overview of ATAM**
- **Active Transport Analytics Model (""ATAM"")** is a new strategic transport modelling and data visualization framework for Active Transport **(“AT”)** (i.e. cycling and walking modes) as well as emerging micro-mobility modes 

- **Proof of Concept (“POC”)** model developed for cycling in Brisbane, QLD Australia

- **Model structure and outputs** - key features: 
  - **Networks** – detailed networks, which consider factors such as safety to AT users, are a model input. Networks can be curated from sources including OpenStreetMap and other open data. Future scenario network changes can be tested for project appraisal.
  - **Demand** – demand matrices are an input and base year demand can be estimated from available sources such as household travel surveys, counts, Strava data, mobility data or other strategic model outputs. Future demand could be estimated based on demographic projections or demand matrices could be re-assigned from other strategic modelling tools.
  - **Outputs** – key outputs that ATAM can produce include: (i) volumes by link, (ii) journey times (by route and Origin-Destination **(“OD”)** matrix), (iii) analysis of trips using a particular link (i.e. Select Link Analysis **(“SLA”)**)

- **ATAM is built on open-source tools and does not require proprietary transport**
  - The core model functionality uses open-source tools - Python and QGIS (Tableau Public has been used to visualize data as well). No proprietary transport modelling software packages are required.
  - Brisbane POC demo/example model code and data is openly available on GitHub (https://github.com/atam-analytics/atam) and serves as an example to implement the ATAM modelling framework in other regions

- **Next steps** – improvements to the Brisbane POC model, develop POC models for other cities globally, build awareness and example use cases, feedback & improvement 

**********************************************************************************************************************************************************
**Further information about the project**
- Learn more about the ATAM project here - http://atamanalytics.com/
- See a visualised example of the type of outputs ATAM can produce for a single scenario - https://public.tableau.com/app/profile/peter.stephan/viz/ATAMBrisbanePOC11-Jan-22/VolumesStravastyling
- Questions or would like to get involved in the project? Contact Peter Stephan @ https://github.com/peterstephan
",2,2,1,0,transportation,"[bicycle, cycling, data-science, data-visualization, gis-data, micromobility, micromobility-services, python, traffic-analysis, transport, transportation, transportation-network, transportation-planning, transportation-problem, transportation-simulation]",00000
252,manniwatch,manniwatch,manniwatch,https://github.com/manniwatch/manniwatch,https://api.github.com/repos/manniwatch/manniwatch,Client/Server combo to display local public transport,"<!-- ⚠️ This README has been generated from the file(s) ""readme_blueprint.md"" ⚠️-->
[![-----------------------------------------------------](https://raw.githubusercontent.com/andreasbm/readme/master/assets/lines/water.png)](#manniwatch)

# ➤ ManniWatch
<p align=""center"">
		<a href=""https://github.com/manniwatch/manniwatch/actions?query=workflow%3ATest+branch%3Amaster""><img alt=""Test"" src=""https://github.com/manniwatch/manniwatch/workflows/Test/badge.svg?branch=master&event=push"" height=""20""/></a>
<a href=""https://codecov.io/gh/manniwatch/manniwatch/branch/master""><img alt=""codecov"" src=""https://codecov.io/gh/manniwatch/manniwatch/branch/master/graph/badge.svg"" height=""20""/></a>
<a href=""https://github.com/manniwatch/manniwatch/releases""><img alt=""GitHub release (latest SemVer)"" src=""https://img.shields.io/github/v/release/manniwatch/manniwatch?sort=semver"" height=""20""/></a>
<a href=""https://github.com/manniwatch/manniwatch/blob/master/LICENSE""><img alt=""GitHub license"" src=""https://img.shields.io/github/license/manniwatch/manniwatch"" height=""20""/></a>
<a href=""https://github.com/manniwatch/manniwatch""><img alt=""David"" src=""https://img.shields.io/david/dev/manniwatch/manniwatch"" height=""20""/></a>
<a href=""https://github.com/manniwatch/manniwatch/graphs/contributors""><img alt=""GitHub contributors"" src=""https://img.shields.io/github/contributors-anon/manniwatch/manniwatch"" height=""20""/></a>
	</p>


[![-----------------------------------------------------](https://raw.githubusercontent.com/andreasbm/readme/master/assets/lines/water.png)](#packages)

## ➤ Packages


| Name                                             | Description                                      | Version                                          |
|--------------------------------------------------|--------------------------------------------------|--------------------------------------------------|
| [@manniwatch/api-client](https://manniwatch.github.io/manniwatch/) | Node Client to consume the Api                   | <a href=""https://badge.fury.io/js/%40manniwatch%2Fapi-client""><img alt=""npm version"" src=""https://badge.fury.io/js/%40manniwatch%2Fapi-client.svg"" height=""20""/></a> |
| [@manniwatch/api-proxy-router](https://manniwatch.github.io/docs/api-proxy-router/index.html) | An express api router used to proxy requests to the upstream server | <a href=""https://badge.fury.io/js/%40manniwatch%2Fapi-proxy-router""><img alt=""npm version"" src=""https://badge.fury.io/js/%40manniwatch%2Fapi-proxy-router.svg"" height=""20""/></a> |
| [@manniwatch/api-proxy-server](https://manniwatch.github.io/manniwatch/) | Server Helper helper for TrapezeApi              | <a href=""https://badge.fury.io/js/%40manniwatch%2Fapi-proxy-server""><img alt=""npm version"" src=""https://badge.fury.io/js/%40manniwatch%2Fapi-proxy-server.svg"" height=""20""/></a> |
| [@manniwatch/api-types](https://github.com/manniwatch/manniwatch/tree/master/packages/api-types) | Api Types and helper for Trapeze Api             | <a href=""https://badge.fury.io/js/%40manniwatch%2Fapi-types""><img alt=""npm version"" src=""https://badge.fury.io/js/%40manniwatch%2Fapi-types.svg"" height=""20""/></a> |
| [@manniwatch/assets](https://manniwatch.github.io/manniwatch/) | Package holding shared assets for manniwatch     | <a href=""https://badge.fury.io/js/%40manniwatch%2Fassets""><img alt=""npm version"" src=""https://badge.fury.io/js/%40manniwatch%2Fassets.svg"" height=""20""/></a> |
| [@manniwatch/client-desktop](https://manniwatch.github.io/manniwatch/) | An electron app that wraps the manniwatch web app | <a href=""https://badge.fury.io/js/%40manniwatch%2Fclient-desktop""><img alt=""npm version"" src=""https://badge.fury.io/js/%40manniwatch%2Fclient-desktop.svg"" height=""20""/></a> |
| [@manniwatch/client-ng](https://github.com/manniwatch/manniwatch/tree/master/packages/client-types) | Angular Client for Manniwatch                    | <a href=""https://badge.fury.io/js/%40manniwatch%2Fclient-ng""><img alt=""npm version"" src=""https://badge.fury.io/js/%40manniwatch%2Fclient-ng.svg"" height=""20""/></a> |
| [@manniwatch/client-types](https://manniwatch.github.io/manniwatch/) | Api Types and helper for Client Api              | <a href=""https://badge.fury.io/js/%40manniwatch%2Fclient-types""><img alt=""npm version"" src=""https://badge.fury.io/js/%40manniwatch%2Fclient-types.svg"" height=""20""/></a> |
| [@manniwatch/pb-converter](https://manniwatch.github.io/manniwatch/) | Api Types and helper for Trapeze Api             | <a href=""https://badge.fury.io/js/%40manniwatch%2Fpb-converter""><img alt=""npm version"" src=""https://badge.fury.io/js/%40manniwatch%2Fpb-converter.svg"" height=""20""/></a> |
| [@manniwatch/pb-types](https://manniwatch.github.io/manniwatch/) | PB Types and helper for Trapeze Api              | <a href=""https://badge.fury.io/js/%40manniwatch%2Fpb-types""><img alt=""npm version"" src=""https://badge.fury.io/js/%40manniwatch%2Fpb-types.svg"" height=""20""/></a> |
| [@manniwatch/schemas](https://manniwatch.github.io/manniwatch/) | An express api router used to proxy requests to the upstream server | <a href=""https://badge.fury.io/js/%40manniwatch%2Fschemas""><img alt=""npm version"" src=""https://badge.fury.io/js/%40manniwatch%2Fschemas.svg"" height=""20""/></a> |
| [@manniwatch/vehicle-cache](https://manniwatch.github.io/manniwatch/) | Caching for vehicle locations                    | <a href=""https://badge.fury.io/js/%40manniwatch%2Fvehicle-cache""><img alt=""npm version"" src=""https://badge.fury.io/js/%40manniwatch%2Fvehicle-cache.svg"" height=""20""/></a> |
| [@manniwatch/vehicle-location-diff](https://manniwatch.github.io/manniwatch/) | Tool to calculate diff between vehicle location snapshots | <a href=""https://badge.fury.io/js/%40manniwatch%2Fvehicle-location-diff""><img alt=""npm version"" src=""https://badge.fury.io/js/%40manniwatch%2Fvehicle-location-diff.svg"" height=""20""/></a> |



[![-----------------------------------------------------](https://raw.githubusercontent.com/andreasbm/readme/master/assets/lines/water.png)](#build--test)

## ➤ Build & Test
Before you either do both run:

    npm install
    npx lerna bootstrap --no-ci
    npm run build

This project does use [lerna](https://github.com/lerna/lerna) so all common [commands](https://github.com/lerna/lerna/tree/master/commands) should work from the root directory!
Due to packages depending on each other a build is **required** first before running tests!

### Build & Test all packages

    npm run build
    npm run test

### Build & Test a specific package
    npx lerna run build --scope=@manniwatch/api-types
    npx lerna run test --scope=@manniwatch/api-types


[![-----------------------------------------------------](https://raw.githubusercontent.com/andreasbm/readme/master/assets/lines/water.png)](#docker)

## ➤ Docker

See [this repository](https://github.com/manniwatch/docker) for a Docker Container
",2,2,2,40,transportation,"[public-transport, pwa, transportation]",00000
253,mobility-marketplace,cal-itp,cal-itp,https://github.com/cal-itp/mobility-marketplace,https://api.github.com/repos/cal-itp/mobility-marketplace,"A one-stop resource for modern, equitable and accessible public transit products and services.","# Mobility Marketplace

[`camobilitymarketplace.org`](https://camobilitymarketplace.org/)

A one-stop resource for modern, equitable and accessible public transit products and services.

Deployed via [Netlify][netlify] [![Netlify Status](https://api.netlify.com/api/v1/badges/0fcfad48-7c0e-43f4-bb85-f7447f7f5fa6/deploy-status)](https://app.netlify.com/sites/cal-itp-transit-stop/deploys)

## Development

### Cloning the repository

You can run the usual `git clone` command to check out this project, but notice that this repo contains [Git submodules](https://git-scm.com/book/en/v2/Git-Tools-Submodules). To ensure you have all the files in those submodules, you can pass `--recuse-submodules` when cloning:

```
git clone --recurse-submodules https://github.com/cal-itp/mobility-marketplace.git
```

or if you've already cloned the project, you can run:

```
git submodule update --init
```

### Running a local instance

This is a [Jekyll][jekyll] static site. We include a [Devcontainer][devcontainer] configuration to help with local testing
and development.

1. Open the repository directory in VS Code
1. `Ctrl/Cmd+Shift+P` to bring up the Command Palette
1. Enter `Remote-Containers` to filter the command list
1. Enter or select `Rebuild and Reopen in Container` to start from scratch
1. Enter or select `Reopen in Container` to reopen the last devcontainer used

Once inside the devcontainer, you have the manually start the site:

1. `Ctrl/Cmd+Shift+P` to bring up the Command Palette
1. Enter `Tasks: Run Task`
1. Enter or select `Jekyll: Build Dev`
1. Open the app on `http://127.0.0.1:4000/`\*

Auto rebuild/reload will be active and will watch the site files for changes.

\* Try using <kbd>cmd</kbd> and clicking on the server address from the Terminal

## Documents

This site uses Google Cloud to manage static files, like the PDFs on the How To pages.

Requirements: User must be authorized on Google Cloud to access the resources-calitp-org bucket.

1. Go to https://cloud.google.com/
1. Click `Console`
1. Click `Cloud Storage`
1. Click `resources.calitp.org`
1. Click mobility-marketplace
1. Click button for action needed: Upload Files, Delete or Edit on a particular file

## License

Content (including graphics, images, video, documents, and text) in this repository is licensed under [CC-BY 4.0][content-license].

The source code in this repository used to format and display the content is licensed under [GPL-3.0][code-license].

[devcontainer]: https://code.visualstudio.com/docs/remote/remote-overview
[jekyll]: https://jekyllrb.com
[code-license]: ./LICENSE
[content-license]: ./content/LICENSE
[netlify]: https://www.netlify.com/
[netlify-build]: https://github.com/netlify/build-image
",2,2,8,17,transportation,"[government, gtfs, gtfs-realtime, gtfs-rt, mobility-as-a-service, open-loop, payments, transit-products, transportation]",00000
254,inrix-congestion,mr-fuller,N/A,https://github.com/mr-fuller/inrix-congestion,https://api.github.com/repos/mr-fuller/inrix-congestion,,"# inrix-congestion

This repository contains the R scripts I used to visualize road congestion in the TMACOG planning area using INRIX data. One file attempts to show a metric called Distance Weight Delay Hours (DWDH), a concept borrowed from INDOT, while another file, cmp_lottr_viz.r, visualizes a federally-mandated performance measure known as Level of Travel Time Reliability (LOTTR), not to be confused with Lord of the Rings (LOTR). The underlying calculations for the two metrics were done in postgreSQL, but the relevant SQL queries are available in a different [repository](https://github.com/mr-fuller/npmrds).

The test plot pdf provides an example of the type of output that is able to be generated.

",2,2,2,0,transportation,"[inrix, r, rstudio, transportation]",00000
255,Raahein,aayush1205,N/A,https://github.com/aayush1205/Raahein,https://api.github.com/repos/aayush1205/Raahein,"An attempt to simplify the PUBLIC TRANSPORTATION PROBLEM in India through an app and hence, increase its usage amongst people.","<img src=""images_git/RAAHEIN.png"" align=""right"" width = 100>

# RAAHEIN: From en-route to EndRoute

<h2> Objective and Elaboration: </h2>
A cross-platform capable application designed to efficiently modernise the Indian Public Transit while keeping a hefty focus on Practicality and Convenience.

The problem spectrum RAAHEIN tackles is the lack of a modern, practical, and reliant Transit structure and the absolute negligence of this system as a consequence of these flaws.

RAAHEIN promises connectivity. With a stark focus on solving the Door-to-Door needs, RAAHEIN provides RIDE COMBOS--an intuitive idea which pitches booking combinations of public vehicle units to cover your long rides. A bright amalgamation of the features of Private and Public transportation. An Auto Rickshaw comes to pick you up, drops you off at the nearest Rail/Metro/Bus Station so that you can travel further. Another auto picks you up from the nearest station to your final destination and drops you off.

RAAHEIN promises practicality by being the least hindrance solution capitalizing every minute of the usage time by providing Incentives, clear-cut information services, Security, tracking solutions and convenience. Moreover, RAAHEIN makes no assumptions whatsoever about the technological, financial, educational, or climatic situation of India. It offers a package while not IMPOSING any technology onto the non-app, underequipped users, which by the way is the vast majority of the current Transit system. We offer a solution of scanning their Aadhar MetaData (which has no conflicts with user privacy whatsoever), thus not compromising with their comfort and at the same time, not compensating with our promise of security. Also, we are staying very far from hardware solutions like plastic cards or cameras because as of this very day, these technological advancements are exclusive to a minute fraction of cities in India; the rest is still a bit chaotic, unplanned and deprecated.

RAAHEIN offers extreme motivation. We cater heavily personalized ""greed"", as we call it, giving you reasons to ditch your private transport every single day. We are calling it RAAHEIN Daily. Notifications and Cards telling you how much would you save every day by ditching your Private Vehicles and personalized goals assigned with them. We are trying to capture the very subconscious of the user by reinforcing these ideas every single day. We save the environment, and well, never betray our user.

<h3> The Tech Stack </h3>

The engine's backend is being managed by Firebase and GCP. The entire frontend is Flutter and Flare. RazorPay is handling serverless transactions in the system. 

<h2> The Future and our closing thoughts: </h2>
Now, RAAHEIN was built while prioritizing Scalability at every step. We wanted an application that genuinely solves the problem and that we, as users, get to use it on a daily basis. We are students...or to say, developers with no resources in hand. That being said, we have solutions as to how can an industry implement our solution and capitalize revenue both for the company and the government, while not compromising on the user side comforts.

Our ideation started with a thought of giving the user a ""similar ride free"" for every few rides that he takes. For instance, 5 Kms free for every 25 you travel? Now, who would pay for this compensation? Government? Even after providing a heavily subsidised transit system?

Now, we have a better plan. Our application is so easy to use, we join in more and more users every day. More the number of users, more the data, and well data is the new oil. We bring in StakeHolders interested in our data to pay for these free rides. Services like Zomato who might benefit from knowing if a frequent travel place is important to certain individuals and suggest him better restaurants. Services which create heat maps among other geolocation services which need the population logistics might benefit from our data. The options are almost infinite--PayTm, Cred, Fast Food Chains etc. Moreover, if there comes a slightest doubt about security in any of your thoughts, let me tell you we access no payment details, no family details, no detail which we or anybody else could use against you. A simple tradeoff--fantastic recommender systems and services for the user, and great business for the joint industries.

[Here](https://www.youtube.com/watch?v=3A6ZbgSk44o&feature=youtu.be) is the application demo video.

(Also, just in case anyone wondered: H: Helping E: Enhance P: Public T: Transport A: And D: Dependency )

<h2> Instructions: </h2>

To run it on your local system:

1. You would need [flutter SDK](https://flutter.dev/docs/get-started/install) installed as well as the text editor of your choice. We use VSCode.
2. Once that is sorted you can clone this repository and get into ""raahein final"".
3. Now you will need to get into android>app>src>main>AndroidManifest.xml and replace our API key with yours.
4. You might also need to do a ""flutter pub get"" in the terminal to install the required dependencies on your system.
5. After this, connect your device to the system, and do a ""flutter run -v"". Flutter will handle the rest.
",2,2,2,0,transportation,"[india, practicality, transit, transportation]",00000
256,Parking-Lot-Map,JamesLogan-III,N/A,https://github.com/JamesLogan-III/Parking-Lot-Map,https://api.github.com/repos/JamesLogan-III/Parking-Lot-Map,KnockoutJS Map Project for Udacity FEND program. This map shows the locations and information of the lots of the International Parking Management company.,"![Image of IPM](https://github.com/JamesLogan-III/FED-P-5/blob/master/images/logo.png?raw=true)
# International Parking Management Internal Lot Guide

Project 5 for the Udacity front-end nanodegree.

This is map of all IPM Parking venues in the greater Seattle Area with street views and rate information. Street view and maps are provided by Google using Street view and Maps.  Traffic cameras are provided by the Washington Department of Transportation through [data.seattle.gov](https://data.seattle.gov/) powered by [Socrata](https://dev.socrata.com/) Additional information is proprietary and owned by IPM.



* [International Parking Management](http://www.ipmseattle.com/)

## Installation Instructions

* [View the Map on Github](http://jameslogan-iii.github.io/FED-P-5/index.html) or


* Download or fork the code from [GitHub](https://github.com/JamesLogan-III/FED-P-5)
* Open the index.html file to start the application
* Use the filter box on the right side to list and search for individual lot information
* Select a map marker or list item name to display the lot information, additional traffic cameras stills are shown at the bottom of the page if they are within 500 meters of the Garage's map point.


## Sites/Tools Used

### APIs

* [Google Maps](https://developers.google.com/maps/)
* [Washington Department of Transportation Traffic Cameras](https://dev.socrata.com/foundry/data.seattle.gov/9wcw-sztr)

### Tools

* [Knockout.js](http://knockoutjs.com/)
* [jQuery](http://jquery.com)
* [latLong.net](http://www.latlong.net/)
* [JSONeditor.org](http://jsoneditoronline.org/)
* [Favicon-Genreator.org](http://www.favicon-generator.org/)
* [data.seattle.gov](https://data.seattle.gov/)

### References

* https://www.yelp.com/developers/documentation/v2/overview
* https://developers.google.com/maps/documentation/javascript/streetview
* https://www.packtpub.com/books/content/using-google-maps-apis-knockoutjs
* http://en.marnoto.com/2014/09/5-formas-de-personalizar-infowindow.html
* http://stackoverflow.com/questions/17557789/using-contains-instead-of-stringstartswith-knockout-js
* http://knockoutjs.com/documentation/introduction.html
* http://jsfiddle.net/t9wcC/
* https://www.devbridge.com/articles/knockout-a-real-world-example/
* https://developers.google.com/maps/documentation/javascript/
* https://developers.google.com/maps/documentation/javascript/controls
* https://builtvisible.com/setting-local-fallback-jquery-served-via-cdn/
* https://discussions.udacity.com/t/handling-google-maps-in-async-and-fallback/34282#onerror

### ScreenShots

#### Phone
![Image of Phone](https://github.com/JamesLogan-III/FED-P-5/blob/master/IPM-phone.png?raw=true)

#### Tablet
![Image of Tablet](https://github.com/JamesLogan-III/FED-P-5/blob/master/IPM-tablet.png?raw=true)

#### Desktop
![Image of Desktop](https://github.com/JamesLogan-III/FED-P-5/blob/master/IPM-Desktop.png?raw=true)
",2,2,2,0,transportation,"[google-maps, javascript, knockoutjs, seattle, socrata, street, traffic-cameras, transportation]",00000
257,CrazyClover-with-payload-Simulation,KT1024-kei,N/A,https://github.com/KT1024-kei/CrazyClover-with-payload-Simulation,https://api.github.com/repos/KT1024-kei/CrazyClover-with-payload-Simulation,Simulation of quadrotor with suspended payload control,"## CrazyClover-qith-Payload-Simulation

### This project contains
- 中型ドローン（CrazyClover）を利用した貨物運搬制御シミュレーション

### Dependencies
- numpy, matplotlib, rtree-linux

### Experiments ( demo_Experiment )
- track_circle.py：貨物の円軌道追従制御

#### circle trajectory tracking
```python
cd demo_Experiment
python3 track_circle
```

https://user-images.githubusercontent.com/64090003/205566019-974ac662-f72a-4cd4-9f00-c68186f93d9e.mp4


### references 
- [Trajectory generation and control of a quadrotor with a cable-suspended load - A differentially-flat hybrid system](https://ieeexplore.ieee.org/document/6631275)
- [Aggressive Flight With Suspended Payloads Using Vision-Based Control](https://ieeexplore.ieee.org/document/8258883)
",2,2,1,0,transportation,"[drone, quadrotor, trajectory-tracking, transportation]",00000
258,genetic_algorithm-Transportation,deepankkartikey,N/A,https://github.com/deepankkartikey/genetic_algorithm-Transportation,https://api.github.com/repos/deepankkartikey/genetic_algorithm-Transportation,Applied Genetic Algorithm using Java and Applets,"-- Final Year Project --
#
Implements the Challenge problem organized by MuSigma.

Used VRPTW as the base and solved the problem using customised Genetic Algorithm 
and Best Cost Route Crossover.


Specifications: Java 8, Netbeans 8.2, iText PDF library 5.4.0


Project Report (final report.pdf) contains detailed information about what the project is etc...
",2,2,2,0,transportation,"[candidate, crossover, genetic-algorithm, java, java-8, java-applet, pmx, population, routing, transportation, vrp]",00000
259,client_arc_activitysim,wsp-sag,wsp-sag,https://github.com/wsp-sag/client_arc_activitysim,https://api.github.com/repos/wsp-sag/client_arc_activitysim,Atlanta Regional Commission (ARC) ActivitySim Implementation,"# ARC ActivitySim Implementation
[Atlanta Regional Commission (ARC)](https://atlantaregional.org/) prototype of the [ActivitySim Framework](http://activitysim.org/)


## Folder and File Setup

1. Clone the repository to a directory (e.g., C:\Projects)
2. Create a folder named 'Data' in the above directory
3. Download the data (e.g., households.csv, persons.csv and ZoneData.csv) and place those in the 'Data' folder
4. Create a folder named 'Skims' under 'Data' and place the skim matrix (e.g., skims_complete) in that folder


## Installation

1. Install [Anaconda 64bit Python 3](https://www.anaconda.com/distribution/)
2. Create an ActivitySim-oriented virtual python environment. Recommend using a virtual env with the environment.yml included in this repository.
```
conda env create -f environment.yml
```
3. Switch the Virtual Env
```
conda activate arc_activitysim
```

## Data Processing (If necessary)

1. Update the data path in build_h5.py (e.g., C:\Projects\Data) located here: C:\Projects\client_arc_activitysim\scripts
2. Navigate into the scripts folder
```
cd scripts
```
3. Run 'build_h5.py' to create the necessary inputs for ARC ActivitySim. 
```
python build_h5.py complete
```
Available options
- micro (25 sample zones)
- small (500 sample zones)
- complete (all zones)

## Simulation

1. Run the simulation

```python
activitysim run
```
",2,2,8,7,transportation,"[activitysim, arc-activitysim, atlanta, data-science, python, transportation, travel-modeling]",00000
260,ssciPDDLPlanner,SSCIPaperSubmitter,N/A,https://github.com/SSCIPaperSubmitter/ssciPDDLPlanner,https://api.github.com/repos/SSCIPaperSubmitter/ssciPDDLPlanner,"PDDL Generator for Transportation Logistics Scenarios,  based on CPS and ITS ontologies","### 1. Introduction

This software is used for generating PDDL files out of model descriptions. PDDL is a well-known artificial intelligence planning language. Please note that even though is application generates PDDL, it is not used to interpret PDDL. Users of this software are referred to open-source PDDL planners such as OPTIC planner for this task (see [link](https://github.com/Dunes/janitor/tree/master/optic)).

### 2. Compiling and Using the Software

#### 2.1 Requirements

To install the software, you need a reasonably modern JDK/Maven setup. The following versions of JDK and Maven have been tested with this software, but it should work with newer versions also:

* Oracle JDK build 1.8.0_11-b12 (currently available at http://www.oracle.com/technetwork/java/javase/downloads/index.html)
* Apache Maven 3.1.1 (currently available at http://maven.apache.org/download.cgi)

#### 2.2 Installation and Use

To build the project, issue the following command from the terminal:

`mvn clean package`

To run the project, once maven finished building it:

`java -jar target/pddlgenerator-1.0-SNAPSHOT.jar`

To test the generator with the sample model files, you can use the curl command-line utility (available in MAC OS and most linux distributions). The following example comes prebuilt with the bus model (included under 'resources' folder). Also note that this example uses the TransportPlanner transportation rules file, which contains PDDL-specific terminology for the transportation planning domain. This file is also provided, under the 'resources' folder

`curl -F 'transitionsFile=@resources/BusTransitions.ttl' -F 'statesFile=@resources/BusStates.ttl' -F 'TRFile=@resources/TransportPlannerTR.ttl' -X POST localhost:8080/submitInput`

#### 2.3 API

The software has an API which it uses to load the models and generate the PDDL files. The API is simple, and consists of a single multipart HTTP POST request. Therefore, the content type must be multipart/form-data. The service point is submitInput, prefixed by the URL of the hosting server, for example localhost:8080/submitInput. The names to be used are transitionsFile for the transition file model, statesFile for the states file model and TRFile for the transformation rules model. The reply is a JSON file with two entries, one for the problem file (key problemFile) and one for the domain file (key domainFile).  

#### 2.4 Editing the models

In order to edit the model files, any standard editor will suffice, however Protege is recommended. Protege is available at http://protege.stanford.edu/. The sample BusStates/BusTransitions/TransportPlannerTR model files where created using Protege 5.0.0 (build beta-23).

#### 2.5 Model Structure

##### 2.5.1 Introduction

The model files are based on an ontology with multiple layers of abstraction. We design our ontology by combining high level concepts and cross-domain relationships borrowed from three areas: CPS; Agent-Based Model (ABM); and Systems-of-Systems (SoS). The proposed ontology consists of an Upper Ontology, which contains the CPS, ABM, and SoS concepts and relations and a general ITS Domain Ontology. The general ITS Domain Ontology can be further referenced from ontologies that instantiate transport-domain specific transitions and states. It is of course possible to extend the upper ontology with ontologies describing other domains than ITS, for example healthcare, energy and utilities, agriculture, etc.

The objective of breaking the ontology into multiple levels is twofold. First, this approach allows to capture and isolate different levels of properties, attributes and relationships. Higher layers provide broader definitions and more abstract concepts, while lower layers are less abstract and can support specific domains and applications with concepts and relations which might not be present in the upper levels.

Second, ontologies are expected to change, grow and evolve as new domains and techniques are contemplated in them (Davies et al., 2006). Leaving the more abstract and general concepts in an upper layer, and the more specific ones in lower layers, reinforces the idea that altering the most general concepts should be avoided, making them less likely to suffer constant modifications that could lead to unnecessary changes throughout the ontology. This is important because ontologies often reuse and extend other ontologies. Updating an ontology without proper care can potentially corrupt the others depending on it and consequently all the systems that use it.

##### 2.5.2 Upper ontology design principles

Upper ontologies should be designed to describe general concepts that can be used across all domains. They have a central role in facilitating interoperability among domain specific ontologies, which are built hierarchically underneath the upper and generic layers, and therefore can be seen as specialization of the more abstract concepts.

![Figure 1](/images/fig1.png)

Figure above presents a subset of the proposed upper ontology. Its development was prompted by our use cases in management and control of complex systems-of-systems, and was inspired by other ontologies such as SUMO (Suggested Upper Mergerd Ontology) (Niles and Pease, 2001), and W3C SSN (Semantic Sensor Network Ontology) (Compton et al., 2012).

Some important concepts defined on the proposed general ontology include System, Cyber-Physical System, Agent and CPS Agent. A System is a set of connected parts forming a complex whole that can also be used as a resource by other systems. A Cyber-Physical System is a system with both physical and computational components. They deeply integrate computation, communication and control into physical systems. An Agent is a system that can act on its own, sense the environment and produce changes in the world. When an agent is embedded into a cyberphysical system it is called a CPS Agent, or cyberphysical
agent.

Important for mathematical desciptions of interrelations between systems are the elements Arc, Node and Graph. Where an Arc is any element of a graph that connects two Nodes, while a Graph is a set of Nodes connected by Arcs.

The concept of System can be further expanded by a number of attributes, such as Capacity, Role and Capability that can also have relationships among them. The System itself is represented within the Declarative Knowledge as an Object. Affordance is a property the defines the tasks that can be done on a specific System, while Capability defines the set of tasks the system can perform. Systems can also have Constraints, which in turn are related to KPIs that are used to measure whether such constraints are satisfied. The higher level of the proposed ontology also provides definitions and relationships between the main Knowlegde Base concepts, the Declarative and Procedural Knowledge. 

In our knowledge model, a Transition is a Procedural Knowledge concept that determines how to achieve a certain state (Action) given that an agent observes a particular state (Precondition) as being true in the world and there is an ordered list of effect free function calls in that state (Computation). Meanwhile, both Precondition and Action have a Predicate Set that is directly related to the concept of State from the Declarative Knowledge. The Goal State, which is an specification of State, is related to the concepts of Task and Workflow from the Procedural Knowledge. Where a Workflow is defined as sequence of Tasks, which in turn is defined by a sequence of Goal States assigned to a single Agent. 

![Figure 2](/images/fig2.png)

Figure above presents the main elements of the knowledge base modeling.

##### 2.5.3 ITS Domain ontology design principles

![Figure 3](/images/fig3.png)

With the support of the presented upper ontology model, in this section we propose an ITS domain specific ontology, as depicted in Figure above. One of the central concepts within the ITS domain is the Transport Agent, that extends Agent from the upper ontology. The Transport Agent encompasses agents that are capable of transporting some entity, ranging from physical goods to virtual data. Some important concepts from the upper layers that apply to the Transport Agent include Dynamics and Capacity, among others. Transport Agents in turn are strongly related to the Abstract concept of Transportation Mode which defines the type of transportion scenario (e.g., Roads, Rail, Telco).

Another important concept is the Transportation Infrastructure which encompasses all elements required by a Transportation Mode, such as Routes, Tracks and Transportation Networks. Most elements within the Transportation Infrastructure are extensions of Graph, Arc and Node, abstract concepts from the Upper ontology. Therefore, by using high level graph definitions it is possible to define most of the transportation infrastructure in an ITS Domain. A node inside the transportation infrastructure is referred to as a POI (Point of Interest) and it can be any desired location within the Transportation Network (e.g., a crossing, a specific point in the route, coordinate, a warehouse, a bus stop). A Traffic Semaphore is modeled as a generic Actuator that is used to control and regulate traffic and it can be applied in any transportation scenario. A Transportable Entity encompasses any element that can be transported by a Transport Agent, such as regular Cargo or network Data. A typical Passenger is also a Transportable Entity and extends the upper ontology concept of Human.

#### 3. References

Davies, J., Studer, R., and Warren, P. (2006). Semantic Web technologies: trends and research in ontology-based systems. JohnWiley & Sons, Chichester,West Sussex, PO19 8SQ, England.

Niles, I. and Pease, A. (2001). Towards a Standard Upper Ontology. In Proceedings of the International Conference on Formal Ontology in Information Systems - Volume 2001, FOIS ’01, pages 2–9, New York, NY, USA. ACM.

Compton, M., Barnaghi, P., Bermudez, L., Garcia-Castro, R., Corcho, O., Cox, S., Graybeal, J., Hauswirth, M., Henson, C., Herzog, A., Huang, V., Janowicz, K., Kelsey, W. D., Phuoc, D. L., Lefort, L., Leggieri, M., Neuhaus, H., Nikolov, A., Page, K., Passant, A., Sheth, A., and Taylor, K. (2012). The SSN ontology of the W3C semantic sensor network incubator group. Web Semantics: Science, Services and Agents on the World Wide Web, 17:25 – 32.
",2,2,0,0,transportation,"[logistics, pddl, planning, transportation]",00000
261,miami-scooter-geo-data,kevinamezaga,N/A,https://github.com/kevinamezaga/miami-scooter-geo-data,https://api.github.com/repos/kevinamezaga/miami-scooter-geo-data,"Geographical data for Miami's E-Scooter Program. Maintained by the Miami Riders Alliance, a nonprofit.","# Miami Scooter Geo-Data

This repository holds geographical data for the City of Miami Scooter Program.

This is maintained by [Kevin Amézaga](https://mostlikelykevin.com) and the [Miami Riders Alliance](https://riders.miami)'s [Mobile Miami Coalition](https://coalition.miami).

### Format

For operating zones, the name will be listed in properties as ""name"", ""type"", and for speed zones, a ""speed"" property with an integer value in Miles Per Hour.

### Data

[x] Add Speed Limit Suggestions from City on 5/5/2021 -- Done, located at [speed-limit-zones.json](https://github.com/kevinamezaga/miami-scooter-geo-data/blob/main/speed-limit-zones.json)

[x] Add Geofenced No Parking Zones -- Done, located at [no-parking-zones.json](https://github.com/kevinamezaga/miami-scooter-geo-data/blob/main/no-parking-zones.json)

[x] Create Compiled JSON file of all zones -- Done, located at [compiled-zones.json](https://github.com/kevinamezaga/miami-scooter-geo-data/blob/main/compiled-zones.json)
",2,2,1,0,transportation,"[e-scooters, miami, micromobility, scooters, transportation]",00000
262,citygml3.0-transportation-examples,tum-gis,tum-gis,https://github.com/tum-gis/citygml3.0-transportation-examples,https://api.github.com/repos/tum-gis/citygml3.0-transportation-examples,This repository contains sample datasets for the CityGML3.0 Transportation Model. It is explained how the data was generated and examples are shown to illustrate new concepts.,"# General information
This repository contains sample datasets for the CityGML3.0 Transportation Model. It is explained how the data was generated and examples are shown to illustrate new concepts. 
The provided data is based on the Open Geospatial Consortium (OGC) CityGML Standards Working Group (SWG) CityGML version 3.0 Conceptual Model. https://github.com/opengeospatial/CityGML-3.0CM

Follow this link for interactive visualizations of some of the presented data:
https://wiki.tum.de/display/gisproject/Online+Demo+Collection

# Content
## Simple Intersection
Street space objects are manually derived form a digital orthophoto (DOP20) and exported as .shp files using the software ArcMap10.7. The data is then transformed into several CityGML datasets.
*	CityGML2.0 Transportation dataset demonstrating XLink concept
*	CityGML3.0 Transportation dataset demonstrating the new data structure 
*	FME Workspaces

## Streetspace Model of New York City
*	A CityGML3.0 Transportation sample dataset of central Manhattan generated from CityGML2.0 data using the software FME2019.2.
*	FME Workspaces

## TUM Transportation CityGML V3
*	A CityGML3.0 Transportation sample dataset of an intersection near TU Munich. Including Roads, Sections, Intersections, TrafficAreas and AuxiliaryTrafficAreas.

# Disclaimer
This is a work in progress. Contents may be constantly updated. No warranties or guarantee on the correctness, completeness, or appropriateness for any specific use of the provided data or FME Workspaces is given.

While the development of CityGML 3.0 is currently being concluded, note that everything is still subject to final voting within the OGC! The provided data and explanations primarily serve to give a better understanding of the proposed CityGML3.0 Transportation Model.
",2,2,3,0,transportation,"[citygml, road, transportation]",00000
263,npt,nptscot,nptscot,https://github.com/nptscot/npt,https://api.github.com/repos/nptscot/npt,"Data processing code, also use this repo for issue tracking for the Network Planning Tool. See https://nptscot.github.io for development version","
<!-- README.md is generated from README.Rmd. Please edit that file -->

# Network Planning Tool for Scotland

<!-- badges: start -->
<!-- badges: end -->

The aim of this project is to generate evidence to support strategic
cycle network planning in Scotland.

# Reproducibility: basic

To reproduce the basic results in this repository, hosted on GitHub at
nptscot/npt, first download and unzip or clone it and then open the
‘npt’ folder in your favourite integrated development environment (IDE)
for R, such as RStudio.

- You can download the repository as a zip file from the GitHub website
  by clicking on the green ‘Code’ button and selecting ‘Download ZIP’,
  hosted at this URL:
  <https://www.github.com/nptscot/npt/archive/refs/heads/main.zip>

- You can clone the repo with Git as follows:

  ``` bash
  git clone https://www.github.com/nptscot/npt.git
  ```

- Or (recommended for future-proof workflows) you can install the GitHub
  CLI tool and clone the repo as follows:

  ``` bash
  gh repo clone nptscot/npt
  ```

Install the GitHub CLI tools by following instructions here:
<https://cli.github.com/manual/installation>

Note: you can check to see if you have the GitHub CLI tools installed by
running the following command from the R console:

``` r
gh_version = try({
  system(""gh --version"", intern = TRUE)
})
gh_version
#> [1] ""gh version 2.30.0 (2023-05-30)""                 
#> [2] ""https://github.com/cli/cli/releases/tag/v2.30.0""
if(is(gh_version, ""try-error"")) {
  message(""You don't have the GitHub CLI tools installed. Please install them by following instructions here: https://cli.github.com/manual/installation"")
}
```

## Set-up

We will use the following packages:

``` r
library(tidyverse)
library(tmap)
library(sf)
```

## Reading in input datasets

Read-in the input datasets as follows:

``` r
list.files(""data-raw"")
#> [1] ""DATASET.R""                           ""get_wpz.R""                          
#> [3] ""oas.geojson""                         ""od_jittered_demo.R""                 
#> [5] ""od_subset.csv""                       ""routes.geojson""                     
#> [7] ""test-tiles.R""                        ""workplaces_simple_edinburgh.geojson""
#> [9] ""zones_edinburgh.geojson""
od_data = read_csv(""data-raw/od_subset.csv"")
zones = read_sf(""data-raw/zones_edinburgh.geojson"")
desire_lines = od::od_to_sf(od_data, zones)
plot(desire_lines)
#> Warning: plotting the first 9 out of 13 attributes; use max.plot = 13 to plot
#> all
```

![](README_files/figure-gfm/unnamed-chunk-4-1.png)<!-- -->

Generating route networks:

``` r
# Create a subset of the desire lines for speed of computation:
desire_lines_subset = desire_lines |>
  slice_max(n = 30, order_by = all)
library(stplanr)
routes_subset = desire_lines_subset |>
  route(l = _, route_fun = route_osrm)
route_network = overline(routes_subset, attrib = ""bicycle"")
plot(route_network)
```

![](README_files/figure-gfm/unnamed-chunk-5-1.png)<!-- -->

## Exercises to test your knowledge of the NPT approach

1.  Read-in the
    [`od_subset.csv`](https://github.com/nptscot/npt/blob/main/data-raw/od_subset.csv)
    file containing origin-destination data in the
    [`data-raw`](https://github.com/nptscot/npt/blob/main/data-raw/)
    folder in this repo with the following command:

``` r
od_data = read.csv(""https://github.com/nptscot/npt/raw/main/data-raw/od_subset.csv"")
```

2.  What’s the average distance of trips according to the
    `dist_euclidean` column in that dataset?

3.  The values in the `dist_euclidean` column represent straight line
    distance between zone centroids. In what way could the values be
    over or under-estimates of the distances of trips taken between the
    OD pairs?

4.  Use the function `od_to_sf()` to convert the OD data into desire
    lines. Hint: a starting point could be:

``` r
zones = sf::read_sf(""https://github.com/nptscot/npt/raw/main/data-raw/zones_edinburgh.geojson"")
plot(zones$geometry)
```

![](README_files/figure-gfm/unnamed-chunk-7-1.png)<!-- -->

**Bonus exercises**

1.  Using interactive geographic data visualisation packages such as
    `tmap` and `leaflet`, visualise the desire lines and route network
    on a map? Which road links are most important for cycling according
    to the network results?

2.  Using the `pct::uptake_pct_godutch_2020()` function estimate the
    potential uptake of cycling based on the subset of desire lines
    created above. What is the total level of cycling resulting from
    thhat uptake?

3.  Using the `osmextract` or `osmdata` packages, or equivalent packages
    written in another language, identify the OSM ways that lie
    completely within a 500m buffer of the route network. How can you
    ensure that the results are reproducible?

4.  Bonus: think about ways to identify weak links or gaps in the cycle
    network based on the small datasets analysed. How could you scale
    this up to the whole of Scotland?

# Reproducibility

Note: to reproduce the full build process currently depends on data
sources and dependencies that are not publicly available. This is a work
in progress.

Then run the following command (requires dependencies and data to be
present):

Note: you need to have a CYCLESTREETS API key for this, see here for
details:
<https://rpackage.cyclestreets.net/reference/journey.html#details-1>

This project uses `targets` for data processing pipeline management,
with outputs like this:

![](https://user-images.githubusercontent.com/1825120/205490893-b1627e3a-5102-4dbe-bc70-97e358e75506.png)

Visualise the project as follows:

``` r
# targets::tar_visnetwork(targets_only = TRUE)
```

The zones in the case study region are as follows:

Baseline cycling levels are shown below:

``` r
tm_shape(rnet) +
  tm_lines(lwd = ""bicycle"", scale = 9)
```
",2,2,1,20,transportation,"[biking, cycling, transportation, transportation-planning]",00000
264,POABus,rafaeelaudibert,N/A,https://github.com/rafaeelaudibert/POABus,https://api.github.com/repos/rafaeelaudibert/POABus,A bus route visualisation for Porto Alegre's public transportation system,"# :oncoming_bus: POA Bus

![Update Data](https://github.com/rafaeelaudibert/poabus/actions/workflows/update.yml/badge.svg)
![Deploy](https://github.com/rafaeelaudibert/poabus/actions/workflows/deploy.yml/badge.svg)

A bus route visualisation for Porto Alegre's public transportation system. You can access it on [https://poabus.rafaaudibert.dev](https://poabus.rafaaudibert.dev)

## :gear: How

### :cityscape: Porto Alegre's Public Transportation API

We run a Github Action weekly, which fetches the data from Porto Alegre's public transportation API and generates the [`/data`](./data) folder with both minified and human-readable files which will be used by our visualisation code to generate the routes and the stops of every available service in the city of Porto Alegre.

The API endpoints were found after poking around on the requests made by the [poatransporte](http://www.poatransporte.com.br/) website. They are roughly as follows:

- Every available stop: http://www.poatransporte.com.br/php/facades/process.php?a=tp&p=
  - You can restrict the coordinates from which you want to fetch the stops, but in our case we want to parse everything, so we just send an empty `p` query parameter
- Every available route: http://www.poatransporte.com.br/php/facades/process.php?a=nc&p=%&t=o
  - We can also fetch the data for the ""lotation"" buses (faster and more expensive buses which stop anywhere you want) if we change the `t` parameter (which stands for `type`) to `l`
- Specific data for a single route: http://www.poatransporte.com.br/php/facades/process.php?a=il&p=routeId
  - Keep in mind that you need to substitute `routeId` by the id you want to fetch the data
  - The raw route endpoint doesn't return the path the route takes, so we need to fetch this from a different endpoint

To understand it better, check out [the script which fetches and parses the data](./scripts/fetchData.js).

After we collect this data, we automatically commit it to the repository.

#### :no_entry_sign: Limitations

While developing this project, I was rate limited (by IP) because I requested the last mentioned endpoint too many times in a short period of time. I couldn't figure out the rate limit because the IP ban made the API hang and timeout instead of returning me a header (or an answer) with the reason why I was being rate limited. To solve this, I'm doing at most 5 requests per second, which seems to work just fine.

### :recycle: Data update

After the data is updated, we need to rebuild our code and send it to S3. This happens in another Github Action which listens for `master` pushes. It bundles the new JSON files onto the website, and updates the S3 bucket that is serving the requests.

### :computer: Code

The code is then pretty simple, courtesy of [Lim Chee Aun](https://github.com/cheeaun)'s [BusRouter SG](https://github.com/cheeaun/busrouter-sg) project (credited below). We just use the data we generated showing it using [MapBox](https://www.mapbox.com/) and [deck.gl](https://deck.gl/).

## :runner: Running locally

- You will need Node 16 to run this. I suggest you installing [nvm](https://github.com/nvm-sh/nvm) and running `nvm install 16` and then using the `nvm use` command inside this repository to set it up.
- Install the dependencies with `npm install`
- Create a `.env` file based on the `.env.example` file with your [MapBox API key](https://docs.mapbox.com/api/overview/).
- Run it with `npm start`

## :older_man: Credits

This is 95% based on the amazing [BusRouter SG](https://github.com/cheeaun/busrouter-sg) built by [Lim Chee Aun](https://github.com/cheeaun) with the data for Singapore's public transportation. I forked his visualisation work and just changed to parse the data from Porto Alegre's (awful) public transportation API.

## :mage_man: Author

- [RafaAudibert](https://www.rafaaudibert.dev)
",2,2,2,5,transportation,"[actions, brasil, brazil, bus, javascript, mapboxgl, porto-alegre, public-transport, transportation, visualisation]",00000
265,metronome,thisistimothychen,N/A,https://github.com/thisistimothychen/metronome,https://api.github.com/repos/thisistimothychen/metronome,🏆 Improving the metro riding experience via real-time ambient feedback about car capacity. Winning project for Google NYC's Intern Hackathon.,"# Metronome
Improving the train riding experience for all New Yorkers!

With over 5.5 million daily riders, the NYC metro system is both a blessing but also a headache. How many times have you watched an empty subway car pass by you as it rolls into the station, just to be greeted by a jam-packed car? How many times have you moved down the platform in _hopes_ of ending up with an empty car?

Our team wanted to help New Yorkers experience a less crowded and more efficient commute. There are only a few seconds before each train leaves the station, but plenty of wait time on the platform. We sought out to provide commuters real-time ambient feedback about the capacity of the cars on their upcoming train.


## Ideal State

![Mock-up of our ideal state](img/ideal-state-mock.png)

We envision a metro experience that would include LED strips on the platform signaling in real-time how full each car from the incoming train is. This status could also be integrated on an on-screen display or even within Google Maps.


## Implementation

![Architecture Diagram](img/architecture-diagram.png)

For our prototype, we created a Flask webapp with routes to simulate when the subway car doors would close. We had a button on the webapp that triggers the security cameras (simulated via Raspberry Pi's with cameras) to take a picture and send it to the Google Cloud Vision API to detect the number of faces. This enabled us to get a rough estimate of how full a car was. This data is then sent up to a Firebase database (used for historical data storage).

The frontend side of our webapp was the display that could be put up on screens at the platform to provide an additional cue.

We used socket.io to trigger the Pi code that took pictures, which would then trigger the UI to automatically update on the Flask frontend.


![Raspberry Pi's](img/platform-pi-setup.png)

On the platform (simulated via a Raspberry Pi with LEDs), we continually pull and parse data from Firebase to determine what colors to display on each LED.
",1,1,5,4,transportation,"[firebase, flask-server, google, google-hackathon, google-interns, lifehack, raspberry-pi-3, transportation]",00000
266,mydailytravel,CMAP-REPOS,CMAP-REPOS,https://github.com/CMAP-REPOS/mydailytravel,https://api.github.com/repos/CMAP-REPOS/mydailytravel,This repo includes the R scripts for an analysis of the Chicago Metropolitan Agency for Planning's My Daily Travel survey.,"# My Daily Travel Analysis
 
This repo includes the code supporting a series of [policy briefs](https://www.cmap.illinois.gov/data/transportation/travel-survey/my-daily-travel) by the Chicago Metropolitan Agency for Planning (CMAP). The series reviews the findings from CMAP's most recent travel survey, [My Daily Travel](https://www.cmap.illinois.gov/data/transportation/travel-survey).

## Data sources

The primary data sources for these policy briefs are the trip diaries and survey results from:
- [My Daily Travel](https://datahub.cmap.illinois.gov/dataset/mydailytravel-2018-2019-public) (MDT), CMAP's 2019 travel survey. This dataset is automatically extracted by the scripts but can also be accessed at the posted link.
- [Travel Tracker](https://datahub.cmap.illinois.gov/dataset/traveltracker0708/resource/092af96e-9c7a-4182-a1e1-ecff588a9de0?inner_span=True) (TT), CMAP's prior travel survey (conducted in 2008). If you are interested in replicating or building on these analyses, **this dataset must be downloaded and placed into the appropriate working directory before running the scripts.**

The posted datasets are supplemented by three files that provide additional detail to enable geographic and trip purpose breakdowns. These are available in the [sources](/source) folder.

The analyses also leverage several outside data sources. For example, the analysis of bike-share uses publicly available data from Divvy on system ridership. That data is automatically downloaded when executing these scripts, but can also be accessed [here](https://www.divvybikes.com/system-data). Similarly, the analysis of TNCs refers to the City of Chicago's Transportation Network Provider data, which was extracted from the city's data portal, [here](https://data.cityofchicago.org/Transportation/Transportation-Network-Providers-Trips/m6dm-c72p/data).

## Data notes

Each of the scripts includes comments explaining which records were included or excluded for analysis. While this does vary by analysis (for example, comparisons of My Daily Travel and Travel Tracker require additional exclusions), some records are handled uniformly across analyses:
- Trips are only included if they start and/or end in the Illinois counties of Cook, DeKalb, DuPage, Grundy, Kane, Kendall, Lake, McHenry, or Will. Trips that start and end outside of those counties are excluded.
- Trips that are 100 miles are longer are excluded.
- Trips by travelers younger than 5 years old are excluded. This is primarily applicable to Travel Tracker, since My Daily Travel only asked for the travel behavior of household members 5 years old or older.
- For My Daily Travel data, some single trips were split across multiple records. These records were merged using the `placeGroup` field, which is further explained in the My Daily Travel documentation.
- Both surveys includes a limited number of trips coded as walking trips that appear to be significant outliers and/or have an inaccurate reported mode, based on a combination of time and distance traveled (e.g., longer than 25 miles, or walking 10 miles in 15 minutes). Walking trips longer than 25 miles or that were longer than 10 miles and traveled faster than 5 minutes per mile are coded as improbable walks and are excluded from mode share analyses.

The My Daily Travel and Travel Tracker surveys are both representative of travel in the CMAP region for their respective travel periods. However, there were methodological differences between the two, which limits some possible comparisons. Where applicable, these limitations and caveats are noted in comments.

## R scripts

This repo includes several helper scripts that import, recode, and clean the data:
- [data_cleaning.R](/R/data_cleaning.R): This script imports and cleans data for both MDT and TT.
- [recoding.R](/R/recoding.R): This script includes lists of trip purposes, modes, household income buckets, and geographies. These lists are leveraged by the data cleaning script to recode data into larger categories for analysis.
- [helper_fns.R](/R/helper_fns.R): This script includes three helper functions that are used across the repo.
- [mdt_dates.R](/R/mdt_dates.R): This script includes date intervals used to filter non-household travel survey data for comparability with MDT (e.g., analyses of Divvy).

There are also individuals scripts that support various analyses and graphics in the policy briefs:
- [average_resident.R](/R/average_resident.R): This script calculates average travel behavior for MDT and TT. It includes general figures and breakdowns by demographic characteristics.
- [divvy.R](/R/divvy.R): This script produces a trips-in-motion graph for Divvy ridership during the MDT survey period.
- [mode_analysis.R](/R/tpurps_of_modes.R): This script analyzes the trip purpose patterns of specific modes.
- [mode_share.R](/R/mode_share.R): This script calculates the mode share in the CMAP region by home location and demographic characteristics.
- [racial_disparities.R](/R/racial_disparities.R): This script analyzes racial disparities in travel times in the region.
- [school_trips.R](/R/school_trips.R): This script analyzes the dynamics of school trips in the MDT and TT surveys, with a specific exploration of racial disparities in trip times for K-8 students.
- [tnc.R](/R/tnc.R): This script analyzes MDT's data on TNC ridership, including from both the trip diary and survey components.
- [tpurp_analysis.R](/R/modes_of_tpurps.R): This script analyzes the modes used for specific trip purposes, including health care, dining, and socializing.
- [trips_in_motion.R](/R/trips_in_motion.R): This script generates trips-in-motion charts for MDT.
- [wfh.R](/R/wfh.R): This script analyzes MDT and TT data on telecommuting and working from home behavior.
",1,1,2,0,transportation,"[chicago, planning, transportation]",00000
267,transportation-engineer,cielak,N/A,https://github.com/cielak/transportation-engineer,https://api.github.com/repos/cielak/transportation-engineer,,"# transportation-engineer
",1,1,2,1,transportation,"[transportation, transportation-engineering]",00000
268,maas-api.org,maasglobal,maasglobal,https://github.com/maasglobal/maas-api.org,https://api.github.com/repos/maasglobal/maas-api.org,Information website for the Mobility as a Service API specification,"# MaaS-API.org
Sourcecode for the [MaaS-API.org](https://maas-api.org) documentation project.

# Use
In order to use the files in this repository, you will need to install some dependencies:

- [Hugo](https://gohugo.io/) static site generator
- [NPM](https://www.npmjs.com/get-npm) to handle dependencies
- [Git](https://git-scm.com/downloads) to deploy changes

## Submodule
There is one submodule in this project, which can be initialized with the following commands:

```
$ git submodule init
$ git submodule update
```

## Build
In order to build the static site, simply run the following comand:

```
hugo
```

There will be a (new) folder called `public` containing a static HTML site.

## Deploy
Once the site is built, it can be deployed to GitHub Pages with the following command:

```
npm run-script deploy
```
",1,1,16,0,transportation,"[api, mobility, mobility-as-a-service, transportation]",00000
269,SkyTeamTimeTableParser,mvanlaar,N/A,https://github.com/mvanlaar/SkyTeamTimeTableParser,https://api.github.com/repos/mvanlaar/SkyTeamTimeTableParser,A c# program that parses the skyteam pdf timetable,"A C# command line based Skyteam pdf timetable parses. 
It wil result in a xml file.

The code quality is not good but it works :)
",1,1,2,0,transportation,"[airline, gtfs, skyteam, transportation]",00000
270,NYC-data,joemarlo,N/A,https://github.com/joemarlo/NYC-data,https://api.github.com/repos/joemarlo/NYC-data,An NYC transportation database for analyses,"# NYC-data

A database of the various NYC transportation options built to ease and expedite future analyses. Currently, the database includes Citi Bike and subway data, and is approximately 20gb representing 140mm rows.

`Create_database.R` creates the SQLite database of the Citi Bike, subway, and (eventually) taxi trip data. Shell scripts in each folder must be run first to download the data. Individual files to clean and analyze the data from the database are in the folders: [Citi-bike](Citi-bike), [Subway-turnstiles](Subway-turnstiles), [Taxi](Taxi).

Once the database is created, data can easily be accessed via SQL and [dbplyr](https://dbplyr.tidyverse.org/) queries:
```
# establish the connection to the database
conn <- dbConnect(RSQLite::SQLite(), ""NYC.db"")

# query and mutate on-disk
turnstile.df <- tbl(conn, ""turnstile.2019"")
turnstile.df %>%
  select(Station, Time, Entries, Exits) %>%
  group_by(Station) %>%
  summarize(Entries = sum(Entries),
            Exits = sum(Exits))

# or pull data into memory and then treat as a standard data frame
turnstile.df <- tbl(conn, ""turnstile.2019"") %>% collect() 
```

## Analyses utilizing the database
- [Enumerating the economic and social shifts of March 2020](Analyses/COVID-impact)
  - [Blog post](http://marlo.works/posts/covid-impact/)
- [A Bayesian approach to predicting Citibike ridership](Analyses/Bayesian-Citibike)
  - [Blog post](https://www.marlo.works/posts/bayesian-citi-bike/)
- [Modeling Citi Bike for predictive accuracy](https://github.com/joemarlo/Citi-Bike-prediction)
- [Disparities in the fall of NYC subway ridership](Analyses/COVID-neighborhoods)
  - [Blog post](https://www.marlo.works/posts/covid-nyc-ridership/)

## To-do list
- [x] Build database core
- [x] Add in Citi Bike data to database
- [x] Add in Subway data to database
- [ ] Add in taxi data to database
- [x] Add lat/long information for each subway station
- [x] Ensure date time formats are consistent across tables (note: use as_date() or as_datetime() to convert the values from queries)
- [x] Create example of modeling on-disk
- [x] Create example visualizations
- [x] Add Central Park weather to database

## Visualizations created from the database

<p align=""center"">
<img src=""Plots/COVID_ridership.svg"" width=79%>
</p>

<p align=""center"">
<img src=""Plots/change_in_ridership.png"" width=55%>
</p>

<p align=""center"">
<img src=""Plots/Daily_bike_rides.svg"" width=79%>
</p>

<p align=""center"">
<img src=""Plots/Minute_bike_rides.svg"" width=79%>
</p>

<p align=""center"">
<img src=""Plots/Commuting_light.png"" width=80%>
</p>

<p align=""center"">
<img src=""Plots/Subway_time_map.svg"" width=83%>
</p>

<p align=""center"">
<img src=""Plots/subway_hourly.gif"" width=57%>
</p>

",1,1,1,0,transportation,"[citi-bike, subway, transportation]",00000
271,journey-planner-for-izmir-public-transportation,efekabakas,N/A,https://github.com/efekabakas/journey-planner-for-izmir-public-transportation,https://api.github.com/repos/efekabakas/journey-planner-for-izmir-public-transportation,A program that finds the shortest way between 2 stops,"# journey-planner-for-izmir-public-transportation

- Java program that finds shortest way of 2 stops in Izmir.

- The Dijkstra Algorithm was used to obtaine the shortest way.

- All the stop identifications were included in Stop.txt

##### Usage
- Give the start and stop identifications as input. The shortest way will be presented.
",1,1,1,0,transportation,"[dijkstra-algorithm, java, journey-planner, transportation]",00000
272,lotlan-scheduler,iml130,iml130,https://github.com/iml130/lotlan-scheduler,https://api.github.com/repos/iml130/lotlan-scheduler,A scheduler for the Logistic Task Language (LoTLan),"# LoTLan Scheduler
![Unit-Tests](https://github.com/iml130/lotlan-scheduler/workflows/Unit-Tests/badge.svg?branch=feature%2Fgithub-action-for-unittests)

Scheduler for [LoTLan](https://lotlan.readthedocs.io/en/latest/) tasks. Parses LoTLan files and accepts events defined in the files to schedule.

The repository for the LoTLan grammar can be found [here](https://github.com/iml130/LoTLan)
## Task examples

You can find many LoTLan files / examples in the LoTLan Scheduler [repository](https://github.com/iml130/lotlan-scheduler) or in the official [Documentation](https://lotlan-scheduler.readthedocs.io)

## Quickstart / Example

Here is an example how the scheduler can be used
```python
import sys

from lotlan_scheduler.scheduler import LotlanScheduler
from lotlan_scheduler.api.event import Event

# gets called for each materialflow that is waiting for
# the triggeredBy condition to be satisfied
# event information contains info about the events in tb
def cb_triggered_by(mf_uuid, _uuid, event_information):
    print(""cb_triggered_by from mf: "" + str(mf_uuid))
    print(""UUID: "" + str(_uuid), ""Event_Info: "" + str(event_information))
    # foreach event in event_information

# gets called when triggeredBy condition is satisfied
# transport_orders contains the next transport orders which 
# can be executed
def cb_next_to(mf_uuid, transport_orders):
    print(""cb_next_to from mf: "" + str(mf_uuid))
    print(str(transport_orders))

# gets called for each materialflow that is waiting for
# the finishedBy condition to be satisfied
# event information contains info about the events in fb
def cb_finished_by(mf_uuid, _uuid, event_information):
    print(""cb_finished_by from mf: "" + str(mf_uuid))
    print(""UUID: "" + str(_uuid), ""Event_Info: "" + str(event_information))

# gets called if a task with the id _uuid has finished
def cb_task_finished(mf_uuid, _uuid):
    print(""cb_task_finished from mf: "" + str(mf_uuid))
    print(""task with uuid "" + str(_uuid) + "" finished"")

# gets called if every task is finished
# will never be called if the LoTLan file contains a cycle
def cb_all_finished(mf_uuid):
    print(""cb_all_finished from mf: "" + str(mf_uuid))


def main():
    test_flag = False
    lotlan_string = """"

    if len(sys.argv) >= 2:
        if sys.argv[1] == ""--test"":
            test_flag = True
            with open(sys.argv[2], 'r') as file:
                lotlan_string = file.read()
        else:
            with open(sys.argv[1], 'r') as file:
                lotlan_string = file.read()

        lotlan_logic = LotlanScheduler(lotlan_string, test_flag)
        material_flows = lotlan_logic.get_materialflows()

        for material_flow in material_flows:
            material_flow.register_callback_triggered_by(cb_triggered_by)
            material_flow.register_callback_next_to(cb_next_to)
            material_flow.register_callback_finished_by(cb_finished_by)
            material_flow.register_callback_task_finished(cb_task_finished)
            material_flow.register_callback_all_finished(cb_all_finished)
            material_flow.start()

        material_flow_running = True
        while (material_flow_running):
            _input = str(input(""Wait for input:>""))
            mf_number = 0
            uid = 0
            input_name = ""buttonPressed""
            input_value = ""True""

            if _input != """":
                mf_number, uid, input_name, input_value = _input.split("" "")

            mf_number = int(mf_number)

            if mf_number < len(material_flows):
                material_flows[mf_number].fire_event(str(uid), Event(input_name, """", ""bool"", input_value == ""True""))

            # check if a material flow is still running
            # if every material flow is finished we are done otherwise continue
            material_flow_running = False
            for mf in material_flows:
                if mf.is_running() is True:
                    material_flow_running = True

if __name__ == '__main__':
    main()

```

## License
LoTLan Scheduler is licensed under the terms of the Apache license. See [LICENCSE](./LICENSE) for more information.

## Contributors
Peter Detzner, Maximilian Hoerstrup, Dominik Lux


## Conference

P. Detzner, T. Kirks and J. Jost, ""[A Novel Task Language for Natural Interaction in Human-Robot Systems for Warehouse Logistics](https://ieeexplore.ieee.org/document/8845336)"", 2019 14th International Conference on Computer Science & Education (ICCSE), Toronto, ON, Canada, 2019, pp. 725-730.
",1,1,2,0,transportation,"[cpps, dsl, logistics, robotic-control, robotics, scheduler, transportation]",00000
273,transportation-problem,mabaszadeh,N/A,https://github.com/mabaszadeh/transportation-problem,https://api.github.com/repos/mabaszadeh/transportation-problem,Solving Transportation Problem and Optimizing by Implementing Genetic Algorithm,"# Transportation-Problem

Solving **Transportation Problem** (TP) and Optimizing by Implementing **Genetic Algorithm**.

## How to use it?

Create an input file like ones in `inputs` directory and change **`in1`** of `from inputs.in1 import *`, the first cell of `transportation-problem.ipynb`, to your file name you 've created.

## Examples

| Inputs | Outputs |
| - | - |
| [in1.py](inputs/in1.py) | [out1.txt](outputs/out1.txt) |
| [in2.py](inputs/in2.py) | [out2.txt](outputs/out2.txt) |
| [in3.py](inputs/in3.py) | [out3.txt](outputs/out3.txt) |
| [in4.py](inputs/in4.py) | [out4.txt](outputs/out4.txt) |

## Useful Links

1. [Genetic system for transportation problems](https://scholarworks.umt.edu/cgi/viewcontent.cgi?article=6577&context=etd)
2. [North West Corner](https://geekrodion.com/blog/operations/corner)
",1,1,1,0,transportation,"[ga, genetic-algorithm, genetics, optimization, tp, transportation, transportation-problem]",00000
274,Estimation-of-Daily-Bicycle-Traffic-Using-Machine-and-Deep-Learning-Techniques,hannankhan888,N/A,https://github.com/hannankhan888/Estimation-of-Daily-Bicycle-Traffic-Using-Machine-and-Deep-Learning-Techniques,https://api.github.com/repos/hannankhan888/Estimation-of-Daily-Bicycle-Traffic-Using-Machine-and-Deep-Learning-Techniques,Covers numerous ML and Deep Learning methods used to guess bicycle traffic in intersections using multimodal data.,"# Estimation-of-Daily-Bicycle-Traffic-Using-Machine-and-Deep-Learning-Techniques

## Authors
* MD MINTU MIAH, MS<sup>1</sup>
* KATE KYUNG HYUN, PhD<sup>2</sup>
* STEPHEN P MATTINGLY, PhD<sup>3</sup>
* HANNAN KHAN, BS<sup>4</sup>

> <sup>1</sup>Doctoral Research Assistant, Department of Civil Engineering, the University of Texas at Arlington, TX 76019, USA, Corresponding Email: [mdmintu.miah@mavs.uta.edu](mdmintu.miah@mavs.uta.edu)
>
> <sup>2</sup>Assistant Professor, Department of Civil Engineering, the University of Texas at Arlington, TX 76019, USA, Email: [kate.hyun@uta.edu](kate.hyun@uta.edu)
>
> <sup>3</sup>Professor, Department of Civil Engineering, the University of Texas at Arlington, TX 76019, USA, Email: [mattingly@uta.edu](mattingly@uta.edu)
>
> <sup>4</sup>Graduate Student, Department of Computer Science Engineering, the University of Texas at Arlington, TX 76019,USA, Email: [hannan.khan@mavs.uta.edu](hannan.khan@mavs.uta.edu)

This repository is the official implementation of [Estimation of daily bicycle traffic using machine and deep learning techniques](https://doi.org/10.1007/s11116-022-10290-z).  
Poster presented at [TRBAM 2022](https://annualmeeting.mytrb.org/OnlineProgram/Details/17594).
 
## Abstract
Machine learning (ML) architecture has successfully characterized complex motorized
volumes and travel patterns; however, non-motorized traffic has given less attention to
ML techniques and relied on simple econometric models due to lack of data for
complex modeling. Recent advancement of smartphone-based location data that
collect and process large amounts of daily bicycle activities makes the use of machine
learning techniques for bicycle volume estimations possible and promising. This study
develops seven modeling techniques ranging from advanced techniques such as Convolutional Neural Network (CNN), Deep
Neural Network (DNN), Shallow Neural Network (SNN), Random Forest (RF),
XGBoost, to conventional and simpler approaches such as Decision Tree (DT),
Negative Binomial (NB), and Multiple Linear Regression to estimate the Daily Bicycle
Traffic (DBT). This study uses 6,746 daily bicycle volumes collected from 178
permanent and short-term count locations from 2017 to 2019 in Portland, Oregon. A
total of 45 independent variables capturing anonymous bicycle user activities (Strava
count, bike share), built environments, motorized traffic, and sociodemographic
characteristics create comprehensive variable sets for predictive modeling. Two
variable dimension reduction techniques using principal component analysis and
random forest variable importance analysis ensure that the models are not overgeneralized
or over-fitted with a large variable set. The comparative analysis between
models shows that machine learning techniques of SNN and DNN produce higher
accuracies in estimating daily bicycle volumes. Results show that the DNN models
predict the DBT with a maximum mean absolute percentage error (APE) of 22% while
the conventional model (liner regression) shows 45% of APE.

![Graphical Abstract](/images/graphical_abstract.png)

## Requirements

To install requirements:
It is best to create an Anaconda environment and execute the following command:

```setup
pip install -r requirements.txt
```

The data is available in 'data/'  
_**NOTE:**_ The data does not include the feature 'strava_count' as that is proprietary data. In order to run this code, that column is necessary.

## Project Structure

This project is split into multiple .ipynb files.  
Each file corresponds with one or more models that we tested on our data. (For example: the 'DNN_Route.ipynb' file contains the deep neural network models we created/evaluated with dimension-reduced data, normal data, scaled data, ...)  
Within each hyperparameter search, we have included the 'Wall Time' which is the time it took for our computer to run that particular piece of code.

## To View Code, Download The .html File And Open In Google Chrome
_**NOTE:**_ The code file titled 'Estimation-of-Daily-Bicycle-Traffic-Using-Machine-and-Deep-Learning-Techniques.html' contains the summary of **all** models.

## Pre-trained Models

The pretrained models are available in the appropriate folder.  
(For example: the CNN models are available in the 'models/' folder under the specifc model name I want. In the following code snippet I chose the CNN model based on 45 scaled variables and one convolutional layer.)

I can load this model in two different ways:
1. To obtain the model architecture, we must load the approprate '......study.pkl' file using:
```
study = joblib.load(""cnn_trials/cnn_45_scaled_one_conv_lyr_study.pkl"")
print(""Best trial until now:"")
print("" Value: "", study.best_trial.value)
print("" Params: "")
for key, value in study.best_trial.params.items():
    print(f""    {key}: {value}"")
======================================================================
Best trial until now:
 Value:  158.00619506835938
 Params: 
    batch_size: 16
    n_hdn_layers: 4
    neurons_HL1: 714
    out_channel: 128
    kernel_size: 5
    conv_activation: linear
    dropout_prob: 0.1
    mx_pl_size: 2
    mx_pl_strides: 3
    HL0_ac_fn: relu
    HL1_ac_fn: linear
    HL2_ac_fn: relu
    HL3_ac_fn: linear
```
The model can then be created using either Keras or PyTorch:  
_**Note:**_ In each model, the output layer has 1 node with a linear activation function.
```
cnn_model = Sequential([
    layers.Conv1D(128, 5, activation='linear', input_shape=(X_scaled.shape[1], 1)),
    layers.Dropout(0.1),
    layers.MaxPooling1D(pool_size=2, strides=3, padding='valid'),
    layers.Flatten(),
    layers.Dense(714, activation='relu'),
    layers.Dense(357, activation='linear'),
    layers.Dense(178, activation='relu'),
    layers.Dense(89, activation='linear'),
    layers.Dense(1, activation='linear')
])
```
2. The PyTorch model can be directly loaded by selecting the '......trial#.pickle' file:
```
with open('models/cnn_45_scaled_one_conv_lyr_trial3271.pickle', 'rb') as f:
    torch.load(f)

 # Or you can use:

 cnn_model = torch.load('cnn_45_scaled_one_conv_lyr_trial3271.pickle')
```

_**NOTE:**_ The CNN and DNN saved models were made using GPU, loading and use of these models will likely require a GPU as well.
",1,1,1,0,transportation,"[bicycle, convolutional-neural-networks, deep-learning, deep-neural-networks, machine-learning, transportation]",00000
275,taipei-mrt-data,HoMuChen,N/A,https://github.com/HoMuChen/taipei-mrt-data,https://api.github.com/repos/HoMuChen/taipei-mrt-data,台北捷運各站，每小時、每天、每月，進出人數統計資料,"# taipei-mrt-data

台北捷運各站，每小時、每天、每月，進出人數統計資料

## 資料來源

[臺北捷運各站分時進出量統計](https://data.taipei/dataset/detail?id=63f31c7e-7fc3-418b-bd82-b95158755b4d)

## 資料格式

### csv

### ndjson
",1,1,2,0,transportation,"[dataset, taipei, taipei-metro, taipei-mrt, transportation]",00000
276,translog-algorithms,polakowo,N/A,https://github.com/polakowo/translog-algorithms,https://api.github.com/repos/polakowo/translog-algorithms,Transportation Logistics algorithms,"# translog-algorithms

http://nbviewer.jupyter.org/github/polakowo/translog-algorithms/blob/master/Workbook.ipynb
",1,1,2,0,transportation,"[logistics, optimization, optimization-algorithms, transportation]",00000
277,AddisMapTransit-gtfs,AddisMap,AddisMap,https://github.com/AddisMap/AddisMapTransit-gtfs,https://api.github.com/repos/AddisMap/AddisMapTransit-gtfs,"GTFS Data for Addis Ababa Buses, LRT and Minibuses. Collected and uploaded to OSM by Team AddisMap,","# AddisMapTransit-gtfs

Transit data of Addis Ababa, Ethiopia - based on OpenStreetMap

* Minibus data (Paratransit aka Informal Transport aka Popular Transport)
* Bus data
* Light rail

The open license for this data is currently not decided yet.

The data was collected on the ground and uploaded to OSM by AddisMap Team. This data is validated on OSM and directly extracted from the OSM OverPass API. 
Please use any GTFS validation tool of your preference to do GTFS Specific validation. Note that you need to check the OSM history and routes data status before extracting new GTFS data set as such changes on OSM would affect the GTFS data too.

The dataset is updated every night.

If you want to use this data please contact info@addismap.com

# Basic steps to extract the proper GTFS zip for use with your validator or OTP

1. Download the ZIP file from this repository to your local machine
   ![Step 1](https://github.com/AddisMap/AddisMapTransit-gtfs/assets/3072964/bb862c43-6b21-4721-86a4-01b239466fde)

2. Go to your download directory and select the ZIP you just downloaded
![Step 2](https://github.com/AddisMap/AddisMapTransit-gtfs/assets/3072964/20a993bb-5b76-49d1-8aa8-a08d7aedda69)


3. Extract the files and go into the extracted directory
![Step 3](https://github.com/AddisMap/AddisMapTransit-gtfs/assets/3072964/d2f289af-651a-418e-9455-14b692e98de4)
![Step 4](https://github.com/AddisMap/AddisMapTransit-gtfs/assets/3072964/79ee99e9-78eb-4bd8-bff3-82fe95d5c31b)
   
4. Select the required *.txt files that you will use to create your new GTFS zip file   
![Step 5](https://github.com/AddisMap/AddisMapTransit-gtfs/assets/3072964/5f63bf78-aa88-4314-986c-09c773befb87)

5. Name the ZIP and compress it
![Step 6](https://github.com/AddisMap/AddisMapTransit-gtfs/assets/3072964/bd2ff33e-3927-4d06-acad-ea5445eac876)

![Step 7](https://github.com/AddisMap/AddisMapTransit-gtfs/assets/3072964/97dc7833-af48-4f6b-9913-fecb3a6db229)

6. Use the newly created ZIP file for use with your desired validation and visualization tools
![Step 8](https://github.com/AddisMap/AddisMapTransit-gtfs/assets/3072964/eef100f0-03e1-40d3-ad9e-d160ec20805f)


## See also

* https://addismaptransit.com/
* [Web Transit Planner](https://web.addismaptransit.com/)
",1,1,2,0,transportation,"[gtfs, osm, routes, transportation]",00000
278,metronome,thisistimothychen,N/A,https://github.com/thisistimothychen/metronome,https://api.github.com/repos/thisistimothychen/metronome,🏆 Improving the metro riding experience via real-time ambient feedback about car capacity. Winning project for Google NYC's Intern Hackathon.,"# Metronome
Improving the train riding experience for all New Yorkers!

With over 5.5 million daily riders, the NYC metro system is both a blessing but also a headache. How many times have you watched an empty subway car pass by you as it rolls into the station, just to be greeted by a jam-packed car? How many times have you moved down the platform in _hopes_ of ending up with an empty car?

Our team wanted to help New Yorkers experience a less crowded and more efficient commute. There are only a few seconds before each train leaves the station, but plenty of wait time on the platform. We sought out to provide commuters real-time ambient feedback about the capacity of the cars on their upcoming train.


## Ideal State

![Mock-up of our ideal state](img/ideal-state-mock.png)

We envision a metro experience that would include LED strips on the platform signaling in real-time how full each car from the incoming train is. This status could also be integrated on an on-screen display or even within Google Maps.


## Implementation

![Architecture Diagram](img/architecture-diagram.png)

For our prototype, we created a Flask webapp with routes to simulate when the subway car doors would close. We had a button on the webapp that triggers the security cameras (simulated via Raspberry Pi's with cameras) to take a picture and send it to the Google Cloud Vision API to detect the number of faces. This enabled us to get a rough estimate of how full a car was. This data is then sent up to a Firebase database (used for historical data storage).

The frontend side of our webapp was the display that could be put up on screens at the platform to provide an additional cue.

We used socket.io to trigger the Pi code that took pictures, which would then trigger the UI to automatically update on the Flask frontend.


![Raspberry Pi's](img/platform-pi-setup.png)

On the platform (simulated via a Raspberry Pi with LEDs), we continually pull and parse data from Firebase to determine what colors to display on each LED.
",1,1,5,4,transportation,"[firebase, flask-server, google, google-hackathon, google-interns, lifehack, raspberry-pi-3, transportation]",00000
279,mydailytravel,CMAP-REPOS,CMAP-REPOS,https://github.com/CMAP-REPOS/mydailytravel,https://api.github.com/repos/CMAP-REPOS/mydailytravel,This repo includes the R scripts for an analysis of the Chicago Metropolitan Agency for Planning's My Daily Travel survey.,"# My Daily Travel Analysis
 
This repo includes the code supporting a series of [policy briefs](https://www.cmap.illinois.gov/data/transportation/travel-survey/my-daily-travel) by the Chicago Metropolitan Agency for Planning (CMAP). The series reviews the findings from CMAP's most recent travel survey, [My Daily Travel](https://www.cmap.illinois.gov/data/transportation/travel-survey).

## Data sources

The primary data sources for these policy briefs are the trip diaries and survey results from:
- [My Daily Travel](https://datahub.cmap.illinois.gov/dataset/mydailytravel-2018-2019-public) (MDT), CMAP's 2019 travel survey. This dataset is automatically extracted by the scripts but can also be accessed at the posted link.
- [Travel Tracker](https://datahub.cmap.illinois.gov/dataset/traveltracker0708/resource/092af96e-9c7a-4182-a1e1-ecff588a9de0?inner_span=True) (TT), CMAP's prior travel survey (conducted in 2008). If you are interested in replicating or building on these analyses, **this dataset must be downloaded and placed into the appropriate working directory before running the scripts.**

The posted datasets are supplemented by three files that provide additional detail to enable geographic and trip purpose breakdowns. These are available in the [sources](/source) folder.

The analyses also leverage several outside data sources. For example, the analysis of bike-share uses publicly available data from Divvy on system ridership. That data is automatically downloaded when executing these scripts, but can also be accessed [here](https://www.divvybikes.com/system-data). Similarly, the analysis of TNCs refers to the City of Chicago's Transportation Network Provider data, which was extracted from the city's data portal, [here](https://data.cityofchicago.org/Transportation/Transportation-Network-Providers-Trips/m6dm-c72p/data).

## Data notes

Each of the scripts includes comments explaining which records were included or excluded for analysis. While this does vary by analysis (for example, comparisons of My Daily Travel and Travel Tracker require additional exclusions), some records are handled uniformly across analyses:
- Trips are only included if they start and/or end in the Illinois counties of Cook, DeKalb, DuPage, Grundy, Kane, Kendall, Lake, McHenry, or Will. Trips that start and end outside of those counties are excluded.
- Trips that are 100 miles are longer are excluded.
- Trips by travelers younger than 5 years old are excluded. This is primarily applicable to Travel Tracker, since My Daily Travel only asked for the travel behavior of household members 5 years old or older.
- For My Daily Travel data, some single trips were split across multiple records. These records were merged using the `placeGroup` field, which is further explained in the My Daily Travel documentation.
- Both surveys includes a limited number of trips coded as walking trips that appear to be significant outliers and/or have an inaccurate reported mode, based on a combination of time and distance traveled (e.g., longer than 25 miles, or walking 10 miles in 15 minutes). Walking trips longer than 25 miles or that were longer than 10 miles and traveled faster than 5 minutes per mile are coded as improbable walks and are excluded from mode share analyses.

The My Daily Travel and Travel Tracker surveys are both representative of travel in the CMAP region for their respective travel periods. However, there were methodological differences between the two, which limits some possible comparisons. Where applicable, these limitations and caveats are noted in comments.

## R scripts

This repo includes several helper scripts that import, recode, and clean the data:
- [data_cleaning.R](/R/data_cleaning.R): This script imports and cleans data for both MDT and TT.
- [recoding.R](/R/recoding.R): This script includes lists of trip purposes, modes, household income buckets, and geographies. These lists are leveraged by the data cleaning script to recode data into larger categories for analysis.
- [helper_fns.R](/R/helper_fns.R): This script includes three helper functions that are used across the repo.
- [mdt_dates.R](/R/mdt_dates.R): This script includes date intervals used to filter non-household travel survey data for comparability with MDT (e.g., analyses of Divvy).

There are also individuals scripts that support various analyses and graphics in the policy briefs:
- [average_resident.R](/R/average_resident.R): This script calculates average travel behavior for MDT and TT. It includes general figures and breakdowns by demographic characteristics.
- [divvy.R](/R/divvy.R): This script produces a trips-in-motion graph for Divvy ridership during the MDT survey period.
- [mode_analysis.R](/R/tpurps_of_modes.R): This script analyzes the trip purpose patterns of specific modes.
- [mode_share.R](/R/mode_share.R): This script calculates the mode share in the CMAP region by home location and demographic characteristics.
- [racial_disparities.R](/R/racial_disparities.R): This script analyzes racial disparities in travel times in the region.
- [school_trips.R](/R/school_trips.R): This script analyzes the dynamics of school trips in the MDT and TT surveys, with a specific exploration of racial disparities in trip times for K-8 students.
- [tnc.R](/R/tnc.R): This script analyzes MDT's data on TNC ridership, including from both the trip diary and survey components.
- [tpurp_analysis.R](/R/modes_of_tpurps.R): This script analyzes the modes used for specific trip purposes, including health care, dining, and socializing.
- [trips_in_motion.R](/R/trips_in_motion.R): This script generates trips-in-motion charts for MDT.
- [wfh.R](/R/wfh.R): This script analyzes MDT and TT data on telecommuting and working from home behavior.
",1,1,2,0,transportation,"[chicago, planning, transportation]",00000
280,transportation-engineer,cielak,N/A,https://github.com/cielak/transportation-engineer,https://api.github.com/repos/cielak/transportation-engineer,,"# transportation-engineer
",1,1,2,1,transportation,"[transportation, transportation-engineering]",00000
281,tbs,gaissa,N/A,https://github.com/gaissa/tbs,https://api.github.com/repos/gaissa/tbs,Tampere Bus Stalker,"# TBS
Tampere Bus Stalker
",1,1,2,0,transportation,"[android, google-maps, jquery, jquery-mobile, js, phonegap, transportation]",00000
282,gbgtraffic,icyJoseph,N/A,https://github.com/icyJoseph/gbgtraffic,https://api.github.com/repos/icyJoseph/gbgtraffic,Tram and bus stops around you!,"# Bus/Tram Stops Around You!

Demo available at [BusApp](https://wiry-coal.surge.sh/).

Usage notes:

> You can drag the main marker.

> Clicking the bus icon displays stops around the marker.

> Clicking the Location icon centers the map on the user's current position.

Tech stack:

> Create-react-app, with Redux, styled-components and MUI.

> GeoLocation is done through [MapBox's API](https://www.mapbox.com/).

> The MapBox component uses MapBox's [mapbox-gl-js API](https://www.mapbox.com/install/js/).

> [Västtraffik's API](https://developer.vasttrafik.se/portal/#/) is used to fetch depature/arrival data.

> Access tokens are temporary and generated through a [webtask](https://webtask.io/).

> [Redux-Saga](https://github.com/redux-saga/redux-saga) to manage side effects.

> PWA ready. It even uses web API for geolocation.

> The 8x8 grid on the top right is a graphical representation of the user's ID.

This application was rebuilt as part of a solo weekend hack!
",1,1,1,26,transportation,"[axios, mapbox-gl-js, no-tests, react, redux, redux-saga, traffic, transportation, vasttrafik, weekend-hacking]",00000
283,transportation_vis,HongyuJiang,N/A,https://github.com/HongyuJiang/transportation_vis,https://api.github.com/repos/HongyuJiang/transportation_vis,,"# Mianyang transportation visualization

![preview](preview.jpg)

# developed via deck.gl
",1,1,2,0,transportation,"[deck-gl, mapbox-gl, transportation, visualization]",00000
284,Uber-Nairobi-Ambulance-Perambulation-Challenge,Abel-Moremi,N/A,https://github.com/Abel-Moremi/Uber-Nairobi-Ambulance-Perambulation-Challenge,https://api.github.com/repos/Abel-Moremi/Uber-Nairobi-Ambulance-Perambulation-Challenge,Machine Learning model to create an optimized ambulance deployment strategy in Nairobi.,"# UBER NAIROBI AMBULANCE PERAMBULATION CHALLENGE
### INTRODUCTION
Road traffic collisions are the number one killer of children and young adults ages 5-29, and 8th leading cause of death worldwide. Post-crash care is one of the five pillars of road safety and a critical component for reducing morbidity and mortality.

When it comes to emergency response to road accidents, every second counts. With heavy traffic patterns and the unique layout of the city, finding the best locations to position emergency responders throughout the day as they wait to be called is critical in a city like Nairobi.

### GAOL
Information has been collected on thousands of traffic accidents that have occurred in Nairobi, Kenya in 2018 and 2019. For the [competition](https://zindi.africa/competitions/uber-nairobi-ambulance-perambulation-challenge), use training data (recorded crashes up to June 2019) along with supplementary data from [Uber Movement](https://movement.uber.com/), road survey data and weather patterns to identify patterns of risk across the city. Used these findings to place six virtual ambulances around the city, moving them around throughout the day with the goal of minimising the distance travelled when responding to crashes during the test period.

### ACHIEVED
### RESOURCES
",1,1,2,0,transportation,"[ml, road-safety, transportation, zindi]",00000
285,bucheon,so02e,N/A,https://github.com/so02e/bucheon,https://api.github.com/repos/so02e/bucheon,부천시 시민 아이디어 공모전 :: 자전거 대여소 최적위치 제안,"# 빅데이터 분석 프로젝트

> 2021년 4월 멀티캠퍼스 K-DIGITAL 프로젝트형 빅데이터 분석 서비스 개발 프로그램에서 진행한 **<u>Python을 이용한 빅데이터 분석 개발</u>** 프로젝트입니다.



## 팀 구성

### 1. 팀명

자전거리두기

### 2. 팀원

강용(팀장), 박희망, 윤상원, 장소영

### 3. 역할

- 강용 : 데이터 수집, 전처리 (yong_*.ipynb)
- 박희망 : 데이터 수집, 통계분석 (hee_*.ipynb)
- 윤상원 : 데이터 전처리, 모델링 (won_*.ipynb)
- 장소영 : 데이터 전처리, 통계분석 (young\_\*.ipynb, soyoung\_\*.ipynb)



## 프로젝트 내용

### 1. 프로젝트 주제

부천시 공공자전거 현황분석을 통한 추가 무료대여소 최적위치 제안

### 2. 프로젝트 일정 (20일)

- 4/6 ~ 4/8 : 주제 선정 및 일정 수립
- 4/12 ~ 4/16 : 데이터 전처리 및 가공
- 4/19 ~ 4/23 : 데이터 분석 및 통계분석
- 4/24 ~ 4/27 : 결과해석, 최종보고서 작성
- 4/27 : 최종보고서 발표
- 4/30 : 공모전 제출

### 3. **프로젝트 수행 도구**

- 언어: Python
- 분석환경: Jupyter lab
- 사용패키지: Pandas, Folium, Matplotlib, seaborn, geopandas, Numpy
- 협업도구: Github, Notion



## 기타

- 발표자료: [자세히 보기](https://github.com/so02e/bucheon/blob/main/%EC%B5%9C%EC%A2%85%EB%B0%9C%ED%91%9C/%5B1%EC%A1%B0%5D%20%EC%A0%84%EA%B3%B5%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8_%EB%B0%9C%ED%91%9C%EC%9E%90%EB%A3%8C.pdf)
",1,1,1,0,transportation,"[bicycle, project, python, transportation]",00000
286,prairist.github.io,prairist,prairist,https://github.com/prairist/prairist.github.io,https://api.github.com/repos/prairist/prairist.github.io,,"# 大草原出行家

[![GitHub Pages](https://github.com/prairist/prairist.github.io/actions/workflows/github-pages.yml/badge.svg)](https://github.com/prairist/prairist.github.io/actions/workflows/github-pages.yml)
[![Gitee Pages](https://github.com/prairist/prairist.github.io/actions/workflows/gitee-pages.yml/badge.svg)](https://github.com/prairist/prairist.github.io/actions/workflows/gitee-pages.yml)
[![GitHub license](https://img.shields.io/badge/License-CC%20BY--NC--SA%204.0-green.svg)](https://github.com/prairist/prairist.github.io/blob/master/LICENSE)",1,1,1,0,transportation,"[transportation, vuepress-blog]",00000
287,super-trucker,AndrewPBartson,N/A,https://github.com/AndrewPBartson/super-trucker,https://api.github.com/repos/AndrewPBartson/super-trucker,"Web app for planning road trips. The user enters the starting point and destination. The app produces a trip route, schedule, and weather reports for the entire route.","<div align=""center"">
<img id=""anchor_on_top"" alt=""Super Trucker - Weather on your route"" width=""70%"" src=""./imgs_readme/banner.jpg"">
</div>

---

<div align=""center"">
<button >
  <a href=""https://supertrucker.app"">Link to SuperTrucker.app - Beta</a>
</button>
</div>

---

<table>
<tr>
<td>

<details open=""open"">
<summary>Table of Contents</summary>

- [How can this app help you?](#how-can-this-app-help-you)
- [Competitive advantage](#providing-a-competitive-advantage)
- [Tech stack](#tech-stack)
- [Under the hood](#under-the-hood)
  - [User sends trip request](#step-1---the-user-sends-a-trip-request-to-server)
  - [Calculate route](#step-2---calculate-directions-and-schedule-for-the-trip)
  - [Gather weather data](#step-3---gather-weather-data-for-each-location-on-route)
  - [Display trip schedule in browser](#step-4---display-the-trip-schedule-for-the-user)
- [Containers & Microservices](#containers---microservices)
- [Sources for weather data](#sources-for-weather-data)
- [What's next for this project?](#whats-next-wish-list-for-additional-features)
- [Screenshots](#screenshots)

</details>

</td>
</tr>
</table>

---

## How can this app help you?

<table>
<tr>
<td>

- SuperTrucker is for planning long-distance multi-day road trips
- The user enters starting point, destination, and number of miles to drive each day
- The app produces a trip route, schedule, and weather reports along the route

</td>
</tr>
</table>

### :chart_with_upwards_trend:

## Providing a Competitive Advantage

<table>
<tr>
<td>

### :truck: &nbsp;Target audience

- Trucking industry
- Drivers / Fleet managers / Load planners

### :snowflake: &nbsp;Anticipate weather delays

- This app helps you to anticipate snow and ice storms during winter. More accurate and high resolution weather information can reduce the number of late deliveries.

### :alarm_clock: &nbsp;Estimate ETA quickly

- This app provides an accurate estimate of the earliest realistic arrival time for a shipment. It allows you to quickly figure out whether an expedited delivery schedule is impossible, difficult, or just normal trucking.

- The most profitable loads are available only for a very short time before being taken. By saving valuable minutes, this app allows you to secure desirable loads before your competitors.

</td>
</tr>
</table>

## Tech Stack

<table>
<tr>
<td>

- <b>Containers</b> -- Docker / Kubernetes
- <b>Front End</b> -- Angular / Google Maps
- <b>Back End</b> -- Node / Express / MongoDb
- <b>External APIs</b> -- Google Directions / US Weather Service / Open Weather Map

</td>
</tr>
</table>

### &nbsp; :wrench: :hammer:

## Under the Hood

<table>
<tr>
<td>

### Step 1 - The user sends a trip request to server

### :white_check_mark:

- At a minimum, the user must enter -
  - Starting point
  - Destination
- The user can modify other settings for the trip -
  - Miles per hour
  - Hours driving per day
  - Miles per day
  - Home timezone
- The user's input is sent in a POST request to the trip-api server

</td>
</tr>
</table>

<table>
<tr>
<td>

### Step 2 - Calculate directions and schedule for the trip

### :white_check_mark:

- When a trip request comes in, the server initially retrieves a simple route from Google Directions API, that is, a route from starting point to destination as specified by the user
- Building on this simple route, intermediate locations are added
- This series of locations is then submitted to Google Directions API to produce a route with multiple stops
- However, thus far, the distances between the stops are random. Further calculations plus one or more calls to Google Directions API are needed to adjust the stops so that they are evenly spaced along the route
- The schedule for the trip is calculated based on user input or default values for -

  - Starting date and time
  - Miles per hour
  - Hours driving per day

- The route and schedule can show as many as 24 locations with ETA for each location

</td>
</tr>
</table>

<table>
<tr>
<td>

### Step 3 - Gather weather data for each location on route

### :white_check_mark:

- For each location on the route, the server gathers weather data from:
  - Open Weather Map
  - US Weather Service
- Gathering weather data for a multi-day trip may require more than 70 requests

- A series of weather data points is selected, each one matches a time and location on the schedule

- Times on the schedule are calculated for two timezones -

  - Local time for location on schedule
  - Time for user's home timezone

- Data is also organized into sections, one for each day

</td>
</tr>
</table>

<table>
<tr>
<td>

### Step 4 - Display the trip schedule for the user

### :white_check_mark:

- The trip schedule is displayed in two formats

  - Map with a series of weather icons displayed along the highways with pop-up information windows
    - [Example screenshot - Map with weather](#2---summary-of-trip)
  - Expandable table - a set of accordion UI elements that show or hide the details for each day
    - [Example screenshot - Schedule for a day](#5---schedule-for-one-day-expanded-to-show-weather-along-the-route)

</details>

</td>
</tr>
</table>

<div align=""center"">
<button >
  <a href=""#anchor_on_top"">Back to the Top</a>
</button>
</div>

## Containers - Microservices

- Four containers and one database
- Built with Docker and Kubernetes
- Deployed on Digital Ocean

<details>
<summary>
See flow chart of Kubernetes containers and services<br> 
<picture align=""center"">
<img style=""margin-top:10px;"" src=""./imgs_readme/containers_thumbnail.jpg"" alt=""Thumbnail showing K8s architecture""/>
</picture>
</summary>

<table>
<tr>
<td>

<img src=""./imgs_readme/containersK8s.jpg"" alt=""Flowchart showing Kubernetes architecture""/>

</td>
</tr>
</table>

</details>

<table>
<tr>
<td>

### **nginx-ingress** &nbsp;<img src=""./imgs_readme/kubernetes.svg"" title=""Kubernetes"" alt=""Kubernetes"" width=""40"" height=""40""/>

- Secure entry point that directs traffic to internal services
- All further traffic and responses are encrypted - HTTPS / TLS / SSL

### **web-mvc** &nbsp;<img src=""./imgs_readme/angular.svg"" title=""Angular"" alt=""Angular"" width=""40"" height=""40""/>

- Web framework by Angular
- Angular Material Design - UI library
- Google Map

### **trip-api** &nbsp;<img src=""./imgs_readme/nodejs.svg"" title=""NodeJS"" alt=""NodeJS"" width=""40"" height=""40""/>

- Express server running on NodeJS
- Creates a trip route with properly spaced locations
- Calculates the schedule with arrival times expressed in two timezones
- Gathers weather forecasts for each location, including web-scraping
- Pulls out weather data for the timestamp when user is scheduled to be at that location

### **user-api** &nbsp;<img src=""./imgs_readme/nodejs.svg"" title=""NodeJS"" alt=""NodeJS"" width=""40"" height=""40""/>

- Express server running on NodeJS
- Allows the user to register and login
- Provides secure access using JWT tokens, Bcrypt, and Passport

### **MongoDb** &nbsp;<img src=""./imgs_readme/mongodb.svg"" title=""MongoDB"" alt=""MongoDB"" width=""40"" height=""40""/>

- Mongo database is deployed separately on MongoDB Atlas

</td>
</tr>
</table>

<div align=""center"">
<button >
  <a href=""#anchor_on_top"">Back to the Top</a>
</button>
</div>

### &nbsp; :sunny: :umbrella: :snowflake:

## Sources for Weather Data

<table>
<tr>
<td>

<details>

<summary><b>Open Weather Map API</b></summary>

---

- Provides most data in 24-hour periods - midnight to midnight
- except temperature data is in 6-hour periods -
  - Midnight to 6 am
  - 6 am to noon
  - Noon to 6 pm
  - 6 pm to midnight
- Temperature data is superior to other sources because of the better resolution (6 hour periods)
- Provides timezone for each location - awesome
- Example URL
  - https://api.openweathermap.org/data/2.5/onecall?lat=35.5&lon=97.5&appid={APIkey}
- API key is required

</details>

---

<details>
<summary><b>US Weather Service API</b></summary>

---

- provides data in 12-hour periods -
  - 6 am to 6 pm
  - 6 pm to 6 am
- provides better icons and weather summary compared to Open Weather Map
- Two separate API calls are required to obtain forecast for each location
  - First URL example ->
  - [https://api.weather.gov/points/35.5,-97.5](https://api.weather.gov/points/35.5,-97.5)
  - First response provides the second URL ->
  - [https://api.weather.gov/gridpoints/OUN/97,94/forecast](https://api.weathergov/gridpoints/OUN/97,94/forecast)
  - Second URL returns the actual forecast (except when the weather server returns an error)
- No API key is required

</details>

---

<details>
<summary><b>US Weather Service HTML (web page) &nbsp; </b></summary>

---

- About 5% of requests to api.weather.gov fail with status 500 or 503
- For each failed request, data is gathered from forecast.weather.gov, which is the US Weather Service consumer-facing web page
- The weather data is embedded in html code and must be extracted, or ""scraped""
- This data is almost the same as data from USWS API but is less complete
- Example URL
  - <a href=""https://forecast.weather.gov/MapClick.php?lat=35.5&lon=-97.5"">https://forecast.weather.gov/MapClick.php?lat=35.5&lon=-97.5</a>
- No API key is required

</details>

---

<details>
<summary><b>Time limitations for weather data</b></summary>

- US Weather Service data covers approximately the next seven days
- Open Weather Map data covers the next eight days
- For any times on the schedule that are beyond these time frames, the schedule informs the user, ""No Weather Data for [ date ]""

</details>

</td>
</tr>
</table>

### &nbsp; :rocket:

## What's next? &nbsp;Wish list for additional features

<table>
<tr>
<td>

- Convert the frontend to React / Redux to facilitate advanced features
- Add the ability to save a ""trip template"" for recurring trips
- Add the ability to find services along the route such as -
  - Hotels
  - Truck stops
  - Repair shops and tow trucks
- Research target audience to learn how the app can better serve them
- Implement advertising, subscriptions, or other monetization strategies
- Fix login and register capabilities which broke along the way :)
- Create mobile version of application
- Extend the app to more countries
  - At this time, trip data is only available for the US and Canada
  - Mexico is the next target
  - Need to upgrade to higher quality weather data for Canada

</td>
</tr>
</table>

<div align=""center"">
<button >
  <a href=""#anchor_on_top"">Back to the Top</a>
</button>
</div>
<br />

<table>
<tr>
<td>

## Screenshots

#### 1 - Welcome screen - Form for user input

<img src=""./imgs_readme/ui_form_w_input.jpg"" alt=""Form with user input""/>

---

#### 2 - Welcome screen - Expanded to show one-click options

<img src=""./imgs_readme/ui_form_w_settings.jpg"" alt=""Form with more settings""/>

---

#### 3 - Summary of trip

<img src=""./imgs_readme/ui_trip_summary.jpg"" alt=""Summary of trip""/>

---

#### 4 - Details for one day

<img src=""./imgs_readme/ui_trip_day_3.jpg"" alt=""Details for one day""/>

---

#### 5 - Login and register

<img src=""./imgs_readme/ui_auth.jpg"" alt=""UI for login and register""/>

---

#### 6 - Schedule for one day

- Displayed in table format
- Expanded to show weather along route

<img src=""./imgs_readme/ui_trip_table.jpg"" alt=""Expanded weather data for one day"" height=""700""/>

</td>
</tr>
</table>

<div align=""center"">
<button >
  <a href=""#anchor_on_top"">Back to the Top</a>
</button>
</div>
",1,1,1,0,transportation,"[kubernetes, transportation]",00000
288,Package-Tracker,Mistralton,Mistralton,https://github.com/Mistralton/Package-Tracker,https://api.github.com/repos/Mistralton/Package-Tracker,A web application that allows users to track their packages from different shipping companies in one place.,"<div align=""center"">
  <div>
  <h1>Package Tracker</h1>
  A web-based application that allows users to track their packages from different shipping companies in one place, using Next.js, Auth0, and Firebase.
  </div>
<br />

<a href=""https://packagetracker.tech/"">View your packages here</a>

  <div>
   <img src=""https://img.shields.io/badge/Next-black?style=for-the-badge&logo=next.js&logoColor=white""> <img src=""https://img.shields.io/badge/Firebase-ff9900?style=for-the-badge&logo=firebase&logoColor=white""> <img src=""https://img.shields.io/badge/node.js-6DA55F?style=for-the-badge&logo=node.js&logoColor=white""> <img src=""https://img.shields.io/badge/typescript-%23007ACC.svg?style=for-the-badge&logo=typescript&logoColor=white"">
  </div>

  <img src=""public/image.png"">
</div>

Recently, a group mate of ours built a PC and found that it can get really annoying juggling so many different shipping labels from the many provider choices that he had had. We decided to develop a project to alleviate this and eventually settled on Package Tracker to act as a central place to congregate and track all your packages in one simple place!

We made this using Next.js as our frontend layer, and used Firebase for their Firestore database to store the labels. We used Auth0 for authentication. To ensure that labels are kept up to date, we used a Cloud Scheduler Firebase cloud function run on a cronjob.

<div align=""center"">
<img src=""public/result.png"">
</div>

## 🚀 Getting Started
Anybody can input their shipping labels at the home page and get an update on the current state and location of their packages. To track these, sign up and then receive a dashboard of all your labels and browse through a history of their locations and statuses. Rate and view shipping companies in terms of performance and satisfaction.

To run the project locally, follow these steps:

1. Clone the repository to your local machine.
2. Navigate to the root directory of the project.
3. Run `npm install` to install the necessary dependencies.
4. Run `npm run dev` to start the development server.
5. Visit `http://localhost:3000` in your web browser to view the application.

## 💻 Technologies

- Next.js: a JavaScript framework for building server-rendered or statically-exported applications using React.
- Firebase: A backend as a service, providing features like a document database and cloud functions.
- Mapbox: A modern solution for web mapping that provides a powerful Javascript SDK and API.
- Auth0: An authentication software as a service that provides us with a powerful sdk to add and develop authentication.
",1,1,0,0,transportation,"[auth0, hackathon, major-league-hacking, mapbox, mlh, nextjs, shipping, tailwindcss, transportation, transporthacks]",00000
289,TransportCompanyComputerizationSoftware,sayanmandal,N/A,https://github.com/sayanmandal/TransportCompanyComputerizationSoftware,https://api.github.com/repos/sayanmandal/TransportCompanyComputerizationSoftware,It is a Java based software . This is my Software engineering final project. It is a software for computerized version for mailing courier. SRS/SA/SD/ UMl for this Project is also there,"{'message': 'Not Found', 'documentation_url': 'https://docs.github.com/rest/repos/contents#get-repository-content'}",1,1,2,0,transportation,"[java, software-engineering, transportation]",00000
290,Uber-Clone,KushalJoseph,N/A,https://github.com/KushalJoseph/Uber-Clone,https://api.github.com/repos/KushalJoseph/Uber-Clone,"A clone of the popular transportation app - Uber. Login/Register as a user/driver. Users can see available drivers, and vice versa. Asking for a ride alerts all drivers nearby. Built using Android's built in Geolocation Service, and Parse Server as an Online Database","## Uber-Clone
A clone of the popular transportation app - Uber. Login/Register as a user/driver. Users can see available drivers, and vice versa. Asking for a ride alerts all drivers nearby. Built using Android's built in Geolocation Service, and Parse Server as an Online Database
",1,1,1,0,transportation,"[android, geolocation, transportation]",00000
291,NSW_Traffic_Volume_Viewer_Analytics,peterstephan,N/A,https://github.com/peterstephan/NSW_Traffic_Volume_Viewer_Analytics,https://api.github.com/repos/peterstephan/NSW_Traffic_Volume_Viewer_Analytics,This series of notebooks have been developed to analyse traffic data from the NSW Traffic Volume Viewer website,"# NSW Traffic Volume Viewer Analytics

This series of notebooks have been developed to analyse traffic data from the NSW Traffic Volume Viewer website - see: 
https://roads-waterways.transport.nsw.gov.au/about/corporate-publications/statistics/traffic-volumes/aadt-map/index.html#/?z=6

Refer to the official documentation for details of the data:
""Dataset Documentation - NSW Traffic Volume Counts.pdf""",1,1,1,0,transportation,"[traffic, traffic-analysis, traffic-data, transport, transport-api, transportation, transportation-network, transportation-planning]",00000
292,NSW_Toll_Road_Data_Analytics,peterstephan,N/A,https://github.com/peterstephan/NSW_Toll_Road_Data_Analytics,https://api.github.com/repos/peterstephan/NSW_Toll_Road_Data_Analytics,This series of notebooks have been developed to analyse traffic volume and travel pattern data from the NSW Toll Road Data website (https://nswtollroaddata.com). More updates coming soon.,"# NSW Toll Road Data Analytics

This series of notebooks have been developed to analyse traffic volume and travel pattern data from the NSW Toll Road Data website - see: https://nswtollroaddata.com/

The datasets on the NSW Toll Road Data website contain traffic data for the following toll roads in Sydney, New South Wales, Australia that are wholly or partly owned by Transurban:
- Cross City Tunnel (""CCT"")
- Hills M2 (""M2"")
- Lane Cove Tunnel / Military Road E-Ramp (""LCT"")
- M1 Eastern Distributor (""ED"")
- M4 (""M4"")
- M5 South West Motorway (""M5"")
- M5 East & M8 (""M5E"")
- NorthConnex (""NCX"")
- Westlink M7 (""M7"")

Quarterly traffic data is published on nswtollroaddata.com in accordance with Transurban’s obligations under an Undertaking accepted by the ACCC on 29 August 2018 under section 87B of the Competition and Consumer Act 2010 (Cth) (Undertaking) and is made available under the Creative Commons Attribution 4.0 license.

GitHub Pages link: 
https://peterstephan.github.io/NSW_Toll_Road_Data_Analytics/",1,1,1,0,transportation,"[australia, traffic, traffic-analysis, transport, transportation, transportation-network]",00000
293,chicago-transport,RandomFractals,N/A,https://github.com/RandomFractals/chicago-transport,https://api.github.com/repos/RandomFractals/chicago-transport,Exploratory data analysis of public Chicago transportation datasets.,"# Chicago Transportation EDA

Exploratory data analysis of public [Chicago transportation datasets](https://data.cityofchicago.org/browse?category=Transportation) from [Chicago Data Portal](https://data.cityofchicago.org/).

## Traffic Crashes

Chicago Data Portal provides traffic crash report information from all police districts starting from September 2017 to present, with data updated daily. [Traffic Crashes](https://data.cityofchicago.org/Transportation/Traffic-Crashes-Crashes/85ca-t3if) data from electronic crash reporting system (E-Crash) are available for some police districts in 2015, but citywide data are not available until September 2017.

![Chicago Traffic Crashes 2015 to Present Data Info ...](https://github.com/RandomFractals/chicago-transport/blob/main/docs/images/chicago-traffic-crashes-dataset.png?raw=true
 ""Chicago Traffic Crashes 2015 to Present Data Info ..."")

Crash data shows information about each traffic crash on city streets within the City of Chicago limits and under the jurisdiction of Chicago Police Department (CPD). About half of all crash reports, mostly minor crashes, are self-reported at the police district by the driver(s) involved and the other half are recorded at the scene by the police officer responding to the crash.

Many of the crash parameters, including street condition data, weather condition, and posted speed limits, are recorded by the reporting officer based on best available information at the time, but may disagree with posted information or other assessments on road conditions. A traffic crash within the city limits for which CPD is not the responding police agency, typically crashes on interstate highways, freeway ramps, and on local roads along the City boundary, are excluded from this dataset.

All crashes are recorded as per the format specified in the Traffic Crash Report, SR1050, of the Illinois Department of Transportation. The crash data published on the Chicago data portal mostly follows the data elements in SR1050 form. The current version of the SR1050 instructions manual with detailed information on each data elements is available [here](https://idot.illinois.gov/Assets/uploads/files/Transportation-System/Manuals-Guides-&-Handbooks/Safety/Illinois%20Traffic%20Crash%20Report%20SR%201050%20Instruction%20Manual%202019.pdf).

As per Illinois statute, only crashes with a property damage value of $1,500 or more or involving bodily injury to any person(s) and that happen on a public roadway and that involve at least one moving vehicle, except bike dooring, are considered reportable crashes. However, CPD records every reported traffic crash event, regardless of the statute of limitations, and hence any formal Chicago crash dataset released by Illinois Department of Transportation may not include all the crashes listed here.

Only crashes with a property damage value of $1,500 or more or involving bodily injury to any person(s) and that happen on a public roadway and that involve at least one moving vehicle, except bike dooring, are considered reportable crashes. However, CPD records every reported traffic crash event, regardless of the statute of limitations, and hence any formal Chicago crash dataset released by Illinois Department of Transportation may not include all the crashes listed in Traffic Crashes dataset.

### Traffic Crashes Data

You can download Chicago Traffic Crashes data in `CSV` format from the **Export** menu on the [crashes web page](https://data.cityofchicago.org/Transportation/Traffic-Crashes-Crashes/85ca-t3if):

![Chicago Traffic Crashes Data Download](https://github.com/RandomFractals/chicago-transport/blob/main/docs/images/chicago-traffic-crashes-data-export.png?raw=true
 ""Chicago Traffic Crashes Data Download"")

**Note**: as of 2023-01-31 Chicago Traffic Crashes dataset `CSV` is about 362 MB and contains over 691K traffic crash reports with 49 columns describing crash details, road and weather conditions, injuries and damages.

### View Crash Reports

This data and SQL scripts repository was created to demonstrate our new [DuckDB Sql Tools](https://marketplace.visualstudio.com/items?itemName=RandomFractalsInc.duckdb-sql-tools) VSCode IDE extension and other basic data tools available to developers, data analysts, and data scientists in [Visual Studio Code](https://code.visualstudio.com/) for exploratory data analysis (EDA).

In order to use Traffic Crashes data, [DuckDB](https://duckdb.org/), SQL scripts and our DuckDB Sql Tools Code extension to experiment with this data and tools, [clone](https://docs.github.com/en/repositories/creating-and-managing-repositories/cloning-a-repository) this `chicago-transport` repository first:

```
$ git clone https://github.com/RandomFractals/chicago-transport
```

This transport demo repository contains [`/data`](https://github.com/RandomFractals/chicago-transport/tree/main/data) folder with SQL scripts to create Traffic Crashes DuckDB in-memory instance, export traffic crashes database in `.parquet` format, and a simple `select` SQL query to view the [last 10K crash reports](https://github.com/RandomFractals/chicago-transport/blob/main/data/last-10k-crash-reports.sql) with most of the data columns from the Chicago Traffic Crashes dataset to get you started:

![Chicago Transport Data Folder](https://github.com/RandomFractals/chicago-transport/blob/main/docs/images/chicago-transport-data-folder.png?raw=true
 ""Chicago Transport Data Folder"")

**Note:** due to the `100 MB` github file size limit, please download raw Chicago Traffic Crashes `CSV` data following [download link and instructions above](https://github.com/RandomFractals/chicago-transport#traffic-crashes-data).

After `CSV` data download, copy it over to your local `chicago-transport` project `/data` folder and rename it to `traffic-crashes.csv`.

Install [Visual Studio Code](https://code.visualstudio.com/) IDE, [Node.js](https://nodejs.org/en/) runtime, and [DuckDB Sql Tools](https://marketplace.visualstudio.com/items?itemName=RandomFractalsInc.duckdb-sql-tools) extension to load and view Chicago Traffic Crashes data with [DuckDB](https://duckdb.org/docs/guides/index).

Demonstration of loading `362 MB` of all recorded Chicago Traffic Crash reports from saved `data/traffic-crashes.csv` into DuckDB and querying it with DuckDB Sql Tools extension:

![Chicago Traffic Crashes DuckDB SQL Tools Demo](https://github.com/RandomFractals/chicago-transport/blob/main/docs/images/chicago-traffic-crashes-duckdb.gif?raw=true
 ""Chicago Traffic Crashes DuckDB SQL Tools Demo"")

**Note:** to run [`create-traffic-crashes-duckdb-table.sql`](https://github.com/RandomFractals/chicago-transport/blob/main/data/create-traffic-crashes-duckdb-table.sql) with DuckDB SQL Tools change `traffic-crashes.csv` data file path in `CREATE TABLE` SQL statement to absolute path pointing to your local copy of `chicago-transport` repository and data folder.

# Prior Works

You can also explore our [Observable](https://github.com/RandomFractals/Chicago-transportation-notebooks/tree/main/notebooks/observable) and [Quarto](https://github.com/RandomFractals/Chicago-transportation-notebooks/tree/main/notebooks/quarto) [Chicago Transportation Notebooks](https://github.com/RandomFractals/Chicago-transportation-notebooks) 📚 collection created in 2022 on [github](https://github.com/RandomFractals/Chicago-transportation-notebooks) or on [Observable](https://observablehq.com/collection/@randomfractals/transportation) site.

![Chicago Transportation Notebooks 📚 Collection](https://github.com/RandomFractals/Chicago-transportation-notebooks/blob/main/docs/images/chicago-transportation-notebooks-collection.png?raw=true
 ""Chicago Transportation Notebooks 📚 Collection"")
",1,1,1,1,transportation,"[chicago, data, data-tools, duckdb, sql, transportation]",00000
294,genetic-algorithms-for-transportation-problem,nphausg,N/A,N/A,https://api.github.com/repos/nphausg/genetic-algorithms-for-transportation-problem,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C156:6AF3:28A6291:5350431:652242E7.'}",N/A,N/A,N/A,N/A,transportation,"[N, /, A]",00000
295,Jinan-Land-Use-and-Transportation-Database,Xin-Zheng,N/A,N/A,https://api.github.com/repos/Xin-Zheng/Jinan-Land-Use-and-Transportation-Database,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C170:7DF2:26B76DA:4F69FF7:652242E8.'}",N/A,N/A,N/A,N/A,transportation,"[N, /, A]",00000
296,streamsx.transportation,IBMStreams,N/A,N/A,https://api.github.com/repos/IBMStreams/streamsx.transportation,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C125:6EFD:254A887:4CAD6FB:652242E8.'}",N/A,N/A,N/A,N/A,transportation,"[N, /, A]",00000
297,TrafficSignal,danielgleonard,N/A,N/A,https://api.github.com/repos/danielgleonard/TrafficSignal,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C1F6:2B71:2768C2F:50DD83E:652242E9.'}",N/A,N/A,N/A,N/A,transportation,"[N, /, A]",00000
298,transpo-game-night,open-austin,N/A,N/A,https://api.github.com/repos/open-austin/transpo-game-night,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C1D8:2B20:25C40AF:4DA6665:652242E9.'}",N/A,N/A,N/A,N/A,transportation,"[N, /, A]",00000
299,TicketCreator,n256Coding,N/A,N/A,https://api.github.com/repos/n256Coding/TicketCreator,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C1C3:2299:255C782:4CC5FF7:652242EA.'}",N/A,N/A,N/A,N/A,transportation,"[N, /, A]",00000
300,chicago-transport,RandomFractals,N/A,https://github.com/RandomFractals/chicago-transport,https://api.github.com/repos/RandomFractals/chicago-transport,Exploratory data analysis of public Chicago transportation datasets.,"# Chicago Transportation EDA

Exploratory data analysis of public [Chicago transportation datasets](https://data.cityofchicago.org/browse?category=Transportation) from [Chicago Data Portal](https://data.cityofchicago.org/).

## Traffic Crashes

Chicago Data Portal provides traffic crash report information from all police districts starting from September 2017 to present, with data updated daily. [Traffic Crashes](https://data.cityofchicago.org/Transportation/Traffic-Crashes-Crashes/85ca-t3if) data from electronic crash reporting system (E-Crash) are available for some police districts in 2015, but citywide data are not available until September 2017.

![Chicago Traffic Crashes 2015 to Present Data Info ...](https://github.com/RandomFractals/chicago-transport/blob/main/docs/images/chicago-traffic-crashes-dataset.png?raw=true
 ""Chicago Traffic Crashes 2015 to Present Data Info ..."")

Crash data shows information about each traffic crash on city streets within the City of Chicago limits and under the jurisdiction of Chicago Police Department (CPD). About half of all crash reports, mostly minor crashes, are self-reported at the police district by the driver(s) involved and the other half are recorded at the scene by the police officer responding to the crash.

Many of the crash parameters, including street condition data, weather condition, and posted speed limits, are recorded by the reporting officer based on best available information at the time, but may disagree with posted information or other assessments on road conditions. A traffic crash within the city limits for which CPD is not the responding police agency, typically crashes on interstate highways, freeway ramps, and on local roads along the City boundary, are excluded from this dataset.

All crashes are recorded as per the format specified in the Traffic Crash Report, SR1050, of the Illinois Department of Transportation. The crash data published on the Chicago data portal mostly follows the data elements in SR1050 form. The current version of the SR1050 instructions manual with detailed information on each data elements is available [here](https://idot.illinois.gov/Assets/uploads/files/Transportation-System/Manuals-Guides-&-Handbooks/Safety/Illinois%20Traffic%20Crash%20Report%20SR%201050%20Instruction%20Manual%202019.pdf).

As per Illinois statute, only crashes with a property damage value of $1,500 or more or involving bodily injury to any person(s) and that happen on a public roadway and that involve at least one moving vehicle, except bike dooring, are considered reportable crashes. However, CPD records every reported traffic crash event, regardless of the statute of limitations, and hence any formal Chicago crash dataset released by Illinois Department of Transportation may not include all the crashes listed here.

Only crashes with a property damage value of $1,500 or more or involving bodily injury to any person(s) and that happen on a public roadway and that involve at least one moving vehicle, except bike dooring, are considered reportable crashes. However, CPD records every reported traffic crash event, regardless of the statute of limitations, and hence any formal Chicago crash dataset released by Illinois Department of Transportation may not include all the crashes listed in Traffic Crashes dataset.

### Traffic Crashes Data

You can download Chicago Traffic Crashes data in `CSV` format from the **Export** menu on the [crashes web page](https://data.cityofchicago.org/Transportation/Traffic-Crashes-Crashes/85ca-t3if):

![Chicago Traffic Crashes Data Download](https://github.com/RandomFractals/chicago-transport/blob/main/docs/images/chicago-traffic-crashes-data-export.png?raw=true
 ""Chicago Traffic Crashes Data Download"")

**Note**: as of 2023-01-31 Chicago Traffic Crashes dataset `CSV` is about 362 MB and contains over 691K traffic crash reports with 49 columns describing crash details, road and weather conditions, injuries and damages.

### View Crash Reports

This data and SQL scripts repository was created to demonstrate our new [DuckDB Sql Tools](https://marketplace.visualstudio.com/items?itemName=RandomFractalsInc.duckdb-sql-tools) VSCode IDE extension and other basic data tools available to developers, data analysts, and data scientists in [Visual Studio Code](https://code.visualstudio.com/) for exploratory data analysis (EDA).

In order to use Traffic Crashes data, [DuckDB](https://duckdb.org/), SQL scripts and our DuckDB Sql Tools Code extension to experiment with this data and tools, [clone](https://docs.github.com/en/repositories/creating-and-managing-repositories/cloning-a-repository) this `chicago-transport` repository first:

```
$ git clone https://github.com/RandomFractals/chicago-transport
```

This transport demo repository contains [`/data`](https://github.com/RandomFractals/chicago-transport/tree/main/data) folder with SQL scripts to create Traffic Crashes DuckDB in-memory instance, export traffic crashes database in `.parquet` format, and a simple `select` SQL query to view the [last 10K crash reports](https://github.com/RandomFractals/chicago-transport/blob/main/data/last-10k-crash-reports.sql) with most of the data columns from the Chicago Traffic Crashes dataset to get you started:

![Chicago Transport Data Folder](https://github.com/RandomFractals/chicago-transport/blob/main/docs/images/chicago-transport-data-folder.png?raw=true
 ""Chicago Transport Data Folder"")

**Note:** due to the `100 MB` github file size limit, please download raw Chicago Traffic Crashes `CSV` data following [download link and instructions above](https://github.com/RandomFractals/chicago-transport#traffic-crashes-data).

After `CSV` data download, copy it over to your local `chicago-transport` project `/data` folder and rename it to `traffic-crashes.csv`.

Install [Visual Studio Code](https://code.visualstudio.com/) IDE, [Node.js](https://nodejs.org/en/) runtime, and [DuckDB Sql Tools](https://marketplace.visualstudio.com/items?itemName=RandomFractalsInc.duckdb-sql-tools) extension to load and view Chicago Traffic Crashes data with [DuckDB](https://duckdb.org/docs/guides/index).

Demonstration of loading `362 MB` of all recorded Chicago Traffic Crash reports from saved `data/traffic-crashes.csv` into DuckDB and querying it with DuckDB Sql Tools extension:

![Chicago Traffic Crashes DuckDB SQL Tools Demo](https://github.com/RandomFractals/chicago-transport/blob/main/docs/images/chicago-traffic-crashes-duckdb.gif?raw=true
 ""Chicago Traffic Crashes DuckDB SQL Tools Demo"")

**Note:** to run [`create-traffic-crashes-duckdb-table.sql`](https://github.com/RandomFractals/chicago-transport/blob/main/data/create-traffic-crashes-duckdb-table.sql) with DuckDB SQL Tools change `traffic-crashes.csv` data file path in `CREATE TABLE` SQL statement to absolute path pointing to your local copy of `chicago-transport` repository and data folder.

# Prior Works

You can also explore our [Observable](https://github.com/RandomFractals/Chicago-transportation-notebooks/tree/main/notebooks/observable) and [Quarto](https://github.com/RandomFractals/Chicago-transportation-notebooks/tree/main/notebooks/quarto) [Chicago Transportation Notebooks](https://github.com/RandomFractals/Chicago-transportation-notebooks) 📚 collection created in 2022 on [github](https://github.com/RandomFractals/Chicago-transportation-notebooks) or on [Observable](https://observablehq.com/collection/@randomfractals/transportation) site.

![Chicago Transportation Notebooks 📚 Collection](https://github.com/RandomFractals/Chicago-transportation-notebooks/blob/main/docs/images/chicago-transportation-notebooks-collection.png?raw=true
 ""Chicago Transportation Notebooks 📚 Collection"")
",1,1,1,1,transportation,"[chicago, data, data-tools, duckdb, sql, transportation]",00000
301,genetic-algorithms-for-transportation-problem,nphausg,N/A,N/A,https://api.github.com/repos/nphausg/genetic-algorithms-for-transportation-problem,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C156:6AF3:28A6291:5350431:652242E7.'}",N/A,N/A,N/A,N/A,transportation,"[N, /, A]",00000
302,Jinan-Land-Use-and-Transportation-Database,Xin-Zheng,N/A,N/A,https://api.github.com/repos/Xin-Zheng/Jinan-Land-Use-and-Transportation-Database,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C170:7DF2:26B76DA:4F69FF7:652242E8.'}",N/A,N/A,N/A,N/A,transportation,"[N, /, A]",00000
303,streamsx.transportation,IBMStreams,N/A,N/A,https://api.github.com/repos/IBMStreams/streamsx.transportation,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C125:6EFD:254A887:4CAD6FB:652242E8.'}",N/A,N/A,N/A,N/A,transportation,"[N, /, A]",00000
304,TrafficSignal,danielgleonard,N/A,N/A,https://api.github.com/repos/danielgleonard/TrafficSignal,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C1F6:2B71:2768C2F:50DD83E:652242E9.'}",N/A,N/A,N/A,N/A,transportation,"[N, /, A]",00000
305,transpo-game-night,open-austin,N/A,N/A,https://api.github.com/repos/open-austin/transpo-game-night,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C1D8:2B20:25C40AF:4DA6665:652242E9.'}",N/A,N/A,N/A,N/A,transportation,"[N, /, A]",00000
306,TicketCreator,n256Coding,N/A,N/A,https://api.github.com/repos/n256Coding/TicketCreator,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C1C3:2299:255C782:4CC5FF7:652242EA.'}",N/A,N/A,N/A,N/A,transportation,"[N, /, A]",00000
307,nhtsa-crss-eda,diego-williams,N/A,N/A,https://api.github.com/repos/diego-williams/nhtsa-crss-eda,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C1A3:57A8:2814C66:52309B9:652242E9.'}",N/A,N/A,N/A,N/A,transportation,"[N, /, A]",00000
308,js-mta,plondon,N/A,N/A,https://api.github.com/repos/plondon/js-mta,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C1E1:638B:277FC40:50FED50:652242E9.'}",N/A,N/A,N/A,N/A,transportation,"[N, /, A]",00000
309,sustainabilitydatasets,laurascherling,N/A,N/A,https://api.github.com/repos/laurascherling/sustainabilitydatasets,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C101:9CF4:280A020:5211EC1:652242EA.'}",N/A,N/A,N/A,N/A,transportation,"[N, /, A]",00000
310,MiamiTrolleyReactNativeExpo,qtrandev,N/A,N/A,https://api.github.com/repos/qtrandev/MiamiTrolleyReactNativeExpo,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C180:1B08:280C6C0:520D0F3:652242EB.'}",N/A,N/A,N/A,N/A,transportation,"[N, /, A]",00000
311,My-Fellowship.AI-Challenge,PierreMegret,N/A,N/A,https://api.github.com/repos/PierreMegret/My-Fellowship.AI-Challenge,N/A,"# My Fellowship.AI Challenge
## Airline On-Time Arrivals - Binary classification model
## Pierre Megret

### The Goal
To use the US Dept. of Transportation on-time arrival data for non-stop domestic flights by major air carriers to predict arrival
delays with a binary classification model.

### The data set
US Dept. of Transportation on-time arrival data for non-stop domestic flights by major air carriers.
The data set corresponds of the month of January 2016, so that I could test my model on all the year.
To predict whether a flight will be delayed or not, here's the features I chose from the USDoT: Day of Week, Unique Carrier,
Flight Number, Origin and Destination airport Id and cities Id, CRS departure and arrival times, ARR_DEL15 dummy, DIVERTED dummy,
Air time, and Distance.

### The Code
The code is organized as follow: an exploration of the data, a grid search cross-validation error to determine the best hyper-parameters
of my model, and the predictions. All in Jupyter Python Notebook.

#### Part 1. Exploration of the data

Looked at the features of the data as well as the existence of missing values, did some data cleaning.

#### Part 2. Building of the Model

Built a Random Forest Classifier after having tuned it with a grid search cross-validation.

#### Part 3. Predictions and model performances

Evaluated the model performances on different months, on different years. (February, and October 2016, January 2017)
",N/A,N/A,N/A,N/A,transportation,"[N, /, A]",00000
312,plane-identifier,aabizri,N/A,N/A,https://api.github.com/repos/aabizri/plane-identifier,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C1B3:7646:296B640:54DC781:652242EC.'}",N/A,N/A,N/A,N/A,transportation,"[N, /, A]",00000
313,smtuc,fredoliveira,N/A,N/A,https://api.github.com/repos/fredoliveira/smtuc,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C158:3D80:271B928:503E0CA:652242EC.'}",N/A,N/A,N/A,N/A,transportation,"[N, /, A]",00000
314,atd-data,cityofaustin,N/A,N/A,https://api.github.com/repos/cityofaustin/atd-data,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C1A9:6459:266BD62:4EF5B05:652242ED.'}",N/A,N/A,N/A,N/A,transportation,"[N, /, A]",00000
315,transam_highway,camsys,N/A,N/A,https://api.github.com/repos/camsys/transam_highway,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C1F6:2B71:276907E:50DE12B:652242ED.'}",N/A,N/A,N/A,N/A,transportation,"[N, /, A]",00000
316,LSD,praktianerJones,N/A,N/A,https://api.github.com/repos/praktianerJones/LSD,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C184:5119:2592E07:4D3C475:652242EE.'}",N/A,N/A,N/A,N/A,transportation,"[N, /, A]",00000
317,bvbus,badu,N/A,N/A,https://api.github.com/repos/badu/bvbus,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C10E:16F7:26B2E08:4F6A0F7:652242EE.'}",N/A,N/A,N/A,N/A,transportation,"[N, /, A]",00000
318,Interface_PTVVisum-LinTim,FOR2083,N/A,N/A,https://api.github.com/repos/FOR2083/Interface_PTVVisum-LinTim,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C126:7646:296B939:54DCDA5:652242EF.'}",N/A,N/A,N/A,N/A,transportation,"[N, /, A]",00000
319,SDRBuses,Salec,N/A,N/A,https://api.github.com/repos/Salec/SDRBuses,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C183:9CF4:280A5D3:5212A9C:652242F0.'}",N/A,N/A,N/A,N/A,transportation,"[N, /, A]",00000
320,woodpecker,PilotAutomotiveLabs,N/A,N/A,https://api.github.com/repos/PilotAutomotiveLabs/woodpecker,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C1CE:8A0D:282A652:5264083:652242F0.'}",N/A,N/A,N/A,N/A,transportation,"[N, /, A]",00000
321,social-transit-solver,adam-rumpf,N/A,N/A,https://api.github.com/repos/adam-rumpf/social-transit-solver,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C18A:75D0:26441E8:4EA161D:652242F1.'}",N/A,N/A,N/A,N/A,transportation,"[N, /, A]",00000
322,realtimeShuttleTracking,guinetn,N/A,N/A,https://api.github.com/repos/guinetn/realtimeShuttleTracking,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C15D:0A36:261216C:4E34DCE:652242F1.'}",N/A,N/A,N/A,N/A,transportation,"[N, /, A]",00000
323,rail_temperature_prediction_amledu,CheolJ,N/A,N/A,https://api.github.com/repos/CheolJ/rail_temperature_prediction_amledu,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C183:9CF4:280A85F:5212FE5:652242F2.'}",N/A,N/A,N/A,N/A,transportation,"[N, /, A]",00000
324,Bus-Sharp-Ionic,scottzach1,N/A,N/A,https://api.github.com/repos/scottzach1/Bus-Sharp-Ionic,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C156:6AF3:28A6DFF:5351BD7:652242F3.'}",N/A,N/A,N/A,N/A,transportation,"[N, /, A]",00000
325,efaapi-ios,LambdaDigamma,N/A,N/A,https://api.github.com/repos/LambdaDigamma/efaapi-ios,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C10A:7DF2:26B8096:4F6B467:652242F3.'}",N/A,N/A,N/A,N/A,transportation,"[N, /, A]",00000
326,BusPass,Villan-98,N/A,N/A,https://api.github.com/repos/Villan-98/BusPass,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C15D:0A36:2612395:4E35240:652242F4.'}",N/A,N/A,N/A,N/A,transportation,"[N, /, A]",00000
327,Autonomous_Vehicles_Simulator,lotlouischoitslab,N/A,N/A,https://api.github.com/repos/lotlouischoitslab/Autonomous_Vehicles_Simulator,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C102:39DF:278A12D:5111E3B:652242F4.'}",N/A,N/A,N/A,N/A,transportation,"[N, /, A]",00000
328,web-bus,theosotr,N/A,N/A,https://api.github.com/repos/theosotr/web-bus,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C11C:6459:266BFCD:4EF601D:652242F0.'}",N/A,N/A,N/A,N/A,transportation,"[N, /, A]",00000
329,cmubus,ponlawat-w,N/A,N/A,https://api.github.com/repos/ponlawat-w/cmubus,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C128:629D:45759DB:8CF172D:652242F0.'}",N/A,N/A,N/A,N/A,transportation,"[N, /, A]",00000
330,SDRBuses,Salec,N/A,N/A,https://api.github.com/repos/Salec/SDRBuses,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C183:9CF4:280A5D3:5212A9C:652242F0.'}",N/A,N/A,N/A,N/A,transportation,"[N, /, A]",00000
331,woodpecker,PilotAutomotiveLabs,N/A,N/A,https://api.github.com/repos/PilotAutomotiveLabs/woodpecker,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C1CE:8A0D:282A652:5264083:652242F0.'}",N/A,N/A,N/A,N/A,transportation,"[N, /, A]",00000
332,social-transit-solver,adam-rumpf,N/A,N/A,https://api.github.com/repos/adam-rumpf/social-transit-solver,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C18A:75D0:26441E8:4EA161D:652242F1.'}",N/A,N/A,N/A,N/A,transportation,"[N, /, A]",00000
333,realtimeShuttleTracking,guinetn,N/A,N/A,https://api.github.com/repos/guinetn/realtimeShuttleTracking,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C15D:0A36:261216C:4E34DCE:652242F1.'}",N/A,N/A,N/A,N/A,transportation,"[N, /, A]",00000
334,rail_temperature_prediction_amledu,CheolJ,N/A,N/A,https://api.github.com/repos/CheolJ/rail_temperature_prediction_amledu,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C183:9CF4:280A85F:5212FE5:652242F2.'}",N/A,N/A,N/A,N/A,transportation,"[N, /, A]",00000
335,Bus-Sharp-Ionic,scottzach1,N/A,N/A,https://api.github.com/repos/scottzach1/Bus-Sharp-Ionic,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C156:6AF3:28A6DFF:5351BD7:652242F3.'}",N/A,N/A,N/A,N/A,transportation,"[N, /, A]",00000
336,efaapi-ios,LambdaDigamma,N/A,N/A,https://api.github.com/repos/LambdaDigamma/efaapi-ios,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C10A:7DF2:26B8096:4F6B467:652242F3.'}",N/A,N/A,N/A,N/A,transportation,"[N, /, A]",00000
337,BusPass,Villan-98,N/A,N/A,https://api.github.com/repos/Villan-98/BusPass,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C15D:0A36:2612395:4E35240:652242F4.'}",N/A,N/A,N/A,N/A,transportation,"[N, /, A]",00000
338,Autonomous_Vehicles_Simulator,lotlouischoitslab,N/A,N/A,https://api.github.com/repos/lotlouischoitslab/Autonomous_Vehicles_Simulator,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C102:39DF:278A12D:5111E3B:652242F4.'}",N/A,N/A,N/A,N/A,transportation,"[N, /, A]",00000
339,transit,aabizri,N/A,N/A,https://api.github.com/repos/aabizri/transit,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C108:4AAE:277CBE1:510BC47:652242F5.'}",N/A,N/A,N/A,N/A,transportation,"[N, /, A]",00000
340,bicycle_accidents,nrfulton,N/A,N/A,https://api.github.com/repos/nrfulton/bicycle_accidents,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C10D:7E90:26CB94A:4F8C565:652242F5.'}",N/A,N/A,N/A,N/A,transportation,"[N, /, A]",00000
341,shouldichillorshouldigo,omnitrogen,N/A,N/A,https://api.github.com/repos/omnitrogen/shouldichillorshouldigo,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C10C:7D9C:2B55568:58A9637:652242F6.'}",N/A,N/A,N/A,N/A,transportation,"[N, /, A]",00000
342,transport_pricing,MattWillians,N/A,N/A,https://api.github.com/repos/MattWillians/transport_pricing,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C199:3996:262A96B:4E56302:652242F6.'}",N/A,N/A,N/A,N/A,transportation,"[N, /, A]",00000
343,Amtrak-Scheduling-Helper,lotlouischoitslab,N/A,N/A,https://api.github.com/repos/lotlouischoitslab/Amtrak-Scheduling-Helper,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C1A3:57A8:2815939:5232487:652242F7.'}",N/A,N/A,N/A,N/A,transportation,"[N, /, A]",00000
344,price_engine,toncarton,N/A,N/A,https://api.github.com/repos/toncarton/price_engine,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C1CA:9CF4:280AE16:5213BCD:652242F8.'}",N/A,N/A,N/A,N/A,transportation,"[N, /, A]",00000
345,Arc-Trajectories-For-R,alvincyh,N/A,N/A,https://api.github.com/repos/alvincyh/Arc-Trajectories-For-R,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C143:74C7:268DD86:4F2945A:652242F8.'}",N/A,N/A,N/A,N/A,transportation,"[N, /, A]",00000
346,viadf-app,kalinbas,N/A,N/A,https://api.github.com/repos/kalinbas/viadf-app,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C18E:3996:262AB3F:4E566D0:652242F9.'}",N/A,N/A,N/A,N/A,transportation,"[N, /, A]",00000
347,DataVizProject,stanislasleroy,N/A,N/A,https://api.github.com/repos/stanislasleroy/DataVizProject,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C15F:3D80:271C4D4:503F939:652242F9.'}",N/A,N/A,N/A,N/A,transportation,"[N, /, A]",00000
348,MMM-TransantiagoCL-Paraderos,roramirez,N/A,N/A,https://api.github.com/repos/roramirez/MMM-TransantiagoCL-Paraderos,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C159:7039:2784987:5112819:652242FA.'}",N/A,N/A,N/A,N/A,transportation,"[N, /, A]",00000
349,bus-station-alarm-clock-app,Ido-Dolev,N/A,N/A,https://api.github.com/repos/Ido-Dolev/bus-station-alarm-clock-app,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C19A:049C:270C5CA:5028F3D:652242FA.'}",N/A,N/A,N/A,N/A,transportation,"[N, /, A]",00000
350,Transit,SajjadArifGul,N/A,N/A,https://api.github.com/repos/SajjadArifGul/Transit,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C169:99FD:24F55F1:4C0C27C:652242FB.'}",N/A,N/A,N/A,N/A,transportation,"[N, /, A]",00000
351,ORF467FinalProject,davidzhou9,N/A,N/A,https://api.github.com/repos/davidzhou9/ORF467FinalProject,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C1D2:12FA:5E73E2:C291F7:652242FC.'}",N/A,N/A,N/A,N/A,transportation,"[N, /, A]",00000
352,Cab-Sharing-system,yash8005,N/A,N/A,https://api.github.com/repos/yash8005/Cab-Sharing-system,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C1CE:8A0D:282B0AC:526563E:652242FC.'}",N/A,N/A,N/A,N/A,transportation,"[N, /, A]",00000
353,City_Truck_Transportation,SelcuukYilmazz,N/A,N/A,https://api.github.com/repos/SelcuukYilmazz/City_Truck_Transportation,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C1BD:2299:255D7E3:4CC821B:652242FD.'}",N/A,N/A,N/A,N/A,transportation,"[N, /, A]",00000
354,lookup,NNikiforuk,N/A,N/A,https://api.github.com/repos/NNikiforuk/lookup,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C1CB:2299:255D850:4CC8325:652242FD.'}",N/A,N/A,N/A,N/A,transportation,"[N, /, A]",00000
355,airport-transfer-companies,canburaks,N/A,N/A,https://api.github.com/repos/canburaks/airport-transfer-companies,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C13D:1D92:25E942D:4DD9F5E:652242FE.'}",N/A,N/A,N/A,N/A,transportation,"[N, /, A]",00000
356,home-traffic-board,icyJoseph,N/A,N/A,https://api.github.com/repos/icyJoseph/home-traffic-board,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C142:3996:262AFB8:4E57027:652242FE.'}",N/A,N/A,N/A,N/A,transportation,"[N, /, A]",00000
357,oebb-cli,chrboe,N/A,N/A,https://api.github.com/repos/chrboe/oebb-cli,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C149:04F2:272B925:505CD30:652242FF.'}",N/A,N/A,N/A,N/A,transportation,"[N, /, A]",00000
358,CSG-public,NREL,N/A,N/A,https://api.github.com/repos/NREL/CSG-public,N/A,"{'message': 'Not Found', 'documentation_url': 'https://docs.github.com/rest/repos/contents#get-repository-content'}",N/A,N/A,N/A,N/A,transportation,"[N, /, A]",00000
359,QbeeBot,harshaga998,N/A,https://github.com/harshaga998/QbeeBot,https://api.github.com/repos/harshaga998/QbeeBot,"This bot is specifically made to resolve the most common issues and queries of a 1st year undergraduate from GLA University, Mathura. Bot can answer to the queries related to the four sections mentioned below:  1. Academics  2. Administration 3. Hostel  4. Transportation.","# QbeeBot
This bot is specifically made to resolve the common issues and queries of a first year students at GLA University, Mathura. Bot can answer to the queries related to the four sections mentioned below:
1. Academics  
2. Administration 
3. Hostel  
4. Transportation.


# Contributors:
1. Harsh Agarwal
2. Jagrit Varshney
3. Ishan Kulshestha
4. Devanshu Jindal

",1,1,0,0,transportation,"[academics, administration, hostel, transportation]",00000
360,lima-atu-covid19-paraderos,jmcastagnetto,N/A,https://github.com/jmcastagnetto/lima-atu-covid19-paraderos,https://api.github.com/repos/jmcastagnetto/lima-atu-covid19-paraderos,"Datos extraídos del mapa de ATU (Lima, Perú) de riesgo COVID19 en paraderos","Datos extraídos del mapa de ATU (Lima, Perú) en https://sistemas.atu.gob.pe/paraderosCOVID",1,1,3,0,transportation,"[bus, covid19, lima, opendata, paraderos, peru, risk, transportation]",00000
361,cargo-ship-noncompliance-assessment,gerritjandebruin,N/A,https://github.com/gerritjandebruin/cargo-ship-noncompliance-assessment,https://api.github.com/repos/gerritjandebruin/cargo-ship-noncompliance-assessment,Code associated to our manuscript titled `Fair automated assessment of noncompliance in cargo ship networks',"Fair automated assessment of noncompliance in cargo ship networks
=================================================================

First run `./run.py` to apply the entire pipeline (cleaning and processing data, network construction, feature engineering, and learning the models).
See the notebooks for all analysis.
All images are stored in `.\fig`.
The yaml-file `environment.yml` contains the environment used in the research.

Unfortunately, we cannot make the data public (yet).
The data can be acquired upon request and by permission of the Human Environment and Transport Inspectorate.
Please e-mail me at g.j.de.bruin@liacs.leidenuniv.nl.
",1,1,1,0,transportation,"[cargo-ship, classification, data-science, fair-machine-learning, infrastructure, inspections, network-analysis, risk-assessment, transportation]",00000
362,mta-ridership,LeeProut,N/A,https://github.com/LeeProut/mta-ridership,https://api.github.com/repos/LeeProut/mta-ridership,"Analysis of MTA ridership data from March 1, 2020 to March 1, 2021 for subway, bus, and vehicular traffic, using Python.","# MTA Transit Riders Flee the System While Cars Pack the Roads

#### January 2022 Storytelling with Data Challenge: [Visualizing Cycles](https://community.storytellingwithdata.com/challenges/jan-2022-visualizing-cycles)

My weekday commute to my office in Manhattan used to be a regular cycle. But in mid-March 2020, I went from riding the subway five days a week to going months without riding it at all. I knew that subway ridership has failed to return to pre-pandemic norms, but I was curious about how subways, buses, and car traffic compared in the first year of the pandemic in NYC. I knew the drop-off in mid-March would be visually apparent, but I wasn't sure how things unfolded from there.

I wanted this to be a zoomed-out view, with the datapoints for the entire year giving a shape that could be compared among the three modes of transport. I decided to label only a few notable points on each chart, some highs and lows. I added a few headlines from the New York Times to emphasize story.

Since a radial chart would be new for me in any tool, I challenged myself to create visuals in Python. I found a [tutorial by Yan Holtz](https://python-graph-gallery.com/circular-barplot-basic) for creating a circular barplot in Matplotlib. You can view my jupyter [notebook](https://github.com/LeeProut/mta-ridership/blob/main/MTA_ridership_01-03-22.ipynb), with data exploration. 

I used the circular barplots to compare each mode of transport in a PowerPoint slide with annotations for my challenge submission. 

![MTA slide](/Images/MTA_slide.png)",1,1,1,0,transportation,"[jupyter-notebook, mta, powerpoint, python, transportation]",00000
363,apergia-notifier,stavros-melidoniotis,N/A,https://github.com/stavros-melidoniotis/apergia-notifier,https://api.github.com/repos/stavros-melidoniotis/apergia-notifier,Receive Telegram notifications about upcoming transportation strikes in Greece.,"# 🚋 apergia-notifier
Receive Telegram notifications about upcoming transportation strikes in Greece.

# How to run

## Locally
1. Install packages with `npm install`
2. Run `npm run start`

## Docker
1. Run `docker compose -f docker/docker-compose.yml up -d` from the root of the project

TODOs:
- [ ] Add bot commands
",1,1,1,0,transportation,"[docker, greece, nodejs, strike, telegram, transportation]",00000
364,escooter-radar-backend,Scooter-Radar,Scooter-Radar,https://github.com/Scooter-Radar/escooter-radar-backend,https://api.github.com/repos/Scooter-Radar/escooter-radar-backend,Escooter Radar backend Api powered by Kotlin Spring Boot,"# Introduction

### Scooter-Radar 
Scooter Radar is a software application suite that allows you to track available scooters from various electric scooter sharing companies in your area.

### escooter-radar-backend
Escooter Radar Backend is the backend of Scooter Radar

# Description

### Electric Scooter
Electric scooters (e-scooter) are defined as motorized bicycles propelled by human power or by a combination of human power and an electric motor. Electric scooters are easy to ride and let you breeze up and down hills without even breaking a drop of sweat.

Recently, electric kick scooters (e-scooters) have grown in popularity with the introduction of scooter-sharing systems that use apps allowing users to rent the scooters by the minute.

### Scooter-Sharing System
A scooter-sharing system is a shared transport service in which electric motorized scooters (also referred to as e-scooters) are made available to use for short-term rentals. E-scooters are typically ""dockless"", meaning that they do not have a fixed home location and are dropped off and picked up from certain locations in the service area.

Scooter-sharing systems work towards providing the public with a fast and convenient mode of transport for last-mile mobility in urban areas. Due to the growing popularity of scooter-sharing, municipal governments have enforced regulations on e-scooters to increase rider and pedestrian safety while avoiding the accrual of visual pollution. Scooter-sharing systems are one of the least expensive and most popular micromobility options.

# API Manual

## API Base Url 
http://escooter-radar-backend-env.eba-gkj72vkn.eu-west-3.elasticbeanstalk.com/

## API Routes
- api/scooter/provider?company={company}
> **company** being the name of the company that you want to get the scooters from.

- api/scooter/location/zone?city={city}
> **city** being the name of the area or city where you want to get the scooters.


- api/scooter/location/within?latitude={lat}&longitude={lon}&degree={degree}
> **lat** being the latitude of where you want the scooters to be near.  
> **lon** being the longitude of where you want the scooters to be near.  
> **degree** being the degree in which you want the scooters to be.  

- api/scooter/location/near?latitude={lat}&longitude={lon}&limit={nbOfScooters}
> **lat** being the latitude of where you want the scooters to be near.  
> **lon** being the longitude of where you want the scooters to be near.  
> **nbOfScooters** being the number of scooters near the location you want to get.  

## Endpoints Examples
**Getting all Pony e-scooters :**
> http://escooter-radar-backend-env.eba-gkj72vkn.eu-west-3.elasticbeanstalk.com/api/scooter/provider?company=Pony  

**Getting the e-scooters in Brussels :**
> http://escooter-radar-backend-env.eba-gkj72vkn.eu-west-3.elasticbeanstalk.com/api/scooter/location/zone?city=brussels  

**Getting all the e-scooters within a distance of 5,55 km of a given location :**  
> http://escooter-radar-backend-env.eba-gkj72vkn.eu-west-3.elasticbeanstalk.com/api/scooter/location/within?latitude=50.85045&longitude=4.34878&degree=0.05  

**Getting the 100 nearest e-scooters to a given location :**  
> http://escooter-radar-backend-env.eba-gkj72vkn.eu-west-3.elasticbeanstalk.com/api/scooter/location/near?latitude=50.85045&longitude=4.34878&limit=100

## Converting distance from kilometer to degree

|  Degrees  |Kilometers|
|-----------|---------|
| 1° 	      | 111 km	|
| 0.1°  	  | 11.1 km	|
| 0.01°  	  | 1.11 km	|
| 0.001°  	| 111 m	  |
| 0.0001°  	| 11.1 m	|
| 0.00001°  | 1.11 m	|
| 0.000001° | 0.11 m	|

## JSON Scheme of an e-scooter

{  
  ""bike_id"":""cdd2f513-216c-4014-b73e-f2882f08658f"",  
  ""company"":""Lime"",  
  ""city"":""brussels"",  
  ""location"":{""type"":""Point"",""coordinates"":[4.391533,50.894786]},  
  ""is_disabled"":false,  
  ""is_reserved"":false,  
  ""last_reported"":1651661817,  
  ""current_range_meters"":8571.0  
}

# Test it yourself

## Installation
Without a ssh key:
```
$ git clone https://github.com/Scooter-Radar/escooter-radar-backend.git
```

With a ssh key:
```
$ git clone git@github.com:Scooter-Radar/escooter-radar-backend.git
```

Launch docker compose:  
You need docker installed and added to your PATH environment variables.
If its not, download docker <a href=""https://docs.docker.com/get-docker/"">here</a>
```
$ docker-compose up -d
```

## Execution
You need gradle installed and added to your PATH environment variables.
If its not, download gradle <a href=""https://gradle.org/install/"">here</a>

In the project directory, you can run:
```
$ gradle bootrun
```

## Usage
After running the command above go to one of the following endpoints

**To get the e-scooters from a certain escooter sharing company:**  
https://localhost:8980/api/scooter/provider?company={company}

**To get the e-scooters located in a particular city:**  
https://localhost:8980/api/scooter/location/zone?city={city}

**To get the e-scooters located around a certain location:**  
http://localhost:8980/api/scooter/location/within?latitude={lat}&longitude={lon}&degree={degree}

**To get the x nearest e-scooters a certain location:**  
http://localhost:8980/api/scooter/location/near?latitude={lat}&longitude={lon}&limit={nbOfScooters}

# Featured
  - **Lime**
  - **Pony**
  - **Bird**
  - **Spin**
  - maybe more in the future...
 
NB: I'm highly dependent on the data made available by the scooter suppliers, 
  so if the api doesn't show the scooters in your city, don't be harsh on me 😥
  
# Author
- **Ayoub Lahyaoui**
",1,1,1,2,transportation,"[api-rest, backend, backend-api, electric-scooter, escooter, gbfs, hibernate-spatial, kotlin, kotlin-spring-boot, mobility, mobility-as-a-service, mobility-data, mvc, postgis, scooter-sharing, shared-mobility, spring-boot, transport-api, transportation]",00000
365,GallyShuttle,tjyu1040,N/A,https://github.com/tjyu1040/GallyShuttle,https://api.github.com/repos/tjyu1040/GallyShuttle,Android project to show Gallaudet shuttles' schedules,"# GallyShuttle

This is an Android project to get schedules of Gallaudet University shuttles and to notify users of
arrival/departure times. Gallaudet students, feel free to fork and contribute to this project! View
the change log for this project [here] (CHANGELOG.md).

[![Google Play link](https://developer.android.com/images/brand/en_generic_rgb_wo_60.png)]
(https://play.google.com/store/apps/details?id=com.ephemeraldreams.gallyshuttle&referrer=utm_source%3Dgithub%26utm_medium%3Dcpc)

## Building

Fork, clone or download this project and import this project using [Android Studio] (http://developer.android.com/tools/studio/index.html).
Rebuild your project (via ""Build → Rebuild Project"") and you're ready to get developing. There are
still configurations to be modified for backend, mobile, and wear modules.

<!--
[![Build Status](https://travis-ci.org/tjyu1040/GallyShuttle.svg?branch=master)](https://travis-ci.org/tjyu1040/GallyShuttle)
-->

### Building backend module

The backend is built using Google App Engine. Follow the instructions provided in the following links:

1. [Debugging the backend locally] (https://github.com/GoogleCloudPlatform/gradle-appengine-templates/tree/master/GcmEndpoints#11-debugging-the-backend-locally)
2. [Obtaining Google Cloud Messaging API key] (https://github.com/GoogleCloudPlatform/gradle-appengine-templates/tree/master/GcmEndpoints#21-obtaining-google-cloud-messaging-api-key)
3. [Deploying the backend live to App Engine] (https://github.com/GoogleCloudPlatform/gradle-appengine-templates/tree/master/GcmEndpoints#25-deploying-the-backend-live-to-app-engine)

### Building mobile and wear modules

The mobile app uses Fabric for crash reporting, Google Analytics for analytics, and Google Cloud
Messaging for notifications, which will need to be configured.

#### Fabric Setup

1. Sign up at [fabric.io](https://get.fabric.io/).
2. Install Fabric IDE plugin.
3. Rename `mobile/fabric.properties.sample` to `mobile/fabric.properties`.
4. Fill in your API key and secret in `mobile/fabric.properties`.

#### Google Analytics, App Invites, & Google Cloud Messaging Setup

1. Go to this link: [Enable Google services for your app](https://developers.google.com/mobile/add?platform=android)
2. Create a new project for your own app.
3. Add ""Analytics"", ""App Invites"", & ""Cloud Messaging"" services and generate your configuration file.
4. Download `google-services.json` and move it to `mobile/` directory.

##### Integrating Google Analytics & Google Cloud Messaging

This section is still under construction, as Google Analytics and Google Cloud Messaging has not been 
fully integrated and tested yet.

## Contributing to This Project

You can contribute to this project by reporting bugs or suggesting new features [here] (https://github.com/tjyu1040/GallyShuttle/issues).

Alternatively, you can fork this project, fix the bug/add new feature, and submit a pull request for
me to review and approve it for release.

## Acknowledgements

This project currently makes use of the following open-source libraries:

- [Dagger 2] (http://google.github.io/dagger/) - Dependency injection framework library for Android and Java
- [Butterknife] (http://jakewharton.github.io/butterknife/) - View injection library for Android
- [OkHttp] (http://square.github.io/okhttp/) - Networking library for Android and Java
- [Retrofit] (http://square.github.io/retrofit/) - REST client for Android and Java
- [Otto] (http://square.github.io/otto/) - Event bus library for Android
- [DiskLruCache](https://github.com/JakeWharton/DiskLruCache) - Android-compatible disk-based LRU cache
- [Gson] (https://code.google.com/p/google-gson/) - Java library to convert Java Objects into JSON representations
- [joda-time-android] (https://github.com/dlew/joda-time-android) - Java date and time Android library
- [Timber] (https://github.com/JakeWharton/timber) - Utility logger for Android
- [LeakCanary](https://github.com/square/leakcanary) - Memory leak detection library for Android and Java

## License

    Copyright 2014 Timothy Yu

    Licensed under the Apache License, Version 2.0 (the ""License"");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an ""AS IS"" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.",1,1,0,0,transportation,"[android, gallaudet-university, java, transportation]",00000
366,faa-dof-gp,WSDOT-GIS,WSDOT-GIS,https://github.com/WSDOT-GIS/faa-dof-gp,https://api.github.com/repos/WSDOT-GIS/faa-dof-gp,ArcGIS Geoprocessing tools for importing FAA DOF data.,"faa-dof-gp
==========

Written by [Jeff Jacobson] for [Washington State Department of Transportation (WSDOT) GIS & Roadway Data Office].

## License ##

* `remotezip.py` is based on code [posted on StackOverflow] by [João Pinto]. This code is licensed under the [CC BY-SA 3.0 License].
* All other code is public domain ([Unlicense](http://unlicense.org)).


## Summary ##

This library provides the ability to read the [Federal Aviation Administration (FAA) Terrain and Obstacles Data (TOD) Team - Digital Obstacle File (DOF) files].

## Dependencies ##

* ArcGIS Desktop must be installed on computer.  (Having just ArcGIS Server instead of ArcGIS Desktop may also work, but has not been tested.)
* ArcView license level should be sufficient.

## Modules ##

### faadof.py ###
Provides utilities for importing FAA DOF data into a geodatabase.

### remotezip.py ###
Reads remote ZIP files using HTTP range requests.  This allows a file contained in a remote ZIP archive to be downloaded and extracted without the need to download the *entire* ZIP archive.
Code [posted on StackOverflow] by [João Pinto]. This code is licensed under the [CC BY-SA 3.0 License].

## Use ##

### Getting the Python scripts onto your computer ###
If you are reading these instructions on GitHub then the first thing you will need to do is copy the files to your computer.  You can download and extract [a zip archive] (or if you know how to use `git` you can use `git clone`).

### Running the script ###
Run `Scripts/faadof.py`.  This will download the obstacle data for Washington state from the FAA website and copy it into a file geodatabase.  You can provide an optional parameter to specify the path to the output file geodatabase.  If this parameter is omitted the output path will default to `../FaaObstruction.gdb`.

    faadof.py ""c:\example\FAADOF.gdb""

If you run the script again, the script will check the FAA website to see if there is any data newer than what is in the existing file geodatabase.  If updates are detected then the file geodatabase will be updated with the latest data.

### Using as a Python module ###
You can import `faadof.py` as a module in your own Python script if you need to use data other than that of WA.

```python
import sys, os, faadof

# Get the parameter for the output GDB.
if len(sys.argv) > 1:
	gdbPath = os.path.abspath(sys.argv[1])
else:
	gdbPath = os.path.abspath(""../FaaObstruction.gdb"")

currencyDate = None
if arcpy.Exists(gdbPath):
	# Get the currency date
	currencyDate = faadof.getCurrencyDate(gdbPath)
	
print ""Downloading DOFs...""
dofFilePaths = faadof.downloadDofs(datafiles=('56-WY.DAT'),lastCurrencyDate=currencyDate);

if dofFilePaths is not None:
	
	print ""Creating new geodatabase: %s..."" % gdbPath
	faadof.createDofGdb(gdbPath)
	
	print ""Importing data...""
	faadof.readDofsIntoGdb(gdbPath, dofFilePaths)

print ""Finished""
```

[Jeff Jacobson]: https://github.com/JeffJacobson
[Washington State Department of Transportation (WSDOT) GIS & Roadway Data Office]: http://www.wsdot.wa.gov/mapsdata/grdo_home.htm
[Federal Aviation Administration (FAA) Terrain and Obstacles Data (TOD) Team - Digital Obstacle File (DOF) files]: http://tod.faa.gov/tod/public/TOD_DOF.html
[posted on StackOverflow]: http://stackoverflow.com/a/7843535
[João Pinto]: http://stackoverflow.com/users/401041/joao-pinto
[a zip archive]: https://github.com/WSDOT-GIS/faa-dof-gp/zipball/master
[CC BY-SA 3.0 License]: http://creativecommons.org/licenses/by-sa/3.0/
",1,1,3,1,transportation,"[digital-obstacle-file, dof, faa, geoprocessing, python, transportation, washington-state]",00000
367,moovit-tools,yannick9906,N/A,https://github.com/yannick9906/moovit-tools,https://api.github.com/repos/yannick9906/moovit-tools,Helping myself and others to easier edit moovit,"{'message': 'Not Found', 'documentation_url': 'https://docs.github.com/rest/repos/contents#get-repository-content'}",1,1,2,0,transportation,"[moovit, toolset, transportation]",00000
368,gtfs_graph,cb-cities,cb-cities,https://github.com/cb-cities/gtfs_graph,https://api.github.com/repos/cb-cities/gtfs_graph,Compute a graph from GTFS,"{'message': 'Not Found', 'documentation_url': 'https://docs.github.com/rest/repos/contents#get-repository-content'}",1,1,3,0,transportation,"[gtfs, network, transportation]",00000
369,crashreporttims,mr-fuller,N/A,https://github.com/mr-fuller/crashreporttims,https://api.github.com/repos/mr-fuller/crashreporttims,Scripts to automate crash analysis and report generation,"# crashreporttims
Scripts to automate crash analysis and report generation at TMACOG. Note that it is important for jurisdictions to identify high-crash 
locations in order to take advantage of certain funding programs/sources.

Program combines data from Ohio DOT's TIMS and [Michigan Traffic Crash Facts](https://www.michigantrafficcrashfacts.org/), counts the number of crashes within 250 
feet of an intersection or along a road segment, then prepares charts and tables in Excel to show how crashes correlate with certain variables.

The program is currently designed as a script tool that runs through ArcGIS Pro. If setting that up, 

1. use main.py as the script 
2. Set up input parameters based on main.py:
    - GCATfile: text file of crash data
    - MTCFfile: text file of crash data
    - fatalwt: integer or float
    - seriouswt: integer or float
    - nonseriouswt: integer or float
    - possiblewt: integer or float
    - intersectionThreshold: integer or float
    - SegmentTheshold: integer or float
3. update directory to save files output by the program
4. Create buffered shapefiles/featureclasses/geopackages of the intersections and segments in your jurisdiction
5. Determine Equivalent Property Damage Only (EPDO) weights of more serious crashes
6. Decide on thresholds for intersections and segments (or just set the parameter to zero)
7. Run script
",1,1,2,0,transportation,"[arcpy, odot, odottims, pandas, python, transportation]",00000
370,One-for-All-Rentals,Marius998,N/A,https://github.com/Marius998/One-for-All-Rentals,https://api.github.com/repos/Marius998/One-for-All-Rentals,Demo,"
# One-For-All-Rentals

## Dokumentation

https://marius998.github.io/One-for-All-Rentals/

## Live Demo 

https://one-for-all-b8cd4.web.app


## Project setup
```
npm install in rental-webapp folder
```

### Compiles and hot-reloads for development
```
npm run serve
```

### Compiles and minifies for production
```
npm run build
```

### More Infos for configuration
See [Configuration Reference](https://cli.vuejs.org/config/).


© Carlos Bystron, Felix Günthner, Marius Hammer - 
_Projekt im Rahmen des Kurses Webdevelopment an der Technischen Hochschule Köln - 2019_
",1,1,2,12,transportation,"[javascript, opensource, student-project, transportation, vuejs]",00000
371,PipelineFoundations,SwimlaneBuilder,N/A,https://github.com/SwimlaneBuilder/PipelineFoundations,https://api.github.com/repos/SwimlaneBuilder/PipelineFoundations,"From Maslow-based physical, emotional, mental, aspirational wants to fulfillment needs, industry pipelines need good engineering and resiliency to protect and grow the innocent among us. Pipeline foundations is an A-Z solution for off the grid living, and collections of a vision of the past present and future.  A peaceful safe society, with passion mystery and adventure. This might turn into a short story. OR many stories.","# PipelineFoundations
From physical, emotional, mental, aspirational wants to fulfillment needs, industry pipelines need good engineering and resiliency to protect and grow the innocent among us. Pipeline foundations is an A-Z solution for off the grid living, and collections of a vision of the past present and future.  A peaceful safe society, with passion mystery and adventure. This might turn into a short story. OR many stories.
",1,1,1,0,transportation,"[camping, childrens-books, emotional-intelligence, employment, farming, holistic-health, income, job-insurance, mental-health, off-the-grid, retirement-planning, survival, transportation, ubi, uwi, zombies]",00000
372,jts,ITSLeeds,ITSLeeds,https://github.com/ITSLeeds/jts,https://api.github.com/repos/ITSLeeds/jts,Easy access to the DfT’s Journey Time Statistics,"
<!-- README.md is generated from README.Rmd. Please edit that file -->

# jts

<!-- badges: start -->

[![R-CMD-check](https://github.com/ITSLeeds/jts/workflows/R-CMD-check/badge.svg)](https://github.com/ITSLeeds/jts/actions)
<!-- badges: end -->

The goal of jts is to provide easy access to the DfT’s Journey Time
Statistics.

## Installation

<!-- You can install the released version of jts from [CRAN](https://CRAN.R-project.org) with: -->
<!-- ``` r -->
<!-- install.packages(""jts"") -->
<!-- ``` -->

Install the development version from [GitHub](https://github.com/) with:

``` r
# install.packages(""devtools"")
devtools::install_github(""ITSLeeds/jts"")
```
",1,1,3,5,transportation,"[accessibility, journey-time, statistics, transportation]",00000
373,junction-capacity-analyzer,geoyogesh,N/A,https://github.com/geoyogesh/junction-capacity-analyzer,https://api.github.com/repos/geoyogesh/junction-capacity-analyzer,Junction Capacity Analyzer,"# Junction Capacity Analyser

The Junction Capacity Analyser App is for transportation planers to assist with planning level operation analysis of junctions. This analysis is one component of a comprehensive intersection control evaluation (ICE) or alternatives analysis. As such, the results of the Junction Capacity Analyser App – overall v/c ratio and multimodal accommodations analysis – should not be the sole basis of choosing a given intersection or interchange form for implementation. It is not intended to be an intersection/interchange form selection tool.

This app is based on CAPX tool (Excel Tool) published by FHWA.

## Usage Disclaimer

This project is free to use for personal, non profit research and free open-source projects. kindly contact developer and maintainer Yogesh Dhanapal @ geoyogesh@gmail.com for commercial and enterprise use cases. 

## Hosted application

[http://jcapacityanalyzer.com.s3-website-us-east-1.amazonaws.com/](http://jcapacityanalyzer.com.s3-website-us-east-1.amazonaws.com/)

## Task List
- [x] develop basic application with one junction type
- [x] update the ui
- [x] deploy to public url and setup ci/cd pipeline
- [x] implement pan and zoom of junctions design using svg pan zoom library 
- [ ] include all junction types
- [ ] include dynamic junction drawing

## User Guide

1. Go to Input and input the blue boxes
![Inputt](readme-images/input.PNG)
1. review the results
![Inputt](readme-images/results.PNG)
1. Select a junction to review the design
![Inputt](readme-images/conventinal-junction-design.PNG)
1. Navigate to configuration section of the junction and update lane information in blue boxes
![Inputt](readme-images/conventinal-junction-configuration.PNG)


## Credits

Tool | Link
------------ | -------------
CAPX | [https://www.fhwa.dot.gov/software/research/operations/cap-x/](https://www.fhwa.dot.gov/software/research/operations/cap-x/)
Angular | [https://angular.io/](https://angular.io/)
Clarity Design System| [https://clarity.design/](https://clarity.design/)
Angular Flex Layout | [https://github.com/angular/flex-layout](https://github.com/angular/flex-layout)
ariutta/svg-pan-zoom | [https://github.com/ariutta/svg-pan-zoom](https://github.com/ariutta/svg-pan-zoom)
MathJs | [https://mathjs.org/](https://mathjs.org/)
rxjs | [https://rxjs-dev.firebaseapp.com/](https://rxjs-dev.firebaseapp.com/)
Typescript | [https://www.typescriptlang.org/](https://rxjs-dev.firebaseapp.com/)
@jefiozie/ngx-aws-deploy | [https://github.com/Jefiozie/ngx-aws-deploy#readme](https://github.com/Jefiozie/ngx-aws-deploy#readme)
Adobe Illustrator | [https://www.adobe.com/products/illustrator.html](https://www.adobe.com/products/illustrator.html)
",1,1,2,0,transportation,"[capacity-planning, capx, interchange, intersection, junction, roundabout, transportation, transportation-planning]",00000
374,PCU-calculator,dineth33,N/A,https://github.com/dineth33/PCU-calculator,https://api.github.com/repos/dineth33/PCU-calculator,This is a streamlit web application which can be used to calculate Passenger Car Unit (PCU) values for a selected road section. ,"# Passenger Car Unit (PCU) Calculator 

Passenger car unit (PCU) is an important attribute for traffic capacity analysis and other relevant applications such as level of service (LOS) measures, determination of saturation flow rate, signal design and coordination, and development of traffic flow models.

This is a streamlit web application [click here](https://share.streamlit.io/dineth33/pcu-calculator/main/app.py) which can be used to calculate Passenger Car Unit (PCU) values for a selected road section.This web application calculates the PCU values using Chandras method, which is a popular method to estimate PCU values for midblock road sections, For further details, please refer the following. 

1. *S. Chandra, V. Kumar, P.K. Sikdar Dynamic PCU and estimation of capacity of urban roads Indian Highw. Indian Road Congr., 23 (4) (1995), pp. 17-28*.
2. *Dhananjaya, D. D., Fernando, W. W. P. M.,Sivakumar, T. Passenger Car Units for Different Midblock Sections in Sri Lanka using Chandra’s Method. ENGINEER: Journal of the Institution of Engineers, Sri Lanka*

**If you use this application, please be kind enough to cite these papers in your work**
",1,1,1,0,transportation,"[calculator, passenger-car-unit, pcu, streamlit, traffic-, transportation, transportation-planning, webapplication]",00000
375,nyc_taxi_bigquery,lorarjohns,N/A,https://github.com/lorarjohns/nyc_taxi_bigquery,https://api.github.com/repos/lorarjohns/nyc_taxi_bigquery,Correlation 1 summit materials,"<h1 align=""center"">Welcome to Hot Tips for Cabbies: Using Big Data to Optimize NYC Taxi Gratuities  👋</h1>
<p>
  <a href=""#"" target=""_blank"">
    <img alt=""License: MIT"" src=""https://img.shields.io/badge/License-MIT-yellow.svg"" />
  </a>
  <a href=""https://twitter.com/lorarjohns"" target=""_blank"">
    <img alt=""Twitter: lorarjohns"" src=""https://img.shields.io/twitter/follow/lorarjohns.svg?style=social"" />
  </a>
</p>

> Using BigQuery's native Machine Learning tools and cloud database, can we discover the latent factors that lead to the greatest tips for working cab drivers in NYC?

## The Goal: Fit a model to predict the gratuities on a fare

Ride-sharing is taking over the country, and public transportation is declining. 
 
 The burden on the roads puts strain on city infrastructure, causes traffic problems for individual drivers, and widens the access gap for people in areas with poor public transportation.
 
What are the most valuable taxi rides? Where do they originate from? When do they occur? The answer to these questions could help us identify areas where public service can be improved.

## The Data: New York City Yellow Taxi Rides in 2018

```sql

```
We use the [Taxi and Limousine Commission Yellow Cab (TLC)](http://www.nyc.gov/html/tlc/html/about/trip_record_data.shtml) trip data from 2018. The TLC has released public taxi data from 2009 to present, available free to access on [Google BigQuery](https://console.cloud.google.com/marketplace/details/city-of-new-york/nyc-tlc-trips).

For 2018, the database contains 112,234,626 records of Yellow Cab rides. Records include pick-up and drop-off dates/times, locations, trip distances, itemized fares, rate types, payment types, and driver-reported passenger counts.

## The Model: Machine Learning in BigQuery

- Data analysis and visualization with BigQuery's analytic tools, pandas, and ggplot in R
- BigQuery's native machine learning tools to model tip volume and engineer features

![batch gradient descent](batch_gradient_descent.gif)

## Some findings

- Thursday had the highest correlation with tips. Saturday had the lowest.
- The feature most strongly correlated with tips was the engineered airport variable.
- Queens tips the best. Staten Island tips the worst.

![tips over the year](avg_tip.png)

## Author

👤 **Lora Johns**

* Twitter: [@lorarjohns](https://twitter.com/lorarjohns)
* Github: [@lorarjohns](https://github.com/lorarjohns)

## Show your support

Give a ⭐️ if this project helped you!

<a href=""https://www.patreon.com/lorarjohns"">
  <img src=""https://c5.patreon.com/external/logo/become_a_patron_button@2x.png"" width=""160"">
</a>

***
_This README was generated with ❤️ by [readme-md-generator](https://github.com/kefranabg/readme-md-generator)_",1,1,2,3,transportation,"[big-data, bigquery, database, google-api, google-cloud-platform, machine-learning, nyc, sql, transportation]",00000
376,pesuelogit,pabloguarda,N/A,https://github.com/pabloguarda/pesuelogit,https://api.github.com/repos/pabloguarda/pesuelogit,Parameter Estimation of LOGIT-based Stochastic User Equilibrium models using computational graphs and day-to-day system-level data,"{'message': 'Not Found', 'documentation_url': 'https://docs.github.com/rest/repos/contents#get-repository-content'}",1,1,1,0,transportation,"[computational-graphs, machine-learning, network-analysis, simulation-modeling, tensorflow, transportation]",00000
377,go-jcdecaux.ssb,aabizri,N/A,https://github.com/aabizri/go-jcdecaux.ssb,https://api.github.com/repos/aabizri/go-jcdecaux.ssb,Go library for the JcDecaux self-service bikes api,"jcdecauxssb
===========

Go library for the JcDecaux self-service bikes api

Install
-------

	go get github.com/nodvos/go-jcdecaux.ssb/jcdecauxssb/

Usage
-----

Create a new client this way:

	client := jcdecauxssb.New(APIKEY,nil)

With the client set, you can query the api this way:

	// Get the list of contracts:
	contracts := client.Contracts()
	// Get all the station of a specific contract (in this case Paris)
	parisStations := client.Stations(""Paris"")
	// Retrieve my specific station
	myStation := parisStations[42]
	// Update it
	myStation = client.StationData(""Paris"",myStation.Number)

The full JcDecaux API is documented at https://developer.jcdecaux.com/#/opendata/vls?page=dynamic.

Testing
-------

Simply run 'go test -key APIKEY'

(See the official go test doc for more information)
",1,1,2,0,transportation,"[api-client, bikes, jcdecaux, library, transportation]",00000
378,FCC_Use-Cases,vishelar,N/A,https://github.com/vishelar/FCC_Use-Cases,https://api.github.com/repos/vishelar/FCC_Use-Cases,FCC Use Cases Codes,"# FCC_Use-Cases
FCC Use Cases Codes
",1,1,5,0,transportation,"[citibike, data-analysis, linknyc, time-series, transportation, uber]",00000
379,metc.tbi.helper,Metropolitan-Council,Metropolitan-Council,https://github.com/Metropolitan-Council/metc.tbi.helper,https://api.github.com/repos/Metropolitan-Council/metc.tbi.helper,R code for working with Travel Behavior Inventory survey data.,"# Travel Behavior Inventory Survey Helper
This repository contains a collection of R code for working with Travel Behavior Inventory Household Survey data. 

_If you came for a pretty R Data object of the 2019 or 2021 TBI survey data, check out the_ `data` _folder or source from URL:_

```r
load(url(paste0(""https://github.com/Metropolitan-Council/metc.tbi.helper/raw/main/data/"",
                ""tbi21.rda"")))
                
load(url(paste0(""https://github.com/Metropolitan-Council/metc.tbi.helper/raw/main/data/"",
                ""tbi19.rda"")))
```

Other things you might find useful in here include R scripts to create complex cross-tabs that require funky joins, some scripts for appending auxiliary datasets & geographic information to the datasets, and more. 

This repository is in active development, and anyone can contribute 🤝. See the CONTRIBUTING page on the right to learn more. One day, this will be an R package.

## Organization: what's here

* `metadata`: Read the documentation 💘 
* `data`: compiled datasets generated from raw TBI data, that live in the Council's Oracle database.
  * `tbi19.rda` and `tbi21.rda` are compressed `list` objects for each survey containing:
      * `dictionary` of variable names, values, survey questions, and logic;
      * person-level records (`per`);
      * `day` records, for analyzing daily trends;
      * `trip` table;
      * household (`hh`) records;
      * vehicle (`veh`) records, including fuel efficiency data; and
      * `trip_purpose`, for working with trip purpose data. This table has been specially weighted to attribute weights to either end of non-home-based trips, and to the non-home based end of home-based trips.

**This is the only data we store in this GitHub repository.**  Git (even [Git LFS](https://git-lfs.github.com/)) is not ideal for storing data. If you generate additional datasets in your work, please add them to the .gitignore file. If you need to work with .csv data, please see the script `data-raw/99-survey-data-to-csv.R`, and add the .csv's to your `gitignore` file. If incorporating a new dataset, write it to the Oracle database first (see @ashleyasmus for write access).

* `data-raw`: scripts to generate datasets. Work here if you want to add a new variable to the dataset(s) or incorporate a new dataset to the database and/or .RData object. You may need access to internal databases for this work.
  * `data-raw/_data-compile.R` is the main script that sources all numbered .R scripts in this folder. 
  * `derive-var-[variable-name].R`: derive new variables from TBI datasets. 
  * `get-[dataset-name].R`: incorporate auxillary datasets (e.g., fuel efficiency data). If external to the Council, they are added to the Oracle database. Wherever possible, spatial datasets are loaded from the Council's internal GISLibrary.
* `R`: collection R code. At the moment, this is mostly crosstabs.
  * `xtab-[unit of measurement]-[variable1]-by-[variable2].R`: custom crosstabs.
  * `fun-[does-this].R`: functions or processes.
* Note that there are no folders for specific TBI-related projects/analyses. These should live in their own GitHub repositories, and source code from this repository.

## Using this code in other projects
One day, this repository might be an R package. For now, you can source data, metadata and R scripts in two ways.

(1) Clone this repository to your machine _(Preferred method)_
  This method is preferred, though it will require you to do periodic pulls from the `main` branch to your machine.

```r
source(
  paste0(
    ""directory/where/your/repository/lives/"",
    ""R/xtab-vehicle-stops.R""
  )
)
```

(2) Source files directly from GitHub.

Files that have ""raw"" output available directly on GitHub ([example](https://github.com/Metropolitan-Council/metc.tbi.helper/blob/main/R/xtab-vmt-per-vehicle.R)) can be sourced directly with base R:

```r
source(
  paste0(
    ""https://raw.githubusercontent.com/Metropolitan-Council/metc.tbi.helper/main/"", 
    ""R/xtab-vehicle-stops.R""
  )
)
```

## Creating a custom crosstab

We generally use the `tidyverse`-friendly package `srvyr` to create weighted summaries and crosstabs from the TBI data. A simple example, calculating average vehicle age by household income, follows:

```r
library(dplyr)
library(bit64) # for looking at big integers, like the person_ids

tbi_tables$veh %>%
  left_join(tbi_tables$hh) %>%
  as_survey_design(weights = ""hh_weight"", strata = ""sample_segment"") %>%
  group_by(income_detailed) %>%
  summarize(veh_age_avg = survey_mean(veh_age, na.rm = T))

```
",1,1,1,18,transportation,"[rstats, transportation, transportation-planning, travel-behavior]",00000
380,transroutownish-proto-bus-lfe,rgolubtsov,N/A,https://github.com/rgolubtsov/transroutownish-proto-bus-lfe,https://api.github.com/repos/rgolubtsov/transroutownish-proto-bus-lfe,"An LFE (Lisp Flavoured Erlang) application, designed and intended to be run as a microservice, implementing a simple urban bus routing prototype.","# Trans-RoutE-Townish (transroutownish) :small_orange_diamond: Urban bus routing microservice prototype (LFE/OTP port)

**An LFE (Lisp Flavoured Erlang) application, designed and intended to be run as a microservice,
<br />implementing a simple urban bus routing prototype**

**Rationale:** This project is a *direct* **[LFE](https://lfe.io ""Lisp-2+ dialect for the Erlang VM"")** port of the earlier developed **urban bus routing prototype**, written in Erlang/OTP using **[Cowboy](https://ninenines.eu ""Small, fast, modern HTTP server for Erlang/OTP"")** web server library, and tailored to be run as a microservice in a Docker container. The following description of the underlying architecture and logics has been taken **[from there](https://github.com/rgolubtsov/transroutownish-proto-bus-cowboy)** as is, without any modifications or adjustment.

Consider an IoT system that aimed at planning and forming a specific bus route for a hypothetical passenger. One crucial part of such system is a **module**, that is responsible for filtering bus routes between two arbitrary bus stops where a direct route is actually present and can be easily found. Imagine there is a fictional urban public transportation agency that provides a wide series of bus routes, which covered large city areas, such that they are consisting of many bus stop points in each route. Let's name this agency **Trans-RoutE-Townish Co., Ltd.** or in the Net representation &mdash; **transroutownish.com**, hence the name of the project.

A **module** that is developed here is dedicated to find out quickly, whether there is a direct route in a list of given bus routes between two specified bus stops. It should immediately report back to the IoT system with the result `true` if such a route is found, i.e. it exists in the bus routes list, or `false` otherwise, by outputting a simple JSON structure using the following format:

```
{
    ""from""   : <starting_bus_stop_point>,
    ""to""     : <ending_bus_stop_point>,
    ""direct"" : true
}
```

`<starting_bus_stop_point>` and `<ending_bus_stop_point>` above are bus stop IDs: unique positive integers, taken right from inputs.

A bus routes list is a plain text file where each route has its own unique ID (positive integer) and a sequence of its bus stop IDs. Each route occupies only one line in this file, so that they are all representing something similar to a list &mdash; the list of routes. The first number in a route is always its own ID. Other consequent numbers after it are simply IDs of bus stops in this route, up to the end of line. All IDs in each route are separated by whitespace, usually by single spaces or tabs, but not newline.

There are some constraints:
1. Routes are considered not to be a round trip journey, that is they are operated in the forward direction only.
2. All IDs (of routes and bus stops) must be represented by positive integer values, in the range `1 .. 2,147,483,647`.
3. Any bus stop ID may occure in the current route only once, but it might be presented in any other route too.

The list of routes is usually mentioned throughout the source code as a **routes data store**, and a sample routes data store can be found in the `data/` directory of this repo.

Since the microservice architecture for building independent backend modules of a composite system are very prevalent nowadays, this seems to be natural for creating a microservice, which is containerized and run as a daemon, serving a continuous flow of HTTP requests.

This microservice is intended to be built locally and to be run like a conventional daemon in the VM environment, as well as a containerized service, managed by Docker.

One may consider this project has to be suitable for a wide variety of applied areas and may use this prototype as: (1) a template for building a similar microservice, (2) for evolving it to make something more universal, or (3) to simply explore it and take out some snippets and techniques from it for *educational purposes*, etc.

---

## Table of Contents

* **[Building](#building)**
  * **[Creating a Docker image](#creating-a-docker-image)**
* **[Running](#running)**
  * **[Running a Docker image](#running-a-docker-image)**
  * **[Exploring a Docker image payload](#exploring-a-docker-image-payload)**
* **[Consuming](#consuming)**
  * **[Logging](#logging)**
  * **[Error handling](#error-handling)**

## Building

The microservice is known to be built and run successfully under **Ubuntu Server (Ubuntu 22.04.3 LTS x86-64)**. Install the necessary dependencies (`erlang-nox`, `erlang-dev`, `rebar3`, `make`, `docker.io`):

```
$ sudo apt-get update && \
  sudo apt-get install erlang-nox erlang-dev make docker.io -y
...
```

Rebar3 is preferred to install as the following:

```
$ curl -sO https://s3.amazonaws.com/rebar3/rebar3      && \
  chmod -v 700 rebar3 && ./rebar3 local install        && \
  export PATH=/home/<username>/.cache/rebar3/bin:$PATH && \
  rm -vf rebar3
...
```

The LFE (Lisp Flavoured Erlang) distribution can be downloaded and installed automatically as a dependency of the Rebar3 LFE plugin `rebar3_lfe`. For that to be done, it needs to simply launch the `$ rebar3` command without any arguments or options. The LFE distribution will be installed into the `./_build/default/plugins/lfe/` directory.

**Build** the microservice using **Rebar3** (and its LFE plugin):

```
$ rebar3         lfe clean;   \
  rebar3 as prod lfe clean
...
$ rebar3             compile; \
  rebar3 as prod     compile
...
$ rebar3         lfe release; \
  rebar3 as prod lfe release
...
```

Or **build** the microservice using **GNU Make** (optional, but for convenience &mdash; it covers the same **Rebar3** build workflow under the hood):

```
$ make clean
...
$ make      # <== Compilation phase.
...
$ make all  # <== Assembling releases of the microservice.
...
```

---

The following command given is for demonstrational purposes only &mdash; Rebar3 will always fetch necessary dependencies during a one of their building phases, even at the `clean`-ing phase:

```
$ rebar3 tree
===> Fetching rebar3_lfe v0.4.4
===> Fetching rebar_cmd v0.4.0
===> Fetching rebar3_hex v6.11.4
...
===> Fetching lfe v2.1.1
===> Fetching ltest v0.13.4
===> Fetching erlang_color v1.0.0
...
===> Verifying dependencies...
===> Fetching cowboy v2.10.0
===> Fetching jsx v3.1.0
===> Fetching syslog v1.1.0
===> Fetching pc v1.14.0
===> Analyzing applications...
...
└─ bus─0.3.2 (project app)
   ├─ cowboy─2.10.0 (hex package)
   │  ├─ cowlib─2.12.1 (hex package)
   │  └─ ranch─1.8.0 (hex package)
   ├─ jsx─3.1.0 (hex package)
   └─ syslog─1.1.0 (hex package)
```

### Creating a Docker image

**Build** a Docker image for the microservice:

```
$ # Pull the Erlang image first, if not already there:
$ sudo docker pull erlang:alpine
...
$ # Then build the microservice image:
$ sudo docker build -ttransroutownish/buslfe .
...
```

## Running

**Run** the microservice using its startup script along with the `foreground` command, that is meant ""*Start release with output to stdout*"":

```
$ ./_build/prod/rel/bus/bin/bus foreground; echo $?
...
```

The microservice then can be stopped, again by using its startup script along with the `stop` command, that is meant ""*Stop the running node*"". It should be issued in another terminal session, not the current one:

```
$ ./_build/prod/rel/bus/bin/bus stop; echo $?
0
```

To identify, which commands are available and what they mean, the startup script can be run without specifying a command or arguments:

```
$ ./_build/prod/rel/bus/bin/bus
Usage: bus [COMMAND] [ARGS]

Commands:

  foreground              Start release with output to stdout
  remote_console          Connect remote shell to running node
...
  stop                    Stop the running node
  restart                 Restart the applications but not the VM
...
  daemon                  Start release in the background with run_erl (named pipes)
...
  daemon_attach           Connect to node started as daemon with to_erl (named pipes)
...
```

Thus, to **run** the microservice as a daemon, in the background, the `daemon` command should be used instead:

```
$ ./_build/prod/rel/bus/bin/bus daemon; echo $?
0
```

The `daemon_attach` command then allows connecting to the microservice to make interactions with them. But the latter is not required at all regarding the true purpose of the microservice. And it can be stopped again with the `stop` command in the same terminal session.

### Running a Docker image

**Run** a Docker image of the microservice, deleting all stopped containers prior to that:

```
$ sudo docker rm `sudo docker ps -aq`; \
  export PORT=8765 && sudo docker run -dp${PORT}:${PORT} --name buslfe transroutownish/buslfe; echo $?
...
```

### Exploring a Docker image payload

The following is not necessary but might be considered interesting &mdash; to look up into the running container, and check out that the microservice's startup script, application BEAMs, log, and routes data store are at their expected places and in effect:

```
$ sudo docker ps -a
CONTAINER ID   IMAGE                    COMMAND                    CREATED             STATUS             PORTS                                       NAMES
<container_id> transroutownish/buslfe   ""bus/bin/bus foregro...""   About an hour ago   Up About an hour   0.0.0.0:8765->8765/tcp, :::8765->8765/tcp   buslfe
$
$ sudo docker exec -it buslfe sh; echo $?
/var/tmp #
/var/tmp # bus/erts-14.0.2/bin/erl -version
Erlang (SMP,ASYNC_THREADS) (BEAM) emulator version 14.0.2
/var/tmp #
/var/tmp # ls -al
total 20
drwxrwxrwt    1 root     root          4096 Aug 17 13:14 .
drwxr-xr-x    1 root     root          4096 Jan  9  2023 ..
drwxr-xr-x    1 root     root          4096 Aug 17 13:30 bus
/var/tmp #
/var/tmp # ls -al bus/
total 32
drwxr-xr-x    1 root     root          4096 Aug 17 13:30 .
drwxrwxrwt    1 root     root          4096 Aug 17 13:14 ..
drwxr-xr-x    2 root     root          4096 Aug 16 10:38 bin
drwxr-xr-x    3 root     root          4096 Aug 16 10:38 erts-14.0.2
drwxr-xr-x   14 root     root          4096 Aug 16 10:38 lib
drwxr-xr-x    2 root     root          4096 Aug 17 13:30 log
drwxr-xr-x    3 root     root          4096 Aug 16 10:38 releases
/var/tmp #
/var/tmp # ls -al bus/bin/ bus/lib/bus-0.3.2/ebin/ bus/lib/bus-0.3.2/priv/data/ bus/log/
bus/bin/:
total 112
drwxr-xr-x    2 root     root          4096 Aug 16 10:38 .
drwxr-xr-x    1 root     root          4096 Aug 17 13:30 ..
-rwxr-xr-x    1 root     root         35983 Aug 16 10:38 bus
-rwxr-xr-x    1 root     root         35983 Aug 16 10:38 bus-0.3.2
-rw-r--r--    1 root     root         14214 Aug 16 10:38 install_upgrade.escript
-rw-r--r--    1 root     root          6681 Aug 16 10:38 no_dot_erlang.boot
-rw-r--r--    1 root     root          7560 Aug 16 10:38 nodetool

bus/lib/bus-0.3.2/ebin/:
total 32
drwxr-xr-x    2 root     root          4096 Aug 16 10:38 .
drwxr-xr-x    4 root     root          4096 Aug 16 10:38 ..
-rw-r--r--    1 root     root          1934 Aug 16 10:38 aux.beam
-rw-r--r--    1 root     root          1207 Aug 16 10:38 bus-app.beam
-rw-r--r--    1 root     root           951 Aug 16 10:38 bus-controller.beam
-rw-r--r--    1 root     root          1626 Aug 16 10:38 bus-handler.beam
-rw-r--r--    1 root     root           519 Aug 16 10:38 bus-sup.beam
-rw-r--r--    1 root     root           654 Aug 16 10:38 bus.app

bus/lib/bus-0.3.2/priv/data/:
total 56
drwxr-xr-x    2 root     root          4096 Aug 16 10:38 .
drwxr-xr-x    3 root     root          4096 Aug 16 10:38 ..
-rw-rw-r--    1 root     root         46218 Jan 15  2023 routes.txt

bus/log/:
total 16
drwxr-xr-x    2 root     root          4096 Aug 17 13:30 .
drwxr-xr-x    1 root     root          4096 Aug 17 13:30 ..
-rw-r--r--    1 root     root          5480 Aug 17 13:30 bus.log
/var/tmp #
/var/tmp # netstat -plunt
Active Internet connections (only servers)
Proto Recv-Q Send-Q Local Address           Foreign Address         State       PID/Program name
tcp        0      0 0.0.0.0:4369            0.0.0.0:*               LISTEN      50/epmd
tcp        0      0 0.0.0.0:45295           0.0.0.0:*               LISTEN      1/bus
tcp        0      0 0.0.0.0:8765            0.0.0.0:*               LISTEN      1/bus
tcp        0      0 :::4369                 :::*                    LISTEN      50/epmd
/var/tmp #
/var/tmp # ps ax
PID   USER     TIME  COMMAND
    1 root      0:01 {beam.smp} /var/tmp/bus/bin/bus -Bd -K true -A30 -- -root /var/tmp/bus -bindir /var/...
   50 root      0:00 /var/tmp/bus/erts-14.0.2/bin/epmd -daemon
   78 root      0:00 [epmd]
   79 root      0:00 [epmd]
  112 root      0:00 erl_child_setup 1048576
  131 root      0:00 sh
  143 root      0:00 ps ax
/var/tmp #
/var/tmp # exit # Or simply <Ctrl-D>.
0
```

## Consuming

All the routes are contained in a so-called **routes data store**. It is located in the `data/` directory. The default filename for it is `routes.txt`, but it can be specified explicitly (if intended to use another one) in the `apps/bus/src/bus.app.src` file.

**Identify**, whether there is a direct route between two bus stops with IDs given in the **HTTP GET** request, searching for them against the underlying **routes data store**:

HTTP request param | Sample value | Another sample value | Yet another sample value
------------------ | ------------ | -------------------- | ------------------------
`from`             | `4838`       | `82`                 | `2147483647`
`to`               | `524987`     | `35390`              | `1`

The direct route is found:

```
$ curl 'http://localhost:8765/route/direct?from=4838&to=524987'
{""direct"":true,""from"":4838,""to"":524987}
```

The direct route is not found:

```
$ curl 'http://localhost:8765/route/direct?from=82&to=35390'
{""direct"":false,""from"":82,""to"":35390}
```

### Logging

The microservice has the ability to log messages to a logfile and to the Unix syslog facility. When running under Ubuntu Server (not in a Docker container), logs can be seen and analyzed in an ordinary fashion, by `tail`ing the `_build/prod/rel/bus/log/bus.log` logfile:

```
$ tail -f _build/prod/rel/bus/log/bus.log
...
[2023-08-17|19:50:09.856997+03:00][info]  Server started on port 8765
[2023-08-17|19:50:09.858244+03:00][info]  Application: bus. Started at: bus@localhost.
[2023-08-17|19:50:53.240705+03:00][debug]  from=4838 | to=524987
[2023-08-17|19:50:53.241292+03:00][debug]  1 =  1 2 3 4 5 6 7 8 9 987 11 12 13 4987 415 ...
...
[2023-08-17|19:50:58.614932+03:00][debug]  from=82 | to=35390
[2023-08-17|19:50:58.615299+03:00][debug]  1 =  1 2 3 4 5 6 7 8 9 987 11 12 13 4987 415 ...
...
[2023-08-17|19:55:18.298183+03:00][info]  Server stopped
```

Messages registered by the Unix system logger can be seen and analyzed using the `journalctl` utility:

```
$ journalctl -f
...
Aug 17 19:50:08 <hostname> bus[<pid>]: Starting up
Aug 17 19:50:09 <hostname> bus[<pid>]: Server started on port 8765
Aug 17 19:50:53 <hostname> bus[<pid>]: from=4838 | to=524987
Aug 17 19:50:58 <hostname> bus[<pid>]: from=82 | to=35390
Aug 17 19:55:18 <hostname> bus[<pid>]: Server stopped
Aug 17 19:55:19 <hostname> run_erl[<pid>]: Erlang closed the connection.
```

Inside the running container logs might be queried also by `tail`ing the `bus/log/bus.log` logfile:

```
/var/tmp # tail -f bus/log/bus.log
...
[2023-08-17|17:20:31.265942+00:00][info]  Server started on port 8765
[2023-08-17|17:20:31.266175+00:00][info]  Application: bus. Started at: bus@<container_id>.
[2023-08-17|17:25:06.934459+00:00][debug]  from=4838 | to=524987
[2023-08-17|17:25:06.934940+00:00][debug]  1 =  1 2 3 4 5 6 7 8 9 987 11 12 13 4987 415 ...
...
[2023-08-17|17:25:17.878966+00:00][debug]  from=82 | to=35390
[2023-08-17|17:25:17.879342+00:00][debug]  1 =  1 2 3 4 5 6 7 8 9 987 11 12 13 4987 415 ...
...
[2023-08-17|17:30:18.116113+00:00][notice]  SIGTERM received - shutting down
[2023-08-17|17:30:18.116870+00:00][info]  Server stopped
```

And of course Docker itself gives the possibility to read log messages by using the corresponding command for that:

```
$ sudo docker logs -f buslfe
...
[2023-08-17|17:20:31.265942+00:00][info]  Server started on port 8765
[2023-08-17|17:20:31.266175+00:00][info]  Application: bus. Started at: bus@<container_id>.
[2023-08-17|17:25:06.934459+00:00][debug]  from=4838 | to=524987
[2023-08-17|17:25:06.934940+00:00][debug]  1 =  1 2 3 4 5 6 7 8 9 987 11 12 13 4987 415 ...
...
[2023-08-17|17:25:17.878966+00:00][debug]  from=82 | to=35390
[2023-08-17|17:25:17.879342+00:00][debug]  1 =  1 2 3 4 5 6 7 8 9 987 11 12 13 4987 415 ...
...
[2023-08-17|17:30:18.116113+00:00][notice]  SIGTERM received - shutting down
[2023-08-17|17:30:18.116870+00:00][info]  Server stopped
```

### Error handling

When the query string passed in a request, contains inappropriate input, or the URI endpoint doesn't contain anything else at all after its path, the microservice will respond with the **HTTP 400 Bad Request** status code, including a specific response body in JSON representation, like the following:

```
$ curl 'http://localhost:8765/route/direct?from=qwerty4838&to=-i-.;--089asdf../nj524987'
{""error"":""Request parameters must take positive integer values, in the range 1 .. 2,147,483,647. Please check your inputs.""}
```

Or even simpler:

```
$ curl http://localhost:8765/route/direct
{""error"":""Request parameters must take positive integer values, in the range 1 .. 2,147,483,647. Please check your inputs.""}
```
",1,1,1,0,transportation,"[cowboy, json, lisp-flavoured-erlang, microservice, rest, routing, transportation]",00000
381,tamu-gtfsrealtime,jasikpark,N/A,https://github.com/jasikpark/tamu-gtfsrealtime,https://api.github.com/repos/jasikpark/tamu-gtfsrealtime,GTFS-Realtime for Texas A&M Spirit Bus API,"# tamu-gtfsrealtime

You can find me in the [Rust Community Discord Server](http://bit.ly/rust-community) as @Caleb#3174

> attempt to consume the A&amp;M bus api and provide a gtfs-realtime compliant api

A&amp;M Spirit Bus API: [https://transport.tamu.edu/BusRoutesFeed/swagger/ui/index#!/Buses/Buses_GetBusesOnRoute_Mentor](https://transport.tamu.edu/BusRoutesFeed/swagger/ui/index#!/Buses/Buses_GetBusesOnRoute_Mentor)

## so my plan is

- [ ] :construction: determine which rust webframework seems best for the
  project
- [ ] :construction: work through the [rocket](https://rocket.rs) tutorial and documenation
- [ ] read through the
  [gtfs-realtime](https://github.com/google/transit/tree/master/gtfs-realtime/spec/en)
  spec in its entirety
- [ ] build a library that describes the gtfs-realtime spec to allow easy
  gtfs-realtime stream creation from rust
- [ ] learn how to write an application that polls the api once every ten
  seconds (with some added random variance)
- [ ] learn how to work with databases so that there can be a single worker that
  polls the Spirit Bus api every ten seconds for updated info, that enters that
  information in a database for consumption
- [ ] take what I have learned from the [rocket](https://rocket.rs) tutorial and
  create a gtfs-realtime server

## the program structure will be

- [ ] consume api from [A&amp;M bus api site](https://transport.tamu.edu/BusRoutesFeed/swagger/ui/index#!/Buses/Buses_GetBusesOnRoute_Mentor)
- [ ] store that in a clear, internal representation via meaningful rust structs
- [ ] create an api server that uses [rocket](https://rocket.rs) and serve that on a minimal vps
- [ ] implement a web-based administrative ui for the server

## building on / resources&blog posts

- [Open Source Transit Software](https://jasik.xyz/open-source-transit-software/) (this is my website)
- [Legacy AVL system? It’s okay, join the club. | Kurt Raschke](https://kurtraschke.com/2015/01/legacy-avl-export/)
- [GitHub - kurtraschke/wmata-gtfsrealtime: GTFS-realtime StopTimeUpdate, VehiclePosition, and Alert feeds for WMATA](https://github.com/kurtraschke/wmata-gtfsrealtime)
- [GitHub - kurtraschke/septa-gtfsrealtime: GTFS-realtime for SEPTA TrainView and TransitView APIs.](https://github.com/kurtraschke/septa-gtfsrealtime)
",1,1,2,1,transportation,"[buses, gtfs, tamu, transit, transportation]",00000
382,BusWay,Haitons,N/A,https://github.com/Haitons/BusWay,https://api.github.com/repos/Haitons/BusWay,北京高校间交通查询系统,"# BusWay
北京高校间交通查询系统

## 1.问题描述 
北工大学生可能需要去清华听报告，北大教授也可能来北工大做报告。校际间需要查询交通线路。本系统就是一款在北京几所大学之间查询公交线路的小软件。数据来自高德地图。

## 2.基本要求
输入：用户选择起点和终点，并选择“费用最少”和“时间最短”两种模式之一。

输出：将查询得到的公交线路方案提示给用户，包括公里数、持续时间、费用。


## 3.已实现功能
1)至少包括7个候选大学：例如：北工大、北大、清华、人大、北师大、北航、中国传媒大学。

2)原始的真实信息：学校间的交通可参考百度地图、各大学官网的原始信息 。

3)查询的数据来源只能是用户的输入、百度地图的路程信息，也就是只能将原始信息作参数，执行算法，计算得到；切记：不能提前计算好几种方案，存储在文本文件中，按用户需要，对文本文件进行简单的显示，这样做将无法增、删候选大学、无法进行系统升级。

4)实现最少步行、最少换乘功能；

## 4.未实现扩展功能
1)实现必经中转站：在返回的路上可能要去西单图书大厦买书，因此增设几个候选结点，每次行程需要设置一个必经中转站。
2)参考百度地图等商业软件的实现方案，自定义你认为实用的功能，使查询方案更多样，查询结果更详细。

# 系统设计：
## 1.需要处理的数据
站点数量，站点序号，站点名称，路线数量，路线序号，路线权值，路线公交方式。

## 2.输入数据
从文件dingdianhebian.txt读入站点数量与路线数量。
从文件daxue.txt、feiyong.txt、bx.txt、huancheng.txt分别读入站点序号与路线权值。具体格式为（起始站，终点站，权值（时间、费用、步行距离、换乘次数））。
从文件bus.txt读入公交路线方式。
从文件xiaoxue.txt读入路线序号。
从文件mingcheng.txt读入各站点的中文名称。
### 将files文件夹下文件放在D盘根目录下
## 3.输出数据
输出路线信息，包括各换乘站以及相应的公交方式。

## 4.开发环境
VS2013

## 5.用户界面的设计等
提示输入起始站和终点站
选择希望的出行需求（费用最少、时间最短、最少步行、最少换乘）
DOS输出路线信息
提示继续或退出

## 6.数据结构设计
### 建立图的存储结构
定义交通图的存储结构。用邻接矩阵来表示图是唯一的。需要用一个二维数组存储顶点之间相邻关系的邻接矩阵，并且还需要用一个具有n个元素的一维数组来存储顶点信息。下标为i的元素存储顶点V[i]的信息。 
```
typedef struct{
	char s[100][20];//存储顶点信息,char型
	int vexs[100];//顶点数组，int型
	int arcs[100][100];//邻接矩阵,int型
int num[1000][1000];//邻接矩阵的序号,int型
}MGraph;
```
### 定义边的数据结构
两个节点之间有一条边，用一维数组存储边的序号，并用一个二维数组存储边的信息。
```
typedef struct{
	char s[1000][1000];//存储边的信息
	int shuliang[1000];//存储边的序号
}Side;
```
### 程序整体结构
根据文件里的信息用邻接矩阵建立图的存储结构，分别建立时间无向图、费用无向图、步行距离无向图、换乘无向图。根据用户输入的起始站与终点站。使用FLOYD算法求出最优路径，将值存入数组，并输出相应的站点与公交出行方式。
### 各模块的功能描述
```
void CreateMGraph(MGraph * G, Side*E, int n, int e){
 //根据节点与边的信息建立带权无向图
}
```
```
void Floyd(MGraph *G, int n){
//用FLOYD算法求出最优路径
}
```
```
void main(){
//主函数，读取文件，建立存储结构，进行选择输入输出
}
```

## 程序界面
![image](https://github.com/Haitons/BusWay/raw/master/img-folder/e.png)

## 功能展示
1)从北大到人大耗时最短路径：
![image](https://github.com/Haitons/BusWay/raw/master/img-folder/a.png)

2)从北大到中国传媒大学费用最少路径：
![image](https://github.com/Haitons/BusWay/raw/master/img-folder/b.png)

3)从北工大到北航换乘次数最少路径：
![image](https://github.com/Haitons/BusWay/raw/master/img-folder/c.png)

## PS：
自己做的第一个工程，当时连图形界面都没弄出来...回顾了一下，太菜了....

### 2015.11

",0,0,1,0,transportation,"[busway, c-plus-plus, data-structures, transportation]",00000
383,social-transit-solver-single,adam-rumpf,N/A,https://github.com/adam-rumpf/social-transit-solver-single,https://api.github.com/repos/adam-rumpf/social-transit-solver-single,A solution algorithm initialization program for use in a research project of mine dealing with a public transit design model with social access objectives. This produces the initial objective and constraint function values and is not part of the main solution search loop.,"# social-transit-solver-single

A solution algorithm initialization program for use in a research project of mine dealing with a public transit design model with social access objectives (see project home page [here](https://github.com/adam-rumpf/social-transit)). This produces the initial objective and constraint function values and is not part of the main solution search loop.

The main purpose of this program is to calculate the constraint and objective values of the initial solution vector for use in the main solver's search algorithm, as well as a few additional metrics for use in comparing the initial network to the final network. The network, objective, and constraint modules included in this program should be identical to those used in the main solver.

Note that this program may take an extremely long time to run for large problem instances. It can be terminated early by pressing `[Ctrl]+[C]` during its execution. Note that this discards all progress except for files which have already been written. The assignment model outputs an updated copy of its flow values during each iteration of its main loop, allowing some progress to be saved between runs.

I would not expect this program to be of much use to anyone outside of our research group, but it is provided here for anyone interested.

## Output Folder

This program writes output files to a local `output/` folder. The following files are produced:

* `gravity_metrics.txt`: A full listing of the gravity access metrics of all population centers for the initial solution vector. This is meant for comparing the initial and final results on a center-by-center basis.
* `initial_solution_log.txt`: An initial version of the solution log file for the main solver. Formatted correctly for the main solver, and contains a single row which logs the initial solution along with its constriant and objective values.
* `initial_flows.txt`: The flow vector produced by the nonlinear assignment model for the initial fleet size vector. Includes core arcs only. This file is also used to allow the assignment process to be halted (using `[Ctrl]+[C]`) and resumed. If present it is used as an initial flow vector to speed up the assignment model. It is updated during each iteration of the assignment model's Frank-Wolfe algorithm.
* `user_cost_data.txt`: A copy of the `user_cost_data.txt` input file with the initial user cost filled in based on the results of the single run.

## Data Folder

This program reads input files from a local `data/` folder. The following data files should be included in this folder:

* [`arc_data.txt`](#arc_datatxt)
* [`assignment_data.txt`](#assignment_datatxt)
* [`node_data.txt`](#node_datatxt)
* [`objective_data.txt`](#objective_datatxt)
* [`od_data.txt`](#od_datatxt)
* [`problem_data.txt`](#problem_datatxt)
* [`transit_data.txt`](#transit_datatxt)
* [`user_cost_data.txt`](#user_cost_datatxt)
* [`vehicle_data.txt`](#vehicle_datatxt)

The contents of these files will be explained below. Most include IDs for each of their elements. For the purposes of our solution algorithm these are assumed to consecutive integers beginning at `0`, and this is how they will be treated for the purposes of array placement.

Unless otherwise specified, the following units are used:

* cost = dollars
* distance = miles
* time = minutes

### `arc_data.txt`

Information related to all arcs. Due to the internal network object storage the accessibility walking arcs (type `4`) must be listed in a contiguous block at the end of the arc list.

Contains the following columns:

* `ID`: Unique identifying number.
* `Type`: Arc type ID. The types in use are:
  * `0`: line arc
  * `1`: boarding arc
  * `2`: alighting arc
  * `3`: core network walking arc (stop nodes only)
  * `4`: accessibility network walking arc (stop nodes, population centers, and facilities)
* `Line`: Line ID of a line arc, and `-1` otherwise.
* `Tail`: Node ID of the arc's tail.
* `Head`: Node ID of the arc's head.
* `Time`: Constant part of travel time of arc. Boarding arcs, whose travel time is based on the line frequency, have a listed time of `0`.

### `assignment_data.txt`

Information related to the Spiess and Florian assignment model.

Contains the following rows:

* `FW_Error_Epsilon`: Optimality gap threshold to use for ending the Frank-Wolfe algorithm.
* `FW_Flow_Epsilon`: Solution change threshold (inf-norm) to use for ending the Frank-Wolfe algorithm. This bound is for the flow vector.
* `FW_Waiting_Epsilon`: Solution change threshold to use for ending the Frank-Wolfe algorithm. This bound is for the waiting time scalar, which in general is so large compared to the arc flow values that a larger threshold is appropriate.
* `FW_Cutoff`: Iteration cutoff for the Frank-Wolfe algorithm.
* `Elements`: Number of parameters listed on the following rows. Currently set to `2`.
* `alpha`: Alpha parameter of the conical congestion function.
* `beta`: Beta parameter of the conical congestion function. By definition it should equal `(2 alpha - 1)/(2 alpha - 2)`, and is included here only for convenience.

### `node_data.txt`

Information related to all nodes. Due to the internal network storage all population center and primary care facility nodes (types `2` and `3`) must be listed in a contiguous block at the end of the node list.

Contains the following columns:

* `ID`: Unique identifying number. Used to reference specific nodes in the other data files.
* `Name`: Name of the node. Most stops are simply called ""Stop"" followed by their ID number. Boarding nodes also append the name of their line. Population centers and primary care facilities use their real names.
* `Type`: Node type ID. The types in use are:
  * `0`: stop node
  * `1`: boarding node
  * `2`: population center
  * `3`: primary care facility
* `Line`: Line ID of a boarding node, and `-1` otherwise.
* `Value`: Population of a population center, facility weight of a primary care facility, and `-1` otherwise.

### `objective_data.txt`

Information related to defining the objective function and related accessibility metrics.

Contains the following rows:

* `Elements`: Number of parameters listed on the following rows. Currently set to `3`.
* `Lowest`: Number of lowest-metric population centers to take for the objective function.
* `Gravity_Falloff`: Exponent used to define distance falloff in gravity metric. This should be a positive value, and will be treated as negative in the program. A larger value means faster falloff.
* `Multiplier`: Factor by which to multiply the accessibility metrics. This should be chosen to compensate for very small decimal values that would otherwise risk truncation error.

### `od_data.txt`

Origin/destination travel demands. Only nonzero demands are meant to be included.

Contains the following columns:

* `ID`: Unique identifying number.
* `Origin`: Node ID of origin.
* `Destination`: Node ID of destination.
* `Volume`: Number of people wishing to travel from the origin to the destination.

### `problem_data.txt`

Miscellaneous data required to define the problem.

Contains the following rows:

* `Elements`: Number of parameters listed on the following rows. Currently set to `1`.
* `Horizon`: Total daily time horizon.

### `transit_data.txt`

Information related to each transit line. This includes a variety of fields directly related to the solution vector, such as the initial number of vehicles on each line (which constitutes the initial solution vector).

Contains the following columns:

* ID: Unique identifying number. This should indicate its position in the solution vector. Also used for line-specific references in the other data files.
* `Name`: Name of the line listed in the GTFS files.
* `Type`: Vehicle type ID. Matches one of the IDs listed in the vehicle data file.
* `Fleet`: Initial fleet size.
* `Circuit`: Total time for a vehicle to complete one circuit.
* `Scaling`: Fraction of the day during which the line is active. `1.0` indicates the entire daily time horizon.
* `LB`: Lower bound of allowable fleet size.
* `UB`: Upper bound of allowable fleet size.
* `Fare`: Boarding fare.
* `Frequency`: Initial line frequency, measured only during its active portion of the day. Relatively unimportant since it is recalculated each iteration for the current solution.
* `Capacity`: Initial line capacity, measured as a total number of passengers that can be transported per day. Relatively unimportant since it is recalculated each iteration for the current solution.

### `user_cost_data.txt`

Information related to defining the user cost function.

Contains the following rows:

* `Initial`: User cost of the initial solution. Used for defining the allowable relative increase bounds. The value here does not matter since it will be filled in by the single-run model.
* `Percent`: Allowable percentage increase in user cost (expressed as a decimal). Used to define the feasible set in the main solver. No effect on this preprocessing program.
* `Elements`: Number of parameters listed on the following rows. Currently set to `3`.
* `Riding`: Weight of in-vehicle riding time.
* `Walking`: Weight of walking time.
* `Waiting`: Weight of waiting time.

### `vehicle_data.txt`

Information related to each vehicle. Each route has a specified vehicle type, and only routes with the same vehicle type may exchange vehicles during the search algorithm.

Contains the following columns:

* `Type`: Vehicle type ID. Referenced in the transit data file to specify the vehicle type of each route.
* `Name`: Name of the vehicle.
* `UB`: Maximum number of this type of vehicle allowed in the network.
* `Capacity`: Seating capacity of this vehicle type. It is assumed that loading factor has already been taken into account. For trains, it is assumed that this includes all cars on a given train.
* `Cost`: Operating cost per unit time.
",0,0,2,0,transportation,"[math, mathematics, operations-research, optimization, research, research-paper, research-project, transit, transportation, urban-planning]",00000
384,metro,irene-rojas,N/A,https://github.com/irene-rojas/metro,https://api.github.com/repos/irene-rojas/metro,"A guide to DC Metrorail, powered by WMATA API","This app uses WMATA's API <a href=""https://developer.wmata.com/"">Developer Portal</a> to display expected railcar arrival times at Metro stations. Select a station and you will see the estimated arrival times of trains travelling in certain directions, as well as the line color and number of cars. It may not show details for end-of-line stations. This is known issue with the WMATA API. 

It uses fonts from the Metro style guide and colors from the website in spring 2019. The app looks best on a mobile device. 
",0,0,1,23,transportation,"[api, metro, reactjs, transportation, wmata, wmata-api]",00000
385,TBS,R2S2-Capstone,R2S2-Capstone,https://github.com/R2S2-Capstone/TBS,https://api.github.com/repos/R2S2-Capstone/TBS,Transportation Bidding System,"# Transportaion Bidding System
",0,0,2,0,transportation,"[bidding, capstone, efcore, firebase, firebase-auth, mysql, netcore-webapi, netcore2, school-project, transportation, vuejs]",00000
386,adrienne,HQ20,HQ20,https://github.com/HQ20/adrienne,https://api.github.com/repos/HQ20/adrienne,Adrienne Protocol - Changing the way the world moves.,"![](adrienne.png)

Let me introduce you to [Adrienne](http://www.techhq.io/adrienne), a mobility services protocol conceived to disrupt an industry worth 2 trillion dollars and with a target market of a billion users.

The 24h hours of frenzied thinking and coding at the [Mercedes-Benz Hackathon](https://mobilityhacklisbon.io/) was the catalyst for the [TechHQ](http://www.techhq.io) team to come up with an idea and a [prototype](http://github.com/hq20/adrienne) for a protocol that can implement today a mobility services paradigm which was thought to be still ten years away. 

The experience of the [TechHQ](http://www.techhq.io) team in quick development of blockchain solutions, combined with our knowledge of the automotive industry was the base upon which this idea and prototype were built.

The decentralization properties of blockchain technology allow the [Adrienne Protocol](http://www.techhq.io/adrienne) to break through the scale limitations of current mobility services solutions. We are building the future today.

<br/>

## License
[Apache 2.0](LICENSE)
",0,0,2,0,transportation,"[adrienne, adrienne-protocol, blockchain, city, future, mobility, move, protocol, prototype, transport, transportation]",00000
387,Transjakarta,tombayu,N/A,https://github.com/tombayu/Transjakarta,https://api.github.com/repos/tombayu/Transjakarta,A personal project to experiment data wrangling stuffs on Jakarta's largest transportation company!,"# Transjakarta
A personal project to experiment data science stuffs on Jakarta's largest transportation company!
Sources and credits: transjakarta.co.id, Trafi API, rasyidstat/transjakarta


## Contents
### Script
#### 01.R 
- Scrap all available Transjakarta routes (as in 08/04/2020)
- Download all routemaps available in transjakarta.co.id/peta-rute
#### 02.R
- Attempt to extract station names using OCR (09/04/2020) -- incomplete
#### 03.R
- Scraping Trafi's API, extract json (09/04/2020)
#### 04.R
- Parse all of the json's into R-ready format
#### 05.R
- Get the routes/corridors, save into geodata (with epsg 4326)
#### 06.R
- Get the stops (halte), save into geodata (also with epsg 4326)

### Data
#### data/rds/routes.rds
- A 'tidy' dataframe containing corridor codes and routes

### Plans, to-do, to be added
- OCR to extract all stops
- data/rds/routes - Service type, number of stations
- Dashboard
",0,0,1,1,transportation,"[r, transjakarta, transportation]",00000
388,Viraak,TheMinervis,TheMinervis,https://github.com/TheMinervis/Viraak,https://api.github.com/repos/TheMinervis/Viraak,"An all-in-one app for catering the needs of people in these pandemic times. Offering some useful and groundbreaking features and services, ranging from Covid activity tracker to requesting a Health diagnostician, it has it all.","# Viraak
Official Submission of Team TheMinervis to Hack the Hourglass 2020<br/>
Team Name: TheMinervis<br/>
Team Leader: Sourav Kunda<br/>
Track: ML,Smart Cities, Transportation, COVID19<br/>

## Problem Description
   Urgent need of integrating solutions for availing sources necessary for livelihood of every human beings.  
   Devising methods of implementing crowdsourcing platforms for mutual help of users and providers in this times.  
   Availing medical facilities at ease without much hassle and without visiting directly.  
   Availing travel facilities at ease with appropriate authorization.  
   Availing solutions for needs and business solutions for small scale businesses for continuing their sale.  
   Availing important information about the current happening  for creating appropriate awareness.   

## Solution Description
   An all-in-one app for catering the needs of people in these pandemic times. Offering some useful and groundbreaking features and services,
   ranging from Covid activity tracker to requesting a Health diagnostician, it has it all.<br/><br/>
   ##### The various services listed on it’s offerings are  
   A Corona Status Dashboard exhibiting the live updates on the number of Covid’19 cases  
   A precautionary measure table  
   A Donate Others forum and a Help Others page, to help the poor and the needy in these difficult times  
   A section to list out one’s needs and requirements, also consisting of a vendor list section Users can make packages get delivered to  
   their pre-decided destination using this feature of the app, through their desired mode of transportation. Images and QR code of the  
   products would be collected as an object of proof to make the deliveries successful. Similarly, buyers can provide their location and  
   other details required to make a successful trade.  
   A Medical facilitation to garner an easy access to finding of doctors, requesting of medicines, housing the exclusive feature of make a  
   requisition for a mobile diagnostician  
   A voluntary department to get help or make help, from and to others.  
   A travel section, to make important travelling procedures easy and hassle free  
   A unique crowd prediction system to find the places with least crowd in regards to latest data from GPS and GPRS systems.  

### Prerequisites
   As long as you have a pc, with an emulator installed to it, with node, npm and react-native cli installed, you are good to go!

### Installing

   A step by step series of examples that tell you how to get a development env running

   Connect your android device for usb debugging or set up an emulator.

   Go to root of the project. Run

   ```
   npm install
   ```

   ```
   npm run android
   ```

   A metro server will start in terminal and application will be installed in your android device.
",0,0,1,0,transportation,"[covid-activity-tracker, hacktoberfest, pandemic-times, transportation]",00000
389,projectcard,network-wrangler,network-wrangler,https://github.com/network-wrangler/projectcard,https://api.github.com/repos/network-wrangler/projectcard,Project card standard for transportation network project properties,"Project Cards


# Schema

The ProjectCard schema is represented as a [json-schema](https://json-schema.org) in the `/schema` directory and is documented on the [schemas page](schemas.md).

## Example Data

Example project cards can be found in the `/examples` directory and on the [examples page](examples.md)

# Basic Usage

```python
from projectcard.io import read_cards

# Read in cards from a directory with the tag ""Baseline 2030""
project_cards = read_cards(directory, filter_tags=[""Baseline2030""])

# Iterate through a deck of cards for validity
for project_name,card in project_cards.items():
    print(f""{project_name}: {card.valid}"")

# Print out a summary of the card with the project name ""4th Ave Busway""
print(project_cards[""4th Ave Busway""])
```

# Installation

Generally it is not necessary to install the projectcard package as the main purpose of this repository is to maintain the project card *schema*.

## Development Environment

1. [Fork](https://github.com/network-wrangler/projectcard/fork) and clone repo locally

2. Install dependencies

```sh
conda install --yes --file requirements.txt
```

or

```sh
pip install -r requirements.txt
```

3. Install from working directory

```sh
pip install -e .
```

## Production Environment

```sh
pip install git+https://github.com/network-wrangler/projectcard@main#egg=projectcard
```
",0,0,1,6,transportation,"[datastandard, projectrecords, transportation]",00000
390,CS323-Project2-BojanaStajic,little-software-engineer,N/A,https://github.com/little-software-engineer/CS323-Project2-BojanaStajic,https://api.github.com/repos/little-software-engineer/CS323-Project2-BojanaStajic,"CS323 C++ university project, Topic: Transportation management ","# CS323-PZ2-BojanaStajic
CS323 University project written in C++

Topic: Transportation Management System

A university project written in C++ using Visual Studio in order to make a simple console app that implements basics of C++ language.
",0,0,1,0,transportation,"[cpp, management, textfile, transport, transportation, visualstudio]",00000
391,KOMing,MiriamMondragon,N/A,https://github.com/MiriamMondragon/KOMing,https://api.github.com/repos/MiriamMondragon/KOMing,KOMing is a administration and ticketing web site developed in PHP/JavaScript/Bootstrap for common transportation and package shipping.,"# KOMing
## Key Words
<kbd>SQL Server</kbd> <kbd>Transact SQL</kbd> <kbd>DataBase Design</kbd> <kbd>PHP</kbd> <kbd>FPDF</kbd> <kbd>Bootstrap</kbd> <kbd>JavaScript</kbd> <kbd>jQuery</kbd> <kbd>Transportation</kbd> <kbd>Package Delivery</kbd>
 
 ## Video Demo
You can watch this project functionalities in the video demo for [KOMing Project](https://youtube.com/watch?v=q8OIQKo53-U&si=TbPsRSClFT9bdVjO).

 ## Functionality and Usage
- Allows passangers and packages to be recorded with all relevant information.
- Allows editing of information or cancellation of travels and package delivery.
- Provides unique tickets and reports to allow passangers to identify themselves and track their things.
  ![Screenshot of the project.](/recursos/Ticket.PNG)
- Lists the total travels or relevant ticket sales between cities, using filters, or textual search.
- Allows recording relevant information of company employees, editing and deactivation.
- Records the assignment of packages to an employee and generate reports on this process.
- Manages branches, departments, cities and countries for informational use of registered travels and shipping options.
- Generates sales reports, assignment of packages to employees, lists of customers, and others per month, date range, etc.
- Recording of activity in the system through a log.
- Use of a responsive web interface for computers and mobile devices.

 ## Considerations
1. The code its divided in several files to make it easy to reccognize and edit, so the repository shows the structure follow to develop the functions and procedures needed for all the fuctionalities of the code.
3. It includes some error handling pages as 403 and such which configuration was made in the .htaccess file.
",0,0,1,0,transportation,"[bootstrap, database-design, fpdf, javascript, jquery, package-delivery, php, sql-server, transact-sql, transportation]",00000
392,CodeTest-BoardingPass-Swift,fjbelchi,N/A,https://github.com/fjbelchi/CodeTest-BoardingPass-Swift,https://api.github.com/repos/fjbelchi/CodeTest-BoardingPass-Swift,BoardingPass code tests done in Swift following POP,"# CodeTest-BoardingPass-Swift

Code Tests done in Swift, Xcode 7b5, following POP and converted to Swift 3.


##The exercise

You are given a stack of boarding cards for various transportations that will take you from a point A to point B via several stops on the way. All of the boarding cards are out of order and you don't know where your journey starts, nor where it ends. Each boarding card contains information about seat assignment, and means of transportation (such as flight number, bus number etc).

Provide an application that let's you sort this kind of list and present back a description of how to complete your journey. For instance the application should be able to take an unordered set of boarding cards, provided in a format defined by you, and produce this list:

- Take train 78A from Madrid to Barcelona. Sit in seat 45B.
- Take the airport bus from Barcelona to Gerona Airport. No seat assignment.
- From Gerona Airport, take flight SK455 to London. Gate 45B, seat 3A. Baggage drop at ticket counter 344.
- From London, take flight SK22 to New York JFK. Gate 22, seat 7B. Baggage will we automatically transferred from your last leg.
You have arrived at your final destination.

The list should be defined in a format that's compatible with the input format. It has to be a client side application, with no server communication. The UI of the application should match the following wireframe as much as possible, (although bonus points will be granted for grateful surprises).

## Requirements

The structure of the code should be extendable to make building in support for any means of transportation / extra information required about a specific type of transportation easy.

The implementation of your sorting algorithm should work with any set of boarding passes, as long as there is always an unbroken chain between all the legs of the trip. Ie. it's one continuos trip with no interruptions.
The algorithm doesn't need to consider that departure / arrival are in the correct order. In fact there is no information about any such times on the boarding passes. It is just assumed that your next connection is waiting for you when you arrive at a destination.

The algorithm should have the lowest possible order of complexity (Big O notation) you could think of.
",0,0,2,0,transportation,"[boarding-passes, code-test, swift, transportation]",00000
393,bps-challenge-score,data-mechanics,data-mechanics,https://github.com/data-mechanics/bps-challenge-score,https://api.github.com/repos/data-mechanics/bps-challenge-score,Scoring platform for BPS bus route ensembles.,"# bps-challenge-score
Browser-based interactive validation, evaluation, and leaderboard platform for bus stop assignment and routing candidate solution data sets intended for the Boston Public Schools Transporation Challenge. [View the platform online](https://data-mechanics.github.io/bps-challenge-score/).
",0,0,2,0,transportation,"[boston, boston-university, data-science, public-transportation, real-world, transportation]",00000
394,UW.Olivos-Roche,moonline,N/A,https://github.com/moonline/UW.Olivos-Roche,https://api.github.com/repos/moonline/UW.Olivos-Roche,Paper: Transportation Choices for People with Transportation Disadvantages in Olivos Roche,"# UW.Olivos-Roche

Transportation Choices for People with Transportation Disadvantages in Olivos Roche

<a rel=""license"" href=""http://creativecommons.org/licenses/by-sa/4.0/""><img alt=""Creative Commons License"" style=""border-width:0"" src=""https://i.creativecommons.org/l/by-sa/4.0/88x31.png"" /></a><br />This work is licensed under a <a rel=""license"" href=""http://creativecommons.org/licenses/by-sa/4.0/"">Creative Commons Attribution-ShareAlike 4.0 International License</a>.


# Paper

* Source (reStructuredText): [Paper.rst](./Paper.rst)
* Paper & Presentation (PDF): [Releases](https://github.com/moonline/UW.Olivos-Roche/releases)


# Paper Summary

A look from transportation perspective at Olivos Roche, part of Olivos, a suburb in greater Buenos Aires: https://www.openstreetmap.org/relation/1270158

Olivos Roche has a size of almost 90 blocks and around 10'000 inhabitants. It counts with a railway line, a BRT line, express bus lines and several local bus lines:

http://openptmap.org/?zoom=14&lat=-34.52119&lon=-58.48788&layers=B0000TFT 
https://www.openstreetmap.org/relation/1270158#map=14/-34.5185/-58.5111&layers=T

The paper focuses on the following transportation modes for non-drivers:

* Transit
    * Physical access to transit (infrastructure and vehicle conditions)
    * Monetary access (fares)
    * Transit connections
    * Reliability
* Walking
    * Walking without items
    * Walking carrying items or children
* Cycling
* Micro transit
    * Scooter availability
* Taxi/Uber



## Compile

### Install dependencies

Rst2Pdf is used to compile the reStructuredText document to PDF, and exiftool is needed to add PDF meta data.

```bash
sudo apt-get install rst2pdf exiftool
```

### Build

1. run `build.sh`
2. The output file will be generate in the same directory (Paper.pdf).
",0,0,2,0,transportation,"[paper, public-transport, restructuredtext, transportation]",00000
395,jakarta-trains,tombayu,N/A,https://github.com/tombayu/jakarta-trains,https://api.github.com/repos/tombayu/jakarta-trains,All about Jakarta's growing train networks!,"# jakarta-trains
All about Jakarta's growing train networks!
Below is a map generated using the data in the repo, combined with the data from my other [Transjakarta](https://github.com/tombayu/Transjakarta) repo. I intend to show the feeder buses 'feeding' the MRT lines. However, it's not currently showing the depiction I'm hoping it would show (i.e. massive stream of feeders going into the main MRT line), so a lot of improvements are to be made. It could be in my visualization technique, or perhaps by adding more routes/feeders *poking Transjakarta* :-) 

Some credits: Trafi for the API, BIG for the shapefiles, [rasyidstat](https://github.com/rasyidstat/transjakarta) for the great repo allowing me to learn how to parse an API using R!
 
![Feeding the MRT](https://github.com/tombayu/Transjakarta/blob/master/data/map/FeedingTheMRT.png)
",0,0,1,0,transportation,"[dataviz, jakarta, map, transjakarta, transportation]",00000
396,pyTRIS,asongtoruin,N/A,https://github.com/asongtoruin/pyTRIS,https://api.github.com/repos/asongtoruin/pyTRIS,Simple API wrapper for Highways England's WebTRIS Traffic Flow API,"# pyTRIS
![Pytest](https://github.com/asongtoruin/pyTRIS/workflows/Pytest/badge.svg)
[![codecov](https://codecov.io/gh/asongtoruin/pyTRIS/branch/main/graph/badge.svg)](https://codecov.io/gh/asongtoruin/pyTRIS)
[![PyPI version](https://badge.fury.io/py/pyTRIS.svg)](https://pypi.org/project/pyTRIS/)

A simple API wrapper for Highways England's WebTRIS Traffic Flow API. 
Documentation is available [here](https://asongtoruin.github.io/pyTRIS).
",0,0,1,2,transportation,"[transport-api, transportation]",00000
397,Cyclistic-Report,andersonmaa,N/A,https://github.com/andersonmaa/Cyclistic-Report,https://api.github.com/repos/andersonmaa/Cyclistic-Report,Analysis of the differences between two groups of consumers in a Chicago based bike share service. ,"# Cyclistic-Report

Context:
This is a case study to understand how casual riders and annual members of Cyclistic - a rentable bike share service, are different. This project will highlight key elements where we can extrapolate actionable findings. 

Content:
The source data is provided by Motivate International LLC, who has allowed us to reference their original data for non-commercial analysis: https://divvy-tripdata.s3.amazonaws.com/index.html 
Used for analysis was 12 separate .CSV files dating from April 2020 - March 2021.
",0,0,1,0,transportation,"[behavioral-patterns, habit-tracking, transportation]",00000
398,bikesharing,sergiocapacho,N/A,https://github.com/sergiocapacho/bikesharing,https://api.github.com/repos/sergiocapacho/bikesharing,Used Tableau to analyze and discover valued information in the bike-sharing system data in NYC.,"# Bikesharing

## Overview of the analysis

The purpose of this project is to show investors how the bike-sharing model works in NYC in order to demonstrate that running this model in Des Moines is a strong business proposal.

## Results

### Checkout times for users
![image](https://github.com/sergiocapacho/bikesharing/blob/main/images/1.png?raw=true)

The majority of users check out between the first twenty minutes. This information tell us that the system would need to invest in high quantity if bikes to cover the demand. On the other hand, it could result in less repairs as trips are short.

### Checkout times by Gender
![image](https://github.com/sergiocapacho/bikesharing/blob/main/images/2.png?raw=true)

The difference between males and females is in terms of the number of users, as the trend keeps being very similar to the general one. Males tend to take slightly longer trips.

### Trips by Weekday per hour
![image](https://github.com/sergiocapacho/bikesharing/blob/main/images/3.png?raw=true)

During the weekdays, the trend shows us that people use the service to commute to and from work; however after work is when they used it more. Saturday is also the stronger day for bike users during the weekend. 

### Trips by Gender
![image](https://github.com/sergiocapacho/bikesharing/blob/main/images/4.png?raw=true)

Males are clearly the majority of the system users, having the commute from work as the strongest time. For example, females represent 34% of the males' usage during the busier day, Thursday at 5 PM. 

### User trips by Gender by Weekday
![image](https://github.com/sergiocapacho/bikesharing/blob/main/images/5.png?raw=true)

Males seem to rely on the system for their transportation as most are subscribers. Most users of the system are subscribers, using it weekdays. Non-subscribers use it more during the weekend.

### Gender Breakdown
![image](https://github.com/sergiocapacho/bikesharing/blob/main/images/6.png?raw=true)

Males represent 65,27%, which can mean that although the majority, the usage could be equal not in total users but the percentage of users of each gender using the service. 

### Average Trip Duration
![image](https://github.com/sergiocapacho/bikesharing/blob/main/images/7.png?raw=true)

The graph is showing us that people born between 1990 and 1995 and upwards are the ones making the longest trips.


[link to dashboard](https://public.tableau.com/profile/sergio.capacho#!/vizhome/Challenge_16127501320820/Story1)
",0,0,1,0,transportation,"[bike-sharing, transportation]",00000
399,ce-vehicles-graphs,rafero1,N/A,https://github.com/rafero1/ce-vehicles-graphs,https://api.github.com/repos/rafero1/ce-vehicles-graphs,"Data analysis of Brazil, Ceará's traffic, vehicle distribution and assorted stats over the years. Visualizations made on the Observable platform.","# Exploring Ceará's Traffic Statistics (Explorando a Frota de Veículos do Ceará)

![Screenshot of the Webpage](./assets/img/screen.png)
A data analysis of Brazil, Ceará's traffic, vehicular distribution and assorted stats over the years.
All visualizations were made on the Observable platform.
This work was produced as part of a university class final presentation.

## Testing

Any simple web server will do. For example, to test this application using the python web server run ``py -m http.server``.
",0,0,2,0,transportation,"[brasil, brazil, ceara, d3, data-analysis, data-science, observable, statistics, traffic, transportation, vega-lite, website]",00000
400,StibRide,alahyaoui,N/A,https://github.com/alahyaoui/StibRide,https://api.github.com/repos/alahyaoui/StibRide,My JavaFx implementation of an application that allows people to get the shortest path between two metro station in the public transport network of Brussels.,"# StibRide

My JavaFx implementation of an application that allows people to get the shortest path between two metro station in the public transport network of Brussels.

# Description

## STIB-MIVB
The Brussels Intercommunal Transport Company is the local public transport operator in Brussels, Belgium. It is usually referred to in English by the double acronym STIB-MIVB, or by its French acronym, STIB.

# Installation
Without a ssh key:
```
$ git clone https://github.com/alahyaoui/StibRide.git
```
With a ssh key:
```
$ git clone git@github.com:alahyaoui/StibRide.git
```

# Execution
Move to the project repository and execute
```
$ cd StibRide/
$ mvn javafx:run
```
Nb: You need maven installed and added to your PATH environment variables.
If its not, download maven <a href=""https://maven.apache.org/install.html"">here</a>

# Author
- **Lahyaoui Ayoub**
",0,0,1,1,transportation,"[dao, dto, java, javafx, mvp, repository, scenebuilder, sqlite, transport, transportation, transportation-network, transportation-planning]",00000
401,transportforathens,dimnioras,N/A,https://github.com/dimnioras/transportforathens,https://api.github.com/repos/dimnioras/transportforathens,"Source code of the website related to Transport for Athens, hosted at transportforathens.org","# transportforathens.org

## What is Transport for Athens?

Transport for Athens is an effort to present a vision for a better public transportation system in Athens and the Attica region. In this website you will find recommendations about the upgrade and reorganization of the public transportation network in Athens based on transportation planning principles, the history and best practices, as well as the author's ideas. Moreover, you will find posts and critiques related to the current transportation system plan in Athens.

## Technical details

The website is created using MkDocs, a Static Site Generator (SSG) that utilizes Markdown to create pages.
",0,0,1,0,transportation,"[mkdocs, mkdocs-material, python, transportation, transportation-network, transportation-planning]",00000
402,cycling-discontinuities,nsaunier,N/A,https://github.com/nsaunier/cycling-discontinuities,https://api.github.com/repos/nsaunier/cycling-discontinuities,SQL code and guide to extract cycling discontinuities from GIS data,"# Welcome
This repository contains the SQL code and sample open data to replicate our upcoming paper on measuring the connectivity of a cycling network using discontinuity indicators. The following discontinuities can be automatically extracted from geospatial data: the ends of cycling facilities and the changes in cycling facility type. 

This repository includes a step-by-step guide for that purpose, applied to the Montreal cycling network.

# Abstract
The evaluation of the performance of a cycling network relies on a set of indicators, with the goal of better planning future networks or improving existing ones. There are several evaluation methods, each with its set of indicators, none of which provides a complete picture of the cycling network performance. For example, most studies have relied only on the coverage as an indicator for network performance, while others focused on accessibility. The lack of a uniform evaluation system which includes all relevant performance indicators may result in biased rankings. Reviewing existing evaluation methods, it further appears that connectivity or discontinuity indicators have not been systematically identified and are missing from many evaluation methods. Discontinuities can be either intrinsic to the cycling facilities and the cycling network, such as changes in the type of facility or end of facilities, or related to changes in the cycling network environment, in particular the usually adjacent road network and motorized traffic.
This paper formalizes the concept of discontinuities in the cycling network and the various causes of discontinuities, proposes a set of indicators to measure cycling network connectivity and the methodology to calculate them, including automated methods for geospatial data with the code available under an open-source licence. The automated method is applied to the comparison of the cycling network connectivity of four North American cities: Montreal and Vancouver in Canada, Portland, and Washington D.C. in the United States. 

# Citation
This work has been presented at the 16th World Congress on Transportation Research (2023). If you find this work useful in your research, please consider citing:

    @InProceedings{nabavi-niaki23cycling,
      author    = {M. {Nabavi Niaki} and J.-S. Bourdeau and L.F. Miranda-Moreno and N. Saunier},
      title     = {Cycling Network Discontinuities as Indicators for Performance Evaluation: Case Study in Four Cities},
      booktitle = wctr,
      year      = {2023},
      month     = jul,
    }
    @misc{nabavi-niaki18cycling-discontinuities-git,
        Author = {Matin Nabavi Niaki and Jean-Simon Bourdeau and Luis Miranda-Moreno and Nicolas Saunier},
        Title = {Cycling network discontinuities as indicators for performance evaluation: Case study in four cities},
        Year = {2022},
        howpublished = {https://github.com/nsaunier/cycling-discontinuities/}
    }

# Required Software
* [SpatiaLite](https://www.gaia-gis.it/fossil/libspatialite/home) (optional with spatialite-gui)
* A text editor (e.g. Notepad++ on Windows, emacs, atom, etc.)

# Required Datasets
* Cycling network shapefile (this shapefile should have a field named facilities with the different cycling facility types)
* The cycling network in the provided examples has already been categorized into three facility types:
    1. Separate cycling facility
    2. Painted bike lane
    3. Off-road cycling facility

# Step-by-step guide 
1.	Open *spatialite-gui* and click on **Files** and **Creating a New (empty) SQLite DB**
2.	Set a name for the .sqlite file 
3.	Click on the **Load Shapefile** and select the city’s cycling network shapefile
    * for Montreal, pick the file `Existant_Reseau_cyclable_2013_polyline.shp` (**Warning**: it does not seem to work on Linux for some issues with characters, but it works with on Windows)
4.  Specify the **Table name** as **bike_network**
5.	Set the **GeomColumn name** as **geom**
6.	Set the SRID as the city’s coordinate system id value (can be found here: http://spatialreference.org) and click **Ok** to load the file
    * for Montreal, the SRID is 32188
7.	Click on the + (or arrow) next to **bike_network** and right click on the **geom** icon and select **Check geometries** take note of the **Srid** and **CoordDimension** (could be XYZM, XYZ, or XY)
    * for Montreal, the CoordDimension should be XYZM
8.	Open the **processing.sqlite** file with a text editor, e.g. Notepad++ on Windows
9.	Replace all SRID values with the correct number for the city 
10.	Replace all CoordDimensions to the one specified in the previous step check geometries (XYZM, XYZ, or XY)
11.	Select and copy **[SECTION ONE]** from *treatment.sql* and paste it in *spatialite-gui* and click on the **Execute SQL statement**
12.	Do the same for sections two through six
    * alternatively, you may try to execute the script with the command line SpatiaLite executable, e.g. for Montreal with the provided script `spatialite db-montreal.sqlite < processing-montreal.sql`
13.	Once all sections have been executed, refresh the **User Data** branch
14.	Click on the **bike_network_merge_dissolve_within_2m** and right click on **geom_point**, select **export as shapefile** and save it to the shapefile containting the ***end of cycling facilities***
15.	Repeat the previous step for **bike_network_merge_dissolve_within_5m**, and save to the shapefile containing the ***change in cycling facility type*** points

The two exported shapefiles can be opened with a spatial analyst tool (e.g. ArcGIS, QGIS) to visualize the discontinuity locations. Alternatively, the SpatiaLite databases can be open in QGIS (Browser -> SpatiaLite -> **New Connection**). In the spatial analysis tool, the statistical summary tool will show the total number of discontinuities for each discontinuity layer. Otherwise, the exported database table is saved as *end_points.dbf* and *change_points.dbf* with all the discontinuity points.

# Repository Structure and Data
Each subdirectory contains 
* the prepared shapefile for the bike network, with the facilities field and the three facility types considered in the paper
* the SQL code adapted for each city, with the proper SRID and CoordDimension
    * montreal SRID 32188 (see http://spatialreference.org/ref/epsg/32188/), shapefile available on http://donnees.ville.montreal.qc.ca/
    * portland SRID 32126 (see http://spatialreference.org/ref/epsg/32126/), shapefile available on http://gis-pdx.opendata.arcgis.com/datasets?t=transportation
    * vancouver SRID 32148 (see http://spatialreference.org/ref/epsg/32148/), shapefile available on http://data.vancouver.ca/datacatalogue
    * washington D.C. SRID 32146, (see http://spatialreference.org/ref/epsg/32146/), shapefile available on http://opendata.dc.gov
* the resulting SpatiaLite database after importing the shapefile and applying the corresponding SQL code

# Licence
This code is released under the MIT License (refer to the LICENSE file for details).
",0,0,2,0,transportation,"[cycling, gis, maps, open-data, open-science, open-source, research, transportation]",00000
403,planning-map,jwhaney,N/A,https://github.com/jwhaney/planning-map,https://api.github.com/repos/jwhaney/planning-map,esri-leaflet web application for the austin district,"# planning-map

AUS TPD Planning / Project Delivery simple mapping application built from scratch using the esri-leaflet library, bootstrap, jQuery, and some other libraries. This project was started in an effort to create a mobile friendly web map to view TxDOT authoritative layers that are hosted on ArcGIS Online. It was also built to test out the esri-leaflet library. The layers have been queried for a custom Austin District view.

This project is not final and I am still testing.

Access the map at https://johnwhaney.com/planning-map
",0,0,2,2,transportation,"[aus, austin, austin-district, esri-leaflet, esri-leaflet-library, javascript, transportation, txdot]",00000
404,Thomas-Jefferson-Regional-Planning-District,Smart-Cville,Smart-Cville,https://github.com/Smart-Cville/Thomas-Jefferson-Regional-Planning-District,https://api.github.com/repos/Smart-Cville/Thomas-Jefferson-Regional-Planning-District,"RideShare, a program of the Thomas Jefferson Planning District Commission, works to reduce traffic congestion and increase mobility among in our region.  How might we use technology to increase awareness of RideShare and reduce the friction involved in participation in ride sharing programs?","# Partner
Thomas Jefferson Regional Planning District

[http://tjpdc.org/](http://tjpdc.org/)

# Problem
RideShare, a program of the Thomas Jefferson Planning District Commission, works to reduce traffic congestion and increase mobility among in our region.

# Team Challenge
Build a solution to increase awareness of RideShare and reduce the friction involved in participation in ride sharing programs.

# Background
Planning District Commissions (PDCs) were established by the General Assembly under the Virginia Area Development Act (Code of Virginia, Title 15. 1, Ch. 34). The Thomas Jefferson PDC (10) was formed in 1972 to provide a forum for discussion of issues localities have in common, or on which there is disagreement; to work to decrease fragmentation in government; to plan cooperatively for the future; and to provide planning services to local governments as requested. As a public body, the TJPDC strives to include the public in decision-making.

RideShare is a program of the Thomas Jefferson Planning District Commission in cooperation with the Central Shenandoah Planning District Commission, working to reduce traffic congestion and increase mobility throughout Central Virginia and the Central Shenandoah Valley.

We offer free carpool and SchoolPool matching, vanpool coordination, and operate a Guaranteed Ride Home program to provide free rides home in an emergency.

RideShare also works with employers to develop and implement traffic reduction programs, and we market the region’s Park and Ride lots.

# Resources

* [RideShare Program](http://rideshareinfo.org/)
* [TJPDC Strategic Plan](http://www.tjpdc.org//media/TJPDC-Strategic-Plan05_7_15.pdf)

## Websites

* [RideShare Program](http://rideshareinfo.org/)
* [Commuter Information](http://rideshareinfo.org/commuter-information/)

## Data

",0,0,3,0,transportation,"[2017-civic-innovation-day, commuting, public-transportation, transportation]",00000
405,fr.lemet,ridem,N/A,https://github.com/ridem/fr.lemet,https://api.github.com/repos/ridem/fr.lemet,Transports en commun de Metz,"{'message': 'Not Found', 'documentation_url': 'https://docs.github.com/rest/repos/contents#get-repository-content'}",0,0,2,0,transportation,"[android, android-application, metz, transportation]",00000
406,vdot-6-year-plan-db,jalbertbowden,N/A,https://github.com/jalbertbowden/vdot-6-year-plan-db,https://api.github.com/repos/jalbertbowden/vdot-6-year-plan-db,VDOT's Six Year Improvement Plan Data,"vdot-6-year-plan-db
===================

VDOT's Six Year Improvement Plan Data
",0,0,1,0,transportation,"[data, open, open-data, six-year-improvement-plan, transportation, vdot, virginia]",00000
407,social-transit-preprocessor,adam-rumpf,N/A,https://github.com/adam-rumpf/social-transit-preprocessor,https://api.github.com/repos/adam-rumpf/social-transit-preprocessor,A preprocessing script for use in a research project of mine dealing with a public transit design model with social access objectives. Mostly consists of processing raw data from various City of Chicago and CTA data sets to construct network output files for use in my solution algorithm.,"# social-transit-preprocessor

A preprocessing script for use in a research project of mine dealing with a public transit design model with social access objectives (see project home page [here](https://github.com/adam-rumpf/social-transit)). Mostly consists of processing raw data from various City of Chicago and CTA data sets to construct network output files for use in my solution algorithm.

The formats of the input and output files are so specific to my applications that I would not expect this script to be useful for anyone except me, however it is being made available for anyone interested.
",0,0,2,0,transportation,"[math, mathematics, operations-research, optimization, research, research-paper, research-project, transit, transportation, urban-planning]",00000
408,mta-covid19,apgr0ss,N/A,https://github.com/apgr0ss/mta-covid19,https://api.github.com/repos/apgr0ss/mta-covid19,An analysis of New York City subway ridership dynamics at the onset of COVID-19,"# Urban mobility in a time of crisis: The impact of COVID-19 on subway ridership

This analysis intends to examine how movement has changed in cities since the outbreak of COVID-19. Specifically, I will be examining ridership dynamics of New York City's MTA subway system.

**Link to data [here](http://web.mta.info/developers/turnstile.html)**

The data (released every Saturday since 5 May 2010) provides cumulative entry and exit counts for every turnstile in the system. It covers the previous week on a semi-hourly basis (~every 4 hours).
## Goals
- Derive possible explanation for why urban blacks are disproportionately affected by COVID by looking @ subway ridership
- Does paranoia exist? Look @ stations in predominately Asian neighborhoods (e.g., Flushing) and examine if there's a significant drop in weekend ridership
- More broadly, link station to neighborhood and regress % change in visits on neighborhood characteristics and lagged values
	- Neighborhood characteristics could be median salary, race, age, zoning (commercial, residential, etc.)
",0,0,1,0,transportation,"[covid-19, covid19, mta, nyc, python, subway, transportation]",00000
409,social-transit-trial-driver,adam-rumpf,N/A,https://github.com/adam-rumpf/social-transit-trial-driver,https://api.github.com/repos/adam-rumpf/social-transit-trial-driver,A driver for running batches of test cases through the main solver for a research project of mine dealing with public transit design with social access objectives.,"# social-transit-trial-driver

A driver for running batches of test cases through the main solver for a research project of mine dealing with public transit design with social access objectives (see project home page [here](https://github.com/adam-rumpf/social-transit)).

This program is meant to act as a driver for running the main solution algorithm [social-transit-solver](https://github.com/adam-rumpf/social-transit-solver) repeatedly for different sets of input files. See the main solver's README for a full description of its input file format, and see its release page for an executable version. The driver, itself, requires an input file [`trials.txt`](#trialstxt) to specify the set of trials to be run, and outputs a file [`log.txt`](#logtxt) containing a log of the trial execution results.

## File Structure

This program should be placed in a folder alongsidee an executable version of the main solution algorithm, `social_transit_solver.exe`. For every trial that is being run, there should be a separate folder. The locations of the trial folders do not matter, but they should be somewhere whose file path is known. Within each trial folder there should be a `data/` and `log/` folder, both filled with any necessary input files as described by the [social-transit-solver](https://github.com/adam-rumpf/social-transit-solver) README.

## `trials.txt`

A file called `trials.txt` should be placed in the same directory as this program. It is meant to specify a list of the trials to be run. Specifically, each row specifies the file path to one of the trial folders, and then the trial driver will call the main solver to run through the solution process using those `data/` and `log/` folders.

The trial file is arranged as a tab-separated list. After an initial comment line, each row should contain the following columns:
 * `label`: Label for the trial. The output log will use the same labels on its rows to distinguish between the trials.
 * `root`: The file path to one of the trial directories. This will be passed as a command line argument to the main solver, which will then look for `data/` and `log/` within that directory.

## `log.txt`

An output log file will be produced by the trial driver in its current directory. The log contains a row to summarize the results of each trial. Note that the solution algorithm's outputs will still be located within the trial directories and thus must be retrieved manually.

After an initial comment line, each row contains the following columns:
 * `label`: Label for the trial. Corresponds to the labels from the trial file.
 * `exit`: Exit code produced by the main solver upon termination.
 * `time`: Total time spent on the trial, in HH:MM:SS format.
",0,0,2,0,transportation,"[math, mathematics, operations-research, optimization, research, research-paper, research-project, transit, transportation, urban-planning]",00000
410,social-transit-network-analysis,adam-rumpf,N/A,https://github.com/adam-rumpf/social-transit-network-analysis,https://api.github.com/repos/adam-rumpf/social-transit-network-analysis,Preprocessing tools for analyzing the input network for a research project of mine dealing with a public transit design model with social access objectives.,"# social-transit-network-analysis

Preprocessing tools for analyzing the input network for a research project of mine dealing with a public transit design model with social access objectives (see project home page [here](https://github.com/adam-rumpf/social-transit)). This is meant for use in analyzing the network after preprocessing with [social-transit-solver-single](https://github.com/adam-rumpf/social-transit-solver-single), with which this repository shares a large amount of code.

Specifically, this is a set of programs meant for performing the following tasks:

* [Loading Factor Calculation (C++)](#loading-factor-calculation)
* [Stop-Level Metrics (C++)](#stop-level-metrics)
* [Candidate Express Route Generation (Mathematica)](#candidate-express-route-generation)
* [Solution Log Editing (Python)](#solution-log-editing)
* [Solution Analysis (C++)](#solution-analysis)

These procedures are explained in more detail below. They are so specific to my applications that I would not expect them to be useful to anyone outside of my research group, but they are being provided here for anyone interested.

## Data Folder

This program reads input files from a local `data/` folder. The following data files should be included in this folder:

* `arc_data.txt`
* `gravity_metrics.txt`
* `final.txt`
* `initial_flows.txt`
* `initial_solution_log.txt`
* `node_data.txt`
* `objective_data.txt`
* `problem_data.txt`
* `solution.txt`
* `transit_data.txt`
* `user_cost_data.txt`
* `vehicle_data.txt`

Most of these correspond to the standard network input files used by the other programs that are part of this project, except for `gravity_metrics.txt` and `initial_flows.txt`, which are produced by the preprocessor [social-transit-solver-single](https://github.com/adam-rumpf/social-transit-solver-single), and except for `final.txt` and `solution.txt`, which are produced by the main solution algorithm [social-transit-solver](https://github.com/adam-rumpf/social-transit-solver). See the other repositories' READMEs for format details.

## Output Folder

This program writes output files to a local `output/` folder. The following files are produced:

* `arc_data.txt`
* `initial_flows.txt`
* `initial_solution_log.txt`
* `line_metrics.txt`
* `node_data.txt`
* `stop_metrics.txt`
* `transit_data.txt`

The contents of these files will be explained below for their relevant sections.

## Loading Factor Calculation

This is part of the main C++ program meant for helping to tune the assignment model parameters. We are currently using a frequency-based user assignment model from [Spiess and Florian (1989)](https://www.researchgate.net/publication/222385476_Optimal_Strategies_A_New_Assignment_Model_for_Transit_Networks) which makes use of a tuning parameter `alpha` to penalize overcrowding. This program outputs the loading factor of each individual arc, expressed as the initial flow:capacity ratio for each arc (with both flows and line capacities being calculated from the network's initial fleet assignment).

This program outputs no files, but prints the maximum and average loading factors to the screen. Seeing values significantly in excess of `1.0` indicates that `alpha` should be increased (although it should be noted that loading factors of up to `1.25` or so are generally assumed to be reasonable during rush hour).

## Stop-Level Metrics

This is part of the main C++ program meant for help in selecting candidate express routes. Our assumption is that a ""good"" express route would make it easier to get from a low-access area to a high-access area, and so as a preliminary step we calculate the accessibility metrics of the transit stops, themselves. This is done with essentially the same code as the main solver, except that we treat transit stops as population centers rather than considering the population centers separately.

Two files are output by this program. The first is `stop_metrics.txt`, which simply contains a list of all stop node IDs along with their accessibility metric. The second is `line_metrics.txt`, which contains effectively the same information as the first file, but partitioned by line and sorted by access metric value in order to make it easier to find the highest and lowest few metrics for any given line.

## Candidate Express Route Generation

This is a Mathematica notebook separate from the main C++ program for use in generating candidate express routes. We have chosen to use Mathematica simply because its built-in graph functions make evaluating connectivity much easier.

The general idea behind express route generation is, for each line, to pick a subset of the original stops consisting of only the highest few and lowest few accessibility metrics from the `line_metrics.txt` file. The line arcs of the express route are generated by finding the shortest paths between the corresponding stops in the original line, with a small amount of travel time deducted for each stop skipped.

The network definition files (`arc_data.txt`, `initial_flows.txt`, `node_data.txt`, and `transit_data.txt`) are all updated to include the express routes, each of which is assumed to begin with a fleet size of `0`. The updated files are placed in the `output/` folder in order to preserve the original versions.

The parameters for the express route generation process are defined and explained in the notebook file.

## Solution Log Editing

This is a set of Python functions for editing solution logs between trial sets. Includes the following functions:

* `log_merge(log_in1, log_in2, log_out)`: Accepts file paths to two existing solution logs and an output file path. Merges the two input logs into a single output log by combining all entries.
* `feasibility_update(log_in, user_cost, log_out)`: Accepts file paths to a solution log file, user cost data file, and an output file path. Reads the initial user cost, percentage increase, and user cost component weights from the user cost file and uses it to re-evaluate the feasibility of all solution log entries.
* `solution_expand(log_in, log_out, elements)`: Accepts file paths to an existing solution log file and an output file, as well as a number of elements. Generates a copy of the solution log with the specified number of `0`'s appended to the solution vectors. For use in converting an initial solution log into one usable by the express route version.
* `solution_contract(log_in, log_out, elements)`: Accepts file paths to an existing solution log file and an output file, as well as a number of elements. Generates a copy of the solution log with the specified number of elements truncated from the solution vectors. If any truncated element is nonzero, the log entry is dropped since the corresponding solution is no longer feasible. For use in converting an express route log to one usable in the initial version.
* `clear_unknown(log_in, log_out)`: Accepts file paths to an existing solution log file and an output file. Generates a copy of the given solution log with all unknown entries (feasibility status `-1`) dropped.
* `lookup(log, sol)`: Accepts a solution log and a solution string and returns the solution log row.
* `rewind(iteration, event_in, event_out, memory_in, memory_out)`: Accepts an iteration number, event log input/output paths, and memory log input/output paths. Alters the event log and memory log in order to rewind the search process to the specified iteration.

## Solution Analysis

This is part of the main C++ program for analyzing the main solution algorithm outputs. Basic statistics are compiled for the solution log, and the final solution is processed to show which elements have changed by the most.
",0,0,2,0,transportation,"[math, mathematics, operations-research, optimization, research, research-paper, research-project, transit, transportation, urban-planning]",00000
411,hha-lines,moinahoi,N/A,https://github.com/moinahoi/hha-lines,https://api.github.com/repos/moinahoi/hha-lines,Website to provide a simple way of finding out if a certain transportation line is operated by the Hamburger Hochbahn.,"# HHA-Lines

This project is to provide a simple way of finding out if a certain transportation line is operated by the Hamburger Hochbahn.

Color scheme inspired by https://www.hvv-switch.de/

Every line within the operation of the Hamburger Hochbahn is `green`, otherwise `red` (VHH, S-Bahn).

# Pre-Requisites

Nothing. No seriously: No build tool needed. It's just vanilla javascript and basic HTML plus CSS.

# Retrieving HHA lines

Fetch all HVV lines from GTI (Geofox):

```
GET /gti/public/listLines
```

You can filter HHA lines via JSONPath:
```
$.lines[?(@.carrierNameShort=='Hochbahn')].name
```

Strip unwanted chars and whitespaces.

# Some usefull features

- The size of the input as well as the actual font size is calculcated based on the innerHeight / innerWidth value of the window.
- The font-size uses a new `--vhw` unit which is always the lower of the innerHeight / innerWidth value.
- PWA for offline availability

# What's next

Any suggestions?

",0,0,1,0,transportation,"[hamburger-hochbahn, hha-lines, transportation]",00000
412,ggr424-2022,jamaps,N/A,https://github.com/jamaps/ggr424-2022,https://api.github.com/repos/jamaps/ggr424-2022,Course material for Transportation Geography & Planning (GGR424),"Course material for **Transportation Geography & Planning** (GGR424), a 4th year course running from 01/2022 to 04/2022 in the Department of Geography & Planning at the University of Toronto 

![image info](./classes/0/greenwood_2021.jpg)
",0,0,1,0,transportation,"[geography, planning, teaching, teaching-materials, transportation]",00000
413,gohafas,jo-m,N/A,https://github.com/jo-m/gohafas,https://api.github.com/repos/jo-m/gohafas,Go API client for HAFAS (Public transport API),"# Go API client for HAFAS

Currently, only stop search and stationboard endpoints are implemented.
The only API which has been tested is the [ZVV](https://www.zvv.ch/) one.

It has the base URL <https://zvv.hafas.cloud/bin> and a nice web
interface at <https://online.fahrplan.zvv.ch/bin/stboard.exe>.

## HAFAS

Read more about it here:

- <https://de.wikipedia.org/wiki/HAFAS>
- <https://administrator.de/knowledge/hafas-fahrplanauskunft-api-sammlung-177145.html>
- <https://gist.github.com/derhuerst/2b7ed83bfa5f115125a5>

## Usage and example binary

See the example CLI utility in `cmd/stationboard` for example usage.

```
$ go run ./cmd/stationboard/ --help
List next departures for a public transport stop.

Usage: stationboard [--timeout T] [--max-results N] [STOP]

Positional arguments:
  STOP                   stop name, use cmd/findStops to find stops

Options:
  --timeout T, -t T      API timeout [default: 5s]
  --max-results N, -n N
                         max number of results [default: 5]
  --help, -h             display this help and exit

$ go run ./cmd/stationboard/ 'Zürich HB'
Next departures for Zürich HB
🚊 Tram 13 to Zürich, Hardturm
   In 0 minute(s) (27.11.22 15:38)
🚆 InterCity 3 to Chur
   In 0 minute(s) (27.11.22 15:38)
   Platform: 8
🚆 RegioExpress  to Aarau
   In 0 minute(s) (27.11.22 15:38)
   Platform: 15
🚆 S-Bahn S4 to Langnau-Gattikon
   In 0 minute(s) (27.11.22 15:38)
   Platform: 21
🚊 Tram 4 to Zürich, Bahnhof Tiefenbrunnen
   In 0 minute(s) (27.11.22 15:38)
   Real time: 1 (0+1) platform
```
",0,0,2,0,transportation,"[go, golang, hafas, hafas-client, public-transport, transportation]",00000
414,JLKS-Inc,jlksinc,N/A,https://github.com/jlksinc/JLKS-Inc,https://api.github.com/repos/jlksinc/JLKS-Inc,"Everything JLKS, Inc Related","**JLKS, Inc | Trucking & Logistics Company**

JLKS is Trucking & Logistics Company. We connect revolutionizing ideas and hard working professionals to shape a future-proof Trucking and Logistics.

We are hiring company drivers and owner operators. If you'd like to find out more about our programs come visit us at: https://www.jlks.org/

We also post articles and guides that are related to trucking and logistics industry. You can see more here: https://www.jlks.org/blog/
",0,0,1,0,transportation,"[logistics, supply-chain, transportation, trucking]",00000
415,Autonomous-Robot-for-Transportation,udaysavaria,N/A,https://github.com/udaysavaria/Autonomous-Robot-for-Transportation,https://api.github.com/repos/udaysavaria/Autonomous-Robot-for-Transportation,Autonomous Robot for Transportation was developed in Arduino and a windows system. I developed it as a part of the senior year project in 2014. ,"# Autonomous-Robot-for-Transportation
Autonomous Robot for Transportation was developed in Arduino and a windows system. I developed it as a part of the senior year project in 2014. 

Autonomous Robot For Transportation

connections

Encoders:

left Encoder    -    Arduino Pin 2

Right Encoder   -    Arduino Pin 3

Motors:

Left Motor Positive   -   Arduino Pin 10

Left Motor Negative   -   Arduino Pin 11

Right Motor Positive  -   Arduino Pin 5

Right Motor Negative  -   Arduino Pin 6

Ir Tx-Rx Used for Accident Avoidance:

Ir Sensor Pin  -    Arduino pin A0
",0,0,1,0,transportation,"[arduino, autonomous, encoder, robot, robotics, transportation]",00000
416,PTX-bus-stop-parser,mattlin4567,N/A,https://github.com/mattlin4567/PTX-bus-stop-parser,https://api.github.com/repos/mattlin4567/PTX-bus-stop-parser,A json parser for ptx.transportdata bus stops base on python 3.4,"# ptx-transportdata-bus-stops-parser

### intro
This parser can only parse .json file from [公共運輸整合資訊平台](http://ptx.transportdata.tw), you will get explicit information of following data:
 - 台北市公車站牌
 - 新北市公車站牌
 - 桃園市公車站牌
 - 台中市公車站牌
 - 台南市公車站牌
 - 高雄市公車站牌

The ouput file contains stop names in Chinese, English and position datas of longitude, latitue.
### Usage
Put .json file which download from [站牌資料](http://ptx.transportdata.tw/MOTC/v1/Bus/Stop/) in the ""input"" folder, and simply run:
```sh
$ python parser.py
```
The results will be created in ""output"" folder with pre suffix 'parsed_'.
### Results
Source json:
```sh
[
  {
    ""StopUID"": ""string"",
    ""StopID"": ""string"",
    ""AuthorityID"": ""string"",
    ""StopName"": {
      ""Zh_tw"": ""string"",
      ""En"": ""string""
    },
    ""StopPosition"": {
      ""PositionLat"": 0,
      ""PositionLon"": 0
    },
    ""StopAddress"": ""string"",
    ""UpdateTime"": ""string""
  }
]
```
Output json:
```sh
[
  {
    ""StopName"": {
      ""Zh_tw"": ""string"",
      ""En"": ""string""
    },
    ""StopPosition"": {
      ""PositionLat"": 0,
      ""PositionLon"": 0
    }
  }
]
```
License
----

MIT",0,0,2,0,transportation,"[bus, json, opendata, python, transportation]",00000
417,PSL-Bipedal,ankur-gos,N/A,https://github.com/ankur-gos/PSL-Bipedal,https://api.github.com/repos/ankur-gos/PSL-Bipedal,Work on creating models for the LINQS bipedal project,"# PSL-Bipedal

Creating a model for finding frequent commute information.

## Requirements
- Python 2.7

## How to run

1. Setup config.py, set important paths
2. Install python packages from requirements.txt
```
pip install -r requirements.txt
```
3. Run build.py

```
usage: build.py [-h] [-n] [-g]

Run inference to find out frequent trips

optional arguments:
  -h, --help          show this help message and exit
  -n, --nopreprocess  Do not do preprocessing, just run inference
                      (preprocessing often needs to be done only once).
  -g, --geosheets     Create a geosheets friendly anchor output
```


",0,0,1,0,transportation,"[bipedal, machine-learning, psl-bipedal, transportation]",00000
418,tram-map,mblaszkiewicz,N/A,https://github.com/mblaszkiewicz/tram-map,https://api.github.com/repos/mblaszkiewicz/tram-map,🇬🇧 Coming soon to your browsers 🇩🇪 Demnächst in diesem Internetbrowser,"# Map of Krakow Trams

🇬🇧 Coming soon to your browsers
🇩🇪 Demnächst in diesem Internetbrowser
",0,0,0,1,transportation,"[maps, transportation, transportation-network]",00000
419,bd2-transport-app-gui,moozeq,N/A,https://github.com/moozeq/bd2-transport-app-gui,https://api.github.com/repos/moozeq/bd2-transport-app-gui,"Java FX GUI for bus transport application allowing to display info about stops, lines and connections","# BD2_AppGUI
GUI for database application allowing to display a dozen information
",0,0,1,0,transportation,"[bd2, database, gui, javafx, transportation]",00000
420,bart-hourly-dataset-parser,jlperona,N/A,https://github.com/jlperona/bart-hourly-dataset-parser,https://api.github.com/repos/jlperona/bart-hourly-dataset-parser,Parses San Francisco BART hourly origin-destination data into graph files.,"# bart-hourly-dataset-parser

Parses San Francisco BART hourly origin-destination data into graph files.
For a Shiny application that is heavily based on this, see [`bart-passenger-heatmap`](https://github.com/jlperona/bart-passenger-heatmap).

## Background

### Reasoning

This script is designed to parse BART hourly origin-destination files and output weighted graph files.
Parsing these into graph files is useful for visualizing the BART network, due to the differing edge weights.
The origin-destination data is provided on [their website](https://www.bart.gov/about/reports/ridership), available starting from 2011-01-01.

### Script

The script does the following:

1. Parses an input graph to set up the network topology.
2. Reads in the hourly data line by line.
3. For each origin-destination pair, calculate the shortest path between the two stations.
    * Due to the current topology of the network, there will only ever be one shortest path.
4. Add the number of passengers to each edge on the shortest path.
5. Output the graph file, in the desired format.

## Python

### Version

This is a Python 3 script.

### Dependencies

The script uses the following packages that aren't provided in base Python:

* `networkx` for parsing the input graph.
* `pynumparser` for range parsing the hour and weekday arguments.

Both of these can be found on `pip`.
If you'd like to set up a virtual environment, the typical code to do so is below:

```
python3 -m venv env
source env/bin/activate
python3 -m pip install -r requirements.txt
```

## Usage

    python3 bart-hourly-dataset-parser.py [-h] [--flags] input.graph bartdata.csv output.graph

### Flags

The following flags are available.
For more information, use the `-h` flag when running the script.

#### Subsetting by Hour

`--hour` allows you to subset the input data and choose hours that you want to keep.
This uses 24 hour format, to match the input data style.
Multiple ranges are allowed.
Here is an example of a valid subset: 0-12,15,19-21,23.

#### Subsetting by Weekday

`--weekday` allows you to subset the input data and choose only the weekdays that you want to keep.
The numbering matches the system used in Python's `datetime` package.
Monday corresponds to 0, and Sunday corresponds to 6.
Multiple ranges are allowed.
Here is an example of a valid subset: 0-2,4,6.

#### Subsetting by Date

`--startdate` and `--enddate` allow you to subset the input data and choose a range of dates that you want to keep.
If both flags are not provided, the script will parse all data in the input CSV.
The script expects ISO 8601-style dates.
Therefore, 25 January 2016 corresponds to 2016-01-25.

#### Graph Options

`-d` and `--directed` allow you to specify that a directed graph should be output.
By default, the script defaults to an undirected graph.

`-k` and `--keepweights` allow you to keep the original weights from the input graph file.
The script will then add on the weight from the input CSV.
This is useful if you are, say, trying to grab data from multiple years, and don't want to combine the data files for each year by hand.
This flag shouldn't be used for the first run, when initially generating data from the basic topological graph.
The edge weights will be slightly wrong in that case.

### Positional Arguments

#### `input.graph`

The representation of the BART network that serves as the basis to calculate shortest paths.
An example file has already been provided at `data/bart.net`.
Note that this file will need to be modified to keep up with expansions in the BART network.
See the **Dataset Caveats** section below.

#### `bartdata.csv`

The CSV files provided by BART on [their website](https://www.bart.gov/about/reports/ridership).
The script does a decent job in offering options to subset the data.
If you need more detailed subsetting options, I recommend doing so with another program.

#### `output.graph`

The output graph file.
Currently, the following file formats are supported:

* GEXF
* Pajek NET

NetworkX supports many other graph file formats.
Adding these would be fairly simple.

## Dataset Caveats

The following sections were written and are true as of 2021-07-31.
Changes to the BART network will change the validity of the following sections.

### Network Changes

BART has been changing since the start of their data set collection.
In particular, the following changes have been made since 2011-01-01, the first day available in the dataset:

#### West Dublin / Pleasanton

The *West Dublin / Pleasanton* station opened for revenue service on 2011-02-19.
Dates before this (of which there are not that many) will have traffic identical on both sides of the station, as this is an infill station.

#### Oakland International Airport (OAK)

The *Oakland International Airport (OAK)* station opened for revenue service on 2014-11-22.
Dates before this will have no traffic to this node, as this is a terminal station.
This may pose a problem for certain programs, such as Gephi.

#### Warm Springs / South Fremont

The *Warm Springs / South Fremont* station opened for revenue service on 2017-03-25.
Dates before this will have no traffic to this node, as this is a terminal station.
This may pose a problem for certain programs, such as Gephi.

#### eBART

The eBART extension to *Pittsburg Center* and *Antioch* opened for revenue service on 2018-05-26.
Dates before this will have no traffic to either of these stations, as these nodes extend past a terminal station.
This may pose a problem for certain programs, such as Gephi.


#### Milpitas and Berryessa

The *Milpitas* and *Berryessa* stations opened for revenue service on 2020-06-13.
Dates before this will have no traffic to these nodes, as Berryessa is a terminal station.
This may pose a problem for certain programs, such as Gephi.

### Future Network Changes

There are also changes that have been made or planned since the last day available in the dataset.

#### BART to Silicon Valley

The Silicon Valley BART extension to the following stations are currently planned to open in 2030:

* *Alum Rock*
* *Downtown San Jose*
* *Diridon / Arena*
* *Santa Clara*

The input network file and `station_names` dictionary in `utils/input.py` will need to be modified to support these stations when they open.

### Network Changes by Time

The BART network changes at certain hours of the day.
The following lines run to *Millbrae* and *San Francisco International Airport (SFO)*:

* Antioch - SFO / Millbrae
* Richmond - Daly City / Millbrae

During weekdays before 21:00, the Richmond - Daly City / Millbrae continues on from Daly City to Millbrae, skipping SFO.
After 21:00 on weekdays, and on weekends, that line terminates at Daly City.
Instead, a separate line (the SFO-Millbrae Shuttle) runs instead.

In order to be completely correct, the script should take this into account.
Traffic that has Millbrae as one of its starting or ending points should be checked to see what day and time it occurs in.
If the traffic occurs before 21:00 on a weekday, only the San Bruno - Millbrae edge should have weight added to it.
At the other times, both the San Bruno - SFO and SFO - Millbrae edges should have weight added to them.

This is not a significant change, but I have not added it to the script.
Thus, results involving those stations are slightly incorrect.

## Future

I have a couple of changes in mind for the future:

* Add new BART expansions to the script
* Update the script logic to account for the Millbrae and SFO edge change, described above
* Add the ability to read and write the rest of the graph file formats that NetworkX supports
",0,0,1,0,transportation,"[bart, networkx, python, transportation]",00000
421,commute,PetraOleum,N/A,https://github.com/PetraOleum/commute,https://api.github.com/repos/PetraOleum/commute,There and Back Again competition entry,"# How did Kiwis commute in 2018?

This is an R Shiny and Leaflet data visualisation of the [commuter data](https://datafinder.stats.govt.nz/data/category/census/2018/commuter-view/) from the 2018 NZ Census of Populations and Dwellings; you can see it in action [here](https://shiny.petras.space/commute/). It serves as my entry for the 2020 [There and Back Again](https://www.stats.govt.nz/2018-census/there-and-back-again-data-visualisation-competition) data viz competition. The code for the visualisation itself is in the `viz/` folder, however note that it requires the code in `process.R` to be run first to produce the `.RData` file, along with the separate download of a [SA2 shapefile](https://datafinder.stats.govt.nz/layer/92212-statistical-area-2-2018-generalised/) (in WGS projection, and possibly simplified by the code in `maps.R`).

## Issues

Some problems with the code, for future personal reference.

### The Chatham Islands

Unfortunately I had to remove the Chatham Islands from the map, despite it being in the dataset! This was because their position on the far side of the 180° meridian causes issues with leaflet maps on WGS projections, while I was [unable to get an alternative projection to work](https://github.com/rstudio/leaflet/issues/693).

### Hovering

If you hover the cursor over a region, and then over the sea or a lake, the shiny code is capable of registering that you're not over that same region still. *However* if you then return to the same region it doesn't recognise that. This seems to be a limitation of how the shiny events stuff works. There might be something I can do with resetting the `input$`, but I'll look into it later.",0,0,1,0,transportation,"[chloropleth, commuting, data-visualisation, leaflet, new-zealand, public-transport, r-shiny, transportation]",00000
422,ATO-Impact-Tool,WFRCAnalytics,WFRCAnalytics,https://github.com/WFRCAnalytics/ATO-Impact-Tool,https://api.github.com/repos/WFRCAnalytics/ATO-Impact-Tool,WFRC tool for assessing changes in Access to Opportunity (ATO) resulting from regional mobility investments,"# ATO Impacts Tool

A Network Analyst based tool for assessing changes in Access to Opportunity (ATO) resulting from regional mobility investments.

### Tool Authors

* [Mark Egge](mailto:egge@highstreetconsulting.com) - High Street
* Anna Batista - High Street
* Bert Granberg - WFRC
* Julie Bjornstad - WFRC
* Josh Reynolds - WFRC


## Motivation

A tool for calculating access to opportunity (ATO) as defined and implemented by WFRC: the number of jobs and households ""accessible"" to a given traffic analysis zone (TAZ) where nearer jobs and households count more than jobs and households further away. Learn more about [Access to Opportunities](https://wfrc.org/maps-data/access-to-opportunities/)

ATO can be calculated for the road and transit networks by estimating travel times (via car or transit) between TAZs and then weighting the number of nearby jobs and households by a travel-time decay curve. The result is an estimate for each TAZ of the number of jobs and households ""accessible"" from a given TAZ. Individual TAZ access can be summed across the region for an estimated measure of access. The impacts of projects that improve mobility (and thereby accessibility) are estimated by assigning estimated reductions in travel times along calculated routes and tabulating the increase in the number of jobs and households accessible within given travel times.

## Requirements

The tool is implemented through Esri ArcGIS Pro Network Analyst using Python and Jupyter Notebooks.

* ArcGIS Pro (Advanced)
* Network Analyst Extension
* Familiarity with Python and Jupyter notebooks

## Scoring Projects

![Process Flow](doc/process_flow.png)

1) Run `1_network_setup.ipynb` and `2_taz_setup.ipynb` once. This sets everything up, including baseline scores and the template network dataset that will be modified for the scenarios. 
2) For each project, step through the appropriate 3_*.ipynb notebook corresponding to the appropriate mode. I find this take 5 – 15 minutes per project, depending on the complexity of the project.
3) Then, run [4_score.ipynb]. This notebook walks through all of the modified scenario networks in the scenario folder and scores each, writing the output results to tables within the file geodatabase. The “scores_summary” table contains the TAZ-level results. If a file geodatabase already contains a “scores” table it is skipped. Then, the script summarizes the ATO improvement scores for all scored scenarios. 

An analyst or planner could quickly create scenario networks for a bunch of projects and then let the scoring notebook run overnight.

Scores for each scenario represent the weighted average TAZ-level change in access for each category:

* Average TAZ-level increased access to jobs, weighted by households within the TAZ
* Average TAZ-level increased access to households, weighted by jobs within the TAZ
* Average TAZ-level increased ATO (using WFRC’s ATO formula), weighted by jobs and households within the TAZ)
* Average TAZ-level increased access to jobs, weighted by households within the TAZ, for Poverty Equity Focus Area TAZs
* Average TAZ-level increased access to jobs, weighted by households within the TAZ, for Minority Equity Focus Area TAZs
* Average TAZ-level increased access to jobs, weighted by households within the TAZ, for Zero Car Household Equity Focus Area TAZs
* Average TAZ-level increased access to jobs, weighted by households within the TAZ, for All Equity Focus Area TAZs

Scores for each scenario are stored into an export CSV: `scenario\scenario_scores.csv` for transportation projects and `scenario\land_use_scenario_scores.csv` for land use projects. 


## Network Analyst Bug - Invalid Network Travel Times
There is an error in Esri's Network Analyst suite that occassionally causes field values in a network dataset to get transposed between fields, resulting in nonsensical impedance values (refer to Esri Case #02899742). This project includes an embedded diagnostic to detect invalid networks.

The `test` function tests for a correct network build by solving a simple routing problem between two points defined in `shp\test_points\test_points.shp`. If these points are not located within the service area of the network dataset, the test will fail.

In general, if the network dataset fails, the cure is simply to rebuild the network dataset using `ato.build(nd)`.

# Operating the Tool

Baseline Setup will be completed once per year. 

Once the baseline setup is complete, one scenario will be created for each candidate project. Scenarios can be built out quickly—each scenario should only take a few minutes to build out. 

Finally, the scoring notebook scores the defined scenarios. Scoring takes 5 – 20 minutes per scenario. All unscored scenarios will automatically be scored when the scoring note book runs. A suggested workflow would be to define a set of new scenarios, and then let the scoring notebook run over the lunch hour or overnight!

## Baseline Setup

### Network Setup - 1_network_setup.ipynb

To set up the multimodal transportation network, 
1. Download Multimodal network dataset from https://gis.utah.gov/data/transportation/street-network-analysis/ and extract to the `shp` folder.
3. Obtain a copy of a TDM export from WFRC and place in the `shp` folder

Run 1_network_setup.ipynb (requires Network Analyst)

### TAZ Setup - 2_taz_setup.ipynb

1. Download [Wasatch Front TAZs in File Geodatabase format from WFRC](https://data.wfrc.org/datasets/wfrc::access-to-opportunities-work-related-taz-based/about). Extract to `taz.gdb` and place in the `shp` folder

Run `2_taz_setup.ipynb` (requires ArcGIS Pro Standard or Advanced). This will calcualte the baseline ATO.

## Scenario Setup

For each project type, choose the appropriate notebook and follow the embedded instructions. Supported project types:

### Roadway Projects - 3_mod_drive.ipynb

* New Connection
* Capacity Expansion
* Operational
* New Interchange
* Grade-Separated Crossing

### Transit Projects - 3_mod_transit.ipynb

* New Route
* Service Improvement

### Cycling Projects (Work in Progress) - 3_mod_cycling.ipynb

* Shared Use Path
* Protected Bike Lane
* Buffered Bike Lane
* Bike Boulevard
* Bike Lane

### Land Use Projects - 3_mod_land_use.ipynb

* Absolute Change in Number of Jobs
* Absolute Change in Number of Households
* Percent Change in Jobs
* Percent Change in Households

## Scoring

Finally, run `4_score.ipynb` to generate the scenario scores.
",0,0,4,0,transportation,"[accessibility, mobility, transportation]",00000
423,dev-academy-2023-exercise,JanneImmonen,N/A,https://github.com/JanneImmonen/dev-academy-2023-exercise,https://api.github.com/repos/JanneImmonen/dev-academy-2023-exercise,"A full-stack train journey planner application built with React, TypeScript, Node.js, and PostgreSQL.","# Dev Academy 2023 Exercise

This is a project submission for Dev Academy 2023. The application is a web app that displays information about bike sharing stations and their journey data.

## Technologies

- Backend: Node.js, Express, PostgreSQL, TypeScript
- Frontend: React
- Source Code: https://github.com/JanneImmonen/dev-academy-2023-exercise

## Setup

### PostgreSQL Setup

Before you can run the application, you need to set up a PostgreSQL database and user. Follow these steps to set up PostgreSQL for this application:

1. Install PostgreSQL on your system, if you haven't already. You can download the installer from the official PostgreSQL website: https://www.postgresql.org/download/

2. After installation, open the psql command line tool (on Windows, you can search for ""pgAdmin"" or ""psql"" in the Start menu).

3. Create a new database and user for the application:

CREATE DATABASE mydb;
CREATE USER myuser WITH ENCRYPTED PASSWORD 'mypassword';
GRANT ALL PRIVILEGES ON DATABASE mydb TO myuser;

Replace mydb, myuser, and mypassword with your desired database name, username, and password, respectively.

4. Now that you have created the database and user, update the .env files in both the backend and frontend folders with the necessary information. The .env files should contain the following variables:

DB_HOST=localhost
DB_PORT=5432
DB_NAME=mydb
DB_USER=myuser
DB_PASSWORD=mypassword

Replace mydb, myuser, and mypassword with the database name, username, and password you chose earlier.

5. With the database set up, you can now run the importData.ts script in the backend/src folder to import station and journey data into the database:

cd backend/src
ts-node importData.ts

If you encounter any issues running the script, try running it with the following command:

powershell -ExecutionPolicy Bypass -Command ""ts-node importData.ts""

### Backend

1. Run the following command to install the required dependencies: npm install

2. Set up your environment variables in a `.env` file in the root folder of your project. You can use the `.env.example` as a reference.

3. Start the backend server by running: npm start

If you encounter any issues, you can also use this command: powershell -ExecutionPolicy Bypass -Command ""ts-node src/index.ts""

### Frontend

1. Change to the frontend folder and install the required dependencies:

cd frontend
npm install

2. Set up your environment variables in a `.env` file in the frontend folder. You can use the `.env.example` as a reference.

3. Start the frontend server by running: npm start

The frontend will be running at `localhost:3001`.

## Tests

The project includes tests for both the Journey Controller and Station Controller using `supertest`. To run the tests, simply run the following command in the root folder of your project: npm test

## Repository Structure

The main files and folders in this project are:

- `backend/src/`: The source code for the backend server
- `frontend/src/`: The source code for the frontend React application
- `backend/src/importData.ts`: A script to import station and journey data into the database
- `frontend/src/App.tsx`: The main entry point for the React application, which includes routing and component rendering
- `frontend/src/components/`: Contains the various React components used in the application

CSS files for styling the frontend are also included.

### .csv files

Three csv-files are too big, so you can download them from the links found in the files so that you can test your own project, if you want to clone this to your repository.

## Application Components

### Backend

-Express server for handling API requests
-PostgreSQL database for storing station and journey data
-importData.ts script for importing station and journey data into the database

### Frontend

-React application with the following components:
-StationList: Displays a list of stations
-JourneyList: Displays a list of journeys based on a specific station ID
-Search: Allows users to search for journeys by station ID
-StationDetails: Displays detailed information about a station

## Authors

[Janne Immonen](https://github.com/JanneImmonen)

## License

This project is licensed under the [MIT](https://opensource.org/license/mit/) License
",0,0,1,0,transportation,"[full-stack, nodejs, postgresql, react, train-journey-planner, transportation, typescript, web-application]",00000
424,FerryBooking,AK1o9,N/A,https://github.com/AK1o9/FerryBooking,https://api.github.com/repos/AK1o9/FerryBooking,"Being one of my first relatively big projects, this software application is used for registering customers, booking ferry seats and printing reservation tickets for each seat. Includes both business and economy class seats. ","# FerryBooking
Being one of my first relatively big projects, this software application is used for registering customers, booking ferry seats and printing reservation tickets for each seat.
Includes both business and economy class seats. Programmed entirely in Python 3.7. 

## Features
- **Purchasing Module:** Reserve or purchase seating tickets in either business class or economy class boats or ferries and then select a departure time.

![image](https://github.com/AK1o9/FerryBooking/assets/96708800/111bd038-26ea-4530-909e-1963536b3e0a)

- **Printing Module:** Print the ticket after the user purchases it and enters their information.

![image](https://github.com/AK1o9/FerryBooking/assets/96708800/b4087093-32c7-447e-b8c7-37cfede0adb4)

- **Seat Arrangement (*or Viewing*) Module:** View seating arrangements (shows seats that are reserved and those that are available) and allow users to change their seats either within the same boat or another. Additionally, users may also change their departure times.

![image](https://github.com/AK1o9/FerryBooking/assets/96708800/fa1e7f5d-3ea8-4c4d-8947-27c51e142f00)

![image](https://github.com/AK1o9/FerryBooking/assets/96708800/be9244b3-d784-4e11-ae1f-7d6bbb6e0682)
",0,0,1,0,transportation,[transportation],00000
425,public_transport_app_Flutter,Yomna-J,N/A,https://github.com/Yomna-J/public_transport_app_Flutter,https://api.github.com/repos/Yomna-J/public_transport_app_Flutter,A Simple Public Transport Application UI using Flutter,"# Public Transport App - Flutter
An app that allows the user to check the available transports and buy tickets, at the home page the user account information is presented in addition to the transports. After pressing ""select"" of transport, a new page will open and shows all the schedules of each trip. Selecting a schedule will allow the user to buy and view the details of that schedule including location, destination, time, and price.

# UI 
The [app UI](https://www.freepik.com/free-vector/app-public-transport-template_10276877.htm) is a <a href=""https://www.freepik.com/vectors/menu"">Menu vector created by freepik - www.freepik.com</a>

![UI Image](/ui.jpg)
# Screenshot 
![Screenshot](/screenshot.png)
",0,0,1,0,transportation,"[dart, flutter, flutter-examples, flutter-ui, transport, transportation]",00000
426,digitransit-stoptimes-android,sjakthol,N/A,https://github.com/sjakthol/digitransit-stoptimes-android,https://api.github.com/repos/sjakthol/digitransit-stoptimes-android,An Android application for accessing real-time departure information of public transportation in the Helsinki metropolitan area.,"An Android application for accessing real-time departure information of public transportation
in the Helsinki metropolitan area.

The data is provided by [HSL](https://www.hsl.fi/en) through the
[Digitransit](https://digitransit.fi/en) platform.

## Features
* Search stops by their name
* View stops near your current location
* View upcoming departures from a stop with real-time predictions
* View number of available citybikes in citybike stations
* Save favorite stops for easy access

![Screenshot](https://sjakthol.github.io/stoptimes-screenshots.png)",0,0,3,0,transportation,"[android, digitransit, hsl, java, transportation]",00000
427,Route-Scheduling-Optimization,suzanaiacob,N/A,https://github.com/suzanaiacob/Route-Scheduling-Optimization,https://api.github.com/repos/suzanaiacob/Route-Scheduling-Optimization,Optimization project using location data to schedule transportation routes,"# Route Scheduling Optimization

This is an optimization project using location data to schedule transportation routes.

This project was completed aliongside my MIT colleagues using real data from a logistics company. The goal was to schedule optimal transportation routes which reach a series of clients and arrive at the final destination according to pre-defined constraints (e.g. specific arrival and departure times, multiple arrivals at specific clients). The objective was to optimize for early arrivals at the final destination. PLease see the **Logistics Route Optimization - Presentation** file for an overview of the project

The project has three parts:
- Data cleaning and exploratory data analysis (developed in R and Tableau)
- Obtaining location and distance data using the Google Maps API (written in JavaScript): https://developers.google.com/maps/documentation/javascript/distancematrix 
- Developing the optimization algorithm (written in Julia using Jump and Gurobi)

The data used is confidential client data (primarily client addressed), but I am sharing the code which generally could be applied to a route scheduling with any addresses.  

",0,0,2,0,transportation,"[google-maps-api, gurobi, julia-language, optimization, transportation]",00000
428,Motor-Vehicle-Crash,shriramkarthikeyan,N/A,https://github.com/shriramkarthikeyan/Motor-Vehicle-Crash,https://api.github.com/repos/shriramkarthikeyan/Motor-Vehicle-Crash,An analysis of motor vehicle crashes in the state of Massachusetts. This is a project done as a part of our Computation and Visualization in Analytics class at Northeastern University.,"# Motor-Vehicle-Crash

This project was done as a part of our Computation and Visualization course at Northeastern University.

Owners of this project:
Shriram Karthikeyan
Thejaswini Anupindi

The goal of this project to perform an explorotary analysis to find interesting insights and develop an inital scoring system to rate counties in the state of Massachusetts based on the number of crashes subsetted by multiple factors such as (driving under the influence of alcohol and drugs, whether the driver used a seat belt, whether the traffic device malfunctioned, etc..)


Files:
MVC_Mass.rmd: Contains all the analysis done in R. Also contains the code behind the scoring system.
",0,0,1,0,transportation,"[analysis, car, data, insurance, transportation]",00000
429,data_mining_fall2020,annemariedonohue,N/A,N/A,https://api.github.com/repos/annemariedonohue/data_mining_fall2020,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C166:092A:6F7DF4:E66D20:65224119.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,transportation,"[N, /, A]",00000
430,Project-Day-1,Garriofx,N/A,https://github.com/Garriofx/Project-Day-1,https://api.github.com/repos/Garriofx/Project-Day-1,Real Estate project on house price prediction.,"# Project-Day-1 - Predicting the future of real estate market
The aim of this project is to provide the best counties/areas in the USA to invest in for a national real estate developer, individual buyers, banks looking for a place to development of new apartment building or to purchase. Another goal is to predict the house prices in a county in the next few months. Price prediction using Machine learning algorithms XGBoost and Linear Regression considering factors such as Median income in a county, Crime rate in that county, public schools, hospitals, hospital ratings and unemployment rate in the county. Module moved to noteworthy Python libraries and the usefulness of libraries such as Pandas, Numpy, Seaborn, and Matplotlib.

# Prepared By
Marjorie Lawrence 

# Introduction
Purchasing a house is a big decision in a person’s life and needs a considerable amount of thought and research. One would like to buy a house at the best rate and minimum risk and would like it to be the best investment for the future. Various online websites, real estate agents and realtors try to guide home buyers by letting them compare different houses available for purchase. The unprecedented upheaval caused by the coronavirus will inevitably shift priorities and perspectives. Perhaps most profoundly, it could change how we all think about physical space and how it is shared with others. Whatever short-term contortions the property market goes through in response to the economic devastation wrought by this virus, real estate investors should not lose sight of long-term changes in behavior. These will inform how people live and work in the future, ultimately shaping the types of developments that are most desirable in a world that will never be quite the same.  Nowhere is this truer than in real estate investing, where technology, demographics, climate, and affordability are just some of the factors quickly reshaping how and where people live, work and play. Will secondary cities that have historically been overlooked but are attractive to dynamic young populations become popular? How will commercial real estate be affected by telecommuting and declining automobile ownership? Will climate change render waterfront property worthless or spur innovations that enable a different relationship to aquatic environments? These and many other questions are being pondered by investment committees worldwide.

# Motivation & Summary
Based on house prices predicted one can invest in real estate, find a county house better suited for their needs where they can buy a house. House buying and selling decision would become easier with the prediction done by this data science project. The stakeholders for the type of project will be:

a) Customers and Real Estate Agents — The real estate industry has long operated according to its own traditions, but the availability of huge volumes of data is revolutionizing the way the industry works. Big data analysis techniques are creating a new real estate market in which both customers and agents are better informed than ever before.

b) Companies — such as Zillow and Trulia can use this analysis to calculate an estimated value of the price that the home might attract based on factors like local schools, crime rates, income level, hospitals etc. and decide marketing strategy.

c) Banks — It’s not just consumers who are using big data to inform their house buying and selling decisions. Banks are also drawing on vast pools of data to predict the risk that a particular mortgage application could pose, using information about both the value of the home and the applicant’s financial situation and history. In addition, banks are also avoiding losing out on foreclosure and short sales, as big data is helping them to predict the maximum sale value that the market can bear.

# Questions Pondered by investment committes worldwide
is 2021 a good year to buy a house?
Where should one buy a house?
Will secondary cities that have historically been overlooked but are attractive to dynamic young populations become popular?
How will commercial real estate be affected by telecommuting and declining automobile ownership? 
Will climate change render waterfront property worthless or spur innovations that enable a different relationship to aquatic environments? 

# Data Cleanup & Exploration
Process of data cleanup in jupyter lab using python eliminating unnecessary data.

http://localhost:8888/lab/tree/gwu-virt-fin-pt-04-2021-u-c/03-Projects/Project-01/Picture1.jpg

# Modeling and calculations
Maplot
JupterLab (phyton)
Monte carlo
Plotly

# Datasets House Price Prediction
To predict house prices using supply-demand features, three main datasets have been used.

Federal Reserve Interest Rates (1954 - 2017)
Unemployment Rate by County in the USA (2000 - 2018)
Zillow economics data (County_time_series and Crosswalk)

# Data Source
Data.gov
US Census
Zillow
Public APIs
Awesome-APIs List
Medium APIs List

# Summary & Conclusions
The future of real estate will be driven by new technologies, buyer-agent relationships, and changing homeowner demographics. Real estate investors hoping to achieve success will need to learn to thrive amidst these changes. With new software to speed up closing timelines, online listing sites resulting in more informed buyers, and new age groups entering the real estate market, the industry is transitioning in big ways. Even expert predictions suggest impending market changes. All in all, when it comes to the future of real estate, investors have a lot to look forward to.
",0,0,1,0,transportation,"[best-states, median-house-prices, most-entertainment, realestate, school-district, transportation]",00000
431,Chiba-Urban-Monorail_Japan,RuinDig,N/A,https://github.com/RuinDig/Chiba-Urban-Monorail_Japan,https://api.github.com/repos/RuinDig/Chiba-Urban-Monorail_Japan,千葉都市モノレール Chiba Urban Monorail,"# Chiba-Urban-Monorail_Japan
CC-BY-4.0 - RuinDig/Yuki Uchida
<a href=""https://creativecommons.org/licenses/by/4.0/deed.ja""><img src=""https://user-images.githubusercontent.com/20723919/145936543-577c7705-90e2-4d56-ad5d-26b0fbcea02d.png"" /></a>

千葉都市モノレール、千葉県千葉市、日本 Chiba Urban Monorail, Chiba-city, Japan

# 2021年7月～2021年8月

![Chiba-Urban-Monorail_Japan_01](https://user-images.githubusercontent.com/20723919/123821290-3c6a6880-d936-11eb-9218-13ce7b661c93.jpg)

![Chiba-Urban-Monorail_Japan_02](https://user-images.githubusercontent.com/20723919/123821305-412f1c80-d936-11eb-917a-adfec0e4c3b6.jpg)

![Chiba-Urban-Monorail_Japan_03](https://user-images.githubusercontent.com/20723919/123821308-412f1c80-d936-11eb-82d3-d4f5526e47ba.jpg)

![Chiba-Urban-Monorail_Japan_04](https://user-images.githubusercontent.com/20723919/123821312-41c7b300-d936-11eb-869f-70687c7fad9e.jpg)

![Chiba-Urban-Monorail_Japan_05](https://user-images.githubusercontent.com/20723919/123821315-42604980-d936-11eb-84da-d0990a169f49.jpg)

![Chiba-Urban-Monorail_Japan_06](https://user-images.githubusercontent.com/20723919/123821316-42604980-d936-11eb-9783-ab6245a01340.jpg)

![Chiba-Urban-Monorail_Japan_07](https://user-images.githubusercontent.com/20723919/123821318-42f8e000-d936-11eb-9c4f-d1e79120c4ad.jpg)

![Chiba-Urban-Monorail_Japan_08](https://user-images.githubusercontent.com/20723919/123821321-42f8e000-d936-11eb-8607-a717db27f7ed.jpg)

![Chiba-Urban-Monorail_Japan_09](https://user-images.githubusercontent.com/20723919/123821323-43917680-d936-11eb-8a48-bf2be4ba5b9c.jpg)

![Chiba-Urban-Monorail_Japan_10](https://user-images.githubusercontent.com/20723919/123821324-43917680-d936-11eb-928e-fd6333604b44.jpg)

![Chiba-Urban-Monorail_Japan_11](https://user-images.githubusercontent.com/20723919/123821326-442a0d00-d936-11eb-9fb6-b163b4f4b8e4.jpg)

![Chiba-Urban-Monorail_Japan_12](https://user-images.githubusercontent.com/20723919/123821328-442a0d00-d936-11eb-8f9d-d6a827bc91c4.jpg)

![Chiba-Urban-Monorail_Japan_13](https://user-images.githubusercontent.com/20723919/123821331-44c2a380-d936-11eb-870f-c38425debfab.JPG)

![Chiba-Urban-Monorail_Japan_14](https://user-images.githubusercontent.com/20723919/123821334-455b3a00-d936-11eb-9562-c1c9150f089e.jpg)

![Chiba-Urban-Monorail_Japan_15](https://user-images.githubusercontent.com/20723919/123821336-455b3a00-d936-11eb-8853-0af4c03ef06d.jpg)

![Chiba-Urban-Monorail_Japan_16](https://user-images.githubusercontent.com/20723919/123821339-45f3d080-d936-11eb-9e24-f69166aceae5.jpg)

![Chiba-Urban-Monorail_Japan_17](https://user-images.githubusercontent.com/20723919/123821341-45f3d080-d936-11eb-916f-368827928087.jpg)

![Chiba-Urban-Monorail_Japan_18](https://user-images.githubusercontent.com/20723919/123821343-468c6700-d936-11eb-893b-54a3899b0f57.jpg)

![Chiba-Urban-Monorail_Japan_19](https://user-images.githubusercontent.com/20723919/123821347-468c6700-d936-11eb-84b2-38c796250a4d.jpg)

![Chiba-Urban-Monorail_Japan_20](https://user-images.githubusercontent.com/20723919/123821350-4724fd80-d936-11eb-9d70-81d7243f7767.jpg)

![Chiba-Urban-Monorail_Japan_21](https://user-images.githubusercontent.com/20723919/123821352-4724fd80-d936-11eb-9cc3-d4a856bdbc49.jpg)

![Chiba-Urban-Monorail_Japan_22](https://user-images.githubusercontent.com/20723919/123821354-47bd9400-d936-11eb-8f33-c43dd84c743c.jpg)

![Chiba-Urban-Monorail_Japan_23](https://user-images.githubusercontent.com/20723919/123821355-48562a80-d936-11eb-91d0-ffd1430a1b2d.jpg)

![Chiba-Urban-Monorail_Japan_24](https://user-images.githubusercontent.com/20723919/123821358-48562a80-d936-11eb-9fa4-028044c6f6b5.jpg)

![Chiba-Urban-Monorail_Japan_25](https://user-images.githubusercontent.com/20723919/123821362-48eec100-d936-11eb-82ff-9714f917e8ff.jpg)

![Chiba-Urban-Monorail_Japan_26](https://user-images.githubusercontent.com/20723919/123821364-48eec100-d936-11eb-8779-2d28d42a1355.jpg)

![Chiba-Urban-Monorail_Japan_27](https://user-images.githubusercontent.com/20723919/123821366-49875780-d936-11eb-8d1d-48cd6bed71ea.jpg)

![Chiba-Urban-Monorail_Japan_28](https://user-images.githubusercontent.com/20723919/123821367-4a1fee00-d936-11eb-91b4-72b24bc6f239.jpg)

![Chiba-Urban-Monorail_Japan_29](https://user-images.githubusercontent.com/20723919/123821368-4a1fee00-d936-11eb-916e-cd961fc03420.jpg)

![Chiba-Urban-Monorail_Japan_30](https://user-images.githubusercontent.com/20723919/123821370-4ab88480-d936-11eb-8c20-895a73bab680.jpg)

![Chiba-Urban-Monorail_Japan_31](https://user-images.githubusercontent.com/20723919/124343905-111f9c00-dc0a-11eb-94d5-7634b9256803.jpg)

![Chiba-Urban-Monorail_Japan_32](https://user-images.githubusercontent.com/20723919/124343906-1250c900-dc0a-11eb-8583-160a9d076136.jpg)

![Chiba-Urban-Monorail_Japan_33](https://user-images.githubusercontent.com/20723919/124343907-12e95f80-dc0a-11eb-9257-d8b8325f5937.jpg)

![Chiba-Urban-Monorail_Japan_34](https://user-images.githubusercontent.com/20723919/124343908-12e95f80-dc0a-11eb-8df2-9aec8084ba98.jpg)

![Chiba-Urban-Monorail_Japan_35](https://user-images.githubusercontent.com/20723919/124343909-1381f600-dc0a-11eb-9fca-1a9b9680245b.jpg)

![Chiba-Urban-Monorail_Japan_49](https://user-images.githubusercontent.com/20723919/128621607-7966ac54-1117-4e5b-990d-c66e4bced4fa.JPG)

![Chiba-Urban-Monorail_Japan_50](https://user-images.githubusercontent.com/20723919/128621610-5017faec-cec2-4c84-a53d-cdb810e563af.JPG)

![Chiba-Urban-Monorail_Japan_51](https://user-images.githubusercontent.com/20723919/128621611-79fac08d-9b75-45e8-9c14-82bc01c24919.JPG)

![Chiba-Urban-Monorail_Japan_52](https://user-images.githubusercontent.com/20723919/128621612-4377cd79-c04d-4691-b528-919fecede629.JPG)

![Chiba-Urban-Monorail_Japan_53](https://user-images.githubusercontent.com/20723919/128710192-6fa009f4-622b-4f49-9972-2631a7f40cbe.JPG)

![Chiba-Urban-Monorail_Japan_54](https://user-images.githubusercontent.com/20723919/128710190-4a8bc379-5170-4dbf-bce5-37f8c7d84ae7.JPG)

![Chiba-Urban-Monorail_Japan_55](https://user-images.githubusercontent.com/20723919/128710189-8a4f2a87-3689-4de4-aabe-b2723b58be06.JPG)

![Chiba-Urban-Monorail_Japan_56](https://user-images.githubusercontent.com/20723919/128710188-23a0d58d-6c50-43d5-a37a-f45ffcfef7bc.JPG)

![Chiba-Urban-Monorail_Japan_57](https://user-images.githubusercontent.com/20723919/128710186-943071a7-8802-4267-9b6f-e725ff13ed00.JPG)

![Chiba-Urban-Monorail_Japan_58](https://user-images.githubusercontent.com/20723919/128710185-16ab8bf3-6d34-42e4-8a60-1dca73343ae3.JPG)

![Chiba-Urban-Monorail_Japan_59](https://user-images.githubusercontent.com/20723919/128710184-4486841b-568e-4cbd-b91d-979a36196573.JPG)

![Chiba-Urban-Monorail_Japan_60](https://user-images.githubusercontent.com/20723919/128710180-0b81bdcb-1669-4d20-915f-05409c75b3b4.JPG)

![Chiba-Urban-Monorail_Japan_61](https://user-images.githubusercontent.com/20723919/128710178-262e44f2-2023-4322-8bf3-17cfa976c2d6.JPG)

![Chiba-Urban-Monorail_Japan_62](https://user-images.githubusercontent.com/20723919/128710176-ef348c64-0e53-48c3-ab88-b9ece768c639.JPG)

![Chiba-Urban-Monorail_Japan_63](https://user-images.githubusercontent.com/20723919/128710175-d1bc53e5-1889-4de7-925b-b013a0fb2ed1.JPG)

![Chiba-Urban-Monorail_Japan_64](https://user-images.githubusercontent.com/20723919/128710170-b089aaad-96ce-4357-9590-6a70d158de5b.JPG)

![Chiba-Urban-Monorail_Japan_65](https://user-images.githubusercontent.com/20723919/128710169-a909b178-77b9-42a8-8e03-049700d15967.JPG)

![Chiba-Urban-Monorail_Japan_66](https://user-images.githubusercontent.com/20723919/128710165-d43296e4-5ee5-4afd-85ea-ed577619c459.JPG)

![Chiba-Urban-Monorail_Japan_67](https://user-images.githubusercontent.com/20723919/128710163-9cdce61c-12b1-40de-adc7-0cfb8b17074c.JPG)

![Chiba-Urban-Monorail_Japan_68](https://user-images.githubusercontent.com/20723919/128710162-a142109d-6a41-4a8d-ae47-39f1ddf4c183.JPG)

![Chiba-Urban-Monorail_Japan_69](https://user-images.githubusercontent.com/20723919/128710161-2246173d-5c2b-4a94-a55c-d2136231450a.JPG)

![Chiba-Urban-Monorail_Japan_70](https://user-images.githubusercontent.com/20723919/128710158-778d5ca5-ef1b-4035-bf2e-0d1f802eeab2.JPG)

![Chiba-Urban-Monorail_Japan_71](https://user-images.githubusercontent.com/20723919/128710156-2607a60a-e7e4-4513-9157-8989a7f0fe1b.JPG)

![Chiba-Urban-Monorail_Japan_72](https://user-images.githubusercontent.com/20723919/128710155-c7a93a70-79aa-4eac-aa66-67ee701ff19a.JPG)

![Chiba-Urban-Monorail_Japan_73](https://user-images.githubusercontent.com/20723919/128710152-08ae4e4a-5e0a-4008-a6f8-7ecc8688e261.JPG)

![Chiba-Urban-Monorail_Japan_74](https://user-images.githubusercontent.com/20723919/128710151-9fb6428d-5be3-4583-bfbf-0bf318e25cb1.JPG)

![Chiba-Urban-Monorail_Japan_75](https://user-images.githubusercontent.com/20723919/128710143-e5b9284c-8cb1-4eca-b375-e376a85f5ab0.JPG)

# 2008年4月

![Chiba-Urban-Monorail_Japan_36](https://user-images.githubusercontent.com/20723919/124344080-61e3c480-dc0b-11eb-9339-d04ed52c7211.jpg)

![Chiba-Urban-Monorail_Japan_37](https://user-images.githubusercontent.com/20723919/124344082-627c5b00-dc0b-11eb-9c7e-e5b1b3356ba3.jpg)

![Chiba-Urban-Monorail_Japan_38](https://user-images.githubusercontent.com/20723919/124344084-6314f180-dc0b-11eb-9c9e-cbd59f5be97a.jpg)

![Chiba-Urban-Monorail_Japan_39](https://user-images.githubusercontent.com/20723919/124344085-6314f180-dc0b-11eb-8c22-b064beb2172d.jpg)

![Chiba-Urban-Monorail_Japan_40](https://user-images.githubusercontent.com/20723919/124344086-63ad8800-dc0b-11eb-984f-48443b05441a.jpg)

![Chiba-Urban-Monorail_Japan_41](https://user-images.githubusercontent.com/20723919/124344089-63ad8800-dc0b-11eb-9e86-8794971cd5c4.jpg)

![Chiba-Urban-Monorail_Japan_42](https://user-images.githubusercontent.com/20723919/124344090-64461e80-dc0b-11eb-8e2a-fe5151c03cbb.jpg)

![Chiba-Urban-Monorail_Japan_43](https://user-images.githubusercontent.com/20723919/124344091-64461e80-dc0b-11eb-8da0-2621374d62da.jpg)

![Chiba-Urban-Monorail_Japan_44](https://user-images.githubusercontent.com/20723919/124344092-64deb500-dc0b-11eb-8b3c-0660f077d394.jpg)

![Chiba-Urban-Monorail_Japan_45](https://user-images.githubusercontent.com/20723919/124344093-64deb500-dc0b-11eb-810b-574cc3c26bd4.jpg)

![Chiba-Urban-Monorail_Japan_46](https://user-images.githubusercontent.com/20723919/124344094-65774b80-dc0b-11eb-9743-610eac6d8d7e.jpg)

![Chiba-Urban-Monorail_Japan_47](https://user-images.githubusercontent.com/20723919/124344095-65774b80-dc0b-11eb-9ddf-83af5c8e52fd.jpg)

![Chiba-Urban-Monorail_Japan_48](https://user-images.githubusercontent.com/20723919/124344096-660fe200-dc0b-11eb-8851-e10e2c376638.jpg)
",0,0,1,0,transportation,"[chiba, image, japan, photos, railway, transportation]",00000
432,service-levels,AndresNavarrete,N/A,https://github.com/AndresNavarrete/service-levels,https://api.github.com/repos/AndresNavarrete/service-levels,Find time and distance metrics for transportation analysis using a GoogleMaps Api integration,"# Generador de niveles de servicio

Para ejecutar este programa es necesario tener un archivo en  `resources/request.xlsx`. Cada fila representa un viaje con un origen, destino, modo y hora de viaje. 

Para instalar todas las librerias necesarias para correr el programa basta con tener instalado pip y ejecutar el siguiente código en la línea de comandos:
```sh
pip install -r requirements.txt
```

Finalmente, para correr el programa basta con ejecutar el siguiente código en la línea de comandos:

```sh
python main.py
```
",0,0,1,0,transportation,"[google-maps-api, transportation]",00000
433,OnTrack,jillsands,N/A,https://github.com/jillsands/OnTrack,https://api.github.com/repos/jillsands/OnTrack,An iOS app intended to help with understanding and planning for the WMATA DC Metro system,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C1A6:4D66:6D0F1F:E1BDEC:65224326.'}",0,0,1,0,transportation,"[coredata, mvvm-architecture, swiftui, transportation]",00000
434,niveristand-communications-bus-template,ni,N/A,N/A,https://api.github.com/repos/ni/niveristand-communications-bus-template,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C1B4:1364:76C78A:F50503:65224327.'}",N/A,N/A,N/A,N/A,transportation,"[N, /, A]",00000
435,distributor-to-disaster-areas-with-dijsktra-algorithm,rag0nn,N/A,N/A,https://api.github.com/repos/rag0nn/distributor-to-disaster-areas-with-dijsktra-algorithm,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C16E:3AA3:2DBC593:5D9FB93:65224327.'}",N/A,N/A,N/A,N/A,transportation,"[N, /, A]",00000
436,Jefferson-County-WA-GIS,JoeCalodich,N/A,N/A,https://api.github.com/repos/JoeCalodich/Jefferson-County-WA-GIS,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C1D3:178A:2CA85B4:5B6D531:65224328.'}",N/A,N/A,N/A,N/A,transportation,"[N, /, A]",00000
437,HKTramways,seventhmoon,N/A,N/A,https://api.github.com/repos/seventhmoon/HKTramways,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C1E6:607B:798523:FA596D:65224328.'}",N/A,N/A,N/A,N/A,transportation,"[N, /, A]",00000
438,traincheck,sakayph,N/A,N/A,https://api.github.com/repos/sakayph/traincheck,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C17D:05EF:6F1119:E5ADEF:65224329.'}",N/A,N/A,N/A,N/A,transportation,"[N, /, A]",00000
439,bmtc-network,R3DDY97,N/A,N/A,https://api.github.com/repos/R3DDY97/bmtc-network,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C12F:6A74:1A3C59E:36095AA:6522432A.'}",N/A,N/A,N/A,N/A,transportation,"[N, /, A]",00000
440,Troskify,ianakotey,N/A,N/A,https://api.github.com/repos/ianakotey/Troskify,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C14C:2319:69E58B:DB51E5:6522432A.'}",N/A,N/A,N/A,N/A,transportation,"[N, /, A]",00000
441,bikeshareTO_data,chaddling,N/A,N/A,https://api.github.com/repos/chaddling/bikeshareTO_data,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C10C:64D2:73512C:EE0B0C:6522432B.'}",N/A,N/A,N/A,N/A,transportation,"[N, /, A]",00000
442,transportation-font,LogTrack,N/A,N/A,https://api.github.com/repos/LogTrack/transportation-font,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C15F:784E:767C98:F4A01A:6522432B.'}",N/A,N/A,N/A,N/A,transportation,"[N, /, A]",00000
443,transportation_london,salihhugurr,N/A,N/A,https://api.github.com/repos/salihhugurr/transportation_london,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C1E9:87DB:30095AD:6217B84:6522432C.'}",N/A,N/A,N/A,N/A,transportation,"[N, /, A]",00000
444,TransportationModels.jl,a-regal,N/A,N/A,https://api.github.com/repos/a-regal/TransportationModels.jl,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C18C:178A:2CA8A01:5B6DE1B:6522432C.'}",N/A,N/A,N/A,N/A,transportation,"[N, /, A]",00000
445,TransViz,tongnie,N/A,N/A,https://api.github.com/repos/tongnie/TransViz,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C1FA:37E7:2D1F660:5C675F9:6522432D.'}",N/A,N/A,N/A,N/A,transportation,"[N, /, A]",00000
446,szeged-transport-api,kissmarcell,N/A,N/A,https://api.github.com/repos/kissmarcell/szeged-transport-api,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C155:7B5B:738E52:EE4A26:6522432D.'}",N/A,N/A,N/A,N/A,transportation,"[N, /, A]",00000
447,Cartography_Labs,KCivilEnGI,N/A,N/A,https://api.github.com/repos/KCivilEnGI/Cartography_Labs,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C1AD:36DF:356F353:6CF15A9:6522432E.'}",N/A,N/A,N/A,N/A,transportation,"[N, /, A]",00000
448,SBAR,omegayao,N/A,N/A,https://api.github.com/repos/omegayao/SBAR,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C17B:29CE:3308627:68267C8:6522432E.'}",N/A,N/A,N/A,N/A,transportation,"[N, /, A]",00000
449,microsoft-gtfs,cookieguru,N/A,N/A,https://api.github.com/repos/cookieguru/microsoft-gtfs,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C156:4F4C:72EBC0:ED2A3E:6522432F.'}",N/A,N/A,N/A,N/A,transportation,"[N, /, A]",00000
450,CBP3-Team-RideOn,UI-GGN,N/A,N/A,https://api.github.com/repos/UI-GGN/CBP3-Team-RideOn,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C1B4:1364:76D0BC:F517E5:6522432F.'}",N/A,N/A,N/A,N/A,transportation,"[N, /, A]",00000
451,crrt-route-finder,MUL-Chair-of-Industrial-Logistics,N/A,N/A,https://api.github.com/repos/MUL-Chair-of-Industrial-Logistics/crrt-route-finder,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C1B0:6611:6E6C89:E46D0E:65224330.'}",N/A,N/A,N/A,N/A,transportation,"[N, /, A]",00000
452,shuttle-service,RMompati,N/A,N/A,https://api.github.com/repos/RMompati/shuttle-service,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C1EB:4F4C:72ED65:ED2DC4:65224331.'}",N/A,N/A,N/A,N/A,transportation,"[N, /, A]",00000
453,Transportation-SG-Data-visualisation,jungfraujoch0,N/A,N/A,https://api.github.com/repos/jungfraujoch0/Transportation-SG-Data-visualisation,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C1A9:3819:1AF8AAC:3776881:65224331.'}",N/A,N/A,N/A,N/A,transportation,"[N, /, A]",00000
454,digitransit-stoptimes-android,sjakthol,N/A,https://github.com/sjakthol/digitransit-stoptimes-android,https://api.github.com/repos/sjakthol/digitransit-stoptimes-android,An Android application for accessing real-time departure information of public transportation in the Helsinki metropolitan area.,"An Android application for accessing real-time departure information of public transportation
in the Helsinki metropolitan area.

The data is provided by [HSL](https://www.hsl.fi/en) through the
[Digitransit](https://digitransit.fi/en) platform.

## Features
* Search stops by their name
* View stops near your current location
* View upcoming departures from a stop with real-time predictions
* View number of available citybikes in citybike stations
* Save favorite stops for easy access

![Screenshot](https://sjakthol.github.io/stoptimes-screenshots.png)",0,0,3,0,transportation,"[android, digitransit, hsl, java, transportation]",00000
455,Route-Scheduling-Optimization,suzanaiacob,N/A,https://github.com/suzanaiacob/Route-Scheduling-Optimization,https://api.github.com/repos/suzanaiacob/Route-Scheduling-Optimization,Optimization project using location data to schedule transportation routes,"# Route Scheduling Optimization

This is an optimization project using location data to schedule transportation routes.

This project was completed aliongside my MIT colleagues using real data from a logistics company. The goal was to schedule optimal transportation routes which reach a series of clients and arrive at the final destination according to pre-defined constraints (e.g. specific arrival and departure times, multiple arrivals at specific clients). The objective was to optimize for early arrivals at the final destination. PLease see the **Logistics Route Optimization - Presentation** file for an overview of the project

The project has three parts:
- Data cleaning and exploratory data analysis (developed in R and Tableau)
- Obtaining location and distance data using the Google Maps API (written in JavaScript): https://developers.google.com/maps/documentation/javascript/distancematrix 
- Developing the optimization algorithm (written in Julia using Jump and Gurobi)

The data used is confidential client data (primarily client addressed), but I am sharing the code which generally could be applied to a route scheduling with any addresses.  

",0,0,2,0,transportation,"[google-maps-api, gurobi, julia-language, optimization, transportation]",00000
456,Motor-Vehicle-Crash,shriramkarthikeyan,N/A,https://github.com/shriramkarthikeyan/Motor-Vehicle-Crash,https://api.github.com/repos/shriramkarthikeyan/Motor-Vehicle-Crash,An analysis of motor vehicle crashes in the state of Massachusetts. This is a project done as a part of our Computation and Visualization in Analytics class at Northeastern University.,"# Motor-Vehicle-Crash

This project was done as a part of our Computation and Visualization course at Northeastern University.

Owners of this project:
Shriram Karthikeyan
Thejaswini Anupindi

The goal of this project to perform an explorotary analysis to find interesting insights and develop an inital scoring system to rate counties in the state of Massachusetts based on the number of crashes subsetted by multiple factors such as (driving under the influence of alcohol and drugs, whether the driver used a seat belt, whether the traffic device malfunctioned, etc..)


Files:
MVC_Mass.rmd: Contains all the analysis done in R. Also contains the code behind the scoring system.
",0,0,1,0,transportation,"[analysis, car, data, insurance, transportation]",00000
457,data_mining_fall2020,annemariedonohue,N/A,N/A,https://api.github.com/repos/annemariedonohue/data_mining_fall2020,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C166:092A:6F7DF4:E66D20:65224119.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,transportation,"[N, /, A]",00000
458,Project-Day-1,Garriofx,N/A,https://github.com/Garriofx/Project-Day-1,https://api.github.com/repos/Garriofx/Project-Day-1,Real Estate project on house price prediction.,"# Project-Day-1 - Predicting the future of real estate market
The aim of this project is to provide the best counties/areas in the USA to invest in for a national real estate developer, individual buyers, banks looking for a place to development of new apartment building or to purchase. Another goal is to predict the house prices in a county in the next few months. Price prediction using Machine learning algorithms XGBoost and Linear Regression considering factors such as Median income in a county, Crime rate in that county, public schools, hospitals, hospital ratings and unemployment rate in the county. Module moved to noteworthy Python libraries and the usefulness of libraries such as Pandas, Numpy, Seaborn, and Matplotlib.

# Prepared By
Marjorie Lawrence 

# Introduction
Purchasing a house is a big decision in a person’s life and needs a considerable amount of thought and research. One would like to buy a house at the best rate and minimum risk and would like it to be the best investment for the future. Various online websites, real estate agents and realtors try to guide home buyers by letting them compare different houses available for purchase. The unprecedented upheaval caused by the coronavirus will inevitably shift priorities and perspectives. Perhaps most profoundly, it could change how we all think about physical space and how it is shared with others. Whatever short-term contortions the property market goes through in response to the economic devastation wrought by this virus, real estate investors should not lose sight of long-term changes in behavior. These will inform how people live and work in the future, ultimately shaping the types of developments that are most desirable in a world that will never be quite the same.  Nowhere is this truer than in real estate investing, where technology, demographics, climate, and affordability are just some of the factors quickly reshaping how and where people live, work and play. Will secondary cities that have historically been overlooked but are attractive to dynamic young populations become popular? How will commercial real estate be affected by telecommuting and declining automobile ownership? Will climate change render waterfront property worthless or spur innovations that enable a different relationship to aquatic environments? These and many other questions are being pondered by investment committees worldwide.

# Motivation & Summary
Based on house prices predicted one can invest in real estate, find a county house better suited for their needs where they can buy a house. House buying and selling decision would become easier with the prediction done by this data science project. The stakeholders for the type of project will be:

a) Customers and Real Estate Agents — The real estate industry has long operated according to its own traditions, but the availability of huge volumes of data is revolutionizing the way the industry works. Big data analysis techniques are creating a new real estate market in which both customers and agents are better informed than ever before.

b) Companies — such as Zillow and Trulia can use this analysis to calculate an estimated value of the price that the home might attract based on factors like local schools, crime rates, income level, hospitals etc. and decide marketing strategy.

c) Banks — It’s not just consumers who are using big data to inform their house buying and selling decisions. Banks are also drawing on vast pools of data to predict the risk that a particular mortgage application could pose, using information about both the value of the home and the applicant’s financial situation and history. In addition, banks are also avoiding losing out on foreclosure and short sales, as big data is helping them to predict the maximum sale value that the market can bear.

# Questions Pondered by investment committes worldwide
is 2021 a good year to buy a house?
Where should one buy a house?
Will secondary cities that have historically been overlooked but are attractive to dynamic young populations become popular?
How will commercial real estate be affected by telecommuting and declining automobile ownership? 
Will climate change render waterfront property worthless or spur innovations that enable a different relationship to aquatic environments? 

# Data Cleanup & Exploration
Process of data cleanup in jupyter lab using python eliminating unnecessary data.

http://localhost:8888/lab/tree/gwu-virt-fin-pt-04-2021-u-c/03-Projects/Project-01/Picture1.jpg

# Modeling and calculations
Maplot
JupterLab (phyton)
Monte carlo
Plotly

# Datasets House Price Prediction
To predict house prices using supply-demand features, three main datasets have been used.

Federal Reserve Interest Rates (1954 - 2017)
Unemployment Rate by County in the USA (2000 - 2018)
Zillow economics data (County_time_series and Crosswalk)

# Data Source
Data.gov
US Census
Zillow
Public APIs
Awesome-APIs List
Medium APIs List

# Summary & Conclusions
The future of real estate will be driven by new technologies, buyer-agent relationships, and changing homeowner demographics. Real estate investors hoping to achieve success will need to learn to thrive amidst these changes. With new software to speed up closing timelines, online listing sites resulting in more informed buyers, and new age groups entering the real estate market, the industry is transitioning in big ways. Even expert predictions suggest impending market changes. All in all, when it comes to the future of real estate, investors have a lot to look forward to.
",0,0,1,0,transportation,"[best-states, median-house-prices, most-entertainment, realestate, school-district, transportation]",00000
459,Chiba-Urban-Monorail_Japan,RuinDig,N/A,https://github.com/RuinDig/Chiba-Urban-Monorail_Japan,https://api.github.com/repos/RuinDig/Chiba-Urban-Monorail_Japan,千葉都市モノレール Chiba Urban Monorail,"# Chiba-Urban-Monorail_Japan
CC-BY-4.0 - RuinDig/Yuki Uchida
<a href=""https://creativecommons.org/licenses/by/4.0/deed.ja""><img src=""https://user-images.githubusercontent.com/20723919/145936543-577c7705-90e2-4d56-ad5d-26b0fbcea02d.png"" /></a>

千葉都市モノレール、千葉県千葉市、日本 Chiba Urban Monorail, Chiba-city, Japan

# 2021年7月～2021年8月

![Chiba-Urban-Monorail_Japan_01](https://user-images.githubusercontent.com/20723919/123821290-3c6a6880-d936-11eb-9218-13ce7b661c93.jpg)

![Chiba-Urban-Monorail_Japan_02](https://user-images.githubusercontent.com/20723919/123821305-412f1c80-d936-11eb-917a-adfec0e4c3b6.jpg)

![Chiba-Urban-Monorail_Japan_03](https://user-images.githubusercontent.com/20723919/123821308-412f1c80-d936-11eb-82d3-d4f5526e47ba.jpg)

![Chiba-Urban-Monorail_Japan_04](https://user-images.githubusercontent.com/20723919/123821312-41c7b300-d936-11eb-869f-70687c7fad9e.jpg)

![Chiba-Urban-Monorail_Japan_05](https://user-images.githubusercontent.com/20723919/123821315-42604980-d936-11eb-84da-d0990a169f49.jpg)

![Chiba-Urban-Monorail_Japan_06](https://user-images.githubusercontent.com/20723919/123821316-42604980-d936-11eb-9783-ab6245a01340.jpg)

![Chiba-Urban-Monorail_Japan_07](https://user-images.githubusercontent.com/20723919/123821318-42f8e000-d936-11eb-9c4f-d1e79120c4ad.jpg)

![Chiba-Urban-Monorail_Japan_08](https://user-images.githubusercontent.com/20723919/123821321-42f8e000-d936-11eb-8607-a717db27f7ed.jpg)

![Chiba-Urban-Monorail_Japan_09](https://user-images.githubusercontent.com/20723919/123821323-43917680-d936-11eb-8a48-bf2be4ba5b9c.jpg)

![Chiba-Urban-Monorail_Japan_10](https://user-images.githubusercontent.com/20723919/123821324-43917680-d936-11eb-928e-fd6333604b44.jpg)

![Chiba-Urban-Monorail_Japan_11](https://user-images.githubusercontent.com/20723919/123821326-442a0d00-d936-11eb-9fb6-b163b4f4b8e4.jpg)

![Chiba-Urban-Monorail_Japan_12](https://user-images.githubusercontent.com/20723919/123821328-442a0d00-d936-11eb-8f9d-d6a827bc91c4.jpg)

![Chiba-Urban-Monorail_Japan_13](https://user-images.githubusercontent.com/20723919/123821331-44c2a380-d936-11eb-870f-c38425debfab.JPG)

![Chiba-Urban-Monorail_Japan_14](https://user-images.githubusercontent.com/20723919/123821334-455b3a00-d936-11eb-9562-c1c9150f089e.jpg)

![Chiba-Urban-Monorail_Japan_15](https://user-images.githubusercontent.com/20723919/123821336-455b3a00-d936-11eb-8853-0af4c03ef06d.jpg)

![Chiba-Urban-Monorail_Japan_16](https://user-images.githubusercontent.com/20723919/123821339-45f3d080-d936-11eb-9e24-f69166aceae5.jpg)

![Chiba-Urban-Monorail_Japan_17](https://user-images.githubusercontent.com/20723919/123821341-45f3d080-d936-11eb-916f-368827928087.jpg)

![Chiba-Urban-Monorail_Japan_18](https://user-images.githubusercontent.com/20723919/123821343-468c6700-d936-11eb-893b-54a3899b0f57.jpg)

![Chiba-Urban-Monorail_Japan_19](https://user-images.githubusercontent.com/20723919/123821347-468c6700-d936-11eb-84b2-38c796250a4d.jpg)

![Chiba-Urban-Monorail_Japan_20](https://user-images.githubusercontent.com/20723919/123821350-4724fd80-d936-11eb-9d70-81d7243f7767.jpg)

![Chiba-Urban-Monorail_Japan_21](https://user-images.githubusercontent.com/20723919/123821352-4724fd80-d936-11eb-9cc3-d4a856bdbc49.jpg)

![Chiba-Urban-Monorail_Japan_22](https://user-images.githubusercontent.com/20723919/123821354-47bd9400-d936-11eb-8f33-c43dd84c743c.jpg)

![Chiba-Urban-Monorail_Japan_23](https://user-images.githubusercontent.com/20723919/123821355-48562a80-d936-11eb-91d0-ffd1430a1b2d.jpg)

![Chiba-Urban-Monorail_Japan_24](https://user-images.githubusercontent.com/20723919/123821358-48562a80-d936-11eb-9fa4-028044c6f6b5.jpg)

![Chiba-Urban-Monorail_Japan_25](https://user-images.githubusercontent.com/20723919/123821362-48eec100-d936-11eb-82ff-9714f917e8ff.jpg)

![Chiba-Urban-Monorail_Japan_26](https://user-images.githubusercontent.com/20723919/123821364-48eec100-d936-11eb-8779-2d28d42a1355.jpg)

![Chiba-Urban-Monorail_Japan_27](https://user-images.githubusercontent.com/20723919/123821366-49875780-d936-11eb-8d1d-48cd6bed71ea.jpg)

![Chiba-Urban-Monorail_Japan_28](https://user-images.githubusercontent.com/20723919/123821367-4a1fee00-d936-11eb-91b4-72b24bc6f239.jpg)

![Chiba-Urban-Monorail_Japan_29](https://user-images.githubusercontent.com/20723919/123821368-4a1fee00-d936-11eb-916e-cd961fc03420.jpg)

![Chiba-Urban-Monorail_Japan_30](https://user-images.githubusercontent.com/20723919/123821370-4ab88480-d936-11eb-8c20-895a73bab680.jpg)

![Chiba-Urban-Monorail_Japan_31](https://user-images.githubusercontent.com/20723919/124343905-111f9c00-dc0a-11eb-94d5-7634b9256803.jpg)

![Chiba-Urban-Monorail_Japan_32](https://user-images.githubusercontent.com/20723919/124343906-1250c900-dc0a-11eb-8583-160a9d076136.jpg)

![Chiba-Urban-Monorail_Japan_33](https://user-images.githubusercontent.com/20723919/124343907-12e95f80-dc0a-11eb-9257-d8b8325f5937.jpg)

![Chiba-Urban-Monorail_Japan_34](https://user-images.githubusercontent.com/20723919/124343908-12e95f80-dc0a-11eb-8df2-9aec8084ba98.jpg)

![Chiba-Urban-Monorail_Japan_35](https://user-images.githubusercontent.com/20723919/124343909-1381f600-dc0a-11eb-9fca-1a9b9680245b.jpg)

![Chiba-Urban-Monorail_Japan_49](https://user-images.githubusercontent.com/20723919/128621607-7966ac54-1117-4e5b-990d-c66e4bced4fa.JPG)

![Chiba-Urban-Monorail_Japan_50](https://user-images.githubusercontent.com/20723919/128621610-5017faec-cec2-4c84-a53d-cdb810e563af.JPG)

![Chiba-Urban-Monorail_Japan_51](https://user-images.githubusercontent.com/20723919/128621611-79fac08d-9b75-45e8-9c14-82bc01c24919.JPG)

![Chiba-Urban-Monorail_Japan_52](https://user-images.githubusercontent.com/20723919/128621612-4377cd79-c04d-4691-b528-919fecede629.JPG)

![Chiba-Urban-Monorail_Japan_53](https://user-images.githubusercontent.com/20723919/128710192-6fa009f4-622b-4f49-9972-2631a7f40cbe.JPG)

![Chiba-Urban-Monorail_Japan_54](https://user-images.githubusercontent.com/20723919/128710190-4a8bc379-5170-4dbf-bce5-37f8c7d84ae7.JPG)

![Chiba-Urban-Monorail_Japan_55](https://user-images.githubusercontent.com/20723919/128710189-8a4f2a87-3689-4de4-aabe-b2723b58be06.JPG)

![Chiba-Urban-Monorail_Japan_56](https://user-images.githubusercontent.com/20723919/128710188-23a0d58d-6c50-43d5-a37a-f45ffcfef7bc.JPG)

![Chiba-Urban-Monorail_Japan_57](https://user-images.githubusercontent.com/20723919/128710186-943071a7-8802-4267-9b6f-e725ff13ed00.JPG)

![Chiba-Urban-Monorail_Japan_58](https://user-images.githubusercontent.com/20723919/128710185-16ab8bf3-6d34-42e4-8a60-1dca73343ae3.JPG)

![Chiba-Urban-Monorail_Japan_59](https://user-images.githubusercontent.com/20723919/128710184-4486841b-568e-4cbd-b91d-979a36196573.JPG)

![Chiba-Urban-Monorail_Japan_60](https://user-images.githubusercontent.com/20723919/128710180-0b81bdcb-1669-4d20-915f-05409c75b3b4.JPG)

![Chiba-Urban-Monorail_Japan_61](https://user-images.githubusercontent.com/20723919/128710178-262e44f2-2023-4322-8bf3-17cfa976c2d6.JPG)

![Chiba-Urban-Monorail_Japan_62](https://user-images.githubusercontent.com/20723919/128710176-ef348c64-0e53-48c3-ab88-b9ece768c639.JPG)

![Chiba-Urban-Monorail_Japan_63](https://user-images.githubusercontent.com/20723919/128710175-d1bc53e5-1889-4de7-925b-b013a0fb2ed1.JPG)

![Chiba-Urban-Monorail_Japan_64](https://user-images.githubusercontent.com/20723919/128710170-b089aaad-96ce-4357-9590-6a70d158de5b.JPG)

![Chiba-Urban-Monorail_Japan_65](https://user-images.githubusercontent.com/20723919/128710169-a909b178-77b9-42a8-8e03-049700d15967.JPG)

![Chiba-Urban-Monorail_Japan_66](https://user-images.githubusercontent.com/20723919/128710165-d43296e4-5ee5-4afd-85ea-ed577619c459.JPG)

![Chiba-Urban-Monorail_Japan_67](https://user-images.githubusercontent.com/20723919/128710163-9cdce61c-12b1-40de-adc7-0cfb8b17074c.JPG)

![Chiba-Urban-Monorail_Japan_68](https://user-images.githubusercontent.com/20723919/128710162-a142109d-6a41-4a8d-ae47-39f1ddf4c183.JPG)

![Chiba-Urban-Monorail_Japan_69](https://user-images.githubusercontent.com/20723919/128710161-2246173d-5c2b-4a94-a55c-d2136231450a.JPG)

![Chiba-Urban-Monorail_Japan_70](https://user-images.githubusercontent.com/20723919/128710158-778d5ca5-ef1b-4035-bf2e-0d1f802eeab2.JPG)

![Chiba-Urban-Monorail_Japan_71](https://user-images.githubusercontent.com/20723919/128710156-2607a60a-e7e4-4513-9157-8989a7f0fe1b.JPG)

![Chiba-Urban-Monorail_Japan_72](https://user-images.githubusercontent.com/20723919/128710155-c7a93a70-79aa-4eac-aa66-67ee701ff19a.JPG)

![Chiba-Urban-Monorail_Japan_73](https://user-images.githubusercontent.com/20723919/128710152-08ae4e4a-5e0a-4008-a6f8-7ecc8688e261.JPG)

![Chiba-Urban-Monorail_Japan_74](https://user-images.githubusercontent.com/20723919/128710151-9fb6428d-5be3-4583-bfbf-0bf318e25cb1.JPG)

![Chiba-Urban-Monorail_Japan_75](https://user-images.githubusercontent.com/20723919/128710143-e5b9284c-8cb1-4eca-b375-e376a85f5ab0.JPG)

# 2008年4月

![Chiba-Urban-Monorail_Japan_36](https://user-images.githubusercontent.com/20723919/124344080-61e3c480-dc0b-11eb-9339-d04ed52c7211.jpg)

![Chiba-Urban-Monorail_Japan_37](https://user-images.githubusercontent.com/20723919/124344082-627c5b00-dc0b-11eb-9c7e-e5b1b3356ba3.jpg)

![Chiba-Urban-Monorail_Japan_38](https://user-images.githubusercontent.com/20723919/124344084-6314f180-dc0b-11eb-9c9e-cbd59f5be97a.jpg)

![Chiba-Urban-Monorail_Japan_39](https://user-images.githubusercontent.com/20723919/124344085-6314f180-dc0b-11eb-8c22-b064beb2172d.jpg)

![Chiba-Urban-Monorail_Japan_40](https://user-images.githubusercontent.com/20723919/124344086-63ad8800-dc0b-11eb-984f-48443b05441a.jpg)

![Chiba-Urban-Monorail_Japan_41](https://user-images.githubusercontent.com/20723919/124344089-63ad8800-dc0b-11eb-9e86-8794971cd5c4.jpg)

![Chiba-Urban-Monorail_Japan_42](https://user-images.githubusercontent.com/20723919/124344090-64461e80-dc0b-11eb-8e2a-fe5151c03cbb.jpg)

![Chiba-Urban-Monorail_Japan_43](https://user-images.githubusercontent.com/20723919/124344091-64461e80-dc0b-11eb-8da0-2621374d62da.jpg)

![Chiba-Urban-Monorail_Japan_44](https://user-images.githubusercontent.com/20723919/124344092-64deb500-dc0b-11eb-8b3c-0660f077d394.jpg)

![Chiba-Urban-Monorail_Japan_45](https://user-images.githubusercontent.com/20723919/124344093-64deb500-dc0b-11eb-810b-574cc3c26bd4.jpg)

![Chiba-Urban-Monorail_Japan_46](https://user-images.githubusercontent.com/20723919/124344094-65774b80-dc0b-11eb-9743-610eac6d8d7e.jpg)

![Chiba-Urban-Monorail_Japan_47](https://user-images.githubusercontent.com/20723919/124344095-65774b80-dc0b-11eb-9ddf-83af5c8e52fd.jpg)

![Chiba-Urban-Monorail_Japan_48](https://user-images.githubusercontent.com/20723919/124344096-660fe200-dc0b-11eb-8851-e10e2c376638.jpg)
",0,0,1,0,transportation,"[chiba, image, japan, photos, railway, transportation]",00000
460,OnTrack,jillsands,N/A,https://github.com/jillsands/OnTrack,https://api.github.com/repos/jillsands/OnTrack,An iOS app intended to help with understanding and planning for the WMATA DC Metro system,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C11A:58D0:77B530:F6643D:65224326.'}",0,0,1,0,transportation,"[coredata, mvvm-architecture, swiftui, transportation]",00000
461,service-levels,AndresNavarrete,N/A,https://github.com/AndresNavarrete/service-levels,https://api.github.com/repos/AndresNavarrete/service-levels,Find time and distance metrics for transportation analysis using a GoogleMaps Api integration,"# Generador de niveles de servicio

Para ejecutar este programa es necesario tener un archivo en  `resources/request.xlsx`. Cada fila representa un viaje con un origen, destino, modo y hora de viaje. 

Para instalar todas las librerias necesarias para correr el programa basta con tener instalado pip y ejecutar el siguiente código en la línea de comandos:
```sh
pip install -r requirements.txt
```

Finalmente, para correr el programa basta con ejecutar el siguiente código en la línea de comandos:

```sh
python main.py
```
",0,0,1,0,transportation,"[google-maps-api, transportation]",00000
462,niveristand-communications-bus-template,ni,N/A,N/A,https://api.github.com/repos/ni/niveristand-communications-bus-template,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C146:6A74:1A3C327:3609098:65224327.'}",N/A,N/A,N/A,N/A,transportation,"[N, /, A]",00000
463,Jefferson-County-WA-GIS,JoeCalodich,N/A,N/A,https://api.github.com/repos/JoeCalodich/Jefferson-County-WA-GIS,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C14F:607B:798497:FA585F:65224328.'}",N/A,N/A,N/A,N/A,transportation,"[N, /, A]",00000
464,distributor-to-disaster-areas-with-dijsktra-algorithm,rag0nn,N/A,N/A,https://api.github.com/repos/rag0nn/distributor-to-disaster-areas-with-dijsktra-algorithm,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C167:64D2:734DD9:EE0437:65224327.'}",N/A,N/A,N/A,N/A,transportation,"[N, /, A]",00000
465,mobi-sense,emarkou,N/A,N/A,https://api.github.com/repos/emarkou/mobi-sense,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C126:4179:2DF7676:5E12514:65224332.'}",N/A,N/A,N/A,N/A,transportation,"[N, /, A]",00000
466,hampton-roads-va-traffic,jalbertbowden,N/A,N/A,https://api.github.com/repos/jalbertbowden/hampton-roads-va-traffic,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C17E:4E78:70708F:E86741:65224332.'}",N/A,N/A,N/A,N/A,transportation,"[N, /, A]",00000
467,ngangkot-driver,mnindrazaka,N/A,N/A,https://api.github.com/repos/mnindrazaka/ngangkot-driver,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C174:5831:2BC426C:59B0B08:65224333.'}",N/A,N/A,N/A,N/A,transportation,"[N, /, A]",00000
468,SBB-Delay-PushBullet-Pusher,mbharanya,N/A,N/A,https://api.github.com/repos/mbharanya/SBB-Delay-PushBullet-Pusher,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C180:6A74:1A3CE30:360A769:65224333.'}",N/A,N/A,N/A,N/A,transportation,"[N, /, A]",00000
469,oc-transpo,nitro404,N/A,N/A,https://api.github.com/repos/nitro404/oc-transpo,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C125:7B3E:781B4D:F75019:65224334.'}",N/A,N/A,N/A,N/A,transportation,"[N, /, A]",00000
470,MidnightGuideToHome,creationyun,N/A,N/A,https://api.github.com/repos/creationyun/MidnightGuideToHome,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C1EF:7B5B:73956F:EE58B8:65224334.'}",N/A,N/A,N/A,N/A,transportation,"[N, /, A]",00000
471,sdot-webcomp,ibromley,N/A,N/A,https://api.github.com/repos/ibromley/sdot-webcomp,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C1F5:7AEF:2DDF736:5DCE688:65224335.'}",N/A,N/A,N/A,N/A,transportation,"[N, /, A]",00000
472,smart-yatayat-web,sagunpandey,N/A,N/A,https://api.github.com/repos/sagunpandey/smart-yatayat-web,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C1DF:309A:2E668D3:5EABFBF:65224336.'}",N/A,N/A,N/A,N/A,transportation,"[N, /, A]",00000
473,RH_VO,ysLeePhD,N/A,N/A,https://api.github.com/repos/ysLeePhD/RH_VO,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C1A1:4179:2DF7AE1:5E12E49:65224336.'}",N/A,N/A,N/A,N/A,transportation,"[N, /, A]",00000
474,TripPurposeInference,jianpeiqian,N/A,N/A,https://api.github.com/repos/jianpeiqian/TripPurposeInference,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C124:5AB9:2C5667B:5AD4786:65224337.'}",N/A,N/A,N/A,N/A,transportation,"[N, /, A]",00000
475,farecalculator,josh-p-thompson,N/A,N/A,https://api.github.com/repos/josh-p-thompson/farecalculator,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C125:7B3E:781E87:F756C0:65224337.'}",N/A,N/A,N/A,N/A,transportation,"[N, /, A]",00000
476,gx-usa-dashboard,kmcandersen,N/A,N/A,https://api.github.com/repos/kmcandersen/gx-usa-dashboard,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C1FC:0FAE:19873CD:34A7E53:65224338.'}",N/A,N/A,N/A,N/A,transportation,"[N, /, A]",00000
477,Gbemi,wptechprodigy,N/A,N/A,https://api.github.com/repos/wptechprodigy/Gbemi,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C128:73C7:721B43:EB9AC1:65224338.'}",N/A,N/A,N/A,N/A,transportation,"[N, /, A]",00000
478,getbus-calendar,YoRyan,N/A,N/A,https://api.github.com/repos/YoRyan/getbus-calendar,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C17C:418F:2A776E8:56D3724:65224339.'}",N/A,N/A,N/A,N/A,transportation,"[N, /, A]",00000
479,scarletmaps-web,adampiziak,N/A,N/A,https://api.github.com/repos/adampiziak/scarletmaps-web,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C1DB:2319:69F335:DB6E47:65224339.'}",N/A,N/A,N/A,N/A,transportation,"[N, /, A]",00000
480,Urban-Metrics-NYC,KNarcisi,N/A,N/A,https://api.github.com/repos/KNarcisi/Urban-Metrics-NYC,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C14D:309A:2E66C62:5EAC729:6522433A.'}",N/A,N/A,N/A,N/A,transportation,"[N, /, A]",00000
481,transroutownish-proto-bus-cowboy,rgolubtsov,N/A,N/A,https://api.github.com/repos/rgolubtsov/transroutownish-proto-bus-cowboy,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C188:5A27:725788:EC30B0:6522433A.'}",N/A,N/A,N/A,N/A,transportation,"[N, /, A]",00000
482,Tramigo,Tomn94,N/A,N/A,https://api.github.com/repos/Tomn94/Tramigo,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C140:4F4C:72F7C4:ED4325:6522433B.'}",N/A,N/A,N/A,N/A,transportation,"[N, /, A]",00000
483,farmingdale-shuttlebus,sshahrier,N/A,N/A,https://api.github.com/repos/sshahrier/farmingdale-shuttlebus,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C165:73C7:721E58:EBA116:6522433B.'}",N/A,N/A,N/A,N/A,transportation,"[N, /, A]",00000
484,DM-MCA,aitmlouk,N/A,N/A,https://api.github.com/repos/aitmlouk/DM-MCA,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C189:1F34:1BAF4E4:38E687C:6522433C.'}",N/A,N/A,N/A,N/A,transportation,"[N, /, A]",00000
485,GTFSOntology,subhashishhh,N/A,N/A,https://api.github.com/repos/subhashishhh/GTFSOntology,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C112:1E3B:2FDB176:61C81A9:6522433D.'}",N/A,N/A,N/A,N/A,transportation,"[N, /, A]",00000
486,SEPTA-Delay-Analysis,arthtalati,N/A,N/A,https://api.github.com/repos/arthtalati/SEPTA-Delay-Analysis,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C1B8:29CE:3309424:6828498:6522433D.'}",N/A,N/A,N/A,N/A,transportation,"[N, /, A]",00000
487,Bus-Pass-Transportation-System,Abanoub-Asaad,N/A,N/A,https://api.github.com/repos/Abanoub-Asaad/Bus-Pass-Transportation-System,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C17E:4E78:707D8A:E881F4:6522433D.'}",N/A,N/A,N/A,N/A,transportation,"[N, /, A]",00000
488,TestTaskALaboTech,RyazanovEvgeniy,N/A,N/A,https://api.github.com/repos/RyazanovEvgeniy/TestTaskALaboTech,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C183:3BF5:748B9C:F06352:6522433E.'}",N/A,N/A,N/A,N/A,transportation,"[N, /, A]",00000
489,Group1-Project,sarahhudaib,N/A,N/A,https://api.github.com/repos/sarahhudaib/Group1-Project,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C12D:7B5B:739EC7:EE6C05:6522433E.'}",N/A,N/A,N/A,N/A,transportation,"[N, /, A]",00000
490,bdit_congestion,CityofToronto,N/A,N/A,https://api.github.com/repos/CityofToronto/bdit_congestion,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C132:7B5B:739F56:EE6D37:6522433F.'}",N/A,N/A,N/A,N/A,transportation,"[N, /, A]",00000
491,Stargate-Mechanics,stargate-rewritten,N/A,N/A,https://api.github.com/repos/stargate-rewritten/Stargate-Mechanics,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C10E:1E3B:2FDB44E:61C8778:65224340.'}",N/A,N/A,N/A,N/A,transportation,"[N, /, A]",00000
492,Hello,fretlink,N/A,N/A,https://api.github.com/repos/fretlink/Hello,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C1B2:418F:2A77DFD:56D4573:65224340.'}",N/A,N/A,N/A,N/A,transportation,"[N, /, A]",00000
493,Drexel-Transportation-Javascript,Vaporjawn,N/A,N/A,https://api.github.com/repos/Vaporjawn/Drexel-Transportation-Javascript,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C196:2115:70C32F:E92D78:65224341.'}",N/A,N/A,N/A,N/A,transportation,"[N, /, A]",00000
494,berlin-transport,schluchter,N/A,N/A,https://api.github.com/repos/schluchter/berlin-transport,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C17C:418F:2A77EFB:56D477C:65224341.'}",N/A,N/A,N/A,N/A,transportation,"[N, /, A]",00000
495,osm-overpass,cb-cities,N/A,N/A,https://api.github.com/repos/cb-cities/osm-overpass,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C15F:784E:768EA9:F4C5C9:65224342.'}",N/A,N/A,N/A,N/A,transportation,"[N, /, A]",00000
496,build_hdfs,cb-cities,N/A,N/A,https://api.github.com/repos/cb-cities/build_hdfs,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C161:1299:9F131F:148A179:65224342.'}",N/A,N/A,N/A,N/A,transportation,"[N, /, A]",00000
497,tfl-feed-fetcher,cb-cities,N/A,N/A,https://api.github.com/repos/cb-cities/tfl-feed-fetcher,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C179:1299:9F139B:148A278:65224343.'}",N/A,N/A,N/A,N/A,transportation,"[N, /, A]",00000
498,Crash,cse482spring2019,N/A,N/A,https://api.github.com/repos/cse482spring2019/Crash,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C151:1F34:1BAFBC9:38E76B2:65224343.'}",N/A,N/A,N/A,N/A,transportation,"[N, /, A]",00000
499,citybikes-watchos,citybikes,N/A,N/A,https://api.github.com/repos/citybikes/citybikes-watchos,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C18B:4D66:6D258D:E1ECFD:65224344.'}",N/A,N/A,N/A,N/A,transportation,"[N, /, A]",00000
500,mamangkot,Arsfiqball,N/A,N/A,https://api.github.com/repos/Arsfiqball/mamangkot,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C1E5:2CBC:7861EC:F81CE2:65224345.'}",N/A,N/A,N/A,N/A,transportation,"[N, /, A]",00000
501,ypt-nyc-python,mebauer,N/A,N/A,https://api.github.com/repos/mebauer/ypt-nyc-python,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C125:7B3E:782BE3:F77267:65224345.'}",N/A,N/A,N/A,N/A,transportation,"[N, /, A]",00000
502,AADP-ESTIMATION,Amir-mjafari,N/A,N/A,https://api.github.com/repos/Amir-mjafari/AADP-ESTIMATION,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C197:64D2:736E6C:EE46C6:65224346.'}",N/A,N/A,N/A,N/A,transportation,"[N, /, A]",00000
503,diarra_capstone,diarra-fall,N/A,N/A,https://api.github.com/repos/diarra-fall/diarra_capstone,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C179:1299:9F177A:148AA9A:65224346.'}",N/A,N/A,N/A,N/A,transportation,"[N, /, A]",00000
504,route-choice-experiment,pabloguarda,N/A,N/A,https://api.github.com/repos/pabloguarda/route-choice-experiment,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C13D:1364:76E9BB:F54B89:65224347.'}",N/A,N/A,N/A,N/A,transportation,"[N, /, A]",00000
505,Transportation_Stock_Analysis,Bayunova28,N/A,N/A,https://api.github.com/repos/Bayunova28/Transportation_Stock_Analysis,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C13E:3AA3:2DBE316:5DA38D2:65224347.'}",N/A,N/A,N/A,N/A,transportation,"[N, /, A]",00000
506,BlueWay,procyberian,N/A,N/A,https://api.github.com/repos/procyberian/BlueWay,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C1BE:4179:2DF8CE0:5E15399:65224347.'}",N/A,N/A,N/A,N/A,transportation,"[N, /, A]",00000
507,Ridess,247-taxi-cabs-inc,N/A,N/A,https://api.github.com/repos/247-taxi-cabs-inc/Ridess,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C147:5AB9:2C575DE:5AD6758:65224348.'}",N/A,N/A,N/A,N/A,transportation,"[N, /, A]",00000
508,rtmtransit-com,tyler-ruff,N/A,N/A,https://api.github.com/repos/tyler-ruff/rtmtransit-com,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C118:0C72:72F108:ED72E7:65224348.'}",N/A,N/A,N/A,N/A,transportation,"[N, /, A]",00000
509,Team-L,shellwayne01,N/A,N/A,https://api.github.com/repos/shellwayne01/Team-L,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C180:6A74:1A3DF5A:360CB24:65224348.'}",N/A,N/A,N/A,N/A,transportation,"[N, /, A]",00000
510,old-nextbus-compare-v1,amychan331,N/A,N/A,https://api.github.com/repos/amychan331/old-nextbus-compare-v1,N/A,"# Nextbus Compare

## Description:
This React app finds up to 3 transit station and the corrosponding vechicles arrival time by the station's stop code.
I think the NextBus app used to take in stop code as input, but not any more. When a station have stop code on display, it is often much quicker and more convienant to type in digit than to search for street sign.


## Technology:
I decided to use React for this app, which gets its json data from the NextBus API. <br />
As always, I have implemented basic web accessibility, mobile-friendly, and security best practices. Real-time input validation has been implemented the React way. Very fun to watch it happen. <br />
The site is currently at http://nextbus-compare.herokuapp.com/ for anyone who wants to test it out.

## Image:
Input form before data submission, with error message on display:
<kbd>![Input Form with Error](https://github.com/amychan331/nextbus-compare/blob/master/public/img/NC_no_input_output.png)</kbd>

The time chart displaying 3 different station stop, one of which does not exist:
<kbd>![Regular Output](https://github.com/amychan331/nextbus-compare/blob/master/public/img/NC_output.png)</kbd>

Error message for duplicate stop code entry:
<kbd>![Duplicate Input Error](https://github.com/amychan331/nextbus-compare/blob/master/public/img/NC_duplicate_err.png)</kbd>

Error message for maxing out input submission:
<kbd>![Maxed Input Error](https://github.com/amychan331/nextbus-compare/blob/master/public/img/NC_max_input_err.png)</kbd>
",N/A,N/A,N/A,N/A,transportation,"[N, /, A]",00000
511,pev-simulation,mgpopinjay,N/A,https://github.com/mgpopinjay/pev-simulation,https://api.github.com/repos/mgpopinjay/pev-simulation,Fleet Supply-Demand Simulator for Autonomous Bike Sharing Services using Boston as Test Bed (2016-2019),"# pev-simulation
[V1 Demo Video (2017)](https://youtu.be/1vcRLGNjl3E)

# PEV SimApp V4 Architecture

[Link to edit diagram on LucidChart](https://www.lucidchart.com/invitations/accept/e1dfca89-6a07-4b69-a5e7-98147b56fdfc)

[Link to PowerPoint visualization of key features](https://docs.google.com/presentation/d/1eAi3rYy4O6R9oW1tQVdBr2pEis53ephnnRyHMtVPIlM/edit?usp=sharing)

# Setup OSRM Backend Routing Server

#### Analytic Data Explanation
* Trial: Trial #
* PEVs: Fleet size
* Trips: Total # of trips
* Bike/Taxi/Random: # of each type of trip
* Trips/Day: Avg trips/hr * 24
* Wait Time: Avg time spent waiting for car to arrive
* Assignment Time: Avg time spent waiting for a car to be assigned
* Avg Empty Trips: Avg time navigating to pickup
* Avg Job Trips: Avg time driving passenger
* Utilization: % of driving time car spends delivering passengers

#### OS X Install Dependencies

Please install the [homebrew](http://mxcl.github.com/homebrew/) package system. It will provide all necessary dependencies:

`brew install boost wget git cmake libzip libstxxl libxml2 lua tbb ccache`

To be able to compile tools:

`brew install GDAL`

PLEASE ENSURE THAT XCODE IS INSTALLED AND UPDATED

#### OS X Build (ENABLE_MASON=ON)

    git clone https://github.com/Project-OSRM/osrm-backend.git
    cd osrm-backend
    mkdir build
    cd build
    cmake .. -DENABLE_MASON=1
    make

#### OS X Running OSRM
    cd osrm-backend
    mkdir map
    cd map
    wget -O map.xml https://overpass-api.de/api/map?bbox=-71.1700,42.3175,-70.9829,42.4039

    (or install from the link directly https://overpass-api.de/api/map?bbox=-71.1700,42.3175,-70.9829,42.4039 and move to osrm-backend/map and change filename to map.xml)

    cd ..
    ./build/osrm-extract map/map.xml -p profiles/bicycle.lua
    ./build/osrm-contract map/map.xml.osrm
    ./build/osrm-routed map/map.xml.osrm

#### Windows Running OSRM
Install [Visual Studio 2019](https://visualstudio.microsoft.com/downloads/). 

Make sure you install ""Desktop development with C++"" and check the option for ""MSVC v140 - VS 2015"" as pictured [here](https://i.imgur.com/SB3nUBV.png).

Download the latest release build from [build.project-osrm.org](http://build.project-osrm.org/).

    cd osrm_Release
    mkdir map
    cd map
    wget -O map.xml ""https://overpass-api.de/api/map?bbox=-71.1700,42.3175,-70.9829,42.4039""

    (or install from the link directly ""https://overpass-api.de/api/map?bbox=-71.1700,42.3175,-70.9829,42.4039"" and move to osrm-Release/map and change filename to map.xml)

    cd ..
    osrm-extract map/map.xml -p bicycle.lua
    osrm-contract map/map.xml.osrm
    osrm-routed -i [your IP here] -p 9002 map/map.xml.osrm

After setting up the OSRM backend the first time, you only need to run the command `osrm-routed -i [your IP here] -p 9002 map/map.xml.osrm` to launch the server.

# Setup frontend & backend server
Check these Python packages installed: requests, simplejson

#### RUN LOCAL SERVER
    python sim_serv.py
    navigate to http://localhost:8235

#### RUN SERVER ON Media Lab Virtual Machine (Ubuntu 16.04)
    #connect to the vm via terminal
    ssh ptinn@osrm.media.mit.edu
    password: ChangeThis!
    
    #use the shell file to launch both fron-end and back-end server
    sudo ./run_pev_sim.sh
    
    #exit the terminal view while keeping the server running
    logout
    
    #launch the app via browser 
    http://pev-simulation.media.mit.edu:8000
    
    #to kill the front-end app process, if you need to manually reset the app
    sudo kill -9 `sudo lsof -t -i:8000`
    
    #to view logs
    cat ~/osrm_out.log
    cat ~/sim_serv.log
    
    
",0,0,8,5,transportation,"[autonomous-systems, mobility-as-a-service, mobility-modeling, mobility-on-demand, simulation, transportation]",00000
512,NextBusApp,angezanetti,N/A,https://github.com/angezanetti/NextBusApp,https://api.github.com/repos/angezanetti/NextBusApp,"React Native app, check the next bus on my stop","# NextBus

First React Native project, nothing extraordianary here just some code to get my hands dirty and learn by doing :)

## What the hell is going on?

This app checks on `nextbus.info` and display when will be the next bus in the stop near my home!

## Licence
""THE BEER-WARE LICENSE"" (Revision 42):
As long as you retain this notice you can do whatever you want with this stuff. If we meet some day, and you think this stuff is worth it, you can buy me a beer in return.
",0,0,2,0,transportation,"[react-native, sanfrancisco, transportation]",00000
513,savari,aashishsingh2k,N/A,https://github.com/aashishsingh2k/savari,https://api.github.com/repos/aashishsingh2k/savari,"Savari is a one stop user customized travel android app. App auto-detects the user location via GPS to explore nearby places in the city in different categories like restaurants, Art/Entertainment etc that are auto customized to user preferences through their Facebook likes. The users can find best currency exchange rates as well as other utility options. Savari app provides users can explore these different places via price/ETA sorted ride sharing/public transit options which are powered by creator's other android program: Transportation App Savari also provides option to take pictures which are organized in different albums via photo location for easy sharing. Friends nearby integration with Facebook API is in beta development phase.","{'message': 'Not Found', 'documentation_url': 'https://docs.github.com/rest/repos/contents#get-repository-content'}",0,0,1,0,transportation,"[app, facebook, facebook-api, transportation]",00000
514,efa_monitor,tckb,N/A,https://github.com/tckb/efa_monitor,https://api.github.com/repos/tckb/efa_monitor,EFA Monitoring system - a departure monitoring systems for all transportation services in Germany,"_THIS PROJECT IS NOT MAINTAINED HERE ANYMORE!_

# (EFA) Elektronische Fahrplanauskunft Monitor
An Elixir wrapper around the transportation services across Germany. This is an Elixir Umbrella application where the main ""core"" logic resides in [`dm_core`](apps/dm_core) application. 

## Production release

### Phoenix Web frontend
[Web frontend](apps/dm_web_front/) is added as a part of releases. 


Assemble the artifact:

```bash
$ MIX_ENV=prod SECRET_KEY_BASE=<super_secret_key> PORT=<port> mix release web_frontend 

Release created at _build/prod/rel/web_frontend!

    # To start your system
    _build/prod/rel/web_frontend/bin/web_frontend start

Once the release is running:

    # To connect to it remotely
    _build/prod/rel/web_frontend/bin/web_frontend remote

    # To stop it gracefully (you may also send SIGINT/SIGTERM)
    _build/prod/rel/web_frontend/bin/web_frontend stop

To list all commands:

    _build/prod/rel/web_frontend/bin/web_frontend
```

# Disclaimer 
 Unless specified otherwise, the [License](LICENSE) applies to all files in this repository.
",0,0,2,1,transportation,"[efa, elixir, germany, transportation]",00000
515,tt,jocmp,N/A,https://github.com/jocmp/tt,https://api.github.com/repos/jocmp/tt,An HTTP Client wrapper for the Chicago Transit Authority Train Tracker API,"# tt

[![CircleCI](https://circleci.com/gh/jocmp/tt.svg?style=svg)](https://circleci.com/gh/jocmp/tt)

Library for fiddling around with Chicago Transit Authority Train Tracker API. Requires Golang v1.11 or above.

Demo project using the tt library can be found at <https://github.com/jocmp/ttsample>
",0,0,1,0,transportation,"[api-client, chicago-transit-authority, golang, transportation]",00000
516,circana,pmerinodiaz,N/A,https://github.com/pmerinodiaz/circana,https://api.github.com/repos/pmerinodiaz/circana,"CIRCANA Pro es una herramienta de apoyo en gestión estratégica y en toma de decisiones para empresas pesqueras, que permite automatizar los procesos de optimización de la captura de los recursos pesqueros. Fue programado en Java y los datos administrados con MySQL. ","{'message': 'Not Found', 'documentation_url': 'https://docs.github.com/rest/repos/contents#get-repository-content'}",0,0,2,0,transportation,"[agents, artificial-intelligence, heuristics, java, mysql, neural-networks, ocean, transportation]",00000
517,TransferTimetable,creationyun,N/A,N/A,https://api.github.com/repos/creationyun/TransferTimetable,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C188:5A27:726B68:EC59F9:6522434E.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,transportation,"[N, /, A]",00000
518,travelling-sallesman-problem,annepatricio,N/A,N/A,https://api.github.com/repos/annepatricio/travelling-sallesman-problem,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C18E:6EE6:6F1B80:E5BF22:6522434F.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,transportation,"[N, /, A]",00000
519,travel-data,J0ANMM,N/A,N/A,https://api.github.com/repos/J0ANMM/travel-data,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1BC:5F41:7030A1:E7F540:6522434F.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,transportation,"[N, /, A]",00000
520,TransportationSimplex,VyasKP7,N/A,N/A,https://api.github.com/repos/VyasKP7/TransportationSimplex,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1BD:178A:2CAB333:5B732DE:65224350.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,transportation,"[N, /, A]",00000
521,TCC-2022,Gui-FernandesBR,N/A,N/A,https://api.github.com/repos/Gui-FernandesBR/TCC-2022,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1AF:6611:6E85AD:E4A176:65224351.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,transportation,"[N, /, A]",00000
522,transroutownish-proto-bus-spring-boot,rgolubtsov,N/A,N/A,https://api.github.com/repos/rgolubtsov/transroutownish-proto-bus-spring-boot,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1DF:309A:2E685C4:5EAFB7A:65224351.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,transportation,"[N, /, A]",00000
523,transroutownish-proto-bus-clojure,rgolubtsov,N/A,N/A,https://api.github.com/repos/rgolubtsov/transroutownish-proto-bus-clojure,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C129:092A:717626:EA8634:65224352.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,transportation,"[N, /, A]",00000
524,PlanningTool,Quizzer,N/A,N/A,https://api.github.com/repos/Quizzer/PlanningTool,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C154:73C7:7236E2:EBD3E0:65224352.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,transportation,"[N, /, A]",00000
525,nyc-driving-income-impact,scottwn,N/A,N/A,https://api.github.com/repos/scottwn/nyc-driving-income-impact,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1E1:46E9:761679:F390A3:65224353.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,transportation,"[N, /, A]",00000
526,edkar,karz2411,N/A,N/A,https://api.github.com/repos/karz2411/edkar,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C147:5AB9:2C58281:5AD8154:65224353.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,transportation,"[N, /, A]",00000
527,web-trainstation-departureboard,BodoMinea,N/A,N/A,https://api.github.com/repos/BodoMinea/web-trainstation-departureboard,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C195:0C72:72FD4F:ED8C61:65224354.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,transportation,"[N, /, A]",00000
528,Marta_TTS,rainbooww,N/A,N/A,https://api.github.com/repos/rainbooww/Marta_TTS,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1B0:6611:6E88BA:E4A7DC:65224355.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,transportation,"[N, /, A]",00000
529,atd-cctv-service,cityofaustin,N/A,N/A,https://api.github.com/repos/cityofaustin/atd-cctv-service,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1EE:178A:2CABA08:5B740DD:65224355.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,transportation,"[N, /, A]",00000
530,XiaoqingDai.github.io,XiaoqingDai,N/A,N/A,https://api.github.com/repos/XiaoqingDai/XiaoqingDai.github.io,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C15F:784E:76A1AF:F4ED39:65224356.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,transportation,"[N, /, A]",00000
531,visualizations-r,sbrumb,N/A,N/A,https://api.github.com/repos/sbrumb/visualizations-r,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C197:64D2:7380F0:EE6CC0:65224356.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,transportation,"[N, /, A]",00000
532,Supply-Chain-Projects,KailunWang,N/A,N/A,https://api.github.com/repos/KailunWang/Supply-Chain-Projects,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C11A:17C0:2B1E7C:59E8F6:65224357.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,transportation,"[N, /, A]",00000
533,city-viz,cb-cities,N/A,N/A,https://api.github.com/repos/cb-cities/city-viz,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1FA:2EE5:2881D5C:5356948:65224358.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,transportation,"[N, /, A]",00000
534,kalibati,joehanz74,N/A,N/A,https://api.github.com/repos/joehanz74/kalibati,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1C4:643D:2A4C5DC:56BFDE6:65224358.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,transportation,"[N, /, A]",00000
535,transport-api,darrylms,N/A,N/A,https://api.github.com/repos/darrylms/transport-api,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1A3:47EA:26CC013:4FB3361:65224359.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,transportation,"[N, /, A]",00000
536,kat-tracker,milesshebar,N/A,N/A,https://api.github.com/repos/milesshebar/kat-tracker,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1BF:458F:2C6DAD1:5B1CE31:65224359.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,transportation,"[N, /, A]",00000
537,SharedParkingCalculator,joshuacayanan,N/A,N/A,https://api.github.com/repos/joshuacayanan/SharedParkingCalculator,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1F0:9938:29DE252:55F0FFB:6522435A.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,transportation,"[N, /, A]",00000
538,rodeo-town-taxi,tyxlloyd,N/A,N/A,https://api.github.com/repos/tyxlloyd/rodeo-town-taxi,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1AE:1CC6:2A5EBF9:56F75C3:6522435A.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,transportation,"[N, /, A]",00000
539,data-fusion,shawfa,N/A,N/A,https://api.github.com/repos/shawfa/data-fusion,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C182:0208:2E14B2A:5E6243B:6522435B.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,transportation,"[N, /, A]",00000
540,web,seabluetours,N/A,N/A,https://api.github.com/repos/seabluetours/web,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1DF:41EE:27D61A1:51FEC6E:6522435C.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,transportation,"[N, /, A]",00000
541,intro-to-R,ITSLeeds,N/A,N/A,https://api.github.com/repos/ITSLeeds/intro-to-R,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1CB:2772:28F75B0:5445DFE:6522435C.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,transportation,"[N, /, A]",00000
542,flixbus-ninja,holuond,N/A,N/A,https://api.github.com/repos/holuond/flixbus-ninja,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C14A:17C0:2B2335:59F2F3:6522435D.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,transportation,"[N, /, A]",00000
543,STM_Optimizer,Alauddin23,N/A,N/A,https://api.github.com/repos/Alauddin23/STM_Optimizer,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1B8:1560:290645F:544B908:6522435D.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,transportation,"[N, /, A]",00000
544,Predictive_Route_Analysis,sourceduty,N/A,N/A,https://api.github.com/repos/sourceduty/Predictive_Route_Analysis,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C119:2EE5:28823CF:53576AD:6522435E.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,transportation,"[N, /, A]",00000
545,Stargate-Customizations,stargate-rewritten,N/A,N/A,https://api.github.com/repos/stargate-rewritten/Stargate-Customizations,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C138:1ECC:2CB0C6:5CFB46:6522435F.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,transportation,"[N, /, A]",00000
546,hrva-traffic-data,jalbertbowden,N/A,N/A,https://api.github.com/repos/jalbertbowden/hrva-traffic-data,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1AD:17C0:2B24FC:59F6A3:6522435F.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,transportation,"[N, /, A]",00000
547,vdot-data,jalbertbowden,N/A,N/A,https://api.github.com/repos/jalbertbowden/vdot-data,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C142:7A65:2BDBE7:5B5A42:65224360.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,transportation,"[N, /, A]",00000
548,Civil-Engineering-Systems-Scripts,Kladar,N/A,N/A,https://api.github.com/repos/Kladar/Civil-Engineering-Systems-Scripts,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1D1:1E37:2CA65F:5CD6CD:65224360.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,transportation,"[N, /, A]",00000
549,gml-explorer,cb-cities,N/A,N/A,https://api.github.com/repos/cb-cities/gml-explorer,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C13D:2EE5:28826D2:5357CF4:65224361.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,transportation,"[N, /, A]",00000
550,BikeCount,flynn-d,N/A,N/A,https://api.github.com/repos/flynn-d/BikeCount,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C15B:1ECC:2CB368:5D00E6:65224362.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,transportation,"[N, /, A]",00000
551,sg-bus,suwarnoong,N/A,N/A,https://api.github.com/repos/suwarnoong/sg-bus,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C102:5B68:2C8494:5CC233:65224362.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,transportation,"[N, /, A]",00000
552,social-transit-example,adam-rumpf,N/A,N/A,https://api.github.com/repos/adam-rumpf/social-transit-example,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C11F:1E37:2CA90E:5CDC80:65224363.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,transportation,"[N, /, A]",00000
553,Rosava-Group,PAZIUK,N/A,N/A,https://api.github.com/repos/PAZIUK/Rosava-Group,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C187:2772:28F7D04:5446D01:65224364.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,transportation,"[N, /, A]",00000
554,transport-engine,flotea-io,N/A,N/A,https://api.github.com/repos/flotea-io/transport-engine,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C144:6829:2E742E7:5F22F25:65224364.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,transportation,"[N, /, A]",00000
555,geo-coordinate-calc-and-pandas,nandoabreu,N/A,N/A,https://api.github.com/repos/nandoabreu/geo-coordinate-calc-and-pandas,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C13D:2EE5:2882A68:5358467:65224365.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,transportation,"[N, /, A]",00000
556,nearest_tube_station,the-nemz,N/A,N/A,https://api.github.com/repos/the-nemz/nearest_tube_station,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1DA:2EE5:2882AF9:5358596:65224365.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,transportation,"[N, /, A]",00000
557,thesismodel,korarsenault,N/A,N/A,https://api.github.com/repos/korarsenault/thesismodel,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C164:7E09:2618087:4E815DA:65224366.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,transportation,"[N, /, A]",00000
558,mn-accidents,lukezaruba,N/A,N/A,https://api.github.com/repos/lukezaruba/mn-accidents,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C190:2EE5:2882C15:53587B1:65224366.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,transportation,"[N, /, A]",00000
559,IO-Solver,LeonardoADS08,N/A,N/A,https://api.github.com/repos/LeonardoADS08/IO-Solver,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C17E:1D49:2C70D53:5B18FBA:65224367.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,transportation,"[N, /, A]",00000
560,ProvincialBusTransportationSystem,bustransit,N/A,N/A,https://api.github.com/repos/bustransit/ProvincialBusTransportationSystem,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C140:406C:2D28CF:5DE184:65224368.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,transportation,"[N, /, A]",00000
561,Used-Car-Catalogue,Ankit152,N/A,N/A,https://api.github.com/repos/Ankit152/Used-Car-Catalogue,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C13E:24F2:29CA8FF:55CB7C8:65224368.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,transportation,"[N, /, A]",00000
562,Amsterdam-Transportation-Project,gorkemguneser,N/A,N/A,https://api.github.com/repos/gorkemguneser/Amsterdam-Transportation-Project,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1CF:6B96:288B8C6:53707F7:65224369.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,transportation,"[N, /, A]",00000
563,transportation-dept-r-and-d,EsriPS,N/A,N/A,https://api.github.com/repos/EsriPS/transportation-dept-r-and-d,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C124:1D49:2C70FFC:5B1952D:65224369.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,transportation,"[N, /, A]",00000
564,BetterMinecarts,Xannosz,N/A,N/A,https://api.github.com/repos/Xannosz/BetterMinecarts,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1E2:0BEC:2C139B:5BCF66:6522436A.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,transportation,"[N, /, A]",00000
565,hyperloop-optimiser,aabizri,N/A,N/A,https://api.github.com/repos/aabizri/hyperloop-optimiser,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C11E:2772:28F82AE:54478F2:6522436B.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,transportation,"[N, /, A]",00000
566,EdUTrans,LTWS,N/A,N/A,https://api.github.com/repos/LTWS/EdUTrans,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C191:33EB:2DBFF9:5F112D:6522436B.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,transportation,"[N, /, A]",00000
567,sun2018shortterm-github,SunnyBingoMe,N/A,N/A,https://api.github.com/repos/SunnyBingoMe/sun2018shortterm-github,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1EF:1560:2907274:544D63E:6522436C.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,transportation,"[N, /, A]",00000
568,idfMobilitesApplication,14chanwa,N/A,N/A,https://api.github.com/repos/14chanwa/idfMobilitesApplication,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C150:7A65:2BE77F:5B7247:6522436C.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,transportation,"[N, /, A]",00000
569,ha-vasttrafik,Miicroo,N/A,N/A,https://api.github.com/repos/Miicroo/ha-vasttrafik,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C123:4776:2E0374:5F895D:6522436D.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,transportation,"[N, /, A]",00000
570,docs,maas-alliance,N/A,N/A,https://api.github.com/repos/maas-alliance/docs,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C125:6829:2E74C22:5F24246:6522436E.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,transportation,"[N, /, A]",00000
571,jbyls.github.io,jbyls,N/A,N/A,https://api.github.com/repos/jbyls/jbyls.github.io,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1AD:17C0:2B2EE7:5A0B88:6522436E.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,transportation,"[N, /, A]",00000
572,hs-train-scraping,pabloruizfv,N/A,N/A,https://api.github.com/repos/pabloruizfv/hs-train-scraping,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1FD:797D:2A2ACF:57F179:6522436E.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,transportation,"[N, /, A]",00000
573,transportation-eta,willytylee,N/A,N/A,https://api.github.com/repos/willytylee/transportation-eta,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1C2:643D:2A4DEC8:56C3143:6522436F.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,transportation,"[N, /, A]",00000
574,transroutownish-proto-bus-groovy,rgolubtsov,N/A,N/A,https://api.github.com/repos/rgolubtsov/transroutownish-proto-bus-groovy,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1D2:6D2F:300775:63A880:6522436F.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,transportation,"[N, /, A]",00000
575,ngangkot,mnindrazaka,N/A,N/A,https://api.github.com/repos/mnindrazaka/ngangkot,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1A2:18E3:2BA2C9:5ADC28:65224370.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,transportation,"[N, /, A]",00000
576,distance_by_plane_in_switzerland_in_2015,antonindanalet,N/A,N/A,https://api.github.com/repos/antonindanalet/distance_by_plane_in_switzerland_in_2015,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1DC:47EA:26CD350:4FB5BBE:65224371.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,transportation,"[N, /, A]",00000
577,04-VietnamBusInfo,huntertran,N/A,N/A,https://api.github.com/repos/huntertran/04-VietnamBusInfo,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C126:1ECC:2CC0B6:5D1C97:65224371.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,transportation,"[N, /, A]",00000
578,rotas,veeqtoh,N/A,N/A,https://api.github.com/repos/veeqtoh/rotas,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C17C:797D:2A2DBE:57F78B:65224372.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,transportation,"[N, /, A]",00000
579,graphhopper,graphhopper,N/A,N/A,https://api.github.com/repos/graphhopper/graphhopper,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C127:6584:2860CDC:5307A3E:65224372.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
580,Transportr,grote,N/A,N/A,https://api.github.com/repos/grote/Transportr,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1B5:797D:2A2EB6:57F982:65224373.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
581,onebusaway-android,OneBusAway,N/A,N/A,https://api.github.com/repos/OneBusAway/onebusaway-android,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C13E:24F2:29CB28C:55CCBC3:65224374.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
582,navitia,hove-io,N/A,N/A,https://api.github.com/repos/hove-io/navitia,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C132:6C98:2CF70B:5D84B5:65224374.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
583,node-gtfs,BlinkTagInc,N/A,N/A,https://api.github.com/repos/BlinkTagInc/node-gtfs,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1B7:7D6D:2C4526:5C307C:65224375.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
584,public-transport-enabler,schildbach,N/A,N/A,https://api.github.com/repos/schildbach/public-transport-enabler,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C15F:1E37:2CBE35:5D080D:65224375.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
585,busrouter-sg,cheeaun,N/A,https://github.com/cheeaun/busrouter-sg,https://api.github.com/repos/cheeaun/busrouter-sg,BusRouter SG: Singapore Bus Routes Explorer,"<div align=""center"">
  <img src=""icons/icon.svg"" width=""96"" alt="""">

  # BusRouter SG

**Singapore Bus Routes Explorer** 🚌 🗺 🇸🇬
</div>

Explore bus stops and routes on the map for all bus services in Singapore, with realtime bus arrival times and per-bus-stop passing routes overview.

[**Website**](https://busrouter.sg/) &nbsp;&nbsp;&nbsp; [**Blog Post**](https://cheeaun.com/blog/2019/02/building-busrouter-sg/)

[![Screenshot of BusRouter SG](screenshots/screenshot-4.jpg)](https://busrouter.sg/)

[![Screenshot of BusRouter SG](screenshots/screenshot-5.jpg)](https://busrouter.sg/)

## ✨ Features

- **All** bus stops shown even in low zoom levels.
- **Full routes** display with all stops for every service.
- View all routes **passing through** a stop.
- Bus **arrival times** for every stop.
- **First/last timings** for all services.

## 🕰 Previously

_Previously_ known as Singapore Bus Routes Explorer, abbreviated as 'SBRE' and _previously_ looks like this:

[![Screenshot of Singapore Bus Routes Explorer](screenshots/screenshot-1.png)](https://busrouter.sg/)

## Visualization mini-site

A separate mini-site showing **ALL** stops and routes on a map. All of them.

Check it out: [Visualization mini-site](https://busrouter.sg/visualization/) (⚠️ Uses a lot of bandwidth).

![](screenshots/visualization/screenshot-1.jpg)

## Technicalities

### Data

All data such as bus stops, services and routes are mostly _scraped_ from <https://www.lta.gov.sg/>, which means they are copyrighted by the [Land Transport Authority](https://www.lta.gov.sg/content/ltagov/en/terms-of-use.html).

They are available here: [cheeaun/sgbusdata](https://github.com/cheeaun/sgbusdata).

### Web App

The scripts for the web app:

- `npm start` - start server for development
- `npm run build` - build for production and deployment, in `./dist` folder.

### Localization

[![Crowdin](https://badges.crowdin.net/busrouter-sg/localized.svg)](https://crowdin.com/project/busrouter-sg)

**[➡️ Start translating ⬅️](https://crwd.in/busrouter-sg)**

### Visualization

At least Node.js 14 is required.

The scripts to generate the data, in order:

1. `node visualization/build-routes.mjs`
   - Reads `data.busrouter.sg/v1/data/stops.min.json` and transform routes data with ""levels"" for 3D extrusion.
   - Generates `visualization/data/routes.json` and `visualization/data/levels.json` to be read by the `build-stops` script.
2. `node visualization/build-stops.mjs`
   - Reads `data.busrouter.sg/v1/data/stops.min.geojson` and _buffered_ into triangle polygons which will be 3D-extruded.
   - Generates `visualization/data/stops.3d.json`.

## 📜 License

Data © [LTA](http://www.mytransport.sg/content/mytransport/home/dataMall/termOfUse.html) © [OneMap](https://www.onemap.sg/legal/termsofuse.html) © [OSM contributors](https://www.openstreetmap.org/copyright). Everything else: [MIT](http://cheeaun.mit-license.org/)

## 🎤 Feedback

If you have any feedback, leave them on [Discussions](https://github.com/cheeaun/busrouter-sg/discussions) or tweet me [@cheeaun on Twitter](http://twitter.com/cheeaun).

## 🙇‍ Credits

- Inspired by [this tweet](https://twitter.com/mengwong/status/155511398653362177).
- Icon is from [The Noun Project](http://thenounproject.com/noun/bus/#icon-No97)
- Color scheme initially _inspired_ by [Gothere.sg](http://gothere.sg/)
- Thanks to Eddy Yanto for building the [iPad app](https://github.com/eddyyanto/SGBusRouter) until mid-2015.
",302,302,21,18,public-transportation,"[bus, bus-arrival, bus-number, bus-services, bus-station, bus-stop, bus-timing, buses, public-transportation, singapore, transportation]",00000
586,onebusaway-application-modules,OneBusAway,N/A,N/A,https://api.github.com/repos/OneBusAway/onebusaway-application-modules,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C155:47EA:26CD7A5:4FB64D7:65224376.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
587,gtfs-to-html,BlinkTagInc,N/A,N/A,https://api.github.com/repos/BlinkTagInc/gtfs-to-html,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C198:18E3:2BA842:5AE78F:65224376.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
588,friendly-public-transport-format,public-transport,N/A,N/A,https://api.github.com/repos/public-transport/friendly-public-transport-format,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C183:1CC6:2A60557:56FAA97:65224377.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
589,osm2gtfs,grote,N/A,N/A,https://api.github.com/repos/grote/osm2gtfs,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1CA:17C0:2B362E:5A1AC6:65224378.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
590,gtfs-to-geojson,BlinkTagInc,N/A,N/A,https://api.github.com/repos/BlinkTagInc/gtfs-to-geojson,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1A5:5B68:2C9740:5CE926:65224378.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
591,gtfs-realtime-validator,CUTR-at-USF,N/A,N/A,https://api.github.com/repos/CUTR-at-USF/gtfs-realtime-validator,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C168:9938:29DFF39:55F4C06:65224379.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
592,gtfsrouter,UrbanAnalyst,N/A,N/A,https://api.github.com/repos/UrbanAnalyst/gtfsrouter,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C19E:505E:2F3AD2:61E2C8:65224379.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
593,vvo,kiliankoe,N/A,N/A,https://api.github.com/repos/kiliankoe/vvo,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C16C:1ECC:2CC86E:5D2CA4:6522437A.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
594,bustime,norn,N/A,https://github.com/norn/bustime,https://api.github.com/repos/norn/bustime,Web and API for public transport real-time monitoring and visualization.,"# Bustime - public trasport online
Checkout [busti.me](https://busti.me/) for live example.

Python/Django app process and visualize public transport vehicle positions using GPS coordinates.
This collection of programs are able to detect current nearest stop, vehicle direction,
real-time timetable, sleeping state (not moved for a long time), zombie state (broken vehicles).

## Supported transport types:
* bus
* trolleybus
* tramway
* inter-city bus
* shuttle bus

## Features
* high optimization for rapid server replies
* websocket real-time updates
* modern HTML5 standard compliance
* simplified version for older devices and browsers (even with no JS)
* OpenStreetmap support
* Rainsys system updates only changed information (broadcasted via websocket)
* ""MultiBus"" technology allows to track all vehicles of selected route

## How to install
1. Install Ubuntu 14.04 LTS (tested)
2. Make virtualenv and install pip packages from ```docs/pips/pips.freeze```
3. Initialize Django environment
4. Fill in city, bus, bus stop and route tables
5. Generate list of stops for JS at ```utils/nbusstops-export.py```
6. Edit zbusupd.py according to active cities
7. Install supervisor and daemons from the ```addons``` list
8. Run

Optionally you could install:
* [Semantic UI](http://semantic-ui.com/) (CSS framework)
* [r.js optimizer](http://requirejs.org/docs/optimization.html) (compile collection of JS in one file)
* [GeoLite2](http://dev.maxmind.com/geoip/geoip2/geolite2/) (for user's city detection by IP address)

Scripts for building CSS and JS: 99-release-*.sh

#### License
Published under [MIT](LICENSE) license.

",65,65,5,2,public-transportation,"[bus, django, gps, gtfs, gtfs-rt, opendata, public-transport, public-transportation, realtime, tracking, transportation]",00000
595,vbb-modules,derhuerst,N/A,N/A,https://api.github.com/repos/derhuerst/vbb-modules,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C16A:336C:2D287C7:5C93F3C:6522437B.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
596,schiene,kennell,N/A,https://github.com/kennell/schiene,https://api.github.com/repos/kennell/schiene,:train2: schiene is a Python library for interacting with Bahn.de,"# 🚆 schiene
schiene is a Python library for interacting with Bahn.de. Consider it a unofficial API client. This library uses **realtime,  live** information retrieved from Bahn.de and therefore contains information on delays, cancellations etc.

<sub>Note: if you do not need live information (delays etc.) you can use the new official [Fahrplan API](https://data.deutschebahn.com/dataset/api-fahrplan.html) from Deutsche Bahn. Also, the Bahn.de HTML code is a steaming pile of shit that can cause this library to break at any time. Do not use for any critical stuff.</sub>

## Install

```
pip install schiene
```

## Usage examples
```python
>>> import schiene
>>> s = schiene.Schiene()
>>> s.connections('Mannheim HbF', 'Stuttgart HbF')
[{'arrival': '13:08',
  'canceled': True,
  'delay' : {
    'delay_departure' : 15,
    'delay_arrival': 0
  }
  'departure': '12:30',
  'details': 'http://mobile.bahn.de/bin/mobil/query.exe/dox?ld=15085&n=1&i=or.0179785.1439546366&rt=1&use_realtime_filter=1&co=C0-1&vca&HWAI=CONNECTION$C0-1!details=opened!&',
  'price': 39.0,
  'products': ['ICE'],
  'time': '0:38',
  'transfers': 0},
 {'arrival': '13:54',
  'departure': '12:38',
  'details': 'http://mobile.bahn.de/bin/mobil/query.exe/dox?ld=15085&n=1&i=or.0179785.1439546366&rt=1&use_realtime_filter=1&co=C0-2&vca&HWAI=CONNECTION$C0-2!details=opened!&',
  'ontime': True,
  'price': 30.0,
  'products': ['S', 'EC'],
  'time': '1:16',
  'transfers': 1},
  ...]
>>> s.stations('Hamburg')
[{'extId': '008002549',
  'id': 'A=1@O=Hamburg '
        'Hbf@X=10006908@Y=53552732@U=80@L=008002549@B=1@p=1439332022@',
  'prodClass': '15',
  'state': 'id',
  'type': '1',
  'typeStr': '[Bhf/Hst]',
  'value': 'Hamburg Hbf',
  'weight': '24258',
  'xcoord': '10006908',
  'ycoord': '53552732'},
 {'extId': '008002548',
  'id': 'A=1@O=Hamburg '
        'Dammtor@X=9989568@Y=53560751@U=80@L=008002548@B=1@p=1439332022@',
  'prodClass': '31',
  'state': 'id',
  'type': '1',
  'typeStr': '[Bhf/Hst]',
  'value': 'Hamburg Dammtor',
  'weight': '27663',
  'xcoord': '9989568',
  'ycoord': '53560751'},
  ...]
```

## Projects using schiene

* [Home Assistant](https://github.com/home-assistant/home-assistant)
* [Deutsche Bahn Home Assistant Sensor](https://github.com/FaserF/ha-deutschebahn)

<sub>Create a pull request to add your project here</sub>

",52,52,9,8,public-transportation,"[bahn, germany, public-transportation, python, transportation]",00000
597,european-transport-operators,public-transport,N/A,N/A,https://api.github.com/repos/public-transport/european-transport-operators,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C110:458F:2C6FDF7:5B216E0:6522437B.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
598,GTFS-ride,ODOT-PTS,ODOT-PTS,https://github.com/ODOT-PTS/GTFS-ride,https://api.github.com/repos/ODOT-PTS/GTFS-ride,GTFS-ride is an open standard for storing and sharing fixed-route transit ridership data.,"The repository contains specification for GTFS-ride, an open standard for storing and sharing fixed-route transit ridership data.

[Read more about GTFS-Ride](https://gtfsride.org)
",47,47,22,9,public-transportation,"[public-transportation, ridership, transit, transportation]",00000
599,trip-based-public-transit-routing-algo,mk-fg,N/A,N/A,https://api.github.com/repos/mk-fg/trip-based-public-transit-routing-algo,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1B2:5A86:2BD235A:59E5D18:6522437C.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
600,OpenMetroMaps,OpenMetroMaps,N/A,N/A,https://api.github.com/repos/OpenMetroMaps/OpenMetroMaps,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C19E:505E:2F3D85:61E876:6522437C.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
601,dvbjs,offenesdresden,N/A,N/A,https://api.github.com/repos/offenesdresden/dvbjs,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1BB:6C98:2CFF32:5D95B1:6522437D.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
602,dvbpy,offenesdresden,N/A,N/A,https://api.github.com/repos/offenesdresden/dvbpy,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C106:5A86:2BD2518:59E60B5:6522437E.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
603,OSDM,UnionInternationalCheminsdeFer,N/A,N/A,https://api.github.com/repos/UnionInternationalCheminsdeFer/OSDM,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C10C:4776:2E138C:5FAAD6:6522437E.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
604,RailFansMap,RailFansCanada,N/A,N/A,https://api.github.com/repos/RailFansCanada/RailFansMap,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C11C:24F2:29CBBDD:55CDF27:6522437F.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
605,spuf-314,Oussama-Abderrahim,N/A,N/A,https://api.github.com/repos/Oussama-Abderrahim/spuf-314,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C19E:505E:2F4048:61EE2D:6522437F.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
606,WarsawGTFS,MKuranowski,N/A,N/A,https://api.github.com/repos/MKuranowski/WarsawGTFS,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C129:22D5:2F6A5D9:6118C3C:65224380.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
607,mobivoc,vocol,N/A,N/A,https://api.github.com/repos/vocol/mobivoc,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C148:1ECC:2CCE60:5D3914:65224381.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
608,kiel-live,kiel-live,N/A,N/A,https://api.github.com/repos/kiel-live/kiel-live,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C16B:38A4:2BF25E0:5A2E381:65224381.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
609,TimisoaraPublicTransport,MihaiBalint,N/A,N/A,https://api.github.com/repos/MihaiBalint/TimisoaraPublicTransport,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C182:0208:2E1713D:5E6735D:65224382.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
610,walkalytics,zumbov2,N/A,N/A,https://api.github.com/repos/zumbov2/walkalytics,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C169:6829:2E75EBA:5F26921:65224383.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
611,transit,swimos,N/A,N/A,https://api.github.com/repos/swimos/transit,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C170:500E:2A81E09:573E292:65224383.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
612,timetable_kit,neroden,N/A,https://github.com/neroden/timetable_kit,https://api.github.com/repos/neroden/timetable_kit,A Python toolkit for generating human-readable timetables from GTFS data; uses PANDAS and gtfs_kit,"{'message': 'Not Found', 'documentation_url': 'https://docs.github.com/rest/repos/contents#get-repository-content'}",23,23,6,1,public-transportation,"[gtfs, html-timetables, metro, pandas, public-transport, public-transportation, python, static-gtfs, timetable, trains, transit, transit-data, transportation, trip-planning]",00000
613,Transit-Talk,TransitTalk,N/A,N/A,https://api.github.com/repos/TransitTalk/Transit-Talk,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1EA:500E:2A81EC2:573E424:65224384.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
614,poland-public-transport-api,konhi,N/A,N/A,https://api.github.com/repos/konhi/poland-public-transport-api,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C13C:7E09:26195FE:4E84312:65224384.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
615,dm_tomatrixled,d3d9,N/A,N/A,https://api.github.com/repos/d3d9/dm_tomatrixled,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C199:5A71:30757F5:6322139:65224385.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
616,DVB,kiliankoe,N/A,N/A,https://api.github.com/repos/kiliankoe/DVB,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C110:458F:2C70AFC:5B231D0:65224385.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
617,lta-rs,lta-rs,N/A,N/A,https://api.github.com/repos/lta-rs/lta-rs,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1CD:6584:2861DC5:5309CDA:65224386.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
618,SeviBus,Sloy,N/A,N/A,https://api.github.com/repos/Sloy/SeviBus,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C14E:3B38:30103E:639365:65224387.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
619,osm-pt-ngx-leaflet,dkocich,N/A,N/A,https://api.github.com/repos/dkocich/osm-pt-ngx-leaflet,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1AF:643D:2A4FACD:56C6AEF:65224387.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
620,BusRouteJS,janithl,N/A,https://github.com/janithl/BusRouteJS,https://api.github.com/repos/janithl/BusRouteJS,A JS rewrite of the original bus route finder.,"BusRouteJS
==========

A JS rewrite of bus route finder.

Currently in preliminary development, so everything is subject to change
without notice.

Demo
----

[There's a demo here](http://janithl.github.io/BusRouteJS/). You 
have to turn on touch event emulation on Chrome to access the modal screens.

Install
-------

Clone the repo and run `npm install`.

API
---

Creating a new Router object and calling  `.findRoutes(from, to)` where `from` is 
the source place ID and `to` is the destination place ID (both integers) will 
return an array of Javascript objects like this:

```javascript
var router = new Router();
router.findRoutes(252, 235);

[
	{
		""from"":""252"",
		""routes"":[
			{""routes"":[""1"",""2"",""4"",""5"",""6"",""19"",""20""],""distance"":4144},
			{""routes"":[""26""],""distance"":3347}
		],
		""changes"":[""53""],
		""to"":""235"",
		""distance"":7491
	},
	{
		""from"":""252"",
		""routes"":[
			{""routes"":[""1"",""2"",""4"",""5"",""6"",""19"",""20""],""distance"":12324},
			{""routes"":[""12"",""13"",""14""],""distance"":6661}
		],
		""changes"":[""39""],
		""to"":""235"",
		""distance"":18985
	},
	{
		""from"":""252"",
		""routes"":[
			{""routes"":[""1"",""2"",""4"",""5"",""6"",""19"",""20""],""distance"":12936},
			{""routes"":[""12"",""13"",""14""],""distance"":7273}
		],
		""changes"":[""38""],
		""to"":""235"",
		""distance"":20209
	},
	...
]
```

The biggest improvement over the last (PHP) version is that it now
handles similar (almost duplicate, but alternate - like Kottawa/Pettah and Homagama/Pettah)
routes gracefully, and runs completely on the clientside, with big popping 
Google Maps to boot.

License
-------

Released under a permissive MIT license.
",17,17,6,0,public-transportation,"[bus, buses, javascript, public-transportation, react, shortest-paths, sri-lanka, transportation]",00000
621,ptna,osm-ToniE,N/A,N/A,https://api.github.com/repos/osm-ToniE/ptna,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C10B:3493:2741F5B:50D17D9:65224388.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
622,BusFollower,argilo,N/A,N/A,https://api.github.com/repos/argilo/BusFollower,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C178:2EE5:2884B48:535C8AC:65224388.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
623,ara,enroute-mobi,N/A,N/A,https://api.github.com/repos/enroute-mobi/ara,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C146:4771:2CB81D:5CF16E:65224389.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
624,HART-GTFS-realtimeGenerator,CUTR-at-USF,N/A,N/A,https://api.github.com/repos/CUTR-at-USF/HART-GTFS-realtimeGenerator,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C11A:17C0:2B42F7:5A356E:65224388.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
625,bookingAPI,schlpbch,N/A,N/A,https://api.github.com/repos/schlpbch/bookingAPI,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C13E:24F2:29CC767:55CF719:65224389.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
626,hslhrt-hass-custom,anand-p-r,N/A,N/A,https://api.github.com/repos/anand-p-r/hslhrt-hass-custom,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C158:3119:2C1BA05:5A66C81:6522438A.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
627,Bus-Route-Finder,janithl,N/A,https://github.com/janithl/Bus-Route-Finder,https://api.github.com/repos/janithl/Bus-Route-Finder,Just a simple site that lets you find buses from A to B in Colombo. Find a newer JS version here: https://github.com/janithl/BusRouteJS,"{'message': 'Not Found', 'documentation_url': 'https://docs.github.com/rest/repos/contents#get-repository-content'}",14,14,4,1,public-transportation,"[bus, buses, php, public-transportation, shortest-paths, sri-lanka, transportation]",00000
628,alfred_dvb,kiliankoe,N/A,N/A,https://api.github.com/repos/kiliankoe/alfred_dvb,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C176:33C6:2A25BB8:569CAD4:6522438B.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
629,osmot,trolleway,N/A,N/A,https://api.github.com/repos/trolleway/osmot,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C159:1CC6:2A6194A:56FD402:6522438B.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
630,bmtc,tachyons,N/A,N/A,https://api.github.com/repos/tachyons/bmtc,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1C2:643D:2A50166:56C786B:6522438C.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
631,Cobweb,Zabuzard,N/A,N/A,https://api.github.com/repos/Zabuzard/Cobweb,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1E3:840D:29652F3:5518C2C:6522438D.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
632,bussiaeg,karlkoorna,N/A,N/A,https://api.github.com/repos/karlkoorna/bussiaeg,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1F5:5A86:2BD3A1F:59E8BDC:6522438D.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
633,european-transport-modules,public-transport,N/A,N/A,https://api.github.com/repos/public-transport/european-transport-modules,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C15D:17C0:2B485E:5A40B7:6522438E.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
634,aseag-python,feuerrot,N/A,N/A,https://api.github.com/repos/feuerrot/aseag-python,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C113:7890:2C2625:5BEE88:6522438E.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
635,CZ-Public-Transport,bruxy70,N/A,N/A,https://api.github.com/repos/bruxy70/CZ-Public-Transport,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C198:18E3:2BBE78:5B15EF:6522438F.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
636,VigoBusAPI,David-Lor,N/A,N/A,https://api.github.com/repos/David-Lor/VigoBusAPI,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1F4:47EA:26CF18B:4FB9A83:65224390.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
637,bus-sg,ninest,N/A,N/A,https://api.github.com/repos/ninest/bus-sg,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C129:22D5:2F6B956:611B47B:65224390.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
638,maas.guide,maas-alliance,maas-alliance,https://github.com/maas-alliance/maas.guide,https://api.github.com/repos/maas-alliance/maas.guide,Guidebook to help Mobility as a Service providers.,"# MaaS Guide _\(alpha\)_

Guidebook to help Mobility as a Service \(MaaS\) providers.

One of the principle goals of the Mobility as a Service movement is to build a **unified marketplace** of transportation options, so that people can travel freely while experiencing a **simple and consistent user experience**.

It is the **user oriented approach** that distinguishes MaaS from other related concepts, such as multi-modality.

## Goal

This guide is intended as a high-level overview of the key aspects needed to sustain a MaaS ecosystem. Each key concept is outlined on 1-2 pages, in plain language with links for further reading.

## Intended audience

This book is intended for stakeholders in transportation and MaaS providers. It offers a conceptual and practical framework that can be shared by managers, planners, developers, and even end users of transportation and mobility services.

## Attribution

This work is provided by the [MaaS Alliance](https://maas-alliance.eu/), a public-private partnership creating the foundations for a common approach to MaaS, unlocking the economies of scale needed for successful implementation and take-up of MaaS in Europe and beyond. MaaS Guidebook is built and maintained on voluntary basis by MaaS Alliance's working group Technology and standards. The Guidebook is currently in very early phase.

",12,12,7,4,public-transportation,"[bus, car-rental, car-sharing, mobility, mobility-as-a-service, mobility-concepts, public-transport, public-transportation, subway, taxi, train, tram, transport, transportation]",00000
639,prague-public-transport,davidvavra,N/A,N/A,https://api.github.com/repos/davidvavra/prague-public-transport,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C18D:7D6D:2C5C4B:5C60F1:65224391.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
640,pytravelcard,unlobito,N/A,N/A,https://api.github.com/repos/unlobito/pytravelcard,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C13F:47EA:26CF355:4FB9E47:65224391.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
641,Lebanese-Bus-Routes,LebaneseDevelopers,N/A,N/A,https://api.github.com/repos/LebaneseDevelopers/Lebanese-Bus-Routes,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C11F:1E37:2CDF01:5D4BB4:65224392.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
642,chouette-core,enroute-mobi,N/A,N/A,https://api.github.com/repos/enroute-mobi/chouette-core,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C187:2772:28FAC66:544CF66:65224393.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
643,Public-Transport-Timetable-Alfred-Workflow,josefweibel,N/A,N/A,https://api.github.com/repos/josefweibel/Public-Transport-Timetable-Alfred-Workflow,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C14F:1D49:2C743E5:5B2001F:65224393.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
644,PublicTransportNetworks,FOR2083,FOR2083,https://github.com/FOR2083/PublicTransportNetworks,https://api.github.com/repos/FOR2083/PublicTransportNetworks,"The grid dataset, provided by DFG research unit FOR2083","# Public Transport Networks
Public Transport Networks is a networks repository for public transport research. It provides networks as test instances for the following types of problems:
  - Public transport network design problem (NDP)
  - Public transport vehicle and crew scheduling
  - Public transport networks with disturbances
  - Public transport assignment
  - Handling of ridesharing trips

# How the Data is Organized

Each individual network and related files is stored in a separate folder. Each folder contains the following subfolders:
  - Input: provides data describing the transport supply (nodes, stops, links, running times)  and data describing the travel demand (traffic zones, trips between traffic zones)
  - Solution_NDP_Summary: Overview of all solutions for the Network Design Problem
  -	Solution_NDP_Name: Description of a particular solution for the Network Design Problem 
  
# License 

The current data sets are a result of the research project ""[FOR 2083: Integrated Planning For Public Transportation](https://for2083.math.uni-goettingen.de/en/project)"" funded by the German Research Association DFG. Data sets are for academic research purposes only. Users are fully responsible for any results or conclusions obtained by using these data sets. Users must indicate the source of any dataset they are using in any publication that relies 
on any of the datasets provided in this web site.  The Research Group FOR 2083 is not responsible for the content of the data sets. Agencies, organizations, institutions and individuals acknowledged in this web site for their contribution to the datasets are not responsible for the content or the correctness of the datasets.

# Summary of Networks

| Network                                            | Zones | Links  | Nodes  | Stops  |
| ---                                                | ---   | ---    | ---    | ---    |
| Grid 5x5                                           |    25 |     80 |     25 |     25 |
| Grid 21x21                                         |   100 |   1680 |    441 |    341 |
| Ring 8x11                                          |   161 |    640 |    161 |    161 |
| Ring 16x22                                         |   672 |   6720 |   2689 |    673 |
| SiouxFalls                                         |    24 |     76 |     24 |     74 |
| Erding											                       |    52 |    146 |     52 |     52 |
| Stuttgart                                          |   588 |   1436 |    577 |    577 |

# Formats
The  data is provided in the following formats
  - text-format [LimTim](https://lintim.math.uni-goettingen.de/index.php?go=main.php&lang=en)
  - text-format [VISUM](http://vision-traffic.ptvgroup.com/en-us/products/ptv-visum/)
  - spreadsheet-format (.xls)
  - binary-format [VISUM](http://vision-traffic.ptvgroup.com/en-us/products/ptv-visum/)
  

# Other Related Projects
- [LinTim](https://lintim.net/)
- [Transportation Networks](https://github.com/bstabler/TransportationNetworks)
",11,11,2,0,public-transportation,"[dataset, lintim, public-transport, public-transportation, transportation, transportation-network, visum]",00000
645,access-to-services,datasciencecampus,N/A,N/A,https://api.github.com/repos/datasciencecampus/access-to-services,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1CF:6B96:288EA51:5376E64:65224394.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
646,tpgwidget,tpgwidget,N/A,N/A,https://api.github.com/repos/tpgwidget/tpgwidget,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1AD:17C0:2B4D9E:5A4BA0:65224394.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
647,hst-svg-netzplan,d3d9,N/A,N/A,https://api.github.com/repos/d3d9/hst-svg-netzplan,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C16E:3AA3:2DC30DD:5DAD952:65224395.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
648,gtfs-php-sdk,trafiklab,N/A,N/A,https://api.github.com/repos/trafiklab/gtfs-php-sdk,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1B4:1364:7744CD:F60693:65224396.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
649,web,green-traveller,N/A,N/A,https://api.github.com/repos/green-traveller/web,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1CC:6A74:1A4232F:36157FD:65224396.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
650,atmmi-info-api,moebiusmania,N/A,N/A,https://api.github.com/repos/moebiusmania/atmmi-info-api,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1BC:5F41:7072F1:E87E78:65224397.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
651,python-opendata-transport,home-assistant-ecosystem,N/A,N/A,https://api.github.com/repos/home-assistant-ecosystem/python-opendata-transport,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C178:178A:2CAFF50:5B7CEED:65224397.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
652,sitp_scraper,cansadadeserfeliz,N/A,https://github.com/cansadadeserfeliz/sitp_scraper,https://api.github.com/repos/cansadadeserfeliz/sitp_scraper,Scraper for SITP routes,"## :robot: Telegram Bot

[@sitp_bot](https://web.telegram.org/#/im?p=@sitp_bot)


## :busstop: Installation

    $ apt-get install postgis
    $ createdb  <db name>
    $ psql <db name>
    > CREATE EXTENSION postgis;

    $ cp sitp_scraper/local_settings.example.py sitp_scraper/local_settings.py

    $ mkvirtualenv sitp_scraper
    $ pip install -r requirements.txt

## :bus: Usage

Run scrapy spider to get new SITP stations and routes from www.sitp.gov.co website:

    scrapy crawl sitp

or

    python manage.py start_scraper

to run it from Django.

Run Django project:

    python manage.py runserver

### Get coordinates for bus stations from Google maps API:

    python manage.py get_station_coordinates_google

### Get coordinates for bus stations from Civico:

    python manage.py get_station_coordinates_civico

### Get pair stations form www.sitp.gov.co website

""Pair stations"" are stations that are located really close so we can count them as one.

    python manage.py get_pair_stations

## :oncoming_bus: Idea

The idea is to make a map with all bus routes that would be easy to print.

For example:

* City transport map for Moscow: http://transportmap.ru/moscowtransport_en.html
* City transport map for Saint-Petersburg: http://transportmap.ru/transport-spb_en.html
* Milan: http://img3.arrivo.ru/cfcd/91/2395/0/Shema-dvizheniya-avtobusov-milan.jpg
* Atlas that you can buy in Moscow ""Атлас городского транспорта"": http://avtoliteratura.ru/files/gortransp_1_resize.jpg
* More atlas examples: https://www.google.com.co/search?q=%D0%90%D1%82%D0%BB%D0%B0%D1%81+%D0%B3%D0%BE%D1%80%D0%BE%D0%B4%D1%81%D0%BA%D0%BE%D0%B3%D0%BE+%D1%82%D1%80%D0%B0%D0%BD%D1%81%D0%BF%D0%BE%D1%80%D1%82%D0%B0&tbm=isch&sa=Xbiw=1410

## :trolleybus: Deployment

    $ git pull
    $ workon sitp_scraper
    $ pip install requirements.txt
    $ ./manage.py migrate
    $ ./manage.py collectstatic
    # Restart the uwsgi process

## :fire_engine: Links:

* Google geocoding: https://developers.google.com/maps/documentation/geocoding/intro?hl=ru
",8,8,4,6,public-transportation,"[bogota, bus-station, colombia, public-transportation, site, telegram-bot, transport, transportation]",00000
653,android,mobileKKM,N/A,N/A,https://api.github.com/repos/mobileKKM/android,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C19D:46E9:76592D:F41A8E:65224398.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
654,TransitTracker_android,mikrobi,N/A,N/A,https://api.github.com/repos/mikrobi/TransitTracker_android,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1B0:6611:6EBC21:E5130E:65224398.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
655,ptna-networks,osm-ToniE,N/A,N/A,https://api.github.com/repos/osm-ToniE/ptna-networks,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C197:64D2:73C36B:EEF609:65224399.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
656,transit,tommytommytommy,N/A,N/A,https://api.github.com/repos/tommytommytommy/transit,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C121:41B1:71D9D7:EB92D3:6522439A.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
657,lastbart,noncombatant,N/A,N/A,https://api.github.com/repos/noncombatant/lastbart,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1D9:58D0:783169:F76310:6522439A.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
658,t-time,theandrewbailey,N/A,N/A,https://api.github.com/repos/theandrewbailey/t-time,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1A1:4179:2DFE8AA:5E2105C:6522439B.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
659,fpti-js,public-transport,N/A,N/A,https://api.github.com/repos/public-transport/fpti-js,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C17D:05EF:6F7EA1:E69038:6522439B.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
660,Abfahrten,yannikbloscheck,N/A,N/A,https://api.github.com/repos/yannikbloscheck/Abfahrten,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C129:092A:71BDD1:EB1A8C:6522439C.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
661,kindle-abfahrt,buckket,N/A,N/A,https://api.github.com/repos/buckket/kindle-abfahrt,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C110:3F63:2E94B89:5F4C188:6522439C.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
662,HSLtraffic,markusvalo,N/A,N/A,https://api.github.com/repos/markusvalo/HSLtraffic,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1E9:87DB:3012116:62299DF:6522439D.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
663,dvbgo,offenesdresden,N/A,N/A,https://api.github.com/repos/offenesdresden/dvbgo,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C182:1F34:1BB5BB4:38F3C7D:6522439E.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
664,navitia,govitia,N/A,N/A,https://api.github.com/repos/govitia/navitia,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C151:1F34:1BA3A26:38CE5F6:6522427E.'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
665,dvb-on-esp32,andiikaa,N/A,N/A,https://api.github.com/repos/andiikaa/dvb-on-esp32,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C167:64D2:73C8DD:EF0147:6522439E.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
666,Track-The-Inspector,birneamstiel,N/A,N/A,https://api.github.com/repos/birneamstiel/Track-The-Inspector,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C129:092A:71C066:EB1FF0:6522439F.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
667,python-imhdsk-api,mrshu,N/A,N/A,https://api.github.com/repos/mrshu/python-imhdsk-api,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C11A:58D0:7836E3:F76E25:6522439F.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
668,StripMapGen,Sparen,N/A,N/A,https://api.github.com/repos/Sparen/StripMapGen,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1E3:2CBC:78BF36:F8DCCE:652243A0.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
669,StripMapGen,Sparen,N/A,N/A,https://api.github.com/repos/Sparen/StripMapGen,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1E3:2CBC:78BF36:F8DCCE:652243A0.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
670,hvv,lionralfs,N/A,N/A,https://api.github.com/repos/lionralfs/hvv,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1C0:2319:6A51FA:DC32BA:652243A0.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
671,iotick,FlorianWendelborn,N/A,N/A,https://api.github.com/repos/FlorianWendelborn/iotick,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C18C:178A:2CB0872:5B7E1F0:652243A1.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
672,FPTF.swift,public-transport,N/A,N/A,https://api.github.com/repos/public-transport/FPTF.swift,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C109:8AF9:71A7D3:EAFB16:652243A2.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
673,ptna-www,osm-ToniE,N/A,N/A,https://api.github.com/repos/osm-ToniE/ptna-www,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1FA:37E7:2D28037:5C7916F:652243A2.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
674,EFA-Timetable,TheNewCivilian,N/A,N/A,https://api.github.com/repos/TheNewCivilian/EFA-Timetable,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C148:0E7B:1A42047:3616716:652243A3.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
675,onebusaway-pebbletime,OneBusAway,N/A,N/A,https://api.github.com/repos/OneBusAway/onebusaway-pebbletime,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1A5:7AEF:2DE6CA5:5DDD852:652243A3.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
676,PublicAustria,fschaupp,N/A,N/A,https://api.github.com/repos/fschaupp/PublicAustria,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C145:7B5B:740A0A:EF4978:652243A4.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
677,gtfs-to-fptf,public-transport,N/A,N/A,https://api.github.com/repos/public-transport/gtfs-to-fptf,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C12F:6A74:1A42F35:3617116:652243A4.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
678,hslbot,ronjakoi,N/A,N/A,https://api.github.com/repos/ronjakoi/hslbot,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C197:64D2:73CF63:EF0EE3:652243A5.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
679,metro,kiernann,N/A,N/A,https://api.github.com/repos/kiernann/metro,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1CA:178A:2CB0D21:5B7EB85:652243A6.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
680,libplanfahr,agx,N/A,N/A,https://api.github.com/repos/agx/libplanfahr,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C182:1F34:1BB6138:38F47E9:652243A3.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
681,EtaAtHK,huikaihoo,N/A,https://github.com/huikaihoo/EtaAtHK,https://api.github.com/repos/huikaihoo/EtaAtHK,ETA@HK - Android App to show ETA of public transport in Hong Kong,"{'message': 'Not Found', 'documentation_url': 'https://docs.github.com/rest/repos/contents#get-repository-content'}",4,4,3,1,public-transportation,"[android-app, bus, eta, hongkong, mtr, public-transport, public-transportation, tram, transport, transportation]",00000
682,Trias,kiliankoe,N/A,N/A,https://api.github.com/repos/kiliankoe/Trias,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1EE:178A:2CB0B81:5B7E82F:652243A4.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
683,the-online-brt-planning-guide,ITDP,N/A,N/A,https://api.github.com/repos/ITDP/the-online-brt-planning-guide,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1AF:6611:6EC62B:E52839:652243A6.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
684,On-Transit-App,EKarton,N/A,N/A,https://api.github.com/repos/EKarton/On-Transit-App,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C14F:607B:7A0A83:FB6C99:652243A7.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
685,MpkTransit,outlying,N/A,N/A,https://api.github.com/repos/outlying/MpkTransit,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C118:0C72:734E83:EE345D:652243A7.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
686,onebusaway-chrome-angular2,sumitgouthaman,N/A,N/A,https://api.github.com/repos/sumitgouthaman/onebusaway-chrome-angular2,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1BD:178A:2CB0F63:5B7F034:652243A8.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
687,MMM-pekavm,ytmytm,N/A,N/A,https://api.github.com/repos/ytmytm/MMM-pekavm,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1DE:36DF:35794B4:6D06071:652243A8.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
688,eurostar2gtfs,planarnetwork,N/A,N/A,https://api.github.com/repos/planarnetwork/eurostar2gtfs,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1AF:6611:6EC80C:E52C22:652243A9.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
689,MontpellierTransports,LouisRaverdy,N/A,N/A,https://api.github.com/repos/LouisRaverdy/MontpellierTransports,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C10A:178A:2CB10F7:5B7F37F:652243AA.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
690,GV-scraper,Skippern,N/A,N/A,https://api.github.com/repos/Skippern/GV-scraper,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1A1:4179:2DFF854:5E230C7:652243AA.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
691,ctpp-analysis,aakarner,N/A,N/A,https://api.github.com/repos/aakarner/ctpp-analysis,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C18E:6EE6:6F736E:E67526:652243AB.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
692,GraphDatabaseDemo,AviAvni,N/A,N/A,https://api.github.com/repos/AviAvni/GraphDatabaseDemo,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C184:05EF:6F8DC8:E6AF93:652243AB.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
693,SafeNet,adithyaanilkumar,N/A,N/A,https://api.github.com/repos/adithyaanilkumar/SafeNet,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1A5:7AEF:2DE74E2:5DDE934:652243AC.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
694,ontherails,dixonscottr,N/A,N/A,https://api.github.com/repos/dixonscottr/ontherails,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1F4:5AB9:2C5D8D7:5AE33DD:652243AB.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
695,terminal-stationboard-ui,minderjan,N/A,N/A,https://api.github.com/repos/minderjan/terminal-stationboard-ui,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C128:73C7:728A7E:EC80A0:652243AB.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
696,alexa-skill-onibus-bh,dadeke,N/A,N/A,https://api.github.com/repos/dadeke/alexa-skill-onibus-bh,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1F0:505E:779497:F67E10:652243AD.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
697,DVBManniBot,freakyblue,N/A,N/A,https://api.github.com/repos/freakyblue/DVBManniBot,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C148:0E7B:1A428DC:361790A:652243AD.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
698,PyASEAG,RobertKrajewski,N/A,N/A,https://api.github.com/repos/RobertKrajewski/PyASEAG,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1A6:4D66:6D819F:E2AC15:652243AE.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
699,MinervaHacks,artem-tkachuk,N/A,N/A,https://api.github.com/repos/artem-tkachuk/MinervaHacks,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C149:7B5B:74150E:EF603C:652243AE.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
700,montpellier-tam-api,aslafy-z,N/A,N/A,https://api.github.com/repos/aslafy-z/montpellier-tam-api,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1D5:4E78:70F9FE:E981CE:652243AF.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
701,CustomizePublicTransportStop,bwr57,N/A,N/A,https://api.github.com/repos/bwr57/CustomizePublicTransportStop,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C124:5AB9:2C5DD83:5AE3D8D:652243AF.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
702,TristarGTFS,MKuranowski,N/A,N/A,https://api.github.com/repos/MKuranowski/TristarGTFS,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C18B:4D66:6D81B5:E2AC2B:652243AE.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
703,content-routing-design,k123abc,N/A,N/A,https://api.github.com/repos/k123abc/content-routing-design,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C10F:0E7B:1A429DF:3617B1C:652243AE.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
704,Abfahrt,lukaskollmer,N/A,N/A,https://api.github.com/repos/lukaskollmer/Abfahrt,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1DC:309A:2E6E72E:5EBC4A5:652243B0.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
705,public-transport-gtfs,fattazzo,N/A,N/A,https://api.github.com/repos/fattazzo/public-transport-gtfs,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C18B:4D66:6D83CA:E2B094:652243B0.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
706,setabot,thehowl,N/A,N/A,https://api.github.com/repos/thehowl/setabot,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1F7:7AEF:2DE799F:5DDF2E1:652243B1.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
707,Public-Transport-Ticketing-System,Ranmal-Dewage,N/A,N/A,https://api.github.com/repos/Ranmal-Dewage/Public-Transport-Ticketing-System,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C144:5934:2873C55:532E34E:652243B1.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
708,mbta-rs,bobertoyin,N/A,N/A,https://api.github.com/repos/bobertoyin/mbta-rs,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C11B:1299:9F824C:1498709:652243B2.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
709,mpyk,emkor,N/A,N/A,https://api.github.com/repos/emkor/mpyk,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1C5:2CBC:78CF57:F8FE5A:652243B3.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
710,dino,d3d9,N/A,N/A,https://api.github.com/repos/d3d9/dino,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1C4:6611:6ECF5A:E53B4F:652243B3.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
711,NjMetro-Price,NN708,N/A,https://github.com/NN708/NjMetro-Price,https://api.github.com/repos/NN708/NjMetro-Price,自动获取南京地铁各站点之间价格（票价表） Get Nanjing Metro fare table,"# NjMetro-Price
获取南京地铁各站点之间票价

## 使用方法
1. 下载并安装 **[Python 3](https://www.python.org/downloads/)**；
2. 安装 Python Requests 插件：
```command
pip install requests
```
3. 下载并运行 `price.py`：
```command
python price.py
```
4. 等待程序运行结束，票价表将以 CSV 格式保存在 `njmetro_price.csv` 中。",3,3,1,0,public-transportation,"[metro, nanjing, nanjing-metro, public-transport, public-transportation, subway, transit, transport, transportation]",00000
712,SwarmPubTran,roiedanino,N/A,N/A,https://api.github.com/repos/roiedanino/SwarmPubTran,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C114:7AEF:2DE7C4E:5DDF880:652243B4.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
713,smart-bus,oursky,N/A,N/A,https://api.github.com/repos/oursky/smart-bus,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C154:73C7:7291FF:EC9045:652243B4.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
714,ld-didok,zazuko,N/A,N/A,https://api.github.com/repos/zazuko/ld-didok,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C139:5934:2873ED0:532E86B:652243B4.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
715,viavistas,natethrash,N/A,N/A,https://api.github.com/repos/natethrash/viavistas,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C181:58D0:784CB0:F79B55:652243B5.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
716,PointTCL,EpocDotFr,N/A,N/A,https://api.github.com/repos/EpocDotFr/PointTCL,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C165:73C7:729304:EC9271:652243B5.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
717,api-srtj,Adib128,N/A,N/A,https://api.github.com/repos/Adib128/api-srtj,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C182:1F34:1BB7200:38F6ABB:652243B6.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
718,AMTS,gnatih,N/A,N/A,https://api.github.com/repos/gnatih/AMTS,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C179:1299:9F862A:1498F14:652243B7.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
719,bussterminal,skogsbrus,N/A,N/A,https://api.github.com/repos/skogsbrus/bussterminal,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C112:1E3B:2FE3526:61D9108:652243B7.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
720,capmetro_rail_alexa,velaraptor,N/A,N/A,https://api.github.com/repos/velaraptor/capmetro_rail_alexa,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1A9:3819:1B01AE5:378919E:652243B8.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
721,tpgwear,vndly,N/A,N/A,https://api.github.com/repos/vndly/tpgwear,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C197:64D2:73E1A7:EF34B7:652243B8.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
722,PATransitTicker,saylorsd,N/A,N/A,https://api.github.com/repos/saylorsd/PATransitTicker,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C109:8AF9:71BEE1:EB2ACA:652243B9.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
723,Final-Year-Project,djibril-coulybaly,N/A,N/A,https://api.github.com/repos/djibril-coulybaly/Final-Year-Project,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1FF:29CE:33124FF:683ADCE:652243BA.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
724,vbb-sort-lines,public-transport,N/A,N/A,https://api.github.com/repos/public-transport/vbb-sort-lines,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1C7:1E3B:2FE3786:61D960F:652243BA.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
725,netex-cli-validator,enroute-mobi,N/A,N/A,https://api.github.com/repos/enroute-mobi/netex-cli-validator,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C13A:8AF9:71C0A7:EB2EA6:652243BB.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
726,Rute-Map,gala-m,N/A,N/A,https://api.github.com/repos/gala-m/Rute-Map,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1F6:418F:2A806E3:56E5D90:652243BB.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
727,septa-regionalrail-otp,fulldecent,N/A,N/A,https://api.github.com/repos/fulldecent/septa-regionalrail-otp,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C147:5AB9:2C5E8A3:5AE54B8:652243BC.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
728,joukkoliikenne-rpi,Klyyssi,N/A,N/A,https://api.github.com/repos/Klyyssi/joukkoliikenne-rpi,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C10B:0E7B:1A43383:3618F4F:652243BA.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
729,WashingtonMetro,inrazhtet,N/A,N/A,https://api.github.com/repos/inrazhtet/WashingtonMetro,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C128:73C7:729773:EC9BC3:652243BB.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
730,bps-simulated-data,data-mechanics,data-mechanics,https://github.com/data-mechanics/bps-simulated-data,https://api.github.com/repos/data-mechanics/bps-simulated-data,Tool for automatically generating simulated datasets of Boston Public School students and their school assignments.,"# Simulated Student and Bus Route Data for Boston Public Schools
Tool for automatically generating simulated data sets of Boston Public Schools students, their school assignments, their bus stop assignments, and bus routes.

## Usage

To install all requirements:

    python -m pip install --upgrade --no-cache-dir -r requirements.txt

To execute the script and generate individual data sets (placed in the `output` subdirectory by default):

    python generate-bus-data.py
    python generate-student-data.py
    python generate-stop-data.py
    python generate-route-data.py

To generate an Excel workbook that assembles all the generated data (appropriate for submission to the [bps-challenge-score](https://github.com/Data-Mechanics/bps-challenge-score) scoring tool):

    python generate-assembled-data.py

## Example Output

Once the student data has been generated, load `output/students.html` in any browser to view a rendering that uses the [Leaflet](http://leafletjs.com/) library. 
Likewise, once the route data has been generated you can view it at `output/routes.html`.

| ![Visualization of generated student data using Leaflet](students.png)  | ![Visualization of generated route data using Leaflet](routes.png) |
|:---:|:---:|

## Data Sources

* [Public Schools](https://data.boston.gov/dataset/public-schools) from [Analyze Boston](https://data.boston.gov/)
* [Boston Street Segments](http://bostonopendata-boston.opendata.arcgis.com/datasets/cfd1740c2e4b49389f47a9ce2dd236cc_8) (GeoJSON format) from [Analyze Boston](https://data.boston.gov/)
* [Property Assessment 2014](https://data.cityofboston.gov/dataset/Property-Assessment-2014/qz7u-kb7x) from [Analyze Boston](https://data.boston.gov/)
* [Zip codes](http://www.mass.gov/anf/research-and-tech/it-serv-and-support/application-serv/office-of-geographic-information-massgis/datalayers/zipcodes.html) from [Mass.gov](http://www.mass.gov/anf/)
* [Boston family household data](https://www.bostonplans.org/getattachment/caf0d3fb-951d-4b0a-9181-9b41cdf59cf8) from [Boston Planning & Development Agency (BPDA)](bostonplans.org)
* [Boston Census Blocks](http://worldmap.harvard.edu/data/geonode:c_bra_bl) from [Harvard WorldMap](https://worldmap.harvard.edu)
* [Children per household](https://nces.ed.gov/programs/digest/d15/tables/dt15_102.10.asp?current=yes) from [National Center for Education Statistics](https://nces.ed.gov/)
",2,2,4,0,public-transportation,"[boston, boston-university, data-science, public-transportation, real-world, schools, transportation, transportation-simulation]",00000
731,bart-mqtt.py,oakbrad,N/A,N/A,https://api.github.com/repos/oakbrad/bart-mqtt.py,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C132:7B5B:7423B5:EF7E95:652243BC.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
732,mycicero.js,Bavuett,N/A,N/A,https://api.github.com/repos/Bavuett/mycicero.js,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1AD:36DF:357AC94:6D091F1:652243BD.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
733,dvbrb,kiliankoe,N/A,N/A,https://api.github.com/repos/kiliankoe/dvbrb,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C14A:1364:776EC9:F65D4C:652243BD.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
734,public-transport-site,Angelos-Kard,N/A,N/A,https://api.github.com/repos/Angelos-Kard/public-transport-site,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C101:178A:2CB249B:5B81C41:652243BE.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
735,k_shortest_bus_routes,wlxiong,N/A,N/A,https://api.github.com/repos/wlxiong/k_shortest_bus_routes,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1F8:5934:2874939:532FDFB:652243BE.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
736,NextBusKit,shamanskyh,N/A,N/A,https://api.github.com/repos/shamanskyh/NextBusKit,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C127:784E:76FED7:F5AEB4:652243BF.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
737,android-app-berlin,OpenMetroMaps,N/A,N/A,https://api.github.com/repos/OpenMetroMaps/android-app-berlin,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C150:4678:1AE51B4:3761597:652243BF.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
738,mbta_salary,scivision,N/A,N/A,https://api.github.com/repos/scivision/mbta_salary,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C154:73C7:729C0F:ECA541:652243BF.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
739,Metronom-REST-API,kevcodez,N/A,N/A,https://api.github.com/repos/kevcodez/Metronom-REST-API,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C14D:309A:2E6F827:5EBE7D1:652243C0.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
740,DINO2,d3d9,N/A,N/A,https://api.github.com/repos/d3d9/DINO2,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1B5:0E7B:1A439F4:3619C98:652243C0.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
741,TransLate2,vshkl,N/A,N/A,https://api.github.com/repos/vshkl/TransLate2,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C187:984A:7716B8:F5A2A7:652243C1.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
742,viadf-app,kalinbas,N/A,N/A,https://api.github.com/repos/kalinbas/viadf-app,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C145:5173:24D58CA:4BBA677:652242F9.'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
743,advanced-public-transportation-system,pruthvishRajput,N/A,N/A,https://api.github.com/repos/pruthvishRajput/advanced-public-transportation-system,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C121:41B1:71FDF6:EBDDED:652243C2.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
744,editor,fabianabarca,N/A,N/A,https://api.github.com/repos/fabianabarca/editor,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1D4:8AF9:71C8F6:EB3FA7:652243C2.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
745,transperth-live-train-times,atyndall,N/A,N/A,https://api.github.com/repos/atyndall/transperth-live-train-times,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C199:4179:2E01539:5E26C57:652243C3.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
746,EFA-MAP,TheNewCivilian,N/A,N/A,https://api.github.com/repos/TheNewCivilian/EFA-MAP,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1EA:3BF5:750650:F16186:652243C3.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
747,CUMTD_Bus_Analysis_Classification,lotlouischoitslab,N/A,N/A,https://api.github.com/repos/lotlouischoitslab/CUMTD_Bus_Analysis_Classification,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1FA:37E7:2D2A8CA:5C7E4EA:652243C4.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
748,alexa-thebus,sunquan8094,N/A,N/A,https://api.github.com/repos/sunquan8094/alexa-thebus,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C178:178A:2CB2DF3:5B82F6A:652243C5.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
749,citybikes-mqtt.py,oakbrad,N/A,N/A,https://api.github.com/repos/oakbrad/citybikes-mqtt.py,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1B9:505E:77ABBC:F6AE15:652243C5.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
750,php-geofox-gti-client,JonasDoebertin,N/A,N/A,https://api.github.com/repos/JonasDoebertin/php-geofox-gti-client,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1D8:607B:7A2A74:FBAE9D:652243C6.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
751,cta,wd60622,N/A,N/A,https://api.github.com/repos/wd60622/cta,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C103:6A74:1A44D4E:361AFAE:652243C6.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
752,VRSMonitor,noelroehrig,N/A,N/A,https://api.github.com/repos/noelroehrig/VRSMonitor,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1AF:6611:6EE01A:E55DE6:652243C7.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
753,project-2023-choo-choo-data-darlings,com-480-data-visualization,N/A,N/A,https://api.github.com/repos/com-480-data-visualization/project-2023-choo-choo-data-darlings,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C188:12FA:5F4194:C43B0E:652243C7.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
754,NWWIMP,nitricware,N/A,N/A,https://api.github.com/repos/nitricware/NWWIMP,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C137:629D:4592E35:8D2CE5F:652243C8.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
755,gtfs4j,OpenMetroMaps,N/A,N/A,https://api.github.com/repos/OpenMetroMaps/gtfs4j,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C18E:3996:2637B2D:4E71509:652243C9.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
756,Project-Unofficial-OASA-Telematics-API-Client,DimitriosKaltzidis,N/A,N/A,https://api.github.com/repos/DimitriosKaltzidis/Project-Unofficial-OASA-Telematics-API-Client,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C184:5119:259F9E7:4D56AA1:652243C9.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
757,PyBuses,David-Lor,N/A,N/A,https://api.github.com/repos/David-Lor/PyBuses,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1EB:75D0:26525C4:4EBECB2:652243CA.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
758,MMM-RNV,jupadin,N/A,N/A,https://api.github.com/repos/jupadin/MMM-RNV,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C12E:7646:296BC1B:54DD397:652242F2.'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
759,mbta-stop-display,jprusik,N/A,N/A,https://api.github.com/repos/jprusik/mbta-stop-display,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C122:5934:287539C:5331371:652243C7.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
760,Seoul_Subway_Network,lotlouischoitslab,N/A,N/A,https://api.github.com/repos/lotlouischoitslab/Seoul_Subway_Network,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C130:7039:2790E23:512BEEC:652243C8.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
761,takemehome,mimischi,N/A,N/A,https://api.github.com/repos/mimischi/takemehome,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C143:74C7:2699AD3:4F41CA4:652243C9.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
762,api-lyon,edouardmenayde,N/A,N/A,https://api.github.com/repos/edouardmenayde/api-lyon,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1F7:7DF2:26C5EDE:4F87FBF:652243C9.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
763,DVB-Verspaetungen,alexander-fischer,N/A,N/A,https://api.github.com/repos/alexander-fischer/DVB-Verspaetungen,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1F2:049C:2719052:504326D:652243C8.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
764,berlin-transit-app,pepebecker,N/A,N/A,https://api.github.com/repos/pepebecker/berlin-transit-app,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1E8:603C:2897D33:532EEE3:652243CA.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
765,brandengo,open-data-potsdam,N/A,N/A,https://api.github.com/repos/open-data-potsdam/brandengo,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1AF:3996:2637C8D:4E717E1:652243CA.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
766,project-2023-the-vizards,com-480-data-visualization,N/A,N/A,https://api.github.com/repos/com-480-data-visualization/project-2023-the-vizards,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C187:7646:29795B1:54F9584:652243CB.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
767,Sesena_Bus,snLionel90,N/A,N/A,https://api.github.com/repos/snLionel90/Sesena_Bus,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1AD:3D80:2729530:505A899:652243CB.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
768,OpalMiner,gdmcdonald,N/A,N/A,https://api.github.com/repos/gdmcdonald/OpalMiner,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C12A:2299:2569CCC:4CE1979:652243CC.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
769,MasterThesis,Chnoch,N/A,N/A,https://api.github.com/repos/Chnoch/MasterThesis,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C161:75D0:265297E:4EBF3B4:652243CD.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
770,ios,tpgwidget,N/A,N/A,https://api.github.com/repos/tpgwidget/ios,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1DB:16F7:26BF4DA:4F83DDD:652243CD.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
771,viadf-web-react,kalinbas,N/A,N/A,https://api.github.com/repos/kalinbas/viadf-web-react,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C14F:6459:26784A1:4F0F8FE:652243CE.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
772,vilnius-public-transport-passengers-traffic-analysis,tomasrasymas,N/A,N/A,https://api.github.com/repos/tomasrasymas/vilnius-public-transport-passengers-traffic-analysis,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C15F:3D80:2729869:505AF31:652243CF.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
773,uta,codeforutah,N/A,N/A,https://api.github.com/repos/codeforutah/uta,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C193:646E:2712693:502D366:652243CF.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
774,RzeszowGTFS,MKuranowski,N/A,N/A,https://api.github.com/repos/MKuranowski/RzeszowGTFS,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C130:7039:2791701:512D11D:652243D0.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
775,PDXBusNotifier,ChristopherWeldon,N/A,N/A,https://api.github.com/repos/ChristopherWeldon/PDXBusNotifier,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C12B:28F2:2A3A5DE:56758E3:652243D0.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
776,stop2.0-traveller-client,STOP2,N/A,N/A,https://api.github.com/repos/STOP2/stop2.0-traveller-client,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1CC:39DF:279979F:513189D:652243D1.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
777,gonow,jadlers,N/A,N/A,https://api.github.com/repos/jadlers/gonow,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C158:3D80:2729B71:505B588:652243D2.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
778,Interface_PTVVisum-LinTim,FOR2083,N/A,N/A,https://api.github.com/repos/FOR2083/Interface_PTVVisum-LinTim,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C126:7646:296B939:54DCDA5:652242EF.'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
779,wlr-api,faulander,N/A,N/A,https://api.github.com/repos/faulander/wlr-api,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1E2:39DF:27998E5:5131B3B:652243D2.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
780,hsl-stopscreen,rlaakkol,N/A,N/A,https://api.github.com/repos/rlaakkol/hsl-stopscreen,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C168:39DF:2799979:5131C5F:652243D3.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
781,jstransit,filipok,N/A,N/A,https://api.github.com/repos/filipok/jstransit,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1EE:75D0:2653031:4EC0192:652243D3.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
782,nyc-subway,daemonsy,N/A,N/A,https://api.github.com/repos/daemonsy/nyc-subway,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1E9:1E61:28CE128:538FAA6:652243D4.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
783,BusBot,SakifT,N/A,N/A,https://api.github.com/repos/SakifT/BusBot,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1A6:8A0D:2838E47:52820A7:652243D5.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
784,TransportOpendata,FreeApophis,N/A,N/A,https://api.github.com/repos/FreeApophis/TransportOpendata,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C128:629D:4594B48:8D30961:652243D5.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
785,EFA-Conky,TheNewCivilian,N/A,N/A,https://api.github.com/repos/TheNewCivilian/EFA-Conky,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C18E:3996:263894A:4E731F4:652243D6.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
786,inmeta-publictransportation,eklem,N/A,N/A,https://api.github.com/repos/eklem/inmeta-publictransportation,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1AF:3996:26389DE:4E7331C:652243D6.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
787,SPTransSwift,ezefranca,N/A,N/A,https://api.github.com/repos/ezefranca/SPTransSwift,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1D3:7039:2791E22:512DFEA:652243D7.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
788,realtidsinfo,jberglinds,N/A,N/A,https://api.github.com/repos/jberglinds/realtidsinfo,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1A9:6459:2678DB1:4F10BDC:652243D8.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
789,vbb-delay-map,juliuste,N/A,N/A,https://api.github.com/repos/juliuste/vbb-delay-map,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C117:646E:2713049:502E773:652243D8.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
790,transit,aabizri,N/A,N/A,https://api.github.com/repos/aabizri/transit,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C108:4AAE:277CBE1:510BC47:652242F5.'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
791,NellaPy,Z1ni,N/A,N/A,https://api.github.com/repos/Z1ni/NellaPy,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C158:3D80:272A258:505C3D0:652243D9.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
792,my-commute-dashboard,liddiard,N/A,N/A,https://api.github.com/repos/liddiard/my-commute-dashboard,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C148:75D0:2653675:4EC0E8A:652243DA.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
793,sl-php-sdk,trafiklab,N/A,N/A,https://api.github.com/repos/trafiklab/sl-php-sdk,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C175:0E65:2667644:4ED786C:652243DA.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
794,Amtrak-Scheduling-Helper,lotlouischoitslab,N/A,N/A,https://api.github.com/repos/lotlouischoitslab/Amtrak-Scheduling-Helper,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C17B:5BDF:274E93D:50B460C:652242F7.'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
795,sapo,protocubo,N/A,N/A,https://api.github.com/repos/protocubo/sapo,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1E4:629D:459551D:8D31D61:652243DB.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
796,transilien-next-departures,romainmoreau,N/A,N/A,https://api.github.com/repos/romainmoreau/transilien-next-departures,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C180:1B08:281AED2:522B0CA:652243DC.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
797,mdev_bus_station,ihachani,N/A,N/A,https://api.github.com/repos/ihachani/mdev_bus_station,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C151:7D9C:2B641D7:58C7F21:652243DC.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
798,wsta_google_maps,medewitt,N/A,N/A,https://api.github.com/repos/medewitt/wsta_google_maps,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C167:5173:24E4C71:4BD9D5E:652243DD.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
799,hsl-live-rn,joni-,N/A,N/A,https://api.github.com/repos/joni-/hsl-live-rn,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1C7:18FC:273DF96:50820B4:652243DD.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
800,rnv-api,Krymonota,N/A,N/A,https://api.github.com/repos/Krymonota/rnv-api,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1B7:049C:271A3E8:5045B0D:652243DE.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
801,sg-bus,suwarnoong,N/A,N/A,https://api.github.com/repos/suwarnoong/sg-bus,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C102:5B68:2C8494:5CC233:65224362.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
802,transjakarta,barliant,N/A,N/A,https://api.github.com/repos/barliant/transjakarta,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C17C:7D9C:2B64437:58C840D:652243DF.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
803,MAngkotDriver,tekesan,N/A,N/A,https://api.github.com/repos/tekesan/MAngkotDriver,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C125:6EFD:2557C67:4CC8FA5:652243DF.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
804,travel_ura,clonejo,N/A,N/A,https://api.github.com/repos/clonejo/travel_ura,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1DA:629D:45960D9:8D3352A:652243E0.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
805,TTC-Delay-Analysis,Patrickdg,N/A,N/A,https://api.github.com/repos/Patrickdg/TTC-Delay-Analysis,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1D8:2B20:25D2421:4DC3DBD:652243E0.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
806,nova-api-php,orca-services,N/A,N/A,https://api.github.com/repos/orca-services/nova-api-php,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C15A:7E90:26DBCFC:4FADBB9:652243E1.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
807,zvv-zurich-transport,bittner,N/A,N/A,https://api.github.com/repos/bittner/zvv-zurich-transport,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1BC:4AEE:2872E76:52EBEFC:652243E2.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
808,bps-challenge-score,data-mechanics,data-mechanics,https://github.com/data-mechanics/bps-challenge-score,https://api.github.com/repos/data-mechanics/bps-challenge-score,Scoring platform for BPS bus route ensembles.,"# bps-challenge-score
Browser-based interactive validation, evaluation, and leaderboard platform for bus stop assignment and routing candidate solution data sets intended for the Boston Public Schools Transporation Challenge. [View the platform online](https://data-mechanics.github.io/bps-challenge-score/).
",0,0,2,0,public-transportation,"[boston, boston-university, data-science, public-transportation, real-world, transportation]",00000
809,ztm_warszawa,pgrn,N/A,N/A,https://api.github.com/repos/pgrn/ztm_warszawa,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1A9:6459:26796FA:4F11F22:652243E2.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
810,socrata_public_data_api,Maskar,N/A,N/A,https://api.github.com/repos/Maskar/socrata_public_data_api,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C144:1D92:25F96F8:4DFB411:652243E3.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
811,Isochrone_TL,njroussel,N/A,N/A,https://api.github.com/repos/njroussel/Isochrone_TL,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1CD:6AF3:28B7B91:53747AA:652243E3.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
812,commute-calculator-api,getschomp,N/A,N/A,https://api.github.com/repos/getschomp/commute-calculator-api,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C169:99FD:2502F7C:4C2861D:652243E4.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
813,cost-of-commuting-2019,outer-outer-space,N/A,N/A,https://api.github.com/repos/outer-outer-space/cost-of-commuting-2019,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1A1:7DF2:26C7D6F:4F8BEA7:652243E5.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
814,transit-modeling,razalamb1,N/A,N/A,https://api.github.com/repos/razalamb1/transit-modeling,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C12A:2299:256B465:4CE4A45:652243E5.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
815,validarpasse,t4zzlerdeveloper,N/A,N/A,https://api.github.com/repos/t4zzlerdeveloper/validarpasse,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C15F:3D80:272AD1C:505DA31:652243E6.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
816,abfahrten,doersino,N/A,N/A,https://api.github.com/repos/doersino/abfahrten,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1BF:04F2:2739888:5079B54:652243E6.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
817,SIRItoGTFS,bogind,N/A,N/A,https://api.github.com/repos/bogind/SIRItoGTFS,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1D9:4A15:29168B1:542FFA4:652243E7.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
818,vancouver-bus-arrivals,turnervink,N/A,N/A,https://api.github.com/repos/turnervink/vancouver-bus-arrivals,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1B4:8A0D:283A1BA:52848BB:652243E7.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
819,samara-public-transport,netcovoiturage,N/A,N/A,https://api.github.com/repos/netcovoiturage/samara-public-transport,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C111:3996:2639A24:4E754BD:652243E7.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
820,SelfdrivingSpecialNeeds,caimeng2,N/A,N/A,https://api.github.com/repos/caimeng2/SelfdrivingSpecialNeeds,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C16E:5C75:2779FCB:51031F8:652243E8.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
821,mobility-analysis,k123abc,N/A,N/A,https://api.github.com/repos/k123abc/mobility-analysis,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C131:638B:27927B9:512557B:652243E9.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
822,gtfs-nd-builder,purcellif17,N/A,N/A,https://api.github.com/repos/purcellif17/gtfs-nd-builder,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C19E:629D:4597810:8D36482:652243E9.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
823,Closer-legacy,pakut2,N/A,N/A,https://api.github.com/repos/pakut2/Closer-legacy,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1CA:9CF4:281C592:5237A9E:652243EA.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
824,cta_ridership,reliablerascal,N/A,N/A,https://api.github.com/repos/reliablerascal/cta_ridership,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1D9:4A15:2916BE7:543065E:652243EA.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
825,SIRItoGTFS,bogind,N/A,N/A,https://api.github.com/repos/bogind/SIRItoGTFS,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1D9:4A15:29168B1:542FFA4:652243E7.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
826,vancouver-bus-arrivals,turnervink,N/A,N/A,https://api.github.com/repos/turnervink/vancouver-bus-arrivals,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1B4:8A0D:283A1BA:52848BB:652243E7.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
827,linkki-infoscreen,tonialho,N/A,N/A,https://api.github.com/repos/tonialho/linkki-infoscreen,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1DA:629D:4597D5A:8D36F1F:652243EB.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
828,DublinBusAssistant,FeliceGeracitano,N/A,N/A,https://api.github.com/repos/FeliceGeracitano/DublinBusAssistant,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C161:75D0:265469E:4EC301B:652243EB.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
829,hubway-challenge,count-love,N/A,N/A,https://api.github.com/repos/count-love/hubway-challenge,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C198:9D23:26F9233:4FFDC6C:652243EC.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
830,Autotrolej,matija077,N/A,N/A,https://api.github.com/repos/matija077/Autotrolej,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C19E:629D:459817D:8D37787:652243ED.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
831,publictransport,kiliankoe,N/A,N/A,https://api.github.com/repos/kiliankoe/publictransport,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1FA:1D92:25FA12E:4DFC931:652243ED.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
832,VmsStationScraper,stephanruttloff,N/A,N/A,https://api.github.com/repos/stephanruttloff/VmsStationScraper,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C15B:1B08:281BE9D:522D180:652243EE.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
833,darwin-web-proxy,jonlinnell,N/A,N/A,https://api.github.com/repos/jonlinnell/darwin-web-proxy,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C13C:27B4:256F853:4CF370D:652243EE.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
834,bart_helper,eazar001,N/A,N/A,https://api.github.com/repos/eazar001/bart_helper,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C15D:0A36:2623397:4E58373:652243EF.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
835,Terminal_Transport_Swiss,pandermatt,N/A,N/A,https://api.github.com/repos/pandermatt/Terminal_Transport_Swiss,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C136:78AC:27FDD17:520D293:652243EF.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
836,transit,jlweichen,N/A,N/A,https://api.github.com/repos/jlweichen/transit,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1D0:78AC:27FDDB7:520D3DA:652243F0.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
837,Facebus,pauloguimaraes,N/A,N/A,https://api.github.com/repos/pauloguimaraes/Facebus,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1AF:3996:263A3E4:4E768EB:652243F1.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
838,The-Subway-Challenge,Williamdst,N/A,N/A,https://api.github.com/repos/Williamdst/The-Subway-Challenge,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C151:7D9C:2B65656:58CA99F:652243F1.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
839,TaipeiMetroNavigator,leeway64,N/A,N/A,https://api.github.com/repos/leeway64/TaipeiMetroNavigator,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1CA:9CF4:281CEC9:5238D8C:652243F2.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
840,TransportationCollective,vkoves,N/A,N/A,https://api.github.com/repos/vkoves/TransportationCollective,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C140:646E:2714ABF:5031E06:652243F2.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
841,lyft-bikes,wd60622,N/A,N/A,https://api.github.com/repos/wd60622/lyft-bikes,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1BB:16F7:26C1453:4F87F5E:652243F3.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
842,hubbub,sMailund,N/A,N/A,https://api.github.com/repos/sMailund/hubbub,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C10F:4A15:29173ED:5431702:652243F4.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
843,android,tpgwidget,N/A,N/A,https://api.github.com/repos/tpgwidget/android,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C141:049C:271B7D0:5048487:652243F4.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
844,pubtrans,thnetii,N/A,N/A,https://api.github.com/repos/thnetii/pubtrans,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C188:12FA:5F6F38:C4994E:652243F5.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
845,roadents-backend,Roadents-Tools,N/A,N/A,https://api.github.com/repos/Roadents-Tools/roadents-backend,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1D1:0E65:2669139:4EDAFBA:652243F5.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
846,busbook,YoRyan,N/A,N/A,https://api.github.com/repos/YoRyan/busbook,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C133:4AAE:278AECF:51293EB:652243F6.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
847,gtfs,willdk3000,N/A,N/A,https://api.github.com/repos/willdk3000/gtfs,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C13A:9CF4:281D3C6:52397EC:652243F6.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
848,public-transport-skill,Nos-,N/A,N/A,https://api.github.com/repos/Nos-/public-transport-skill,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C13F:638B:279385D:51277CA:652243F7.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
849,SPTrans_DataSicence,YuriGaspar,N/A,N/A,https://api.github.com/repos/YuriGaspar/SPTrans_DataSicence,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C14A:5BDF:2760421:50D8E62:652243F8.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
850,gvb,spaghettifunk,N/A,N/A,https://api.github.com/repos/spaghettifunk/gvb,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1BB:16F7:26C18DB:4F888CE:652243F8.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
851,transit_audit,es-andres,N/A,N/A,https://api.github.com/repos/es-andres/transit_audit,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C101:9CF4:281D67E:5239D94:652243F9.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
852,bermy.xyz,muloka,N/A,N/A,https://api.github.com/repos/muloka/bermy.xyz,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C14B:18FC:273FB5B:5085A32:652243F9.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
853,Pool-App,eliftekin,N/A,N/A,https://api.github.com/repos/eliftekin/Pool-App,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C182:4AAE:278B30E:5129CCB:652243FA.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
854,hvvgti-cpp,vigonotion,N/A,N/A,https://api.github.com/repos/vigonotion/hvvgti-cpp,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C106:7DF2:26C964F:4F8F1F0:652243FB.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
855,bimba,wdebsqi,N/A,N/A,https://api.github.com/repos/wdebsqi/bimba,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C146:8A0D:283B59D:52871E4:652243FB.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
856,sonya,alexandr-omeluaniuk,N/A,N/A,https://api.github.com/repos/alexandr-omeluaniuk/sonya,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C183:9CF4:281DAD4:523A675:652243FC.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
857,PerrilloApp,stroncod,N/A,N/A,https://api.github.com/repos/stroncod/PerrilloApp,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C14A:5BDF:27609F2:50D9A62:652243FC.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
858,EPTCScrapper,betoharres,N/A,N/A,https://api.github.com/repos/betoharres/EPTCScrapper,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1F0:565A:26C5D41:4F9B7C8:652243FD.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
859,linz-linien-alexa-skill,gjuttla,N/A,N/A,https://api.github.com/repos/gjuttla/linz-linien-alexa-skill,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C160:5C75:277B3C8:5105B71:652243FE.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
860,NSW_Transport_Realtime_Map,campbellbartlett,N/A,N/A,https://api.github.com/repos/campbellbartlett/NSW_Transport_Realtime_Map,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C19E:629D:459A7E3:8D3C585:652243FE.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
861,linz-linien-efa,gjuttla,N/A,N/A,https://api.github.com/repos/gjuttla/linz-linien-efa,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C18D:78AC:27FEE93:520F5BF:652243FF.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
862,publibike,thmspl,N/A,N/A,https://api.github.com/repos/thmspl/publibike,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C11E:1B08:281CF3D:522F414:652243FF.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
863,Misdemeanors-detected-in-the-course-of-traffic-control-in-Estonia-in-10-years-2009-2019,chinesefirewall,N/A,N/A,https://api.github.com/repos/chinesefirewall/Misdemeanors-detected-in-the-course-of-traffic-control-in-Estonia-in-10-years-2009-2019,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C115:8A0D:283BAAE:5287C57:65224400.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
864,GTFSDataAnalysis,willsawyerrrr,N/A,N/A,https://api.github.com/repos/willsawyerrrr/GTFSDataAnalysis,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1F5:7D9C:2B6662F:58CCA66:65224400.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
865,map-dl,cherche,N/A,N/A,https://api.github.com/repos/cherche/map-dl,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C14F:6459:267B1C8:4F156F7:65224401.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
866,hubot-dvb,kiliankoe,N/A,N/A,https://api.github.com/repos/kiliankoe/hubot-dvb,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1BF:04F2:273B4E0:507D5E3:65224401.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
867,traffeed-website,mohitkh7,N/A,N/A,https://api.github.com/repos/mohitkh7/traffeed-website,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C19D:5BDF:2761193:50DAA30:65224402.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
868,roadents-docs,Roadents-Tools,N/A,N/A,https://api.github.com/repos/Roadents-Tools/roadents-docs,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1FF:4A15:2918543:5433AEE:65224403.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
869,echo,maxterry,N/A,N/A,https://api.github.com/repos/maxterry/echo,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1EF:679F:2AD0267:578DA34:65224403.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
870,these-opendata-transports,lauregch,N/A,N/A,https://api.github.com/repos/lauregch/these-opendata-transports,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C111:3996:263BAC2:4E797E3:65224404.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
871,metro,at8eqeq3,N/A,N/A,https://api.github.com/repos/at8eqeq3/metro,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C10F:4A15:291873C:5433F07:65224404.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
872,docs,maas-alliance,N/A,N/A,https://api.github.com/repos/maas-alliance/docs,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C125:6829:2E74C22:5F24246:6522436E.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
873,web-app,public-transport-quality-grades,N/A,N/A,https://api.github.com/repos/public-transport-quality-grades/web-app,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1EE:75D0:2655FFE:4EC64AE:65224405.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
874,trafik,baslare,N/A,N/A,https://api.github.com/repos/baslare/trafik,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1DF:603C:289B8D7:5336A41:65224405.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
875,TranslinkParser,willsawyerrrr,N/A,N/A,https://api.github.com/repos/willsawyerrrr/TranslinkParser,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C11B:0E65:266A528:4EDD8CE:65224406.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
876,hsl-poikkeusinfo,ojarva,N/A,N/A,https://api.github.com/repos/ojarva/hsl-poikkeusinfo,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C136:78AC:27FF74C:52107B6:65224406.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
877,transit,aryarm,N/A,N/A,https://api.github.com/repos/aryarm/transit,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1D9:4A15:2918A36:5434531:65224407.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
878,publicline,kadum0,N/A,N/A,https://api.github.com/repos/kadum0/publicline,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C13C:27B4:2571075:4CF68FE:65224407.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transportation,"[N, /, A]",00000
879,osmnx-examples,gboeing,N/A,https://github.com/gboeing/osmnx-examples,https://api.github.com/repos/gboeing/osmnx-examples,"Gallery of OSMnx tutorials, usage examples, and feature demonstations.","[![GitHub tag](https://img.shields.io/github/v/tag/gboeing/osmnx-examples?label=Uses+OSMnx)](https://github.com/gboeing/osmnx)
[![Binder](https://mybinder.org/badge_logo.svg)](https://mybinder.org/v2/gh/gboeing/osmnx-examples/main?urlpath=lab)
[![Build Status](https://github.com/gboeing/osmnx-examples/workflows/tests/badge.svg?branch=main)](https://github.com/gboeing/osmnx-examples/actions?query=workflow%3Atests)

# OSMnx Examples Gallery

[OSMnx](https://github.com/gboeing/osmnx) is a Python package to download, model, analyze, and visualize street networks and other geospatial features from [OpenStreetMap](https://www.openstreetmap.org/copyright/). You can download and model walking, driving, or biking networks with a single line of code then easily analyze and visualize them. You can just as easily work with urban amenities/points of interest, building footprints, transit stops, elevation data, street orientations, speed/travel time, and routing.

This gallery contains step-by-step usage tutorials and feature demonstrations as Jupyter notebooks. You can run these notebooks interactively online with [Binder](https://mybinder.org/v2/gh/gboeing/osmnx-examples/main?urlpath=lab) or locally with the official OSMnx [Docker image](https://hub.docker.com/r/gboeing/osmnx). All of the examples are in this repo's [notebooks](notebooks) folder. Note that this repo's main branch generally tracks the functionality of the OSMnx repo's main branch. For examples corresponding to previously released versions of OSMnx, use this repo's tags to browse by release.

### More info:

- [Overview of OSMnx](https://geoffboeing.com/2016/11/osmnx-python-street-networks/)
- [OSMnx repo](https://github.com/gboeing/osmnx)
- [Documentation](https://osmnx.readthedocs.io/)
- [Journal article and citation info](https://geoffboeing.com/publications/osmnx-complex-street-networks/)
",1331,1331,58,1,public-transport,"[accessibility, binder, cities, city, jupyter-notebook, network-analysis, notebooks, openstreetmap, public-transport, python, street-networks, transit, transport, transportation, urban-analytics, urban-data-science, urban-design, urban-planning]",00000
880,metrodroid,metrodroid,N/A,N/A,https://api.github.com/repos/metrodroid/metrodroid,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C10C:7D9C:2B66F47:58CDD17:65224408.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
881,bahn.guru,juliuste,N/A,N/A,https://api.github.com/repos/juliuste/bahn.guru,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C17E:59CA:264F174:4EAEB6D:65224408.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
882,direkt.bahn.guru,juliuste,N/A,N/A,https://api.github.com/repos/juliuste/direkt.bahn.guru,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1A4:7646:297D2EE:55013C4:65224409.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
883,hafas-client,public-transport,N/A,N/A,https://api.github.com/repos/public-transport/hafas-client,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C19B:4A15:2918D8F:5434C0F:6522440A.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
884,transit-map,juliuste,N/A,N/A,https://api.github.com/repos/juliuste/transit-map,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C17B:5BDF:2761B58:50DBE40:6522440A.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
885,traewelling,Traewelling,N/A,N/A,https://api.github.com/repos/Traewelling/traewelling,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1FB:4A15:2918ED8:5434EB1:6522440B.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
886,static-GTFS-manager,WRI-Cities,N/A,N/A,https://api.github.com/repos/WRI-Cities/static-GTFS-manager,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C199:3996:263C37C:4E7A9D5:6522440B.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
887,app,better-rail,N/A,N/A,https://api.github.com/repos/better-rail/app,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C114:5C75:277C217:5107900:6522440C.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
888,tidytransit,r-transit,r-transit,https://github.com/r-transit/tidytransit,https://api.github.com/repos/r-transit/tidytransit,R package for working with GTFS data,"[![CRAN
status](https://www.r-pkg.org/badges/version-ago/tidytransit?)](https://cran.r-project.org/package=tidytransit)
[![Project Status: Active](https://www.repostatus.org/badges/latest/active.svg)](https://www.repostatus.org/#active) 
[![](https://cranlogs.r-pkg.org/badges/tidytransit)](https://cran.r-project.org/package=tidytransit)
[![](https://cranlogs.r-pkg.org/badges/grand-total/tidytransit?color=lightgrey)](https://cran.r-project.org/package=tidytransit)
[![R build
status](https://github.com/r-transit/tidytransit/workflows/R-CMD-check/badge.svg)](https://github.com/r-transit/tidytransit/actions?query=workflow%3AR-CMD-check)
[![codecov](https://codecov.io/gh/r-transit/tidytransit/branch/master/graph/badge.svg)](https://app.codecov.io/gh/r-transit/tidytransit/)

# tidytransit

Use tidytransit to map transit stops and routes, calculate travel times and transit
frequencies, and validate transit feeds. Tidytransit reads the 
[General Transit Feed Specification](https://gtfs.org/) into 
[tidyverse](https://tibble.tidyverse.org/) and 
[simple features](https://en.wikipedia.org/wiki/Simple_Features) data frames. 
Tidytransit can be used to:
- [read GTFS feeds into R](https://r-transit.github.io/tidytransit/reference/read_gtfs.html)
- [calculate travel times between transit stops](https://r-transit.github.io/tidytransit/reference/travel_times.html)
- [convert stops and routes to sf data frames](https://r-transit.github.io/tidytransit/reference/gtfs_as_sf.html)
- [validate transit feeds and more](https://r-transit.github.io/tidytransit/reference/index.html)

Have a look at the following vignettes to see how tidytransit can be used to analyse a feed:

- [introduction](https://r-transit.github.io/tidytransit/articles/introduction.html) 
- [calendar and service patterns](https://r-transit.github.io/tidytransit/articles/servicepatterns.html)
- [create time tables for stops](https://r-transit.github.io/tidytransit/articles/timetable.html)
- [frequency and headway calculations](https://r-transit.github.io/tidytransit/articles/frequency.html)  

## Installation

This package requires a working installation of
[sf](https://github.com/r-spatial/sf#installing).

Install tidytransit from CRAN:

``` r
install.packages('tidytransit')
```

For the development version from Github:

```r
# install.packages(""devtools"")
devtools::install_github(""r-transit/tidytransit"")
```

## GTFS-related packages

-   [`gtfsio`](https://github.com/r-transit/gtfsio) R package to read and write gtfs feeds, tidytransit builds on gtfsio
-   [`gtfstools`](https://github.com/ipeaGIT/gtfstools) Tools for editing and analysing transit feeds
-   [`gtfsrouter`](https://github.com/UrbanAnalyst/gtfsrouter) Package for public transport routing 
-   [`gtfs2gps`](https://github.com/ipeaGIT/gtfs2gps) Converting public transport data from GTFS format to GPS-like records


## Contributing

Please feel free to issue a pull request or [open an issue](https://github.com/r-transit/tidytransit/issues/new).
",127,127,14,2,public-transport,"[cran, gtfs, public, public-transport, tidyverse, transit, transit-data, transport, transportation]",00000
889,iRail,iRail,N/A,N/A,https://api.github.com/repos/iRail/iRail,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C197:049C:271D36E:504BD43:6522440C.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
890,otp-tutorial,marcusyoung,N/A,N/A,https://api.github.com/repos/marcusyoung/otp-tutorial,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1AF:3996:263C51B:4E7AD27:6522440D.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
891,db-prices,juliuste,N/A,N/A,https://api.github.com/repos/juliuste/db-prices,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C173:59CA:264F5C5:4EAF47B:6522440E.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
892,transport-network-animator,traines-source,N/A,N/A,https://api.github.com/repos/traines-source/transport-network-animator,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C100:18FC:27411D6:508885E:6522440E.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
893,3D-Public-Transport-Simulator,alen-smajic,N/A,N/A,https://api.github.com/repos/alen-smajic/3D-Public-Transport-Simulator,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C145:5173:24E814C:4BE0A29:6522440F.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
894,trufi-core,trufi-association,N/A,N/A,https://api.github.com/repos/trufi-association/trufi-core,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C104:16F7:26C2E91:4F8B5CC:6522440F.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
895,opentripplanner,ropensci,N/A,N/A,https://api.github.com/repos/ropensci/opentripplanner,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C14A:5BDF:2762181:50DCAE2:65224410.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
896,bvg-rest,derhuerst,N/A,N/A,https://api.github.com/repos/derhuerst/bvg-rest,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1C4:9D23:26FB4C3:50023FD:65224411.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
897,raptor,planarnetwork,N/A,N/A,https://api.github.com/repos/planarnetwork/raptor,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1A9:6459:267C02D:4F174EC:65224411.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
898,gtfs2gps,ipeaGIT,N/A,N/A,https://api.github.com/repos/ipeaGIT/gtfs2gps,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1E4:629D:459D356:8D41D69:65224412.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
899,global-indicators,global-healthy-liveable-cities,global-healthy-liveable-cities,https://github.com/global-healthy-liveable-cities/global-indicators,https://api.github.com/repos/global-healthy-liveable-cities/global-indicators,"An open-source tool for calculating spatial indicators for healthy, sustainable cities worldwide using open or custom data.","{'message': 'Not Found', 'documentation_url': 'https://docs.github.com/rest/repos/contents#get-repository-content'}",66,66,10,16,public-transport,"[accessibility, city, city-government, health, public-health, public-transport, transport, transportation-network, urban, urban-design, urban-planning]",00000
900,bustime,norn,N/A,https://github.com/norn/bustime,https://api.github.com/repos/norn/bustime,Web and API for public transport real-time monitoring and visualization.,"# Bustime - public trasport online
Checkout [busti.me](https://busti.me/) for live example.

Python/Django app process and visualize public transport vehicle positions using GPS coordinates.
This collection of programs are able to detect current nearest stop, vehicle direction,
real-time timetable, sleeping state (not moved for a long time), zombie state (broken vehicles).

## Supported transport types:
* bus
* trolleybus
* tramway
* inter-city bus
* shuttle bus

## Features
* high optimization for rapid server replies
* websocket real-time updates
* modern HTML5 standard compliance
* simplified version for older devices and browsers (even with no JS)
* OpenStreetmap support
* Rainsys system updates only changed information (broadcasted via websocket)
* ""MultiBus"" technology allows to track all vehicles of selected route

## How to install
1. Install Ubuntu 14.04 LTS (tested)
2. Make virtualenv and install pip packages from ```docs/pips/pips.freeze```
3. Initialize Django environment
4. Fill in city, bus, bus stop and route tables
5. Generate list of stops for JS at ```utils/nbusstops-export.py```
6. Edit zbusupd.py according to active cities
7. Install supervisor and daemons from the ```addons``` list
8. Run

Optionally you could install:
* [Semantic UI](http://semantic-ui.com/) (CSS framework)
* [r.js optimizer](http://requirejs.org/docs/optimization.html) (compile collection of JS in one file)
* [GeoLite2](http://dev.maxmind.com/geoip/geoip2/geolite2/) (for user's city detection by IP address)

Scripts for building CSS and JS: 99-release-*.sh

#### License
Published under [MIT](LICENSE) license.

",65,65,5,2,public-transport,"[bus, django, gps, gtfs, gtfs-rt, opendata, public-transport, public-transportation, realtime, tracking, transportation]",00000
901,tripkit,alexander-albers,N/A,N/A,https://api.github.com/repos/alexander-albers/tripkit,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C14C:7039:27957EA:513577F:65224412.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
902,gtfs-via-postgres,public-transport,N/A,N/A,https://api.github.com/repos/public-transport/gtfs-via-postgres,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C128:629D:459D4E2:8D4206C:65224413.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
903,oebb,juliuste,N/A,N/A,https://api.github.com/repos/juliuste/oebb,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C16F:049C:271DAB0:504CC2C:65224413.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
904,time-space-train-planner,traines-source,N/A,N/A,https://api.github.com/repos/traines-source/time-space-train-planner,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1BB:16F7:26C3261:4F8BDCE:65224414.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
905,european-transport-operators,public-transport,N/A,N/A,https://api.github.com/repos/public-transport/european-transport-operators,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C174:6B96:288CCBB:5373155:6522437B.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
906,retro-gtfs,SAUSy-Lab,N/A,N/A,https://api.github.com/repos/SAUSy-Lab/retro-gtfs,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1A3:57A8:2829EE5:525C28F:65224415.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
907,api.direkt.bahn.guru,juliuste,N/A,N/A,https://api.github.com/repos/juliuste/api.direkt.bahn.guru,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C18B:78AC:28007D5:52129D2:65224415.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
908,korail,juliuste,N/A,N/A,https://api.github.com/repos/juliuste/korail,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C14E:1B08:281E5E5:52322CD:65224416.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
909,OpenStop,OPENER-next,N/A,N/A,https://api.github.com/repos/OPENER-next/OpenStop,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C16A:18FC:2741A8E:5089A82:65224416.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
910,transport-apis,public-transport,N/A,N/A,https://api.github.com/repos/public-transport/transport-apis,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C139:7646:297E1E2:550327B:65224417.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
911,OpenMetroMaps,OpenMetroMaps,N/A,N/A,https://api.github.com/repos/OpenMetroMaps/OpenMetroMaps,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C103:3B38:300671:637EF6:6522437D.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
912,travel-price-map,juliuste,N/A,N/A,https://api.github.com/repos/juliuste/travel-price-map,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C133:4AAE:278CE44:512D4FC:65224418.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
913,traewelldroid,Traewelldroid,N/A,N/A,https://api.github.com/repos/Traewelldroid/traewelldroid,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C144:1D92:25FD171:4E02C47:65224418.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
914,vrnbus,vrntrans,N/A,N/A,https://api.github.com/repos/vrntrans/vrnbus,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1EB:75D0:26572BF:4EC8B3E:65224419.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
915,curlbus,elad661,N/A,N/A,https://api.github.com/repos/elad661/curlbus,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C19E:629D:459E087:8D4384D:65224419.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
916,pt2matsim,matsim-org,N/A,N/A,https://api.github.com/repos/matsim-org/pt2matsim,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1D5:629D:459E22E:8D43BB9:6522441A.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
917,MMM-PublicTransportBerlin,deg0nz,N/A,N/A,https://api.github.com/repos/deg0nz/MMM-PublicTransportBerlin,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C167:5173:24E8CAC:4BE21AE:6522441B.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
918,osm-relatify,Zaczero,N/A,https://github.com/Zaczero/osm-relatify,https://api.github.com/repos/Zaczero/osm-relatify,🚌 OpenStreetMap public transport made easy,"# <img height=""24"" src=""https://github.com/Zaczero/osm-relatify/blob/main/web/static/img/icon.png?raw=true"" alt=""🗺️""> OSM Relatify

![Python version](https://shields.monicz.dev/badge/python-v3.11-blue)
[![Project license](https://shields.monicz.dev/github/license/Zaczero/osm-relatify)](https://github.com/Zaczero/osm-relatify/blob/main/LICENSE)
[![Support my work](https://shields.monicz.dev/badge/%E2%99%A5%EF%B8%8F%20Support%20my%20work-purple)](https://monicz.dev/#support-my-work)
[![GitHub repo stars](https://shields.monicz.dev/github/stars/Zaczero/osm-relatify?style=social)](https://github.com/Zaczero/osm-relatify)

OpenStreetMap public transport made easy.

You can access the **official instance** of osm-relatify at [relatify.monicz.dev](https://relatify.monicz.dev).

<img width=""60%"" src=""https://github.com/Zaczero/osm-relatify/blob/main/resources/application-preview.png?raw=true"" alt=""Application preview"">

## About

OSM Relatify is a user-friendly web application specifically designed for editing public transport relations within OpenStreetMap (OSM).

The application relies on the OSM data to be (more-or-less) accurately tagged. Incorrect or poor tagging may necessitate manual corrections using an OSM editor, like iD or JOSM.

Please note that, for now, OSM Relatify only supports bus relations.

## User documentation

https://wiki.openstreetmap.org/wiki/Relatify

## Features

### Supported

- ✅ Bus routes
- ✅ One-way streets
- ✅ Roundabouts
- ✅ Right-hand traffic
- ✅ `ref` & `local_ref`
- ✅ `roundtrip`
- ✅ `public_transport:version=2`
- ✅ `public_transport=platform`
- ✅ `public_transport=stop_position`
- ✅ `public_transport=stop_area`

### Planned

- ⏳ Custom changeset comment
- ⏳ Tag editing
- ⏳ Creating new relations
- ⏳ Creating new bus stops
- ⏳ Left-hand traffic
- ⏳ Relation `type=restriction`
- ⏳ `direction=*`
- ⏳ `oneway=-1`
- ⏳ Trams, trolleybuses, trains, etc.

### Unsupported

- ❌ Exceptionally poor tagging
- ❌ `public_transport:version=1`

## Footer

### Contact me

https://monicz.dev/#get-in-touch

### Support my work

https://monicz.dev/#support-my-work

### License

This project is licensed under the GNU Affero General Public License v3.0.

The complete license text can be accessed in the repository at [LICENSE](https://github.com/Zaczero/osm-relatify/blob/main/LICENSE).
",39,39,5,25,public-transport,"[bus, docker, leaflet, openstreetmap, overpass-api, public-transport, python, routing, routing-engine, transit, transport, transportation]",00000
919,ideas,public-transport,N/A,N/A,https://api.github.com/repos/public-transport/ideas,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C163:75D0:26574D5:4EC8FB5:6522441B.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
920,comboios,juliuste,N/A,N/A,https://api.github.com/repos/juliuste/comboios,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1E2:39DF:279EB0A:513C438:6522441C.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
921,gtfstools,ipeaGIT,N/A,N/A,https://api.github.com/repos/ipeaGIT/gtfstools,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1E5:39DF:279EBA0:513C55F:6522441C.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
922,sdk,entur,N/A,N/A,https://api.github.com/repos/entur/sdk,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1E3:12FA:5F955C:C4E80A:6522441D.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
923,OSDM,UnionInternationalCheminsdeFer,N/A,N/A,https://api.github.com/repos/UnionInternationalCheminsdeFer/OSDM,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C178:2EE5:2884067:535B240:6522437E.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
924,otpr,marcusyoung,N/A,N/A,https://api.github.com/repos/marcusyoung/otpr,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C194:57A8:282A7FD:525D576:6522441D.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
925,european-transport-feeds,public-transport,N/A,N/A,https://api.github.com/repos/public-transport/european-transport-feeds,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C141:049C:271E432:504DFD1:6522441E.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
926,lvb,juliuste,N/A,N/A,https://api.github.com/repos/juliuste/lvb,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1C0:7CD5:2A2F798:566D861:6522441F.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
927,transport.rest,public-transport,N/A,N/A,https://api.github.com/repos/public-transport/transport.rest,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C180:1B08:281EDDC:523334E:6522441F.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
928,gtfs-utils,public-transport,N/A,N/A,https://api.github.com/repos/public-transport/gtfs-utils,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1F8:7E90:26DFC7A:4FB5F10:65224420.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
929,Public-Transport-Monitor-Berlin,hemulens,N/A,N/A,https://api.github.com/repos/hemulens/Public-Transport-Monitor-Berlin,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1C5:5173:24E92AA:4BE2E11:65224420.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
930,fastgtfs,nicomazz,N/A,N/A,https://api.github.com/repos/nicomazz/fastgtfs,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1BB:16F7:26C3CD3:4F8D373:65224421.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
931,kiel-live,kiel-live,N/A,N/A,https://api.github.com/repos/kiel-live/kiel-live,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C16B:38A4:2BF25E0:5A2E381:65224381.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
932,flix,juliuste,N/A,N/A,https://api.github.com/repos/juliuste/flix,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C155:75D0:2657AA0:4EC9B92:65224422.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
933,gtfs2emis,ipeaGIT,N/A,N/A,https://api.github.com/repos/ipeaGIT/gtfs2emis,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C17D:629D:459F076:8D458BC:65224422.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
934,WienerLinienMonitor-for-RaspberryPi,PKlempe,N/A,N/A,https://api.github.com/repos/PKlempe/WienerLinienMonitor-for-RaspberryPi,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C171:7DF2:26CC472:4F950C1:65224423.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
935,interrail,juliuste,N/A,N/A,https://api.github.com/repos/juliuste/interrail,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C14E:1B08:281F08B:52338EB:65224423.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
936,gtfs-rt-inspector,public-transport,N/A,N/A,https://api.github.com/repos/public-transport/gtfs-rt-inspector,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C123:57A8:282AE81:525E2CA:65224423.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
937,sncf,juliuste,N/A,N/A,https://api.github.com/repos/juliuste/sncf,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C195:646E:271804A:5038C8F:65224424.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
938,realtime-transport-dashboards,lmammino,N/A,N/A,https://api.github.com/repos/lmammino/realtime-transport-dashboards,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1FC:1B08:281F1FD:5233C08:65224424.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
939,timetable_kit,neroden,N/A,https://github.com/neroden/timetable_kit,https://api.github.com/repos/neroden/timetable_kit,A Python toolkit for generating human-readable timetables from GTFS data; uses PANDAS and gtfs_kit,"{'message': 'Not Found', 'documentation_url': 'https://docs.github.com/rest/repos/contents#get-repository-content'}",23,23,6,1,public-transport,"[gtfs, html-timetables, metro, pandas, public-transport, public-transportation, python, static-gtfs, timetable, trains, transit, transit-data, transportation, trip-planning]",00000
940,bilkom,juliuste,N/A,N/A,https://api.github.com/repos/juliuste/bilkom,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1DB:16F7:26C4002:4F8DA11:65224425.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
941,just_gtfs,mapsme,N/A,N/A,https://api.github.com/repos/mapsme/just_gtfs,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1E5:39DF:279F4C5:513D85A:65224426.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
942,matsim-sbb-extensions,SchweizerischeBundesbahnen,N/A,N/A,https://api.github.com/repos/SchweizerischeBundesbahnen/matsim-sbb-extensions,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C14D:6AF3:28BCA09:537E8E9:65224426.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
943,dm_tomatrixled,d3d9,N/A,N/A,https://api.github.com/repos/d3d9/dm_tomatrixled,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C11A:17C0:2B401F:5A2FC2:65224385.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
944,api-documentation,roataway,N/A,N/A,https://api.github.com/repos/roataway/api-documentation,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1F0:565A:26C83F3:4FA07FF:65224427.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
945,hafas-rest-api,public-transport,N/A,N/A,https://api.github.com/repos/public-transport/hafas-rest-api,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1A1:7DF2:26CC9E4:4F95BDA:65224427.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
946,NightingaleTransitMap,yyyeying,N/A,N/A,https://api.github.com/repos/yyyeying/NightingaleTransitMap,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C12A:2299:256F019:4CEC654:65224428.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
947,LuasataGlance,thecosmicfrog,N/A,N/A,https://api.github.com/repos/thecosmicfrog/LuasataGlance,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C11A:603C:289DA87:533AFDF:65224428.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
948,gotrain,rijdendetreinen,N/A,N/A,https://api.github.com/repos/rijdendetreinen/gotrain,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1C4:9D23:26FCA0D:5005011:65224429.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
949,svg-transit-map,juliuste,N/A,N/A,https://api.github.com/repos/juliuste/svg-transit-map,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C17D:629D:45A09F8:8D48C53:6522442A.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
950,bus-eta-bot,yi-jiayu,N/A,N/A,https://api.github.com/repos/yi-jiayu/bus-eta-bot,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C182:4AAE:278DDAD:512F4EC:6522442A.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
951,generate-db-shop-urls,derhuerst,N/A,N/A,https://api.github.com/repos/derhuerst/generate-db-shop-urls,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1A1:7DF2:26CCE55:4F96470:6522442B.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
952,tokyo-metro-data,Jugendhackt,N/A,N/A,https://api.github.com/repos/Jugendhackt/tokyo-metro-data,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1BD:2299:256F367:4CECD29:6522442B.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
953,why-linked-open-transit-data,public-transport,N/A,N/A,https://api.github.com/repos/public-transport/why-linked-open-transit-data,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1A9:6459:267D521:4F1A042:6522442C.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
954,trias-client,tschoow,N/A,N/A,https://api.github.com/repos/tschoow/trias-client,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C13C:27B4:2573135:4CFACF7:6522442D.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
955,ptna,osm-ToniE,N/A,N/A,https://api.github.com/repos/osm-ToniE/ptna,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C10B:3493:2741F5B:50D17D9:65224388.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
956,payanam,WRI-Cities,N/A,N/A,https://api.github.com/repos/WRI-Cities/payanam,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1FF:4A15:291B3AC:5439A8F:6522442D.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
957,hslhrt-hass-custom,anand-p-r,N/A,N/A,https://api.github.com/repos/anand-p-r/hslhrt-hass-custom,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C16F:24F2:29CC82C:55CF8BF:6522438A.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
958,oeffis-paper,djaffry,N/A,N/A,https://api.github.com/repos/djaffry/oeffis-paper,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C150:6459:267D661:4F1A2FA:6522442E.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
959,sgraildata,cheeaun,N/A,N/A,https://api.github.com/repos/cheeaun/sgraildata,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C180:1B08:281FA98:5234DC0:6522442E.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
960,hk-bus-eta,hkbus,N/A,N/A,https://api.github.com/repos/hkbus/hk-bus-eta,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C181:4A15:291B553:5439E06:6522442F.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
961,oebb-hafas,juliuste,N/A,N/A,https://api.github.com/repos/juliuste/oebb-hafas,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C195:646E:2718B6D:503A38D:65224430.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
962,raptor,raoulvdberge,N/A,N/A,https://api.github.com/repos/raoulvdberge/raptor,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C196:6EFD:255BDCA:4CD1809:65224430.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
963,Home-Assistant-custom-components-iMPK,PiotrMachowski,N/A,N/A,https://api.github.com/repos/PiotrMachowski/Home-Assistant-custom-components-iMPK,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C183:9CF4:2821D27:5242E3A:65224431.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
964,pkp-ic,juliuste,N/A,N/A,https://api.github.com/repos/juliuste/pkp-ic,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C16F:049C:271F572:5050397:65224431.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
965,hafas-gtfs-rt-feed,derhuerst,N/A,N/A,https://api.github.com/repos/derhuerst/hafas-gtfs-rt-feed,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C128:629D:45A1D79:8D4B3C6:65224432.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
966,bvg-hafas,public-transport,N/A,N/A,https://api.github.com/repos/public-transport/bvg-hafas,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C18D:78AC:2802579:52166FC:65224433.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
967,TransitNetworkModel,tmelliott,N/A,N/A,https://api.github.com/repos/tmelliott/TransitNetworkModel,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C15F:3D80:272F4BA:5066E41:65224434.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
968,telegram-bot,roataway,N/A,N/A,https://api.github.com/repos/roataway/telegram-bot,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C10B:74C7:26A0232:4F4F23A:65224435.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
969,bus-sg,ninest,N/A,N/A,https://api.github.com/repos/ninest/bus-sg,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C129:22D5:2F6B956:611B47B:65224390.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
970,maas.guide,maas-alliance,maas-alliance,https://github.com/maas-alliance/maas.guide,https://api.github.com/repos/maas-alliance/maas.guide,Guidebook to help Mobility as a Service providers.,"# MaaS Guide _\(alpha\)_

Guidebook to help Mobility as a Service \(MaaS\) providers.

One of the principle goals of the Mobility as a Service movement is to build a **unified marketplace** of transportation options, so that people can travel freely while experiencing a **simple and consistent user experience**.

It is the **user oriented approach** that distinguishes MaaS from other related concepts, such as multi-modality.

## Goal

This guide is intended as a high-level overview of the key aspects needed to sustain a MaaS ecosystem. Each key concept is outlined on 1-2 pages, in plain language with links for further reading.

## Intended audience

This book is intended for stakeholders in transportation and MaaS providers. It offers a conceptual and practical framework that can be shared by managers, planners, developers, and even end users of transportation and mobility services.

## Attribution

This work is provided by the [MaaS Alliance](https://maas-alliance.eu/), a public-private partnership creating the foundations for a common approach to MaaS, unlocking the economies of scale needed for successful implementation and take-up of MaaS in Europe and beyond. MaaS Guidebook is built and maintained on voluntary basis by MaaS Alliance's working group Technology and standards. The Guidebook is currently in very early phase.

",12,12,7,4,public-transport,"[bus, car-rental, car-sharing, mobility, mobility-as-a-service, mobility-concepts, public-transport, public-transportation, subway, taxi, train, tram, transport, transportation]",00000
971,linked-connections-server,linkedconnections,N/A,N/A,https://api.github.com/repos/linkedconnections/linked-connections-server,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C11D:049C:271F990:5050C1B:65224435.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
972,EV-Fleet-Simulator,abrac,N/A,https://github.com/abrac/EV-Fleet-Simulator,https://api.github.com/repos/abrac/EV-Fleet-Simulator,*NOTE*: This is a mirror. The original repository is linked below. This software computes the electrical energy requirements of a fleet of vehicles. It also determines how much of this energy can be offset by renewable energy. It does all this by analyzing the fleet's GPS traces and applying EV and PV models.,"<!-- Note: This is a markdown file. Use a markdown editor to easily edit and
     view this file. Just search the web for a nice markdown editor (like
     Ghostwriter). -->

> Notice: Please visit https://gitlab.com/eputs/ev-fleet-sim to ensure that you
> are viewing the official, up-to-date version of this repository.

Electric-Vehicle Fleet Simulator
================================

This program is used to predict the energy usage of a fleet of electric vehicles. The program receives as input GPS traces of each of the vehicles of the fleet. These GPS traces can be obtained, for example, by installing tracking devices onto the vehicles of a fleet for which you want to predict the electrical energy usage. This is especially useful for projects whereby an existing petrol/diesel fleet is to be converted to electric vehicles. The program will analyse the vehicle's driving and stopping patterns in order to predict the amount of energy used and the amount of time that the vehicle can be charged during the average day. In addition, the program makes provisions to calculate how much of the energy can be provided for by renewable-energy sources.

Please refer to the accompanying open-access journal article publication: [Ray of hope for sub-Saharan Africa's paratransit: Solar charging of urban electric minibus taxis in South Africa](https://doi.org/10.1016/j.esd.2021.08.003). The article shows how this program can be used to derive meaningful results.

Licensing
=========

This software is [licensed under GPLv3](./LICENSE)

If you use the software, or a derivative thereof, you are required to attribute the original authors using the following citation:

> Abraham, C. J., Rix, A. J., Ndibatya, I., & Booysen, M. J. (2021). Ray of
> hope for sub-Saharan Africa's paratransit: Solar charging of urban electric
> minibus taxis in South Africa. Energy for Sustainable Development, 64,
> 118-127. https://doi.org/10.1016/j.esd.2021.08.003

<details><summary>Bibtex</summary>

```
@article{abraham2021,
title = {Ray of hope for sub-Saharan Africa's paratransit: Solar charging of urban electric minibus taxis in South Africa},
journal = {Energy for Sustainable Development},
volume = {64},
pages = {118-127},
year = {2021},
issn = {0973-0826},
doi = {https://doi.org/10.1016/j.esd.2021.08.003},
url = {https://www.sciencedirect.com/science/article/pii/S0973082621000946},
author = {C.J. Abraham and A.J. Rix and I. Ndibatya and M.J. Booysen},
keywords = {Electric vehicle, Paratransit, Minibus taxi, Demand management, Renewable energy},
abstract = {Minibus taxi public transport is a seemingly chaotic phenomenon in the developing cities of the Global South with unique mobility and operational characteristics. Eventually this ubiquitous fleet of minibus taxis is expected to transition to electric vehicles, which will result in an additional energy burden on Africa's already fragile electrical grids. This paper examines the electrical energy demands of this possible evolution, and presents a generic simulation environment to assess the grid impact and charging opportunities. We used GPS tracking and spatio-temporal data to assess the energy requirements of nine electric minibus taxis as well as the informal and formal stops at which the taxis can recharge. Given the region's abundant sunshine, we modelled a grid-connected solar photovoltaic charging system to determine how effectively PV may be used to offset the additional burden on the electrical grid. The mean energy demand of the taxis was 213kWh/d, resulting in an average efficiency of 0.93kWh/km. The stopping time across taxis, a proxy for charging opportunity, ranged from 7.7 h/d to 10.6 h/d. The energy supplied per surface area of PV to offset the charging load of a taxi while stopping, ranged from 0.38 to 0.90kWh/m2 per day. Our simulator, which is publicly available, and the results will allow traffic planners and grid operators to assess and plan for looming electric vehicle roll-outs.}
}
```
</details>

Please also click the ""star"" button on the top of our [code repository](https://gitlab.com/eputs/ev-fleet-sim) so that we know how many people our software is benefitting. This helps us to justify future funding and work on the project. Thank you!

Documentation
=============

To learn how to install and use this software, please refer to the [documentation](https://ev-fleet-sim.online/docs.html).

If you learn better with videos, here is a video tutorial of the software:

<a href=""https://youtu.be/vhiw34Hm7CI"" target=""_blank"" rel=""noopener noreferrer"">![Video Tutorial](./docs/assets/images/youtube_tutorial.png)</a>

Getting Support
===============

Welcome to our EV-Fleet-Sim community! You can join our community's Matrix
channel (an open-source alternative of Microsoft Teams):
https://matrix.to/#/#ev-fleet-sim:matrix.org.

For more help, please don't hesitate to contact me on my e-mail address: 
`chris <abraham-without-the-A's> [at] gmail [dot] com` or via Matrix:
https://matrix.to/#/@abrac:matrix.org.

If you have encountered any issues/bugs with the software, you can report them in our [issues tracker](https://gitlab.com/eputs/ev-fleet-sim/-/issues).

Also remember to press the ""star"" and ""notification bell"" on the top of the
GitLab page. That way, you will be notified of the latest commits and
pull-requests.
",12,12,1,1,public-transport,"[data-analysis, electric-vehicles, public-transport, python, renewable-energy]",00000
973,mav,juliuste,N/A,N/A,https://api.github.com/repos/juliuste/mav,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1DA:629D:45A27E2:8D4C898:65224436.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
974,VigoBusAPI,David-Lor,N/A,N/A,https://api.github.com/repos/David-Lor/VigoBusAPI,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1F4:47EA:26CF18B:4FB9A83:65224390.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
975,Transportflow,Transportflow,N/A,N/A,https://api.github.com/repos/Transportflow/Transportflow,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C10A:7DF2:26CDD7B:4F983A7:65224437.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
976,koleo,juliuste,N/A,N/A,https://api.github.com/repos/juliuste/koleo,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1D5:629D:45A2A0D:8D4CD15:65224437.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
977,PublicTransportNetworks,FOR2083,FOR2083,https://github.com/FOR2083/PublicTransportNetworks,https://api.github.com/repos/FOR2083/PublicTransportNetworks,"The grid dataset, provided by DFG research unit FOR2083","# Public Transport Networks
Public Transport Networks is a networks repository for public transport research. It provides networks as test instances for the following types of problems:
  - Public transport network design problem (NDP)
  - Public transport vehicle and crew scheduling
  - Public transport networks with disturbances
  - Public transport assignment
  - Handling of ridesharing trips

# How the Data is Organized

Each individual network and related files is stored in a separate folder. Each folder contains the following subfolders:
  - Input: provides data describing the transport supply (nodes, stops, links, running times)  and data describing the travel demand (traffic zones, trips between traffic zones)
  - Solution_NDP_Summary: Overview of all solutions for the Network Design Problem
  -	Solution_NDP_Name: Description of a particular solution for the Network Design Problem 
  
# License 

The current data sets are a result of the research project ""[FOR 2083: Integrated Planning For Public Transportation](https://for2083.math.uni-goettingen.de/en/project)"" funded by the German Research Association DFG. Data sets are for academic research purposes only. Users are fully responsible for any results or conclusions obtained by using these data sets. Users must indicate the source of any dataset they are using in any publication that relies 
on any of the datasets provided in this web site.  The Research Group FOR 2083 is not responsible for the content of the data sets. Agencies, organizations, institutions and individuals acknowledged in this web site for their contribution to the datasets are not responsible for the content or the correctness of the datasets.

# Summary of Networks

| Network                                            | Zones | Links  | Nodes  | Stops  |
| ---                                                | ---   | ---    | ---    | ---    |
| Grid 5x5                                           |    25 |     80 |     25 |     25 |
| Grid 21x21                                         |   100 |   1680 |    441 |    341 |
| Ring 8x11                                          |   161 |    640 |    161 |    161 |
| Ring 16x22                                         |   672 |   6720 |   2689 |    673 |
| SiouxFalls                                         |    24 |     76 |     24 |     74 |
| Erding											                       |    52 |    146 |     52 |     52 |
| Stuttgart                                          |   588 |   1436 |    577 |    577 |

# Formats
The  data is provided in the following formats
  - text-format [LimTim](https://lintim.math.uni-goettingen.de/index.php?go=main.php&lang=en)
  - text-format [VISUM](http://vision-traffic.ptvgroup.com/en-us/products/ptv-visum/)
  - spreadsheet-format (.xls)
  - binary-format [VISUM](http://vision-traffic.ptvgroup.com/en-us/products/ptv-visum/)
  

# Other Related Projects
- [LinTim](https://lintim.net/)
- [Transportation Networks](https://github.com/bstabler/TransportationNetworks)
",11,11,2,0,public-transport,"[dataset, lintim, public-transport, public-transportation, transportation, transportation-network, visum]",00000
978,esp32_ssd1306_metaefa,aschuma,N/A,N/A,https://api.github.com/repos/aschuma/esp32_ssd1306_metaefa,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C129:7039:2797BBE:513A17A:65224438.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
979,wiener_linien_esp32_monitor,coppermilk,N/A,N/A,https://api.github.com/repos/coppermilk/wiener_linien_esp32_monitor,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C123:57A8:282C8B0:526187A:65224439.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
980,public-transport-ticketing-system,tenusha,N/A,N/A,https://api.github.com/repos/tenusha/public-transport-ticketing-system,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C12C:27B4:2573DF2:4CFC75E:65224439.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
981,vbbvg,deeplook,N/A,N/A,https://api.github.com/repos/deeplook/vbbvg,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1BA:59CA:2651B75:4EB42BD:6522443A.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
982,EL-Cous,50t0r25,N/A,N/A,https://api.github.com/repos/50t0r25/EL-Cous,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1E5:39DF:27A0AFD:5140615:6522443B.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
983,hive,hiposfer,N/A,N/A,https://api.github.com/repos/hiposfer/hive,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1F0:565A:26C970E:4FA2F73:6522443B.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
984,mvg-node,lukaskollmer,N/A,N/A,https://api.github.com/repos/lukaskollmer/mvg-node,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1A4:7646:2980722:5507F49:6522443B.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
985,access-to-services,datasciencecampus,N/A,N/A,https://api.github.com/repos/datasciencecampus/access-to-services,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C12B:47EE:2BBA682:59B6165:65224394.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
986,hst-svg-netzplan,d3d9,N/A,N/A,https://api.github.com/repos/d3d9/hst-svg-netzplan,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C154:73C7:727623:EC567F:65224395.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
987,vbb-journey-ui,derhuerst,N/A,N/A,https://api.github.com/repos/derhuerst/vbb-journey-ui,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1EF:679F:2AD4042:5795915:6522443C.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
988,Home-Assistant-custom-components-Rozkladzik,PiotrMachowski,N/A,N/A,https://api.github.com/repos/PiotrMachowski/Home-Assistant-custom-components-Rozkladzik,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C14A:5BDF:27651A7:50E2E35:6522443D.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
989,muni-sign,MingweiSamuel,N/A,N/A,https://api.github.com/repos/MingweiSamuel/muni-sign,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C116:7D9C:2B6A2F2:58D47B2:6522443D.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
990,sbahn-berlin-tweets,derhuerst,N/A,N/A,https://api.github.com/repos/derhuerst/sbahn-berlin-tweets,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1CC:39DF:27A0DEB:5140C18:6522443D.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
991,ruterstop,stigok,N/A,N/A,https://api.github.com/repos/stigok/ruterstop,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1DE:75D0:265959D:4ECD352:6522443E.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
992,gtfs-php-sdk,trafiklab,N/A,N/A,https://api.github.com/repos/trafiklab/gtfs-php-sdk,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C11A:58D0:782C63:F7587E:65224396.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
993,efa2gtfs,mfdz,N/A,N/A,https://api.github.com/repos/mfdz/efa2gtfs,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1DD:04F2:273F1AF:5085348:6522443F.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
994,MACSTransitApp,yeSpud,N/A,N/A,https://api.github.com/repos/yeSpud/MACSTransitApp,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C12E:7646:2980BE8:5508907:6522443F.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
995,o2g,hiposfer,N/A,N/A,https://api.github.com/repos/hiposfer/o2g,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1F1:4A15:291CB8E:543CAF1:65224440.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
996,public-transport-apps-encryption,public-transport,N/A,N/A,https://api.github.com/repos/public-transport/public-transport-apps-encryption,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1E3:12FA:5FB834:C52FD5:65224440.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
997,berlin-gtfs-rt-server,derhuerst,N/A,N/A,https://api.github.com/repos/derhuerst/berlin-gtfs-rt-server,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C14F:6459:267E879:4F1C846:65224441.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
998,bus-torino,valerio-bozzolan,N/A,N/A,https://api.github.com/repos/valerio-bozzolan/bus-torino,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C144:1D92:2600215:4E0900A:65224442.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
999,ridebus,ridebus-by,N/A,N/A,https://api.github.com/repos/ridebus-by/ridebus,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1A6:8A0D:2840253:5290FD2:65224442.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1000,flix-rest,juliuste,N/A,N/A,https://api.github.com/repos/juliuste/flix-rest,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C167:5173:24EB968:4BE7DAE:65224443.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1001,rail-projects-comparison,traines-source,N/A,N/A,https://api.github.com/repos/traines-source/rail-projects-comparison,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1EE:75D0:2659AC7:4ECDE02:65224443.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1002,cached-hafas-client,public-transport,N/A,N/A,https://api.github.com/repos/public-transport/cached-hafas-client,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C155:75D0:2659B5C:4ECDF3A:65224444.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1003,Public-transport-tracking-data,MrKrisKrisu,N/A,N/A,https://api.github.com/repos/MrKrisKrisu/Public-transport-tracking-data,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1AF:3996:263FA7C:4E81B59:65224443.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1004,sample-gtfs-feed,public-transport,N/A,N/A,https://api.github.com/repos/public-transport/sample-gtfs-feed,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C191:75D0:2659BF5:4ECE07B:65224445.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1005,hvv-rest,derhuerst,N/A,N/A,https://api.github.com/repos/derhuerst/hvv-rest,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C178:75D0:2659CC7:4ECE21D:65224445.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1006,slovenske-zeleznice,juliuste,N/A,N/A,https://api.github.com/repos/juliuste/slovenske-zeleznice,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C104:16F7:26C5D44:4F9163F:65224446.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1007,ptna-networks,osm-ToniE,N/A,N/A,https://api.github.com/repos/osm-ToniE/ptna-networks,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1DA:178A:2CB0117:5B7D2B6:65224399.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1008,db-stations-autocomplete,derhuerst,N/A,N/A,https://api.github.com/repos/derhuerst/db-stations-autocomplete,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C197:049C:2720D2A:5053434:65224447.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1009,pt_assistant,JOSM,N/A,N/A,https://api.github.com/repos/JOSM/pt_assistant,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C184:5119:25A69E8:4D652B0:65224447.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1010,generate-vbb-transit-map,derhuerst,N/A,N/A,https://api.github.com/repos/derhuerst/generate-vbb-transit-map,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C186:638B:2799FA1:5134AE7:65224448.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1011,generate-vbb-graph,derhuerst,N/A,N/A,https://api.github.com/repos/derhuerst/generate-vbb-graph,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C15F:3D80:2730DE1:506A1F3:65224449.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1012,vbb-stations,derhuerst,N/A,N/A,https://api.github.com/repos/derhuerst/vbb-stations,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1A1:7DF2:26CF5C1:4F9B514:65224449.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1013,EcoJourney,ShivamGoyal1899,N/A,N/A,https://api.github.com/repos/ShivamGoyal1899/EcoJourney,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C184:5119:25A6C1A:4D6574B:6522444A.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1014,db-prices-radar,juliuste,N/A,N/A,https://api.github.com/repos/juliuste/db-prices-radar,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C18B:78AC:28041FE:521A173:6522444B.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1015,hafalsch,mikbot,N/A,N/A,https://api.github.com/repos/mikbot/hafalsch,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1B0:28F2:2A436C9:568829E:6522444B.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1016,sbb,chefe,N/A,N/A,https://api.github.com/repos/chefe/sbb,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C149:04F2:273FDDB:5086C7D:6522444B.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1017,link.bahn.guru,juliuste,N/A,N/A,https://api.github.com/repos/juliuste/link.bahn.guru,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C122:6AF3:28BF859:53847E3:6522444C.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1018,Abfahrten,yannikbloscheck,N/A,N/A,https://api.github.com/repos/yannikbloscheck/Abfahrten,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C168:6611:6EBEA7:E51864:6522439C.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1019,fpti-js,public-transport,N/A,N/A,https://api.github.com/repos/public-transport/fpti-js,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C13C:0C3C:765789:F43534:6522439B.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1020,python-imhdsk-api,mrshu,N/A,N/A,https://api.github.com/repos/mrshu/python-imhdsk-api,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1AE:607B:7A03CB:FB5EB2:6522439F.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1021,db-wagenreihung,juliuste,N/A,N/A,https://api.github.com/repos/juliuste/db-wagenreihung,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C139:5934:287DE90:5343231:6522444C.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1022,hafas-generate-gtfs,derhuerst,N/A,N/A,https://api.github.com/repos/derhuerst/hafas-generate-gtfs,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C13F:58D0:78EAB8:F8E14F:6522444D.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1023,pyleapcard,skhg,N/A,N/A,https://api.github.com/repos/skhg/pyleapcard,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1FF:29CE:331DC08:6852588:6522444E.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1024,HSLtraffic,markusvalo,N/A,N/A,https://api.github.com/repos/markusvalo/HSLtraffic,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1F2:0FAE:198D3B8:34B4475:6522439D.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1025,OpenLinePlanner,xatellite,N/A,N/A,https://api.github.com/repos/xatellite/OpenLinePlanner,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C13D:1364:780B32:F79F9E:6522444E.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1026,hafas-linked-connections-server,derhuerst,N/A,N/A,https://api.github.com/repos/derhuerst/hafas-linked-connections-server,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C12F:6A74:1A4C38A:362A50F:6522444F.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1027,db-cli,derhuerst,N/A,N/A,https://api.github.com/repos/derhuerst/db-cli,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C132:7B5B:74C0CF:F0C202:6522444F.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1028,lovelace-tam-card,MathisAlepis,N/A,N/A,https://api.github.com/repos/MathisAlepis/lovelace-tam-card,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C15B:73C7:732C40:EDCF1D:65224450.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1029,hafas-rest-api-client,derhuerst,N/A,N/A,https://api.github.com/repos/derhuerst/hafas-rest-api-client,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C16A:58D0:78EDFE:F8E80D:65224450.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1030,PassengerInformationSystem,Der-Zauberer,N/A,N/A,https://api.github.com/repos/Der-Zauberer/PassengerInformationSystem,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1E4:4179:2E0B18B:5E3AE03:65224451.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1031,train-ose,juliuste,N/A,N/A,https://api.github.com/repos/juliuste/train-ose,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C154:73C7:732DED:EDD27E:65224452.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1032,cvutbus,Lastaapps,N/A,N/A,https://api.github.com/repos/Lastaapps/cvutbus,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C14B:5934:287E459:5343E22:65224452.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1033,beat_the_trend,marcusyoung,N/A,N/A,https://api.github.com/repos/marcusyoung/beat_the_trend,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1DC:309A:2E797BC:5ED3044:65224453.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1034,S03,ITxPT,N/A,N/A,https://api.github.com/repos/ITxPT/S03,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C191:7B5B:74C4A6:F0C9EA:65224453.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1035,telegram-hketa,kirosc,N/A,N/A,https://api.github.com/repos/kirosc/telegram-hketa,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1FD:5934:287E49E:5343EC2:65224452.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1036,citram-python-api,jvicentem,N/A,N/A,https://api.github.com/repos/jvicentem/citram-python-api,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C13B:4678:1AEDDCB:37736F1:65224453.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1037,osm-transit-lines,juliuste,N/A,N/A,https://api.github.com/repos/juliuste/osm-transit-lines,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1D8:607B:7ABF5E:FCE125:65224454.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1038,StripMapGen,Sparen,N/A,N/A,https://api.github.com/repos/Sparen/StripMapGen,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C166:092A:71C180:EB2236:652243A0.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1039,onboardapis,felix-zenk,N/A,N/A,https://api.github.com/repos/felix-zenk/onboardapis,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C118:0C72:73F146:EF8592:65224454.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1040,transit-map-generator,derhuerst,N/A,N/A,https://api.github.com/repos/derhuerst/transit-map-generator,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1AD:36DF:3587719:6D23071:65224454.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1041,hafas-monitor-trips,derhuerst,N/A,N/A,https://api.github.com/repos/derhuerst/hafas-monitor-trips,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1D9:58D0:78F1EC:F8EFFE:65224454.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1042,ptna-www,osm-ToniE,N/A,N/A,https://api.github.com/repos/osm-ToniE/ptna-www,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1A9:3819:1B003F2:3786250:652243A2.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1043,extract-gtfs-shapes,derhuerst,N/A,N/A,https://api.github.com/repos/derhuerst/extract-gtfs-shapes,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C157:3BF5:75911D:F27FEF:65224455.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1044,mvg,mondbaron,N/A,N/A,https://api.github.com/repos/mondbaron/mvg,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C184:05EF:702F79:E7FE58:65224456.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1045,israel-public-transport-api,benyaming,N/A,N/A,https://api.github.com/repos/benyaming/israel-public-transport-api,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C149:7B5B:74C7B3:F0D019:65224456.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1046,hafas-find-trips,derhuerst,N/A,N/A,https://api.github.com/repos/derhuerst/hafas-find-trips,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C188:5A27:736696:EE61A5:65224457.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1047,insa-hafas,public-transport,N/A,N/A,https://api.github.com/repos/public-transport/insa-hafas,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C14E:6A74:1A4CB00:362B47A:65224457.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1048,osmptparser,cualbondi,N/A,N/A,https://api.github.com/repos/cualbondi/osmptparser,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C19C:984A:77AFD2:F6DE99:65224458.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1049,OeffiTracker,patloew,N/A,N/A,https://api.github.com/repos/patloew/OeffiTracker,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C182:1F34:1BC0D3A:390AB53:65224458.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1050,build-mav-gtfs,juliuste,N/A,N/A,https://api.github.com/repos/juliuste/build-mav-gtfs,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C100:29CE:331E7B7:6853DB7:65224459.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1051,busterminal,tmn,N/A,N/A,https://api.github.com/repos/tmn/busterminal,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C19B:0C3C:771B27:F5C8DE:65224459.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1052,OutlookSwissPTTimetable,mbeer,N/A,N/A,https://api.github.com/repos/mbeer/OutlookSwissPTTimetable,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1A6:4D66:6E14C0:E3DDD9:6522445A.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1053,animated-london-tube,ZeevoX,N/A,N/A,https://api.github.com/repos/ZeevoX/animated-london-tube,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C11B:1299:A02891:14ADEEA:6522445A.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1054,match-gtfs-rt-to-gtfs,derhuerst,N/A,N/A,https://api.github.com/repos/derhuerst/match-gtfs-rt-to-gtfs,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C131:418F:2A8B505:56FBFA3:6522445B.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1055,cgtfs,4rterius,N/A,N/A,https://api.github.com/repos/4rterius/cgtfs,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C156:4F4C:742D98:EFC237:6522445C.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1056,german-public-transport-wifis,derhuerst,N/A,N/A,https://api.github.com/repos/derhuerst/german-public-transport-wifis,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C181:58D0:78F91D:F8FEEA:6522445C.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1057,search-flix-locations,derhuerst,N/A,N/A,https://api.github.com/repos/derhuerst/search-flix-locations,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C104:2319:6B04C9:DDA44A:6522445D.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1058,app,now8-org,N/A,N/A,https://api.github.com/repos/now8-org/app,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C116:4179:2E0BD57:5E3C692:6522445D.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1059,translink-gtfs-visualiser,trishmapow,N/A,N/A,https://api.github.com/repos/trishmapow/translink-gtfs-visualiser,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1F7:7AEF:2DF3832:5DF7B30:6522445E.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1060,pan-european-public-transport,derhuerst,N/A,N/A,https://api.github.com/repos/derhuerst/pan-european-public-transport,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C11F:5F41:711EA6:E9E365:6522445F.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1061,vgn,becheran,N/A,N/A,https://api.github.com/repos/becheran/vgn,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C109:8AF9:726711:EC868D:6522445F.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1062,ptv-departure-board,gmaverik,N/A,N/A,https://api.github.com/repos/gmaverik/ptv-departure-board,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C194:4E78:71CCA7:EB334B:65224460.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1063,CVAG,thealpa,N/A,N/A,https://api.github.com/repos/thealpa/CVAG,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C10F:0E7B:1A4DD55:362EDF7:65224460.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1064,transafer,uoneway,N/A,N/A,https://api.github.com/repos/uoneway/transafer,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C126:4179:2E0C10A:5E3CE31:65224461.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1065,EtaAtHK,huikaihoo,N/A,https://github.com/huikaihoo/EtaAtHK,https://api.github.com/repos/huikaihoo/EtaAtHK,ETA@HK - Android App to show ETA of public transport in Hong Kong,"{'message': 'Not Found', 'documentation_url': 'https://docs.github.com/rest/repos/contents#get-repository-content'}",4,4,3,1,public-transport,"[android-app, bus, eta, hongkong, mtr, public-transport, public-transportation, tram, transport, transportation]",00000
1066,nahsh-hafas,juliuste,N/A,N/A,https://api.github.com/repos/juliuste/nahsh-hafas,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1D9:58D0:78FE4A:F9098C:65224462.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1067,Trias,kiliankoe,N/A,N/A,https://api.github.com/repos/kiliankoe/Trias,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1EE:178A:2CB0B81:5B7E82F:652243A4.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1068,gtfs-to-fptf,public-transport,N/A,N/A,https://api.github.com/repos/public-transport/gtfs-to-fptf,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1DF:309A:2E6DC76:5EBAE65:652243A5.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1069,pkp-hafas,juliuste,N/A,N/A,https://api.github.com/repos/juliuste/pkp-hafas,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C121:41B1:7293D7:ED1424:65224462.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1070,MoBouzer,danshilm,N/A,N/A,https://api.github.com/repos/danshilm/MoBouzer,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1FA:37E7:2D35C07:5C95549:65224463.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1071,hafas-cli,derhuerst,N/A,N/A,https://api.github.com/repos/derhuerst/hafas-cli,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C142:7AEF:2DF3DFC:5DF871C:65224463.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1072,PublicAustria,fschaupp,N/A,N/A,https://api.github.com/repos/fschaupp/PublicAustria,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C145:7B5B:740A0A:EF4978:652243A4.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1073,examples,roataway,N/A,N/A,https://api.github.com/repos/roataway/examples,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C165:73C7:733F28:EDF5F3:65224464.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1074,vbb-change-positions,juliuste,N/A,N/A,https://api.github.com/repos/juliuste/vbb-change-positions,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C132:7B5B:74D51C:F0EBDB:65224465.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1075,stable-public-transport-ids,derhuerst,N/A,N/A,https://api.github.com/repos/derhuerst/stable-public-transport-ids,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C193:2CBC:79725E:FA5017:65224465.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1076,Reflect-o-Bus,augustin64,N/A,N/A,https://api.github.com/repos/augustin64/Reflect-o-Bus,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C176:2319:6B0CC1:DDB4C5:65224466.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1077,eurostar2gtfs,planarnetwork,N/A,N/A,https://api.github.com/repos/planarnetwork/eurostar2gtfs,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C156:4F4C:7372EF:EE40D5:652243A9.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1078,MontpellierTransports,LouisRaverdy,N/A,N/A,https://api.github.com/repos/LouisRaverdy/MontpellierTransports,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1AE:607B:7A0D35:FB7227:652243AA.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1079,oepnv-covid19,tschoow,N/A,N/A,https://api.github.com/repos/tschoow/oepnv-covid19,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C187:984A:77BFA8:F6FF50:65224466.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1080,state-of-the-open,public-transport,N/A,N/A,https://api.github.com/repos/public-transport/state-of-the-open,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C166:092A:7274A4:EC95F3:65224467.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1081,bvg-wifi-recording-app,juliuste,N/A,N/A,https://api.github.com/repos/juliuste/bvg-wifi-recording-app,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C151:1F34:1BC19E8:390C5A5:65224468.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1082,trainline-stations,juliuste,N/A,N/A,https://api.github.com/repos/juliuste/trainline-stations,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C15B:73C7:7342E1:EDFDA2:65224468.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1083,hafas-discover-stations,derhuerst,N/A,N/A,https://api.github.com/repos/derhuerst/hafas-discover-stations,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C19C:984A:77C27E:F7052E:65224469.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1084,hamburg-gtfs-rt-server,derhuerst,N/A,N/A,https://api.github.com/repos/derhuerst/hamburg-gtfs-rt-server,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C150:4678:1AEF14A:3775FA0:65224469.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1085,deutsche-bahn-analysis,Splines,N/A,N/A,https://api.github.com/repos/Splines/deutsche-bahn-analysis,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1CA:178A:2CBEFFA:5B9BE36:6522446A.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1086,vvs_direct_connect,aschuma,N/A,N/A,https://api.github.com/repos/aschuma/vvs_direct_connect,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1C2:3BF5:75A48C:F2A7FF:6522446B.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1087,vdv-451-reader,derhuerst,N/A,N/A,https://api.github.com/repos/derhuerst/vdv-451-reader,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C100:29CE:331FAEB:685653A:6522446B.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1088,viavistas,natethrash,N/A,N/A,https://api.github.com/repos/natethrash/viavistas,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C11F:5F41:708C9F:E8B3FD:652243B5.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1089,SASIM,TUMFTM,N/A,N/A,https://api.github.com/repos/TUMFTM/SASIM,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C114:7AEF:2DF4656:5DF9876:6522446C.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1090,MMM-MVG-LocalTransport,trgraglia,N/A,N/A,https://api.github.com/repos/trgraglia/MMM-MVG-LocalTransport,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C124:5AB9:2C6A412:5AFD773:6522446C.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1091,PyASEAG,RobertKrajewski,N/A,N/A,https://api.github.com/repos/RobertKrajewski/PyASEAG,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1A6:4D66:6D819F:E2AC15:652243AE.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1092,sncf-wifi-portal-client,derhuerst,N/A,N/A,https://api.github.com/repos/derhuerst/sncf-wifi-portal-client,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C15A:5934:287FD2E:5347190:6522446D.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1093,berlin-commute-footprint,derhuerst,N/A,N/A,https://api.github.com/repos/derhuerst/berlin-commute-footprint,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C198:4678:1AEF53F:37767D2:6522446E.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1094,db-platforms,juliuste,N/A,N/A,https://api.github.com/repos/juliuste/db-platforms,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C187:984A:77C8E2:F71247:6522446E.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1095,lio-tdi-client,derhuerst,N/A,N/A,https://api.github.com/repos/derhuerst/lio-tdi-client,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1E2:5A27:737C04:EE8E1E:6522446F.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1096,PTSKIM,transportmodelling,N/A,N/A,https://api.github.com/repos/transportmodelling/PTSKIM,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1DC:309A:2E7B2AC:5ED67F3:6522446F.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1097,zuugle-suchseite,bahnzumberg,N/A,N/A,https://api.github.com/repos/bahnzumberg/zuugle-suchseite,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C101:178A:2CBF61A:5B9CB03:65224470.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1098,safar-website,arhaanb,N/A,N/A,https://api.github.com/repos/arhaanb/safar-website,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C13A:8AF9:72770F:ECA7C9:65224470.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1099,IBB.Api,AydinAdn,N/A,N/A,https://api.github.com/repos/AydinAdn/IBB.Api,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C140:4F4C:744273:EFED6F:65224471.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1100,KTX_Image_Classification,lotlouischoitslab,N/A,N/A,https://api.github.com/repos/lotlouischoitslab/KTX_Image_Classification,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1DC:309A:2E7B5F1:5ED6ED0:65224472.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1101,citybike-turku-android,iffa,N/A,N/A,https://api.github.com/repos/iffa/citybike-turku-android,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1A9:3819:1B0E4FE:37A316E:65224472.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1102,WindowsPhone.Treintijden,michielpost,N/A,N/A,https://api.github.com/repos/michielpost/WindowsPhone.Treintijden,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1F2:0FAE:199A344:34CF177:65224473.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1103,Computational_Transportation_Science,lotlouischoitslab,N/A,N/A,https://api.github.com/repos/lotlouischoitslab/Computational_Transportation_Science,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1EE:178A:2CBFBF7:5B9D6EF:65224473.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1104,juraclient,stklcode,N/A,N/A,https://api.github.com/repos/stklcode/juraclient,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C14D:309A:2E7B8FA:5ED74F5:65224474.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1105,public-transport-ui,derhuerst,N/A,N/A,https://api.github.com/repos/derhuerst/public-transport-ui,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C101:178A:2CBFDCD:5B9DAA5:65224475.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1106,dvb-departure-board,valentin-vogel,N/A,N/A,https://api.github.com/repos/valentin-vogel/dvb-departure-board,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C141:6611:6F6870:E679D7:65224475.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1107,merge-vbb-stations,derhuerst,N/A,N/A,https://api.github.com/repos/derhuerst/merge-vbb-stations,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C160:6EE6:702DC6:E7F761:65224476.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1108,db-stops-search,derhuerst,N/A,N/A,https://api.github.com/repos/derhuerst/db-stops-search,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C150:4678:1AEFEAB:3777B49:65224476.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1109,CustomizePublicTransportStop,bwr57,N/A,N/A,https://api.github.com/repos/bwr57/CustomizePublicTransportStop,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C124:5AB9:2C5DD83:5AE3D8D:652243AF.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1110,gtfs-to-leveldb,public-transport,N/A,N/A,https://api.github.com/repos/public-transport/gtfs-to-leveldb,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C111:4F4C:7449B4:EFFC52:65224477.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1111,build-cp-gtfs,juliuste,N/A,N/A,https://api.github.com/repos/juliuste/build-cp-gtfs,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1CF:1F34:1BC2956:390E58D:65224478.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1112,Root-Navigator,stefanjb-it,N/A,N/A,https://api.github.com/repos/stefanjb-it/Root-Navigator,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C16C:7B3E:796A84:FA0270:65224478.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1113,lepilote,augustin64,N/A,N/A,https://api.github.com/repos/augustin64/lepilote,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1FA:37E7:2D37746:5C98D15:65224479.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1114,vbb-pythonWrapper,Colum31,N/A,N/A,https://api.github.com/repos/Colum31/vbb-pythonWrapper,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1AF:6611:6F6C9B:E68284:65224479.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1115,fondefVizServer,SmartcitySantiagoChile,N/A,N/A,https://api.github.com/repos/SmartcitySantiagoChile/fondefVizServer,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C185:1F34:1BC2BF5:390EAFF:6522447A.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1116,dino,d3d9,N/A,N/A,https://api.github.com/repos/d3d9/dino,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1F5:7AEF:2DE7BC8:5DDF776:652243B3.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1117,NjMetro-Price,NN708,N/A,https://github.com/NN708/NjMetro-Price,https://api.github.com/repos/NN708/NjMetro-Price,自动获取南京地铁各站点之间价格（票价表） Get Nanjing Metro fare table,"# NjMetro-Price
获取南京地铁各站点之间票价

## 使用方法
1. 下载并安装 **[Python 3](https://www.python.org/downloads/)**；
2. 安装 Python Requests 插件：
```command
pip install requests
```
3. 下载并运行 `price.py`：
```command
python price.py
```
4. 等待程序运行结束，票价表将以 CSV 格式保存在 `njmetro_price.csv` 中。",3,3,1,0,public-transport,"[metro, nanjing, nanjing-metro, public-transport, public-transportation, subway, transit, transport, transportation]",00000
1118,extract-gtfs-pathways,derhuerst,N/A,N/A,https://api.github.com/repos/derhuerst/extract-gtfs-pathways,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C107:092A:728884:ECBEF9:6522447B.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1119,gtfs-rt-differential-to-full-dataset,derhuerst,N/A,N/A,https://api.github.com/repos/derhuerst/gtfs-rt-differential-to-full-dataset,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1F2:0FAE:199AE34:34D07EC:6522447B.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1120,Wroclive-server,LiarPrincess,N/A,N/A,https://api.github.com/repos/LiarPrincess/Wroclive-server,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C18D:4E78:71EC2D:EB7459:6522447C.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1121,mpyk,emkor,N/A,N/A,https://api.github.com/repos/emkor/mpyk,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C117:7B5B:741948:EF68F9:652243B3.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1122,vbb-station-operators,derhuerst,N/A,N/A,https://api.github.com/repos/derhuerst/vbb-station-operators,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C121:41B1:72ACB4:ED47C7:6522447C.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1123,publictransportnet,naumovvs,N/A,N/A,https://api.github.com/repos/naumovvs/publictransportnet,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C11C:87DB:3022217:624AA5A:6522447D.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1124,NextBusKit,shamanskyh,N/A,N/A,https://api.github.com/repos/shamanskyh/NextBusKit,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C127:784E:76FED7:F5AEB4:652243BF.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1125,onboard-api-discovery,hannsadrian,N/A,N/A,https://api.github.com/repos/hannsadrian/onboard-api-discovery,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C16E:3AA3:2DD1818:5DCB75D:6522447E.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1126,gtfs-realtime-inspector,vycius,N/A,N/A,https://api.github.com/repos/vycius/gtfs-realtime-inspector,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C113:73C7:73595D:EE2C17:6522447E.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1127,android-app-berlin,OpenMetroMaps,N/A,N/A,https://api.github.com/repos/OpenMetroMaps/android-app-berlin,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C16F:4E78:710C04:E9A702:652243BF.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1128,manniwatch,manniwatch,manniwatch,https://github.com/manniwatch/manniwatch,https://api.github.com/repos/manniwatch/manniwatch,Client/Server combo to display local public transport,"<!-- ⚠️ This README has been generated from the file(s) ""readme_blueprint.md"" ⚠️-->
[![-----------------------------------------------------](https://raw.githubusercontent.com/andreasbm/readme/master/assets/lines/water.png)](#manniwatch)

# ➤ ManniWatch
<p align=""center"">
		<a href=""https://github.com/manniwatch/manniwatch/actions?query=workflow%3ATest+branch%3Amaster""><img alt=""Test"" src=""https://github.com/manniwatch/manniwatch/workflows/Test/badge.svg?branch=master&event=push"" height=""20""/></a>
<a href=""https://codecov.io/gh/manniwatch/manniwatch/branch/master""><img alt=""codecov"" src=""https://codecov.io/gh/manniwatch/manniwatch/branch/master/graph/badge.svg"" height=""20""/></a>
<a href=""https://github.com/manniwatch/manniwatch/releases""><img alt=""GitHub release (latest SemVer)"" src=""https://img.shields.io/github/v/release/manniwatch/manniwatch?sort=semver"" height=""20""/></a>
<a href=""https://github.com/manniwatch/manniwatch/blob/master/LICENSE""><img alt=""GitHub license"" src=""https://img.shields.io/github/license/manniwatch/manniwatch"" height=""20""/></a>
<a href=""https://github.com/manniwatch/manniwatch""><img alt=""David"" src=""https://img.shields.io/david/dev/manniwatch/manniwatch"" height=""20""/></a>
<a href=""https://github.com/manniwatch/manniwatch/graphs/contributors""><img alt=""GitHub contributors"" src=""https://img.shields.io/github/contributors-anon/manniwatch/manniwatch"" height=""20""/></a>
	</p>


[![-----------------------------------------------------](https://raw.githubusercontent.com/andreasbm/readme/master/assets/lines/water.png)](#packages)

## ➤ Packages


| Name                                             | Description                                      | Version                                          |
|--------------------------------------------------|--------------------------------------------------|--------------------------------------------------|
| [@manniwatch/api-client](https://manniwatch.github.io/manniwatch/) | Node Client to consume the Api                   | <a href=""https://badge.fury.io/js/%40manniwatch%2Fapi-client""><img alt=""npm version"" src=""https://badge.fury.io/js/%40manniwatch%2Fapi-client.svg"" height=""20""/></a> |
| [@manniwatch/api-proxy-router](https://manniwatch.github.io/docs/api-proxy-router/index.html) | An express api router used to proxy requests to the upstream server | <a href=""https://badge.fury.io/js/%40manniwatch%2Fapi-proxy-router""><img alt=""npm version"" src=""https://badge.fury.io/js/%40manniwatch%2Fapi-proxy-router.svg"" height=""20""/></a> |
| [@manniwatch/api-proxy-server](https://manniwatch.github.io/manniwatch/) | Server Helper helper for TrapezeApi              | <a href=""https://badge.fury.io/js/%40manniwatch%2Fapi-proxy-server""><img alt=""npm version"" src=""https://badge.fury.io/js/%40manniwatch%2Fapi-proxy-server.svg"" height=""20""/></a> |
| [@manniwatch/api-types](https://github.com/manniwatch/manniwatch/tree/master/packages/api-types) | Api Types and helper for Trapeze Api             | <a href=""https://badge.fury.io/js/%40manniwatch%2Fapi-types""><img alt=""npm version"" src=""https://badge.fury.io/js/%40manniwatch%2Fapi-types.svg"" height=""20""/></a> |
| [@manniwatch/assets](https://manniwatch.github.io/manniwatch/) | Package holding shared assets for manniwatch     | <a href=""https://badge.fury.io/js/%40manniwatch%2Fassets""><img alt=""npm version"" src=""https://badge.fury.io/js/%40manniwatch%2Fassets.svg"" height=""20""/></a> |
| [@manniwatch/client-desktop](https://manniwatch.github.io/manniwatch/) | An electron app that wraps the manniwatch web app | <a href=""https://badge.fury.io/js/%40manniwatch%2Fclient-desktop""><img alt=""npm version"" src=""https://badge.fury.io/js/%40manniwatch%2Fclient-desktop.svg"" height=""20""/></a> |
| [@manniwatch/client-ng](https://github.com/manniwatch/manniwatch/tree/master/packages/client-types) | Angular Client for Manniwatch                    | <a href=""https://badge.fury.io/js/%40manniwatch%2Fclient-ng""><img alt=""npm version"" src=""https://badge.fury.io/js/%40manniwatch%2Fclient-ng.svg"" height=""20""/></a> |
| [@manniwatch/client-types](https://manniwatch.github.io/manniwatch/) | Api Types and helper for Client Api              | <a href=""https://badge.fury.io/js/%40manniwatch%2Fclient-types""><img alt=""npm version"" src=""https://badge.fury.io/js/%40manniwatch%2Fclient-types.svg"" height=""20""/></a> |
| [@manniwatch/pb-converter](https://manniwatch.github.io/manniwatch/) | Api Types and helper for Trapeze Api             | <a href=""https://badge.fury.io/js/%40manniwatch%2Fpb-converter""><img alt=""npm version"" src=""https://badge.fury.io/js/%40manniwatch%2Fpb-converter.svg"" height=""20""/></a> |
| [@manniwatch/pb-types](https://manniwatch.github.io/manniwatch/) | PB Types and helper for Trapeze Api              | <a href=""https://badge.fury.io/js/%40manniwatch%2Fpb-types""><img alt=""npm version"" src=""https://badge.fury.io/js/%40manniwatch%2Fpb-types.svg"" height=""20""/></a> |
| [@manniwatch/schemas](https://manniwatch.github.io/manniwatch/) | An express api router used to proxy requests to the upstream server | <a href=""https://badge.fury.io/js/%40manniwatch%2Fschemas""><img alt=""npm version"" src=""https://badge.fury.io/js/%40manniwatch%2Fschemas.svg"" height=""20""/></a> |
| [@manniwatch/vehicle-cache](https://manniwatch.github.io/manniwatch/) | Caching for vehicle locations                    | <a href=""https://badge.fury.io/js/%40manniwatch%2Fvehicle-cache""><img alt=""npm version"" src=""https://badge.fury.io/js/%40manniwatch%2Fvehicle-cache.svg"" height=""20""/></a> |
| [@manniwatch/vehicle-location-diff](https://manniwatch.github.io/manniwatch/) | Tool to calculate diff between vehicle location snapshots | <a href=""https://badge.fury.io/js/%40manniwatch%2Fvehicle-location-diff""><img alt=""npm version"" src=""https://badge.fury.io/js/%40manniwatch%2Fvehicle-location-diff.svg"" height=""20""/></a> |



[![-----------------------------------------------------](https://raw.githubusercontent.com/andreasbm/readme/master/assets/lines/water.png)](#build--test)

## ➤ Build & Test
Before you either do both run:

    npm install
    npx lerna bootstrap --no-ci
    npm run build

This project does use [lerna](https://github.com/lerna/lerna) so all common [commands](https://github.com/lerna/lerna/tree/master/commands) should work from the root directory!
Due to packages depending on each other a build is **required** first before running tests!

### Build & Test all packages

    npm run build
    npm run test

### Build & Test a specific package
    npx lerna run build --scope=@manniwatch/api-types
    npx lerna run test --scope=@manniwatch/api-types


[![-----------------------------------------------------](https://raw.githubusercontent.com/andreasbm/readme/master/assets/lines/water.png)](#docker)

## ➤ Docker

See [this repository](https://github.com/manniwatch/docker) for a Docker Container
",2,2,2,40,public-transport,"[public-transport, pwa, transportation]",00000
1129,ch_public_transport_distances_js,joelproko,N/A,N/A,https://api.github.com/repos/joelproko/ch_public_transport_distances_js,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C171:05EF:7058BD:E853AE:6522447F.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1130,merged-vbb-stations,derhuerst,N/A,N/A,https://api.github.com/repos/derhuerst/merged-vbb-stations,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1B6:1E3B:2FF0815:61F4417:6522447F.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1131,observe-hafas-client,public-transport,N/A,N/A,https://api.github.com/repos/public-transport/observe-hafas-client,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1F6:418F:2A8DFB2:57016AB:65224480.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1132,transit-info,avptp,N/A,N/A,https://api.github.com/repos/avptp/transit-info,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C182:1F34:1BC3254:390F81D:65224481.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1133,db-ice-localizer-speedometer,maehw,N/A,N/A,https://api.github.com/repos/maehw/db-ice-localizer-speedometer,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C18C:178A:2CC0F4F:5B9FE88:65224481.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1134,transport-ch-exporter,AnotherKamila,N/A,N/A,https://api.github.com/repos/AnotherKamila/transport-ch-exporter,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C12B:984A:77E063:F74280:65224482.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1135,infrastructure-data,roataway,N/A,N/A,https://api.github.com/repos/roataway/infrastructure-data,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1FC:0FAE:199B624:34D184C:65224482.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1136,hafas-find-stations,derhuerst,N/A,N/A,https://api.github.com/repos/derhuerst/hafas-find-stations,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C14E:6A74:1A4F8BD:36312C1:65224483.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1137,find-hafas-data-in-another-hafas,derhuerst,N/A,N/A,https://api.github.com/repos/derhuerst/find-hafas-data-in-another-hafas,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C11F:5F41:71404B:EA291C:65224484.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1138,KaunoAutobusai,Kauno-miestas,N/A,N/A,https://api.github.com/repos/Kauno-miestas/KaunoAutobusai,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C16E:3AA3:2DD1EDB:5DCC530:65224484.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1139,compute-db-station-weight,derhuerst,N/A,N/A,https://api.github.com/repos/derhuerst/compute-db-station-weight,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C16D:58D0:7921CC:F951E3:65224485.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1140,GTTTools,ornato-t,N/A,N/A,https://api.github.com/repos/ornato-t/GTTTools,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1A2:41B1:72B54A:ED5981:65224485.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1141,microtracker,nmz-z,N/A,N/A,https://api.github.com/repos/nmz-z/microtracker,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C114:7AEF:2DF687E:5DFDE68:65224486.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1142,db-flix-cities,juliuste,N/A,N/A,https://api.github.com/repos/juliuste/db-flix-cities,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1B3:2115:71DAC1:EB72AB:65224487.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1143,transjakartagtfs,akherlan,N/A,N/A,https://api.github.com/repos/akherlan/transjakartagtfs,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1C3:5831:2BD8BDA:59DB4B0:65224487.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1144,trainzzz,Abban-Fahim,N/A,N/A,https://api.github.com/repos/Abban-Fahim/trainzzz,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1FB:0C72:742474:EFEF93:65224488.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1145,transilienwatcher,u8slvn,N/A,N/A,https://api.github.com/repos/u8slvn/transilienwatcher,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C101:178A:2CC1875:5BA1150:65224489.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1146,Final-Year-Project,djibril-coulybaly,N/A,N/A,https://api.github.com/repos/djibril-coulybaly/Final-Year-Project,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C13D:1364:776ABF:F654EE:652243BA.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1147,public-transport-dataviz,skvrahul,N/A,N/A,https://api.github.com/repos/skvrahul/public-transport-dataviz,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1C7:1E3B:2FF11D8:61F583C:65224489.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1148,MMM-RNV,jalibu,N/A,N/A,https://api.github.com/repos/jalibu/MMM-RNV,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1BA:36DF:358BF80:6D2C4BF:6522448A.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1149,microtracker,nmz-z,N/A,N/A,https://api.github.com/repos/nmz-z/microtracker,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C114:7AEF:2DF687E:5DFDE68:65224486.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1150,GTTTools,ornato-t,N/A,N/A,https://api.github.com/repos/ornato-t/GTTTools,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C169:41B1:72B57D:ED5A03:65224486.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1151,prague-public-transport-connection-search,Davideck123,N/A,N/A,https://api.github.com/repos/Davideck123/prague-public-transport-connection-search,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C17C:418F:2A8EB77:5702E74:6522448A.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1152,Metronami,Dylankjy,N/A,N/A,https://api.github.com/repos/Dylankjy/Metronami,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1CC:6A74:1A500FF:36323E9:6522448B.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1153,metro-map,ANovokmet,N/A,N/A,https://api.github.com/repos/ANovokmet/metro-map,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C167:64D2:74BF5E:F0FDEB:6522448C.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1154,nyssvaaja,lehtoroni,N/A,N/A,https://api.github.com/repos/lehtoroni/nyssvaaja,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C17A:7B5B:74FF40:F142DF:6522448C.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1155,travigo,Travigo,N/A,N/A,https://api.github.com/repos/Travigo/travigo,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C118:0C72:7428A3:EFF853:6522448C.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1156,public-transport-dataviz,skvrahul,N/A,N/A,https://api.github.com/repos/skvrahul/public-transport-dataviz,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1C7:1E3B:2FF11D8:61F583C:65224489.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1157,MMM-RNV,jalibu,N/A,N/A,https://api.github.com/repos/jalibu/MMM-RNV,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1BA:36DF:358BF80:6D2C4BF:6522448A.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1158,vbb-fare-zones,derhuerst,N/A,N/A,https://api.github.com/repos/derhuerst/vbb-fare-zones,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1B3:2115:71DFB3:EB7CD6:6522448D.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1159,Punto-Rojo,pulkit-jasti,N/A,N/A,https://api.github.com/repos/pulkit-jasti/Punto-Rojo,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1A2:41B1:72BCCD:ED693E:6522448E.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1160,MMM-HVV,lucoel,N/A,N/A,https://api.github.com/repos/lucoel/MMM-HVV,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C11A:58D0:7929F4:F962E0:6522448E.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1161,HIWS,HarlonServer,N/A,N/A,https://api.github.com/repos/HarlonServer/HIWS,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C181:58D0:792A78:F963EA:6522448F.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1162,vbb-departure-hotline,juliuste,N/A,N/A,https://api.github.com/repos/juliuste/vbb-departure-hotline,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1A4:3F63:2EA6975:5F70D7D:6522448F.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1163,umsteigen.jetzt-frontend,juliuste,N/A,N/A,https://api.github.com/repos/juliuste/umsteigen.jetzt-frontend,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C117:7B5B:7502DF:F14A3E:65224490.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1164,tallink,juliuste,N/A,N/A,https://api.github.com/repos/juliuste/tallink,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1AF:6611:6F7FB8:E6AA5C:65224491.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1165,nextbike-map,krmax44,N/A,N/A,https://api.github.com/repos/krmax44/nextbike-map,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C129:092A:729CEC:ECE91C:65224491.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1166,fieldTrip,lucghe,N/A,N/A,https://api.github.com/repos/lucghe/fieldTrip,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C166:092A:729D6A:ECEA29:65224492.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1167,deutschebahn.py,o2ba,N/A,N/A,https://api.github.com/repos/o2ba/deutschebahn.py,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C195:0C72:742E93:F004A0:65224492.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1168,db-interchanges,juliuste,N/A,N/A,https://api.github.com/repos/juliuste/db-interchanges,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C14D:309A:2E7D7AD:5EDB412:65224490.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1169,osm-gtfs,kkris,N/A,N/A,https://api.github.com/repos/kkris/osm-gtfs,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C10C:64D2:74C492:F1088F:65224491.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1170,fares-service,stadtnavi,N/A,N/A,https://api.github.com/repos/stadtnavi/fares-service,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C10A:178A:2CC22B8:5BA2653:65224491.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1171,oepnvdresdenbot,kiliankoe,N/A,N/A,https://api.github.com/repos/kiliankoe/oepnvdresdenbot,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C11F:5F41:714CF0:EA4380:65224492.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1172,Metronom-REST-API,kevcodez,N/A,N/A,https://api.github.com/repos/kevcodez/Metronom-REST-API,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C157:3BF5:7502EA:F15A8F:652243C0.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1173,hafas-monitor-trips-server,derhuerst,N/A,N/A,https://api.github.com/repos/derhuerst/hafas-monitor-trips-server,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1EB:4F4C:74670B:F038CC:65224493.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1174,vbb-routing,derhuerst,N/A,N/A,https://api.github.com/repos/derhuerst/vbb-routing,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C186:87DB:3023A09:624DB98:65224494.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1175,irish-public-transport-app,Thomasbehan,N/A,N/A,https://api.github.com/repos/Thomasbehan/irish-public-transport-app,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1A1:4179:2E0F8E1:5E44156:65224494.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1176,legacy-app,ridebus-by,N/A,N/A,https://api.github.com/repos/ridebus-by/legacy-app,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C185:1F34:1BC4487:3911DF2:65224495.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1177,indulasch-frontend,kir-dev,N/A,N/A,https://api.github.com/repos/kir-dev/indulasch-frontend,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1E3:2CBC:79A141:FAB0E6:65224496.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1178,Rigify,hepnn,N/A,N/A,https://api.github.com/repos/hepnn/Rigify,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C182:1F34:1BC45CA:3912096:65224496.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1179,DINO2,d3d9,N/A,N/A,https://api.github.com/repos/d3d9/DINO2,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1DE:36DF:357B265:6D09DBA:652243C1.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1180,netmobiel-platform,SaxionSmartCities,N/A,N/A,https://api.github.com/repos/SaxionSmartCities/netmobiel-platform,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C18D:4E78:7209F9:EBB1BF:65224497.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1181,travel-price-map-rest,juliuste,N/A,N/A,https://api.github.com/repos/juliuste/travel-price-map-rest,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1C8:1364:785782:F83D20:65224498.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1182,eurolines-de,juliuste,N/A,N/A,https://api.github.com/repos/juliuste/eurolines-de,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1C5:2CBC:79A3B1:FAB5EE:65224498.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1183,meinfernbus-prices-radar,juliuste,N/A,N/A,https://api.github.com/repos/juliuste/meinfernbus-prices-radar,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C152:1F34:1BC483A:391258A:65224499.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1184,hafas-collect-departures-at,public-transport,N/A,N/A,https://api.github.com/repos/public-transport/hafas-collect-departures-at,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C16E:3AA3:2DD328A:5DCEE25:6522449A.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1185,GIS-Coursework,Hussein-Mahfouz,N/A,N/A,https://api.github.com/repos/Hussein-Mahfouz/GIS-Coursework,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1DA:178A:2CC2C23:5BA39D3:6522449A.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1186,greenvision-nec,geekysrm,N/A,N/A,https://api.github.com/repos/geekysrm/greenvision-nec,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1BA:36DF:358D679:6D2F3DA:6522449B.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1187,BusDemand,gapolli,N/A,N/A,https://api.github.com/repos/gapolli/BusDemand,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C11E:3BF5:75D549:F30CAE:6522449B.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1188,mycicero.js,Bavuett,N/A,N/A,https://api.github.com/repos/Bavuett/mycicero.js,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1FB:0C72:7361C6:EE5C3F:652243BD.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1189,Jakdojade,Dydek123,N/A,N/A,https://api.github.com/repos/Dydek123/Jakdojade,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1E8:607B:7B07F0:FD7705:6522449C.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1190,public-transport-find-optimal-ways,pasvistelik,N/A,N/A,https://api.github.com/repos/pasvistelik/public-transport-find-optimal-ways,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C199:4179:2E1014E:5E452C5:6522449D.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1191,POABus,rafaeelaudibert,N/A,https://github.com/rafaeelaudibert/POABus,https://api.github.com/repos/rafaeelaudibert/POABus,A bus route visualisation for Porto Alegre's public transportation system,"# :oncoming_bus: POA Bus

![Update Data](https://github.com/rafaeelaudibert/poabus/actions/workflows/update.yml/badge.svg)
![Deploy](https://github.com/rafaeelaudibert/poabus/actions/workflows/deploy.yml/badge.svg)

A bus route visualisation for Porto Alegre's public transportation system. You can access it on [https://poabus.rafaaudibert.dev](https://poabus.rafaaudibert.dev)

## :gear: How

### :cityscape: Porto Alegre's Public Transportation API

We run a Github Action weekly, which fetches the data from Porto Alegre's public transportation API and generates the [`/data`](./data) folder with both minified and human-readable files which will be used by our visualisation code to generate the routes and the stops of every available service in the city of Porto Alegre.

The API endpoints were found after poking around on the requests made by the [poatransporte](http://www.poatransporte.com.br/) website. They are roughly as follows:

- Every available stop: http://www.poatransporte.com.br/php/facades/process.php?a=tp&p=
  - You can restrict the coordinates from which you want to fetch the stops, but in our case we want to parse everything, so we just send an empty `p` query parameter
- Every available route: http://www.poatransporte.com.br/php/facades/process.php?a=nc&p=%&t=o
  - We can also fetch the data for the ""lotation"" buses (faster and more expensive buses which stop anywhere you want) if we change the `t` parameter (which stands for `type`) to `l`
- Specific data for a single route: http://www.poatransporte.com.br/php/facades/process.php?a=il&p=routeId
  - Keep in mind that you need to substitute `routeId` by the id you want to fetch the data
  - The raw route endpoint doesn't return the path the route takes, so we need to fetch this from a different endpoint

To understand it better, check out [the script which fetches and parses the data](./scripts/fetchData.js).

After we collect this data, we automatically commit it to the repository.

#### :no_entry_sign: Limitations

While developing this project, I was rate limited (by IP) because I requested the last mentioned endpoint too many times in a short period of time. I couldn't figure out the rate limit because the IP ban made the API hang and timeout instead of returning me a header (or an answer) with the reason why I was being rate limited. To solve this, I'm doing at most 5 requests per second, which seems to work just fine.

### :recycle: Data update

After the data is updated, we need to rebuild our code and send it to S3. This happens in another Github Action which listens for `master` pushes. It bundles the new JSON files onto the website, and updates the S3 bucket that is serving the requests.

### :computer: Code

The code is then pretty simple, courtesy of [Lim Chee Aun](https://github.com/cheeaun)'s [BusRouter SG](https://github.com/cheeaun/busrouter-sg) project (credited below). We just use the data we generated showing it using [MapBox](https://www.mapbox.com/) and [deck.gl](https://deck.gl/).

## :runner: Running locally

- You will need Node 16 to run this. I suggest you installing [nvm](https://github.com/nvm-sh/nvm) and running `nvm install 16` and then using the `nvm use` command inside this repository to set it up.
- Install the dependencies with `npm install`
- Create a `.env` file based on the `.env.example` file with your [MapBox API key](https://docs.mapbox.com/api/overview/).
- Run it with `npm start`

## :older_man: Credits

This is 95% based on the amazing [BusRouter SG](https://github.com/cheeaun/busrouter-sg) built by [Lim Chee Aun](https://github.com/cheeaun) with the data for Singapore's public transportation. I forked his visualisation work and just changed to parse the data from Porto Alegre's (awful) public transportation API.

## :mage_man: Author

- [RafaAudibert](https://www.rafaaudibert.dev)
",2,2,2,5,public-transport,"[actions, brasil, brazil, bus, javascript, mapboxgl, porto-alegre, public-transport, transportation, visualisation]",00000
1192,MMM-NMBS-Connection,Jan-Bart,N/A,N/A,https://api.github.com/repos/Jan-Bart/MMM-NMBS-Connection,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1D2:1E3B:2FF2513:61F8025:6522449D.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1193,db-elevators,juliuste,N/A,N/A,https://api.github.com/repos/juliuste/db-elevators,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1DE:36DF:358D9F1:6D2FAFD:6522449E.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1194,api,now8-org,N/A,N/A,https://api.github.com/repos/now8-org/api,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1FA:37E7:2D39ED6:5C9DED5:6522449E.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1195,Cracow-Public-Transport-App,slavkoslavkoo,N/A,N/A,https://api.github.com/repos/slavkoslavkoo/Cracow-Public-Transport-App,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1B3:2115:71ED49:EB995E:6522449F.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1196,kollektivt,dunielpls,N/A,N/A,https://api.github.com/repos/dunielpls/kollektivt,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C176:2319:6B4931:DE30FD:652244A0.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1197,zuugle-api,bahnzumberg,N/A,N/A,https://api.github.com/repos/bahnzumberg/zuugle-api,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C194:4E78:721317:EBC4B8:652244A0.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1198,web-client,OpenTransports,N/A,N/A,https://api.github.com/repos/OpenTransports/web-client,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1DA:178A:2CC32EF:5BA47D1:652244A1.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1199,kontrollanzeige-1,remolueoend,N/A,N/A,https://api.github.com/repos/remolueoend/kontrollanzeige-1,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1D6:984A:77FF08:F78211:652244A1.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1200,delay-prediction-service,stadtnavi,N/A,N/A,https://api.github.com/repos/stadtnavi/delay-prediction-service,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C10E:1E3B:2FF29AB:61F89AE:652244A2.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1201,public-transit,tnoff,N/A,N/A,https://api.github.com/repos/tnoff/public-transit,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C139:5934:2883315:534E14D:652244A1.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1202,ruby-metromobilite,lgatellier,N/A,N/A,https://api.github.com/repos/lgatellier/ruby-metromobilite,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1AE:607B:7B0CF0:FD8152:652244A2.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1203,db-train-numbers,juliuste,N/A,N/A,https://api.github.com/repos/juliuste/db-train-numbers,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C186:87DB:302480C:624F8AD:652244A2.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1204,VaBene,benediktrauch,N/A,N/A,https://api.github.com/repos/benediktrauch/VaBene,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C145:7B5B:7514BE:F16F3C:652244A3.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1205,dpp-cli,ondt,N/A,N/A,https://api.github.com/repos/ondt/dpp-cli,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C16C:7B3E:799472:FA58FA:652244A3.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1206,MMM-timetable-switzerland,eobermuhlner,N/A,N/A,https://api.github.com/repos/eobermuhlner/MMM-timetable-switzerland,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C140:4F4C:74776F:F05ADF:652244A4.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1207,vbb-gtfs.jannisr.de,derhuerst,N/A,N/A,https://api.github.com/repos/derhuerst/vbb-gtfs.jannisr.de,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1DF:309A:2E7EC22:5EDDE8C:652244A5.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1208,ztm-warsaw-timetable-parser,1116574,N/A,N/A,https://api.github.com/repos/1116574/ztm-warsaw-timetable-parser,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C117:7B5B:7516DD:F173B3:652244A5.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1209,vbb-change-positions-cli,juliuste,N/A,N/A,https://api.github.com/repos/juliuste/vbb-change-positions-cli,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C195:0C72:743F2F:F0272D:652244A6.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1210,zpcg,juliuste,N/A,N/A,https://api.github.com/repos/juliuste/zpcg,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1B2:418F:2A9068D:57065E2:652244A6.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1211,fpti-tests,juliuste,N/A,N/A,https://api.github.com/repos/juliuste/fpti-tests,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C15B:73C7:737E62:EE7911:652244A7.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1212,sl-php-sdk,trafiklab,N/A,N/A,https://api.github.com/repos/trafiklab/sl-php-sdk,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C159:7039:2792149:512E656:652243DA.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1213,oepnv-nuremberg,Public-Transport-Nuremberg,N/A,N/A,https://api.github.com/repos/Public-Transport-Nuremberg/oepnv-nuremberg,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C118:0C72:74409F:F02A28:652244A7.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1214,VRSMonitor,noelroehrig,N/A,N/A,https://api.github.com/repos/noelroehrig/VRSMonitor,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1AF:6611:6EE01A:E55DE6:652243C7.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1215,GTFSxPTN,dingdl,N/A,N/A,https://api.github.com/repos/dingdl/GTFSxPTN,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1EE:178A:2CC3ACE:5BA583D:652244A8.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1216,project-2023-choo-choo-data-darlings,com-480-data-visualization,N/A,N/A,https://api.github.com/repos/com-480-data-visualization/project-2023-choo-choo-data-darlings,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C188:12FA:5F4194:C43B0E:652243C7.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1217,validate-fptf,public-transport,N/A,N/A,https://api.github.com/repos/public-transport/validate-fptf,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C139:5934:288396E:534EE84:652244A9.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1218,Paris,OpenTransports,N/A,N/A,https://api.github.com/repos/OpenTransports/Paris,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1FF:29CE:332474F:686026D:652244A9.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1219,nsr2osm,NKAmapper,N/A,N/A,https://api.github.com/repos/NKAmapper/nsr2osm,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1AB:7AEF:2DF8AE2:5E025A3:652244AA.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1220,gtfs-linked-connections-server,derhuerst,N/A,N/A,https://api.github.com/repos/derhuerst/gtfs-linked-connections-server,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C172:2319:6B52F3:DE455E:652244AA.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1221,drgl-compare,nickubels,N/A,N/A,https://api.github.com/repos/nickubels/drgl-compare,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C125:7B3E:799B3E:FA6716:652244AB.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1222,mbta-stop-display,jprusik,N/A,N/A,https://api.github.com/repos/jprusik/mbta-stop-display,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C122:5934:287539C:5331371:652243C7.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1223,hafas-monitor-journeys,derhuerst,N/A,N/A,https://api.github.com/repos/derhuerst/hafas-monitor-journeys,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C13D:1364:7866A8:F85CB6:652244A8.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1224,vbb-line-colors,derhuerst,N/A,N/A,https://api.github.com/repos/derhuerst/vbb-line-colors,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1A1:4179:2E10CD2:5E46AB5:652244A8.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1225,colorize-transit-graph,juliuste,N/A,N/A,https://api.github.com/repos/juliuste/colorize-transit-graph,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C175:178A:2CC3BE1:5BA5A56:652244A9.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1226,Domoticz_scripts,zygios,N/A,N/A,https://api.github.com/repos/zygios/Domoticz_scripts,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C19D:46E9:776AAD:F64FE9:652244AA.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1227,lrtdown.ca,eruraindil,N/A,N/A,https://api.github.com/repos/eruraindil/lrtdown.ca,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1FC:0FAE:199DE2F:34D6B28:652244AA.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1228,Shuvi,ZweiDev,N/A,N/A,https://api.github.com/repos/ZweiDev/Shuvi,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C11D:7B5B:751C40:F17F03:652244AB.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1229,pendelstrecke,chrrel,N/A,N/A,https://api.github.com/repos/chrrel/pendelstrecke,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C14D:309A:2E7F297:5EDEBF0:652244AC.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1230,aptc,LeLunZ,N/A,N/A,https://api.github.com/repos/LeLunZ/aptc,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C111:4F4C:747F0B:F06ABA:652244AC.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1231,citytransportsystem,PapGergelyProjects,N/A,N/A,https://api.github.com/repos/PapGergelyProjects/citytransportsystem,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C16D:58D0:794450:F999E7:652244AD.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1232,viadf-web-react,kalinbas,N/A,N/A,https://api.github.com/repos/kalinbas/viadf-web-react,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C14F:6459:26784A1:4F0F8FE:652243CE.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1233,fptf-mode-emojis,public-transport,N/A,N/A,https://api.github.com/repos/public-transport/fptf-mode-emojis,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C185:1F34:1BC5A7D:3914BBF:652244AD.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1234,bustrack,podusowski,N/A,N/A,https://api.github.com/repos/podusowski/bustrack,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C18A:7AEF:2DF8FD7:5E02FD7:652244AE.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1235,DSD.SmartTemperatureTracing,JoseDavidSS,N/A,N/A,https://api.github.com/repos/JoseDavidSS/DSD.SmartTemperatureTracing,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C137:6A74:1A5226B:363693F:652244AE.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1236,2022-08-31_FinalAssignment,Chwiggy,N/A,N/A,https://api.github.com/repos/Chwiggy/2022-08-31_FinalAssignment,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C100:29CE:3324F46:68612D9:652244AF.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1237,commute.live,DarkMatterMatt,N/A,N/A,https://api.github.com/repos/DarkMatterMatt/commute.live,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1B2:418F:2A91108:5707B63:652244B0.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1238,kdypojedevlak,mormegil-cz,N/A,N/A,https://api.github.com/repos/mormegil-cz/kdypojedevlak,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C152:1F34:1BC5DC7:39152A0:652244B0.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1239,vbb-graph-computation-server,derhuerst,N/A,N/A,https://api.github.com/repos/derhuerst/vbb-graph-computation-server,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C141:6611:6F9737:E6DB5E:652244AD.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1240,railplanner.eu,dennisschroer,N/A,N/A,https://api.github.com/repos/dennisschroer/railplanner.eu,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C132:7B5B:751F90:F185CB:652244AE.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1241,Interface_PTVVisum-LinTim,FOR2083,N/A,N/A,https://api.github.com/repos/FOR2083/Interface_PTVVisum-LinTim,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C126:7646:296B939:54DCDA5:652242EF.'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1242,wlr-api,faulander,N/A,N/A,https://api.github.com/repos/faulander/wlr-api,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1E2:39DF:27998E5:5131B3B:652243D2.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1243,australia_gtfs_headway,healthy-liveable-cities,N/A,N/A,https://api.github.com/repos/healthy-liveable-cities/australia_gtfs_headway,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C150:4678:1AF3338:377E7F0:652244AE.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1244,webui,Travigo,N/A,N/A,https://api.github.com/repos/Travigo/webui,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C174:5831:2BDB26E:59E04EA:652244AF.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1245,deinbus,juliuste,N/A,N/A,https://api.github.com/repos/juliuste/deinbus,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1D1:6A74:1A52560:3636F48:652244B1.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1246,berlin-commute-footprint-cli,derhuerst,N/A,N/A,https://api.github.com/repos/derhuerst/berlin-commute-footprint-cli,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C15A:5934:288435D:535031D:652244B1.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1247,TramlineFive,angelinn,N/A,N/A,https://api.github.com/repos/angelinn/TramlineFive,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C100:29CE:33253B6:6861BF2:652244B2.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1248,are-vbb-hafas-stations-the-same,derhuerst,N/A,N/A,https://api.github.com/repos/derhuerst/are-vbb-hafas-stations-the-same,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C161:1299:A07D91:14B8F7A:652244B3.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1249,vbb-platform-patterns-cli,juliuste,N/A,N/A,https://api.github.com/repos/juliuste/vbb-platform-patterns-cli,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C127:784E:77EB0A:F797C6:652244B3.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1250,LeProchainBusANantes,Luuka,N/A,N/A,https://api.github.com/repos/Luuka/LeProchainBusANantes,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C157:3BF5:75ED13:F33DB7:652244B4.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1251,ptphp,tdmalone,N/A,N/A,https://api.github.com/repos/tdmalone/ptphp,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1AB:7AEF:2DF97D9:5E04046:652244B4.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1252,find-db-station-by-name,derhuerst,N/A,N/A,https://api.github.com/repos/derhuerst/find-db-station-by-name,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1CF:1F34:1BC6316:3915D96:652244B5.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1253,jstransit,filipok,N/A,N/A,https://api.github.com/repos/filipok/jstransit,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1EE:75D0:2653031:4EC0192:652243D3.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1254,record-hafas-data,derhuerst,N/A,N/A,https://api.github.com/repos/derhuerst/record-hafas-data,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C132:7B5B:752892:F19863:652244B6.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1255,hafas-monitor-departures-ws-server,derhuerst,N/A,N/A,https://api.github.com/repos/derhuerst/hafas-monitor-departures-ws-server,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C197:64D2:74EC27:F15A7F:652244B6.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1256,RadomGTFS,MKuranowski,N/A,N/A,https://api.github.com/repos/MKuranowski/RadomGTFS,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C17A:7B5B:7529F2:F19B3C:652244B7.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1257,PBADownloader,cesarkero,N/A,N/A,https://api.github.com/repos/cesarkero/PBADownloader,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C172:2319:6B61D1:DE6444:652244B8.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1258,Boletim-Economico-Regulatorio,dreagepar,N/A,N/A,https://api.github.com/repos/dreagepar/Boletim-Economico-Regulatorio,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C141:6611:6FA1ED:E6F1B7:652244B8.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1259,Disruptions,zdenda,N/A,N/A,https://api.github.com/repos/zdenda/Disruptions,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C151:1F34:1BC677E:3916699:652244B9.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1260,transitapp,AntoineAugusti,N/A,N/A,https://api.github.com/repos/AntoineAugusti/transitapp,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1C8:1364:787B8B:F887C2:652244B9.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1261,Aquius,timhowgego,N/A,N/A,https://api.github.com/repos/timhowgego/Aquius,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C157:3BF5:75F3B3:F34B5E:652244BA.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1262,HA-Nysse,warrior25,N/A,N/A,https://api.github.com/repos/warrior25/HA-Nysse,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C17F:29CE:33261D9:68638B7:652244BB.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1263,gtfs4j,OpenMetroMaps,N/A,N/A,https://api.github.com/repos/OpenMetroMaps/gtfs4j,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C18E:3996:2637B2D:4E71509:652243C9.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1264,public-transport-client-react-app,pasvistelik,N/A,N/A,https://api.github.com/repos/pasvistelik/public-transport-client-react-app,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1DA:178A:2CC5728:5BA924A:652244BB.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1265,OST,coffeemakr,N/A,N/A,https://api.github.com/repos/coffeemakr/OST,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C12A:784E:77F3B6:F7A9B7:652244BC.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1266,vbb-get-off-bot,derhuerst,N/A,N/A,https://api.github.com/repos/derhuerst/vbb-get-off-bot,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C140:4F4C:7492B5:F09319:652244BD.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1267,PyBuses,David-Lor,N/A,N/A,https://api.github.com/repos/David-Lor/PyBuses,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1EB:75D0:26525C4:4EBECB2:652243CA.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1268,Project-Unofficial-OASA-Telematics-API-Client,DimitriosKaltzidis,N/A,N/A,https://api.github.com/repos/DimitriosKaltzidis/Project-Unofficial-OASA-Telematics-API-Client,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C184:5119:259F9E7:4D56AA1:652243C9.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1269,tram-stop-display,sjaks,N/A,N/A,https://api.github.com/repos/sjaks/tram-stop-display,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1EF:7B5B:75308C:F1A8DA:652244BD.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1270,generate-gtfs-flex,derhuerst,N/A,N/A,https://api.github.com/repos/derhuerst/generate-gtfs-flex,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C10E:1E3B:2FF4AC2:61FCDC0:652244BE.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1271,cojedzie,cojedzie,N/A,N/A,https://api.github.com/repos/cojedzie/cojedzie,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C19B:0C3C:77800B:F69997:652244BE.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1272,resrobot-php-sdk,trafiklab,N/A,N/A,https://api.github.com/repos/trafiklab/resrobot-php-sdk,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1B2:418F:2A9236C:570A12B:652244BF.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1273,aio-overpass,timwie,N/A,N/A,https://api.github.com/repos/timwie/aio-overpass,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C109:8AF9:72CFC9:ED5EBF:652244BF.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1274,grodno-transport-gps-positions-scraper,pasvistelik,N/A,N/A,https://api.github.com/repos/pasvistelik/grodno-transport-gps-positions-scraper,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C136:87DB:3026BFC:625428F:652244C0.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1275,ouibus,juliuste,N/A,N/A,https://api.github.com/repos/juliuste/ouibus,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1A6:4D66:6E6A22:E48FE3:652244C1.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1276,JungleBot,Jungle-Bus,N/A,N/A,https://api.github.com/repos/Jungle-Bus/JungleBot,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C154:73C7:739A30:EEB283:652244C1.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1277,db-prices-rest,juliuste,N/A,N/A,https://api.github.com/repos/juliuste/db-prices-rest,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1E2:5A27:73D071:EF3CDD:652244C2.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1278,BusTracker,alexanderwasey,N/A,N/A,https://api.github.com/repos/alexanderwasey/BusTracker,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C17B:29CE:3326D65:686502F:652244C2.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1279,gtfs-rt-bindings,derhuerst,N/A,N/A,https://api.github.com/repos/derhuerst/gtfs-rt-bindings,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C10B:0E7B:1A54113:363BC80:652244C3.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1280,project-2023-the-vizards,com-480-data-visualization,N/A,N/A,https://api.github.com/repos/com-480-data-visualization/project-2023-the-vizards,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1D3:7039:27911DD:512C6A2:652243CB.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1281,mdv-lines,juliuste,N/A,N/A,https://api.github.com/repos/juliuste/mdv-lines,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1C5:2CBC:79CCEC:FB0B75:652244C4.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1282,android-colectilog,sergiocarp10,N/A,N/A,https://api.github.com/repos/sergiocarp10/android-colectilog,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C14C:2319:6B6F0D:DE7F7B:652244C4.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1283,vbb-web,derhuerst,N/A,N/A,https://api.github.com/repos/derhuerst/vbb-web,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C140:4F4C:749BC5:F0A5E6:652244C5.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1284,public-transport-api-server,pasvistelik,N/A,N/A,https://api.github.com/repos/pasvistelik/public-transport-api-server,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1B6:1E3B:2FF53A2:61FDFE9:652244C5.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1285,PublicTransportInformation,hannsadrian,N/A,N/A,https://api.github.com/repos/hannsadrian/PublicTransportInformation,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C11A:58D0:795DD5:F9CE90:652244C6.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1286,HSLproxy,dronir,N/A,N/A,https://api.github.com/repos/dronir/HSLproxy,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1DF:309A:2E81495:5EE31A2:652244C7.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1287,ThaneMunicipalTransportUndertakingData,DevanshuSawant,N/A,N/A,https://api.github.com/repos/DevanshuSawant/ThaneMunicipalTransportUndertakingData,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1AB:7AEF:2DFAD62:5E06CBA:652244C7.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1288,Vit-horaires,ecnivtwelve,N/A,N/A,https://api.github.com/repos/ecnivtwelve/Vit-horaires,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C181:58D0:795FDC:F9D2AD:652244C8.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1289,GTTTools-core,ornato-t,N/A,N/A,https://api.github.com/repos/ornato-t/GTTTools-core,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C10B:0E7B:1A546A7:363C80E:652244C9.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1290,osurs,maptic,N/A,N/A,https://api.github.com/repos/maptic/osurs,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1CF:1F34:1BC77C2:3918855:652244CA.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1291,avganar,felwal,N/A,N/A,https://api.github.com/repos/felwal/avganar,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C10F:0E7B:1A547CB:363CA72:652244CA.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1292,zhv-de,juliuste,N/A,N/A,https://api.github.com/repos/juliuste/zhv-de,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1C7:1E3B:2FF5971:61FEBE3:652244CB.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1293,Jibril-Documentation,ZweiDev,N/A,N/A,https://api.github.com/repos/ZweiDev/Jibril-Documentation,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C114:7AEF:2DFB15E:5E074E2:652244CC.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1294,db-ice-wagenreihung-stream,juliuste,N/A,N/A,https://api.github.com/repos/juliuste/db-ice-wagenreihung-stream,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C199:4179:2E134BF:5E4BD22:652244CC.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1295,map-matcher-osrm-backend,roataway,N/A,N/A,https://api.github.com/repos/roataway/map-matcher-osrm-backend,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C157:3BF5:76061B:F3715F:652244CD.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1296,robust-route-planner,karimassi,N/A,N/A,https://api.github.com/repos/karimassi/robust-route-planner,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1E5:2CBC:79D5AB:FB1DA1:652244CE.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1297,node-wili,idleberg,N/A,N/A,https://api.github.com/repos/idleberg/node-wili,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1E2:5A27:73DC19:EF54EE:652244CE.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1298,AbfahrtsTV,kiliankoe,N/A,N/A,https://api.github.com/repos/kiliankoe/AbfahrtsTV,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1EA:3BF5:7607D2:F374D7:652244CF.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1299,Dabendorf-Traincoloureur,Dabendorf,N/A,N/A,https://api.github.com/repos/Dabendorf/Dabendorf-Traincoloureur,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1DA:178A:2CC6FF6:5BAC52A:652244CF.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1300,dvbetter,benjamin-hempel,N/A,N/A,https://api.github.com/repos/benjamin-hempel/dvbetter,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C15F:784E:780668:F7D070:652244D0.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1301,public-transport-de-openai-plugin,skorfmann,N/A,N/A,https://api.github.com/repos/skorfmann/public-transport-de-openai-plugin,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C15A:5934:288625B:535435F:652244D1.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1302,Wroclive-client,LiarPrincess,N/A,N/A,https://api.github.com/repos/LiarPrincess/Wroclive-client,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1A4:3F63:2EAB36B:5F7A60F:652244D1.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1303,auvasa-scraper,luisddm,N/A,N/A,https://api.github.com/repos/luisddm/auvasa-scraper,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C141:049C:27299CC:50656E1:652244D2.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1304,parse-vbb-station-name,derhuerst,N/A,N/A,https://api.github.com/repos/derhuerst/parse-vbb-station-name,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C13E:2B71:2788B37:511F6A1:652244D3.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1305,Helsinki,OpenTransports,N/A,N/A,https://api.github.com/repos/OpenTransports/Helsinki,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1DA:629D:45B8880:8D793CF:652244D3.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1306,exploreVelib,dgaitsgo,N/A,N/A,https://api.github.com/repos/dgaitsgo/exploreVelib,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1C4:9D23:2706BD4:5019E6D:652244D4.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1307,fpti-util,juliuste,N/A,N/A,https://api.github.com/repos/juliuste/fpti-util,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1E9:1E61:28DEA32:53B1CEC:652244D4.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1308,mvg_schedule_crawl,leftshift,N/A,N/A,https://api.github.com/repos/leftshift/mvg_schedule_crawl,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C180:1B08:2829979:52495AC:652244D5.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1309,ResChacoGTFS,Undigon,N/A,N/A,https://api.github.com/repos/Undigon/ResChacoGTFS,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1B6:7039:27A11B7:514D725:652244D5.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1310,tokenize-insa-station-name,derhuerst,N/A,N/A,https://api.github.com/repos/derhuerst/tokenize-insa-station-name,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1CE:8A0D:2849AE3:52A4ABF:652244D6.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1311,bus-slowdown,ansoncfit,N/A,N/A,https://api.github.com/repos/ansoncfit/bus-slowdown,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C116:7D9C:2B735DF:58E7795:652244D7.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1312,TrapezeApiClientNode,donmahallem,N/A,N/A,https://api.github.com/repos/donmahallem/TrapezeApiClientNode,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1AD:3D80:2739C0F:507C778:652244D7.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1313,rmts,unozerian,N/A,N/A,https://api.github.com/repos/unozerian/rmts,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1E8:603C:28A8DE1:535212C:652244D8.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1314,normalize-vbb-station-name-for-search,derhuerst,N/A,N/A,https://api.github.com/repos/derhuerst/normalize-vbb-station-name-for-search,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C133:4AAE:279765B:5143199:652244D8.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1315,agent-based-bus-line,TransportLab,N/A,N/A,https://api.github.com/repos/TransportLab/agent-based-bus-line,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C131:638B:27A5392:514BB7B:652244D9.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1316,Beijing-Bus-Network,yipeizhao,N/A,N/A,https://api.github.com/repos/yipeizhao/Beijing-Bus-Network,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1FB:4A15:2926FB3:5451D71:652244DA.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1317,nova-api-php,orca-services,N/A,N/A,https://api.github.com/repos/orca-services/nova-api-php,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C15A:7E90:26DBCFC:4FADBB9:652243E1.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1318,Bahrain-Bus-Optimization,unnamed-catalyst,N/A,N/A,https://api.github.com/repos/unnamed-catalyst/Bahrain-Bus-Optimization,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C121:7CD5:2A3C420:5687D47:652244DA.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1319,chalobest.github.io,chalobest,N/A,N/A,https://api.github.com/repos/chalobest/chalobest.github.io,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C188:12FA:60459E:C6539D:652244DB.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1320,brtbenchmark,pabloguarda,N/A,N/A,https://api.github.com/repos/pabloguarda/brtbenchmark,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C11D:049C:272A2FF:50669EB:652244DB.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1321,EPTCScrapper,betoharres,N/A,N/A,https://api.github.com/repos/betoharres/EPTCScrapper,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1F0:565A:26C5D41:4F9B7C8:652243FD.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1322,KV1-route-shapes,nickubels,N/A,N/A,https://api.github.com/repos/nickubels/KV1-route-shapes,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C13D:1D92:2609BD1:4E1CC54:652244D3.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1323,identify-bvg-shuttle-stops,derhuerst,N/A,N/A,https://api.github.com/repos/derhuerst/identify-bvg-shuttle-stops,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C176:1E61:28DE740:53B16D0:652244D2.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1324,db-hafas-stations-autocomplete,derhuerst,N/A,N/A,https://api.github.com/repos/derhuerst/db-hafas-stations-autocomplete,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C14F:6459:2686692:4F2CDFA:652244D2.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1325,tk_test,atomic0107,N/A,N/A,https://api.github.com/repos/atomic0107/tk_test,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C115:8A0D:2849887:52A45CD:652244D4.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1326,jackpick,squishykid,N/A,N/A,https://api.github.com/repos/squishykid/jackpick,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C191:75D0:26622DB:4EDF7C1:652244D4.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1327,rideal-mobile,rideal-startup,N/A,N/A,https://api.github.com/repos/rideal-startup/rideal-mobile,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C18F:7646:298A08D:551BBD4:652244D5.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1328,db-interchanges-rest,juliuste,N/A,N/A,https://api.github.com/repos/juliuste/db-interchanges-rest,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C186:638B:27A4F2F:514B285:652244D5.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1329,rmts,unozerian,N/A,N/A,https://api.github.com/repos/unozerian/rmts,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1E8:603C:28A8DE1:535212C:652244D8.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1330,Beijing-Bus-Network,yipeizhao,N/A,N/A,https://api.github.com/repos/yipeizhao/Beijing-Bus-Network,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1FB:4A15:2926FB3:5451D71:652244DA.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1331,agent-based-bus-line,TransportLab,N/A,N/A,https://api.github.com/repos/TransportLab/agent-based-bus-line,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C131:638B:27A5392:514BB7B:652244D9.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1332,normalize-vbb-station-name-for-search,derhuerst,N/A,N/A,https://api.github.com/repos/derhuerst/normalize-vbb-station-name-for-search,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C133:4AAE:279765B:5143199:652244D8.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1333,Bahrain-Bus-Optimization,unnamed-catalyst,N/A,N/A,https://api.github.com/repos/unnamed-catalyst/Bahrain-Bus-Optimization,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C121:7CD5:2A3C420:5687D47:652244DA.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1334,nova-api-php,orca-services,N/A,N/A,https://api.github.com/repos/orca-services/nova-api-php,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C15A:7E90:26DBCFC:4FADBB9:652243E1.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1335,brtbenchmark,pabloguarda,N/A,N/A,https://api.github.com/repos/pabloguarda/brtbenchmark,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C11D:049C:272A2FF:50669EB:652244DB.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1336,chalobest.github.io,chalobest,N/A,N/A,https://api.github.com/repos/chalobest/chalobest.github.io,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C188:12FA:60459E:C6539D:652244DB.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1337,vbb-departures,derhuerst,N/A,N/A,https://api.github.com/repos/derhuerst/vbb-departures,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C193:646E:272375C:5050656:652244DB.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1338,nettbuss-stations,derhuerst,N/A,N/A,https://api.github.com/repos/derhuerst/nettbuss-stations,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C164:58F5:25EC0D8:4DE1CF4:652244DC.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1339,transilien-next-departures,romainmoreau,N/A,N/A,https://api.github.com/repos/romainmoreau/transilien-next-departures,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C180:1B08:281AED2:522B0CA:652243DC.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1340,fetch-db-operating-status,derhuerst,N/A,N/A,https://api.github.com/repos/derhuerst/fetch-db-operating-status,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1DD:04F2:27490AB:5099BFF:652244DD.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1341,download-transxchange-data,aclong,N/A,N/A,https://api.github.com/repos/aclong/download-transxchange-data,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C194:57A8:2838AEE:527A6DF:652244DD.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1342,NahverkehrRheinRuhr,BjoernKW,N/A,N/A,https://api.github.com/repos/BjoernKW/NahverkehrRheinRuhr,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1CC:39DF:27AB1FE:5155E75:652244DE.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1343,gtfs-2-schedules,TPM-Resilience-Lab,N/A,N/A,https://api.github.com/repos/TPM-Resilience-Lab/gtfs-2-schedules,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C169:99FD:2510A11:4C44BC8:652244DE.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1344,db-wagenreihung-php,MrKrisKrisu,N/A,N/A,https://api.github.com/repos/MrKrisKrisu/db-wagenreihung-php,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1E2:39DF:27AB2F5:515608B:652244DF.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1345,RAPTORPython,PatrickSteil,N/A,N/A,https://api.github.com/repos/PatrickSteil/RAPTORPython,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1BC:4AEE:288784F:5316233:652244E0.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1346,lametric-foli,RauliL,N/A,N/A,https://api.github.com/repos/RauliL/lametric-foli,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C195:646E:2723BDB:5050FB2:652244E0.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1347,db-main-station-of,derhuerst,N/A,N/A,https://api.github.com/repos/derhuerst/db-main-station-of,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C157:6AF3:28C9E4A:5399D80:652244E1.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1348,rosariocomollegoios,joacosnchz,N/A,N/A,https://api.github.com/repos/joacosnchz/rosariocomollegoios,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C121:7CD5:2A3CAEE:5688B6B:652244E1.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1349,hafas-osm-line-colours,juliuste,N/A,N/A,https://api.github.com/repos/juliuste/hafas-osm-line-colours,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C126:7646:298ACCB:551D55D:652244E2.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1350,pyASEAG,RobinMeis,N/A,N/A,https://api.github.com/repos/RobinMeis/pyASEAG,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C154:27B4:257DD1C:4D110DF:652244E3.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1351,mapping-Chicago-tickets-permits,pengwei715,N/A,N/A,https://api.github.com/repos/pengwei715/mapping-Chicago-tickets-permits,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C14A:5BDF:2770AFA:50FAC23:652244E3.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1352,fetch-commute-from-hafas,derhuerst,N/A,N/A,https://api.github.com/repos/derhuerst/fetch-commute-from-hafas,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1B3:7646:298AE65:551D8C4:652244E4.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1353,vut-ija-project,dp9898cz,N/A,N/A,https://api.github.com/repos/dp9898cz/vut-ija-project,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1BB:16F7:26CDDAE:4FA21AC:652244E4.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1354,SL_trip_planner,elisakaisa,N/A,N/A,https://api.github.com/repos/elisakaisa/SL_trip_planner,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C13D:1D92:260ABF6:4E1EDD8:652244E5.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1355,Vejcobus-statistics,Michal-Martinek,N/A,N/A,https://api.github.com/repos/Michal-Martinek/Vejcobus-statistics,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C12F:78AC:280E69F:522F51D:652244E6.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1356,generate-vbb-gtfs,derhuerst,N/A,N/A,https://api.github.com/repos/derhuerst/generate-vbb-gtfs,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C18B:78AC:280E72C:522F646:652244E6.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1357,ztm_warszawa,pgrn,N/A,N/A,https://api.github.com/repos/pgrn/ztm_warszawa,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1A9:6459:26796FA:4F11F22:652243E2.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1358,sncf-or-db-rest,derhuerst,N/A,N/A,https://api.github.com/repos/derhuerst/sncf-or-db-rest,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C105:0E65:2679648:4EFC948:652244E7.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1359,vbb-stations-t9,juliuste,N/A,N/A,https://api.github.com/repos/juliuste/vbb-stations-t9,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C19B:4A15:2927D46:5453979:652244E7.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1360,UW.Olivos-Roche,moonline,N/A,https://github.com/moonline/UW.Olivos-Roche,https://api.github.com/repos/moonline/UW.Olivos-Roche,Paper: Transportation Choices for People with Transportation Disadvantages in Olivos Roche,"# UW.Olivos-Roche

Transportation Choices for People with Transportation Disadvantages in Olivos Roche

<a rel=""license"" href=""http://creativecommons.org/licenses/by-sa/4.0/""><img alt=""Creative Commons License"" style=""border-width:0"" src=""https://i.creativecommons.org/l/by-sa/4.0/88x31.png"" /></a><br />This work is licensed under a <a rel=""license"" href=""http://creativecommons.org/licenses/by-sa/4.0/"">Creative Commons Attribution-ShareAlike 4.0 International License</a>.


# Paper

* Source (reStructuredText): [Paper.rst](./Paper.rst)
* Paper & Presentation (PDF): [Releases](https://github.com/moonline/UW.Olivos-Roche/releases)


# Paper Summary

A look from transportation perspective at Olivos Roche, part of Olivos, a suburb in greater Buenos Aires: https://www.openstreetmap.org/relation/1270158

Olivos Roche has a size of almost 90 blocks and around 10'000 inhabitants. It counts with a railway line, a BRT line, express bus lines and several local bus lines:

http://openptmap.org/?zoom=14&lat=-34.52119&lon=-58.48788&layers=B0000TFT 
https://www.openstreetmap.org/relation/1270158#map=14/-34.5185/-58.5111&layers=T

The paper focuses on the following transportation modes for non-drivers:

* Transit
    * Physical access to transit (infrastructure and vehicle conditions)
    * Monetary access (fares)
    * Transit connections
    * Reliability
* Walking
    * Walking without items
    * Walking carrying items or children
* Cycling
* Micro transit
    * Scooter availability
* Taxi/Uber



## Compile

### Install dependencies

Rst2Pdf is used to compile the reStructuredText document to PDF, and exiftool is needed to add PDF meta data.

```bash
sudo apt-get install rst2pdf exiftool
```

### Build

1. run `build.sh`
2. The output file will be generate in the same directory (Paper.pdf).
",0,0,2,0,public-transport,"[paper, public-transport, restructuredtext, transportation]",00000
1361,detourfactor,antonindanalet,N/A,N/A,https://api.github.com/repos/antonindanalet/detourfactor,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1F7:7DF2:26D9EA6:4FB114D:652244E8.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1362,atrasos-api,PhentomPT,N/A,N/A,https://api.github.com/repos/PhentomPT/atrasos-api,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C17D:629D:45BB575:8D7EF41:652244E9.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1363,polyHack2021_SBB,RiesBen,N/A,N/A,https://api.github.com/repos/RiesBen/polyHack2021_SBB,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C13C:27B4:257E349:4D11DBA:652244E9.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1364,t-mobilitat,privacywatch,N/A,N/A,https://api.github.com/repos/privacywatch/t-mobilitat,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1BE:78AC:280EB5E:522FEF0:652244EA.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1365,CVAG-Helper,thealpa,N/A,N/A,https://api.github.com/repos/thealpa/CVAG-Helper,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C121:7CD5:2A3D3CE:5689DC4:652244EA.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1366,DVBmobil_bot,maxkleinhenz,N/A,N/A,https://api.github.com/repos/maxkleinhenz/DVBmobil_bot,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C16A:18FC:274EE6B:50A4F90:652244EB.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1367,bus_timetable,Acollie,N/A,N/A,https://api.github.com/repos/Acollie/bus_timetable,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C195:646E:27247DB:505289D:652244EC.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1368,UlasimdaRahatlik,CanDuru4,N/A,N/A,https://api.github.com/repos/CanDuru4/UlasimdaRahatlik,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1EF:679F:2ADEDB7:57ABDB6:652244ED.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1369,wlm-frontend,spectrachrome,N/A,N/A,https://api.github.com/repos/spectrachrome/wlm-frontend,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C141:049C:272B4BF:5068EB5:652244ED.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1370,eurolines-de-rest,juliuste,N/A,N/A,https://api.github.com/repos/juliuste/eurolines-de-rest,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C16A:18FC:274F0F6:50A54E8:652244EE.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1371,is-uic-location-code,juliuste,N/A,N/A,https://api.github.com/repos/juliuste/is-uic-location-code,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C137:629D:45BC353:8D80B38:652244EF.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1372,seat61.com-map,Cinezaster,N/A,N/A,https://api.github.com/repos/Cinezaster/seat61.com-map,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C132:629D:45BC535:8D80F22:652244EF.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1373,linkki-infoscreen,tonialho,N/A,N/A,https://api.github.com/repos/tonialho/linkki-infoscreen,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1DA:629D:4597D5A:8D36F1F:652243EB.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1374,gtfsmerge,now8-org,N/A,N/A,https://api.github.com/repos/now8-org/gtfsmerge,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C12F:78AC:280F26A:5230D83:652244F0.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1375,osmcz-public-transport,kudlav,N/A,N/A,https://api.github.com/repos/kudlav/osmcz-public-transport,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C184:5119:25AF893:4D77AD6:652244F1.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1376,bridge-yandex,roataway,N/A,N/A,https://api.github.com/repos/roataway/bridge-yandex,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1E3:12FA:605AC1:C67FB1:652244F1.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1377,vbb-graph,derhuerst,N/A,N/A,https://api.github.com/repos/derhuerst/vbb-graph,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C159:7039:27A2BF6:5150D04:652244F2.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1378,rnv-api,Krymonota,N/A,N/A,https://api.github.com/repos/Krymonota/rnv-api,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1B7:049C:271A3E8:5045B0D:652243DE.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1379,public-transport-initialize-data,pasvistelik,N/A,N/A,https://api.github.com/repos/pasvistelik/public-transport-initialize-data,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1F4:6EFD:2565FBA:4CE67E1:652244F3.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1380,ecolines,juliuste,N/A,N/A,https://api.github.com/repos/juliuste/ecolines,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1E1:638B:27A7565:5150124:652244F3.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1381,vbb-line-variant-score,derhuerst,N/A,N/A,https://api.github.com/repos/derhuerst/vbb-line-variant-score,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C168:39DF:27AC7DD:5158BCB:652244F4.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1382,MMM-Bubi,balassy,N/A,N/A,https://api.github.com/repos/balassy/MMM-Bubi,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C193:646E:272516E:5053C68:652244F5.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1383,Stib-Iot,kevinrigot,N/A,N/A,https://api.github.com/repos/kevinrigot/Stib-Iot,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C104:16F7:26CEC60:4FA4039:652244F5.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1384,db-hafas-rpc-server,derhuerst,N/A,N/A,https://api.github.com/repos/derhuerst/db-hafas-rpc-server,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C151:7D9C:2B75613:58EBA4A:652244F6.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1385,yatta,thomasedoff,N/A,N/A,https://api.github.com/repos/thomasedoff/yatta,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1EC:6459:26886AA:4F310C1:652244F6.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1386,cologne-public-transport-stations,mobil-koeln,N/A,N/A,https://api.github.com/repos/mobil-koeln/cologne-public-transport-stations,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1D0:78AC:280F9DF:5231CD3:652244F7.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1387,idos-dashboard,chinese-soup,N/A,N/A,https://api.github.com/repos/chinese-soup/idos-dashboard,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1BC:4AEE:2889C77:531AC04:652244F7.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1388,live-gomedia-position,derhuerst,N/A,N/A,https://api.github.com/repos/derhuerst/live-gomedia-position,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C178:75D0:2664756:4EE4362:652244F8.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1389,tren.my-data,ngbeslhang,N/A,N/A,https://api.github.com/repos/ngbeslhang/tren.my-data,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C14A:5BDF:277255D:50FE281:652244F9.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1390,PassengersOnLineTransportationInSelectedGermanStates,stevensolleder,N/A,N/A,https://api.github.com/repos/stevensolleder/PassengersOnLineTransportationInSelectedGermanStates,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C12E:7646:298C5ED:552096D:652244F9.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1391,kotlin-hafas-toolchain,Burnett01,N/A,N/A,https://api.github.com/repos/Burnett01/kotlin-hafas-toolchain,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1CD:6AF3:28CB9AF:539D616:652244FA.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1392,taival,tpikonen,N/A,N/A,https://api.github.com/repos/tpikonen/taival,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1B5:7E90:26EEA57:4FD4927:652244FA.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1393,public-transport-live-display,kononowicz24,N/A,N/A,https://api.github.com/repos/kononowicz24/public-transport-live-display,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C15D:0A36:2635DA6:4E7E8A6:652244FB.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1394,transit-evaluator,scenicsystems,N/A,N/A,https://api.github.com/repos/scenicsystems/transit-evaluator,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C182:4AAE:2799792:5147673:652244FB.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1395,gdak,adrianiskander,N/A,N/A,https://api.github.com/repos/adrianiskander/gdak,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1CC:39DF:27ACFF3:5159CB7:652244FC.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1396,Network-science-applied-to-transport-network,orlandombaa,N/A,N/A,https://api.github.com/repos/orlandombaa/Network-science-applied-to-transport-network,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C158:3D80:273C0FA:508140D:652244FD.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1397,get_jakdojade,Behoston,N/A,N/A,https://api.github.com/repos/Behoston/get_jakdojade,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C183:9CF4:283186C:526319F:652244FD.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1398,Traveler-Archived,Netfloex,N/A,N/A,https://api.github.com/repos/Netfloex/Traveler-Archived,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C141:049C:272C846:506B703:652244FE.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1399,public-transport-client,pasvistelik,N/A,N/A,https://api.github.com/repos/pasvistelik/public-transport-client,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1CA:9CF4:28319FE:52634CD:652244FE.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1400,stopServer,MarcoFujitsu,N/A,N/A,https://api.github.com/repos/MarcoFujitsu/stopServer,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C125:6EFD:2566A20:4CE7DA0:652244FF.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1401,PublicTransportGraph,sanjamijovic,N/A,N/A,https://api.github.com/repos/sanjamijovic/PublicTransportGraph,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C13E:2B71:278B857:512540A:65224500.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1402,Project-NMBS,Fishezzz,N/A,N/A,https://api.github.com/repos/Fishezzz/Project-NMBS,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C130:7039:27A390B:515282A:65224500.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1403,bvg-wifi-recording-rest,juliuste,N/A,N/A,https://api.github.com/repos/juliuste/bvg-wifi-recording-rest,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1A5:4A15:2929D7A:5457BAD:65224501.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1404,PLUTO_Social-Distancing-Bus-Scheduling-System,AbhinavKoul,N/A,N/A,https://api.github.com/repos/AbhinavKoul/PLUTO_Social-Distancing-Bus-Scheduling-System,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C104:16F7:26CF5D9:4FA53FF:65224501.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1405,MetroTransitKit,JacobHearst,N/A,N/A,https://api.github.com/repos/JacobHearst/MetroTransitKit,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C137:629D:45BF1E7:8D8699D:65224502.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1406,AI_ZTM_Project,RicoPsych,N/A,N/A,https://api.github.com/repos/RicoPsych/AI_ZTM_Project,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C111:3996:264CA30:4E9C69D:65224502.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1407,tpe-mrt-traffic-etl-serverless,ShihWen,N/A,N/A,https://api.github.com/repos/ShihWen/tpe-mrt-traffic-etl-serverless,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C117:646E:2725F77:505598C:65224503.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1408,discover-vbb-stations,derhuerst,N/A,N/A,https://api.github.com/repos/derhuerst/discover-vbb-stations,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C123:57A8:283B9DF:5280796:65224504.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1409,xml-data,cieran,N/A,N/A,https://api.github.com/repos/cieran/xml-data,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C126:7646:298D1D0:55221F4:65224504.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1410,hafas-fetch-track-slice,derhuerst,N/A,N/A,https://api.github.com/repos/derhuerst/hafas-fetch-track-slice,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1C7:18FC:2750668:50A8167:65224505.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1411,bvg-shuttle-gtfs-rt-feed,derhuerst,N/A,N/A,https://api.github.com/repos/derhuerst/bvg-shuttle-gtfs-rt-feed,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C13C:27B4:258014A:4D15BD8:65224505.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1412,line-optimization,juliuste,N/A,N/A,https://api.github.com/repos/juliuste/line-optimization,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1D4:8A0D:284CFED:52AB800:65224506.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1413,db-netz-hafas,derhuerst,N/A,N/A,https://api.github.com/repos/derhuerst/db-netz-hafas,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1A5:4A15:292A3ED:54588EA:65224507.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1414,samara-public-transport,netcovoiturage,N/A,N/A,https://api.github.com/repos/netcovoiturage/samara-public-transport,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C111:3996:2639A24:4E754BD:652243E7.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1415,gohafas,jo-m,N/A,https://github.com/jo-m/gohafas,https://api.github.com/repos/jo-m/gohafas,Go API client for HAFAS (Public transport API),"# Go API client for HAFAS

Currently, only stop search and stationboard endpoints are implemented.
The only API which has been tested is the [ZVV](https://www.zvv.ch/) one.

It has the base URL <https://zvv.hafas.cloud/bin> and a nice web
interface at <https://online.fahrplan.zvv.ch/bin/stboard.exe>.

## HAFAS

Read more about it here:

- <https://de.wikipedia.org/wiki/HAFAS>
- <https://administrator.de/knowledge/hafas-fahrplanauskunft-api-sammlung-177145.html>
- <https://gist.github.com/derhuerst/2b7ed83bfa5f115125a5>

## Usage and example binary

See the example CLI utility in `cmd/stationboard` for example usage.

```
$ go run ./cmd/stationboard/ --help
List next departures for a public transport stop.

Usage: stationboard [--timeout T] [--max-results N] [STOP]

Positional arguments:
  STOP                   stop name, use cmd/findStops to find stops

Options:
  --timeout T, -t T      API timeout [default: 5s]
  --max-results N, -n N
                         max number of results [default: 5]
  --help, -h             display this help and exit

$ go run ./cmd/stationboard/ 'Zürich HB'
Next departures for Zürich HB
🚊 Tram 13 to Zürich, Hardturm
   In 0 minute(s) (27.11.22 15:38)
🚆 InterCity 3 to Chur
   In 0 minute(s) (27.11.22 15:38)
   Platform: 8
🚆 RegioExpress  to Aarau
   In 0 minute(s) (27.11.22 15:38)
   Platform: 15
🚆 S-Bahn S4 to Langnau-Gattikon
   In 0 minute(s) (27.11.22 15:38)
   Platform: 21
🚊 Tram 4 to Zürich, Bahnhof Tiefenbrunnen
   In 0 minute(s) (27.11.22 15:38)
   Real time: 1 (0+1) platform
```
",0,0,2,0,public-transport,"[go, golang, hafas, hafas-client, public-transport, transportation]",00000
1416,belgiantrain-liveboard-wc,jonatcln,N/A,N/A,https://api.github.com/repos/jonatcln/belgiantrain-liveboard-wc,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C140:646E:2726351:5056190:65224507.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1417,Thoughtworks,teamlse2022,N/A,N/A,https://api.github.com/repos/teamlse2022/Thoughtworks,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C103:3996:264CFB1:4E9D1F4:65224508.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1418,Closer-legacy,pakut2,N/A,N/A,https://api.github.com/repos/pakut2/Closer-legacy,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1CA:9CF4:281C592:5237A9E:652243EA.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1419,848-bus-map,ken-tzu,N/A,N/A,https://api.github.com/repos/ken-tzu/848-bus-map,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C117:646E:272646A:50563C9:65224508.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1420,DeutscheBahnDiscord,JannesT3011,N/A,N/A,https://api.github.com/repos/JannesT3011/DeutscheBahnDiscord,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C196:6EFD:2567209:4CE8E29:65224509.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1421,vbb-station-shapes,derhuerst,N/A,N/A,https://api.github.com/repos/derhuerst/vbb-station-shapes,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C129:7039:27A4128:515390C:65224509.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1422,remix-bvg-map-backend,derhuerst,N/A,N/A,https://api.github.com/repos/derhuerst/remix-bvg-map-backend,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C175:0E65:267BFB0:4F01EAC:6522450A.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1423,hvvgti-cpp,vigonotion,N/A,N/A,https://api.github.com/repos/vigonotion/hvvgti-cpp,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C106:7DF2:26C964F:4F8F1F0:652243FB.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1424,mvg-info,muffix,N/A,N/A,https://api.github.com/repos/muffix/mvg-info,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C121:7CD5:2A3F708:568E667:6522450B.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1425,tfgm-park-and-ride-details-scraper,MyNameIsMikeGreen,N/A,N/A,https://api.github.com/repos/MyNameIsMikeGreen/tfgm-park-and-ride-details-scraper,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C135:75D0:2665A27:4EE6A4D:6522450B.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1426,metropaccess-backend,Kalhama,N/A,N/A,https://api.github.com/repos/Kalhama/metropaccess-backend,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1CF:3996:264D40D:4E9DAFF:6522450C.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1427,ecobici,fpaterson,N/A,N/A,https://api.github.com/repos/fpaterson/ecobici,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C196:6EFD:25674C8:4CE93E3:6522450C.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1428,led-board,prazska-integrovana-doprava,N/A,N/A,https://api.github.com/repos/prazska-integrovana-doprava/led-board,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C123:57A8:283C4A8:5281DFF:6522450D.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1429,bus-alerts,dvorakroth,N/A,N/A,https://api.github.com/repos/dvorakroth/bus-alerts,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1A9:6459:2689D45:4F33FC0:6522450E.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1430,umsteigen.jetzt-rest,juliuste,N/A,N/A,https://api.github.com/repos/juliuste/umsteigen.jetzt-rest,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1D8:2B20:25E5C7B:4DEC2C4:6522450E.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1431,vbb-platform-patterns,juliuste,N/A,N/A,https://api.github.com/repos/juliuste/vbb-platform-patterns,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1BA:59CA:265D2D4:4ECC009:6522450F.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1432,uic-location-timezone,juliuste,N/A,N/A,https://api.github.com/repos/juliuste/uic-location-timezone,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C186:638B:27A95CE:5154411:6522450F.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1433,metro,PatrickSteil,N/A,N/A,https://api.github.com/repos/PatrickSteil/metro,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C147:6AF3:28CCFA6:53A0398:65224510.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1434,ptvapi,ronny,N/A,N/A,https://api.github.com/repos/ronny/ptvapi,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1B0:28F2:2A5125B:56A4624:65224510.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1435,public_transport_distances_ch,joelproko,N/A,N/A,https://api.github.com/repos/joelproko/public_transport_distances_ch,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C101:9CF4:2832FD6:526619C:65224511.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1436,tegel-smartmirror,jannesbrunner,N/A,N/A,https://api.github.com/repos/jannesbrunner/tegel-smartmirror,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C165:049C:272DBFA:506DFED:65224512.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1437,fluxo-sumo-santa-maria,sganzerla,N/A,N/A,https://api.github.com/repos/sganzerla/fluxo-sumo-santa-maria,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C161:75D0:2666099:4EE778E:65224512.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1438,metropaccess-frontend,Kalhama,N/A,N/A,https://api.github.com/repos/Kalhama/metropaccess-frontend,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C13C:27B4:2580DC8:4D175B7:65224513.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1439,Sustainability-Analysis-of-Shared-On-Demand-Public-Transit,LiTrans,N/A,N/A,https://api.github.com/repos/LiTrans/Sustainability-Analysis-of-Shared-On-Demand-Public-Transit,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C123:57A8:283CD5A:5282FCD:65224513.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1440,railboard-api,StckOverflw,N/A,N/A,https://api.github.com/repos/StckOverflw/railboard-api,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C164:58F5:25EF69F:4DE8C6C:65224514.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1441,abfahrten,twihno,N/A,N/A,https://api.github.com/repos/twihno/abfahrten,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C178:75D0:26662D7:4EE7C3C:65224514.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1442,here_transit,eifinger,N/A,N/A,https://api.github.com/repos/eifinger/here_transit,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1C0:7CD5:2A40093:568FA36:65224515.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1443,weather-subway-board,liddiard,N/A,N/A,https://api.github.com/repos/liddiard/weather-subway-board,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C10E:16F7:26D04B1:4FA72F7:65224516.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1444,mrt-graph,seahrh,N/A,N/A,https://api.github.com/repos/seahrh/mrt-graph,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C168:39DF:27AE70B:515CCB5:65224516.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1445,publictransport,kiliankoe,N/A,N/A,https://api.github.com/repos/kiliankoe/publictransport,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1FA:1D92:25FA12E:4DFC931:652243ED.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1446,darwin-web-proxy,jonlinnell,N/A,N/A,https://api.github.com/repos/jonlinnell/darwin-web-proxy,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C13C:27B4:256F853:4CF370D:652243EE.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1447,itinero-io-osm-transit,anyways-open,N/A,N/A,https://api.github.com/repos/anyways-open/itinero-io-osm-transit,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C183:9CF4:28335CC:5266DFE:65224517.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1448,TPU,gnegrelli,N/A,N/A,https://api.github.com/repos/gnegrelli/TPU,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C161:75D0:266658F:4EE81E4:65224517.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1449,TransportForChange,campbellbartlett,N/A,N/A,https://api.github.com/repos/campbellbartlett/TransportForChange,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C125:6EFD:2567DD0:4CEA6C4:65224518.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1450,TPU,gnegrelli,N/A,N/A,https://api.github.com/repos/gnegrelli/TPU,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C161:75D0:266658F:4EE81E4:65224517.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1451,transport-network-and-graphs,damienchambon,N/A,N/A,https://api.github.com/repos/damienchambon/transport-network-and-graphs,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C184:5119:25B1BBE:4D7C3CF:65224519.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1452,friendly-public-transport-format,Vector-Hector,N/A,N/A,https://api.github.com/repos/Vector-Hector/friendly-public-transport-format,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C15B:1B08:282D3A3:5250DB8:65224519.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1453,kvb-station-infos,mobil-koeln,N/A,N/A,https://api.github.com/repos/mobil-koeln/kvb-station-infos,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1D0:78AC:2811ABC:5236120:6522451A.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1454,MVGInfo,Hoff97,N/A,N/A,https://api.github.com/repos/Hoff97/MVGInfo,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1AE:12FA:60804D:C6CD94:6522451A.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1455,gogtfs,vchezganov,N/A,N/A,https://api.github.com/repos/vchezganov/gogtfs,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1EB:75D0:266689F:4EE8844:6522451B.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1456,THOUGHTWORKS_DA_London_Cycling,Tamasb121,N/A,N/A,https://api.github.com/repos/Tamasb121/THOUGHTWORKS_DA_London_Cycling,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C184:1560:2922A2E:54864B3:6522451C.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1457,api_distance_public_transportation,BrunoMesquitaa,N/A,N/A,https://api.github.com/repos/BrunoMesquitaa/api_distance_public_transportation,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1B3:643D:2A6AA3E:56FE2E6:6522451C.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1458,gtfs-flex,bbnavi,N/A,N/A,https://api.github.com/repos/bbnavi/gtfs-flex,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1FC:5A71:309542F:63635A4:6522451D.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1459,vbb-stations-connected-to,derhuerst,N/A,N/A,https://api.github.com/repos/derhuerst/vbb-stations-connected-to,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C165:38A4:2C11462:5A6DD82:6522451D.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1460,db-sncf-prices,juliuste,N/A,N/A,https://api.github.com/repos/juliuste/db-sncf-prices,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C13B:17C0:2C93E4:5CF532:6522451E.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1461,db-monitor-cli,derhuerst,N/A,N/A,https://api.github.com/repos/derhuerst/db-monitor-cli,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1B3:643D:2A6AC98:56FE7A0:6522451F.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1462,hafas-departures-in-direction,derhuerst,N/A,N/A,https://api.github.com/repos/derhuerst/hafas-departures-in-direction,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1EE:1CC6:2A7B917:5732F14:6522451F.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1463,vbb-stations-html,derhuerst,N/A,N/A,https://api.github.com/repos/derhuerst/vbb-stations-html,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C13E:24F2:29E6B6E:5605BE6:65224520.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1464,vbb-fare-zone,juliuste,N/A,N/A,https://api.github.com/repos/juliuste/vbb-fare-zone,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1BB:6C98:2E85F9:60C115:65224520.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1465,runbus,snacsnoc,N/A,N/A,https://api.github.com/repos/snacsnoc/runbus,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1CA:17C0:2C9632:5CF9F3:65224521.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1466,busix,macbury,N/A,N/A,https://api.github.com/repos/macbury/busix,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C15B:1ECC:2E443D:6042A1:65224521.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1467,ha-here-travel-time,dfleischhacker,N/A,N/A,https://api.github.com/repos/dfleischhacker/ha-here-travel-time,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C152:0208:2E329D7:5EA0136:65224522.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1468,TranslinkParser,willsawyerrrr,N/A,N/A,https://api.github.com/repos/willsawyerrrr/TranslinkParser,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C10B:74C7:269D5E9:4F49709:65224406.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1469,metlink-gtfs,itisrazza,N/A,N/A,https://api.github.com/repos/itisrazza/metlink-gtfs,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C16A:336C:2D438CE:5CCBF61:65224523.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1470,publicline,kadum0,N/A,N/A,https://api.github.com/repos/kadum0/publicline,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1D0:78AC:27FF8F4:5210B23:65224407.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1471,VBB,sklinkusch,N/A,N/A,https://api.github.com/repos/sklinkusch/VBB,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C197:1560:29232EB:54876AA:65224523.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1472,flat-data-anac,gabrielmacedoanac,N/A,N/A,https://api.github.com/repos/gabrielmacedoanac/flat-data-anac,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C100:336C:2D439EC:5CCC1CE:65224524.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1473,vrn,henkman,N/A,N/A,https://api.github.com/repos/henkman/vrn,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1CC:33C6:2A3D447:56CD9A4:65224524.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1474,Pi,improve-everything,N/A,N/A,https://api.github.com/repos/improve-everything/Pi,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1CE:797D:2BB115:5B1CEF:65224525.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1475,german-hafas-osm-line-colour-points,juliuste,N/A,N/A,https://api.github.com/repos/juliuste/german-hafas-osm-line-colour-points,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1F7:8AB4:29F0D7D:561F303:65224526.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1476,CrowdednessPrediction,TheDon96,N/A,N/A,https://api.github.com/repos/TheDon96/CrowdednessPrediction,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C18B:24F2:29E722B:56069C8:65224526.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1477,sp-public-transport,alimarques,N/A,N/A,https://api.github.com/repos/alimarques/sp-public-transport,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1FC:5A71:30960DF:6364FDD:65224527.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1478,bygreen-twa,kadum0,N/A,N/A,https://api.github.com/repos/kadum0/bygreen-twa,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1AB:0208:2E3322B:5EA1247:65224527.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1479,Busway,RohitEdathil,N/A,N/A,https://api.github.com/repos/RohitEdathil/Busway,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C180:5B68:2E0698:5FE5FE:65224528.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1480,peka-vm-client,adrmal,N/A,N/A,https://api.github.com/repos/adrmal/peka-vm-client,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1AE:1CC6:2A7C309:57343B3:65224529.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1481,referencias_gtfs,tarifazero,N/A,N/A,https://api.github.com/repos/tarifazero/referencias_gtfs,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1E8:3B38:31869B:669C88:65224529.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1482,metlink-status,finngreig,N/A,N/A,https://api.github.com/repos/finngreig/metlink-status,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C111:68AA:2ED70BD:5FEAA67:6522452A.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1483,ztm-warsaw-vehicle-database,1116574,N/A,N/A,https://api.github.com/repos/1116574/ztm-warsaw-vehicle-database,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1E2:0BEC:2D5250:5E6DD2:6522452A.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1484,perceived-route-choice,pabloguarda,N/A,N/A,https://api.github.com/repos/pabloguarda/perceived-route-choice,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C17F:6EA3:2CD86B:5D65FF:6522452B.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1485,kvv-ticker,schmehla,N/A,N/A,https://api.github.com/repos/schmehla/kvv-ticker,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1F7:8AB4:29F1553:56202F5:6522452B.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1486,open-transit,lonelyteapot,N/A,N/A,https://api.github.com/repos/lonelyteapot/open-transit,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C123:4776:2F9734:62CF83:6522452C.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1487,charlotte-urbanists-website,charlotte-urbanists,N/A,N/A,https://api.github.com/repos/charlotte-urbanists/charlotte-urbanists-website,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1A3:47EA:26E581B:4FE8473:6522452D.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1488,geofox-go,dxixp,N/A,N/A,https://api.github.com/repos/dxixp/geofox-go,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C152:0208:2E33BD6:5EA2606:6522452D.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1489,next-stop-screen,chyzchyk,N/A,N/A,https://api.github.com/repos/chyzchyk/next-stop-screen,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1FF:4776:2F9963:62D3E2:6522452E.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,public-transport,"[N, /, A]",00000
1490,cordova-plugin-googlemaps,mapsplugin,N/A,N/A,https://api.github.com/repos/mapsplugin/cordova-plugin-googlemaps,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C104:4771:2E3E27:601A8B:6522452F.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1491,google-maps-services-js,googlemaps,N/A,N/A,https://api.github.com/repos/googlemaps/google-maps-services-js,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C15A:68AA:2ED789E:5FEBA8C:6522452F.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1492,google-maps-react,fullstackreact,N/A,N/A,https://api.github.com/repos/fullstackreact/google-maps-react,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C10F:505E:30DF05:6549ED:65224530.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1493,Mappa,cvalenzuela,N/A,N/A,https://api.github.com/repos/cvalenzuela/Mappa,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1C7:4C24:2BB8DAD:59B5203:65224530.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1494,google-map-react,google-map-react,N/A,N/A,https://api.github.com/repos/google-map-react/google-map-react,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C122:17C0:2CA552:5D1973:65224531.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1495,google-maps-in-react,imranhsayed,N/A,N/A,https://api.github.com/repos/imranhsayed/google-maps-in-react,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C125:6829:2E90F52:5F5E900:65224531.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1496,GoogleMaps-SP,YAtechnologies,N/A,N/A,https://api.github.com/repos/YAtechnologies/GoogleMaps-SP,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C15A:68AA:2ED7CA6:5FEC2DE:65224532.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1497,Leku,AdevintaSpain,N/A,N/A,https://api.github.com/repos/AdevintaSpain/Leku,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1DF:41EE:27EE186:5230E49:65224533.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1498,openapi-specification,googlemaps,N/A,N/A,https://api.github.com/repos/googlemaps/openapi-specification,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1B8:1560:2924619:5489E19:65224533.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1499,yii2-google-maps-library,2amigos,N/A,N/A,https://api.github.com/repos/2amigos/yii2-google-maps-library,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1BC:1560:29246CB:5489F71:65224534.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1500,sketch-map-generator,eddiesigner,N/A,N/A,https://api.github.com/repos/eddiesigner/sketch-map-generator,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C123:4776:2F9FD7:62E13E:65224534.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1501,js-api-loader,googlemaps,N/A,N/A,https://api.github.com/repos/googlemaps/js-api-loader,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1BE:68AA:2ED7FE0:5FEC97A:65224534.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1502,Vehicle-In-Motion,frankodoom,N/A,N/A,https://api.github.com/repos/frankodoom/Vehicle-In-Motion,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1E5:38A4:2C1329C:5A71B77:65224535.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1503,aurelia-google-maps,Vheissu,N/A,N/A,https://api.github.com/repos/Vheissu/aurelia-google-maps,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C119:2EE5:289D2AF:538F698:65224536.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1504,load-google-maps-api,yuanqing,N/A,N/A,https://api.github.com/repos/yuanqing/load-google-maps-api,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1B1:505E:30E48F:65557B:65224536.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1505,Google-Maps-Direction,balitax,N/A,N/A,https://api.github.com/repos/balitax/Google-Maps-Direction,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C152:0208:2E349AD:5EA423B:65224537.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1506,ember-google-maps,sandydoo,N/A,N/A,https://api.github.com/repos/sandydoo/ember-google-maps,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C15D:17C0:2CAB30:5D2584:65224537.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1507,svelte-googlemaps,beyonk-group,N/A,N/A,https://api.github.com/repos/beyonk-group/svelte-googlemaps,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1AD:17C0:2CABC5:5D26B3:65224538.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1508,google-maps-utility-library-v3-read-only,printercu,N/A,N/A,https://api.github.com/repos/printercu/google-maps-utility-library-v3-read-only,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C10B:3493:2757EDE:50FF628:65224539.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1509,google_maps,leontoeides,N/A,N/A,https://api.github.com/repos/leontoeides/google_maps,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C187:2772:29157A5:5484378:65224539.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1510,google-maps-javascript-api,imranhsayed,N/A,N/A,https://api.github.com/repos/imranhsayed/google-maps-javascript-api,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1FB:1E37:2EB62F:6117E3:6522453A.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1511,Phonegap-GoogleMap-and-ProjectSettings-example,crilleengvall,N/A,N/A,https://api.github.com/repos/crilleengvall/Phonegap-GoogleMap-and-ProjectSettings-example,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1CA:17C0:2CAE15:5D2B7C:6522453B.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1512,ng-maps,ng-maps,N/A,N/A,https://api.github.com/repos/ng-maps/ng-maps,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C16B:38A4:2C139D2:5A72A43:6522453B.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1513,Uber-map-style,amolood,N/A,N/A,https://api.github.com/repos/amolood/Uber-map-style,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C136:4771:2E49CF:6032C8:6522453C.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1514,draw_route_google_maps,webeasystep,N/A,N/A,https://api.github.com/repos/webeasystep/draw_route_google_maps,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C182:0208:2E34F8C:5EA4E5D:6522453C.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1515,google-maps-php-sdk,biscolab,N/A,N/A,https://api.github.com/repos/biscolab/google-maps-php-sdk,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1CF:6B96:28ACDA1:53B5451:6522453D.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1516,locationestimatr.github.io,locationestimatr,N/A,N/A,https://api.github.com/repos/locationestimatr/locationestimatr.github.io,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C199:5A71:3097E34:6368BC0:6522453D.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1517,geo-heatmap,luka1199,N/A,N/A,https://api.github.com/repos/luka1199/geo-heatmap,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1BA:1560:2924FA2:548B1C9:6522453D.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1518,google-maps-android-charts,aminyazdanpanah,N/A,N/A,https://api.github.com/repos/aminyazdanpanah/google-maps-android-charts,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1D8:458F:2C8DD02:5B5F45F:6522453E.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1519,wp-pronamic-google-maps,pronamic,N/A,N/A,https://api.github.com/repos/pronamic/wp-pronamic-google-maps,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C110:458F:2C8DD80:5B5F567:6522453E.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1520,vuejs-google-maps,chantouchsek,N/A,N/A,https://api.github.com/repos/chantouchsek/vuejs-google-maps,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1D3:8AB4:29F2D0D:56233A3:6522453F.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1521,maps-to-lead,jhowbhz,N/A,N/A,https://api.github.com/repos/jhowbhz/maps-to-lead,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C165:38A4:2C13F2D:5A7352D:65224540.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1522,MapIt,vdw,N/A,N/A,https://api.github.com/repos/vdw/MapIt,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1AD:17C0:2CB2B5:5D352B:65224540.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1523,react-google-map,cedricdelpoux,N/A,N/A,https://api.github.com/repos/cedricdelpoux/react-google-map,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C17A:6B96:28AD2C2:53B5EE1:65224541.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1524,google-maps-api-typings,indrimuska,N/A,N/A,https://api.github.com/repos/indrimuska/google-maps-api-typings,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C10C:4776:2FAC03:62FA55:65224542.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1525,nuxt-google-maps-module,WilliamDASILVA,N/A,N/A,https://api.github.com/repos/WilliamDASILVA/nuxt-google-maps-module,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C179:0BEC:2D6489:5E93F3:65224542.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1526,google-maps-reviews,simonneutert,N/A,N/A,https://api.github.com/repos/simonneutert/google-maps-reviews,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C158:3119:2C39267:5AA3C5F:65224543.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1527,gmlib_v2,cadetill,N/A,N/A,https://api.github.com/repos/cadetill/gmlib_v2,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C140:406C:2EB2AF:6116E3:65224543.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1528,timeline-exporter,reinzor,N/A,N/A,https://api.github.com/repos/reinzor/timeline-exporter,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C16F:24F2:29E92A4:560ACC0:65224544.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1529,mui-places-autocomplete,Giners,N/A,N/A,https://api.github.com/repos/Giners/mui-places-autocomplete,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C174:6B96:28AD729:53B67D6:65224545.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1530,jest-google-maps-mock,hupe1980,N/A,N/A,https://api.github.com/repos/hupe1980/jest-google-maps-mock,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C155:47EA:26E6D36:4FEB021:65224545.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1531,jquery-google-reviews,simonneutert,N/A,N/A,https://api.github.com/repos/simonneutert/jquery-google-reviews,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C19C:2EE5:289E24F:53916D5:65224546.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1532,CarAnimation,shihabmi7,N/A,N/A,https://api.github.com/repos/shihabmi7/CarAnimation,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C135:61FF:2F8009:629CA4:65224546.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1533,Google-Maps-Route-UI,zyllus17,N/A,N/A,https://api.github.com/repos/zyllus17/Google-Maps-Route-UI,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C10A:6584:287AEAD:533DEAF:65224547.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1534,react-native-streetview,nesterapp,N/A,N/A,https://api.github.com/repos/nesterapp/react-native-streetview,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1D4:68AA:2ED9606:5FEF6D3:65224548.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1535,GmsCore,microg,N/A,N/A,https://api.github.com/repos/microg/GmsCore,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1EE:1CC6:2A7E12E:57381F7:65224548.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1536,PlacePicker,suchoX,N/A,N/A,https://api.github.com/repos/suchoX/PlacePicker,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1BF:458F:2C8E641:5B60793:65224548.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1537,Cloud-Product-Mapping,milanm,N/A,N/A,https://api.github.com/repos/milanm/Cloud-Product-Mapping,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C180:5B68:2E2171:601DE9:65224549.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1538,echarts-extension-gmap,plainheart,N/A,N/A,https://api.github.com/repos/plainheart/echarts-extension-gmap,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1C0:6C98:2EADD3:61139E:65224549.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1539,drawroute,malikdawar,N/A,N/A,https://api.github.com/repos/malikdawar/drawroute,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C104:4771:2E5627:604C32:6522454A.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1540,Google-Location-History-Total-Distance-Travelled,kinto0,N/A,N/A,https://api.github.com/repos/kinto0/Google-Location-History-Total-Distance-Travelled,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1D9:47EA:26E7186:4FEB915:6522454B.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1541,Google-Maps-Animated-Marker,arjun921,N/A,N/A,https://api.github.com/repos/arjun921/Google-Maps-Animated-Marker,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C155:7B5B:75B640:F2BD72:6522454B.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1542,GMapsParser,3v1n0,N/A,N/A,https://api.github.com/repos/3v1n0/GMapsParser,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1AE:607B:7BB70D:FEE154:6522454C.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1543,rgm,realadvisor,N/A,N/A,https://api.github.com/repos/realadvisor/rgm,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C184:05EF:711CDF:E9EA4B:6522454C.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1544,json2kml,d-me3,N/A,N/A,https://api.github.com/repos/d-me3/json2kml,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C188:5A27:7455EB:F05152:6522454D.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1545,show-me-the-way,nntuyen,N/A,N/A,https://api.github.com/repos/nntuyen/show-me-the-way,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C112:1E3B:2FFE1A6:621048A:6522454D.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1546,js-markerclusterer,googlemaps,N/A,N/A,https://api.github.com/repos/googlemaps/js-markerclusterer,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C194:4E78:72CE8D:ED46FB:6522454E.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1547,js-typescript-guards,googlemaps,N/A,N/A,https://api.github.com/repos/googlemaps/js-typescript-guards,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C180:6A74:1A5C406:364B732:6522454F.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1548,react-hook-google-maps,jmarceli,N/A,N/A,https://api.github.com/repos/jmarceli/react-hook-google-maps,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C10E:1E3B:2FFE310:621077E:6522454F.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1549,extended-component-library,googlemaps,N/A,N/A,https://api.github.com/repos/googlemaps/extended-component-library,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1BA:36DF:359CBDE:6D4EACF:65224550.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1550,optimized-route,dangbert,N/A,N/A,https://api.github.com/repos/dangbert/optimized-route,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1D2:1E3B:2FFE42C:62109D3:65224550.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1551,google-map-downloader,zhengjie9510,N/A,N/A,https://api.github.com/repos/zhengjie9510/google-map-downloader,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C179:1299:A110D5:14CC122:65224550.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1552,Clickable-countries-using-Google-Maps-API,arturssmirnovs,N/A,N/A,https://api.github.com/repos/arturssmirnovs/Clickable-countries-using-Google-Maps-API,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C18D:4E78:72D112:ED4C19:65224551.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1553,angular-google-maps,BeSpunky,N/A,N/A,https://api.github.com/repos/BeSpunky/angular-google-maps,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C130:41B1:735638:EEA915:65224551.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1554,gomaps,jakeee51,N/A,N/A,https://api.github.com/repos/jakeee51/gomaps,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C128:73C7:741C50:EFC038:65224552.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1555,flightflutter,VB10,N/A,N/A,https://api.github.com/repos/VB10/flightflutter,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C19B:0C3C:7802EE:F7A930:65224553.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1556,react-google-static,leonardomso,N/A,N/A,https://api.github.com/repos/leonardomso/react-google-static,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C150:4678:1AFCC3D:3792508:65224553.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1557,HealthCare-Scan-Nearby-Hospital-Locations,ZainMustafaaa,N/A,N/A,https://api.github.com/repos/ZainMustafaaa/HealthCare-Scan-Nearby-Hospital-Locations,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C141:2E63:2C3ACA:5C1593:65224387.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1558,GoogleMapView,alirezaashrafi,N/A,N/A,https://api.github.com/repos/alirezaashrafi/GoogleMapView,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C14B:5934:288EB34:5365E8C:65224554.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1559,geocoder,KoddiDev,N/A,N/A,https://api.github.com/repos/KoddiDev/geocoder,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C121:41B1:735817:EEAD11:65224554.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1560,js-types,googlemaps,N/A,N/A,https://api.github.com/repos/googlemaps/js-types,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C128:73C7:741E9C:EFC512:65224555.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1561,google-maps-multi-filter-jquery,rhuan-dev,N/A,N/A,https://api.github.com/repos/rhuan-dev/google-maps-multi-filter-jquery,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C125:7B3E:7A4153:FBBE72:65224555.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1562,alexa-google-directions,luigidc25,N/A,N/A,https://api.github.com/repos/luigidc25/alexa-google-directions,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C138:0C3C:7805AA:F7AEE3:65224556.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1563,google-maps-draw-shape-lib,tiagocavaco,N/A,N/A,https://api.github.com/repos/tiagocavaco/google-maps-draw-shape-lib,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1A9:3819:1B1D019:37C1678:65224557.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1564,RouteDirectionMap,mohamedebrahim96,N/A,N/A,https://api.github.com/repos/mohamedebrahim96/RouteDirectionMap,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1F4:5AB9:2C7A5C7:5B1EAB8:65224557.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1565,plain,XingzheFE,N/A,N/A,https://api.github.com/repos/XingzheFE/plain,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C166:092A:734A66:EE5178:65224558.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1566,angular-8-google-maps-firebase-realtime,didinj,N/A,N/A,https://api.github.com/repos/didinj/angular-8-google-maps-firebase-realtime,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C151:1F34:1BCFDDD:3929D86:65224558.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1567,Google-Maps-Moving-Path,arjun921,N/A,N/A,https://api.github.com/repos/arjun921/Google-Maps-Moving-Path,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1DD:1F34:1BCFE54:3929E84:65224559.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1568,GooglePlacesAutoComplete,ShwetaChauhan18,N/A,N/A,https://api.github.com/repos/ShwetaChauhan18/GooglePlacesAutoComplete,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1AD:36DF:359D7EE:6D503A0:65224559.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1569,huawei_and_google_services,MobileUpLLC,N/A,N/A,https://api.github.com/repos/MobileUpLLC/huawei_and_google_services,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C17B:29CE:3332724:687CD9D:6522455A.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1570,Google-Maps-Crawler,lucasfdelis,N/A,N/A,https://api.github.com/repos/lucasfdelis/Google-Maps-Crawler,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C142:7AEF:2E04331:5E1A192:6522455A.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1571,iMaps,nisaefendioglu,N/A,N/A,https://api.github.com/repos/nisaefendioglu/iMaps,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C13B:4678:1AFD32D:379335F:6522455B.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1572,google-maps-projection,sprankhub,N/A,N/A,https://api.github.com/repos/sprankhub/google-maps-projection,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1CD:5F41:71F71D:EBA599:6522455C.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1573,flutter_place_picker,saytoonz,N/A,N/A,https://api.github.com/repos/saytoonz/flutter_place_picker,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C111:4F4C:753B8A:F1EF96:6522455C.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1574,GoogleBundle,meinfernbus,N/A,N/A,https://api.github.com/repos/meinfernbus/GoogleBundle,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1C0:2319:6C043C:DFB485:6522455D.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1575,gmaps-geocode-php,zero-archive,N/A,N/A,https://api.github.com/repos/zero-archive/gmaps-geocode-php,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C18D:4E78:72DD2F:ED651A:6522455D.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1576,polylineencoder,vahancho,N/A,N/A,https://api.github.com/repos/vahancho/polylineencoder,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C140:4F4C:753D16:F1F2CC:6522455E.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1577,GoStore,noobshubham,N/A,N/A,https://api.github.com/repos/noobshubham/GoStore,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C10B:0E7B:1A5D59A:364EFB9:6522455E.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1578,google-maps-reviews-python,outscraper,N/A,N/A,https://api.github.com/repos/outscraper/google-maps-reviews-python,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1F4:5AB9:2C7AC94:5B1F8B7:6522455E.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1579,ionic3-google-places-search,didinj,N/A,N/A,https://api.github.com/repos/didinj/ionic3-google-places-search,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1DD:1F34:1BD0334:392A8A1:6522455F.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1580,astu-nav,IamYunusAli,N/A,N/A,https://api.github.com/repos/IamYunusAli/astu-nav,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C12D:7B5B:75C894:F2E38E:65224560.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1581,Mobile-phone-tracking-App,aakashno123,N/A,N/A,https://api.github.com/repos/aakashno123/Mobile-phone-tracking-App,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C188:5A27:746688:F073EB:65224560.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1582,gmaps-input-backpack,abr4xas,N/A,N/A,https://api.github.com/repos/abr4xas/gmaps-input-backpack,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1CF:1F34:1BD0545:392AD0B:65224561.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1583,Google-Map-Direction-Demo,luong-komorebi,N/A,N/A,https://api.github.com/repos/luong-komorebi/Google-Map-Direction-Demo,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C185:1F34:1BD0651:392AF2F:65224561.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1584,simplemap,mikestratton,N/A,N/A,https://api.github.com/repos/mikestratton/simplemap,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1AB:7AEF:2E04CB8:5E1B524:65224562.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1585,js-url-signature,googlemaps,N/A,N/A,https://api.github.com/repos/googlemaps/js-url-signature,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1C2:3BF5:7699A1:F4A234:65224563.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1586,GoogleMapsPlugin,foswiki,N/A,N/A,https://api.github.com/repos/foswiki/GoogleMapsPlugin,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1E9:87DB:3032B70:626CC1E:65224563.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1587,google-maps-embed-api,tejxv,N/A,N/A,https://api.github.com/repos/tejxv/google-maps-embed-api,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C151:1F34:1BD09ED:392B66D:65224564.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1588,Mailfogle,WildSiphon,N/A,N/A,https://api.github.com/repos/WildSiphon/Mailfogle,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C180:6A74:1A5D9A0:364E411:65224564.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1589,google-maps-api,Scrapeit-Cloud,N/A,N/A,https://api.github.com/repos/Scrapeit-Cloud/google-maps-api,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1B2:418F:2A9D074:572034E:65224565.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1590,Geo.NET,JustinCanton,N/A,N/A,https://api.github.com/repos/JustinCanton/Geo.NET,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C16A:58D0:79F6C4:FB0ACE:65224566.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1591,RandomLocation,mehmetkahya0,N/A,N/A,https://api.github.com/repos/mehmetkahya0/RandomLocation,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C115:46E9:782E69:F7E410:65224566.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1592,containsLocation_example,Baltazar-Ortega,N/A,N/A,https://api.github.com/repos/Baltazar-Ortega/containsLocation_example,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C116:4179:2E1DC83:5E61723:65224567.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1593,google_maps_direction_api_android,moorthysubu,N/A,N/A,https://api.github.com/repos/moorthysubu/google_maps_direction_api_android,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C156:4F4C:754A00:F20D49:65224567.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1594,google-maps-api-python,Scrapeit-Cloud,N/A,N/A,https://api.github.com/repos/Scrapeit-Cloud/google-maps-api-python,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C12F:6A74:1A5DEB5:364EE76:65224568.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1595,Flutter-Simple-Delivery-App-Design-,ket-c,N/A,N/A,https://api.github.com/repos/ket-c/Flutter-Simple-Delivery-App-Design-,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C14A:1364:7938F7:FA0E55:65224569.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1596,mapify,codezero-be,N/A,N/A,https://api.github.com/repos/codezero-be/mapify,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1BA:36DF:359F3AF:6D53C0E:65224569.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1597,Xam.Plugin.SimpleStaticMap,galadril,N/A,N/A,https://api.github.com/repos/galadril/Xam.Plugin.SimpleStaticMap,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C15D:29CE:3333EF8:687FE7C:6522456A.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1598,AndroidGoogleStreetViewMap,CodingInfinite,N/A,N/A,https://api.github.com/repos/CodingInfinite/AndroidGoogleStreetViewMap,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1C8:1364:793BBC:FA13E7:6522456A.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1599,RandomStrangestLocations,mehmetkahya0,N/A,N/A,https://api.github.com/repos/mehmetkahya0/RandomStrangestLocations,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C148:0E7B:1A5E821:36515B7:6522456B.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1600,gmap,dawsbot,N/A,N/A,https://api.github.com/repos/dawsbot/gmap,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C149:7B5B:75DA07:F306B9:6522456C.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1601,grid_clusterer,bdcoder2,N/A,N/A,https://api.github.com/repos/bdcoder2/grid_clusterer,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C155:7B5B:75DAC8:F30832:6522456C.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1602,dragomirna-biking,dmfarcas,N/A,N/A,https://api.github.com/repos/dmfarcas/dragomirna-biking,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C12E:1299:A13306:14D078E:6522456D.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1603,react-native-cross-geolocation,aMarCruz,N/A,N/A,https://api.github.com/repos/aMarCruz/react-native-cross-geolocation,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C156:4F4C:7551F1:F21D84:6522456D.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1604,streetview-panorama,AngLaboratory,N/A,N/A,https://api.github.com/repos/AngLaboratory/streetview-panorama,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C133:5F41:720E5B:EBD56B:6522456E.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1605,Team3_EVerywhere,Team-Perseus,N/A,N/A,https://api.github.com/repos/Team-Perseus/Team3_EVerywhere,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1A1:4179:2E1E73E:5E62D00:6522456F.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1606,Uber-Clone,cbedroid,N/A,N/A,https://api.github.com/repos/cbedroid/Uber-Clone,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C158:4F4C:755421:F221DD:6522456F.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1607,GEO_LOCATOR,SEODEMON,N/A,N/A,https://api.github.com/repos/SEODEMON/GEO_LOCATOR,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C113:73C7:743DAD:F0050A:65224570.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1608,map,Baroshem,N/A,N/A,https://api.github.com/repos/Baroshem/map,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1E3:2CBC:7A74DF:FC6665:65224570.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1609,reactjs-challenge-loopscape,gelzinn,N/A,N/A,https://api.github.com/repos/gelzinn/reactjs-challenge-loopscape,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C137:6A74:1A5EB5C:3650848:65224571.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1610,LocationPicker,nadiabridge,N/A,N/A,https://api.github.com/repos/nadiabridge/LocationPicker,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C15F:784E:78A61C:F91A41:65224571.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1611,flutter_googlemaps,AshokNaik009,N/A,N/A,https://api.github.com/repos/AshokNaik009/flutter_googlemaps,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C148:0E7B:1A5F1F6:36529BA:65224572.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1612,html-distance-route-maps,batuhankok,N/A,N/A,https://api.github.com/repos/batuhankok/html-distance-route-maps,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C18E:6EE6:7123FB:E9F444:65224573.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1613,agm-maps-demo,muhammadawaisshaikh,N/A,N/A,https://api.github.com/repos/muhammadawaisshaikh/agm-maps-demo,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1DD:1F34:1BD1E25:392DF9C:65224573.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1614,google_maps_directions,bienvenuelisis,N/A,N/A,https://api.github.com/repos/bienvenuelisis/google_maps_directions,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C160:6EE6:71255C:E9F715:65224574.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1615,google-maps-viewer,doishub,N/A,N/A,https://api.github.com/repos/doishub/google-maps-viewer,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C123:418F:2A9E6D4:5723063:65224574.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1616,google-maps-military-mission-editor,GirkovArpa,N/A,N/A,https://api.github.com/repos/GirkovArpa/google-maps-military-mission-editor,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1E5:2CBC:7A7A48:FC716C:65224575.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1617,geotastic-map-maker,Cimera42,N/A,N/A,https://api.github.com/repos/Cimera42/geotastic-map-maker,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1A9:3819:1B1F754:37C66CE:65224575.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1618,Maps,sergiopani,N/A,N/A,https://api.github.com/repos/sergiopani/Maps,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C182:1F34:1BD21B6:392E706:65224576.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1619,AndroidGoogleMaps-API,darwish791,N/A,N/A,https://api.github.com/repos/darwish791/AndroidGoogleMaps-API,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C167:64D2:75B8F6:F30019:65224577.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1620,Google-Map-Service,rubylab,N/A,N/A,https://api.github.com/repos/rubylab/Google-Map-Service,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C188:5A27:74828F:F0AD5B:65224577.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1621,Snapchat-UI-Redesign,harshkumarkhatri,N/A,N/A,https://api.github.com/repos/harshkumarkhatri/Snapchat-UI-Redesign,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1A9:3819:1B1FA44:37C6CB4:65224578.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1622,Patterner-googlemap-patterns,AmosKorir,N/A,N/A,https://api.github.com/repos/AmosKorir/Patterner-googlemap-patterns,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1F3:5F41:721B0D:EBEF6E:65224578.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1623,Discovering-water-reservoir-from-Google-maps-using-Python-OpenCv,iam-mhaseeb,N/A,N/A,https://api.github.com/repos/iam-mhaseeb/Discovering-water-reservoir-from-Google-maps-using-Python-OpenCv,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C12A:784E:78AED6:F92C23:65224579.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1624,Google-map-scraping-using-python-selenium,Pritom-sarker,N/A,N/A,https://api.github.com/repos/Pritom-sarker/Google-map-scraping-using-python-selenium,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1A5:7AEF:2E06ECB:5E1FABE:65224579.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1625,fttx-nuxt,fttx-gr,N/A,N/A,https://api.github.com/repos/fttx-gr/fttx-nuxt,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C115:46E9:7849C5:F81C10:6522457A.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1626,can-places-autocomplete,cherifGsoul,N/A,N/A,https://api.github.com/repos/cherifGsoul/can-places-autocomplete,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1BC:5F41:721DAF:EBF4F1:6522457B.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1627,MapApp--using-google-map-api,sarveshchavan7,N/A,N/A,https://api.github.com/repos/sarveshchavan7/MapApp--using-google-map-api,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C123:418F:2A9EFCE:572428E:6522457B.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1628,College-Tracker-GeoLocator-,abdulamite,N/A,N/A,https://api.github.com/repos/abdulamite/College-Tracker-GeoLocator-,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C16C:7B3E:7A70DA:FC1FCC:6522457C.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1629,mappyBase,SjoenH,N/A,N/A,https://api.github.com/repos/SjoenH/mappyBase,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C100:29CE:33359EB:6883562:6522457C.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1630,Scraplex,haupt-pascal,N/A,N/A,https://api.github.com/repos/haupt-pascal/Scraplex,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C173:4179:2E1F7F0:5E64F42:6522457D.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1631,Transformalize.Transform.GoogleMaps,dalenewman,N/A,N/A,https://api.github.com/repos/dalenewman/Transformalize.Transform.GoogleMaps,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C194:4E78:730ACB:EDC241:6522457D.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1632,google_maps_juice,algonauti,N/A,N/A,https://api.github.com/repos/algonauti/google_maps_juice,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C128:73C7:744F24:F028D4:6522457E.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1633,Interactive-Infowindow-Google-Map-Android,ALPhaHoai,N/A,N/A,https://api.github.com/repos/ALPhaHoai/Interactive-Infowindow-Google-Map-Android,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1D0:3BF5:76BC9B:F4E9C6:6522457F.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1634,javascript-maps-api,devenes,N/A,N/A,https://api.github.com/repos/devenes/javascript-maps-api,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1B8:29CE:3335DA6:6883CF7:6522457F.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1635,html-5-google-maps-view,didinj,N/A,N/A,https://api.github.com/repos/didinj/html-5-google-maps-view,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C140:4F4C:756823:F24AE9:65224580.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1636,ember-cli-google,onehilltech,N/A,N/A,https://api.github.com/repos/onehilltech/ember-cli-google,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C16B:784E:78B75B:F93D8E:65224580.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1637,google-maps-draw-shape-react,tiagocavaco,N/A,N/A,https://api.github.com/repos/tiagocavaco/google-maps-draw-shape-react,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C134:0C72:7516A0:F1E532:65224581.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1638,gpx-streetview-imager,isaychris,N/A,N/A,https://api.github.com/repos/isaychris/gpx-streetview-imager,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C16C:7B3E:7A77A0:FC2DBD:65224582.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1639,aris_map,ariscybertech,N/A,N/A,https://api.github.com/repos/ariscybertech/aris_map,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C15F:784E:78B95D:F941D9:65224582.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1640,236-google-maps-api-with-stimulusjs,driftingruby,N/A,N/A,https://api.github.com/repos/driftingruby/236-google-maps-api-with-stimulusjs,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1F8:5934:2892977:536DE3A:65224583.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1641,2016-Syracuse-Civic-Data-Hackathon,leabs,N/A,N/A,https://api.github.com/repos/leabs/2016-Syracuse-Civic-Data-Hackathon,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1EF:7B5B:75F3B5:F33B73:65224583.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1642,google-map-for-gutenberg,relstudiosnx,N/A,N/A,https://api.github.com/repos/relstudiosnx/google-map-for-gutenberg,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C14B:5934:2892A6F:536E03E:65224584.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1643,snazzy,aazuspan,N/A,N/A,https://api.github.com/repos/aazuspan/snazzy,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C10F:0E7B:1A60AD5:3655C99:65224585.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1644,Why-you-should-stop-using-Google-Maps,seanpm2001,N/A,N/A,https://api.github.com/repos/seanpm2001/Why-you-should-stop-using-Google-Maps,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1D1:6A74:1A602DC:365387E:65224585.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1645,adding-google-maps-to-a-flutter-app,guvenkarabulut,N/A,N/A,https://api.github.com/repos/guvenkarabulut/adding-google-maps-to-a-flutter-app,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C174:5831:2BE97D8:59FDE58:65224586.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1646,saved-places-importer,yvesonline,N/A,N/A,https://api.github.com/repos/yvesonline/saved-places-importer,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C122:5934:2892D1F:536E5C4:65224586.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1647,Gradientpoly,Moneemsaadaoui,N/A,N/A,https://api.github.com/repos/Moneemsaadaoui/Gradientpoly,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1F0:505E:79628E:FA38BA:65224587.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1648,GMapsTest,illescasDaniel,N/A,N/A,https://api.github.com/repos/illescasDaniel/GMapsTest,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1AB:7AEF:2E07FDE:5E21DDE:65224587.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1649,CircleLocationPicker,Abouelyatim,N/A,N/A,https://api.github.com/repos/Abouelyatim/CircleLocationPicker,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1B2:418F:2A9FFC8:57262D8:65224588.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1650,fridgefit,rocksteadyrose,N/A,N/A,https://api.github.com/repos/rocksteadyrose/fridgefit,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C147:6AF3:28BB5B9:537BF28:65224412.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1651,Directions-API-Test-using-Python,KentaItakura,N/A,N/A,https://api.github.com/repos/KentaItakura/Directions-API-Test-using-Python,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C145:7B5B:75F9D4:F3482F:65224588.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1652,google-maps,haiigas,N/A,N/A,https://api.github.com/repos/haiigas/google-maps,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C198:18E3:2D5E3F:5E799A:65224589.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1653,hms-maps-samples,m0skit0,N/A,N/A,https://api.github.com/repos/m0skit0/hms-maps-samples,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C15A:68AA:2EDEB39:5FFA518:6522458A.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1654,iOSGoogleMapsDirections,amitdhawan,N/A,N/A,https://api.github.com/repos/amitdhawan/iOSGoogleMapsDirections,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1A5:5B68:2E62AD:60A493:6522458A.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1655,Map-ReactNative,superstar1205,N/A,N/A,https://api.github.com/repos/superstar1205/Map-ReactNative,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1F3:6584:287FAEF:5347A9C:6522458B.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1656,Google-Maps,Malibu54,N/A,N/A,https://api.github.com/repos/Malibu54/Google-Maps,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1AF:643D:2A72AE6:570EA4D:6522458B.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1657,googlemapdownloader,cromagn,N/A,N/A,https://api.github.com/repos/cromagn/googlemapdownloader,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C16B:38A4:2C1A6B2:5A80951:6522458C.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1658,GMapsScraper,Anonym0usWork1221,N/A,N/A,https://api.github.com/repos/Anonym0usWork1221/GMapsScraper,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1FB:1E37:2F174D:61DFA3:6522458D.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1659,gm-with-osm,dkarakay,N/A,N/A,https://api.github.com/repos/dkarakay/gm-with-osm,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C12F:458F:2C93819:5B6AFB6:6522458D.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1660,Why-you-should-have-avoided-Google-Maps-Maker,seanpm2001,N/A,N/A,https://api.github.com/repos/seanpm2001/Why-you-should-have-avoided-Google-Maps-Maker,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C15D:17C0:2CFF66:5DD3A9:6522458E.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1661,googlemaps-demo,jljvdm,N/A,N/A,https://api.github.com/repos/jljvdm/googlemaps-demo,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C16A:336C:2D4BACF:5CDCAB3:6522458E.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1662,Why-you-should-have-avoided-Google-Maps-Navigation,seanpm2001,N/A,N/A,https://api.github.com/repos/seanpm2001/Why-you-should-have-avoided-Google-Maps-Navigation,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1CE:797D:2C1CC3:5BF9D3:6522458E.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1663,Google-Maps-Review-Scraper,aj4abinjacob,N/A,N/A,https://api.github.com/repos/aj4abinjacob/Google-Maps-Review-Scraper,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C183:1CC6:2A8330D:5742A87:6522458F.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1664,Project-Map,MadFlasheroo7,N/A,N/A,https://api.github.com/repos/MadFlasheroo7/Project-Map,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C104:4771:2EA1D7:60E7E5:6522458F.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1665,Maps-for-Windows,asheroto,N/A,N/A,https://api.github.com/repos/asheroto/Maps-for-Windows,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1CD:6584:2880099:534863A:65224590.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1666,Hiring_Task,HakanCava,N/A,N/A,https://api.github.com/repos/HakanCava/Hiring_Task,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1D3:8AB4:29F9784:5630D7D:65224590.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1667,flickr-maps,pranavjindal999,N/A,N/A,https://api.github.com/repos/pranavjindal999/flickr-maps,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C18E:6B96:28B34A4:53C284A:65224591.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1668,google-maps,liepaja,N/A,N/A,https://api.github.com/repos/liepaja/google-maps,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C195:6C98:2EFA49:61B133:65224591.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1669,silverware-google-maps,praxisnetau,N/A,N/A,https://api.github.com/repos/praxisnetau/silverware-google-maps,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1CE:797D:2C1F84:5BFF97:65224591.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1670,PSMA-Maps,tasiuwasiu,N/A,N/A,https://api.github.com/repos/tasiuwasiu/PSMA-Maps,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C19F:2EE5:28A3568:539C213:65224592.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1671,GoogleMaps,deonvz,N/A,N/A,https://api.github.com/repos/deonvz/GoogleMaps,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1DE:3B38:31E90E:6767ED:65224593.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1672,flutter_google_maps,tduongtad1304,N/A,N/A,https://api.github.com/repos/tduongtad1304/flutter_google_maps,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C158:3119:2C3F959:5AB0F8C:65224593.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1673,kludgy,mhulse,N/A,N/A,https://api.github.com/repos/mhulse/kludgy,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C132:6C98:2EFCEF:61B683:65224594.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1674,php-google-maps-api,muhittingulap,N/A,N/A,https://api.github.com/repos/muhittingulap/php-google-maps-api,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C18E:6B96:28B38F3:53C3106:65224594.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1675,MapZoneTool,emoran,N/A,N/A,https://api.github.com/repos/emoran/MapZoneTool,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C173:1D49:2C9CBAC:5B7314D:65224595.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1676,googlemaps,geertboetzkes,N/A,N/A,https://api.github.com/repos/geertboetzkes/googlemaps,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C182:0208:2E3BE00:5EB30A8:65224596.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1677,SimpleGoogleMapsExample,quicklearner4991,N/A,N/A,https://api.github.com/repos/quicklearner4991/SimpleGoogleMapsExample,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C17F:6EA3:2D3829:5E2C7B:65224596.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1678,Google-Map,85599,N/A,N/A,https://api.github.com/repos/85599/Google-Map,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C161:406C:2F06F8:61C4CD:65224596.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1679,arrival,KrishayR,N/A,N/A,https://api.github.com/repos/KrishayR/arrival,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C131:4776:3005C9:63B331:65224597.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1680,TweetMap,chinmayms,N/A,N/A,https://api.github.com/repos/chinmayms/TweetMap,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1C0:6C98:2F0129:61BF49:65224598.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1681,ngx-place-picker,itsTeknas,N/A,N/A,https://api.github.com/repos/itsTeknas/ngx-place-picker,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1EE:1CC6:2A83C87:5743E0A:65224598.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1682,google_maps_api,zach-col,N/A,N/A,https://api.github.com/repos/zach-col/google_maps_api,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C193:0BEC:2DAD4A:5F2AD2:65224598.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1683,DMMapp-Open-Source,SexyCodicology,N/A,N/A,https://api.github.com/repos/SexyCodicology/DMMapp-Open-Source,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C12D:2E63:2E3B33:603B67:65224599.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1684,google_maps_with_marker,hammad-alee,N/A,N/A,https://api.github.com/repos/hammad-alee/google_maps_with_marker,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1AE:1CC6:2A83E3F:5744185:65224599.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1685,maps_nearby_places,sgkandale,N/A,N/A,https://api.github.com/repos/sgkandale/maps_nearby_places,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C169:6829:2E98789:5F6DFF2:6522459A.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1686,Google-Maps-With-Directions,apo-bozdag,N/A,N/A,https://api.github.com/repos/apo-bozdag/Google-Maps-With-Directions,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C156:3493:275DBCD:510B681:6522459A.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1687,Google-maps-sdk-android,DrassApps,N/A,N/A,https://api.github.com/repos/DrassApps/Google-maps-sdk-android,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C125:6829:2E988CD:5F6E26D:6522459B.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1688,mobl-maps-api,methodbox,N/A,N/A,https://api.github.com/repos/methodbox/mobl-maps-api,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1FB:1E37:2F28DF:620389:6522459C.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1689,Google-Maps-Route-Creator,iThink32,N/A,N/A,https://api.github.com/repos/iThink32/Google-Maps-Route-Creator,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C17D:33C6:2A44D04:56DD258:6522459C.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1690,google-maps-places,goveo,N/A,N/A,https://api.github.com/repos/goveo/google-maps-places,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C104:4771:2EAE2C:61010F:6522459A.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1691,GoogleMapsAPI,alecdalelio,N/A,N/A,https://api.github.com/repos/alecdalelio/GoogleMapsAPI,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1B5:797D:2C2A4A:5C15C1:6522459B.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1692,GoogleMapsVaadin,stylder,N/A,N/A,https://api.github.com/repos/stylder/GoogleMapsVaadin,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C183:1CC6:2A84098:574464F:6522459B.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1693,svelte-google-maps-api,skyt-a,N/A,N/A,https://api.github.com/repos/skyt-a/svelte-google-maps-api,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C15F:1E37:2F296E:6204D2:6522459C.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1694,GoogleMapsScraper,pteras,N/A,N/A,https://api.github.com/repos/pteras/GoogleMapsScraper,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C11F:1E37:2F2A7A:620707:6522459D.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1695,02-Maps_UI,Prd1899,N/A,N/A,https://api.github.com/repos/Prd1899/02-Maps_UI,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C16E:3493:275DF66:510BE0B:6522459D.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1696,Google-Maps-API-Course,KauaMB2,N/A,N/A,https://api.github.com/repos/KauaMB2/Google-Maps-API-Course,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1B1:505E:314AD4:66287F:6522459E.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1697,Google-maps-cycling-Arduino,martinius96,N/A,N/A,https://api.github.com/repos/martinius96/Google-maps-cycling-Arduino,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1AE:1CC6:2A84470:5744E32:6522459E.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1698,random-google-maps,robertjbass,N/A,N/A,https://api.github.com/repos/robertjbass/random-google-maps,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1F2:7A65:2DC223:5F4F3B:6522459F.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1699,google-maps-api-enhanced,Shaunmak1214,N/A,N/A,https://api.github.com/repos/Shaunmak1214/google-maps-api-enhanced,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1CC:33C6:2A451FA:56DDC7E:652245A0.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1700,Google_maps_test,DanielPetelin,N/A,N/A,https://api.github.com/repos/DanielPetelin/Google_maps_test,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1E6:7890:2DBAE6:5F3CC3:652245A0.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1701,geocoder-free,thundermiracle,N/A,N/A,https://api.github.com/repos/thundermiracle/geocoder-free,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C163:1E37:2F2F9D:621171:652245A1.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1702,react-ts-google-maps-example,steldevs,N/A,N/A,https://api.github.com/repos/steldevs/react-ts-google-maps-example,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C11D:336C:2D4D0B9:5CDF797:652245A1.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1703,SelectAndSharePlace,J0kk3,N/A,N/A,https://api.github.com/repos/J0kk3/SelectAndSharePlace,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C195:6C98:2F0C0F:61D5B5:652245A2.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1704,MultiStopOPT,Regista6,N/A,N/A,https://api.github.com/repos/Regista6/MultiStopOPT,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1E4:3493:275E5E3:510CB23:652245A2.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1705,googlemaps111,Banza0010,N/A,N/A,https://api.github.com/repos/Banza0010/googlemaps111,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C135:61FF:2FF26B:6386C4:652245A3.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1706,Google-Map-Api-integration,EliteDevSolution,N/A,N/A,https://api.github.com/repos/EliteDevSolution/Google-Map-Api-integration,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C184:1560:292C6C0:549A65B:652245A4.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1707,jquery-gmap,lgraubner,N/A,N/A,https://api.github.com/repos/lgraubner/jquery-gmap,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1F0:9938:2A071FE:56454BA:652245A4.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1708,google-map-js-demo,tichondrius,N/A,N/A,https://api.github.com/repos/tichondrius/google-map-js-demo,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1BB:6C98:2F0F7E:61DCCF:652245A5.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1709,google_map_demo,ahmedaefattah,N/A,N/A,https://api.github.com/repos/ahmedaefattah/google_map_demo,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C16E:3493:275E944:510D20D:652245A5.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1710,Floyd-Warshall,srijitcoder,N/A,N/A,https://api.github.com/repos/srijitcoder/Floyd-Warshall,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C100:336C:2D4D7A7:5CE05C6:652245A6.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1711,add-esc-key-on-google-maps,gslin,N/A,N/A,https://api.github.com/repos/gslin/add-esc-key-on-google-maps,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C16C:1ECC:2EC09D:6143C5:652245A7.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1712,CapstoneKSU2021,baileyknez,N/A,N/A,https://api.github.com/repos/baileyknez/CapstoneKSU2021,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C14D:1CC6:2A84F6F:57464AE:652245A7.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1713,taxiapp,sakthibro,N/A,N/A,https://api.github.com/repos/sakthibro/taxiapp,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1E9:47EE:2BDAEF5:59F961D:652245A8.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1714,google-maps-javascript-api-reference,ashwani-luhaniwal,N/A,N/A,https://api.github.com/repos/ashwani-luhaniwal/google-maps-javascript-api-reference,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C156:3493:275EC77:510D8B3:652245A8.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1715,Palestine,Aissaoui-Ahmed,N/A,N/A,https://api.github.com/repos/Aissaoui-Ahmed/Palestine,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1E8:3B38:31FF8B:67966C:652245A9.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1716,novicell-map,Novicell,N/A,N/A,https://api.github.com/repos/Novicell/novicell-map,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C18E:6B96:28B56B5:53C6D6A:652245AA.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1717,UserLocationOnMap,SayantanBanerjee16,N/A,N/A,https://api.github.com/repos/SayantanBanerjee16/UserLocationOnMap,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C181:38A4:2C1D137:5A8600D:652245AA.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1718,GoogleMapDemo,mehulparmar4ever,N/A,N/A,https://api.github.com/repos/mehulparmar4ever/GoogleMapDemo,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1B8:1560:292D11C:549BB57:652245AB.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1719,TaxiTap,llupRisinglll,N/A,N/A,https://api.github.com/repos/llupRisinglll/TaxiTap,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1B0:7E09:2635314:4EBE262:652245AB.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1720,KML_Converter_maps.me_to_google,DeepHyperspace,N/A,N/A,https://api.github.com/repos/DeepHyperspace/KML_Converter_maps.me_to_google,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1BF:458F:2C9615A:5B70421:652245AC.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1721,Google-Map,dinushchathurya,N/A,N/A,https://api.github.com/repos/dinushchathurya/Google-Map,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C159:1CC6:2A8556F:5747101:652245AC.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1722,Google-Maps-Examples,nora-soderlund,N/A,N/A,https://api.github.com/repos/nora-soderlund/Google-Maps-Examples,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1AB:0208:2E3E010:5EB7634:652245AD.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1723,DistanceMadeEasy-GoogleMapsAPI,SaidAnir,N/A,N/A,https://api.github.com/repos/SaidAnir/DistanceMadeEasy-GoogleMapsAPI,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C10C:4776:30216E:63EBF9:652245AE.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1724,vue-random-airport,alcovegan,N/A,N/A,https://api.github.com/repos/alcovegan/vue-random-airport,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C121:1D49:2C9F099:5B77CB5:652245AE.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1725,marker-clusterer-ssr,beyonk-group,N/A,N/A,https://api.github.com/repos/beyonk-group/marker-clusterer-ssr,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C189:6EA3:2D51DB:5E614E:652245AF.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1726,stencil-map,marcusschiesser,N/A,N/A,https://api.github.com/repos/marcusschiesser/stencil-map,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1EC:17C0:2D2018:5E16AC:652245AF.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1727,delivex,Abu-muhab,N/A,N/A,https://api.github.com/repos/Abu-muhab/delivex,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C11D:336C:2D4E475:5CE1FD0:652245B0.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1728,LABCAR,EmmAlva,N/A,N/A,https://api.github.com/repos/EmmAlva/LABCAR,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C130:3B38:3207E5:67A75D:652245B0.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1729,Graduation-Project,mdhDesign,N/A,N/A,https://api.github.com/repos/mdhDesign/Graduation-Project,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1A2:18E3:2D8442:5EC7E8:652245B1.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1730,django-google-geocoding,PraneethKarnena,N/A,N/A,https://api.github.com/repos/PraneethKarnena/django-google-geocoding,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C17E:1D49:2C9F5D4:5B78753:652245B2.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1731,freightmap,Madeeha-Anjum,N/A,N/A,https://api.github.com/repos/Madeeha-Anjum/freightmap,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C156:3493:275F6D4:510EE06:652245B2.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1732,google-places-finder,groundcat,N/A,N/A,https://api.github.com/repos/groundcat/google-places-finder,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1CF:6B96:28B6215:53C84E2:652245B3.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1733,g-road-map,odipixel,N/A,N/A,https://api.github.com/repos/odipixel/g-road-map,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C148:1ECC:2ECE54:615FBB:652245B4.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1734,need-app-to-view-this-data-from-google-map-history,Jessewestmeyer,N/A,N/A,https://api.github.com/repos/Jessewestmeyer/need-app-to-view-this-data-from-google-map-history,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C197:1560:292DCDF:549D372:652245B4.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1735,LightningMap,zyzbroker,N/A,N/A,https://api.github.com/repos/zyzbroker/LightningMap,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C143:9938:2A0884F:564824A:652245B5.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1736,google-embed-php,Frolki1-Dev,N/A,N/A,https://api.github.com/repos/Frolki1-Dev/google-embed-php,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1C2:643D:2A75DD3:571522C:652245B5.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1737,RealtimeTraffic_Home_2010,jbb26354,N/A,N/A,https://api.github.com/repos/jbb26354/RealtimeTraffic_Home_2010,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C122:17C0:2D265C:5E2396:652245B6.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1738,modern-pan-zoom,404-html,N/A,N/A,https://api.github.com/repos/404-html/modern-pan-zoom,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C128:6D2F:321882:67F1D6:652245B6.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1739,Locator,kutigbolahan,N/A,N/A,https://api.github.com/repos/kutigbolahan/Locator,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1BF:458F:2C96E5A:5B71EB2:652245B7.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1740,flutter_places,GeekAbdelouahed,N/A,N/A,https://api.github.com/repos/GeekAbdelouahed/flutter_places,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C13B:17C0:2D27F6:5E26E4:652245B8.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1741,alexa_maps,coltoncs,N/A,N/A,https://api.github.com/repos/coltoncs/alexa_maps,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C150:7A65:2DD98B:5F7F96:652245B8.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1742,GoogleGeolocation,lukasalexanderweber,N/A,N/A,https://api.github.com/repos/lukasalexanderweber/GoogleGeolocation,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C195:6C98:2F250C:6208D4:652245B9.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1743,Restaurants,praveenkumarh2015,N/A,N/A,https://api.github.com/repos/praveenkumarh2015/Restaurants,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C15B:1ECC:2ED414:616BC2:652245B9.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1744,Google-map-api-js,ArianulIslam,N/A,N/A,https://api.github.com/repos/ArianulIslam/Google-map-api-js,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1B1:505E:31694D:6666D6:652245BA.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1745,G.E.O.,BenSFGamer,N/A,N/A,https://api.github.com/repos/BenSFGamer/G.E.O.,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C156:3493:275FEF7:510FEE7:652245BB.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1746,Google-Map,Sagar-Sharma-7,N/A,N/A,https://api.github.com/repos/Sagar-Sharma-7/Google-Map,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C148:1ECC:2ED5AC:616F0E:652245BB.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1747,react-native-map,ekremcoban,N/A,N/A,https://api.github.com/repos/ekremcoban/react-native-map,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1A3:47EA:26EF0BC:4FFBE3E:652245BC.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1748,ez-gmaps,ropfoo,N/A,N/A,https://api.github.com/repos/ropfoo/ez-gmaps,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1AF:643D:2A7659A:571621B:652245BC.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1749,Show-Hide-Google-Maps-Containers,kraskoo,N/A,N/A,https://api.github.com/repos/kraskoo/Show-Hide-Google-Maps-Containers,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C158:3119:2C430D3:5AB80CC:652245BD.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1750,statistics-from-addresses,L0y3r,N/A,N/A,https://api.github.com/repos/L0y3r/statistics-from-addresses,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1EC:17C0:2D2D14:5E3188:652245BD.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1751,ProtectedAgriculture-GEE,thealejandroperilla,N/A,N/A,https://api.github.com/repos/thealejandroperilla/ProtectedAgriculture-GEE,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C12F:78AC:27BFB10:518CAFC:65224036.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1752,gardner_typescript_examples,rustkas,N/A,N/A,https://api.github.com/repos/rustkas/gardner_typescript_examples,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C13D:2EE5:28A6AF4:53A2FD1:652245BE.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1753,weather-map,shatyajeet,N/A,N/A,https://api.github.com/repos/shatyajeet/weather-map,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C170:500E:2AA7096:578AE69:652245BF.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1754,GOOGLEMAPS_SCREENSHOT_AUTOMATION,competencytestlvl,N/A,N/A,https://api.github.com/repos/competencytestlvl/GOOGLEMAPS_SCREENSHOT_AUTOMATION,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1BB:6C98:2F2B4E:621590:652245BF.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1755,teste_agence,danieldcastro,N/A,N/A,https://api.github.com/repos/danieldcastro/teste_agence,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C183:1CC6:2A86B31:5749DB2:652245C0.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1756,GMapCurrentLoction,tayyabmughal676,N/A,N/A,https://api.github.com/repos/tayyabmughal676/GMapCurrentLoction,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1AD:17C0:2D2F60:5E364F:652245C0.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1757,traveliko,onlyilkr,N/A,N/A,https://api.github.com/repos/onlyilkr/traveliko,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C154:38A4:2C1F312:5A8A4F1:652245C1.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1758,yase,maxmazzeschi,N/A,N/A,https://api.github.com/repos/maxmazzeschi/yase,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C107:33EB:2FD340:6361A9:652245C1.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1759,Conversos_CR7_KML,Vinggui,N/A,N/A,https://api.github.com/repos/Vinggui/Conversos_CR7_KML,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1D1:1E37:2F5602:626028:652245C2.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1760,anam123.github.io,anam123,N/A,N/A,https://api.github.com/repos/anam123/anam123.github.io,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C17B:29CE:333BF96:6890580:652245C3.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1761,react-gmap,vah7id,N/A,N/A,https://api.github.com/repos/vah7id/react-gmap,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C14F:607B:7C4522:100049B:652245C3.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1762,My-Superstar,ucv,N/A,N/A,https://api.github.com/repos/ucv/My-Superstar,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C179:1299:A19831:14DD7A8:652245C4.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1763,Weather-Engine,amartyabiswas,N/A,N/A,https://api.github.com/repos/amartyabiswas/Weather-Engine,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1BF:7B5B:763EC6:F3D5EC:652245C4.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1764,platzi-conf-merch,matiasrolon,N/A,N/A,https://api.github.com/repos/matiasrolon/platzi-conf-merch,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C149:7B5B:763F4B:F3D6F6:652245C5.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1765,GPSExample,tejasgawali4,N/A,N/A,https://api.github.com/repos/tejasgawali4/GPSExample,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C136:87DB:303BC00:627F34B:652245C5.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1766,gmap-laravue-test,denyherianto,N/A,N/A,https://api.github.com/repos/denyherianto/gmap-laravue-test,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C139:5934:2897D4E:5378A26:652245C6.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1767,gezonde_looproutes,sanderbrugge,N/A,N/A,https://api.github.com/repos/sanderbrugge/gezonde_looproutes,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C13A:8AF9:73FAC2:EFC5E4:652245C7.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1768,Google-Distance-Matrix-api,AmirMGhanem,N/A,N/A,https://api.github.com/repos/AmirMGhanem/Google-Distance-Matrix-api,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C18B:4D66:6F77D7:E6BBA2:652245C7.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1769,KhanGoogleGeocoder,chaudarywajid,N/A,N/A,https://api.github.com/repos/chaudarywajid/KhanGoogleGeocoder,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C110:3F63:2EBE509:5FA197F:652245C8.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1770,roundaround,xeoneux,N/A,N/A,https://api.github.com/repos/xeoneux/roundaround,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C17D:05EF:71AA68:EB0D95:652245C8.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1771,ssh-key-manager,utilitywarehouse,N/A,N/A,https://api.github.com/repos/utilitywarehouse/ssh-key-manager,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1B6:1E3B:3007DAA:622447B:652245C9.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1772,MapMarker,Little0ne95,N/A,N/A,https://api.github.com/repos/Little0ne95/MapMarker,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1D2:1E3B:3007E68:62245FF:652245C9.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1773,QualtricsMapping,bowers-illinois-edu,N/A,N/A,https://api.github.com/repos/bowers-illinois-edu/QualtricsMapping,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C114:7AEF:2E0D6CA:5E2CFAE:652245CA.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1774,sf-police-calls,bonnal-enzo,N/A,N/A,https://api.github.com/repos/bonnal-enzo/sf-police-calls,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C12F:6A74:1A64F63:365D622:652245CB.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1775,fttx-vue,fttx-gr,N/A,N/A,https://api.github.com/repos/fttx-gr/fttx-vue,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1CF:1F34:1BD8779:393B7EB:652245CB.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1776,PHPReverseLatLon,brightboxtech,N/A,N/A,https://api.github.com/repos/brightboxtech/PHPReverseLatLon,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C136:87DB:303C4B4:628051B:652245CC.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1777,Angular-Sockets-Server,leandrotomassini,N/A,N/A,https://api.github.com/repos/leandrotomassini/Angular-Sockets-Server,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C16A:58D0:7A6EE6:FC016E:652245CC.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1778,world-map-fire-volcano,ArtemKhairov,N/A,N/A,https://api.github.com/repos/ArtemKhairov/world-map-fire-volcano,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1CA:178A:2CD9640:5BD22C3:652245CD.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1779,PlacesNearMe,mujtabamahmood,N/A,N/A,https://api.github.com/repos/mujtabamahmood/PlacesNearMe,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C18C:178A:2CD96D1:5BD23DC:652245CD.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1780,World_Weather_Analysis,YolandaCasica,N/A,N/A,https://api.github.com/repos/YolandaCasica/World_Weather_Analysis,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C169:41B1:73C755:EF933E:652245CE.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1781,custommaps,rafamarins,N/A,N/A,https://api.github.com/repos/rafamarins/custommaps,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1FA:37E7:2D4FCA7:5CCAE42:652245CF.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1782,gmaps-screenshot,sskender,N/A,N/A,https://api.github.com/repos/sskender/gmaps-screenshot,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1E4:4179:2E25A11:5E718D7:652245CF.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1783,Map-Organizer,kspenc97,N/A,N/A,https://api.github.com/repos/kspenc97/Map-Organizer,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C115:46E9:78B2DF:F8F3CC:652245D0.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1784,embedconsent,phifa,N/A,N/A,https://api.github.com/repos/phifa/embedconsent,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1CC:6A74:1A654DA:365E156:652245D0.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1785,gmaps-overlay-tool,matheusalbino,N/A,N/A,https://api.github.com/repos/matheusalbino/gmaps-overlay-tool,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C167:64D2:7624BF:F3DD46:652245D1.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1786,custom_place_picker,Arlovzki,N/A,N/A,https://api.github.com/repos/Arlovzki/custom_place_picker,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1DA:178A:2CD9B04:5BD2C86:652245D1.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1787,rand-street-view,mhulse,N/A,N/A,https://api.github.com/repos/mhulse/rand-street-view,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1DD:1F34:1BD8E84:393C674:652245D2.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1788,map-link-converter,imhalid,N/A,N/A,https://api.github.com/repos/imhalid/map-link-converter,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1EB:4F4C:75C45F:F308AD:652245D2.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1789,RunMapper,sirtopas,N/A,N/A,https://api.github.com/repos/sirtopas/RunMapper,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C12E:1299:A1A952:14DFAB2:652245D3.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1790,RunMapper,sirtopas,N/A,N/A,https://api.github.com/repos/sirtopas/RunMapper,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C12E:1299:A1A952:14DFAB2:652245D3.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1791,GoogleMapwithCustomeMarker_in_Kotlin,SarfarazAliToori,N/A,N/A,https://api.github.com/repos/SarfarazAliToori/GoogleMapwithCustomeMarker_in_Kotlin,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C162:5831:2BEF2EA:5A09904:652245D4.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1792,google-address-autocomplete,CodaKris,N/A,N/A,https://api.github.com/repos/CodaKris/google-address-autocomplete,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C16B:784E:791033:F9F496:652245D4.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1793,hollywood-map-project,ebruin22,N/A,N/A,https://api.github.com/repos/ebruin22/hollywood-map-project,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1B7:4179:2E26038:5E72568:652245D4.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1794,guide-to-seoul,jkimpro,N/A,N/A,https://api.github.com/repos/jkimpro/guide-to-seoul,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C11A:58D0:7A76F2:FC1206:652245D4.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1795,React_Google_Map,happyman125,N/A,N/A,https://api.github.com/repos/happyman125/React_Google_Map,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1E3:2CBC:7AEE1E:FD5E32:652245D5.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1796,google-map,mbpcoder,N/A,N/A,https://api.github.com/repos/mbpcoder/google-map,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1C7:1E3B:3008CB0:622634E:652245D5.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1797,google-mymaps-to-markdown,iddan,N/A,N/A,https://api.github.com/repos/iddan/google-mymaps-to-markdown,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C126:4179:2E26225:5E729E5:652245D6.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1798,tracking-demo,samiahmedsiddiqui,N/A,N/A,https://api.github.com/repos/samiahmedsiddiqui/tracking-demo,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1BC:5F41:72865E:ECCB69:652245D7.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1799,TravelAdvisor-FE,Boat718,N/A,N/A,https://api.github.com/repos/Boat718/TravelAdvisor-FE,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C10C:64D2:762C3E:F3ECB2:652245D7.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1800,projectSumissionDipper,giripriya,N/A,N/A,https://api.github.com/repos/giripriya/projectSumissionDipper,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1FD:5934:2898FAC:537AFEA:652245D6.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1801,Anuket-docs,HomeInside,N/A,N/A,https://api.github.com/repos/HomeInside/Anuket-docs,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C13B:4678:1B05CB5:37A4E09:652245D8.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1802,Web-Design-Challenge,speedracer05,N/A,N/A,https://api.github.com/repos/speedracer05/Web-Design-Challenge,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C197:64D2:762DC8:F3EFDD:652245D8.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1803,encombrants,yannick9letallec,N/A,N/A,https://api.github.com/repos/yannick9letallec/encombrants,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1E4:4179:2E267B1:5E734BC:652245D9.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1804,must-visit-iceland,dominicom,N/A,N/A,https://api.github.com/repos/dominicom/must-visit-iceland,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C151:1F34:1BD976C:393D8AE:652245DA.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1805,Neighborhood-Map,rlui001,N/A,N/A,https://api.github.com/repos/rlui001/Neighborhood-Map,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1BA:36DF:35AA32A:6D6A24B:652245DA.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1806,Google_Store_Locator,sailikhithk,N/A,N/A,https://api.github.com/repos/sailikhithk/Google_Store_Locator,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1E6:607B:7C6333:1004227:652245DB.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1807,flutter_07_QR_Reader,lcmurillor,N/A,N/A,https://api.github.com/repos/lcmurillor/flutter_07_QR_Reader,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C152:1F34:1BD997B:393DCF9:652245DB.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1808,worstCompany,NicolasDewae,N/A,N/A,https://api.github.com/repos/NicolasDewae/worstCompany,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C151:1F34:1BD9A34:393DE65:652245DC.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1809,dw-custom-google-map,dantewebmaster,N/A,N/A,https://api.github.com/repos/dantewebmaster/dw-custom-google-map,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C10A:178A:2CDA971:5BD49F6:652245DD.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1810,ios-googlemaps-ev-charge,fraigo,N/A,N/A,https://api.github.com/repos/fraigo/ios-googlemaps-ev-charge,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C11B:1299:A1B78B:14E17DE:652245DD.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1811,servicespk,tahakzed,N/A,N/A,https://api.github.com/repos/tahakzed/servicespk,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C174:5831:2BEFF4A:5A0B246:652245DD.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1812,mapaBase,mhosan,N/A,N/A,https://api.github.com/repos/mhosan/mapaBase,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1B7:4179:2E26E47:5E74218:652245DE.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1813,gmaps-location-history-parser,dwbfox,N/A,N/A,https://api.github.com/repos/dwbfox/gmaps-location-history-parser,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C16E:3AA3:2DE8E7A:5DFBBC9:652245DE.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1814,GeoMudah,darwish791,N/A,N/A,https://api.github.com/repos/darwish791/GeoMudah,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C17E:4E78:7382F4:EEB8B8:652245DF.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1815,find-my-place,AdrianoModa,N/A,N/A,https://api.github.com/repos/AdrianoModa/find-my-place,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1FA:37E7:2D512D9:5CCDBC3:652245DF.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1816,031_CriandoUmSiteParaEncontrarRestaurantesUsandoGoogleMapsAPIGoogle,VagnerBellacosa,N/A,N/A,https://api.github.com/repos/VagnerBellacosa/031_CriandoUmSiteParaEncontrarRestaurantesUsandoGoogleMapsAPIGoogle,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1E9:87DB:303E32E:6284336:652245DF.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1817,GPS,CoccodrillooXDS,N/A,N/A,https://api.github.com/repos/CoccodrillooXDS/GPS,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C182:1F34:1BD9ED4:393E7DF:652245E0.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1818,gmapApiTest,jmtt89,N/A,N/A,https://api.github.com/repos/jmtt89/gmapApiTest,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C127:784E:791DCF:FA10A2:652245E0.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1819,map_app,chathudilzo,N/A,N/A,https://api.github.com/repos/chathudilzo/map_app,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1A3:505E:79B9C5:FAECF3:652245E1.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1820,my-current-position-android,maxgfr,N/A,N/A,https://api.github.com/repos/maxgfr/my-current-position-android,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C114:7AEF:2E0F762:5E3121F:652245E2.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1821,ud-neighbourhood-map-react,yashsati29,N/A,N/A,https://api.github.com/repos/yashsati29/ud-neighbourhood-map-react,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1CB:41B1:73DA3A:EFBA61:652245E2.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1822,MY-PICKUP,LalarrShoplink,N/A,N/A,https://api.github.com/repos/LalarrShoplink/MY-PICKUP,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C151:1F34:1BDA2D2:393EFF9:652245E3.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1823,GoogleExperiment-Datacenter_Globe-JavaScript-CChallenges,clonalejandro,N/A,N/A,https://api.github.com/repos/clonalejandro/GoogleExperiment-Datacenter_Globe-JavaScript-CChallenges,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1AD:36DF:35AB43B:6D6C4F2:652245E3.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1824,datastore-mapper,aiscenblue,N/A,N/A,https://api.github.com/repos/aiscenblue/datastore-mapper,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1D5:4E78:73870D:EEC109:652245E2.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1825,travel-map,IvBre,N/A,N/A,https://api.github.com/repos/IvBre/travel-map,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C18F:4678:1B06BC4:37A6CF2:652245E4.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1826,unplugged-site,HollyLlama,N/A,N/A,https://api.github.com/repos/HollyLlama/unplugged-site,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1D5:4E78:738B35:EEC960:652245E4.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1827,TheSuperSiliconValleyMap,ssantoshp,N/A,N/A,https://api.github.com/repos/ssantoshp/TheSuperSiliconValleyMap,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C190:3BF5:7734DF:F5E07B:652245E4.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1828,periodic-location-update-google,bharatgupta99,N/A,N/A,https://api.github.com/repos/bharatgupta99/periodic-location-update-google,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1DC:309A:2E9521C:5F0BED5:652245E5.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1829,Banned_Google_Reviews,ElectricRCAircraftGuy,N/A,N/A,https://api.github.com/repos/ElectricRCAircraftGuy/Banned_Google_Reviews,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C112:1E3B:300A58B:62295E0:652245E6.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1830,FloodZoneSnapshot,sefatanam,N/A,N/A,https://api.github.com/repos/sefatanam/FloodZoneSnapshot,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1CE:3F63:2EC1102:5FA7342:652245E6.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1831,neighborhood-map,valentinburk,N/A,N/A,https://api.github.com/repos/valentinburk/neighborhood-map,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C154:73C7:74D095:F1313E:652245E7.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1832,myCanopusNavSystem,dpk-edunomics,N/A,N/A,https://api.github.com/repos/dpk-edunomics/myCanopusNavSystem,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1CA:178A:2CDB932:5BD6A1C:652245E8.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1833,huawei_and_google_services,mohaxspb,N/A,N/A,https://api.github.com/repos/mohaxspb/huawei_and_google_services,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C114:7AEF:2E101AC:5E32700:652245E8.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1834,Playground_app,Radicis,N/A,N/A,https://api.github.com/repos/Radicis/Playground_app,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C10E:1E3B:300AA1B:6229F43:652245E9.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1835,ajudeMais-android,AjudeMais,N/A,N/A,https://api.github.com/repos/AjudeMais/ajudeMais-android,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C187:984A:796801:FA6838:652245E9.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1836,TreasureHunt,SebastianGaud,N/A,N/A,https://api.github.com/repos/SebastianGaud/TreasureHunt,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C18C:178A:2CDBCBD:5BD7160:652245EA.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1837,Polygon-Map,fidars,N/A,N/A,https://api.github.com/repos/fidars/Polygon-Map,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C180:6A74:1A67360:3662002:652245EB.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1838,Single-Page-Template,ahmadbosswait,N/A,N/A,https://api.github.com/repos/ahmadbosswait/Single-Page-Template,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C171:05EF:71D101:EB5CDB:652245EB.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1839,smple,imalikshake,N/A,N/A,https://api.github.com/repos/imalikshake/smple,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1D6:984A:796B63:FA6F0F:652245EC.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1840,google-map,sandysanthosh,N/A,N/A,https://api.github.com/repos/sandysanthosh/google-map,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1B0:6611:70BB6A:E93993:652245EC.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1841,wanderers-travel-advisor,anirudh357,N/A,N/A,https://api.github.com/repos/anirudh357/wanderers-travel-advisor,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1FC:0FAE:19B43DF:3504B03:652245EC.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1842,BorderCrossing,makhin,N/A,N/A,https://api.github.com/repos/makhin/BorderCrossing,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1D0:3BF5:7740B5:F5F8BA:652245ED.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1843,travel-advisor,JohnLawliet,N/A,N/A,https://api.github.com/repos/JohnLawliet/travel-advisor,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C182:1F34:1BDAFE0:3940AA1:652245EE.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1844,Bus-Services-Android-App,khokan-gorain,N/A,N/A,https://api.github.com/repos/khokan-gorain/Bus-Services-Android-App,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C127:784E:792C00:FA2DB3:652245EE.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1845,san-marcos-food-trucks,edelstone,N/A,N/A,https://api.github.com/repos/edelstone/san-marcos-food-trucks,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C179:1299:A12505:14CEB1D:65224563.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1846,adaptive_views_compose,rdmcbath,N/A,N/A,https://api.github.com/repos/rdmcbath/adaptive_views_compose,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1B2:418F:2AA84FD:5737102:652245EF.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1847,learn-golang,spajai,N/A,N/A,https://api.github.com/repos/spajai/learn-golang,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C160:6EE6:71B547:EB1EEC:652245EF.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1848,google_hash_code,hamid-yg,N/A,N/A,https://api.github.com/repos/hamid-yg/google_hash_code,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1F1:5F41:72A51A:ED0A3D:652245EF.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1849,laton_fraud_mapping,HarrisonGranger,N/A,N/A,https://api.github.com/repos/HarrisonGranger/laton_fraud_mapping,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1DE:36DF:35AC8C0:6D6EE8B:652245F0.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1850,AutoServiceLogin,crianna,N/A,N/A,https://api.github.com/repos/crianna/AutoServiceLogin,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C154:73C7:74DC18:F148DA:652245F1.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1851,Neighborhood_Map,zach-col,N/A,N/A,https://api.github.com/repos/zach-col/Neighborhood_Map,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1F4:5AB9:2C86F46:5B3871A:652245F1.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1852,nycweb031218-mod3-foodquest-backend,MenuDevelopment,N/A,N/A,https://api.github.com/repos/MenuDevelopment/nycweb031218-mod3-foodquest-backend,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C18D:4E78:739D09:EEECBB:652245F2.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1853,travelapp,karanpokar,N/A,N/A,https://api.github.com/repos/karanpokar/travelapp,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1BC:5F41:72A834:ED10A5:652245F2.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1854,Route-Snake,GeorgeD88,N/A,N/A,https://api.github.com/repos/GeorgeD88/Route-Snake,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C17E:4E78:739E69:EEEF59:652245F3.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1855,Google-Apps-Script---Export-the-KML-from-a-Google-My-Maps-File,rjmccallumbigl,N/A,N/A,https://api.github.com/repos/rjmccallumbigl/Google-Apps-Script---Export-the-KML-from-a-Google-My-Maps-File,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C183:3BF5:774860:F60846:652245F4.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1856,GoogleMapAPI,coderepohub,N/A,N/A,https://api.github.com/repos/coderepohub/GoogleMapAPI,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C14B:5934:289B7CB:538020E:652245F4.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1857,space-hub,ferranpons,N/A,N/A,https://api.github.com/repos/ferranpons/space-hub,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C142:7AEF:2E11309:5E34A5E:652245F5.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1858,google_map_integration_and_places_api_implementation,mrusamamuzaffar,N/A,N/A,https://api.github.com/repos/mrusamamuzaffar/google_map_integration_and_places_api_implementation,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C194:4E78:73A111:EEF4CF:652245F5.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1859,TravelDiary,topgyaltsering,N/A,N/A,https://api.github.com/repos/topgyaltsering/TravelDiary,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C128:73C7:74E20B:F154F5:652245F6.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1860,glhmg,MMauro94,N/A,N/A,https://api.github.com/repos/MMauro94/glhmg,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1CC:6A74:1A67F61:36638C6:652245F7.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1861,MapDirectionKotlin,tanaymondal,N/A,N/A,https://api.github.com/repos/tanaymondal/MapDirectionKotlin,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C154:73C7:74E33E:F1576F:652245F7.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1862,sapporo-coffee-map,chadwyck242,N/A,N/A,https://api.github.com/repos/chadwyck242/sapporo-coffee-map,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1B4:1364:79F2D8:FB8A89:652245F8.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1863,SAVE,vansh1sh,N/A,N/A,https://api.github.com/repos/vansh1sh/SAVE,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1D0:3BF5:774CEE:F611AD:652245F8.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1864,ngx-google-map-helper,imanshu15,N/A,N/A,https://api.github.com/repos/imanshu15/ngx-google-map-helper,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C156:4F4C:75F014:F36253:652245F9.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1865,Chatting-App-Clone-,faiz900987,N/A,N/A,https://api.github.com/repos/faiz900987/Chatting-App-Clone-,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C191:7B5B:767806:F44AF6:652245F9.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1866,breadcrumbs,JaySaulHowarth,N/A,N/A,https://api.github.com/repos/JaySaulHowarth/breadcrumbs,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1C8:1364:79F560:FB8FC7:652245FA.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1867,Explorit,jebinphilipose,N/A,N/A,https://api.github.com/repos/jebinphilipose/Explorit,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C184:05EF:71E113:EB7DFD:652245FA.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1868,vue-google-components,sylvanld,N/A,N/A,https://api.github.com/repos/sylvanld/vue-google-components,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C17A:7B5B:7679D1:F44EBD:652245FB.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1869,tripweather,nstevens1040,N/A,N/A,https://api.github.com/repos/nstevens1040/tripweather,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C16B:784E:7938B1:FA47D3:652245FC.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1870,UK-Charge-Points-System,zeeshan457,N/A,N/A,https://api.github.com/repos/zeeshan457/UK-Charge-Points-System,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C139:5934:289C0FD:53814F6:652245FC.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1871,DarkSpark,PenielA,N/A,N/A,https://api.github.com/repos/PenielA/DarkSpark,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1B3:2115:732ED8:EE341F:652245FD.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1872,canster_truck_application,akhilcherukuri,N/A,N/A,https://api.github.com/repos/akhilcherukuri/canster_truck_application,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1AF:6611:70CB32:E95A44:652245FD.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1873,mapaGeolocaliza,mhosan,N/A,N/A,https://api.github.com/repos/mhosan/mapaGeolocaliza,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C135:61FF:305C24:646003:652245FE.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1874,Magic-Places-App,mickozak,N/A,N/A,https://api.github.com/repos/mickozak/Magic-Places-App,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1A3:47EA:26F3961:50053C7:652245FE.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1875,archeomap,zeepc,N/A,N/A,https://api.github.com/repos/zeepc/archeomap,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C107:33EB:301861:63F014:652245FF.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1876,nao,OlivierHe,N/A,N/A,https://api.github.com/repos/OlivierHe/nao,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C15B:1ECC:2F1831:61F8A9:65224600.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1877,Simpler-Android,alonbendov,N/A,N/A,https://api.github.com/repos/alonbendov/Simpler-Android,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C19B:458F:2C9C58B:5B7D1A6:65224600.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1878,Sharedesk-Rails-Office-Finder-App,DevNeoLee,N/A,N/A,https://api.github.com/repos/DevNeoLee/Sharedesk-Rails-Office-Finder-App,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C10B:3493:27640EA:511878E:65224601.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1879,Devis,DevidCopperfild,N/A,N/A,https://api.github.com/repos/DevidCopperfild/Devis,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1E1:6584:28880BB:5358D1D:65224601.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1880,Sharedesk-Rails-Office-Finder-App,DevNeoLee,N/A,N/A,https://api.github.com/repos/DevNeoLee/Sharedesk-Rails-Office-Finder-App,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1AF:643D:2A7B823:5720B59:65224601.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1881,GrandPy,GuillaumeM92,N/A,N/A,https://api.github.com/repos/GuillaumeM92/GrandPy,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1CD:6584:2888157:5358E4D:65224602.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1882,mnemosyne,temuj1n,N/A,N/A,https://api.github.com/repos/temuj1n/mnemosyne,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C145:47EA:26F3D79:5005C4A:65224603.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1883,Planta-Ai,vihangel,N/A,N/A,https://api.github.com/repos/vihangel/Planta-Ai,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1B9:0BEC:2E0B9F:5FEE87:65224603.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1884,Gablestones_B,AngelikaDW,N/A,N/A,https://api.github.com/repos/AngelikaDW/Gablestones_B,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1D5:22D5:2F94268:616F0FC:65224603.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1885,location_app,Chilam-Yim,N/A,N/A,https://api.github.com/repos/Chilam-Yim/location_app,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C11C:24F2:29F71FA:56276E6:65224604.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1886,familymapclient,brightlightkim,N/A,N/A,https://api.github.com/repos/brightlightkim/familymapclient,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C16F:24F2:29F727C:56277EC:65224605.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1887,Flutter-Google-Map-Cases,TechnourceOfficial,N/A,N/A,https://api.github.com/repos/TechnourceOfficial/Flutter-Google-Map-Cases,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1B8:1560:2933DE7:54A9AB5:65224605.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1888,easy-location-map,amalamrani,N/A,N/A,https://api.github.com/repos/amalamrani/easy-location-map,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1BF:458F:2C9CB59:5B7DDC8:65224606.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1889,location-search-nextjs-interview-assessment,lahirudilshan,N/A,N/A,https://api.github.com/repos/lahirudilshan/location-search-nextjs-interview-assessment,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1C2:643D:2A7BC5E:572143D:65224604.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1890,googleapis,janith-adhikari,N/A,N/A,https://api.github.com/repos/janith-adhikari/googleapis,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1E1:6584:28885E1:53597AB:65224606.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1891,gpdb,Avitus27,N/A,N/A,https://api.github.com/repos/Avitus27/gpdb,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C138:0C3C:778C2C:F6B2C0:652244CB.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1892,Adoptini,aymen-ziouche,N/A,N/A,https://api.github.com/repos/aymen-ziouche/Adoptini,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1F0:9938:2A0ED39:5655145:65224607.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1893,data_context,eakeur,N/A,N/A,https://api.github.com/repos/eakeur/data_context,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C12A:3119:2C48A0C:5AC3874:65224608.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1894,homesafe-frontend,RylanBauermeister,N/A,N/A,https://api.github.com/repos/RylanBauermeister/homesafe-frontend,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C10F:505E:31B7C0:67086E:65224608.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1895,divest-google,d4rklynk,N/A,N/A,https://api.github.com/repos/d4rklynk/divest-google,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1CB:2772:29242DE:54A2786:65224609.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1896,spaceview-earth,nasser85,N/A,N/A,https://api.github.com/repos/nasser85/spaceview-earth,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C179:0BEC:2E10B1:5FF926:65224609.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1897,openpilot-dashboard-comma.ai,eduardocgarza,N/A,N/A,https://api.github.com/repos/eduardocgarza/openpilot-dashboard-comma.ai,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C167:11F8:30D892:65761B:6522460A.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1898,london-home-finder,caeserlondon,N/A,N/A,https://api.github.com/repos/caeserlondon/london-home-finder,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1C8:7A65:2E1E63:600EEC:6522460B.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1899,travelsdin-react,shlomiNugarker,N/A,N/A,https://api.github.com/repos/shlomiNugarker/travelsdin-react,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1B1:505E:31BA5A:670DD2:6522460B.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1900,weather,this-is-allan,N/A,N/A,https://api.github.com/repos/this-is-allan/weather,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1F6:797D:2CA52B:5D12C2:6522460C.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1901,PlacePicker,ParthLotia,N/A,N/A,https://api.github.com/repos/ParthLotia/PlacePicker,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C12D:2E63:2EBB16:614250:6522460C.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1902,Geolocation,sathishfreaks5,N/A,N/A,https://api.github.com/repos/sathishfreaks5/Geolocation,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1B9:0BEC:2E12E5:5FFDB8:6522460C.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1903,android-samples,nhphung216,N/A,N/A,https://api.github.com/repos/nhphung216/android-samples,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C162:7890:2E179B:5FFCED:6522460D.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1904,kludgy-cli,mhulse,N/A,N/A,https://api.github.com/repos/mhulse/kludgy-cli,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1D3:8AB4:2A037E8:56455FD:6522460E.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1905,EjercicioEvaluableDavidParejo,davidpa01,N/A,N/A,https://api.github.com/repos/davidpa01/EjercicioEvaluableDavidParejo,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C16F:24F2:29F7B8A:5628A7D:6522460E.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1906,gtfs,tspannhw,N/A,N/A,https://api.github.com/repos/tspannhw/gtfs,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C16E:3493:2764C39:5119F18:6522460E.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1907,World_Weather_Analysis,Robertfnicholson,N/A,N/A,https://api.github.com/repos/Robertfnicholson/World_Weather_Analysis,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C14F:1D49:2CA700E:5B881B4:6522460F.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1908,Web-App-From-API-to-Location-Map,akass1122,N/A,N/A,https://api.github.com/repos/akass1122/Web-App-From-API-to-Location-Map,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C136:4771:2F3273:62111A:6522460F.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1909,sgSchools2020,bryanseah234,N/A,N/A,https://api.github.com/repos/bryanseah234/sgSchools2020,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C132:6C98:2F7C7F:62BD92:65224610.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1910,map_my_walk,mrusamamuzaffar,N/A,N/A,https://api.github.com/repos/mrusamamuzaffar/map_my_walk,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C102:5B68:2EEB40:61BE7E:65224611.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1911,swarms,sunnyerteit,N/A,N/A,https://api.github.com/repos/sunnyerteit/swarms,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1F5:5A86:2BFF475:5A42B00:65224611.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1912,Senior_Saviour,ghoshavirup0,N/A,N/A,https://api.github.com/repos/ghoshavirup0/Senior_Saviour,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C148:1ECC:2F28CE:621B41:65224612.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1913,Skybrud.Social.Google.Places,abjerner,N/A,N/A,https://api.github.com/repos/abjerner/Skybrud.Social.Google.Places,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C138:1ECC:2F295C:621C69:65224612.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1914,Traccar2Kml,carlosplazaaguilera,N/A,N/A,https://api.github.com/repos/carlosplazaaguilera/Traccar2Kml,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C114:3B38:3267A9:686D1F:65224613.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1915,CodeIgniter-Sitemap-for-SEO,devall-eu,N/A,N/A,https://api.github.com/repos/devall-eu/CodeIgniter-Sitemap-for-SEO,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1A5:5B68:2EEDD9:61C3FF:65224614.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1916,DICLAB2-DataAggregationBigDataAnalysisAndVisualization,BhagyashriT,N/A,N/A,https://api.github.com/repos/BhagyashriT/DICLAB2-DataAggregationBigDataAnalysisAndVisualization,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C15F:1E37:2FAEF5:6317B4:65224614.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1917,Trial-test,Lilianada,N/A,N/A,https://api.github.com/repos/Lilianada/Trial-test,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C148:1ECC:2F2BFF:6221EF:65224615.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1918,JavaAPI,shreeyamishra,N/A,N/A,https://api.github.com/repos/shreeyamishra/JavaAPI,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1C2:643D:2A7D12F:5723EDA:65224615.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1919,Map-Reduce-on-Google-N-Grams-dataset,TalMarci,N/A,N/A,https://api.github.com/repos/TalMarci/Map-Reduce-on-Google-N-Grams-dataset,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1C0:6C98:2F82D6:62CAAB:65224616.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,Google Maps,"[N, /, A]",00000
1920,matsim-libs,matsim-org,N/A,N/A,https://api.github.com/repos/matsim-org/matsim-libs,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C154:38A4:2C26D0B:5A99ED8:65224617.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,transportation-planning,"[N, /, A]",00000
1921,SOTA-Py,mehrdadn,N/A,https://github.com/mehrdadn/SOTA-Py,https://api.github.com/repos/mehrdadn/SOTA-Py,A discrete-time Python-based solver for the Stochastic On-Time Arrival routing problem,"# What is SOTA-Py?

SOTA-Py is a Python-based solver for the policy- and path-based ""SOTA"" problems,
using the algorithm(s) described in
[*Tractable Pathfinding for the Stochastic On-Time Arrival Problem*](https://link.springer.com/chapter/10.1007/978-3-319-38851-9_16) (also in the corresponding [arXiv preprint](https://arxiv.org/abs/1408.4490))
and previous works referenced therein.

What is the SOTA problem? Read on...

# Theory (in plain English)

## What is the ***Stochastic On-Time Arrival*** problem (SOTA)?

It's the ***reliable routing*** problem:

> ### *How do you travel from point A to point B **in T time** under traffic?*  

For example, you might have a meeting in San Jose at 3pm, and one to reach in San Francisco at 4pm.  
Or you might need to get from your house to the airport in less than 1 hour.

### Doesn't Google Maps already solve this?

No. It doesn't let you specify a time budget.
It only lets you specify a departure or arrival time, but not both.

What it (probably) gives you is the path with the *least expected (average) time* to your destination.

### But so what? 30 minutes or 60 minutes—isn't there a *single* best path?

No. That would only be the case if traffic was perfectly predictable.

If you don't have a lot of time, you might need to take a riskier path
(e.g. a highway), otherwise you might have no chance of reaching your destination on time.
But if you have a lot of time, you might take a safer path (like side roads) that no one uses,
to avoid suddenly getting stuck in the middle of, say, a highway, due to traffic.

That means your time budget can affect your route.

## Policy- vs. Path-based Routing

### What is the *policy-based* SOTA problem?

It is the case of the SOTA problem where you decide which road to take based on how much time you have left.
You'd probably need a navigation device for this, since there are too many possibilities in the ""policy"" to print on paper.

This is what you'd prefer to do, because it can potentially give better results depending on whether you get lucky/unlucky with traffic.

This is a dynamic-programming problem, because the probability of reaching your destination on time
is just the maximum probability of reaching it from each road at the next intersection.

### What is the *path-based* SOTA problem?

It is the SOTA problem in the case where you statically decide on the entire path before you depart.  
You can just print out a map for this on paper, the old-fashioned way.

This is—counterintuitively!—a much tougher problem than finding the policy.
Even though the solution looks simpler (it's just a path rather than a policy),
it's much harder to compute.
Why? Intuitively, it's because after you travel a bit,
you won't necessarily be on the most optimal path anymore,
so you can't make that assumption to simplify the problem initially.  
By contrast, in the policy-based scenario, you always assume that your future actions are optimal,
so you have an optimal subproblem structure to exploit.

## The Algorithm

The (unhelpful) ultra-short version is that Dijkstra's algorithm is used for policy-based SOTA and A* is used for path-based SOTA.

The (more helpful) short version is:
- For the policy computation, a re-visiting variant of Dijkstra's algorithm
is used to obtain an optimal ordering for computing the reliabilty of each node,
and a technique known as *zero-delay convolution* is used to perform cross-dependent convolutions incrementally
to keep the time complexity quasilinear in the time budget. (A naive FFT would not do this.)  
- For the path computation, the computed policy is used as an (admissible) heuristic in A*.
Note that this choice of a heuristic is critical. A poor heuristic can easily result in exponential running time.

For the long version, please see the paper linked above, and others referenced inside.
The paper should (hopefully) be quite easy to follow and understand, especially as far as research papers go.

Note that the pre-processing algorithms from the paper (such as *arc-potentials*) are **not** implemented,
but they should be far easier to implement than the pathfinding algorithms themselves.

## The Traffic Model

This code models the travel time across every road as a mixture of Gaussian distributions (GMM)
(""censored"" to strictly positive travel times).
It discretizes the distributions and solves the discrete problem in discrete-time.

Obviously, realistic travel times are not normally distributed. But that's the model of the data I had.
Getting good traffic data is hard, and encoding data efficiently is also hard.
If you don't like the current model, you'd have to change the code to accommodate other models.

# The Code

## Inputs

### Dependencies

- [**NumPy**](http://www.numpy.org) is the only hard external dependency.  
- [**Numba**](//numba.pydata.org), if available, is used for compiling Python to native code (≈ 3× speedup).  
- [**PyGLET**](http://www.pyglet.org), if available, is used for rendering the results on the screen via OpenGL.
- [**SciPy**](//www.scipy.org), if available, is used for slightly faster FFTs.  

### Map File Format

The road network and traffic data is assumed to be a concatentation of JSON objects, each as follows:

	{
		""id"": [10000, 1],
		""startNodeId"": [1000, 0],
		""endNodeId"": [1001, 0],
		""geom"": { ""points"": [
			{""lat"": 37.7, ""lon"": -122.4},
			{""lat"": 37.8, ""lon"": -122.5}
		]},
		""length"": 12,
		""speedLimit"": 11.2,
		""lanes"": 1,
		""hmm"": [
			{""mode"": ""go"", ""mean"": 1.2, ""cov"": 1.5, ""prob"": 0.85},
			{""mode"": ""stop"", ""mean"": 7, ""cov"": 0.1, ""prob"": 1.5E-1}
		]
	}

Note the following:

- The HMM directly represents *travel times* for various ""modes"" of travel (stop, go, etc.) for the Gaussian mixture model.
- The HMM is ""optional"". If missing, pseudo-random data is generated.
- The length and speed limit are divided to obtain the *minimum* travel time across each edge
  (we assume an ideal world where everyone abides by the speed limit).
  Therefore, their individual values are not relevant; only their ratio is relevant.
- The number of lanes is only for rendering purposes.
- Every ID is assumed to be of the form [primary, secondary], where the secondary number is small.  
  The secondary component is intended to distinguish different segments of the same road for each edge.
- A minimum covariance is enforced in the code. (If your variance is too low, you may need to change this.)
- No comma or brackets should delimit these objects, so the full file isn't strictly JSON.
- For hand-checking simple cases, I recommend you set the length to be a multiple of the speed limit
  in order to avoid floating-point round-off error.

## Maintenance (or: why is the code ugly?)

This code isn't intended to finish any job for you. It's certainly not production-quality.
It's just meant to help any researchers working on this topic get started and/or cross-check their algorithm correctness.

Given that it's not meant to be used in any production,
I don't plan on actively maintaining it unless I encounter bugs (or if I see enough interest from others).

## Example

There's no short ""getting started"" code example, sorry.
The main startup file is basically a (very) long example.

### Usage

It's pretty self-explanatory:

	python Main.py --source=65280072.0 --dest=65345534.0 --budget=1800 --network=""data/sf.osm.json""

The time discretization interval is automatically chosen to be the globally minimum travel time across
any edge in the network,
since it should be as large as possible (for speed) and smaller than the travel time of every edge.
You would need to change this in the code for greater accuracy.

Note that a time budget that is too high can cause the pathfinding algorithm to thrash exponentially, because
the reliability of *every* path reaches 100% as your time budget increases, and the algorithm ends up
trying all of them.  
However, realistically, you would not need to run this algorithm for very high time budgets.
A classical path would already be reliable enough.

### Demo

Note that you (obviously) need both a map and traffic data to run this code.
Unfortunately I can't release the dataset I used in the paper,
but I have a sample map from **OpenStreetMap**, and the code attempts to naively fill in missing traffic data,
so that should be good enough to get started.

Here's an example of what one can get in 15 seconds on my machine. The code runs in two phases:

- As time increases, the optimal policy is computed for reachable roads farther and farther from the destination
  (highlighted), until the source is reached.  
  Roads that can never be used to reach the destination on time are not examined.
- Once the policy is determined, the optimal path for each time budget *up to* the one requested is determined,
  in order from high to low time budget.  
  This is to demonstrate the fact that the optimal path can change depending on the time budget.

![Animation](doc/SOTA-Demo.gif)

# Contact

## Licensing

Please refer to the license file.

For attribution, a reference to the aforementioned article (which this code is based on) would be kindly appreciated.

## Questions/Comments

If you find a bug, have questions, would like to contribute,
or the like, feel free to open a GitHub issue/pull request/etc.

For private inquiries (e.g. commercial licensing requests), you can find my contact
information if you search around (e.g. see the paper linked above).
",401,401,12,0,transportation-planning,"[a-star, arrival, convolution, dijkstra-shortest-path, pathfinding-algorithm, reliable-routing, routing, routing-algorithm, shortest-path-problem, shortest-path-routing-algorithm, shortest-pathfinding-algorithm, stochastic-dynamic-programming, stochastic-models, transportation, transportation-network, transportation-planning, transportation-problem]",00000
1922,vrp,reinterpretcat,N/A,N/A,https://api.github.com/repos/reinterpretcat/vrp,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C184:1560:29353D1:54AC7E5:65224617.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,transportation-planning,"[N, /, A]",00000
1923,multimodal-transportation-optimization,hzjken,N/A,N/A,https://api.github.com/repos/hzjken/multimodal-transportation-optimization,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C163:505E:779B29:F68BBD:652243B4.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,transportation-planning,"[N, /, A]",00000
1924,otp-tutorial,marcusyoung,N/A,N/A,https://api.github.com/repos/marcusyoung/otp-tutorial,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C105:0E65:266AC9F:4EDE84E:6522440D.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,transportation-planning,"[N, /, A]",00000
1925,GMNS,zephyr-data-specs,N/A,N/A,https://api.github.com/repos/zephyr-data-specs/GMNS,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C11E:2772:2925461:54A4BA4:65224618.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,transportation-planning,"[N, /, A]",00000
1926,opentripplanner,ropensci,N/A,N/A,https://api.github.com/repos/ropensci/opentripplanner,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C14A:5BDF:2762181:50DCAE2:65224410.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,transportation-planning,"[N, /, A]",00000
1927,DTA,DrKeHan,N/A,https://github.com/DrKeHan/DTA,https://api.github.com/repos/DrKeHan/DTA,"This repository documents MATLAB implementation of a dynamic user equilibrium solver, including a dynamic network loading sub-routine","# DTA
This repository documents a MATLAB package for computing large-scale Dynamic User Equilibrium models. 

# Documentation
Han, K, Eve, G, Friesz, TL, 2019. Computing dynamic user equilibria on large-scale networks with software implementation. Networks and Spatial Economics, Volume 19, Issue 3, pp 869–902. Open-access URL: https://doi.org/10.1007/s11067-018-9433-y.
",62,62,5,2,transportation-planning,"[modeling, traffic, traffic-simulation, transport, transportation, transportation-network, transportation-planning, transportation-simulation]",00000
1928,otpr,marcusyoung,N/A,N/A,https://api.github.com/repos/marcusyoung/otpr,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C194:57A8:282A7FD:525D576:6522441D.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,transportation-planning,"[N, /, A]",00000
1929,sdna_open,fiftysevendegreesofrad,N/A,N/A,https://api.github.com/repos/fiftysevendegreesofrad/sdna_open,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C179:0BEC:2E1D90:601402:65224619.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,transportation-planning,"[N, /, A]",00000
1930,spuf-314,Oussama-Abderrahim,N/A,N/A,https://api.github.com/repos/Oussama-Abderrahim/spuf-314,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C19E:505E:2F4048:61EE2D:6522437F.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,transportation-planning,"[N, /, A]",00000
1931,cyclestreets-r,cyclestreets,N/A,N/A,https://api.github.com/repos/cyclestreets/cyclestreets-r,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1D5:22D5:2F95827:6171E08:65224619.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,transportation-planning,"[N, /, A]",00000
1932,IdealFlowNetwork,teknomo,N/A,N/A,https://api.github.com/repos/teknomo/IdealFlowNetwork,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C183:1CC6:2A8D194:5757094:6522461A.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,transportation-planning,"[N, /, A]",00000
1933,transition,chairemobilite,chairemobilite,https://github.com/chairemobilite/transition,https://api.github.com/repos/chairemobilite/transition,"Transition is a modern new approach to transit planning. It's a web application to model, simulate and plan public transit and alternative transportation.","# Transition
[![FOSSA Status](https://app.fossa.com/api/projects/git%2Bgithub.com%2Fchairemobilite%2Ftransition.svg?type=shield)](https://app.fossa.com/projects/git%2Bgithub.com%2Fchairemobilite%2Ftransition?ref=badge_shield)

Transition is a modern new approach to transit planning. This repo is a Node/React web application to model, simulate and plan public transit and alternative transportation.

See http://transition.city/


[Definitions and symbols used in the code and in the interface](https://www.overleaf.com/read/dtxfhttxgjrx)

For Ubuntu users: [complete step-by-step development environment setup procedure](docs/setupDevEnvironmentUbuntu20.04.md)

## Stand alone Desktop installation

For users only interested in running Transition, without manually installing all the dependencies, follow these [step-by-step instructions to set up Transition using Docker Desktop](docs/runWithDocker.md).

## Non-Node Dependencies

* [PostgreSQL](https://www.postgresql.org/) 10+ with [PostGIS](https://postgis.net/)
* [OSRM](https://github.com/Project-OSRM/osrm-backend/): It is the routing engine used by Transition, to calculate the routes for various modes: for example walking, cycling, driving, bus in urban setting, suburban bus, etc.
* [trRouting](https://github.com/chairemobilite/trRouting/): An open source routing engine to calculate the route between an origin and a destination, or to calculate accessibility from/to a point, using public transit network. It is the main engine used for public transit simulations.
* yarn: [debian/ubuntu](https://classic.yarnpkg.com/en/docs/install/#debian-stable) or [macOS](https://classic.yarnpkg.com/en/docs/install/#mac-stable)
* [Rust](https://www.rust-lang.org/): It is used to run the json2capnp cache service which makes the application much faster if there's a lot of transit data.

## Installation

* Install dependencies:

For Ubuntu 20.04 or 22.04 users, use:
```
sudo apt-get install postgresql postgis lua5.3 liblua5.3-dev \
capnproto libcapnp-dev postgresql-postgis postgresql-postgis-scripts rustc cargo
```
* Create a `.env` file in the project root directory (you can copy the `.env.example` file) and setup the project
* `yarn install` or just `yarn`: Will download the packages required by the application
* `yarn compile`: Convert the typescript files to javascript
* `yarn setup`: Run this command to setup the database for the current project
* `yarn migrate`: Update the database schema with latest changes. This can be run whenever the source code is updated
* Optionally `yarn create-user`: Run this task to create a new user in the database. The user will be able to login to the web interface. This command can be run entirely in a non-interactive mode with the following parameters: `yarn create-user --username <username> --email <email> --password <clearTextPassword> [--first_name <firstName> --last_name <lastName> --[no-]admin --[no-]valid --[no-]confirmed --prefs <jsonStringOfPreferences>]`. For example, to create and administrator user with the english language as preference, run the following command `yarn create-user --username admin --email admin@example.org --password MyAdminPassword --admin --prefs '{ ""lang"": ""en"" }'`

## Getting started

**An example configuration and geographical area can be found in [the examples](examples/) directory.**

### Create a config file

Create a `config.js` file with the project's configuration. See the [config file in the examples directory](examples/config.js) for an example configuration.

The main options to configure are the `mapDefaultCenter` which is usually around the center of the area that will be served by the instance of Transition and the `projectDirectory`, which is the local path where runtime files, user data, local osrm files, log files, etc. will be stored.

The example config file contains preferences to run the `osrm` servers for each mode locally. They are started when Transition starts. To use external osrm server, the configuration can be updated as follows, for example for the walking mode:

```
[...]
walking: {
    port: 5001,
    host: https://external.osrm-server,
    autoStart: false,
    enabled: true
[...]
```

### Download and prepare the road network

Route calculations for transit route, walking access or egress to transit stops, etc. require a routing engine (`osrm`), which itself requires the road network from OpenStreetMap. The following commands will download and prepare the road network data for use with osrm. 

But first, a GeoJSON polygon file is required to specify the area for which to download and process the road network. To easily create a polygon, [geojson.io](https://geojson.io) can be used, which can then be copy-pasted to a file.

```shell
yarn node --max-old-space-size=4096 packages/chaire-lib-backend/lib/scripts/osrm/downloadOsmNetworkData.task.js --polygon-file examples/polygon_rtl_area.geojson

yarn node --max-old-space-size=4096 packages/chaire-lib-backend/lib/scripts/osrm/prepareOsmNetworkData.task.js
```

### Prepare the environment file

Transition relies on a few environment variables, that can either be set on the system, or contained in a .env file. First, copy the example .env file and edit the variables.

```
cp .env.example .env
```

* Change `PG_CONNECTION_STRING_PREFIX=postgres://postgres:@localhost:5432/` to `PG_CONNECTION_STRING_PREFIX=postgres://postgres:YOUR_POSTGRES_PASSWORD@localhost:5432/`
* Change `EXPRESS_SESSION_SECRET_KEY` to a random string with no space.
* Change `PROJECT_CONFIG` to point to your project's configuration file. The default is an example configuration file that can be copied and configured for your own need.

### Get a Mapbox access token
* Go to [Mapbox](http://mapbox.com) and sign up
* Go to your account dashboard, then generate a new access token
* Open the `.env` file
* Copy this access token to `.env` file: `MAPBOX_ACCESS_TOKEN=YOUR_TOKEN`
* If you have a custom mapbox style, put your username and style id in `MAPBOX_USER_ID` and `MAPBOX_STYLE_ID`

### Create the client application

Run `yarn build:dev` or `yarn build:prod` to create the html client application that will be run on the browser. 

The `prod` version is minified, while the `dev` version has greater size but allows to more easily debug the application.

*Note: If running with node version 18, webpack may return an error. In that case, run `export NODE_OPTIONS=--openssl-legacy-provider` before.*

### Start the json2capnp cache server

*Optional*

Run `yarn start:json2capnp -- 2000 /absolute/path/to/cache/directory/` to start the rust server to run the json2capnp cache service. 

This is required if the `defaultPreferences:json2capnp:enabled` preference is set to `true` in the `config.js` file (`true` is the default, to not use the rust server, set the value to `false` under the default preferences).

### Start the Node.js server

Use one of these alternative start command:

* `yarn start`: Start the server, with normal operation
* `yarn start:debug`: Start the server with extra debugging information
* `yarn start:tracing` Start the Node.js server with an OpenTelemetry config defined in a `tracing.js` file (placed in the root directory). See https://github.com/open-telemetry/opentelemetry-js/blob/main/getting-started/README.md#initialize-a-global-tracer for an example. 

### Open the application

Open your browser and navigate to `http://localhost:8080` to access the Transition login page.


## Using Docker
You can easily launch the whole transition system using Docker and thus not having to install all the dependencies directly.

### Building the image
`docker build -t testtransition .`
(You can replace testtransition with your prefered image name. Don't forget to update any other command and compose file if you do so)
To run the application directly, you'll need to add a `.env` as previously described, either by editing the `.env.docker` file before building the image, or by adding a `.env` file and pointing to it when running.

**Warning**: The project directory is assumed to be in `/app/examples/runtime` with a project name of `demo_transition`. The cache server starts with a cache at this location. If it is not the case, update line 68 of the `Dockerfile` to fine-tune the cache directory as second argument to `json2capnp`.

### Running using docker-compose
An example docker-compose.yml file is available in the repository. If used, it will spin up a container for the transition 
front-end and for dependent services like the postgis database.

*The `docker-compose.yml` file contains customisation suggestions.*

* `docker-compose up -d`

On the first run, you'll need to run the the DB setup commands. See the Installation section of this document for the full details. As a short-hand:
* `docker exec transition_transition-www_1 yarn setup`
* `docker exec transition_transition-www_1 yarn migrate`
* `docker exec -it transition_transition-www_1 yarn create-user`
* `docker-compose restart`

To load OSRM Data:
Copy a GeoJSON polygon.

#TODO Maybe the whole projects directory should be in a volume
```shell
docker cp /path/to/my/random_polygon.geojson transition_transition-www_1:/app/examples/runtime/imports/polygon.geojson

docker exec -it transition_transition-www_1 yarn node --max-old-space-size=4096 /app/packages/chaire-lib-backend/lib/scripts/osrm/downloadOsmNetworkData.task.js --polygon-file /app/examples/runtime/imports/polygon.geojson

docker exec -it transition_transition-www_1 yarn node --max-old-space-size=4096 /app/packages/chaire-lib-backend/lib/scripts/osrm/prepareOsmNetworkData.task.js
```

### Running development commands
During development, you can run commands in the docker image and use your local code.
For example, to run yarn test in the chaire-lib backend:
`docker run -a STDOUT -it -v ""${PWD}:/home/project"" -w=/home/project/transition-app/chaire-lib/backend/ testtransition yarn test`
You can also run the app this way with:
`docker run -a STDOUT -it -v ""${PWD}:/home/project"" -w=/home/project/ testtransition yarn start`

## Contributing

See [CONTRIBUTING.md](CONTRIBUTING.md)

## License
[![FOSSA Status](https://app.fossa.com/api/projects/git%2Bgithub.com%2Fchairemobilite%2Ftransition.svg?type=large)](https://app.fossa.com/projects/git%2Bgithub.com%2Fchairemobilite%2Ftransition?ref=badge_large)",14,14,6,507,transportation-planning,"[transit, transportation, transportation-planning]",00000
1934,isonoi,isonoi,isonoi,https://github.com/isonoi/isonoi,https://api.github.com/repos/isonoi/isonoi,Calculate voronoi-style polygons based on route distances / durations,"
<!-- README.md is generated from README.Rmd. Please edit that file -->

# isonoi

<!-- badges: start -->

[![R-CMD-check](https://github.com/isonoi/isonoi/actions/workflows/R-CMD-check.yaml/badge.svg)](https://github.com/isonoi/isonoi/actions/workflows/R-CMD-check.yaml)
<!-- badges: end -->

The goal of isonoi is to provide example data and functions to
demonstrate the concept of ‘iso voronoi’ polygons.

It is designed to be a prototype implementation of ideas outlined and
demonstrated with example data and reproducible code in
<https://github.com/isonoi/isonoi>

Give it a spin with the reproducible examples shown below.

``` r
remotes::install_github(""isonoi/isonoi"")
```

``` r
# TODO: remove this and keep only library call
devtools::load_all()
#> ℹ Loading isonoi
# library(isonoi)
library(sf)
x = net_oldenburg_raw
points = points_oldenburg
grid = iso_grid(x)
plot(grid, border = ""grey"")
plot(sf::st_geometry(x), add = TRUE)
plot(points, col = ""red"", add = TRUE, pch = 18, cex = 2)
#> Warning in plot.sf(points, col = ""red"", add = TRUE, pch = 18, cex = 2):
#> ignoring all but the first attribute
```

![](README_files/figure-gfm/inputs-1.png)<!-- -->

The 3 figures below show outputs from the packages next to the standard
voronoi diagram.

``` r
library(tmap)
poly = sf::st_convex_hull(sf::st_union(x))
vnoi = iso_vnoi(points, poly)
#> Warning in st_voronoi.sfc(sf::st_union(points), poly): st_voronoi does not
#> correctly triangulate longitude/latitude data
#> Warning: attribute variables are assumed to be spatially constant throughout
#> all geometries
vgrid = iso_vgrid(points, grid)
#> lon-lat points
net = sfnetworks::as_sfnetwork(x)
vsfn = iso_sfn(points, net, grid)
#> lon-lat points
#> lon-lat points
#> Warning: st_centroid assumes attributes are constant over geometries
#> lon-lat points
#> Warning in shortest_paths(x, from, to, weights = weights, output = ""both"", : At
#> core/paths/dijkstra.c:446 : Couldn't reach some vertices.
#> lon-lat points
#> Warning in shortest_paths(x, from, to, weights = weights, output = ""both"", : At
#> core/paths/dijkstra.c:446 : Couldn't reach some vertices.
#> lon-lat points
#> Warning in shortest_paths(x, from, to, weights = weights, output = ""both"", : At
#> core/paths/dijkstra.c:446 : Couldn't reach some vertices.
#> lon-lat points
#> Warning in shortest_paths(x, from, to, weights = weights, output = ""both"", : At
#> core/paths/dijkstra.c:446 : Couldn't reach some vertices.
#> lon-lat points
#> Warning in shortest_paths(x, from, to, weights = weights, output = ""both"", : At
#> core/paths/dijkstra.c:446 : Couldn't reach some vertices.
#> lon-lat points
#> Warning in shortest_paths(x, from, to, weights = weights, output = ""both"", : At
#> core/paths/dijkstra.c:446 : Couldn't reach some vertices.
#> lon-lat points
#> Warning in shortest_paths(x, from, to, weights = weights, output = ""both"", : At
#> core/paths/dijkstra.c:446 : Couldn't reach some vertices.
#> lon-lat points
#> Warning in shortest_paths(x, from, to, weights = weights, output = ""both"", : At
#> core/paths/dijkstra.c:446 : Couldn't reach some vertices.
#> lon-lat points
#> Warning in shortest_paths(x, from, to, weights = weights, output = ""both"", : At
#> core/paths/dijkstra.c:446 : Couldn't reach some vertices.
#> lon-lat points
#> Warning in shortest_paths(x, from, to, weights = weights, output = ""both"", : At
#> core/paths/dijkstra.c:446 : Couldn't reach some vertices.
#> lon-lat points
#> Warning in shortest_paths(x, from, to, weights = weights, output = ""both"", : At
#> core/paths/dijkstra.c:446 : Couldn't reach some vertices.
#> lon-lat points
#> Warning in shortest_paths(x, from, to, weights = weights, output = ""both"", : At
#> core/paths/dijkstra.c:446 : Couldn't reach some vertices.
#> lon-lat points
#> Warning in shortest_paths(x, from, to, weights = weights, output = ""both"", : At
#> core/paths/dijkstra.c:446 : Couldn't reach some vertices.
#> lon-lat points
#> Warning in shortest_paths(x, from, to, weights = weights, output = ""both"", : At
#> core/paths/dijkstra.c:446 : Couldn't reach some vertices.
#> lon-lat points
#> Warning in shortest_paths(x, from, to, weights = weights, output = ""both"", : At
#> core/paths/dijkstra.c:446 : Couldn't reach some vertices.
#> lon-lat points
#> Warning in shortest_paths(x, from, to, weights = weights, output = ""both"", : At
#> core/paths/dijkstra.c:446 : Couldn't reach some vertices.
#> lon-lat points
#> Warning in shortest_paths(x, from, to, weights = weights, output = ""both"", : At
#> core/paths/dijkstra.c:446 : Couldn't reach some vertices.
#> lon-lat points
#> Warning in shortest_paths(x, from, to, weights = weights, output = ""both"", : At
#> core/paths/dijkstra.c:446 : Couldn't reach some vertices.
#> lon-lat points
#> Warning in shortest_paths(x, from, to, weights = weights, output = ""both"", : At
#> core/paths/dijkstra.c:446 : Couldn't reach some vertices.
#> Joining with `by = join_by(name)`
m1 = tm_shape(vnoi) + tm_fill(""name"")
m2 = tm_shape(vgrid) + tm_fill(""name"")
m3 = tm_shape(vsfn) + tm_fill(""name"")
tmap_arrange(m1, m2, m3, nrow = 1)
#> Some legend labels were too wide. These labels have been resized to 0.24, 0.62, 0.29. Increase legend.width (argument of tm_layout) to make the legend wider and therefore the labels larger.
#> Some legend labels were too wide. These labels have been resized to 0.24, 0.62, 0.29. Increase legend.width (argument of tm_layout) to make the legend wider and therefore the labels larger.
#> Some legend labels were too wide. These labels have been resized to 0.24, 0.62, 0.29. Increase legend.width (argument of tm_layout) to make the legend wider and therefore the labels larger.
```

![](README_files/figure-gfm/outputs-1.png)<!-- -->
",12,12,1,3,transportation-planning,"[economics, geospatial, route-network, transportation, transportation-planning, voronoi, voronoi-diagram]",00000
1935,rangoon-mapper,projectrangoon,N/A,N/A,https://api.github.com/repos/projectrangoon/rangoon-mapper,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1C7:4C24:2BCA244:59D8A63:6522461B.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,transportation-planning,"[N, /, A]",00000
1936,access-to-services,datasciencecampus,N/A,N/A,https://api.github.com/repos/datasciencecampus/access-to-services,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C12B:47EE:2BBA682:59B6165:65224394.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,transportation-planning,"[N, /, A]",00000
1937,open-bus-map-search,hasadna,hasadna,https://github.com/hasadna/open-bus-map-search,https://api.github.com/repos/hasadna/open-bus-map-search,open-bus-map-search,"# Open bus ranking app

## Welcome!
This is the official repository of the open bus (תחב""צ פתוחה) project - also known as ""ShameBus"".
[link to the project](https://open-bus-map-search.hasadna.org.il/dashboard)
Please feel free to submit pull requests and contribute to the project (see the ""contribution"" section).

## View video (Hebrew language):
[![video (hebrew) about the project](https://img.youtube.com/vi/6H6jkJCVhgk/0.jpg)](https://www.youtube.com/watch?v=6H6jkJCVhgk)

## deployments

[![Netlify Status](https://api.netlify.com/api/v1/badges/d3ef62c2-b5bb-48ac-8299-71e5bd22b211/deploy-status)](https://app.netlify.com/sites/open-bus/deploys)

This app is created by the volunteers of [Public Knowledge Workshop](https://www.hasadna.org.il/)

## Contribution:

### Running the project:

- fork the repo
- clone the repo
- `yarn install`
- `yarn start`

### testing the project:
- running the tests - `yarn test`
- running the tests with UI - `yarn test:ui`
- additional helpful flags - https://playwright.dev/docs/test-cli

### useful resources:
* [the design file](https://www.figma.com/file/Plw8Uuu6U96CcX5tJyRMoW/Public-Transportation-visual-informaiton?type=design&node-id=0-1&mode=design&t=Dh8lI3EJ37unxvoe-0)
* [data model schema](https://github.com/hasadna/open-bus-stride-db/blob/main/DATA_MODEL.md)
* [API documentation and examples (swagger)](https://open-bus-stride-api.hasadna.org.il/docs)
* [the deployed website](https://open-bus-map-search.hasadna.org.il/dashboard)

### submitting pull requests
Thanks for your willingness to invest time and help us improve!
1. If you're new to GitHub, here is a [tutorial describing Pull Requests](https://docs.github.com/en/pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/creating-a-pull-request). if you're familiarized with Merge Requests - it's the same concept.
2. Please make sure that the project works on your computer
3. Please tag one of the maintainers as reviewers
we're here to help! feel free to join our [Slack channel](http://hasadna.slack.com ) 

## related repository - the API client

See [open-bus-stride-client](https://github.com/iliakap/open-bus-stride-client) repository.
",8,8,1,26,transportation-planning,"[bus, hacktoberfest, israel, mot, transportation, transportation-planning]",00000
1938,r_scripts,chuckpurvis,N/A,N/A,https://api.github.com/repos/chuckpurvis/r_scripts,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1D0:24F2:29F8A49:562A91A:6522461B.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,transportation-planning,"[N, /, A]",00000
1939,rrsrr,ITSLeeds,ITSLeeds,https://github.com/ITSLeeds/rrsrr,https://api.github.com/repos/ITSLeeds/rrsrr,Reproducible road safety research with R: a practical user manual,"
<!-- README.md is generated from README.Rmd. Please edit that file -->

# rrsrr

<!-- badges: start -->
<!-- badges: end -->

To reproduce the contents of the book,
[download](https://github.com/ITSLeeds/rrsrr/archive/master.zip) the
source code from GitHub, open the file RStudio project file
`rrsrr.Rproj` and run the following commands:

``` r
install.packages(""remotes"")
remotes::install_github(""itsleeds/rrsrr"")
install.packages(""servr"")
bookdown::serve_book()
```
",7,7,5,1,transportation-planning,"[crash-reporting, data-science, road-safety, stats19, transportation, transportation-planning]",00000
1940,foss4g22,Robinlovelace,N/A,N/A,https://api.github.com/repos/Robinlovelace/foss4g22,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1F2:7A65:2E2DB1:602EB0:6522461C.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,transportation-planning,"[N, /, A]",00000
1941,nptscot.github.io,nptscot,N/A,N/A,https://api.github.com/repos/nptscot/nptscot.github.io,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C108:4F4C:7229DB:EB9A1D:6522427E.'}",N/A,N/A,N/A,N/A,transportation-planning,"[N, /, A]",00000
1942,Transportation-Order-Management-System,EfthymiosChatziathanasiadis,N/A,https://github.com/EfthymiosChatziathanasiadis/Transportation-Order-Management-System,https://api.github.com/repos/EfthymiosChatziathanasiadis/Transportation-Order-Management-System,Optimal routing of transport orders with Dijkstra and scheduling,"{'message': 'Not Found', 'documentation_url': 'https://docs.github.com/rest/repos/contents#get-repository-content'}",5,5,1,0,transportation-planning,"[css, dijkstra-shortest-path, intermodal, java, javafx-desktop-apps, routing-algorithm, scheduling-problem, sqlite-database, sqlite3, transportation, transportation-planning]",00000
1943,FetchMuniTimes,thomasleplus,N/A,https://github.com/thomasleplus/FetchMuniTimes,https://api.github.com/repos/thomasleplus/FetchMuniTimes,Deployment package for an AWS Lamba returning the next SFMTA Muni times,"# FetchMuniTimes

Deployment package for an AWS Lamba returning the next times at a selection of stations.

[![Flake8](https://github.com/thomasleplus/FetchMuniTimes/workflows/Flake8/badge.svg)](https://github.com/thomasleplus/FetchMuniTimes/actions?query=workflow:""Flake8"")
[![CodeQL](https://github.com/thomasleplus/FetchMuniTimes/workflows/CodeQL/badge.svg)](https://github.com/thomasleplus/FetchMuniTimes/actions?query=workflow:""CodeQL"")

This Python Lambda can be mapped to an AWS API Gateway GET Resource with 3 URL parameters:
* uuid: the UUID of a Transit Tracker created at https://511.org/transit/tracker/overview beforehand
* min: the minimum time to display (in minutes, default is 0)
* max: the maximum time to display (in minutes, default is 99)
",5,5,2,0,transportation-planning,"[aws, aws-lambda, aws-lambda-python, awslambda, commute, commute-times, commuting, lambda, muni, python, san-francisco, sanfrancisco, sfmta, transportation, transportation-network, transportation-planning]",00000
1944,ifn-transport,teknomo,N/A,N/A,https://api.github.com/repos/teknomo/ifn-transport,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C168:9938:2A108D0:56589DA:6522461D.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,transportation-planning,"[N, /, A]",00000
1945,rtadubai,NotNalin,N/A,N/A,https://api.github.com/repos/NotNalin/rtadubai,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1B0:7E09:263B8F2:4ECB5B5:6522461D.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,transportation-planning,"[N, /, A]",00000
1946,CurbSpec,jfh01,N/A,https://github.com/jfh01/CurbSpec,https://api.github.com/repos/jfh01/CurbSpec,An open data standard for urban curb regulations,"<img src=""images/cover_image.png"">

# CurbLR and CurbSpec
_June 2019:_ The team at [SharedStreets](http://sharedstreets.io) has taken CurbSpec and substantially evolved it to create [CurbLR](https://github.com/sharedstreets/CurbLR). This work addresses many of the deficiences and gaps in CurbSpec, implements thoughtful design improvements, and offers a robust path forward towards a more practically deployable data standard for curb regulation. Before attempting to implement CurbSpec, you should consider using [CurbLR](https://github.com/sharedstreets/CurbLR) instead.

# What is CurbSpec?
CurbSpec is a data standard for describing urban curb regulations. It exists to help government effectively manage and regulate the curb and to support public and private users of city streets.

CurbSpec is a common language on which many things can be built, including rules engines, query APIs, consumer notification services, mapping tools, and analytic models.

# Design Principles
1. ***Machine-readable:*** From navigation apps to connected cars, urban mobility is increasingly digital. CurbSpec helps computers understand the curb, whether that's answering real-time questions like ""where's the nearest place to drop off a passenger?"" or modeling parking allocation scenarios for an entire neighborhood.

1. ***Human-oriented:*** Curbs are managed and used by people, so CurbSpec must be useful to humans not just machines. CurbSpec is designed to be directly readable and writable by people with technical training, and to support tools that make it accessible to the non-technical.

1. ***Reversible:*** Most curb management is not digitized today and this won't change overnight. To ease this transition, it must be possible to take existing signs and translate them into CurbSpec, and to use CurbSpec to generate a hypothetical physical signage plan.

1. ***Adaptable:*** No two cities manage their curb in exactly the same way. CurbSpec is built to support many types of regulations and management practices. A city should not have to change its curb regulations to use CurbSpec.

1. ***Future-friendly:*** How we use the curb is changing. Cities are adjusting parking prices based on demand, new transportation services are arriving on our streets, and vehicles without humans behind the wheel will one day deliver people and goods to the curb. CurbSpec exists to help make these futures a reality and will grow and adapt as urban mobility evolves.

# Examples
The pages below show real world curb regulations translated into CurbSpec.

| | |
| :---- | :---- |
| [Examples of Simple Regulations](examples/simple_examples.md) | Simple regulatory scenarios typically involving one or two basic rules  |
| [Examples of Complex Regulations](examples/complex_examples.md) | Complex scenarios that address multiple user classes, complicated expressions of time, and overlapping regulations |

# Data Model
| Object | Description |
| :--- | :--- |
| ***[Regulation](Regulation.md)*** | A given location or segment of curb may have one or more regulations that determine what is allowed or forbidden during a particular period of time |
| ***[Rule](Rule.md)*** | A [Regulation](Regulation.md) may have one or more rules that define what particular curb users can and cannot do when the [Regulation](Regulaton.md) is in effect |
| ***[Timespan](TimeSpan.md)*** | Defines the time period when a [Regulation](Regulation.md) is in effect. |
| ***[UserClass](UserClass.md)*** | Defines a category of curb user. Can be used to denote permit holders, vehicle types, or vehicle function. |

# About Location
CurbSpec provides a mechanism to describe curb regulation, but it does not specify how to talk about location (e.g. how to identify a specific stretch of curb). Location is highly context dependent and CurbSpec is designed to work with various approaches and use cases, rather than to prescribe a one-size-fits-all solution.

For example, a company might develop an API that takes a point location (lat/lon) and returns the applicable CurbSpec that applies to the stretch of curb on which the point falls. In this case, no external location referencing system is needed.

Alternatively, a City might apply CurbSpec on top of its proprietary linear referencing system to keep an internal database of signage and regulations.

However, it will be hard to unlock the full potential of digitizing urban curb regulation without a standard referencing system that works across jurisdictions. The [SharedStreets Reference System](https://github.com/sharedstreets/sharedstreets-ref-system) provides an open, non-proprietary method for identifying street segments and integrating multiple underlying basemaps into a single shared referencing system. CurbSpec can be used in conjunction with Shared Streets References to provide a truly common way to talk about both a place on the curb and the rules that apply in that place.

# Future Enhancements
* **External referencing for designated periods**: Extend [TimeSpan](TimeSpan.md) to allow arbitrarily designated periods (e.g. ""Snow Emergency"" or ""School Days"") to be specifically defined via a static or dynamic (API) referencing system.

* **Enhanced payment definition**: A schema to define payment requirements for a given use. Could support the publishing of dynamic parking pricing or complex fee structures such as peak period ride share pickup / drop-off fees.

* **Cross-jurisdictional allowed use mapping**: A mechanism to translate [Rules](Rule.md) (which are locally defined in their meaning) into a standardized, cross-jurisdictional list of activities. This would, for example, allow automated interpretation of local rules to determine where activities like passenger loading could take place.
",4,4,1,0,transportation-planning,"[curb, open-data, regulations-gov, transportation, transportation-planning]",00000
1947,AGADE-TRAFFIC,KITE-Cloud,N/A,N/A,https://api.github.com/repos/KITE-Cloud/AGADE-TRAFFIC,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C133:11F8:30EADA:659C3A:6522461E.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,transportation-planning,"[N, /, A]",00000
1948,transport-network-analysis,nhabbash,N/A,N/A,https://api.github.com/repos/nhabbash/transport-network-analysis,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C140:406C:2F9A56:62F453:6522461E.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,transportation-planning,"[N, /, A]",00000
1949,stplanpy,pctBayArea,N/A,N/A,https://api.github.com/repos/pctBayArea/stplanpy,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C124:1D49:2CA87CD:5B8B264:6522461F.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,transportation-planning,"[N, /, A]",00000
1950,SchoolPool,AsavaAsava,N/A,N/A,https://api.github.com/repos/AsavaAsava/SchoolPool,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1F7:8AB4:2A04E91:5648496:65224620.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,transportation-planning,"[N, /, A]",00000
1951,lovelace-vasttrafik-card,Miicroo,N/A,N/A,https://api.github.com/repos/Miicroo/lovelace-vasttrafik-card,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1B8:1560:2936021:54AE114:65224620.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,transportation-planning,"[N, /, A]",00000
1952,SOSAV,toruseo,N/A,N/A,https://api.github.com/repos/toruseo/SOSAV,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C18C:840D:2990033:5571369:65224621.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,transportation-planning,"[N, /, A]",00000
1953,parking,mdejean,N/A,N/A,https://api.github.com/repos/mdejean/parking,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C146:4771:2F47BA:623D2B:65224621.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,transportation-planning,"[N, /, A]",00000
1954,Routing-Optimizer,LucasDiogo96,N/A,N/A,https://api.github.com/repos/LucasDiogo96/Routing-Optimizer,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C1C3:5831:2BC4C8A:59B1FD1:6522433E.'}",N/A,N/A,N/A,N/A,transportation-planning,"[N, /, A]",00000
1955,rorlp,dupadhyaya,N/A,N/A,https://api.github.com/repos/dupadhyaya/rorlp,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1F0:565A:26EA20F:4FE64FB:65224622.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,transportation-planning,"[N, /, A]",00000
1956,KTX_Image_Classification,lotlouischoitslab,N/A,N/A,https://api.github.com/repos/lotlouischoitslab/KTX_Image_Classification,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1D8:607B:7ADC53:FD1CEE:65224472.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,transportation-planning,"[N, /, A]",00000
1957,drivehack,m2d-team,m2d-team,https://github.com/m2d-team/drivehack,https://api.github.com/repos/m2d-team/drivehack,"Проект для DriveHack, хакатон от МосГорТранса 26.08.22","# drivehack

проект для хакатона DriveHack (24.08.22-26.08.22, кибершкола мск)

потом я здесь еще инфу добавлю по проекту

краткая версия - тулза для застройщиков/мосгортранса чтобы предсказывать загрузку дорог и другой транспортной инфраструктуры при стройке новых зданий 

",2,2,2,0,transportation-planning,"[django, mapbox, python, transportation, transportation-planning]",00000
1958,atam,atam-analytics,atam-analytics,https://github.com/atam-analytics/atam,https://api.github.com/repos/atam-analytics/atam,strategic transport modelling framework for Active Transport (i.e. cycling and walking modes) as well as emerging micro-mobility modes ,"# {ATAM} Active Transport Analytics Model
**Overview of ATAM**
- **Active Transport Analytics Model (""ATAM"")** is a new strategic transport modelling and data visualization framework for Active Transport **(“AT”)** (i.e. cycling and walking modes) as well as emerging micro-mobility modes 

- **Proof of Concept (“POC”)** model developed for cycling in Brisbane, QLD Australia

- **Model structure and outputs** - key features: 
  - **Networks** – detailed networks, which consider factors such as safety to AT users, are a model input. Networks can be curated from sources including OpenStreetMap and other open data. Future scenario network changes can be tested for project appraisal.
  - **Demand** – demand matrices are an input and base year demand can be estimated from available sources such as household travel surveys, counts, Strava data, mobility data or other strategic model outputs. Future demand could be estimated based on demographic projections or demand matrices could be re-assigned from other strategic modelling tools.
  - **Outputs** – key outputs that ATAM can produce include: (i) volumes by link, (ii) journey times (by route and Origin-Destination **(“OD”)** matrix), (iii) analysis of trips using a particular link (i.e. Select Link Analysis **(“SLA”)**)

- **ATAM is built on open-source tools and does not require proprietary transport**
  - The core model functionality uses open-source tools - Python and QGIS (Tableau Public has been used to visualize data as well). No proprietary transport modelling software packages are required.
  - Brisbane POC demo/example model code and data is openly available on GitHub (https://github.com/atam-analytics/atam) and serves as an example to implement the ATAM modelling framework in other regions

- **Next steps** – improvements to the Brisbane POC model, develop POC models for other cities globally, build awareness and example use cases, feedback & improvement 

**********************************************************************************************************************************************************
**Further information about the project**
- Learn more about the ATAM project here - http://atamanalytics.com/
- See a visualised example of the type of outputs ATAM can produce for a single scenario - https://public.tableau.com/app/profile/peter.stephan/viz/ATAMBrisbanePOC11-Jan-22/VolumesStravastyling
- Questions or would like to get involved in the project? Contact Peter Stephan @ https://github.com/peterstephan
",2,2,1,0,transportation-planning,"[bicycle, cycling, data-science, data-visualization, gis-data, micromobility, micromobility-services, python, traffic-analysis, transport, transportation, transportation-network, transportation-planning, transportation-problem, transportation-simulation]",00000
1959,npt,nptscot,nptscot,https://github.com/nptscot/npt,https://api.github.com/repos/nptscot/npt,"Data processing code, also use this repo for issue tracking for the Network Planning Tool. See https://nptscot.github.io for development version","
<!-- README.md is generated from README.Rmd. Please edit that file -->

# Network Planning Tool for Scotland

<!-- badges: start -->
<!-- badges: end -->

The aim of this project is to generate evidence to support strategic
cycle network planning in Scotland.

# Reproducibility: basic

To reproduce the basic results in this repository, hosted on GitHub at
nptscot/npt, first download and unzip or clone it and then open the
‘npt’ folder in your favourite integrated development environment (IDE)
for R, such as RStudio.

- You can download the repository as a zip file from the GitHub website
  by clicking on the green ‘Code’ button and selecting ‘Download ZIP’,
  hosted at this URL:
  <https://www.github.com/nptscot/npt/archive/refs/heads/main.zip>

- You can clone the repo with Git as follows:

  ``` bash
  git clone https://www.github.com/nptscot/npt.git
  ```

- Or (recommended for future-proof workflows) you can install the GitHub
  CLI tool and clone the repo as follows:

  ``` bash
  gh repo clone nptscot/npt
  ```

Install the GitHub CLI tools by following instructions here:
<https://cli.github.com/manual/installation>

Note: you can check to see if you have the GitHub CLI tools installed by
running the following command from the R console:

``` r
gh_version = try({
  system(""gh --version"", intern = TRUE)
})
gh_version
#> [1] ""gh version 2.30.0 (2023-05-30)""                 
#> [2] ""https://github.com/cli/cli/releases/tag/v2.30.0""
if(is(gh_version, ""try-error"")) {
  message(""You don't have the GitHub CLI tools installed. Please install them by following instructions here: https://cli.github.com/manual/installation"")
}
```

## Set-up

We will use the following packages:

``` r
library(tidyverse)
library(tmap)
library(sf)
```

## Reading in input datasets

Read-in the input datasets as follows:

``` r
list.files(""data-raw"")
#> [1] ""DATASET.R""                           ""get_wpz.R""                          
#> [3] ""oas.geojson""                         ""od_jittered_demo.R""                 
#> [5] ""od_subset.csv""                       ""routes.geojson""                     
#> [7] ""test-tiles.R""                        ""workplaces_simple_edinburgh.geojson""
#> [9] ""zones_edinburgh.geojson""
od_data = read_csv(""data-raw/od_subset.csv"")
zones = read_sf(""data-raw/zones_edinburgh.geojson"")
desire_lines = od::od_to_sf(od_data, zones)
plot(desire_lines)
#> Warning: plotting the first 9 out of 13 attributes; use max.plot = 13 to plot
#> all
```

![](README_files/figure-gfm/unnamed-chunk-4-1.png)<!-- -->

Generating route networks:

``` r
# Create a subset of the desire lines for speed of computation:
desire_lines_subset = desire_lines |>
  slice_max(n = 30, order_by = all)
library(stplanr)
routes_subset = desire_lines_subset |>
  route(l = _, route_fun = route_osrm)
route_network = overline(routes_subset, attrib = ""bicycle"")
plot(route_network)
```

![](README_files/figure-gfm/unnamed-chunk-5-1.png)<!-- -->

## Exercises to test your knowledge of the NPT approach

1.  Read-in the
    [`od_subset.csv`](https://github.com/nptscot/npt/blob/main/data-raw/od_subset.csv)
    file containing origin-destination data in the
    [`data-raw`](https://github.com/nptscot/npt/blob/main/data-raw/)
    folder in this repo with the following command:

``` r
od_data = read.csv(""https://github.com/nptscot/npt/raw/main/data-raw/od_subset.csv"")
```

2.  What’s the average distance of trips according to the
    `dist_euclidean` column in that dataset?

3.  The values in the `dist_euclidean` column represent straight line
    distance between zone centroids. In what way could the values be
    over or under-estimates of the distances of trips taken between the
    OD pairs?

4.  Use the function `od_to_sf()` to convert the OD data into desire
    lines. Hint: a starting point could be:

``` r
zones = sf::read_sf(""https://github.com/nptscot/npt/raw/main/data-raw/zones_edinburgh.geojson"")
plot(zones$geometry)
```

![](README_files/figure-gfm/unnamed-chunk-7-1.png)<!-- -->

**Bonus exercises**

1.  Using interactive geographic data visualisation packages such as
    `tmap` and `leaflet`, visualise the desire lines and route network
    on a map? Which road links are most important for cycling according
    to the network results?

2.  Using the `pct::uptake_pct_godutch_2020()` function estimate the
    potential uptake of cycling based on the subset of desire lines
    created above. What is the total level of cycling resulting from
    thhat uptake?

3.  Using the `osmextract` or `osmdata` packages, or equivalent packages
    written in another language, identify the OSM ways that lie
    completely within a 500m buffer of the route network. How can you
    ensure that the results are reproducible?

4.  Bonus: think about ways to identify weak links or gaps in the cycle
    network based on the small datasets analysed. How could you scale
    this up to the whole of Scotland?

# Reproducibility

Note: to reproduce the full build process currently depends on data
sources and dependencies that are not publicly available. This is a work
in progress.

Then run the following command (requires dependencies and data to be
present):

Note: you need to have a CYCLESTREETS API key for this, see here for
details:
<https://rpackage.cyclestreets.net/reference/journey.html#details-1>

This project uses `targets` for data processing pipeline management,
with outputs like this:

![](https://user-images.githubusercontent.com/1825120/205490893-b1627e3a-5102-4dbe-bc70-97e358e75506.png)

Visualise the project as follows:

``` r
# targets::tar_visnetwork(targets_only = TRUE)
```

The zones in the case study region are as follows:

Baseline cycling levels are shown below:

``` r
tm_shape(rnet) +
  tm_lines(lwd = ""bicycle"", scale = 9)
```
",2,2,1,20,transportation-planning,"[biking, cycling, transportation, transportation-planning]",00000
1960,Operation-Research,yfgao0502,N/A,N/A,https://api.github.com/repos/yfgao0502/Operation-Research,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1C0:7CD5:2A543D5:56B90BC:65224623.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,transportation-planning,"[N, /, A]",00000
1961,Transportation_Planning,prs98,N/A,N/A,https://api.github.com/repos/prs98/Transportation_Planning,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C105:0E65:2691435:4F2DA15:65224623.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,transportation-planning,"[N, /, A]",00000
1962,On-Time-Performance-Stats,d0ugherty,N/A,N/A,https://api.github.com/repos/d0ugherty/On-Time-Performance-Stats,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C174:646E:273AAD9:50803C0:65224624.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,transportation-planning,"[N, /, A]",00000
1963,VisionEval.org,VisionEval,N/A,N/A,https://api.github.com/repos/VisionEval/VisionEval.org,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1D9:4A15:293FDEA:5484EE5:65224624.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,transportation-planning,"[N, /, A]",00000
1964,matsim-docker,maptic,N/A,N/A,https://api.github.com/repos/maptic/matsim-docker,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1E1:638B:27C01B4:5182E9F:65224625.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,transportation-planning,"[N, /, A]",00000
1965,MATSim,NikolaAndro,N/A,N/A,https://api.github.com/repos/NikolaAndro/MATSim,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C14B:18FC:2763FBC:50D06C6:65224625.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,transportation-planning,"[N, /, A]",00000
1966,metc.tbi.helper,Metropolitan-Council,Metropolitan-Council,https://github.com/Metropolitan-Council/metc.tbi.helper,https://api.github.com/repos/Metropolitan-Council/metc.tbi.helper,R code for working with Travel Behavior Inventory survey data.,"# Travel Behavior Inventory Survey Helper
This repository contains a collection of R code for working with Travel Behavior Inventory Household Survey data. 

_If you came for a pretty R Data object of the 2019 or 2021 TBI survey data, check out the_ `data` _folder or source from URL:_

```r
load(url(paste0(""https://github.com/Metropolitan-Council/metc.tbi.helper/raw/main/data/"",
                ""tbi21.rda"")))
                
load(url(paste0(""https://github.com/Metropolitan-Council/metc.tbi.helper/raw/main/data/"",
                ""tbi19.rda"")))
```

Other things you might find useful in here include R scripts to create complex cross-tabs that require funky joins, some scripts for appending auxiliary datasets & geographic information to the datasets, and more. 

This repository is in active development, and anyone can contribute 🤝. See the CONTRIBUTING page on the right to learn more. One day, this will be an R package.

## Organization: what's here

* `metadata`: Read the documentation 💘 
* `data`: compiled datasets generated from raw TBI data, that live in the Council's Oracle database.
  * `tbi19.rda` and `tbi21.rda` are compressed `list` objects for each survey containing:
      * `dictionary` of variable names, values, survey questions, and logic;
      * person-level records (`per`);
      * `day` records, for analyzing daily trends;
      * `trip` table;
      * household (`hh`) records;
      * vehicle (`veh`) records, including fuel efficiency data; and
      * `trip_purpose`, for working with trip purpose data. This table has been specially weighted to attribute weights to either end of non-home-based trips, and to the non-home based end of home-based trips.

**This is the only data we store in this GitHub repository.**  Git (even [Git LFS](https://git-lfs.github.com/)) is not ideal for storing data. If you generate additional datasets in your work, please add them to the .gitignore file. If you need to work with .csv data, please see the script `data-raw/99-survey-data-to-csv.R`, and add the .csv's to your `gitignore` file. If incorporating a new dataset, write it to the Oracle database first (see @ashleyasmus for write access).

* `data-raw`: scripts to generate datasets. Work here if you want to add a new variable to the dataset(s) or incorporate a new dataset to the database and/or .RData object. You may need access to internal databases for this work.
  * `data-raw/_data-compile.R` is the main script that sources all numbered .R scripts in this folder. 
  * `derive-var-[variable-name].R`: derive new variables from TBI datasets. 
  * `get-[dataset-name].R`: incorporate auxillary datasets (e.g., fuel efficiency data). If external to the Council, they are added to the Oracle database. Wherever possible, spatial datasets are loaded from the Council's internal GISLibrary.
* `R`: collection R code. At the moment, this is mostly crosstabs.
  * `xtab-[unit of measurement]-[variable1]-by-[variable2].R`: custom crosstabs.
  * `fun-[does-this].R`: functions or processes.
* Note that there are no folders for specific TBI-related projects/analyses. These should live in their own GitHub repositories, and source code from this repository.

## Using this code in other projects
One day, this repository might be an R package. For now, you can source data, metadata and R scripts in two ways.

(1) Clone this repository to your machine _(Preferred method)_
  This method is preferred, though it will require you to do periodic pulls from the `main` branch to your machine.

```r
source(
  paste0(
    ""directory/where/your/repository/lives/"",
    ""R/xtab-vehicle-stops.R""
  )
)
```

(2) Source files directly from GitHub.

Files that have ""raw"" output available directly on GitHub ([example](https://github.com/Metropolitan-Council/metc.tbi.helper/blob/main/R/xtab-vmt-per-vehicle.R)) can be sourced directly with base R:

```r
source(
  paste0(
    ""https://raw.githubusercontent.com/Metropolitan-Council/metc.tbi.helper/main/"", 
    ""R/xtab-vehicle-stops.R""
  )
)
```

## Creating a custom crosstab

We generally use the `tidyverse`-friendly package `srvyr` to create weighted summaries and crosstabs from the TBI data. A simple example, calculating average vehicle age by household income, follows:

```r
library(dplyr)
library(bit64) # for looking at big integers, like the person_ids

tbi_tables$veh %>%
  left_join(tbi_tables$hh) %>%
  as_survey_design(weights = ""hh_weight"", strata = ""sample_segment"") %>%
  group_by(income_detailed) %>%
  summarize(veh_age_avg = survey_mean(veh_age, na.rm = T))

```
",1,1,1,18,transportation-planning,"[rstats, transportation, transportation-planning, travel-behavior]",00000
1967,road-networks-classification,mohamedbadhrudeen,N/A,N/A,https://api.github.com/repos/mohamedbadhrudeen/road-networks-classification,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C100:18FC:2764062:50D0808:65224626.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,transportation-planning,"[N, /, A]",00000
1968,Amtrak-Scheduling-Helper,lotlouischoitslab,N/A,N/A,https://api.github.com/repos/lotlouischoitslab/Amtrak-Scheduling-Helper,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C17B:5BDF:274E93D:50B460C:652242F7.'}",N/A,N/A,N/A,N/A,transportation-planning,"[N, /, A]",00000
1969,Team-210-Frontend,BuildForSDGCohort2,N/A,N/A,https://api.github.com/repos/BuildForSDGCohort2/Team-210-Frontend,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C11F:39DF:27C20EC:5185235:65224627.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,transportation-planning,"[N, /, A]",00000
1970,junction-capacity-analyzer,geoyogesh,N/A,https://github.com/geoyogesh/junction-capacity-analyzer,https://api.github.com/repos/geoyogesh/junction-capacity-analyzer,Junction Capacity Analyzer,"# Junction Capacity Analyser

The Junction Capacity Analyser App is for transportation planers to assist with planning level operation analysis of junctions. This analysis is one component of a comprehensive intersection control evaluation (ICE) or alternatives analysis. As such, the results of the Junction Capacity Analyser App – overall v/c ratio and multimodal accommodations analysis – should not be the sole basis of choosing a given intersection or interchange form for implementation. It is not intended to be an intersection/interchange form selection tool.

This app is based on CAPX tool (Excel Tool) published by FHWA.

## Usage Disclaimer

This project is free to use for personal, non profit research and free open-source projects. kindly contact developer and maintainer Yogesh Dhanapal @ geoyogesh@gmail.com for commercial and enterprise use cases. 

## Hosted application

[http://jcapacityanalyzer.com.s3-website-us-east-1.amazonaws.com/](http://jcapacityanalyzer.com.s3-website-us-east-1.amazonaws.com/)

## Task List
- [x] develop basic application with one junction type
- [x] update the ui
- [x] deploy to public url and setup ci/cd pipeline
- [x] implement pan and zoom of junctions design using svg pan zoom library 
- [ ] include all junction types
- [ ] include dynamic junction drawing

## User Guide

1. Go to Input and input the blue boxes
![Inputt](readme-images/input.PNG)
1. review the results
![Inputt](readme-images/results.PNG)
1. Select a junction to review the design
![Inputt](readme-images/conventinal-junction-design.PNG)
1. Navigate to configuration section of the junction and update lane information in blue boxes
![Inputt](readme-images/conventinal-junction-configuration.PNG)


## Credits

Tool | Link
------------ | -------------
CAPX | [https://www.fhwa.dot.gov/software/research/operations/cap-x/](https://www.fhwa.dot.gov/software/research/operations/cap-x/)
Angular | [https://angular.io/](https://angular.io/)
Clarity Design System| [https://clarity.design/](https://clarity.design/)
Angular Flex Layout | [https://github.com/angular/flex-layout](https://github.com/angular/flex-layout)
ariutta/svg-pan-zoom | [https://github.com/ariutta/svg-pan-zoom](https://github.com/ariutta/svg-pan-zoom)
MathJs | [https://mathjs.org/](https://mathjs.org/)
rxjs | [https://rxjs-dev.firebaseapp.com/](https://rxjs-dev.firebaseapp.com/)
Typescript | [https://www.typescriptlang.org/](https://rxjs-dev.firebaseapp.com/)
@jefiozie/ngx-aws-deploy | [https://github.com/Jefiozie/ngx-aws-deploy#readme](https://github.com/Jefiozie/ngx-aws-deploy#readme)
Adobe Illustrator | [https://www.adobe.com/products/illustrator.html](https://www.adobe.com/products/illustrator.html)
",1,1,2,0,transportation-planning,"[capacity-planning, capx, interchange, intersection, junction, roundabout, transportation, transportation-planning]",00000
1971,PCU-calculator,dineth33,N/A,https://github.com/dineth33/PCU-calculator,https://api.github.com/repos/dineth33/PCU-calculator,This is a streamlit web application which can be used to calculate Passenger Car Unit (PCU) values for a selected road section. ,"# Passenger Car Unit (PCU) Calculator 

Passenger car unit (PCU) is an important attribute for traffic capacity analysis and other relevant applications such as level of service (LOS) measures, determination of saturation flow rate, signal design and coordination, and development of traffic flow models.

This is a streamlit web application [click here](https://share.streamlit.io/dineth33/pcu-calculator/main/app.py) which can be used to calculate Passenger Car Unit (PCU) values for a selected road section.This web application calculates the PCU values using Chandras method, which is a popular method to estimate PCU values for midblock road sections, For further details, please refer the following. 

1. *S. Chandra, V. Kumar, P.K. Sikdar Dynamic PCU and estimation of capacity of urban roads Indian Highw. Indian Road Congr., 23 (4) (1995), pp. 17-28*.
2. *Dhananjaya, D. D., Fernando, W. W. P. M.,Sivakumar, T. Passenger Car Units for Different Midblock Sections in Sri Lanka using Chandra’s Method. ENGINEER: Journal of the Institution of Engineers, Sri Lanka*

**If you use this application, please be kind enough to cite these papers in your work**
",1,1,1,0,transportation-planning,"[calculator, passenger-car-unit, pcu, streamlit, traffic-, transportation, transportation-planning, webapplication]",00000
1972,NSW_Traffic_Volume_Viewer_Analytics,peterstephan,N/A,https://github.com/peterstephan/NSW_Traffic_Volume_Viewer_Analytics,https://api.github.com/repos/peterstephan/NSW_Traffic_Volume_Viewer_Analytics,This series of notebooks have been developed to analyse traffic data from the NSW Traffic Volume Viewer website,"# NSW Traffic Volume Viewer Analytics

This series of notebooks have been developed to analyse traffic data from the NSW Traffic Volume Viewer website - see: 
https://roads-waterways.transport.nsw.gov.au/about/corporate-publications/statistics/traffic-volumes/aadt-map/index.html#/?z=6

Refer to the official documentation for details of the data:
""Dataset Documentation - NSW Traffic Volume Counts.pdf""",1,1,1,0,transportation-planning,"[traffic, traffic-analysis, traffic-data, transport, transport-api, transportation, transportation-network, transportation-planning]",00000
1973,DTS-Complete-Streets,Ray-Mangan,N/A,N/A,https://api.github.com/repos/Ray-Mangan/DTS-Complete-Streets,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1D3:7039:27B5C63:5178240:65224627.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,transportation-planning,"[N, /, A]",00000
1974,mbta-stop-display,jprusik,N/A,N/A,https://api.github.com/repos/jprusik/mbta-stop-display,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C122:5934:287539C:5331371:652243C7.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,transportation-planning,"[N, /, A]",00000
1975,Traffic-Assignment-Frank-Wolfe-2022,Ashkanfld,N/A,N/A,https://api.github.com/repos/Ashkanfld/Traffic-Assignment-Frank-Wolfe-2022,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1BA:59CA:266DB46:4EEE2B5:65224628.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,transportation-planning,"[N, /, A]",00000
1976,InfrastructuresPlanner,CivML-PolyMtl,N/A,N/A,https://api.github.com/repos/CivML-PolyMtl/InfrastructuresPlanner,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C11A:603C:28C1DA3:538561D:65224628.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,transportation-planning,"[N, /, A]",00000
1977,lookup,NNikiforuk,N/A,N/A,https://api.github.com/repos/NNikiforuk/lookup,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C1CB:2299:255D850:4CC8325:652242FD.'}",N/A,N/A,N/A,N/A,transportation-planning,"[N, /, A]",00000
1978,TPU,gnegrelli,N/A,N/A,https://api.github.com/repos/gnegrelli/TPU,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C161:75D0:266658F:4EE81E4:65224517.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,transportation-planning,"[N, /, A]",00000
1979,distributor-to-disaster-areas-with-dijsktra-algorithm,rag0nn,N/A,N/A,https://api.github.com/repos/rag0nn/distributor-to-disaster-areas-with-dijsktra-algorithm,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C167:64D2:734DD9:EE0437:65224327.'}",N/A,N/A,N/A,N/A,transportation-planning,"[N, /, A]",00000
1980,SharedParkingCalculator,joshuacayanan,N/A,N/A,https://api.github.com/repos/joshuacayanan/SharedParkingCalculator,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1DA:2EE5:2881FAE:5356E23:6522435A.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,transportation-planning,"[N, /, A]",00000
1981,pixbike,ozankaraali,N/A,N/A,https://api.github.com/repos/ozankaraali/pixbike,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C152:7E90:2706546:5005443:65224629.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,transportation-planning,"[N, /, A]",00000
1982,Geo-Sic,GrupoNoveGovAberto,N/A,N/A,https://api.github.com/repos/GrupoNoveGovAberto/Geo-Sic,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1BB:16F7:26E2742:4FCCA82:65224629.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,transportation-planning,"[N, /, A]",00000
1983,resilience,JPchomp,N/A,N/A,https://api.github.com/repos/JPchomp/resilience,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1F4:6EFD:257874C:4D0CC65:6522462A.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,transportation-planning,"[N, /, A]",00000
1984,bike-bus,golete,N/A,N/A,https://api.github.com/repos/golete/bike-bus,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1F3:5C75:27A132E:5153FA5:6522462B.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,transportation-planning,"[N, /, A]",00000
1985,StibRide,alahyaoui,N/A,https://github.com/alahyaoui/StibRide,https://api.github.com/repos/alahyaoui/StibRide,My JavaFx implementation of an application that allows people to get the shortest path between two metro station in the public transport network of Brussels.,"# StibRide

My JavaFx implementation of an application that allows people to get the shortest path between two metro station in the public transport network of Brussels.

# Description

## STIB-MIVB
The Brussels Intercommunal Transport Company is the local public transport operator in Brussels, Belgium. It is usually referred to in English by the double acronym STIB-MIVB, or by its French acronym, STIB.

# Installation
Without a ssh key:
```
$ git clone https://github.com/alahyaoui/StibRide.git
```
With a ssh key:
```
$ git clone git@github.com:alahyaoui/StibRide.git
```

# Execution
Move to the project repository and execute
```
$ cd StibRide/
$ mvn javafx:run
```
Nb: You need maven installed and added to your PATH environment variables.
If its not, download maven <a href=""https://maven.apache.org/install.html"">here</a>

# Author
- **Lahyaoui Ayoub**
",0,0,1,1,transportation-planning,"[dao, dto, java, javafx, mvp, repository, scenebuilder, sqlite, transport, transportation, transportation-network, transportation-planning]",00000
1986,transportforathens,dimnioras,N/A,https://github.com/dimnioras/transportforathens,https://api.github.com/repos/dimnioras/transportforathens,"Source code of the website related to Transport for Athens, hosted at transportforathens.org","# transportforathens.org

## What is Transport for Athens?

Transport for Athens is an effort to present a vision for a better public transportation system in Athens and the Attica region. In this website you will find recommendations about the upgrade and reorganization of the public transportation network in Athens based on transportation planning principles, the history and best practices, as well as the author's ideas. Moreover, you will find posts and critiques related to the current transportation system plan in Athens.

## Technical details

The website is created using MkDocs, a Static Site Generator (SSG) that utilizes Markdown to create pages.
",0,0,1,0,transportation-planning,"[mkdocs, mkdocs-material, python, transportation, transportation-network, transportation-planning]",00000
1987,transport-eth-contracts,flotea-io,N/A,N/A,https://api.github.com/repos/flotea-io/transport-eth-contracts,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C19F:0E65:2691B58:4F2E8DC:6522462A.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,transportation-planning,"[N, /, A]",00000
1988,Intelligent-transport,yanivbenzvi,N/A,N/A,https://api.github.com/repos/yanivbenzvi/Intelligent-transport,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1C5:5173:250D4DF:4C2D358:6522462B.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,transportation-planning,"[N, /, A]",00000
1989,KL-Metroscape,rene78,N/A,N/A,https://api.github.com/repos/rene78/KL-Metroscape,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C17C:7D9C:2B8A0E4:59163ED:6522462C.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,transportation-planning,"[N, /, A]",00000
1990,transportation-management,rwdevops,N/A,N/A,https://api.github.com/repos/rwdevops/transportation-management,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C112:2299:258E9B9:4D2DBD9:6522462C.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,transportation-planning,"[N, /, A]",00000
1991,BlueWay,procyberian,N/A,N/A,https://api.github.com/repos/procyberian/BlueWay,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C1BE:4179:2DF8CE0:5E15399:65224347.'}",N/A,N/A,N/A,N/A,transportation-planning,"[N, /, A]",00000
1992,2echelon_v2,Horizon-LEAD,N/A,N/A,https://api.github.com/repos/Horizon-LEAD/2echelon_v2,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1E3:12FA:61992D:C910D4:6522462D.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,transportation-planning,"[N, /, A]",00000
1993,TTC-Delay-Analysis,Patrickdg,N/A,N/A,https://api.github.com/repos/Patrickdg/TTC-Delay-Analysis,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1D8:2B20:25D2421:4DC3DBD:652243E0.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,transportation-planning,"[N, /, A]",00000
1994,crrt-route-finder,MUL-Chair-of-Industrial-Logistics,N/A,N/A,https://api.github.com/repos/MUL-Chair-of-Industrial-Logistics/crrt-route-finder,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C105:092A:715388:EA3EBE:65224330.'}",N/A,N/A,N/A,N/A,transportation-planning,"[N, /, A]",00000
1995,Perceived_safety_choices,lotentua,N/A,N/A,https://api.github.com/repos/lotentua/Perceived_safety_choices,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C12B:28F2:2A67CF0:56D2DD3:6522462E.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,transportation-planning,"[N, /, A]",00000
1996,areaplan,elipousson,N/A,N/A,https://api.github.com/repos/elipousson/areaplan,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C164:58F5:2603242:4E11694:6522462E.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,transportation-planning,"[N, /, A]",00000
1997,transport-engine,flotea-io,N/A,N/A,https://api.github.com/repos/flotea-io/transport-engine,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C144:6829:2E742E7:5F22F25:65224364.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,transportation-planning,"[N, /, A]",00000
1998,2echelon,Horizon-LEAD,N/A,N/A,https://api.github.com/repos/Horizon-LEAD/2echelon,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1B6:7039:27B6411:517924E:6522462F.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,transportation-planning,"[N, /, A]",00000
1999,SOTA-Py,mehrdadn,N/A,https://github.com/mehrdadn/SOTA-Py,https://api.github.com/repos/mehrdadn/SOTA-Py,A discrete-time Python-based solver for the Stochastic On-Time Arrival routing problem,"# What is SOTA-Py?

SOTA-Py is a Python-based solver for the policy- and path-based ""SOTA"" problems,
using the algorithm(s) described in
[*Tractable Pathfinding for the Stochastic On-Time Arrival Problem*](https://link.springer.com/chapter/10.1007/978-3-319-38851-9_16) (also in the corresponding [arXiv preprint](https://arxiv.org/abs/1408.4490))
and previous works referenced therein.

What is the SOTA problem? Read on...

# Theory (in plain English)

## What is the ***Stochastic On-Time Arrival*** problem (SOTA)?

It's the ***reliable routing*** problem:

> ### *How do you travel from point A to point B **in T time** under traffic?*  

For example, you might have a meeting in San Jose at 3pm, and one to reach in San Francisco at 4pm.  
Or you might need to get from your house to the airport in less than 1 hour.

### Doesn't Google Maps already solve this?

No. It doesn't let you specify a time budget.
It only lets you specify a departure or arrival time, but not both.

What it (probably) gives you is the path with the *least expected (average) time* to your destination.

### But so what? 30 minutes or 60 minutes—isn't there a *single* best path?

No. That would only be the case if traffic was perfectly predictable.

If you don't have a lot of time, you might need to take a riskier path
(e.g. a highway), otherwise you might have no chance of reaching your destination on time.
But if you have a lot of time, you might take a safer path (like side roads) that no one uses,
to avoid suddenly getting stuck in the middle of, say, a highway, due to traffic.

That means your time budget can affect your route.

## Policy- vs. Path-based Routing

### What is the *policy-based* SOTA problem?

It is the case of the SOTA problem where you decide which road to take based on how much time you have left.
You'd probably need a navigation device for this, since there are too many possibilities in the ""policy"" to print on paper.

This is what you'd prefer to do, because it can potentially give better results depending on whether you get lucky/unlucky with traffic.

This is a dynamic-programming problem, because the probability of reaching your destination on time
is just the maximum probability of reaching it from each road at the next intersection.

### What is the *path-based* SOTA problem?

It is the SOTA problem in the case where you statically decide on the entire path before you depart.  
You can just print out a map for this on paper, the old-fashioned way.

This is—counterintuitively!—a much tougher problem than finding the policy.
Even though the solution looks simpler (it's just a path rather than a policy),
it's much harder to compute.
Why? Intuitively, it's because after you travel a bit,
you won't necessarily be on the most optimal path anymore,
so you can't make that assumption to simplify the problem initially.  
By contrast, in the policy-based scenario, you always assume that your future actions are optimal,
so you have an optimal subproblem structure to exploit.

## The Algorithm

The (unhelpful) ultra-short version is that Dijkstra's algorithm is used for policy-based SOTA and A* is used for path-based SOTA.

The (more helpful) short version is:
- For the policy computation, a re-visiting variant of Dijkstra's algorithm
is used to obtain an optimal ordering for computing the reliabilty of each node,
and a technique known as *zero-delay convolution* is used to perform cross-dependent convolutions incrementally
to keep the time complexity quasilinear in the time budget. (A naive FFT would not do this.)  
- For the path computation, the computed policy is used as an (admissible) heuristic in A*.
Note that this choice of a heuristic is critical. A poor heuristic can easily result in exponential running time.

For the long version, please see the paper linked above, and others referenced inside.
The paper should (hopefully) be quite easy to follow and understand, especially as far as research papers go.

Note that the pre-processing algorithms from the paper (such as *arc-potentials*) are **not** implemented,
but they should be far easier to implement than the pathfinding algorithms themselves.

## The Traffic Model

This code models the travel time across every road as a mixture of Gaussian distributions (GMM)
(""censored"" to strictly positive travel times).
It discretizes the distributions and solves the discrete problem in discrete-time.

Obviously, realistic travel times are not normally distributed. But that's the model of the data I had.
Getting good traffic data is hard, and encoding data efficiently is also hard.
If you don't like the current model, you'd have to change the code to accommodate other models.

# The Code

## Inputs

### Dependencies

- [**NumPy**](http://www.numpy.org) is the only hard external dependency.  
- [**Numba**](//numba.pydata.org), if available, is used for compiling Python to native code (≈ 3× speedup).  
- [**PyGLET**](http://www.pyglet.org), if available, is used for rendering the results on the screen via OpenGL.
- [**SciPy**](//www.scipy.org), if available, is used for slightly faster FFTs.  

### Map File Format

The road network and traffic data is assumed to be a concatentation of JSON objects, each as follows:

	{
		""id"": [10000, 1],
		""startNodeId"": [1000, 0],
		""endNodeId"": [1001, 0],
		""geom"": { ""points"": [
			{""lat"": 37.7, ""lon"": -122.4},
			{""lat"": 37.8, ""lon"": -122.5}
		]},
		""length"": 12,
		""speedLimit"": 11.2,
		""lanes"": 1,
		""hmm"": [
			{""mode"": ""go"", ""mean"": 1.2, ""cov"": 1.5, ""prob"": 0.85},
			{""mode"": ""stop"", ""mean"": 7, ""cov"": 0.1, ""prob"": 1.5E-1}
		]
	}

Note the following:

- The HMM directly represents *travel times* for various ""modes"" of travel (stop, go, etc.) for the Gaussian mixture model.
- The HMM is ""optional"". If missing, pseudo-random data is generated.
- The length and speed limit are divided to obtain the *minimum* travel time across each edge
  (we assume an ideal world where everyone abides by the speed limit).
  Therefore, their individual values are not relevant; only their ratio is relevant.
- The number of lanes is only for rendering purposes.
- Every ID is assumed to be of the form [primary, secondary], where the secondary number is small.  
  The secondary component is intended to distinguish different segments of the same road for each edge.
- A minimum covariance is enforced in the code. (If your variance is too low, you may need to change this.)
- No comma or brackets should delimit these objects, so the full file isn't strictly JSON.
- For hand-checking simple cases, I recommend you set the length to be a multiple of the speed limit
  in order to avoid floating-point round-off error.

## Maintenance (or: why is the code ugly?)

This code isn't intended to finish any job for you. It's certainly not production-quality.
It's just meant to help any researchers working on this topic get started and/or cross-check their algorithm correctness.

Given that it's not meant to be used in any production,
I don't plan on actively maintaining it unless I encounter bugs (or if I see enough interest from others).

## Example

There's no short ""getting started"" code example, sorry.
The main startup file is basically a (very) long example.

### Usage

It's pretty self-explanatory:

	python Main.py --source=65280072.0 --dest=65345534.0 --budget=1800 --network=""data/sf.osm.json""

The time discretization interval is automatically chosen to be the globally minimum travel time across
any edge in the network,
since it should be as large as possible (for speed) and smaller than the travel time of every edge.
You would need to change this in the code for greater accuracy.

Note that a time budget that is too high can cause the pathfinding algorithm to thrash exponentially, because
the reliability of *every* path reaches 100% as your time budget increases, and the algorithm ends up
trying all of them.  
However, realistically, you would not need to run this algorithm for very high time budgets.
A classical path would already be reliable enough.

### Demo

Note that you (obviously) need both a map and traffic data to run this code.
Unfortunately I can't release the dataset I used in the paper,
but I have a sample map from **OpenStreetMap**, and the code attempts to naively fill in missing traffic data,
so that should be good enough to get started.

Here's an example of what one can get in 15 seconds on my machine. The code runs in two phases:

- As time increases, the optimal policy is computed for reachable roads farther and farther from the destination
  (highlighted), until the source is reached.  
  Roads that can never be used to reach the destination on time are not examined.
- Once the policy is determined, the optimal path for each time budget *up to* the one requested is determined,
  in order from high to low time budget.  
  This is to demonstrate the fact that the optimal path can change depending on the time budget.

![Animation](doc/SOTA-Demo.gif)

# Contact

## Licensing

Please refer to the license file.

For attribution, a reference to the aforementioned article (which this code is based on) would be kindly appreciated.

## Questions/Comments

If you find a bug, have questions, would like to contribute,
or the like, feel free to open a GitHub issue/pull request/etc.

For private inquiries (e.g. commercial licensing requests), you can find my contact
information if you search around (e.g. see the paper linked above).
",401,401,12,0,transportation-network,"[a-star, arrival, convolution, dijkstra-shortest-path, pathfinding-algorithm, reliable-routing, routing, routing-algorithm, shortest-path-problem, shortest-path-routing-algorithm, shortest-pathfinding-algorithm, stochastic-dynamic-programming, stochastic-models, transportation, transportation-network, transportation-planning, transportation-problem]",00000
2000,transport-network-animator,traines-source,N/A,N/A,https://api.github.com/repos/traines-source/transport-network-animator,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C14F:6459:267BDB9:4F16FB6:6522440E.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,transportation-network,"[N, /, A]",00000
2001,hironex,johannesuhl,N/A,https://github.com/johannesuhl/hironex,https://api.github.com/repos/johannesuhl/hironex,"HiRoNEx: Historical road network extractor: A python tool for automatic, fully unsupervised extraction of historical road networks from historical maps.","# HIRONEX: Historical road network extractor
HIRONEX is a python tool for automatic, fully unsupervised extraction of historical road networks from historical maps. 
HIRONEX reads a shapefile containing the modern road network, and a scanned & georeferenced historical map from year T, covering the same area, in the same spatial reference system.
Then, HIRONEX samples the color information from the historical map, and calculates a probability (road overlap indicator - ROI) for each modern road segment of overlapping with a road symbol in the historical map. Then, 1d cluster analysis is applied to extract road segments that are likely to have existed in the year T of the historical map.
The ROI and resulting cluster labels are then appended to the input shapefile, which can be visualized directly in the script.

The HIRONEX output is not perfect, as HIRONEX is work in progress and is currently being improved.
There are a few user-set parameters (see script), that should be tested in order to optimize results. While sensitivity analyses have shown that the results are largely invariant to these parameters, tweaking them can greatly improve processing time.

<img width=""1000"" src=""https://github.com/johannesuhl/hironex/blob/main/hironex.jpg"">

Reference:

Uhl, J. H., Leyk, S., Chiang, Y. Y., & Knoblock, C. A. (2022). Towards the automated large-scale reconstruction of past road networks from historical maps. Computers, Environment and Urban Systems, 94, 101794. https://doi.org/10.1016/j.compenvurbsys.2022.101794


",68,68,8,0,transportation-network,"[clustering, geographic-data, geographical-information-system, historical-data, historical-gis, historical-maps, map, map-processing, road-network, spatial-data, topographic-maps, transportation, transportation-network, urbanization]",00000
2002,global-indicators,global-healthy-liveable-cities,global-healthy-liveable-cities,https://github.com/global-healthy-liveable-cities/global-indicators,https://api.github.com/repos/global-healthy-liveable-cities/global-indicators,"An open-source tool for calculating spatial indicators for healthy, sustainable cities worldwide using open or custom data.","{'message': 'Not Found', 'documentation_url': 'https://docs.github.com/rest/repos/contents#get-repository-content'}",66,66,10,16,transportation-network,"[accessibility, city, city-government, health, public-health, public-transport, transport, transportation-network, urban, urban-design, urban-planning]",00000
2003,DTA,DrKeHan,N/A,https://github.com/DrKeHan/DTA,https://api.github.com/repos/DrKeHan/DTA,"This repository documents MATLAB implementation of a dynamic user equilibrium solver, including a dynamic network loading sub-routine","# DTA
This repository documents a MATLAB package for computing large-scale Dynamic User Equilibrium models. 

# Documentation
Han, K, Eve, G, Friesz, TL, 2019. Computing dynamic user equilibria on large-scale networks with software implementation. Networks and Spatial Economics, Volume 19, Issue 3, pp 869–902. Open-access URL: https://doi.org/10.1007/s11067-018-9433-y.
",62,62,5,2,transportation-network,"[modeling, traffic, traffic-simulation, transport, transportation, transportation-network, transportation-planning, transportation-simulation]",00000
2004,bikenwgrowth,mszell,N/A,N/A,https://api.github.com/repos/mszell/bikenwgrowth,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1B8:18FC:2764A80:50D1CCE:6522462F.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,transportation-network,"[N, /, A]",00000
2005,OsmToRoadGraph,AndGem,N/A,N/A,https://api.github.com/repos/AndGem/OsmToRoadGraph,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1DC:99FD:2525667:4C6FAF6:65224630.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,transportation-network,"[N, /, A]",00000
2006,sdna_open,fiftysevendegreesofrad,N/A,N/A,https://api.github.com/repos/fiftysevendegreesofrad/sdna_open,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C179:0BEC:2E1D90:601402:65224619.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,transportation-network,"[N, /, A]",00000
2007,DTD,DrKeHan,N/A,https://github.com/DrKeHan/DTD,https://api.github.com/repos/DrKeHan/DTD,"This repository documents the MATLAB implementation of several day-to-day (disequilibrium) dynamic traffic assignment models, e.g. based on stochastic choice models, bounded rationality, and information sharing behavior","# DTD
This repository documents a day-to-day dynamic traffic assignment model on the Sioux Falls network, with possible extensions to other networks by updating the dynamic network loading module (see https://github.com/DrKeHan/DTA). 

Documentation and cite as:
Yu, Y., Han, K., Ochieng, W.Y., 2020. Day-to-Day Dynamic Traffic Assignment with Imperfect Information, Bounded Rationality and Information Sharing. Transportation Research Part C, 114, 59-83.

Run one of the following scripts to run a version of the day-to-day dynamic traffic assignment model:
Base_Model_I.m,
Base_Model_I_BR.m,
Base_Model_I_IS.m,
Base_Model_II.m, and 
Base_Model_II_IS.m
",18,18,2,0,transportation-network,"[transport, transportation, transportation-management, transportation-network, transportation-problem, transportation-simulation, transportation-systems]",00000
2008,Shapefile_to_Network,Garvit244,N/A,https://github.com/Garvit244/Shapefile_to_Network,https://api.github.com/repos/Garvit244/Shapefile_to_Network,Convert Shapefile to the Network and find number of shortest paths,"# Shapefile To Network
Construct a network from shapefile and do analytics such as finding number of shortest paths from origin to destination, calculating centrality, degree of the nodes in network.

## Overview
This python module allow you to get number of alpha times shortest paths from origin to destination where alpha is some constant specified by the user. You can also do some analysis over the network like finding degree, centrality of the nodes in graph.

#### Original Network

<br/><img src = ""https://github.com/Garvit244/Shapefile_to_Network/blob/master/shapefile_to_network/Images/Original_Network.png"" height=""450"" width =""450"" alight=""left""> 

#### New Simplified Network

<br/> <img src = ""https://github.com/Garvit244/Shapefile_to_Network/blob/master/shapefile_to_network/Images/New_Network.png"" height=""450"" width =""450""> 


## Installation

* Install python >= 2.7 
  * Ubuntu
    ```
    $ sudo apt-get install python-2.7
    ```
    
  * Mac
    ```
    $ brew install python
    ```
* Run **_setup.py_** for installing required packages

  ```
  $ python2.7 setup.py install
  ```
## Documentation
#### Core Scripts 

* _GraphConvertor.py_  - This module will take the input line shapefile and the path of output directory 
* _ShortestPath.py_    - This module will calculate the number of _alpha_ times shortest path from origin to destination in the graph

#### Other Scripts 

* _BufferedGraph.py_ - This module create the square (_buffer_) of given size around the point geometry 
* _GraphSimplify.py_ - This module will clean and remove all the redundant edges and extra/ uninformative nodes from the graph 
* _MultiDiGraphConvertor.py_ - This module will convert the MultiDiGraph to SimpleGraph 


## How to use
* Create the line shapefile of the road network (if not available)

  * Using QGIS
    - Open the shapefile in QGIS which need to be converted to line shapefile
    - Go to **_Vector_ -> _Geometry Tools_** and select **_Polygons to lines_** to convert shapefile into line shapefile
    
  * Using python
    - Need to be implemented
    
* Convert the created line shapefile into network using **_GraphConvertor.py_**

  * Create **_GraphConvertor_** object by passing the path of input shapefile and the output directory
  
    ```python
    input_file  =  'path of the line shapefile'
    output_dir  =  'path of directory to save new shapefiles'
    
    graph_convertor_obj = GraphConvertor(input_file, output_dir)
    ```
  * Call **_graph_convertor_** function to convert the input shapefile into road network and save the newly created shapefile into specifed **_output_dir_** along with list of nodes and edges in _.csv_ files
  
    ```python
    network = graph_convertor_obj.graph_convertor()
    ```
  
* Find number of shortest paths from origin to destination in new simplified network

  * Create **_ShortestPath_**  object by passing all required parameters listed below
  
     ```python
     g            =  network
     alpha        =  0.1
     graph_buffer =  100
     point_buffer =  50
     break_point  =  200         # Upper limit to save computation time

     shortest_path_obj   =  ShortestPath(g, alpha, graph_buffer, point_buffer, break_point)
     ```
     
   * Run **_alpha_times_shortestpath_** function to calculate number of paths which are alpha times the shortest path
  
     ```python
     start_tuple  =  (lat,lon)
     end_tuple    =  (lat,lon)

     total_path   =  shortest_path_obj.alpha_time_shortestpath(start_tuple, end_tuple)
     ```
* Find metrics like degree centrality, closeness centrality, communicability and load centrality for doing analysis over created network.
 
  * Create **_Centrality_** object by passing the network and the weight attribute of the network
   
    ```python
    centrality = Centrality(g, weight='distance')
    ```

  * Get all the metrics of the network by calling **_metrics_** function of centrality class

    ```python
    degree_centrality, closeness_centrality, communicability, load_centrality = centrality.metrics()
    ```
    
## More Info
For reference/citing: [Journal Paper](https://arxiv.org/pdf/1902.08028.pdf).
",17,17,5,0,transportation-network,"[geography, geospatial-analytics, geospatial-data, networkx, networkx-graph, qgis, road-network, shapefile, shortest-paths, spatial-analysis, street-networks, temporal-networks, transportation, transportation-network, urban-planning]",00000
2009,IdealFlowNetwork,teknomo,N/A,N/A,https://api.github.com/repos/teknomo/IdealFlowNetwork,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C165:38A4:2C2723B:5A9A9E3:6522461A.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,transportation-network,"[N, /, A]",00000
2010,PublicTransportNetworks,FOR2083,FOR2083,https://github.com/FOR2083/PublicTransportNetworks,https://api.github.com/repos/FOR2083/PublicTransportNetworks,"The grid dataset, provided by DFG research unit FOR2083","# Public Transport Networks
Public Transport Networks is a networks repository for public transport research. It provides networks as test instances for the following types of problems:
  - Public transport network design problem (NDP)
  - Public transport vehicle and crew scheduling
  - Public transport networks with disturbances
  - Public transport assignment
  - Handling of ridesharing trips

# How the Data is Organized

Each individual network and related files is stored in a separate folder. Each folder contains the following subfolders:
  - Input: provides data describing the transport supply (nodes, stops, links, running times)  and data describing the travel demand (traffic zones, trips between traffic zones)
  - Solution_NDP_Summary: Overview of all solutions for the Network Design Problem
  -	Solution_NDP_Name: Description of a particular solution for the Network Design Problem 
  
# License 

The current data sets are a result of the research project ""[FOR 2083: Integrated Planning For Public Transportation](https://for2083.math.uni-goettingen.de/en/project)"" funded by the German Research Association DFG. Data sets are for academic research purposes only. Users are fully responsible for any results or conclusions obtained by using these data sets. Users must indicate the source of any dataset they are using in any publication that relies 
on any of the datasets provided in this web site.  The Research Group FOR 2083 is not responsible for the content of the data sets. Agencies, organizations, institutions and individuals acknowledged in this web site for their contribution to the datasets are not responsible for the content or the correctness of the datasets.

# Summary of Networks

| Network                                            | Zones | Links  | Nodes  | Stops  |
| ---                                                | ---   | ---    | ---    | ---    |
| Grid 5x5                                           |    25 |     80 |     25 |     25 |
| Grid 21x21                                         |   100 |   1680 |    441 |    341 |
| Ring 8x11                                          |   161 |    640 |    161 |    161 |
| Ring 16x22                                         |   672 |   6720 |   2689 |    673 |
| SiouxFalls                                         |    24 |     76 |     24 |     74 |
| Erding											                       |    52 |    146 |     52 |     52 |
| Stuttgart                                          |   588 |   1436 |    577 |    577 |

# Formats
The  data is provided in the following formats
  - text-format [LimTim](https://lintim.math.uni-goettingen.de/index.php?go=main.php&lang=en)
  - text-format [VISUM](http://vision-traffic.ptvgroup.com/en-us/products/ptv-visum/)
  - spreadsheet-format (.xls)
  - binary-format [VISUM](http://vision-traffic.ptvgroup.com/en-us/products/ptv-visum/)
  

# Other Related Projects
- [LinTim](https://lintim.net/)
- [Transportation Networks](https://github.com/bstabler/TransportationNetworks)
",11,11,2,0,transportation-network,"[dataset, lintim, public-transport, public-transportation, transportation, transportation-network, visum]",00000
2011,voyager,gaurang,N/A,N/A,https://api.github.com/repos/gaurang/voyager,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C12E:7646:29A421E:555169C:65224631.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,transportation-network,"[N, /, A]",00000
2012,access-to-services,datasciencecampus,N/A,N/A,https://api.github.com/repos/datasciencecampus/access-to-services,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C12B:47EE:2BBA682:59B6165:65224394.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,transportation-network,"[N, /, A]",00000
2013,Transport-Automation,shubhamgosain,N/A,N/A,https://api.github.com/repos/shubhamgosain/Transport-Automation,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C131:638B:27C1331:5185274:65224631.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,transportation-network,"[N, /, A]",00000
2014,visum_to_pandas,RafalKucharskiPK,N/A,N/A,https://api.github.com/repos/RafalKucharskiPK/visum_to_pandas,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C11D:049C:274386D:509AC52:65224632.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,transportation-network,"[N, /, A]",00000
2015,bikenwgaps,anastassiavybornova,N/A,N/A,https://api.github.com/repos/anastassiavybornova/bikenwgaps,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C13F:638B:27C14FC:518561B:65224632.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,transportation-network,"[N, /, A]",00000
2016,traveltimeHMM,melmasri,N/A,https://github.com/melmasri/traveltimeHMM,https://api.github.com/repos/melmasri/traveltimeHMM,Travel time prediction from GPS observations using an HMM,"
# traveltimeHMM

`traveltimeHMM` package implements a Hidden Markov Model (HMM) with a
random trip effect to estimate the distribution of travel time. The HMM
is used to capture dependency on hidden congestion states. The trip
effect is used to capture dependency on driver behaviour. Variations of
those two types of dependencies leads to four models to estimate the
distribution of travel time. Prediction methods for each model is
provided.

[Package website](https://melmasri.github.io/traveltimeHMM/)

## Installation

The package is still under development in the Beta stage.

Install from [GitHub](https://github.com/melmasri/traveltimeHMM) with:

``` r
# install.packages(""devtools"")
devtools::install_github(""melmasri/traveltimeHMM"")
```

## Example

This package includes a small data set (`tripset`) that aggregates
map-matched anonymized mobile phone GPS data collected in Quebec city in
2014 using the Mon Trajet smartphone application developed by [Brisk
Synergies Inc](https://brisksynergies.com/). The precise duration of the
time period is kept confidential.

View the data with:

``` r
library(traveltimeHMM)
data(tripset)
head(tripset)
#>   tripID linkID timeBin logspeed traveltime    length                time
#> 1   2700  10469 Weekday 1.692292  13.000000  70.61488 2014-04-28 06:07:27
#> 2   2700  10444 Weekday 2.221321  18.927792 174.50487 2014-04-28 06:07:41
#> 3   2700  10460 Weekday 2.203074   8.589937  77.76295 2014-04-28 06:07:58
#> 4   2700  10462 Weekday 1.924290  14.619859 100.15015 2014-04-28 06:08:07
#> 5   2700  10512 Weekday 1.804293   5.071986  30.81574 2014-04-28 06:08:21
#> 6   2700   5890 Weekday 2.376925  31.585355 340.22893 2014-04-28 06:08:26
```

To fit a simple `HMM` model use the following code

``` r
fit <- traveltimeHMM(data = tripset,nQ = 2,max.it = 20, model = ""HMM"")
```

Predict for a single trip with:

``` r
single_trip <- subset(tripset, tripID==2700)
pred <- predict(object = fit,
               tripdata = single_trip,
               starttime = single_trip$time[1],
               n = 1000)
hist(pred, freq = FALSE)
```

## Bugs

This is a work in progress. For bugs and features, please refer to
[here](https://github.com/melmasri/traveltimeHMM/issues).

## References

Woodard, D., Nogin, G., Koch, P., Racz, D., Goldszmidt, M., Horvitz, E.,
2017. “Predicting travel time reliability using mobile phone GPS data”.
*Transportation Research Part C*, 75, 30-44.
<http://dx.doi.org/10.1016/j.trc.2016.10.011>
",7,7,1,2,transportation-network,"[arrival-times, bayesian, eta, gps, hidden-markov-models, hmm, routing, transportation, transportation-network, travel-time, uncertainty-quantification]",00000
2017,transportation-flow-network,nilesh-patil,N/A,N/A,https://api.github.com/repos/nilesh-patil/transportation-flow-network,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1C4:9D23:271CF38:5047D47:65224633.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,transportation-network,"[N, /, A]",00000
2018,ADO,thomasleplus,N/A,N/A,https://api.github.com/repos/thomasleplus/ADO,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C137:6A74:1A32755:35F4CBD:6522427F.'}",N/A,N/A,N/A,N/A,transportation-network,"[N, /, A]",00000
2019,ifn-transport,teknomo,N/A,N/A,https://api.github.com/repos/teknomo/ifn-transport,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C168:9938:2A108D0:56589DA:6522461D.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,transportation-network,"[N, /, A]",00000
2020,london-tube,mfarragher,N/A,N/A,https://api.github.com/repos/mfarragher/london-tube,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C167:5173:250DF22:4C2E88A:65224634.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,transportation-network,"[N, /, A]",00000
2021,Astuce-API,Alba0404,N/A,N/A,https://api.github.com/repos/Alba0404/Astuce-API,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1C7:18FC:2764F8D:50D2755:65224634.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,transportation-network,"[N, /, A]",00000
2022,FetchMuniTimes,thomasleplus,N/A,https://github.com/thomasleplus/FetchMuniTimes,https://api.github.com/repos/thomasleplus/FetchMuniTimes,Deployment package for an AWS Lamba returning the next SFMTA Muni times,"# FetchMuniTimes

Deployment package for an AWS Lamba returning the next times at a selection of stations.

[![Flake8](https://github.com/thomasleplus/FetchMuniTimes/workflows/Flake8/badge.svg)](https://github.com/thomasleplus/FetchMuniTimes/actions?query=workflow:""Flake8"")
[![CodeQL](https://github.com/thomasleplus/FetchMuniTimes/workflows/CodeQL/badge.svg)](https://github.com/thomasleplus/FetchMuniTimes/actions?query=workflow:""CodeQL"")

This Python Lambda can be mapped to an AWS API Gateway GET Resource with 3 URL parameters:
* uuid: the UUID of a Transit Tracker created at https://511.org/transit/tracker/overview beforehand
* min: the minimum time to display (in minutes, default is 0)
* max: the maximum time to display (in minutes, default is 99)
",5,5,2,0,transportation-network,"[aws, aws-lambda, aws-lambda-python, awslambda, commute, commute-times, commuting, lambda, muni, python, san-francisco, sanfrancisco, sfmta, transportation, transportation-network, transportation-planning]",00000
2023,mqtt-transport,maPaydar,N/A,N/A,https://api.github.com/repos/maPaydar/mqtt-transport,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C106:7DF2:26EF6FF:4FDD82F:65224635.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,transportation-network,"[N, /, A]",00000
2024,andorraBayesNet,doorleyr,N/A,N/A,https://api.github.com/repos/doorleyr/andorraBayesNet,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C147:6AF3:28E258E:53CC1B9:65224635.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,transportation-network,"[N, /, A]",00000
2025,NYCSubwaySystem,didwaniaA,N/A,N/A,https://api.github.com/repos/didwaniaA/NYCSubwaySystem,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C125:6EFD:25791B7:4D0E1FF:65224636.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,transportation-network,"[N, /, A]",00000
2026,probabilistic-graphical-transportation-networks,pabloguarda,N/A,N/A,https://api.github.com/repos/pabloguarda/probabilistic-graphical-transportation-networks,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C107:74C7:26C12B2:4F934F1:65224636.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,transportation-network,"[N, /, A]",00000
2027,opentnf,OpenTNF,N/A,N/A,https://api.github.com/repos/OpenTNF/opentnf,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C116:7D9C:2B8AC19:5917AFF:65224637.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,transportation-network,"[N, /, A]",00000
2028,Mobility-in-US-Cities,7cb15,N/A,N/A,https://api.github.com/repos/7cb15/Mobility-in-US-Cities,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C10A:7DF2:26EFA00:4FDDE65:65224638.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,transportation-network,"[N, /, A]",00000
2029,Routing-Optimizer,LucasDiogo96,N/A,N/A,https://api.github.com/repos/LucasDiogo96/Routing-Optimizer,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C1C3:5831:2BC4C8A:59B1FD1:6522433E.'}",N/A,N/A,N/A,N/A,transportation-network,"[N, /, A]",00000
2030,transnet-generator,2023-Ljubljana-ERASMUS,N/A,N/A,https://api.github.com/repos/2023-Ljubljana-ERASMUS/transnet-generator,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C13D:1D92:2623509:4E515AE:65224638.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,transportation-network,"[N, /, A]",00000
2031,neural-transportation-networks,pabloguarda,N/A,N/A,https://api.github.com/repos/pabloguarda/neural-transportation-networks,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1D8:2B20:25FA419:4E165F1:65224639.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,transportation-network,"[N, /, A]",00000
2032,mpk,tklos,N/A,N/A,https://api.github.com/repos/tklos/mpk,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1FA:37E7:2D38E78:5C9BD0C:6522448F.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,transportation-network,"[N, /, A]",00000
2033,On-Time-Performance-Stats,d0ugherty,N/A,N/A,https://api.github.com/repos/d0ugherty/On-Time-Performance-Stats,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C174:646E:273AAD9:50803C0:65224624.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,transportation-network,"[N, /, A]",00000
2034,transitdash,wqi,N/A,https://github.com/wqi/transitdash,https://api.github.com/repos/wqi/transitdash,GIS tool for user-friendly visualization of transportation availability,"# Transit Dashboard
This public transportation dashboard was developed as part of the [Data Science for Social Good](https://dsi.ubc.ca/data-science-social-good-dssg-program) program at the University of British Columbia. It provides a layered interface for visualization of public transportation networks and service availability, with options to explore how transportation and socioeconomic factors interact within a region. 

Although the default implementation is configured for the City of Surrey, BC, the dashboard is designed to be region agnostic and can be easily reconfigured for any other region by swapping out the data files and default map boundaries.

![screenshot](https://i.imgur.com/QDnk3Xa.jpg)

## Setup
1. Ensure that Node.js 6.10.x or later is installed.
2. Run ```npm install``` in the root of the repository.
3. Run ```npm start``` to launch the application.

## Config
1. Swap out the appropriate data files in .geojson format in the /dist/data directory and update filenames in /src/index.js.
2. Update default map view boundaries in /src/index.js.
",2,2,1,0,transportation-network,"[dashboard, transportation, transportation-network]",00000
2035,CentralityAnomaly,lgaalves,N/A,N/A,https://api.github.com/repos/lgaalves/CentralityAnomaly,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C132:629D:45ED7E8:8DE49D5:65224639.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,transportation-network,"[N, /, A]",00000
2036,Model_Ogolny_Miejskiej_Mobilnosci,RafalKucharskiPK,N/A,https://github.com/RafalKucharskiPK/Model_Ogolny_Miejskiej_Mobilnosci,https://api.github.com/repos/RafalKucharskiPK/Model_Ogolny_Miejskiej_Mobilnosci,"Model ogólny mobilności miejskiej dla miast małych i średnich - do celów dydaktycznych, badawczych i innych (c) Rafal Kucharski, Politechnika Krakowska, 2018","# Model_Ogolny_Miejskiej_Mobilnosci
Ogólny model mobilności miejskiej dla miast małych i średnich zapisany w formie zbioru plików edytowalnych, oraz skompilowanych dla modelu mobilności zapisane w programie PTV VISUM (ver. 17.01-05) www.ptvgroup.com/pl

Do celów dydaktycznych, edukacyjnych, rozwojowych, badawczych i innych.

Zawiera:
* model dla miasta średniego w formie pliku .ver w wersji [pustej](https://github.com/RafalKucharskiPK/Model_Ogolny_Miejskiej_Mobilnosci/blob/master/MOMM_pusty.ver) , oraz z przykładowym modelem dla [Gniezna](https://github.com/RafalKucharskiPK/Model_Ogolny_Miejskiej_Mobilnosci/blob/master/MOMM.ver), 
* [menadżer scenariuszy](https://github.com/RafalKucharskiPK/Model_Ogolny_Miejskiej_Mobilnosci/tree/master/MOMM) dla modelu Gniezna
* [zbiór](github.com/RafalKucharskiPK/Model_Ogolny_Miejskiej_Mobilnosci/tree/master/Dydaktyka/) materiałów dydaktycznych
* [zbiór](https://github.com/RafalKucharskiPK/Model_Ogolny_Miejskiej_Mobilnosci/tree/master/dane) edytowalnych otwartych plików z parametrami sieci, UDAs, procedurami, formułami modelu popytu, dla innych modeli (Kraków, Małopolska, Warszawa i inne)

## Ogólny sposób użycia

*Najprostszy* klikamy zielony przycisk `Clone or Download` i potem `Download ZIP` - mamy repozytorium na naszym komputerze, możemy go używać.
*Najlpeszy* Jest ot repozytorium github które pozwala na zarządzanie wersjami, pracę wspólną i ciągłą aktualizacje. Dla chcących poznać podstawy github [polecam](https://guides.github.com/activities/hello-world/), dla nieprogramistów polecam [GitHubDesktop](https://desktop.github.com)
*Jeszcze lepszy* Dla chcących dołączyć do tego pojektu (*collaborator*), dodawać, poprawiać i edytować pliki zapraszam. Proszę o kontakt mailowy rkucharski@pk.edu.pl, lub po prostu o: *stworzenie brancha wraz z commitami i opisem a potem pull request na merge do master* (wprost przepiękna polszczyzna :D)

# Zawartość


## Plik MOMM.ver
Plik MOMM.ver zawiera plik programu PTV VISUM możliwy do otwarcia przy użyciu wersji akademickiej porgramu do pobrania ze strony http://cgi.ptvgroup.com/php/lng/vision_student_download.php?lng=en

Model ten zawiera bazową sieć drogową dla:
* wybranego miasta (Gniezno), 
* sparametryzowaną zgodnie z typami odcinków określonymi w [link_types.net](https://github.com/RafalKucharskiPK/Model_Ogolny_Miejskiej_Mobilnosci/blob/master/dane/srednie/link_types.net)
* z funkcjami oporu BPR3 dla wszystkich odcinków, zgodnie z [proecdures.xml](https://github.com/RafalKucharskiPK/Model_Ogolny_Miejskiej_Mobilnosci/blob/master/dane/srednie/procedures.xml)
* z modelem popytu określonym w [dmd.dmd](https://github.com/RafalKucharskiPK/Model_Ogolny_Miejskiej_Mobilnosci/blob/master/dane/srednie/dmd.dmd)
* o 9 motywacjach podróży 
```
D-P-D, D-I-P, D-N-D, D-U-D, D-I-D, NZD
```
* liczbie podróży określanej na podstawie zmiennych objaśniających rejonów 
```
LICZBA_MIEJSC_PRACY_OGOLEM
LICZBA_MIESZKANCOW
MIEJCA_PRACY_W_USLUGACH
MIEJSCA_NA_UCZELNIACH
MIEJSCA_PRACY_W_PRZEMYSLE
MIEJSCA_W_SZKOLACH
```
* parametrach modelu popytu określonych na poziomie `DemandStrata'

```
 | CODE | NAME | D_RUCHLIWOSC_DOBOWA | D_ASC | U_KZ | D_URANO | D_UPOPO | D_WSPNAPELNIENIA | D_MNOZNIKSEZONOWY |
| 01 D-P | Dom - Praca | 0.40 | 10 | 0.45 | 0.30 | 0.01 | 1.30 | 1.00 |
| 02 P-D | Praca - Dom | 0.35 | 10 | 0.45 | 0.00 | 0.32 | 1.30 | 1.00 |
| 03 D-N | Dom - Nauka | 0.10 | 10 | 0.80 | 0.15 | 0.01 | 1.30 | 1.00 |
 | 04 N-D | Nauka - Dom | 0.10 | 10 | 0.80 | 0.00 | 0.10 | 1.30 | 1.00 |
| 05 D-U | Dom - Uczelnia | 0.05 | 10 | 0.70 | 0.10 | 0.01 | 1.30 | 1.00 |
| 06 U-D | Uczelnia - Dom | 0.05 | 10 | 0.70 | 0.00 | 0.10 | 1.30 | 1.00 |
| 07 D-I | Dom - Inne | 0.20 | 10 | 0.30 | 0.10 | 0.10 | 1.30 | 1.00 |
 | 08 I-D | Inne - Dom | 0.25 | 10 | 0.30 | 0.00 | 0.15 | 1.30 | 1.00 |
 | 09 NZD | Nie związane z domem | 0.00 | 10 | 0.40 | 0.05 | 0.15 | 1.30 | 1.00 |
```

* zestawie procedur określonym w [proecdures.xml](https://github.com/RafalKucharskiPK/Model_Ogolny_Miejskiej_Mobilnosci/blob/master/dane/srednie/procedures.xml)


## Folder MOMM - manadżer scenariuszy

W folderze tym znajduje się manadżer scenariuszy otwierany poprzez [MOMM.vpdbx](https://github.com/RafalKucharskiPK/Model_Ogolny_Miejskiej_Mobilnosci/blob/master/MOMM/MOMM.vpdbx) 
base version to MOMM.ver (opisany powyżej).
* Podstawowe wskaźniki: 'PojKm, PojH, VŚrednia`
* Jedna modyfikacja zmiany w liczbie ludności
* Jedna modyfikacja zmiany w sieci (inwestycja drogowa)
* Trzy modyfikacje dla szczytu porannego, popołudniowego i doby
* Cztery scenariusze: bazowy, więcej ludności, nowa inwestycja, nowa inwestycja plus więcej ludności.

## Folder **dane**

Dane w formie edytowalnej (`link_types.net, procedures.xml, dmd.dmd`), w miarę dostępności z opisami  dla modeli:
* Opisanego powyżej
* Krakowa (2013)
* Warszawy (MTAW 2015)
* Regionalnego Modelu Ruchu (w ramach RID)
* zapraszam do dodawania swoich (po uprzednim upewnieniu się, że nie pójdziemy za to do więzienia)

## Folder dydaktyka

Z materiałami dydaktycznymi - opisy w odpowiednich folderach.
* Prognozowanie Ruchu
* [Miejski Transport Zbiorowy - studia podyplomowe](https://github.com/RafalKucharskiPK/Model_Ogolny_Miejskiej_Mobilnosci/blob/master/Dydaktyka/Miejski%20Transport%20Zbiorowy/TUTORIAL.MD)

# Błędy i wnioski racjonalizatorskie

Zgodnie z przyjętą na github praktyką błędy proszę zgłaszać w formie `issues` z opisem czego dotyczą (dla zalogowanych, dla bardzo niechcących się logować proszę o zgłaszanie błędów mailowo).

# Autorzy
Materiał powstawał w Katedrze Systemów Transportowych Politechniki Krakowskiej od czasów prof. Andrzeja Rudnickiego aktualnie kierowanej przez dr hab. inż. Andrzeja Szaratę kierownika większości projektów w ramach których powstał ten materiał, budowany głównie siłami dr inż. Tomasza Kulpy, mgr inż. Arkadiusza Drabickiego, moimi oraz wielu studentów którzy nam pomagali.

Przy wykorzystaniu (zarówno w pracach komercyjnych, artykułach naukowych, czy materiałach dydaktycznych) proszę cytować jako: *Rafał Kucharski. (2018, March 27). RafalKucharskiPK/Model_Ogolny_Miejskiej_Mobilnosci: First release (Version 0.0.1). Zenodo. http://doi.org/10.5281/zenodo.1208635* [![DOI](https://zenodo.org/badge/126968926.svg)](https://zenodo.org/badge/latestdoi/126968926) 

#  Licencja 

Szczegółowe zapisy licencji: [licence](https://github.com/RafalKucharskiPK/Model_Ogolny_Miejskiej_Mobilnosci/blob/master/LICENSE)
, w skrócie można używać, zmieniać, poprawiać, korzystać i zarabiać, ale trzeba podawać źródło. Można wykrozystać do tworzenia własnych materiałów dydaktycznych, ale proszę o udostępnienie ich dla innych w folderze [Dydaktyka](github.com/RafalKucharskiPK/Model_Ogolny_Miejskiej_Mobilnosci/tree/master/Dydaktyka/)






",2,2,3,0,transportation-network,"[demand-forecasting, ptv, transport, transportation, transportation-network]",00000
2037,atam,atam-analytics,atam-analytics,https://github.com/atam-analytics/atam,https://api.github.com/repos/atam-analytics/atam,strategic transport modelling framework for Active Transport (i.e. cycling and walking modes) as well as emerging micro-mobility modes ,"# {ATAM} Active Transport Analytics Model
**Overview of ATAM**
- **Active Transport Analytics Model (""ATAM"")** is a new strategic transport modelling and data visualization framework for Active Transport **(“AT”)** (i.e. cycling and walking modes) as well as emerging micro-mobility modes 

- **Proof of Concept (“POC”)** model developed for cycling in Brisbane, QLD Australia

- **Model structure and outputs** - key features: 
  - **Networks** – detailed networks, which consider factors such as safety to AT users, are a model input. Networks can be curated from sources including OpenStreetMap and other open data. Future scenario network changes can be tested for project appraisal.
  - **Demand** – demand matrices are an input and base year demand can be estimated from available sources such as household travel surveys, counts, Strava data, mobility data or other strategic model outputs. Future demand could be estimated based on demographic projections or demand matrices could be re-assigned from other strategic modelling tools.
  - **Outputs** – key outputs that ATAM can produce include: (i) volumes by link, (ii) journey times (by route and Origin-Destination **(“OD”)** matrix), (iii) analysis of trips using a particular link (i.e. Select Link Analysis **(“SLA”)**)

- **ATAM is built on open-source tools and does not require proprietary transport**
  - The core model functionality uses open-source tools - Python and QGIS (Tableau Public has been used to visualize data as well). No proprietary transport modelling software packages are required.
  - Brisbane POC demo/example model code and data is openly available on GitHub (https://github.com/atam-analytics/atam) and serves as an example to implement the ATAM modelling framework in other regions

- **Next steps** – improvements to the Brisbane POC model, develop POC models for other cities globally, build awareness and example use cases, feedback & improvement 

**********************************************************************************************************************************************************
**Further information about the project**
- Learn more about the ATAM project here - http://atamanalytics.com/
- See a visualised example of the type of outputs ATAM can produce for a single scenario - https://public.tableau.com/app/profile/peter.stephan/viz/ATAMBrisbanePOC11-Jan-22/VolumesStravastyling
- Questions or would like to get involved in the project? Contact Peter Stephan @ https://github.com/peterstephan
",2,2,1,0,transportation-network,"[bicycle, cycling, data-science, data-visualization, gis-data, micromobility, micromobility-services, python, traffic-analysis, transport, transportation, transportation-network, transportation-planning, transportation-problem, transportation-simulation]",00000
2038,NSW_Traffic_Volume_Viewer_Analytics,peterstephan,N/A,https://github.com/peterstephan/NSW_Traffic_Volume_Viewer_Analytics,https://api.github.com/repos/peterstephan/NSW_Traffic_Volume_Viewer_Analytics,This series of notebooks have been developed to analyse traffic data from the NSW Traffic Volume Viewer website,"# NSW Traffic Volume Viewer Analytics

This series of notebooks have been developed to analyse traffic data from the NSW Traffic Volume Viewer website - see: 
https://roads-waterways.transport.nsw.gov.au/about/corporate-publications/statistics/traffic-volumes/aadt-map/index.html#/?z=6

Refer to the official documentation for details of the data:
""Dataset Documentation - NSW Traffic Volume Counts.pdf""",1,1,1,0,transportation-network,"[traffic, traffic-analysis, traffic-data, transport, transport-api, transportation, transportation-network, transportation-planning]",00000
2039,NSW_Toll_Road_Data_Analytics,peterstephan,N/A,https://github.com/peterstephan/NSW_Toll_Road_Data_Analytics,https://api.github.com/repos/peterstephan/NSW_Toll_Road_Data_Analytics,This series of notebooks have been developed to analyse traffic volume and travel pattern data from the NSW Toll Road Data website (https://nswtollroaddata.com). More updates coming soon.,"# NSW Toll Road Data Analytics

This series of notebooks have been developed to analyse traffic volume and travel pattern data from the NSW Toll Road Data website - see: https://nswtollroaddata.com/

The datasets on the NSW Toll Road Data website contain traffic data for the following toll roads in Sydney, New South Wales, Australia that are wholly or partly owned by Transurban:
- Cross City Tunnel (""CCT"")
- Hills M2 (""M2"")
- Lane Cove Tunnel / Military Road E-Ramp (""LCT"")
- M1 Eastern Distributor (""ED"")
- M4 (""M4"")
- M5 South West Motorway (""M5"")
- M5 East & M8 (""M5E"")
- NorthConnex (""NCX"")
- Westlink M7 (""M7"")

Quarterly traffic data is published on nswtollroaddata.com in accordance with Transurban’s obligations under an Undertaking accepted by the ACCC on 29 August 2018 under section 87B of the Competition and Consumer Act 2010 (Cth) (Undertaking) and is made available under the Creative Commons Attribution 4.0 license.

GitHub Pages link: 
https://peterstephan.github.io/NSW_Toll_Road_Data_Analytics/",1,1,1,0,transportation-network,"[australia, traffic, traffic-analysis, transport, transportation, transportation-network]",00000
2040,redp-opencl,dprentiss,N/A,N/A,https://api.github.com/repos/dprentiss/redp-opencl,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C110:9D23:271D64F:5048BED:6522463A.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,transportation-network,"[N, /, A]",00000
2041,metro,enzet,N/A,N/A,https://api.github.com/repos/enzet/metro,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C137:629D:45EDA09:8DE4E1A:6522463B.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,transportation-network,"[N, /, A]",00000
2042,road-networks-classification,mohamedbadhrudeen,N/A,N/A,https://api.github.com/repos/mohamedbadhrudeen/road-networks-classification,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C12E:7646:29A346C:554FA8B:65224626.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,transportation-network,"[N, /, A]",00000
2043,Tranet_data,andresantoro,N/A,N/A,https://api.github.com/repos/andresantoro/Tranet_data,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1FA:1D92:262385F:4E51CA8:6522463B.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,transportation-network,"[N, /, A]",00000
2044,large-graph-pathfinder,gongotar,N/A,N/A,https://api.github.com/repos/gongotar/large-graph-pathfinder,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C10E:16F7:26E3A21:4FCF19C:6522463C.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,transportation-network,"[N, /, A]",00000
2045,TSIM,mcejp,N/A,N/A,https://api.github.com/repos/mcejp/TSIM,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1AB:603C:28C32D9:53881EC:6522463C.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,transportation-network,"[N, /, A]",00000
2046,GraphGA,lelandwilliams,N/A,N/A,https://api.github.com/repos/lelandwilliams/GraphGA,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C197:049C:274442C:509C4AE:6522463D.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,transportation-network,"[N, /, A]",00000
2047,Interface_PTVVisum-LinTim,FOR2083,N/A,N/A,https://api.github.com/repos/FOR2083/Interface_PTVVisum-LinTim,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C126:7646:296B939:54DCDA5:652242EF.'}",N/A,N/A,N/A,N/A,transportation-network,"[N, /, A]",00000
2048,transport_network_pathfinder,jeromebruzaud,N/A,N/A,https://api.github.com/repos/jeromebruzaud/transport_network_pathfinder,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1E5:39DF:27C3993:518853A:6522463D.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,transportation-network,"[N, /, A]",00000
2049,Cab-Sharing-system,yash8005,N/A,N/A,https://api.github.com/repos/yash8005/Cab-Sharing-system,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C1CE:8A0D:282B0AC:526563E:652242FC.'}",N/A,N/A,N/A,N/A,transportation-network,"[N, /, A]",00000
2050,InfrastructuresPlanner,CivML-PolyMtl,N/A,N/A,https://api.github.com/repos/CivML-PolyMtl/InfrastructuresPlanner,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1F1:4A15:2940356:54859CB:65224628.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,transportation-network,"[N, /, A]",00000
2051,TransportMapMaker,RGG200,N/A,N/A,https://api.github.com/repos/RGG200/TransportMapMaker,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C160:5C75:27A292B:5156D00:6522463E.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,transportation-network,"[N, /, A]",00000
2052,epidemic-transport-model,janmoelter,N/A,N/A,https://api.github.com/repos/janmoelter/epidemic-transport-model,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C127:7646:29A528F:5553873:6522463E.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,transportation-network,"[N, /, A]",00000
2053,TizenProjects,Ry-DS,N/A,N/A,https://api.github.com/repos/Ry-DS/TizenProjects,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1B7:049C:27446D2:509CA0D:6522463F.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,transportation-network,"[N, /, A]",00000
2054,tram-map,mblaszkiewicz,N/A,https://github.com/mblaszkiewicz/tram-map,https://api.github.com/repos/mblaszkiewicz/tram-map,🇬🇧 Coming soon to your browsers 🇩🇪 Demnächst in diesem Internetbrowser,"# Map of Krakow Trams

🇬🇧 Coming soon to your browsers
🇩🇪 Demnächst in diesem Internetbrowser
",0,0,0,1,transportation-network,"[maps, transportation, transportation-network]",00000
2055,Ajmcs0,a0soft,N/A,N/A,https://api.github.com/repos/a0soft/Ajmcs0,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C164:58F5:26044B7:4E13CBE:6522463F.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,transportation-network,"[N, /, A]",00000
2056,thesis-pid-console,therealsmat,N/A,N/A,https://api.github.com/repos/therealsmat/thesis-pid-console,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1F6:2B71:279FF9A:514F7CD:65224640.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,transportation-network,"[N, /, A]",00000
2057,Airline_Route_Analytics,krutalp,N/A,N/A,https://api.github.com/repos/krutalp/Airline_Route_Analytics,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C178:75D0:267A00A:4F10B1E:65224640.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,transportation-network,"[N, /, A]",00000
2058,StibRide,alahyaoui,N/A,https://github.com/alahyaoui/StibRide,https://api.github.com/repos/alahyaoui/StibRide,My JavaFx implementation of an application that allows people to get the shortest path between two metro station in the public transport network of Brussels.,"# StibRide

My JavaFx implementation of an application that allows people to get the shortest path between two metro station in the public transport network of Brussels.

# Description

## STIB-MIVB
The Brussels Intercommunal Transport Company is the local public transport operator in Brussels, Belgium. It is usually referred to in English by the double acronym STIB-MIVB, or by its French acronym, STIB.

# Installation
Without a ssh key:
```
$ git clone https://github.com/alahyaoui/StibRide.git
```
With a ssh key:
```
$ git clone git@github.com:alahyaoui/StibRide.git
```

# Execution
Move to the project repository and execute
```
$ cd StibRide/
$ mvn javafx:run
```
Nb: You need maven installed and added to your PATH environment variables.
If its not, download maven <a href=""https://maven.apache.org/install.html"">here</a>

# Author
- **Lahyaoui Ayoub**
",0,0,1,1,transportation-network,"[dao, dto, java, javafx, mvp, repository, scenebuilder, sqlite, transport, transportation, transportation-network, transportation-planning]",00000
2059,Airline_Route_Analytics,krutalp,N/A,N/A,https://api.github.com/repos/krutalp/Airline_Route_Analytics,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C178:75D0:267A00A:4F10B1E:65224640.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,transportation-network,"[N, /, A]",00000
2060,heatmapTransport,antonin-lebrard,N/A,N/A,https://api.github.com/repos/antonin-lebrard/heatmapTransport,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C130:7039:27B7502:517B549:65224641.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,transportation-network,"[N, /, A]",00000
2061,InfrastructuresPlanner,zachamida,N/A,N/A,https://api.github.com/repos/zachamida/InfrastructuresPlanner,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1D3:8AB4:2A079DB:564DD32:65224642.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,transportation-network,"[N, /, A]",00000
2062,distributor-to-disaster-areas-with-dijsktra-algorithm,rag0nn,N/A,N/A,https://api.github.com/repos/rag0nn/distributor-to-disaster-areas-with-dijsktra-algorithm,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C167:64D2:734DD9:EE0437:65224327.'}",N/A,N/A,N/A,N/A,transportation-network,"[N, /, A]",00000
2063,tNet,Chipdelmal,N/A,N/A,https://api.github.com/repos/Chipdelmal/tNet,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C12A:3119:2C4CF8B:5ACC75A:65224642.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,transportation-network,"[N, /, A]",00000
2064,agent-based-bus-line,TransportLab,N/A,N/A,https://api.github.com/repos/TransportLab/agent-based-bus-line,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C131:638B:27A5392:514BB7B:652244D9.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,transportation-network,"[N, /, A]",00000
2065,crrt-route-finder,MUL-Chair-of-Industrial-Logistics,N/A,N/A,https://api.github.com/repos/MUL-Chair-of-Industrial-Logistics/crrt-route-finder,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C105:092A:715388:EA3EBE:65224330.'}",N/A,N/A,N/A,N/A,transportation-network,"[N, /, A]",00000
2066,railgraph-ch,karimassi,N/A,N/A,https://api.github.com/repos/karimassi/railgraph-ch,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1AE:1CC6:2A8FFF1:575D012:65224643.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,transportation-network,"[N, /, A]",00000
2067,mathMethods,virus242,N/A,N/A,https://api.github.com/repos/virus242/mathMethods,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C13E:24F2:29FB6C9:56304D9:65224643.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,transportation-network,"[N, /, A]",00000
2068,transportation-management,rwdevops,N/A,N/A,https://api.github.com/repos/rwdevops/transportation-management,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1F4:6EFD:25789AB:4D0D13C:6522462D.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,transportation-network,"[N, /, A]",00000
2069,BlueWay,procyberian,N/A,N/A,https://api.github.com/repos/procyberian/BlueWay,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C1BE:4179:2DF8CE0:5E15399:65224347.'}",N/A,N/A,N/A,N/A,transportation-network,"[N, /, A]",00000
2070,TfLStorm,agbb,N/A,N/A,https://api.github.com/repos/agbb/TfLStorm,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1A2:18E3:2E06B4:5FD6CF:65224644.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,transportation-network,"[N, /, A]",00000
2071,MTAS,RooTender,N/A,N/A,https://api.github.com/repos/RooTender/MTAS,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C102:5B68:2F1CA5:62251B:65224644.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,transportation-network,"[N, /, A]",00000
2072,psychic-rotary-phone,shirosweets,N/A,N/A,https://api.github.com/repos/shirosweets/psychic-rotary-phone,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C113:7890:2E46FD:605FBB:65224645.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,transportation-network,"[N, /, A]",00000
2073,TransportNetwork-Heapmap-ParallelCoordinates,lakshayanand96,N/A,N/A,https://api.github.com/repos/lakshayanand96/TransportNetwork-Heapmap-ParallelCoordinates,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C16A:336C:2D594B2:5CF8991:65224646.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,transportation-network,"[N, /, A]",00000
2074,pixbike,ozankaraali,N/A,N/A,https://api.github.com/repos/ozankaraali/pixbike,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1C0:7CD5:2A54C3E:56BA218:65224629.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,transportation-network,"[N, /, A]",00000
2075,OD-matrix-generator,fdlopane,N/A,N/A,https://api.github.com/repos/fdlopane/OD-matrix-generator,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C109:4771:2F6E03:628C1E:65224646.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,transportation-network,"[N, /, A]",00000
2076,C-Programming,qizheng3,N/A,N/A,https://api.github.com/repos/qizheng3/C-Programming,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C182:0208:2E4A5CD:5ED0B54:65224647.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,transportation-network,"[N, /, A]",00000
2077,MexicoCityPublicTransportation,patoba,N/A,N/A,https://api.github.com/repos/patoba/MexicoCityPublicTransportation,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1C2:643D:2A80EBF:572BCEB:65224647.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,transportation-network,"[N, /, A]",00000
2078,rudder-server,rudderlabs,N/A,N/A,https://api.github.com/repos/rudderlabs/rudder-server,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C16A:336C:2D596DB:5CF8E43:65224648.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,warehouse-management,"[N, /, A]",00000
2079,GreaterWMS,GreaterWMS,N/A,N/A,https://api.github.com/repos/GreaterWMS/GreaterWMS,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C15D:0A36:2622ED2:4E57984:652243EA.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,warehouse-management,"[N, /, A]",00000
2080,scm-biz-suite,doublechaintech,doublechaintech,https://github.com/doublechaintech/scm-biz-suite,https://api.github.com/repos/doublechaintech/scm-biz-suite,"供应链中台系统基础版，集成零售管理, 电子商务, 供应链管理,  财务管理, 车队管理, 仓库管理, 人员管理, 产品管理, 订单管理, 会员管理, 连锁店管理, 加盟管理, 前端React/Ant Design, 后端Java Spring+自有开源框架，全面支持MySQL, PostgreSQL, 全面支持国产数据库南大通用GBase 8s,通过REST接口调用，前后端完全分离。","# 请使用SCMR1来建立环境，项目将有重大更新！！

# DaaS新特性TeaQL，用于支持大型复杂关联应用

```java

    Task task =Q.task(orderId) // 根据订单找到一个任务
                .selectAll() // 取所有字段, 但是不包含子列表
                .selectDropOffTaskItemList( // 选择所有的卸车任务
                    Q.dropOffTaskItem() // 定制卸车任务
                        .selectProduct() // 选择产品
                        .selectCustomOrder( // 卸车任务上面还关联了一个订单
                            Q.customOrder() // 定制订单选择
                                .selectAll() // 选择订单所有字段
                                .selectCustomOrderItemList() // 选择订单下面的订单项
                                .selectDeliveryOrderAssetList( // 选择订单子列表下面的相关资产列表
                                    Q.deliveryOrderAsset() // 定制订单资产列表
                                        .selectAsset( // 选择资产对象
                                            Q.asset() // 定制资产选择
                                                .selectAssetStatus() // 状态要加上，便于显示资产状态
                                                .where( // 把不合法的资产过滤出去
                                                    Asset.ASSET_STATUS_PROPERTY,
                                                    QueryOperator.NOT_EQUAL,
                                                    AssetStatus.INVALID))))).execute(ctx);
```
TeaQL是双链团队新发明的基于各种编程语言的应用语言，为高科维护的大型应用开发提供帮助。

# 集成供应链套件（全部源码）

高度可定制零售供应链中台基础系统，中台管理界面可通过javascript高阶函数定制，Java后台主要通过**增加方法**或者**重写**已有的大量方法来灵活定制。

本系统代码是用自研知识图谱和因果网络处理系统自动生成高可维护源代码。

传统开发方式无法开发如此大规模的应用系统并且灵活变更，我们使用了自研的云端开发工具DaaS（Development as a Service）开发了这个平台，目前已有多家公司采用，请参见[DaaS Start Kit](https://github.com/doublechaintech/daas-start-kit)， 这个项目的模型文件 retailscm.xml 也在里面（运行该模型需要注册）。注意：运行本项目无需DaaS，直接参考部署手册。

智能化开发的简单例子，请参见[医生排班系统](https://github.com/doublechaintech/his-biz-suite)


针对生鲜供应链, 请访问：
* https://demo.doublechaintech.com/admin/freshchain/index.html


| 角色        | 用户名           | 密码         |
| ------------- |:-------------:|:-------------------:|
| 平台        | 13900000001           | admin123         |
| 商户1        | 13900000002           | admin123         |
| 商户2        | 13900000003           | admin123         |

主要特征如下:

* 生鲜供应链是基于点对点多商户模式构建的系统
* 商户之间的关系是平等的， 即使核心商户也是这样，
* 每个商户自己的组织结构，有采购目录和销售目录,通过这种方式，可以把商户之间的信息流、商流、物流链接起来，形成一个供应链
* 传统供应链系统就像SAP基于核心企业作为使用对象，上下游合作企业并没有供应链账号可用
* 本供应链是使得上下游企业也可以通过管理完成的人力资源、产品信息交换，库存等。可以通过定制本系统实现不同的应用。


## 目录

- [集成供应链套件](#集成供应链套件)
  - [目录](#目录)
  - [业务涵盖范围](#业务涵盖范围)
  - [核心特性](#核心特性)
    - [架构](#架构)
      - [前端架构](#前端架构)
      - [后端架构](#后端架构)
      - [权限管理](#权限管理)
      - [部署架构](#部署架构)
    - [项目概念 来自于 数据库设计](#项目概念-来自于-数据库设计)
  - [如何使用](#如何使用)
  - [许可](#许可)
  - [技术支持](#技术支持)
  - [兼容性，以下环境测试通过](#兼容性以下环境测试通过)
  - [二次开发](#二次开发)
  - [部署](#部署)
  - [在线演示系统(不支持IE，最好使用Chrome）](#在线演示系统不支持ie最好使用chrome)
    - [总部及分支机构运营](#总部及分支机构运营)
    - [业务扩展](#业务扩展)
    - [落地业务运营](#落地业务运营)
    - [采购和供应商管理](#采购和供应商管理)
    - [仓配一体化管理](#仓配一体化管理)
    - [人力资源管理](#人力资源管理)
    - [用户权限管理](#用户权限管理)
  - [组成部分](#组成部分)
    - [bizcore: 服务器端核心代码项目， Business Core](#bizcore-服务器端核心代码项目-business-core)
    - [bizui：中台集成界面项目， Business UI，不是闭嘴！](#bizui中台集成界面项目-business-ui不是闭嘴)
    - [数据中台（独立产品在本项目应用）](#数据中台独立产品在本项目应用)
    - [配套的数据大屏](#配套的数据大屏)
    - [核心功能](#核心功能)
    - [额外数据库支持](#额外数据库支持)
  - [参与本项目](#参与本项目)
 

## 业务涵盖范围

* 参考下面的图

![概念关系](/doc/retailscm-concept-tree.jpg)


## 核心特性
* 本系统包括前端、后端、数据大屏，数据结构和基础数据都是通过自研软件开发开发
* 高度可定制，增加、修改、屏蔽界面和后台功能不必更改生成代码，只是需要在custom层加入代码即可，看后文解释
* 以零售平台为核心开发，集成五流：信息流，商流，物流，资金流，人才流。

### 架构


#### 前端架构
![前端架构](/doc/front-arch.jpg)

#### 后端架构
![后端架构](/doc/backend-arch.jpg)

#### 权限管理
![权限管理](/doc/iam-arch.jpg)
#### 部署架构

![部署架构](/doc/deploy-arch.jpg)


### 项目概念 来自于 [数据库设计](/doc/retailscm-database-design.pdf)

![ScreenShot](/doc/word-cloud.png)

* 桑基图, 展现概念血缘

![ScreenShot](/doc/retailscm-sankey.jpg)

通过 https://demo.doublechaintech.com/admin/design/retail_design.html 可以看到交互式查看模型



<img width=""760"" alt=""retail-san-key"" src=""./doc/newsankey.png"">


## 如何使用
* 在此基础上定制业务系统，可以在这个系统基础上通过前后台增加代码来定制业务系统
* 建立数据中台，这样源代码几乎不需要改动，本系统提供了大量的接口，可以让业务系统通过API插入数据，可以视作一个独立的微服务
* 用于教学和练习

## 许可

除Logo，登录页和主页图片以外，本系统源代码为Apache 2 License，可以用于商用目的

## 技术支持

本系统提供商业化系统支持和基于Issue的免费的技术支持

## 兼容性，以下环境测试通过

* 硬件环境：Amd64/ARM64/华为鲲鹏服务器
* 操作系统环境：CentOS 6+/Ubuntu 16.04+
* 数据库：MySQL 5.7+， GBase 8s，Informix 11， PostgreSQL 9.3+
* 缓存系统: Redis 3.2+
* 事件流系统: Kafka

## 二次开发
* Java开发手册请参见：https://kdocs.cn/l/sUdwkkyZD?f=130
* 数据库设计文档(共计94页）: [数据库设计](/doc/retailscm-database-design.pdf)
* 包含顺序图的详细设计文档(共计200多页）：[详细设计](/doc/retailscm-detail-design.pdf)


## 部署

如果要自行部署，请参照 [部署指南](/DEPLOYMENT.md)

## 在线演示系统(不支持IE，最好使用Chrome）


系统平台框架天然支持一个用户多个App，下面为18种角色建立了演示账户，每种角色都可以登录，代表不同用户管理的不同资源。
* 最新支持数据搜索
* 功能分组

### 总部及分支机构运营

| 角色        | 用户名           | 密码         |
| ------------- |:-------------:|:-------------------:|
|零售商店全国中心|13900000001|admin123|
|零售商店省中心|13900000002|admin123|
|零售商店城市服务中心|13900000003|admin123|

演示地址：https://demo.doublechaintech.com/admin/retailscm/index.html


### 业务扩展

| 角色        | 用户名           | 密码         |
| ------------- |:-------------:|:-------------------:|
|城市的合作伙伴|13900000004|admin123|
|潜在客户|13900000005|admin123|


演示地址：https://demo.doublechaintech.com/admin/retailscm/index.html

### 落地业务运营

| 角色        | 用户名           | 密码         |
| ------------- |:-------------:|:-------------------:|
|零售商店|13900000006|admin123|
|零售商店的会员|13900000007|admin123|


演示地址：https://demo.doublechaintech.com/admin/retailscm/index.html


### 采购和供应商管理
| 角色        | 用户名           | 密码         |
| ------------- |:-------------:|:-------------------:|
|消费者的订单|13900000008|admin123|
|产品供应商|13900000009|admin123|
|供应订单|13900000010|admin123|
|零售商店的订单|13900000011|admin123|


演示地址：https://demo.doublechaintech.com/admin/retailscm/index.html

### 仓配一体化管理
| 角色        | 用户名           | 密码         |
| ------------- |:-------------:|:-------------------:|
|仓库|13900000012|admin123|
|货架|13900000013|admin123|
|运输车队|13900000014|admin123|
|运输任务|13900000015|admin123|
|会计凭证|13900000017|admin123|


演示地址：https://demo.doublechaintech.com/admin/retailscm/index.html


### 人力资源管理
| 角色        | 用户名           | 密码         |
| ------------- |:-------------:|:-------------------:|
|工资等级|13900000018|admin123|
|员工|13900000020|admin123|


演示地址：https://demo.doublechaintech.com/admin/retailscm/index.html

### 用户权限管理

| 角色        | 用户名           | 密码         |
| ------------- |:-------------:|:-------------------:|
|用户域|13900000021|admin123|

演示地址：https://demo.doublechaintech.com/admin/retailscm/index.html

## 组成部分
### bizcore: 服务器端核心代码项目， Business Core

后端 Java/Spring/Redis/MySQL/ArrangoDB/Kafka
Java 源代码在bizcore/WEB-INF/ 下


![ScreenShot](/doc/backend.png)
````
caf_core_src: 通用框架库核心代码，包含技术框架，基础设施
caf_custom_src: 通用框架库，主要包含配置文件
retailscm_core_src: 零售业务核心代码
retailscm_custom_src: 零售业务定制代码，如果要定制，在此处增加类，继承retail_core_src的相应类，可以调用或者重写父类，core里面的类提供大量可以重用的方法。
````

### bizui：中台集成界面项目， Business UI，不是闭嘴！
前端 React/dvajs/antd/echarts/Redux


![ScreenShot](/doc/home-screen.jpg)
![ScreenShot](/doc/root-app.jpg)


### 数据中台（独立产品在本项目应用,使用了图计算等很多新技术，助做经营决策可以，不能当成报表、结算等数据来源）

* 新一代图计算实时引擎
* 数据分析结果管理与分享
* 支持客户端通过API调用数据，实现闭环反馈
* 实时推送和订阅
演示地址：https://demo.doublechaintech.com/admin/dmos/ 
* 用户名/密码: 13900000005/admin123
* 浏览任何数据集->菜单选择->常用功能->候选数据集


![ScreenShot](/doc/dmos000.jpg)
![ScreenShot](/doc/dmos001.jpg)
![ScreenShot](/doc/dmos002.jpg)
![ScreenShot](/doc/dmos003.jpg)

### 配套的数据大屏

![ScreenShot](/doc/datascreen.png)


### 核心功能
* 平台管理，平台鸟瞰视图
* 业务开拓管理（CRM），管理联系，销售进度，完成合伙人转化
* 小超会员管理，会员管理订单，支付，邮寄地址等
* 人力资源管理（HRM），可以管理入职，绩效考核，工资发放，经验，教育经历，培训考试记录

### 未来发展
* 渐进模式，从单个核心企业的中心化SaaS模式，到多核心企业多中心SaaS
* 应用区块链技术，扩展到多中心
* 变更控制：所有数据变更，走控制流程，数据来源可以解释
* 更强的基础分析工作台：支持多个维度分析单个列表的数据。



### 额外数据库支持

目前已经支持PGSQL9.5+和GBASE 8S

## 参与本项目
<img src=""/doc/philip-wechat-qr.jpeg"" alt=""WechatQRCode"" title=""WechatQRCode"" width=""150""  />

* 探讨供应链发展趋势
* 探讨供应链相关技术和产品
* 探讨分享市场机遇
* 验证时请输入供应链相关的名词: scm, gyl, 供应链

## 升级计划
* 本项目于2017年开发，2019年初开源，开发团队在四年里获取了更进一步的供应链知识，模型需求更新
* 模型上像对等供应链发展
* 业务操作将提高操作的跟踪性
* 升级到新的基础平台
* JSON定义动态前端


",2242,2242,96,10,warehouse-management,"[antd, digital-transformation, echarts, ecommerce, erp, fleet-management, headless-commerce, java, knowledge-graph, mysql, oracle-atg-alternative, ordermanagement, redis, retail, scm, spring, supply-chain, tms, warehouse-management]",00000
2081,openboxes,openboxes,N/A,N/A,https://api.github.com/repos/openboxes/openboxes,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1A4:6B96:28AB163:53B1A34:65224526.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,warehouse-management,"[N, /, A]",00000
2082,ModernWMS,fjykTec,N/A,N/A,https://api.github.com/repos/fjykTec/ModernWMS,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1DD:04F2:273A0DA:507ACA2:652243EF.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,warehouse-management,"[N, /, A]",00000
2083,fleetbase,fleetbase,fleetbase,https://github.com/fleetbase/fleetbase,https://api.github.com/repos/fleetbase/fleetbase,🚚 Fleetbase: Open Source Modular Logistics Platform. Built on Adaptable Extensions to Manage and Orchestrate Logistics Operations.,"<div id=""hero"">
  <p align=""center"" dir=""auto"">
      <a href=""https://fleetbase.io"" rel=""nofollow"">
        <img src=""https://user-images.githubusercontent.com/58805033/191936702-fed04b0f-7966-4041-96d0-95e27bf98248.png"" alt=""Fleetbase logo"" width=""600"" height=""140"" style=""max-width: 100%;"">
      </a>
    </p>
    <p align=""center"" dir=""auto"">
      Open Source Modular Logistics Platform
      <br>
      <a href=""https://fleetbase.github.io/guides"" rel=""nofollow"">Fleetbase Documentation →</a>
      <br>
      <br>
      <a href=""https://github.com/fleetbase/fleetbase/issues"">Report an Issue</a>
      ·
      <a href=""https://fleetbase.github.io/api-reference"">API Reference</a>
      ·
      <a href=""https://fleetbase.github.io/guides"">Guides</a>
      ·
      <a href=""https://github.com/fleetbase/fleetbase/issues"">Request a Feature</a>
      ·
      <a href=""https://www.fleetbase.io/blog-2"" rel=""nofollow"">Blog</a>
      ·
      <a href=""https://fleetbase.apichecker.com"" target=""_api_status"" rel=""nofollow"">API Status</a>
      ·
      <a href=""https://discord.gg/V7RVWRQ2Wm"" target=""discord"" rel=""nofollow"">Discord</a>
    </p>
    <hr />
</div>

# ⭐️ Overview

Fleetbase is an open-source modular platform designed for the efficient management and orchestration of logistics operations. It serves as both a powerful operational tool for businesses and a flexible foundation for developers. The platform's core is built around a collection of ""extensions,"" which create a customizable framework capable of meeting a wide range of supply chain and logistics requirements.

Each extension in Fleetbase is purposefully engineered to fulfill specific roles within the logistics ecosystem. Users have the freedom to create their own extensions, expanding the platform's ecosystem and ensuring its adaptability to various use cases. This extensible nature keeps Fleetbase at the forefront of addressing diverse logistical and supply chain needs now and in the future.

<p align=""center"" dir=""auto"">
  <img src=""https://github.com/fleetbase/fleetbase/assets/816371/deef79fa-e30c-4ce9-8a04-0dee990ffd9d"" alt=""Fleetbase Console"" width=""600"" style=""max-width: 100%;"" />
</p>

<div align=""center"">
  <a href=""https://www.producthunt.com/posts/fleetbase-alpha"" target=""_producthunt"">🚀 We've just announced our Alpha release on Product Hunt! 🚀</a>
  <p>Check Fleetbase out on ProductHunt, and support with a Upvote!</p>
  <a href=""https://www.producthunt.com/posts/fleetbase-alpha?utm_source=badge-featured&utm_medium=badge&utm_souce=badge-fleetbase&#0045;alpha"" target=""_blank""><img src=""https://api.producthunt.com/widgets/embed-image/v1/featured.svg?post_id=399731&theme=light"" alt=""Fleetbase&#0032;&#0040;Alpha&#0041; - The&#0032;open&#0032;source&#0032;OnFleet&#0032;alternative | Product Hunt"" style=""width: 250px; height: 54px;"" width=""250"" height=""54"" /></a>
</div>
  

# 📖 Table of contents

  - [What's Included](#-whats-included)
  - [Getting Started](#-getting-started)
  - [Use Cases](#-use-cases)
  - [Installation](#-installation)
  - [Extensions](#-extensions)
  - [Apps](#-apps)
  - [Roadmap](#-roadmap)
  - [Bugs and Feature Requests](#-bugs-and--feature-requests)
  - [Documentation](#-documentation)
  - [Contributing](#-contributing)
  - [Community](#-community)
  - [Creators](#-creators)
  - [License & Copyright](#-license-and-copyright)

# 📦 What's Included

Fleetbase is more than just a platform; it's a versatile ecosystem carefully architected to empower developers and businesses alike. Fleetbase comes pre-installed with a few extensions that provide base functionality to get users and businesses started:

<ul>
  <li>
    <strong>Console</strong>: Fleetbase's frontend console is built with Ember.js and Ember Engines, offering a modular and extensible design. This design allows the system to easily adapt and scale according to your evolving needs while simplifying the integration of new extensions. By leveraging the console's design, extensions can be seamlessly installed using their respective package managers, reducing complexity and integration time.
  </li>
  <li>
    <strong>Fleetbase API</strong>: Fleetbase's backend API and framework are built with Laravel, providing a robust and flexible infrastructure for extension development and integration. The system efficiently manages complex data structures and transactions while seamlessly incorporating new extensions through package managers. We offer additional packages for developers to create custom extensions, enhancing the flexibility and extensibility of the Fleetbase ecosystem.
  </li>
  <li>
    <strong>Extensions</strong>: Fleetbase is designed to provide immediate utility out-of-the-box. It comes pre-installed with several key extensions
    <ul>
      <li><strong>FleetOps</strong>: FleetOps, our comprehensive fleet management extension, caters to all aspects of last-mile operations. Some of it's features include:
        <ul>
          <li>
            Real-time tracking for vehicles and assets, ensuring optimal operational efficiency.
          </li>
          <li>
            Order creation and management, facilitating seamless transaction processing.
            Service rates management, helping maintain financial transparency and profitability.
          </li>
          <li>
            Fleet management, providing a holistic view and control of your fleet.
          </li>
          <li>
            Third-party vendor integrations, allowing you to consolidate your resources.
          </li>
          <li>
            API & Webhooks that not only offer increased interconnectivity but also serve to facilitate integrations with other services and applications, making FleetOps a truly versatile solution.
          </li>
        </ul>
      </li>
      <li>
        <strong>Storefront</strong>: Storefront is an extension that delivers headless commerce functionality, ideal for businesses aspiring to develop on-demand stores or marketplaces. It aims to facilitate seamless transactions while focusing on providing an excellent user experience.
      </li>
      <li><strong>Dev Console</strong>: The Dev Console extension is a developer's toolbox, providing resources such as:
        <ul>
          <li>
            API keys management, ensuring secure interactions with the application programming interface.
          </li>
          <li>
            Webhooks management, enabling real-time data exchanges.
          </li>
          <li>
            Sockets management, facilitating bi-directional client-server communication.
          </li>
          <li>
            Logs management, crucial for system monitoring and troubleshooting.
          </li>
          <li>
            API events management, keeping a pulse on system communications.
          </li>
        </ul>
      </li>
    </ul>
  </li>
</ul>

# 🏁 Getting Started

Before you can get started with Fleetbase, you'll need to make sure you have the following prerequisites:

<ol>
  <li>
    A computer running either Linux, Mac OS, or Windows
  </li>
  <li>Docker installed</li>
  <li>Git installed</li>
  <li>If you want to try now, the <a href=""https://console.fleetbase.io/"" target=""_fleetbase"" alt=""Fleetbase"">cloud hosted version of Fleetbase available here.</a></li>
</ol>

# 🚦 Use Cases

Fleetbase's comprehensive suite of features and the modular design make it highly versatile, catering to a broad array of applications across different industries. Here are a few use cases:
<ul>
  <li><strong>Logistics and Supply Chain Management</strong>: Fleetbase could be employed by a logistics company to streamline its operations. Real-time tracking provided by FleetOps would help maintain visibility of fleet vehicles and assets at all times. This would ensure timely delivery, reduce operational inefficiencies, and enable proactive management of any logistical issues. Additionally, the order creation and management feature could be used to manage deliveries, pickups, and routing.</li>
  
  <li><strong>On-demand Delivery Services</strong>: On-demand services like food delivery or courier companies could utilize Fleetbase to manage their fleet of delivery agents. The real-time tracking functionality would help to optimize routes and ensure prompt deliveries, while the order creation and management system would efficiently handle incoming orders.</li>
  
  <li><strong>E-Commerce Platforms</strong>: E-commerce businesses could leverage Fleetbase to manage their backend logistics. The Storefront extension would enable seamless online transactions, while FleetOps could manage all aspects of the delivery process, ensuring a smooth shopping experience for the customers.</li>
  
  <li><strong>Ride-Hailing Services</strong>: Fleetbase could be a perfect fit for ride-hailing or car rental services. FleetOps would manage real-time tracking of vehicles, maintaining optimal vehicle utilization, while the API and Webhooks would facilitate integration with mobile apps to provide real-time updates to customers.</li>
  
  <li><strong>Third-party Logistics (3PL) Provider</strong>: A 3PL provider could use Fleetbase for comprehensive management of its services. From real-time tracking of cargo to managing service rates and integration with other vendors in the supply chain, Fleetbase could provide an all-in-one solution.</li>
  
  <li><strong>Developer Resource Management</strong>: Developers building complex, resource-intensive applications could benefit from Fleetbase's Dev Console. API keys and webhook management could streamline the secure interaction between different software components. At the same time, sockets, logs, and API events management tools would assist in maintaining, troubleshooting, and improving the system.</li>

  <li><strong>Public Transportation Systems</strong>: City transportation services could use Fleetbase to optimize their bus or subway operations. With FleetOps, they could have real-time tracking of their vehicles, ensuring that schedules are met promptly and delays are handled effectively. Moreover, service rates management could assist in setting and adjusting fares, while the API and Webhooks functionality could integrate with public apps to provide real-time updates to commuters about arrivals, delays, and route changes.</li>

  <li><strong>Fleet Leasing Companies</strong>: Fleet leasing companies could employ Fleetbase to manage their vehicle assets and track their status in real time. From managing service rates to ensuring the best utilization of assets, FleetOps could provide a holistic solution. Moreover, the Storefront extension could be used to list available vehicles and manage online reservations seamlessly.</li>

  <li><strong>Emergency Services</strong>: Emergency services like ambulance or firefighting departments could use Fleetbase to manage their operations. FleetOps would provide real-time tracking, ensuring that emergency vehicles are dispatched quickly and the fastest routes are chosen. In addition, the API and Webhooks functionality could allow integration with emergency call centers, ensuring a seamless flow of information and a swift response to emergencies.</li>
</ul>

Remember, these are just a few examples. Given the modular and extensible nature of Fleetbase, it can be customized and scaled to fit many other use cases across different industries.

# 💾 Installation

Getting Fleetbase up and running on your system using Docker and Docker-compose is straightforward. Please follow the steps below:

### Prerequisites

<ul>
  <li>Ensure that you have Docker and Docker-compose installed on your system. If not, you can download and install them from their respective official websites:
    <ul>
      <li><a href=""https://docs.docker.com/get-docker/"" target=""_docker"">Docker</a></li>
      <li><a href=""https://docs.docker.com/compose/install/"" target=""_docker_compose"">Docker Compose</a></li>
    </ul>
  </li>
  <li>
    Clone the Fleetbase repository to your local machine:
    <pre>git clone git@github.com:fleetbase/fleetbase.git</pre>
  </li>
  <li>
    Navigate to the cloned repository:
    <pre>cd fleetbase</pre>
  </li>
  <li>
    Initialize and pull submodules:
    <pre>git submodule update --init --recursive</pre>
  </li>
</ul>

### Build and Run Fleetbase

<ol>
  <li>
    <strong>Start the Docker daemon:</strong>
    Ensure the Docker daemon is running on your machine. You can either start Docker Desktop or either executed by running:
    <pre>service docker start</pre>
  </li>
  <li>
    <strong>Build the Docker containers:</strong>
Use Docker Compose to build and run the necessary containers. In the root directory of the Fleetbase repository, run:
  <pre>docker-compose up -d</pre>
  </li>
</ol>

### Additional Steps

<ol>
   <li>Fleetbase will try to find the current hostname or public IP address to whitelist in for CORS, but if this fails you will need to manually add your hostname or instance URL to <code>api/config/cors.php</code> in the <code>allowed_origins</code> array. This will whitelist the console for CORS access to your instance backend.
  </li>
  <li>🛣 Routing! By default Fleetbase currently will use it's own routing engine which is hosted at <a href=""https://routing.fleetbase.io"" target=""_fleetbase_routing_machine"">https://routing.fleetbase.io</a>, this routing engine only works for a few enabled countries which include USA, Canada, Belgium, Spain, Serbia, Taiwan, Malaysia, Singapore, Brunei, Mongolia, India, Ghana. We can enable more regions and countries upon request. There is a Roadmap item to allow users to easily change to any routing engine provider such as Mapbox, Google Maps, and other 3rd Party Routing services. Optionally, you can switch out Fleetase Routing engine with any OSRM compatible service such as OpenStreetMap by changing the console environment variable <code>OSRM_HOST</code> which can be found in <code>console/environments/*.env</code>.
  </li>
  <li>If you find any bugs or unexpected issues please <a href=""https://github.com/fleetbase/fleetbase/issues/new/choose"">post an issue</a> to the repo or join our <a href=""https://discord.gg/V7RVWRQ2Wm"" target=""_discord"" alt=""Fleetbase Discord"">Discord</a>.
  </li>
</ol>

### Troubleshoot

Have an issue with the installation, try a few of these workarounds.

<ul>
  <li><strong>Installer not working?</strong> <br>If you encounter issues with the web based installer use this workaround to get going.
  <ol>
    <li>Login to the application container. 
      <pre class=""bash"">docker exec -ti fleetbase-application-1 bash</pre>
    </li>
    <li>Manually run the database setup and migrations.
      <pre class=""bash"">php artisan mysql:createdb
php artisan migrate:refresh --seed</pre>
      </li>
    <li>After completing these steps you should be able to proceed with account creation.</li>
  </ol>
  </li>
</ul>

### Access Fleetbase

Now that Fleetbase is up and running via Docker you can find the console and the API accessible:

<ul>
  <li>Fleetbase Console: <code>http://localhost:4200</code></li>
  <li>Fleetbase API: <code>http://localhost:8000</code></li>
</ul>

# 🧩 Extensions

Fleetbase extensions provide a powerful way to enhance and customize the functionality of Fleetbase to suit your specific needs. They are standalone modules that seamlessly integrate with Fleetbase's frontend and backend, allowing you to extend its capabilities.

### What are Fleetbase Extensions?
Fleetbase Extensions are built using both a backend PHP package and a frontend Ember Engine Addon. They are designed to blend seamlessly into the Fleetbase ecosystem, utilizing shared services, utilities, stylesheets, components, and template helpers.

### How do Extensions Work?
<ul>
  <li><strong>Backend</strong>: The backend of an extension is developed as a PHP package. This package should utilize the composer package <code>fleetbase/core-api</code>, which provides core API functionalities, making it easier to integrate your extension with Fleetbase's backend.</li>
  
  <li><strong>Engine</strong>: The frontend of an extension is built as an Ember Engine Addon. The Addon must require the packages <code>@fleetbase/ember-core</code> and <code>@fleetbase/ember-ui</code>. The <code>@fleetbase/ember-core</code> package provides core services and utilities that help to align your extension with Fleetbase's frontend. The <code>@fleetbase/ember-ui</code> package, on the other hand, supplies all the stylesheets, components, and template helpers needed to design a Fleetbase extension that seamlessly matches the look and feel of the Fleetbase UI.</li>
</ul>

### Building a Fleetbase Extension
To create a Fleetbase extension, follow these steps:

<ul>
  <li><strong>Backend PHP Package Creation</strong>: Begin by creating a backend PHP package. Make sure to use the composer package <code>fleetbase/core-api</code> to ensure smooth integration with Fleetbase's backend.</li>
  
  <li><strong>Frontend Ember Engine Addon</strong>: Next, you need to create the frontend of the extension using Ember Engine. Be sure to include the <code>@fleetbase/ember-core</code> and <code>@fleetbase/ember-ui</code> packages. These packages provide necessary services, utilities, and design components for aligning your extension with Fleetbase's UI.</li>

  <li><strong>Integrate Your Extension</strong>: Once you have the backend and frontend ready, you can integrate your extension into Fleetbase by installing it via the respective package managers. In the future you will be able to publish your extension to the Fleetbase extensions repository making it available to all instances of Fleetbase with the ability to even sell your extension.</li>
</ul>

With Fleetbase's modular architecture, you can develop your extensions to solve unique problems, enhance existing functionality, or add entirely new capabilities to your Fleetbase instance. This extensibility allows Fleetbase to adapt and evolve with your growing business needs.

# 📱 Apps

Fleetbase offers a few open sourced apps which are built on Fleetbase which can be cloned and customized. Every app is built so that the Fleetbase instance can be switched out whether on-premise install or cloud hosted.

<ul>
  <li><a href=""https://github.com/fleetbase/storefront-app"">Storefront App</a>: Fleetbase based ecommerce/on-demand app for launching your very own shop or marketplace to Apple or Android playstore.</li>
  <li><a href=""https://github.com/fleetbase/navigator-app"">Navigator App</a>: Fleetbase based driver app which can be used for drivers to manage and update order, additionally provides real time driver location which can be viewed in the Fleetbase Console.</li>
</ul>

# 🛣 Roadmap

<ol>
  <li>Open Source Extension Repository</li>
  <li>🌎 Internationalize</li>
  <li>Multiple and Custom Routing Engine's in FleetOps</li>
  <li>Identity & Access Management (IAM) Extension</li>
  <li>Inventory and Warehouse Management Extension</li>
  <li>Freight Forwarder Quote Parser/ System Extension</li>
</ol>

# 🪲 Bugs and 💡 Feature Requests

Have a bug or a feature request? Please check the <a href=""https://github.com/fleetbase/fleetbase/issues"">issue tracker</a> and search for existing and closed issues. If your problem or idea is not addressed yet, please <a href=""https://github.com/fleetbase/fleetbase/issues/new"">open a new issue</a>.

# 📚 Documentation

View and contribute to our <a href=""https://github.com/fleetbase/guides"">Fleetbase Guide's</a> and <a href=""https://github.com/fleetbase/api-reference"">API Reference</a>

# 👨‍💻 Contributing

Please read through our <a href=""https://github.com/fleetbase/fleetbase/blob/main/CONTRIBUTING.md"">contributing guidelines</a>. Included are directions for opening issues, coding standards, and notes on development.

# 👥 Community

Get updates on Fleetbase's development and chat with the project maintainers and community members by joining our <a href=""https://discord.gg/V7RVWRQ2Wm"">Discord</a>.

<ul>
  <li>Follow <a href=""https://twitter.com/fleetbase_io"">@fleetbase_io on Twitter</a>.</li>
  <li>Read and subscribe to <a href=""https://www.fleetbase.io/blog-2"">The Official Fleetbase Blog</a>.</li>
  <li>Ask and explore <a href=""https://github.com/orgs/fleetbase/discussions"">our GitHub Discussions</a>.</li>
</ul>
<p dir=""auto"">See the <a href=""https://github.com/fleetbase/fleetbase/releases"">Releases</a> section of our GitHub project for changelogs for each release version of Fleetbase.</p>
<p>Release announcement posts on <a href=""https://www.fleetbase.io/blog-2"" rel=""nofollow"">the official Fleetbase blog</a> contain summaries of the most noteworthy changes made in each release.</p>

# Creators

<p dir=""auto""><strong>Ronald A. Richardson</strong>- Co-founder &amp; CTO</p>
<img src=""https://user-images.githubusercontent.com/58805033/230263021-212f2553-1269-473d-be94-313cb3eecfa5.png"" alt=""Ron Image"" width=""75"" height=""75"" style=""max-width: 100%;"">          
<p><a href=""https://github.com/orgs/fleetbase/people/roncodes"">Github</a> | <a href=""https://www.linkedin.com/in/ronald-a-richardson/"">LinkedIn</a></p>
                   
<p dir=""auto""><strong>Shiv Thakker</strong> - Co-founder &amp; CEO</p>
<img src=""https://user-images.githubusercontent.com/58805033/230262598-1ce6d0cc-fb65-41f9-8384-5cf5cbf369c7.png"" alt=""Shiv Image"" width=""75"" height=""75"" style=""max-width: 100%;"">  
<p><a href=""https://github.com/orgs/fleetbase/people/shivthakker"">Github</a> | <a href=""https://www.linkedin.com/in/shivthakker/"">LinkedIn</a></p>


# License & Copyright

Code and documentation copyright 2018–2023 the <a href=""https://github.com/fleetbase/fleetbase/graphs/contributors"">Fleetbase Authors</a>. Code released under the <a href=""https://github.com/fleetbase/storefront-app/blob/main/LICENSE.md"">MIT License</a>.
",249,249,7,3,warehouse-management,"[driver-app, fleet-management, freight-management, infrastructure, inventory-management, logistics, ondemand, open-source, order-management, route-optimization, supply-chain-management, tracking-and-monitoring, transportation, warehouse-management]",00000
2084,mywms,wms2,N/A,N/A,https://api.github.com/repos/wms2/mywms,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1FF:4776:30BEB2:653039:65224649.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,warehouse-management,"[N, /, A]",00000
2085,picking-route,samirsaci,N/A,N/A,https://api.github.com/repos/samirsaci/picking-route,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C1CA:9CF4:280B2FF:52145D2:652242FD.'}",N/A,N/A,N/A,N/A,warehouse-management,"[N, /, A]",00000
2086,WarehouseControlSystem,OlegLobakov,N/A,N/A,https://api.github.com/repos/OlegLobakov/WarehouseControlSystem,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C155:47EA:26F899F:500F990:65224649.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,warehouse-management,"[N, /, A]",00000
2087,Inventory-Manager,marination,N/A,N/A,https://api.github.com/repos/marination/Inventory-Manager,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1E8:603C:289E45E:533C3BD:65224433.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,warehouse-management,"[N, /, A]",00000
2088,boxtribute,boxwise,N/A,N/A,https://api.github.com/repos/boxwise/boxtribute,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1C5:458F:2CA18B9:5B87D2F:6522464A.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,warehouse-management,"[N, /, A]",00000
2089,inventory-system,weimingwill,N/A,N/A,https://api.github.com/repos/weimingwill/inventory-system,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C16C:1ECC:2F1AF5:61FE7D:65224603.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,warehouse-management,"[N, /, A]",00000
2090,myTinyWMS,myTinyWMS,N/A,N/A,https://api.github.com/repos/myTinyWMS/myTinyWMS,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C187:2772:2928E73:54AC340:6522464A.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,warehouse-management,"[N, /, A]",00000
2091,coverd,happybottoms,N/A,N/A,https://api.github.com/repos/happybottoms/coverd,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1AE:607B:7AC756:FCF18E:6522445C.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,warehouse-management,"[N, /, A]",00000
2092,SaleSystem,MarshalOfficial,N/A,https://github.com/MarshalOfficial/SaleSystem,https://api.github.com/repos/MarshalOfficial/SaleSystem,A Powerful Sale System Backend Built on .Net Standard Library,"# SaleSystem
A Powerful multi-platform Sale System Backend Built on .Net Standard Library & SQL Express
* You can consume this sale system Backend, develop your own UI platform (Web, Desktop and mobile) and enjoy 
* Horizon : Stock and Product Management Module, Purchase and Sale Modules, CRM Module, Coupon and Discount Management, Necessary Reports, web api 

",11,11,1,0,warehouse-management,"[backend, crm, dotnetcore, net-core, netcore, pos, retail, sale, salesystem, warehouse, warehouse-management]",00000
2093,stockmanager,harshitjain-hj,N/A,N/A,https://api.github.com/repos/harshitjain-hj/stockmanager,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C182:4AAE:27976E9:51432CB:652244D9.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,warehouse-management,"[N, /, A]",00000
2094,pareto-warehouse-layout,samirsaci,N/A,https://github.com/samirsaci/pareto-warehouse-layout,https://api.github.com/repos/samirsaci/pareto-warehouse-layout,Reduce Warehouse Space with the Pareto Principle using Python,"## Reduce Warehouse Space with the Pareto Principle using Python 📦
*How the 80/20 rule implemented using python can optimize your layout, reduce space utilization and improve the picking productivity*

An Italian economist named Vilfredo Pareto developed 1906 a mathematical formula to describe the distribution of wealth in Italy. He discovered that 80% of the wealth belonged to 20% of the population.

![Pareto](https://miro.medium.com/max/325/0*f_q2eTFSRsMvk-DZ.jpg)

A few decades later this rule has been generalized to many other applications including Supply Chain and Logistics Management.
This principle called the “Pareto Principle”, “the 80–20 rule” or “The Law of Trivial Many and Critical Few” can be translated for Logistics Practitioners
- 80% of your company revenue is made from 20% of your reference
- 80% of your volume is picked in 20% of your picking locations
- 80% of your replenishment volume will be performed on 20% of your picking locations

### Youtube Video
Find in the link below a short animated explained video to understand the concept behind this solution
<div align=""center"">
  <a href=""https://www.youtube.com/watch?v=BRjhhdWjPc4""><img src=""https://github.com/samirsaci/pareto-warehouse-layout/blob/master/thumbnail.webp"" alt=""Explainer Video Link""></a>
</div>

### Article
In this [Article](https://www.samirsaci.com/reduce-warehouse-space-with-the-pareto-principle-using-python/), we will explore how to apply this Pareto Principle 
to optimize the layout of a Warehouse
- 1 month of picking orders
- 144,339 order lines
- 59,372 orders
- 4,864 active references

![This is an image](https://miro.medium.com/max/581/1*IflUKgeDKIjSiaOkdP1mnw.png)

## Code
This repository code you will find all the code used to explain the concepts tackeld in the article with a dataset of orders.

## About me 🤓
Senior Supply Chain Engineer with an international experience working on Logistics and Transportation operations. \
Have a look at my portfolio: [Data Science for Supply Chain Portfolio](https://samirsaci.com) \
Data Science for Warehousing📦, Transportation 🚚 and Demand Forecasting 📈 
",9,9,1,1,warehouse-management,"[continuous-improvement, logistics, pareto, python, supply-chain, supply-chain-management, warehouse-management]",00000
2095,WMS,WarehouseManagementSystem,N/A,N/A,https://api.github.com/repos/WarehouseManagementSystem/WMS,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C194:840D:2992C6E:5576EC7:6522464B.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,warehouse-management,"[N, /, A]",00000
2096,snowflake-optimization,CR-Digital-Innovation,N/A,N/A,https://api.github.com/repos/CR-Digital-Innovation/snowflake-optimization,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C193:0BEC:2E43E4:60641A:6522464B.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,warehouse-management,"[N, /, A]",00000
2097,Captain-Million,Captain-Million,N/A,N/A,https://api.github.com/repos/Captain-Million/Captain-Million,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C11B:4776:30C149:6535A6:6522464C.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,warehouse-management,"[N, /, A]",00000
2098,SBSPS-Challenge-925-Optimized-warehouse-management-of-perishable-goods-for-a-food-delivery-company,SmartPracticeschool,N/A,N/A,https://api.github.com/repos/SmartPracticeschool/SBSPS-Challenge-925-Optimized-warehouse-management-of-perishable-goods-for-a-food-delivery-company,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C147:6B96:28C10AB:53DECC8:6522464C.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,warehouse-management,"[N, /, A]",00000
2099,workforce-planning,samirsaci,N/A,N/A,https://api.github.com/repos/samirsaci/workforce-planning,N/A,"{'documentation_url': 'https://docs.github.com/en/free-pro-team@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits', 'message': 'You have exceeded a secondary rate limit. Please wait a few minutes before you try again. If you reach out to GitHub Support for help, please include the request ID C118:0C72:72D91A:ED4154:6522432D.'}",N/A,N/A,N/A,N/A,warehouse-management,"[N, /, A]",00000
2100,dropapp,boxwise,N/A,N/A,https://api.github.com/repos/boxwise/dropapp,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C167:11F8:311118:65EBCD:6522464D.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,warehouse-management,"[N, /, A]",00000
2101,openboxes-mobile,openboxes,N/A,N/A,https://api.github.com/repos/openboxes/openboxes-mobile,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C183:9CF4:2849800:52944DF:65224628.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,warehouse-management,"[N, /, A]",00000
2102,LineQueue,shakedlokits,N/A,N/A,https://api.github.com/repos/shakedlokits/LineQueue,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1CF:6B96:28C11E1:53DEF38:6522464D.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,warehouse-management,"[N, /, A]",00000
2103,Warehouse-management,old-school-kid,N/A,N/A,https://api.github.com/repos/old-school-kid/Warehouse-management,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C149:11F8:3111E8:65ED94:6522464E.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,warehouse-management,"[N, /, A]",00000
2104,STOCKBAY-FRONTEND-ADMIN,aniskchaou,N/A,N/A,https://api.github.com/repos/aniskchaou/STOCKBAY-FRONTEND-ADMIN,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1A5:7AEF:2DFA4B7:5E05A92:652244BF.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,warehouse-management,"[N, /, A]",00000
2105,ari-instock,sean35mm,N/A,N/A,https://api.github.com/repos/sean35mm/ari-instock,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C170:7DF2:26EF83F:4FDDACD:65224636.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,warehouse-management,"[N, /, A]",00000
2106,Qt-WMS,seigtm,N/A,N/A,https://api.github.com/repos/seigtm/Qt-WMS,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1CC:33C6:2A5025E:56F48EF:6522464F.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,warehouse-management,"[N, /, A]",00000
2107,Stocked,FiloAle,N/A,N/A,https://api.github.com/repos/FiloAle/Stocked,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C17E:59CA:265BBC6:4EC900E:652244F4.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,warehouse-management,"[N, /, A]",00000
2108,Stocked,FiloAle,N/A,N/A,https://api.github.com/repos/FiloAle/Stocked,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C17E:59CA:265BBC6:4EC900E:652244F4.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,warehouse-management,"[N, /, A]",00000
2109,Serious-Game-for-Kids,LCfP,N/A,N/A,https://api.github.com/repos/LCfP/Serious-Game-for-Kids,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C195:6C98:2FBCA5:6341D3:6522464F.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,warehouse-management,"[N, /, A]",00000
2110,Warehouse-managment-system,bhavyabhut,N/A,N/A,https://api.github.com/repos/bhavyabhut/Warehouse-managment-system,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1A2:18E3:2E0FF3:5FEA3E:65224650.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,warehouse-management,"[N, /, A]",00000
2111,warehouse-management-system,StepanTita,N/A,N/A,https://api.github.com/repos/StepanTita/warehouse-management-system,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1D2:6D2F:32C859:695BA5:65224650.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,warehouse-management,"[N, /, A]",00000
2112,managewARe,namanrajpal,N/A,N/A,https://api.github.com/repos/namanrajpal/managewARe,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C173:1D49:2CAC5F0:5B93167:65224651.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,warehouse-management,"[N, /, A]",00000
2113,Warehouse-management-1,swaraj-jain,N/A,N/A,https://api.github.com/repos/swaraj-jain/Warehouse-management-1,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C125:6829:2EA6620:5F8A8E6:65224651.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,warehouse-management,"[N, /, A]",00000
2114,Depo-Yonetim-Sistemi,zkcplk,N/A,N/A,https://api.github.com/repos/zkcplk/Depo-Yonetim-Sistemi,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C111:68AA:2EEDEE3:601992C:65224652.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,warehouse-management,"[N, /, A]",00000
2115,tsp-time-window,projektdexter,N/A,N/A,https://api.github.com/repos/projektdexter/tsp-time-window,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1E1:46E9:76193B:F3965B:65224355.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,warehouse-management,"[N, /, A]",00000
2116,Warehouse_Automation-ARIAC-2019,RajPShinde,N/A,N/A,https://api.github.com/repos/RajPShinde/Warehouse_Automation-ARIAC-2019,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1B9:0BEC:2E4980:606FEC:65224653.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,warehouse-management,"[N, /, A]",00000
2117,gruper-warehouse,grupertech,N/A,N/A,https://api.github.com/repos/grupertech/gruper-warehouse,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C159:1CC6:2A911D3:575F4EA:65224653.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,warehouse-management,"[N, /, A]",00000
2118,warehouseSimulation,Hindia,N/A,N/A,https://api.github.com/repos/Hindia/warehouseSimulation,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C14D:1CC6:2A9127E:575F65B:65224654.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,warehouse-management,"[N, /, A]",00000
2119,Warehouse-Optimsation,VineetTambe,N/A,N/A,https://api.github.com/repos/VineetTambe/Warehouse-Optimsation,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1F8:11F8:311844:65FAC9:65224654.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,warehouse-management,"[N, /, A]",00000
2120,V_Warehouse_Website,akhmdrdlo,N/A,N/A,https://api.github.com/repos/akhmdrdlo/V_Warehouse_Website,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C129:22D5:2F994ED:6179B77:65224655.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,warehouse-management,"[N, /, A]",00000
2121,Dispo-Client,Dispo-Empresa,N/A,N/A,https://api.github.com/repos/Dispo-Empresa/Dispo-Client,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C13E:24F2:29FCB08:5632EBB:65224656.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,warehouse-management,"[N, /, A]",00000
2122,Dispo-Service,Dispo-Empresa,N/A,N/A,https://api.github.com/repos/Dispo-Empresa/Dispo-Service,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1C3:53F5:2858FF0:52F7340:65224656.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,warehouse-management,"[N, /, A]",00000
2123,listing-service,hamletbarsamyan,N/A,N/A,https://api.github.com/repos/hamletbarsamyan/listing-service,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1AD:17C0:2DB5D0:5F4D68:65224657.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,warehouse-management,"[N, /, A]",00000
2124,amazon-warehouse-simulator,JGAguilar626,N/A,N/A,https://api.github.com/repos/JGAguilar626/amazon-warehouse-simulator,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C17D:05EF:713170:EA14E6:65224562.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,warehouse-management,"[N, /, A]",00000
2125,RecirculatingPalletWarehouse,ivochan,N/A,N/A,https://api.github.com/repos/ivochan/RecirculatingPalletWarehouse,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1F3:6584:288DF38:5364F9C:65224657.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,warehouse-management,"[N, /, A]",00000
2126,Django-shop-manager,Netekss,N/A,N/A,https://api.github.com/repos/Netekss/Django-shop-manager,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C106:5A86:2C04663:5A4D351:65224658.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,warehouse-management,"[N, /, A]",00000
2127,Shipper_and_AWS_hackathon,zakkipuar23,N/A,N/A,https://api.github.com/repos/zakkipuar23/Shipper_and_AWS_hackathon,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C16E:3493:27691D2:5122F4B:65224659.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,warehouse-management,"[N, /, A]",00000
2128,LibreWMS,Curny,N/A,N/A,https://api.github.com/repos/Curny/LibreWMS,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C19C:2EE5:28B112F:53B869D:65224659.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,warehouse-management,"[N, /, A]",00000
2129,Warehouse-Automater-With-Blazor,NoahJohansson,N/A,N/A,https://api.github.com/repos/NoahJohansson/Warehouse-Automater-With-Blazor,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C19A:0BEC:2E4F9B:607C83:6522465A.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,warehouse-management,"[N, /, A]",00000
2130,Warehouse_Simulator,Myoxsis,N/A,N/A,https://api.github.com/repos/Myoxsis/Warehouse_Simulator,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C148:1ECC:2F739C:62B5C7:6522465A.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,warehouse-management,"[N, /, A]",00000
2131,point-of-sale,MuhammadSalmanSiddiqui,N/A,N/A,https://api.github.com/repos/MuhammadSalmanSiddiqui/point-of-sale,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1CA:17C0:2DB9EA:5F55FC:6522465B.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,warehouse-management,"[N, /, A]",00000
2132,baza,ironiron,N/A,N/A,https://api.github.com/repos/ironiron/baza,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1C7:4C24:2BCF031:59E2AC9:6522465C.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,warehouse-management,"[N, /, A]",00000
2133,task-pwi,alialfred,N/A,N/A,https://api.github.com/repos/alialfred/task-pwi,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1F5:5A86:2C04C1A:5A4DEFE:6522465C.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,warehouse-management,"[N, /, A]",00000
2134,org.openwms.wms.movements.lib,openwms,N/A,N/A,https://api.github.com/repos/openwms/org.openwms.wms.movements.lib,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C130:3B38:32AE51:68FF73:6522465D.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,warehouse-management,"[N, /, A]",00000
2135,vue2-listing-admin,hamletbarsamyan,N/A,N/A,https://api.github.com/repos/hamletbarsamyan/vue2-listing-admin,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C136:4771:2F8790:62C0B9:6522465D.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,warehouse-management,"[N, /, A]",00000
2136,PJWSTK_JAVA,Shaquu,N/A,N/A,https://api.github.com/repos/Shaquu/PJWSTK_JAVA,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C133:11F8:3121F3:660EB5:6522465E.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,warehouse-management,"[N, /, A]",00000
2137,stock_management,sempedia,N/A,N/A,https://api.github.com/repos/sempedia/stock_management,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1E4:3493:275845C:5100197:65224540.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,warehouse-management,"[N, /, A]",00000
2138,warehouse-lightning,anggadarkprince,N/A,N/A,https://api.github.com/repos/anggadarkprince/warehouse-lightning,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C105:4771:2E51E5:604367:65224545.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,warehouse-management,"[N, /, A]",00000
2139,warehouse-system,abbasbanani94,N/A,N/A,https://api.github.com/repos/abbasbanani94/warehouse-system,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1B3:643D:2A82B0C:572F682:6522465F.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,warehouse-management,"[N, /, A]",00000
2140,warehouse-management-system,projektdexter,N/A,N/A,https://api.github.com/repos/projektdexter/warehouse-management-system,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1EA:500E:2AB337E:57A3F20:6522465F.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,warehouse-management,"[N, /, A]",00000
2141,warehouse-management-client-side,sajolbhadra,N/A,N/A,https://api.github.com/repos/sajolbhadra/warehouse-management-client-side,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C178:2EE5:28B1980:53B9785:65224660.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,warehouse-management,"[N, /, A]",00000
2142,SIH_2020,shivangraina,N/A,https://github.com/shivangraina/SIH_2020,https://api.github.com/repos/shivangraina/SIH_2020,"It is a mobile application platform which provides custodial services such as warehousing and logistics assistance,while assessing warehouses based upon the needs of the farmers.","# Smart Management Of Food Storage And Waste Reduction

1. npm install

![alt text](https://github.com/iSIH-2020/SIH20/blob/master/Screenshots/FarmerHome.jpeg) <br />
<br />
![alt text](https://github.com/iSIH-2020/SIH20/blob/master/Screenshots/FarmerRequest.jpeg) <br />
<br />
![alt text](https://github.com/iSIH-2020/SIH20/blob/master/Screenshots/FarmerWarehouse.jpeg) <br />
<br />



",0,0,1,19,warehouse-management,"[android-app, farming, warehouse-management]",00000
2143,Warehouse-Managment,VegardMytting,N/A,N/A,https://api.github.com/repos/VegardMytting/Warehouse-Managment,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C19A:0BEC:2E5561:60889A:65224660.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,warehouse-management,"[N, /, A]",00000
2144,Sistema-de-almacen,angelroma,N/A,N/A,https://api.github.com/repos/angelroma/Sistema-de-almacen,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C126:1ECC:2F7AC8:62C498:65224661.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,warehouse-management,"[N, /, A]",00000
2145,Warehouse_Logistics_Planning,MatteoCarlone,N/A,N/A,https://api.github.com/repos/MatteoCarlone/Warehouse_Logistics_Planning,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C16E:3493:2769B25:5124291:65224662.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,warehouse-management,"[N, /, A]",00000
2146,IRDrone_Project,ShreyaS63,N/A,N/A,https://api.github.com/repos/ShreyaS63/IRDrone_Project,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C13D:2EE5:28B1C22:53B9D0B:65224662.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,warehouse-management,"[N, /, A]",00000
2147,WarePatch,ART3CHAutomation,N/A,N/A,https://api.github.com/repos/ART3CHAutomation/WarePatch,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C11B:1299:A250A8:14F5294:65224663.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,warehouse-management,"[N, /, A]",00000
2148,feup-WarehouseOptimization,diogovalentepcs,N/A,N/A,https://api.github.com/repos/diogovalentepcs/feup-WarehouseOptimization,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C16C:16F7:26BFFD3:4F854A5:652243D9.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,warehouse-management,"[N, /, A]",00000
2149,org.openwms.wms.movements,openwms,N/A,N/A,https://api.github.com/repos/openwms/org.openwms.wms.movements,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C16B:784E:799C2A:FB1564:65224663.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,warehouse-management,"[N, /, A]",00000
2150,OSPLGmSys,OshnicITSolutions,N/A,N/A,https://api.github.com/repos/OshnicITSolutions/OSPLGmSys,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1DD:1F34:1BE3446:3951A6A:65224664.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,warehouse-management,"[N, /, A]",00000
2151,Database,jubcow,N/A,N/A,https://api.github.com/repos/jubcow/Database,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1A1:4179:2E30ECC:5E88B7D:65224664.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,warehouse-management,"[N, /, A]",00000
2152,RSMS,andidroid2000,N/A,N/A,https://api.github.com/repos/andidroid2000/RSMS,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C133:5F41:7323A2:EE0EA3:65224665.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,warehouse-management,"[N, /, A]",00000
2153,warehouse,nt4rever,N/A,N/A,https://api.github.com/repos/nt4rever/warehouse,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1CF:1F34:1BE361B:3951E1C:65224666.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,warehouse-management,"[N, /, A]",00000
2154,apionic,tayomadein,N/A,N/A,https://api.github.com/repos/tayomadein/apionic,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1F3:5F41:7324EF:EE113D:65224666.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,warehouse-management,"[N, /, A]",00000
2155,Supply-Chain-and-Transportation-Fix,fmckenzie05,N/A,N/A,https://api.github.com/repos/fmckenzie05/Supply-Chain-and-Transportation-Fix,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C117:646E:271358E:502F25D:652243DE.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,warehouse-management,"[N, /, A]",00000
2156,react-storage,FeatheredSnek,N/A,N/A,https://api.github.com/repos/FeatheredSnek/react-storage,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C18B:4D66:702A45:E82AA7:65224667.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,warehouse-management,"[N, /, A]",00000
2157,Cyclic_counting_ABC,claudito1991,N/A,N/A,https://api.github.com/repos/claudito1991/Cyclic_counting_ABC,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1BA:36DF:35B811A:6D86661:65224667.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,warehouse-management,"[N, /, A]",00000
2158,ionic-app-warehouse-baz-bonny,BazssSoftware,N/A,N/A,https://api.github.com/repos/BazssSoftware/ionic-app-warehouse-baz-bonny,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1C8:1364:7A783D:FC9BFB:65224668.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,warehouse-management,"[N, /, A]",00000
2159,velhowm,JoseUusitalo,N/A,N/A,https://api.github.com/repos/JoseUusitalo/velhowm,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C15A:5934:28A47F5:539289D:65224668.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,warehouse-management,"[N, /, A]",00000
2160,WMS,kashvira-softwares,N/A,N/A,https://api.github.com/repos/kashvira-softwares/WMS,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C15F:784E:79A219:FB21AA:65224669.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,warehouse-management,"[N, /, A]",00000
2161,LeanManager,Vrezerino,N/A,N/A,https://api.github.com/repos/Vrezerino/LeanManager,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C184:05EF:725272:EC67F5:6522466A.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,warehouse-management,"[N, /, A]",00000
2162,AddressingPOC,okutbay,N/A,N/A,https://api.github.com/repos/okutbay/AddressingPOC,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C10C:64D2:76D686:F54934:6522466A.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,warehouse-management,"[N, /, A]",00000
2163,track-SU,boingboomtschak,N/A,N/A,https://api.github.com/repos/boingboomtschak/track-SU,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1C8:1364:7A7B45:FCA231:6522466B.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,warehouse-management,"[N, /, A]",00000
2164,Warehouse-Management-System-E-commerce-,prajwalhaniya,N/A,N/A,https://api.github.com/repos/prajwalhaniya/Warehouse-Management-System-E-commerce-,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1D4:8AF9:74B809:F14B19:6522466B.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,warehouse-management,"[N, /, A]",00000
2165,Warehouse-management-server,kazi331,N/A,N/A,https://api.github.com/repos/kazi331/Warehouse-management-server,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C17B:29CE:334A535:68ADAE5:6522466C.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,warehouse-management,"[N, /, A]",00000
2166,SKUGen,aledipa,N/A,N/A,https://api.github.com/repos/aledipa/SKUGen,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C12D:7B5B:76F9E3:F555B3:6522466D.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,warehouse-management,"[N, /, A]",00000
2167,Warehouse-Management-Project,szirocica,N/A,N/A,https://api.github.com/repos/szirocica/Warehouse-Management-Project,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C105:092A:745335:F07499:6522466D.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,warehouse-management,"[N, /, A]",00000
2168,dlsdwh,mhotzel,N/A,N/A,https://api.github.com/repos/mhotzel/dlsdwh,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C10E:1E3B:3014B67:623E8BF:6522466E.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,warehouse-management,"[N, /, A]",00000
2169,shopify_anchanto_integration,theUnrelated,N/A,N/A,https://api.github.com/repos/theUnrelated/shopify_anchanto_integration,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C12C:5AB9:2C8FBA7:5B4A771:6522466E.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,warehouse-management,"[N, /, A]",00000
2170,Sklad,DedulkoN,N/A,N/A,https://api.github.com/repos/DedulkoN/Sklad,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C138:0C3C:792D36:FA0DB8:6522466F.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,warehouse-management,"[N, /, A]",00000
2171,warehouse-app,sskender,N/A,N/A,https://api.github.com/repos/sskender/warehouse-app,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1D6:984A:7A0C17:FBB8CA:6522466F.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,warehouse-management,"[N, /, A]",00000
2172,vardion_scan,novanxyz,N/A,N/A,https://api.github.com/repos/novanxyz/vardion_scan,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C182:1F34:1BE4179:395357E:65224670.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,warehouse-management,"[N, /, A]",00000
2173,wms-lb4-poc-api,masalinas,N/A,N/A,https://api.github.com/repos/masalinas/wms-lb4-poc-api,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1B1:0C3C:792EF4:FA1149:65224671.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,warehouse-management,"[N, /, A]",00000
2174,e-yantra-documentation,bkpcoding,N/A,N/A,https://api.github.com/repos/bkpcoding/e-yantra-documentation,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C145:7B5B:76FE5F:F55EE7:65224671.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,warehouse-management,"[N, /, A]",00000
2175,warehouse-management,cauchi94,N/A,N/A,https://api.github.com/repos/cauchi94/warehouse-management,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1F4:5AB9:2C8FF1C:5B4AE8C:65224672.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,warehouse-management,"[N, /, A]",00000
2176,GreaterWMS,GreaterWMS,N/A,N/A,https://api.github.com/repos/GreaterWMS/GreaterWMS,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C15D:0A36:2622ED2:4E57984:652243EA.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,warehouse-management-system,"[N, /, A]",00000
2177,openship,openshiporg,N/A,N/A,https://api.github.com/repos/openshiporg/openship,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1C0:2319:6D462E:E24A33:65224672.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,warehouse-management-system,"[N, /, A]",00000
2178,ModernWMS,fjykTec,N/A,N/A,https://api.github.com/repos/fjykTec/ModernWMS,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1DD:04F2:273A0DA:507ACA2:652243EF.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,warehouse-management-system,"[N, /, A]",00000
2179,warehouse-framework,mvdnbrk,N/A,N/A,https://api.github.com/repos/mvdnbrk/warehouse-framework,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C119:2CBC:7BA106:FECDB5:65224673.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,warehouse-management-system,"[N, /, A]",00000
2180,WarehouseControlSystem,OlegLobakov,N/A,N/A,https://api.github.com/repos/OlegLobakov/WarehouseControlSystem,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1F7:8AB4:2A081F6:564EE0B:65224649.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,warehouse-management-system,"[N, /, A]",00000
2181,myTinyWMS,myTinyWMS,N/A,N/A,https://api.github.com/repos/myTinyWMS/myTinyWMS,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C187:2772:2928E73:54AC340:6522464A.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,warehouse-management-system,"[N, /, A]",00000
2182,MT-WMS,shuxiang,N/A,N/A,https://api.github.com/repos/shuxiang/MT-WMS,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C175:178A:2CE6217:5BEC479:65224673.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,warehouse-management-system,"[N, /, A]",00000
2183,wms,tangyan85,N/A,N/A,https://api.github.com/repos/tangyan85/wms,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1AE:607B:7D22EA:101CA88:65224674.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,warehouse-management-system,"[N, /, A]",00000
2184,AAGS-Warehouse-Management-System,akshatvg,N/A,N/A,https://api.github.com/repos/akshatvg/AAGS-Warehouse-Management-System,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1E4:4179:2E31E2B:5E8AB45:65224675.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,warehouse-management-system,"[N, /, A]",00000
2185,Reinforcement-Learning-for-Supply-Chain-Management,yudhisteer,N/A,N/A,https://api.github.com/repos/yudhisteer/Reinforcement-Learning-for-Supply-Chain-Management,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1B0:6611:7140B5:EA4CC4:65224675.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,warehouse-management-system,"[N, /, A]",00000
2186,stokwarehouse,aethershin,N/A,N/A,https://api.github.com/repos/aethershin/stokwarehouse,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1E1:46E9:797DE8:FA93E8:65224676.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,warehouse-management-system,"[N, /, A]",00000
2187,Warehouse-Management-System,AkashKV-1998,N/A,N/A,https://api.github.com/repos/AkashKV-1998/Warehouse-Management-System,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C10E:1E3B:30155B7:623FDF0:65224676.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,warehouse-management-system,"[N, /, A]",00000
2188,WMS,WarehouseManagementSystem,N/A,N/A,https://api.github.com/repos/WarehouseManagementSystem/WMS,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1AD:17C0:2DABBF:5F386A:6522464B.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,warehouse-management-system,"[N, /, A]",00000
2189,Warehouse-optimization,anafisa,N/A,N/A,https://api.github.com/repos/anafisa/Warehouse-optimization,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C12B:984A:7A14E4:FBCB03:65224677.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,warehouse-management-system,"[N, /, A]",00000
2190,MT-WMS-Front,shuxiang,N/A,N/A,https://api.github.com/repos/shuxiang/MT-WMS-Front,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C164:178A:2CE668F:5BECD91:65224677.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,warehouse-management-system,"[N, /, A]",00000
2191,Elmouna4.0,seifoueslati,N/A,N/A,https://api.github.com/repos/seifoueslati/Elmouna4.0,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1AE:607B:7D273F:101D360:65224678.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,warehouse-management-system,"[N, /, A]",00000
2192,WMS,ChamroeunUON,N/A,N/A,https://api.github.com/repos/ChamroeunUON/WMS,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1C3:5831:2BFB718:5A22A87:65224679.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,warehouse-management-system,"[N, /, A]",00000
2193,management-system,pavo-company,N/A,N/A,https://api.github.com/repos/pavo-company/management-system,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1D6:984A:7A187B:FBD24C:65224679.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,warehouse-management-system,"[N, /, A]",00000
2194,microwms,mlplabs,N/A,N/A,https://api.github.com/repos/mlplabs/microwms,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C187:984A:7A1855:FBD1FC:65224679.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,warehouse-management-system,"[N, /, A]",00000
2195,simple-wms,kouzapo,N/A,N/A,https://api.github.com/repos/kouzapo/simple-wms,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1AD:36DF:35B9A1B:6D89998:6522467A.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,warehouse-management-system,"[N, /, A]",00000
2196,EpesiWarehouse,jtylek,N/A,N/A,https://api.github.com/repos/jtylek/EpesiWarehouse,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1B7:4179:2E32363:5E8B610:6522467A.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,warehouse-management-system,"[N, /, A]",00000
2197,Warehouse-managment-system,bhavyabhut,N/A,N/A,https://api.github.com/repos/bhavyabhut/Warehouse-managment-system,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1A2:18E3:2E0FF3:5FEA3E:65224650.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,warehouse-management-system,"[N, /, A]",00000
2198,Qt-WMS,seigtm,N/A,N/A,https://api.github.com/repos/seigtm/Qt-WMS,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C175:505E:31FAE3:6792F1:6522464F.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,warehouse-management-system,"[N, /, A]",00000
2199,Hive_backend,OmarBazaraa,N/A,N/A,https://api.github.com/repos/OmarBazaraa/Hive_backend,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C178:178A:2CE6A3A:5BED553:6522467B.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,warehouse-management-system,"[N, /, A]",00000
2200,warehouse-producer-consumer,codestrange,N/A,N/A,https://api.github.com/repos/codestrange/warehouse-producer-consumer,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C16A:58D0:7B3241:FD9285:6522467C.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,warehouse-management-system,"[N, /, A]",00000
2201,ghala-android,Ultra-Techies,N/A,N/A,https://api.github.com/repos/Ultra-Techies/ghala-android,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C151:1F34:1BE4EFF:3955153:6522467C.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,warehouse-management-system,"[N, /, A]",00000
2202,V_Warehouse_Website,akhmdrdlo,N/A,N/A,https://api.github.com/repos/akhmdrdlo/V_Warehouse_Website,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C13B:17C0:2DB42E:5F4A0D:65224655.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,warehouse-management-system,"[N, /, A]",00000
2203,WarehouseAutomation,Halilibrahimunluu,N/A,N/A,https://api.github.com/repos/Halilibrahimunluu/WarehouseAutomation,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1BA:36DF:35B9DF7:6D8A188:6522467D.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,warehouse-management-system,"[N, /, A]",00000
2204,Secure-Warehouse-System,Elsayed-Aner,N/A,N/A,https://api.github.com/repos/Elsayed-Aner/Secure-Warehouse-System,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1E2:5A27:75AF37:F317D4:6522467D.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,warehouse-management-system,"[N, /, A]",00000
2205,BodegApp,jonhurono,N/A,N/A,https://api.github.com/repos/jonhurono/BodegApp,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C10B:0E7B:1A73819:367C604:6522467E.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,warehouse-management-system,"[N, /, A]",00000
2206,MAIG-WAREHOUSE,Man1exter,N/A,N/A,https://api.github.com/repos/Man1exter/MAIG-WAREHOUSE,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C127:784E:79B549:FB496C:6522467E.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,warehouse-management-system,"[N, /, A]",00000
2207,AutomationLabsDepot.jl,AutomationLabs-sh,N/A,N/A,https://api.github.com/repos/AutomationLabs-sh/AutomationLabsDepot.jl,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C11D:7B5B:770D28:F57D5B:6522467F.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,warehouse-management-system,"[N, /, A]",00000
2208,wpt,AleksandrRiabov,N/A,N/A,https://api.github.com/repos/AleksandrRiabov/wpt,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C119:2CBC:7BAE4D:FEE928:65224680.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,warehouse-management-system,"[N, /, A]",00000
2209,Dispo-Client,Dispo-Empresa,N/A,N/A,https://api.github.com/repos/Dispo-Empresa/Dispo-Client,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C183:1CC6:2A914EB:575FB39:65224656.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,warehouse-management-system,"[N, /, A]",00000
2210,Dispo-Service,Dispo-Empresa,N/A,N/A,https://api.github.com/repos/Dispo-Empresa/Dispo-Service,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C18D:7D6D:2EC8AC:616A15:65224656.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,warehouse-management-system,"[N, /, A]",00000
2211,warehouse-management-server-side,sajolbhadra,N/A,N/A,https://api.github.com/repos/sajolbhadra/warehouse-management-server-side,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C132:7B5B:770E4E:F57FE0:65224680.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,warehouse-management-system,"[N, /, A]",00000
2212,amazon-warehouse-simulator,JGAguilar626,N/A,N/A,https://api.github.com/repos/JGAguilar626/amazon-warehouse-simulator,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C17D:05EF:713170:EA14E6:65224562.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,warehouse-management-system,"[N, /, A]",00000
2213,wms-client,loekalin,N/A,N/A,https://api.github.com/repos/loekalin/wms-client,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C13D:1364:7A93F8:FCD505:65224681.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,warehouse-management-system,"[N, /, A]",00000
2214,Sparkify-Cloud-Data-Warehouse-with-AWS-Cloud-Redshift,mmosad19419,N/A,N/A,https://api.github.com/repos/mmosad19419/Sparkify-Cloud-Data-Warehouse-with-AWS-Cloud-Redshift,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C10B:0E7B:1A73B7F:367CCFC:65224681.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,warehouse-management-system,"[N, /, A]",00000
2215,inventory_manager,Gabriel-Reyes,N/A,N/A,https://api.github.com/repos/Gabriel-Reyes/inventory_manager,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C191:7B5B:76FB7F:F558F7:6522466E.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,warehouse-management-system,"[N, /, A]",00000
2216,rabbitLogisticsWarehouse,whitedodo,N/A,N/A,https://api.github.com/repos/whitedodo/rabbitLogisticsWarehouse,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1D4:8AF9:74D166:F17F56:65224682.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,warehouse-management-system,"[N, /, A]",00000
2217,DragonFly,harithzainudin,N/A,N/A,https://api.github.com/repos/harithzainudin/DragonFly,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C19F:3BF5:77E3AD:F746EA:65224682.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,warehouse-management-system,"[N, /, A]",00000
2218,WarehouseManagementSystem,icanerdogan,N/A,N/A,https://api.github.com/repos/icanerdogan/WarehouseManagementSystem,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C171:05EF:7269DC:EC983A:65224681.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,warehouse-management-system,"[N, /, A]",00000
2219,Pallet_Optimization_using_Gurobi-Python,prs98,N/A,N/A,https://api.github.com/repos/prs98/Pallet_Optimization_using_Gurobi-Python,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C10E:1E3B:3016244:62417BF:65224682.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,warehouse-management-system,"[N, /, A]",00000
2220,WareIT,luthfisauqi17,N/A,N/A,https://api.github.com/repos/luthfisauqi17/WareIT,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C13C:0C3C:794091:FA358A:65224683.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,warehouse-management-system,"[N, /, A]",00000
2221,stock_management,sempedia,N/A,N/A,https://api.github.com/repos/sempedia/stock_management,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1E4:3493:275845C:5100197:65224540.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,warehouse-management-system,"[N, /, A]",00000
2222,Warehouse-Management-System,Prasham2181,N/A,N/A,https://api.github.com/repos/Prasham2181/Warehouse-Management-System,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C146:6A74:1A71C8E:3677AF8:65224683.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,warehouse-management-system,"[N, /, A]",00000
2223,SIH20,iSIH-2020,N/A,N/A,https://api.github.com/repos/iSIH-2020/SIH20,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C167:64D2:76F123:F57FF5:65224684.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,warehouse-management-system,"[N, /, A]",00000
2224,Stock-Management-System,ferdousanam,N/A,N/A,https://api.github.com/repos/ferdousanam/Stock-Management-System,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1BB:7AEF:2E1CB41:5E4C411:65224684.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,warehouse-management-system,"[N, /, A]",00000
2225,laravel-waresoft,akuladouglas,N/A,N/A,https://api.github.com/repos/akuladouglas/laravel-waresoft,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C106:3F63:2ECD387:5FC0253:65224685.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,warehouse-management-system,"[N, /, A]",00000
2226,warehouse-management-client-side,sajolbhadra,N/A,N/A,https://api.github.com/repos/sajolbhadra/warehouse-management-client-side,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C14A:17C0:2DBE99:5F5FA2:65224660.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,warehouse-management-system,"[N, /, A]",00000
2227,zone-10,Zigzaggg,N/A,N/A,https://api.github.com/repos/Zigzaggg/zone-10,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C195:0C72:763C10:F44158:65224685.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,warehouse-management-system,"[N, /, A]",00000
2228,Logistic-Management-System,mshadlou,N/A,N/A,https://api.github.com/repos/mshadlou/Logistic-Management-System,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C10E:1E3B:3016680:6242076:65224686.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,warehouse-management-system,"[N, /, A]",00000
2229,Warehouse-Integration,pythpal20,N/A,N/A,https://api.github.com/repos/pythpal20/Warehouse-Integration,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1A5:7AEF:2E1CDC7:5E4C93C:65224687.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,warehouse-management-system,"[N, /, A]",00000
2230,Warehouse-Managment,VegardMytting,N/A,N/A,https://api.github.com/repos/VegardMytting/Warehouse-Managment,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C174:6B96:28C294D:53E1F4A:65224660.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,warehouse-management-system,"[N, /, A]",00000
2231,FutureStock,kpavleka,N/A,N/A,https://api.github.com/repos/kpavleka/FutureStock,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C179:1299:A2741D:14F9BD2:65224687.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,warehouse-management-system,"[N, /, A]",00000
2232,WarehouseManagementSystem,rhinock,N/A,N/A,https://api.github.com/repos/rhinock/WarehouseManagementSystem,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1DA:178A:2CE7840:5BEF232:65224688.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,warehouse-management-system,"[N, /, A]",00000
2233,WMS,kashvira-softwares,N/A,N/A,https://api.github.com/repos/kashvira-softwares/WMS,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1B0:6611:7134E7:EA347A:65224669.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,warehouse-management-system,"[N, /, A]",00000
2234,LevoSonusII,RClement5700,N/A,N/A,https://api.github.com/repos/RClement5700/LevoSonusII,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C172:2319:6D5F06:E27D52:65224688.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,warehouse-management-system,"[N, /, A]",00000
2235,Warehouse-Management-System-E-commerce-,prajwalhaniya,N/A,N/A,https://api.github.com/repos/prajwalhaniya/Warehouse-Management-System-E-commerce-,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1D4:8AF9:74B809:F14B19:6522466B.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,warehouse-management-system,"[N, /, A]",00000
2236,Car--wearhouse,asadsuzan,N/A,N/A,https://api.github.com/repos/asadsuzan/Car--wearhouse,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C167:64D2:76F6B6:F58B8E:65224689.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,warehouse-management-system,"[N, /, A]",00000
2237,SKUGen,aledipa,N/A,N/A,https://api.github.com/repos/aledipa/SKUGen,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C12D:7B5B:76F9E3:F555B3:6522466D.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,warehouse-management-system,"[N, /, A]",00000
2238,Warehouse-Management-Project,szirocica,N/A,N/A,https://api.github.com/repos/szirocica/Warehouse-Management-Project,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C105:092A:745335:F07499:6522466D.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,warehouse-management-system,"[N, /, A]",00000
2239,FavoritWeb_PengadaanBarang,haniefm12,N/A,N/A,https://api.github.com/repos/haniefm12/FavoritWeb_PengadaanBarang,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C122:5934:28A6B78:53971BE:6522468A.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,warehouse-management-system,"[N, /, A]",00000
2240,Warehouse,Koxpit,N/A,N/A,https://api.github.com/repos/Koxpit/Warehouse,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C168:6611:7154D3:EA7659:6522468A.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,warehouse-management-system,"[N, /, A]",00000
2241,AddressingPOC,okutbay,N/A,N/A,https://api.github.com/repos/okutbay/AddressingPOC,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C10C:64D2:76D686:F54934:6522466A.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,warehouse-management-system,"[N, /, A]",00000
2242,Car-Warehouse,MostafaMGomaa,N/A,N/A,https://api.github.com/repos/MostafaMGomaa/Car-Warehouse,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C117:7B5B:771B34:F59A4B:6522468B.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,warehouse-management-system,"[N, /, A]",00000
2243,OpenIntranet,UniversalScientificTechnologies,N/A,N/A,https://api.github.com/repos/UniversalScientificTechnologies/OpenIntranet,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1F8:5934:28A6D1A:5397513:6522468B.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,warehouse-management-system,"[N, /, A]",00000
2244,product_inventory,CarneyCreations,N/A,N/A,https://api.github.com/repos/CarneyCreations/product_inventory,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1B0:6611:715478:EA759F:6522468A.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,warehouse-management-system,"[N, /, A]",00000
2245,ElectroWMS,liginthomasck,N/A,N/A,https://api.github.com/repos/liginthomasck/ElectroWMS,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1C5:2CBC:7BB97B:FF0021:6522468A.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,warehouse-management-system,"[N, /, A]",00000
2246,GestorMovimientosBodegaElectroMenorParis,lextrack,N/A,N/A,https://api.github.com/repos/lextrack/GestorMovimientosBodegaElectroMenorParis,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C158:4F4C:7685DC:F495E2:6522468B.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,warehouse-management-system,"[N, /, A]",00000
2247,Warehouse_Management_System,ShreyansPatell,N/A,N/A,https://api.github.com/repos/ShreyansPatell/Warehouse_Management_System,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C105:092A:746DEE:F0ABE0:6522468C.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,warehouse-management-system,"[N, /, A]",00000
2248,rackbeat-tools,mikkelrask,N/A,N/A,https://api.github.com/repos/mikkelrask/rackbeat-tools,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1FF:29CE:334CAB2:68B27FB:6522468C.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,warehouse-management-system,"[N, /, A]",00000
2249,threeface-wms,Ehab-24,N/A,N/A,https://api.github.com/repos/Ehab-24/threeface-wms,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C152:1F34:1BE6130:3957655:6522468D.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,warehouse-management-system,"[N, /, A]",00000
2250,WMS_Laravel_Backend,Abdullah-AlKabbani,N/A,N/A,https://api.github.com/repos/Abdullah-AlKabbani/WMS_Laravel_Backend,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C10E:1E3B:3016F43:624329A:6522468D.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,warehouse-management-system,"[N, /, A]",00000
2251,Warehouse-Management-System-E-commerce-,prajwalhaniya,N/A,N/A,https://api.github.com/repos/prajwalhaniya/Warehouse-Management-System-E-commerce-,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1D4:8AF9:74B809:F14B19:6522466B.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,warehouse-management-system,"[N, /, A]",00000
2252,warehouse-managment,yazanalhjaj,N/A,N/A,https://api.github.com/repos/yazanalhjaj/warehouse-managment,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C1BC:5F41:734EDD:EE67BD:6522468E.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,warehouse-management-system,"[N, /, A]",00000
2253,car-wearhouse-server,asadsuzan,N/A,N/A,https://api.github.com/repos/asadsuzan/car-wearhouse-server,N/A,"{'message': 'API rate limit exceeded for user ID 119282372. If you reach out to GitHub Support for help, please include the request ID C10C:64D2:76FD57:F59920:6522468E.', 'documentation_url': 'https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting'}",N/A,N/A,N/A,N/A,warehouse-management-system,"[N, /, A]",00000
